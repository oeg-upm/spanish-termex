{
    "id": "C-29",
    "original_text": "Implementation and Performance Evaluation of CONFLEX-G: Grid-enabled Molecular Conformational Space Search Program with OmniRPC Yoshihiro Nakajima Graduate School of Systems & Information Engineering, University of Tsukuba Tsukuba, 305-8577, Japan yoshihiro@hpcs.is.tsukuba.ac.jp Mitsuhisa Sato Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan msato@is.tsukuba.ac.jp Hitoshi Goto Knowledge-based Information Engineering, Toyohashi University of Technology Toyohashi, 441-8580, Japan gotoh@cochem2.tutkie.tut.ac.jp Taisuke Boku, Daisuke Takahashi Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan {taisuke,daisuke}@hpcs.is.tsukuba.ac.jp ABSTRACT CONFLEX-G is the grid-enabled version of a molecular conformational space search program called CONFLEX. We have implemented CONFLEX-G using a grid RPC system called OmniRPC. In this paper, we report the performance of CONFLEX-G in a grid testbed of several geographically distributed PC clusters. In order to explore many conformation of large bio-molecules, CONFLEX-G generates trial structures of the molecules and allocates jobs to optimize a trial structure with a reliable molecular mechanics method in the grid. OmniRPC provides a restricted persistence model to support the parametric search applications. In this model, when the initialization procedure is defined in the RPC module, the module is automatically initialized at the time of invocation by calling the initialization procedure. This can eliminate unnecessary communication and initialization at each call in CONFLEX-G. CONFLEXG can achieve performance comparable to CONFLEX MPI and can exploit more computing resources by allowing the use of a cluster of multiple clusters in the grid. The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times in the case of the 1BL1 molecule, where the molecule consists of a large number of atoms, and each trial structure optimization requires significant time. The load imbalance of the optimization time of the trial structure may also cause performance degradation. Categories and Subject Descriptors C.2.4 [Computer Systems Organization]: COMPUTERCOMMUNICATION NETWORK-Distributed Systems; J.2.4 [Computer Applications]: PHYSICAL SCIENCES AND ENGINEERING General Terms Design,Performance 1. INTRODUCTION Elucidation of the stable conformations and the folding process of proteins is one of the most fundamental and challenging goals in life science. While some of the most common secondary structures (e.g., certain types of helix, the beta-strand, and the coil) are well known, precise analysis of the thousands of chemically important conformers and pico-second-order analysis of their conformational interconversions via the transition states on the potential energy surface are required for the microsecond-order investigation of the folding process toward the tertiary structure formations. Recently, the concept of the computational grid has begun to attract significant interest in the field of high-performance network computing. Rapid advances in wide-area networking technology and infrastructure have made it possible to construct large-scale, high-performance distributed computing environments, or computational grids, that provide dependable, consistent and pervasive access to enormous computational resources. CONFLEX is one of the most efficient and reliable conformational space search programs[1]. We have applied this 154 program to parallelization using global computing. The performance of the parallelized CONFLEX enables exploration of the lower-energy region of the conformational space of small peptides within an available elapsed time using a local PC cluster. Since trial structure optimization in CONFLEX is calculated via molecular mechanics, conformational space search can be performed quickly compared to that using molecular orbital calculation. Although the parallelized version of CONFLEX was used to calculate in parallel the structure optimization, which takes up over 90% of the processing in the molecular conformation search, sufficient improvement in the speedup could not be achieved by this method alone. Therefore, for high polymers from live organisms, such as HIV protease, the use one PC cluster is insufficient due to the requirement for optimization of a huge number of trial structures. This requires the vast computer resources of a grid computing environment. In this paper, we describe CONFLEX-G, a grid-enabled molecular conformational search program, using OmniRPC and report its performance in a grid of several PC clusters which are geographically distributed. The prototype CONFLEX-G allocates calculation trial structures optimization, which is a very time-consuming task, to worker nodes in the grid environment in order to obtain high throughput. In addition, we compare the performance of CONFLEX-G in a local PC cluster to that in a grid testbed. OmniRPC[2, 3, 4] is a thread-safe implementation of Ninf RPC[5, 6] which is a Grid RPC facility for grid environment computing. Several systems adopt the concept of the RPC as the basic model for grid environment computing, including Ninf-G[7], NetSolve[8] and CORBA[9]. The RPCstyle system provides an easy-to-use, intuitive programming interface, allowing users of the grid system to easily create grid-enabled applications. In order to support parallel programming, an RPC client can issue asynchronous call requests to a different remote computer to exploit networkwide parallelism via OmniRPC. In this paper, we propose the OmniRPC persistence model to a Grid RPC system and demonstrate its effectiveness. In order to support a typical application for a grid environment, such as a parametric search application, in which the same function is executed with different input parameters on the same data set. In the current GridRPC system[10], the data set by the previous call cannot be used by subsequent calls. In the OmniRPC system, once a remote executable is invoked, the client attempts to use the invoked remote executable and its initialized state for subsequent RPC calls to the same remote functions in order to eliminate the invocation cost of each call. This paper demonstrates that CONFLEX-G is able to exploit the huge computer resources of a grid environment and search large-scale molecular conformers. We demonstrate CONFLEX-G on our grid testbed using the actual protein as a sample molecule. The OmniRPC facility of the automatic initializable module (AIM) allows the system to efficiently calculate numerous conformers. Furthermore, by using OmniRPC, the user can grid-parallelize the existing application, and move from the cluster to the grid environment without modifying program code and compiling the program. In addition, the user can easily build a private grid environment. The rest of this paper is organized as follows. An overview Selection of Initial Structure Conformations Database Local Perturbation Geometry Optimization Comparison and Registration Figure 1: Algorithm of conformational space search in the original CONFLEX. of the CONFLEX system is presented in Section2, and the implementation and design of CONFLEX-G are described in Section 3. We report experimental results obtained using CONFLEX-G and discuss its performance in Section 4. In Section 6, we present conclusions and discuss subjects for future study. 2. CONFLEX CONFLEX [1] is an efficient conformational space search program, which can predominately and exhaustively search the conformers in the lower-energy region. Applications of CONFLEX include the elucidation of the reactivity and selectivity of drugs and possible drug materials with regard to their conformational flexibility. 2.1 Algorithm of ConformationalSpaceSearch The basic strategy of CONFLEX is an exhaustive search of only the low-energy regions. The original CONFLEX performs the following four major steps: 1. Selection of an initial structure among the previously discovered unique conformers sorted in a conformational database. (An input structure is used as the first initial structure at the beginning of a search execution only.) 2. Generation of trial structures by local perturbations to the selected initial structure. 3. Geometry optimization for the newly generated trial structures. 4. Comparison of the successfully optimized (trial) structures with the other conformers stored in a conformation database, and preservation of newly discovered unique conformers in the database. Figure 1 shows the outline of CONFLEX, the original conformational space search algorithm. These procedures incorporate two unique strategies. Figure 2 shows the strategies for generating local perturbations in CONFLEX. The first strategy involves both corner flapping and edge flipping for the ring atoms and stepwise rotation for side-chains or backbone chains. These methods provide a highly efficient way to produce several good trial structures. These perturbations can be considered to mimic 155 Stepwise Rotation Corner Flap Edge Flip Figure 2: Strategies used to generate the local perturbations. a barrier-crossing step in the elementary process of the thermal conformational inter-conversion. Actually, the perturbations of an initial structure correspond to the precise performance around the space of the initial structure because of localization and weakness of the perturbation. The selection rule of the initial structure, the LowestConformer-First rule, is the second strategy for directing the conformation search expanded to the low-energy regions. The initial structure is selected as the set of lowest energy conformers stored in the conformation database. This rule is effective in moving down the search space toward lower energy regions, like water from a stream running into an empty reservoir, while filling local depressions along the way. Therefore, these tactical procedures of the CONFLEX search are referred to as the Reservoir Filling Algorithm. In order to remain in the low-energy region and perform an exhaustive search, the search limit (SEL), which determines the maximum energy of the initial structures, is pre-defined. Gradually increasing SEL allows only the lowenergy conformers to be searched and avoids straying into unnecessarily high-energy regions. 2.2 Parallelization of CONFLEX for Cluster For application to over 100 atoms, CONFLEX was improved using high-performance parallel computing techniques. In the CONFLEX search algorithm, the geometry optimization procedures always take 95% of the elapsed time of the search execution. Therefore, we parallelized this optimization using the Master/Worker parallelization technique. We modified the search procedures as follows. After trial structures are generated (step 2), they are temporarily stored in a task pool on the master node. Then, each worker node is dynamically supplied with one trial structure from the master node. After an optimization on a worker node is finished, the worker is immediately supplied with another trial structure. When all of the trial structures related to a given initial structure are optimized, only the master procedure is used in comparison. By parallelizing CONFLEX, the speedup of searching molecular conformers obtained is as reported in[11]. 3. CONFLEX-G Originally, CONFLEX was intended for use in exploring the conformers of the large bio-molecules, such HIV protease. In such molecules, the number of trial structures increases and the time required for optimization of RPC Selection of Initial Structure Conformations Database Local Perturbation Comparison and Registration Client program Task Pool of Geometry Optimization RPC RPC Grid environment Cluster B Cluster A Cluster C Trial structureTrial structure Trial structure Trial structure Figure 3: Procedure of CONFLEX-G. agent rexrex rex Client jones.tsukuba.ac.jp hpc-serv.hpcc.jp hpc1 hpc2 hpc3 Agent invocation communicationNetwork Figure 4: Overview of the OmniRPC system for the remote cluster having a private IP address. the trial structure becomes immense. We implemented the parallelized version of CONFLEX, which cannot treat such molecules using only a local PC cluster. In order to exploit the vast computing resources of a grid environment, we designed and implemented CONFLEX-G, which is a grid-enabled version of CONFLEX, with the OmniRPC system. CONFLEX-G allocates jobs to optimize a trial structure to the computational nodes of each cluster in the grid environment. Figure 3 shows the process of CONFLEX-G. The worker programs are initialized by the initialize method, which is provided by the OmniRPC AIM facility at worker invocation. At each RPC call, the initialized state is reused on the remote host. In other words, the client program can eliminate the initialization for each RPC call, and can therefore optimize trial structures efficiently. 3.1 The OmniRPC system OmniRPC is a Grid RPC system which allows seamless parallel programming from a PC cluster to a grid environment. OmniRPC inherits its API and basic architecture from Ninf. A client and the remote computational hosts which execute the remote procedures may be connected via a network. The remote libraries are implemented as an executable program which contains a network stub routine as its main routine. We call this executable program a remote executable program (rex). When the OmniRPC client program starts, the initialization function of OmniRPC system invokes the OmniRPC agent program omrpc-agent in the remote hosts listed in the host file. To invoke the agent, the user can use the remote shell command rsh in a local-area network, the GRAM (Globus Resource Allocation Manager) API of the Globus 156 toolkit[12] in a grid environment, or the secure remote shell command ssh. The user can switch the configurations only by changing the host file. OmniRpcCall is a simple client programming interface for calling remote functions. When OmniRpcCall makes a remote procedure call, the call is allocated to an appropriate remote host. When the client issues the RPC request, it requests that the agent in the selected host submit the job of the remote executable with the local job scheduler specified in the host file. If the job scheduler is not specified, the agent executes the remote executable in the same node by the fork system call. The client sends the data of the input arguments to the invoked remote executable, and receives the results upon return of the remote function. Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls in order to eliminate the cost of invoking the same remote executable again. When the agent and the remote executables are invoked, the remote programs obtain the client address and port from the argument list and connect back to the client by direct TCP/IP or Globus-IO for data transmission. Because the OmniRPC system does not use any fixed service ports, the client program allocates unused ports dynamically to wait for connection from the remote executables. This avoids possible security problems, and allows the user to install the OmniRPC system without requiring a privileged account. Herein, a typical grid resource is regarded as a cluster of geographically distributed PC clusters. For PC clusters on a private network, an OmniRPC agent process on the server host functions as a proxy to relay communications between the client and the remote executables by multiplexing the communications using a single connection. This feature, called multiplex IO (MXIO), allows a single client to use up to 1,000 remote computing hosts. When the PC cluster is inside a firewall, the port forwarding of SSH enables the node to communicate to the outside with MXIO. Figure 4 shows the overview of the OmniRPC system for a remote cluster with a private IP address. For parallel programming, the programmer can use asynchronous remote procedure calls, allowing the client to issue several requests while continuing with other computations. The requests are dispatched to different remote hosts to be executed in parallel, and the client waits or polls the completed request. In such a programming model with asynchronous remote procedure calls, the programmer should handle outstanding requests explicitly. Because OmniRPC is a thread-safe system, a number of remote procedure calls may be outstanding at any time for multi-threaded programs written in OpenMP. 3.2 OmniRPC persistence model: automatic initializable module OmniRPC efficiently supports typical Master/Worker parallel applications such as parametric execution programs. For parametric search applications, which often require large amount of identical data for each call, OmniRPC supports a limited persistence model, which is implemented by the automatic initializable module. The user can define an initialization procedure in the remote executable in order to send and store data automatically in advance of actual remote procedure calls. Since the remote executable may accept requests for subsequent calls, the data set which has been set by the initialization procedure can be re-used. As a result, the worker program can execute efficiently and reduce the amount of data transmitted for initialization. Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls. However, OmniRPC does not guarantee persistence of the remote executable, so that the data set by the previous call cannot be used by subsequent calls. This is because a remote call by OmniRpcCall may be scheduled to any remote host dynamically, and remote executables may be terminated accidentally due to dynamic re-scheduling or host faults. However, persistence of the remote executable can be exploited in certain applications. An example is a parametric search application: in such an application, it would be efficient if a large set of data could be pre-loaded by the first call, and subsequent calls could be performed on the same data, but with different parameters. This is the case for CONFLEX. OmniRPC provides a restricted persistence model through the automatic initializable module (AIM) in order to support this type of application. If the initialization procedure is defined in the module, the module is automatically initialized at invocation by calling the initialization procedure. When the remote executable is re-scheduled in different hosts, the initialization is called to initialize the newly allocated remote module. This can eliminate unnecessary communications when RPC calls use the same data. To reveal more about the difference in progress between the cases with OmniRPC AIM and without OmniRPC AIM, we present two figures. Figure 5 illustrates the time chart of the progress of a typical OmniRPC application using the OmniRPC AIM facility, and Figure 6 illustrates the time chart of the same application without the OmniRPC AIM facility. In both figures, the lines between diamonds represent the processes of initialization, and the lines between points represent the calculation. The bold line indicates the time when the client program sends the data to a worker program. It is necessary for the application without the OmniRPC AIM facility to initialize at each RPC. The application using the OmniRPC AIM facility can re-use the initialized data once the data set is initialized. This can reduce the initialization at each RPC. The workers of the application with the AIM can calculate efficiently compared to the application without the OmniRPC AIM facility. 3.3 Implementation of CONFLEX-G using OmniRPC Figure 3 shows an overview of the process used in CONFLEXG. Using RPCs, CONFLEX-G allocates the processes of trial structure optimization, which are performed by the computation nodes of a PC cluster in the MPI version of CONFLEX, to the computational nodes of each cluster in a grid environment. There are two computations which are performed by the worker programs in CONFLEX-G. One is the initialization of a worker program, and another is the calculation of trial structure optimization. First, the OmniRPC facility of the AIM is adapted for initialization of a worker program. This facility automatically calls the initialization function, which is contained in the worker program, once the client program invokes the worker program in a remote node. It is necessary for the common RPC system including GridRPC to initialize a program for every RPC call, since data persistence of worker programs 157 time Client Program Worker Program 1 Worker Program 2 initialization initialization calculation calculation calculation calculation calculation Parallelized using asynchronous RPCs Figure 5: Time chart of applications using the OmniRPC facility of the automatic initializable module. time Client Program Worker Program 1 Worker Program 2 initialization initializationcalculation calculation calculation calculation initialization initialization initialization Parallelized using asynchronous RPCs calculation Figure 6: Time chart of applications without the OmniRPC facility of the automatic initializable module. Table 1: Machine configurations in the grid testbed. Site Cluster Name Machine Network Authentication # of Nodes # of CPUs Univ. of Tsukuba Dennis Dual Xeon 2.4GHz 1Gb Ethernet Globus, SSH 14 28 Alice Dual Athlon 1800+ 100Mb Ethernet Globus, SSH 18 36 TUT Toyo Dual Athlon 2600+ 100Mb Ethernet SSH 8 16 AIST Ume Dual Pentium3 1.4GHz 1Gb Ethernet Globus, SSH 32 64 is not supported. In OmniRPC, however, when the Initialize remote function is defined in the worker program and a new worker program, corresponding to the other RPC, is assigned to execute, an Initialize function is called automatically. Therefore, after the Initialize function call to set up common initialization data, a worker program can re-use this data and increase the efficiency of its processes. Thus, the higher the set-up cost, the greater the potential benefit. We implemented the worker program of CONFLEX-G to receive data, such as evaluation parameters of energy, from a client program and to be initialized by the Initialize function. We arranged the client program of CONFLEX-G to transfer the parameter file at the time of worker initialization. This enables execution to be performed by modify only the client setting if the user wants to run CONFLEX-G with a different data set. Second, in order to calculate trial structure optimization in a worker program, the worker program must receive the data, such as the atom arrangement of the trial structure and the internal energy state. The result is returned to the client program after the worker has Optimized the trial structure. Since the calculation portion of the structure optimization in this worker program can be calculated independently using different parameters, we parallelized this portion using asynchronous RPCs on the client side. To call the structure optimization function in a worker program from the client program, we use the OmniRpcCallAsync API, which is intended for asynchronous RPC. In addition, OmniRpcCallWaitAll API which waits until all asynchronous RPCs are used in order to perform synchronization with all of the asynchronous RPCs completed so as to optimize the trial structure. The client program which assigns trial structure optimization to the calculation node of a PC cluster using RPC is outlined as follows. OmniRpcInit() OmniRpcModuleInit(conflex_search,...); ... while( <new conformers> ) { foreach( <trial structures> ) OmniRpcCallAsync(conflex_search_worker, ...); OmniRpcWaitAll(); ... Note that OmniRpcModuleInit API returns only the arguments needed for initialization and will not actually execute the Initialization function. As described above, the actual Initialization is performed at the first remote call. Since the OmniRPC system has an easy round-robin scheduler, we do not have to explicitly write the code for load balance. Therefore, RPCs are allocated automatically to idle workers. 158 Table 2: Network performance between the master node of the Dennis cluster and the master node of each PC cluster. Round-Trip Throughput Cluster Time (ms) (Mbps) Dennis 0.23 879.31 Alice 0.18 94.12 Toyo 11.27 1.53 Ume 1.07 373.33 4. PRELIMINARY RESULTS 4.1 Grid Testbed The grid testbed was constructed by computing resources at the University of Tsukuba, the Toyohashi University of Technology (TUT) and the National Institute of Advanced Industrial Science and Technology (AIST). Table 1 shows the computing resources used for the grid of the present study. The University of Tsukuba and AIST are connected by a 1-Gbps Tsukuba WAN, and the other PC clusters are connected by SINET, which is wide-area network dedicated to academic research in Japan. Table 2 shows the performance of the measured network between the master node of the Dennis cluster and the master node of each PC cluster in the grid testbed. The communication throughput was measured using netperf, and the round-trip time was measured by ping. 4.2 Performance of CONFLEX-G In all of the CONFLEX-G experiments, the client program was executed on the master node of the Dennis cluster at the University of Tsukuba. The built-in Round-Robin scheduler of OmniRPC was used as a job scheduler. SSH was used for an authentication system, the OminRPCs MXIO, which relays the I/O communication between client program and worker programs by port forwarding of SSH was, not used. Note that one worker program is assigned and performed on one CPU of the calculation node in a PC cluster. That is, the number of workers is equal to the number of CPUs. These programs were compiled by the Intel Fortran Compiler 7.0 and gcc 2.95. MPICH, Version 1.2.5, was used to compare the performance between CONFLEX MPI and CONFLEX-G. In order to demonstrate the usability of the OmniRPC facility of the AIM, we implemented another version of CONFLEX-G which did not utilize the OmniRPC facility. The worker program in this version of CONFLEXG must be initialized at each RPC because the worker does not hold the previous data set. In order to examine the performance of CONFLEX-G, we selected two peptides and two small protein as test molecules: • N-acetyl tetra-alanine methylester (AlaX04) • N-acetyl hexdeca-alanine methylester (AlaX16) • TRP-cage miniprotein construct TC5B (1L2Y) • PTH receptor N-terminus fragment (1BL1) Table 3 lists the characteristics of these sample molecules. The column trial structure / loops in this table shows the Figure 7: Performances of CONFLEX-G, CONFLEX MPI and Original CONFLEX in the Dennis cluster. Figure 8: Speedup ratio, which is based on the elapsed time of CONFLEX-G using one worker in the Dennis cluster. Figure 9: Performance of CONFLEX-G with and without the OmniRPC facility of automatic initializable module for AlaX16. 159 Table 3: Characteristics of molecules and data transmission for optimizing trial molecular structures in each molecular code. Molecular # of # of total trial trial structure Data transfer to Data transfer code atoms structures / loop initialize a worker / trial structure AlaX04 181 360 45 2033KB 17.00KB AlaX16 191 480 160 2063KB 18.14KB 1L2Y 315 331 331 2099KB 29.58KB 1BL1 519 519 519 2150KB 48.67KB Table 4: Elapsed search time for the molecular conformation of AlaX04. Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (sequential) 1 320.0 1786.21 4.96 1786.21 1.00 Toyo (16) 16 20.0 1497.08 4.16 196.32 9.10 Dennis (28) 28 11.4 1905.51 5.29 97.00 18.41 Alice (36) 36 8.9 2055.25 5.71 87.09 20.51 Ume (56) 56 5.7 2196.77 6.10 120.69 14.80 Dennis (28) + Toyo (16) 44 7.3 1630.09 4.53 162.35 11.00 Alice (36) + Toyo (16) 52 6.2 1774.53 4.93 178.24 10.02 Dennis (28) + Alice (36) 64 5.0 1999.02 5.55 81.52 21.91 Dennis (28) + Ume (56) 84 3.8 2085.84 5.79 92.22 19.37 Alice (36) + Ume (56) 92 3.5 2120.87 5.89 101.25 17.64 Table 5: Elapsed search time for the molecular conformation of AlaX16 Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (1) 1 480.0 74027.80 154.22 74027.80 1.00 Toyo (16) 16 30.0 70414.21 146.70 4699.15 15.75 Dennis (28) 28 17.1 74027.80 154.22 3375.60 21.93 Alice (36) 36 13.3 90047.27 187.60 3260.41 22.71 Ume (56) 56 8.6 123399.38 257.08 2913.63 25.41 Dennis (28) + Toyo (16) 44 10.9 76747.74 159.89 2762.10 26.80 Alice (36) + Toyo (16) 52 9.2 82700.44 172.29 2246.73 32.95 Dennis (28) + Alice (36) 64 7.5 87571.30 182.44 2051.50 36.08 Toyo (16) + Ume (56) 72 6.7 109671.32 228.48 2617.85 28.28 Dennis (28) + Ume (56) 84 5.7 102817.90 214.20 2478.93 29.86 Dennis(28)+Ume(56)+Toyo(16) 100 4.8 98238.07 204.66 2478.93 29.86 Table 6: Elapsed time of the search for the trial structure of 1L2Y. Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 331.0 867 286,967 79.71 1.00 Toyo MPI (16) 16 20.7 867 18,696 5.19 15.34 Dennis (28) 28 11.8 803 14,101 3.91 20.35 Dennis (28) + Ume(56) 84 3.9 1,064 8,316 2.31 34.50 Table 7: Elapsed time of the search for the trial structure of 1BL1. Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 519.0 3,646 1892,210 525.61 1.00 Toyo MPI (16) 16 32.4 3,646 120,028 33.34 15.76 Dennis (28) 28 18.5 3,154 61,803 17.16 30.61 Dennis (28) + Ume (56) 84 6.1 4,497 33,502 9.30 56.48 160 number of trial structures generated in each iteration, indicating the degree of parallelism. Figure 3 also summarizes the amount of data transmission required for initialization of a worker program and for optimization of each trial structure. Note that the amount of data transmission, which is required in order to initialize a worker program and optimize a trial structure in the MPI version of CONFLEX, is equal to that of CONFLEX-G. We used an improvement version of MM2 force field to assign a potential energy function to various geometric properties of a group of atoms. 4.2.1 Performance in a Local Cluster We first compared the performance of CONFLEX-G, the MPI version of CONFLEX, and the original sequential version of CONFLEX-G using a local cluster. We investigated performance by varying the number of workers using the Dennis cluster. We chose AlaX04 as a test molecule for this experiment. Figure 7 compares the results for the CONFLEX MPI and CONFLEX-G in a local PC cluster. The result of this experiment shows that CONFLEX-G can reduce the execution time as the number of workers increases, as in the MPI version of CONFLEX. We found that CONFLEX-G achieved efficiencies comparable to the MPI version. With 28 workers, CONFLEX-G achieved an 18.00 times speedup compared to the CONFLEX sequential version. The performance of CONFLEX-G without the OmniRPC AIM facility is worse than that of CONFLEXG using the facility, based on the increase in the number of workers. This indicates that the OmniRPC AIM enables the worker to calculate efficiently without other calculations, such initialization or invocation of worker programs. As the number of workers is increased, the performance of CONFLEX-G is a slightly lower than that of the MPI version. This performance degradation is caused by differences in the worker initialization processes of CONFLEX-G and CONFLEX MPI. In the case of CONFLEX MPI, all workers are initialized in advance of the optimization phase. In the case of OminRPC, the worker is invoked on-demand when the RPC call is actually issued. Therefore, the initialization incurs this overhead. Since the objective of CONFLEX-G is to explore the conformations of large bio-molecules, the number of trial structures and the time to optimize the trial structure might be large. In such cases, the overhead to invoke and initialize the worker program can be small compared to the entire elapsed time. 4.2.2 Performance for Peptides in The Grid Testbed First, the sample molecules (AlaX04 and AlaX16) were used to examine the CONFLEX-G performance in a grid environment. Figure 8 shows the speedup achieved by using multiple clusters compared to using one worker in the Dennis cluster. Detailed results are shown in Table 4 and Table 5. In both cases, the best performance was obtained using 64 workers of the combination of the Dennis and Alice clusters. CONFLEX-G achieved a maximum speedup of 36.08 times for AlaX04 and a maximum speedup of 21.91 times for AlaX16. In the case of AlaX04, the performance is improved only when the network performance between clusters is high. However, even if two or more clusters are used in a wide area network environment, the performance improvement was slight because the optimization time of one trial structure generated from AlaX04, a small molecule, is short. In addition, the overhead required for invocation of a worker program and network data transmission consume a large portion of the remaining processing time. In particular, the data transmission required for the initialization of a worker program is 2 MB. In the case of Toyo cluster, where the network performance between the client program and the worker programs is poor, the time of data transmission to the worker program required approximately 6.7 seconds. Since this transmission time was longer than the processing time of one structure optimization in CONFLEX-G, most of the time was spent for this data transmission. Therefore, even if CONFLEX-G uses a large number of calculation nodes in a wide area network environment, the benefit of using a grid resource is not obtained. In the case of AlaX16, CONFLEX-G achieved a speedup by using two or more PC clusters in our grid testbed. This was because the calculation time on the worker program was long and the overhead, such as network latency and the invoking of worker programs, became relatively small and could be hidden. The best performance was obtained using 64 workers in the Dennis and Alice clusters. In the case of AaX16, the achieved performance was a speedup of 36.08 times. Figure 9 reveals the effect of using the facility of the OmniRPC AIM on CONFLEX-G performance. In most cases, CONFLEX-G with the OmniRPC AIM facility archived better performance than CONFLEX-G without the facility. In particular, the OmniRPC AIM facility was advantageous when using two clusters connected by a low-performance network. The results indicate that the OmniRPC AIM facility can improve performance in the grid environment. 4.2.3 PerformanceforSmallProteininTheGridTestbed Finally, we explored the molecular conformation using CONFLEX-G for large molecules. In a grid environment, this experiment was conducted using the Dennis and Ume clusters. In this experiment, we used two proteins, 1L2Y and 1BL1. Table 6 and Table 7 show the performance of CONFLEX-G in the grid environment and that of CONFLEX MPI in the Toyo cluster, respectively. The speedups in these tables were computed respectively based on the performance of one worker and 16 workers of the Toyo cluster using CONFLEX MPI. CONFLEX-G with 84 workers in Dennis and Ume clusters obtained maximum speedups of 56.5 times for 1L2Y and 34.5 times for 1L2Y. Since the calculation time for structure optimization required a great deal of time, the ratio of overhead, including tasks such as the invocation of a worker program and data transmission for initialization, became very small, so that the performance of CONFLEX-G was improved. We found that the load imbalance in the processing time of optimization for each trial structure caused performance degradation. When we obtained the best performance for 1L2Y using the Dennis and Ume clusters, the time for each structure optimization varied from 190 to 27,887 seconds, and the ratio between the longest and shortest times was 13.4. For 1BL1, the ratio of minimum time over maximum time was 190. In addition, in order that the worker program wait until the completion of optimization of all trial structures, all worker programs were found to wait in an idle state for approximately 6 hours. This has caused the performance degradation of CONFLEX-G. 161 4.3 Discussion In this subsection, we discuss the improvement of the performance reflected in our experiments. Exploiting parallelism - In order to exploit more computational resources, it is necessary to increase the degree of parallelism. In this experiment, the degree of parallelism was not so large in the case of the sample molecules. When using a set of over 500 computing nodes for 1BL1, the number of one trial structures assigned to each worker will be only one or two. If over 100 trial structures are assigned to each worker program, calculation can be performed more efficiently due to the reduction of the overhead for worker invocation and initialization via the facility of the OmniRPC AIM. One idea for increasing parallelism is to overlap the execution of two or more sets of trial structures. In the current algorithm, a set of trial structures is generated from one initial structure and computed until optimizations for all structures in this set are calculated. Furthermore, this will help to improve load imbalance. By having other sets of trial structures overlap, even if some optimizations require a long time, the optimization for the structures in other sets can be executed to compensate for the idle workers for other optimizations. It is however unclear how such modification of the algorithm might affect the quality of the final results in terms of a conformation search. Improvement in load imbalance when optimizing each trial structure - Table 8 lists the statistics for optimization times of trial structures generated for each sample molecule measured using 28 workers in the Dennis cluster. When two or more sets of PC clusters are used, the speedup in performance is hampered by the load imbalance of the optimization of the trial structures. The longest time for optimizing a trial structure was nearly 24 times longer than the shortest time. Furthermore, other workers must wait until the longest job has Finished, so that the entire execution time cannot be reduced. When CONFLEX-G searched the conformers of 1BL1 by the Dennis cluster, the longest calculation time of the trial structure optimization made up approximately 80% of the elapsed time. Therefore, there are two possible solutions for the load Imbalance. • It is necessary to refine the algorithm used to generate the trial structure, which suppresses the time variation for optimizing a trial structure in CONFLEX. This enables CONFLEX-G to achieve high-throughput by using many computer resources. • One of the solutions is to overlap the executions for two or more sets of trial structures. In the current algorithms, a set of trial structures is generated from one initial structure and calculation continues until all structures in this set are calculated. By having other sets of trial structures, even if a structure search takes a long time, a job can be executed in order to compensate the load imbalance by other jobs. However, how such modification of the algorithms might affect the efficiency is not clear. • In this experiment, we used a simple build-in roundrobbin scheduler of OmniRPC, which is necessary in order to apply the scheduler that allocates structures with long optimization times to a high-performance Table 8: Statistics of elapsed time of trial structure optimization using 28 workers in the Dennis cluster. Molecular Min Max Average Variance code (s) (s) (s) AlaX04 2.0 11.3 5.3 3 AlaX16 47.6 920.0 154.2 5404 1L2Y 114.2 13331.4 803.2 636782 1BL1 121.0 29641.8 3153.5 2734811 node and structures with short optimization times to low-performance nodes. In general, however, it might be difficult to predict the time required for trial structure optimization. Parallelization of the worker program for speedup to optimize a trial structure - In the current implementation, we do not parallelize the worker program. In order to speed up trial structures, hybrid programming using OmniRPC and OpenMP in an SMP (Symmetric Multiple Processor) machine may be one of the alternative methods by which to improve overall performance. 5. RELATED WORK Recently, an algorithm has been developed that solves the problems of parallelization and communication in poorly connected processors to be used for simulation. The Folding@home project[13] simulates timescales thousands to millions of times longer than previously achieved. This has allowed us to simulate folding for the first time and to directly examine folding related diseases. SETI@home[14] is a program to search for alien life by analyzing radio telescope signals using Fourier transform radio telescope data from telescopes from different sites. SETI@home tackles immensely parallel problems, in which calculation can easily be divided among several computers. Radio telescope data chunks can easily be assigned to different computers. Most of these efforts explicitly develop a docking application as a parallel application using a special purpose parallel programming language and middleware, such as MPI, which requires development skills and effort. However, the skills and effort required to develop a grid application may not be required for OmniRPC. Nimrod/G[15] is a tool for distributed parametric modeling and implements a parallel task farm for simulations that require several varying input parameters. Nimrod incorporates a distributed scheduling component that can manage the scheduling of individual experiments to idle computers in a local area network. Nimrod has been applied to applications including bio-informatics, operations research, and molecular modeling for drug design. NetSolve[8] is an RPC facility similar to OmniRPC and Ninf, providing a similar programming interface and automatic load balancing mechanism. Ninf-G[7] is a grid-enabled implementation of Ninf and provides a GridRPC[10] system that uses LDAP to manage the database of remote executables, but does not support clusters involving private IP addresses or addresses inside a firewall. Matsuoka et al.[16] has also discussed several design issues related to grid RPC systems. 162 6. CONCLUSIONS AND FUTURE WORK We have designed and implemented CONFLEX-G using OmniRPC. We reported its performance in a grid testbed of several geographically distributed PC clusters. In order to explore the conformation of large bio-molecules, CONFLEXG was used to generate trial structures of the molecules, and allocate jobs to optimize them by molecular mechanics in the grid. OmniRPC provides a restricted persistence model so that the module is automatically initialized at invocation by calling the initialization procedure. This can eliminate unnecessary communication and the initialization at each call in CONFLEX-G. CONFLEX-G can achieves performance comparable to CONFLEX MPI and exploits more computing resources by allowing the use of multiple PC clusters in the grid. The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times for the 1BL1 molecule, where the molecule consists of a large number of atoms and each trial structure optimization requires a great deal of time. The load imbalance of the trial structure optimizations may cause performance degradation. We need to refine the algorithm used to generate the trial structure in order to improve the load balance optimization for trial structures in CONFLEX. Future studies will include development of deployment tools and an examination of fault tolerance. In the current OmniRPC, the registration of an execution program to remote hosts and deployments of worker programs are manually set. Deployment tools will be required as the number of remote hosts is increased. In grid environments in which the environment changes dynamically, it is also necessary to support fault tolerance. This feature is especially important in large-scale applications which require lengthy calculation in a grid environment. We plan to refine the conformational optimization algorithm in CONFLEX to explore the conformation space search of larger bio-molecules such HIV protease using up to 1000 workers in a grid environment. 7. ACKNOWLEDGMENTS This research was supported in part by a Grant-in-Aid from the Ministry of Education, Culture, Sports, Science and Technology in Japan, No. 14019011, 2002, and as part of the Program of Research and Development for Applying Advanced Computational Science and Technology by the Japan Science and Technology Corporation (Research on the grid computing platform for drug design). We would like to thank grid technology research center, AIST, Japan for providing computing resources for our experiment. 8. REFERENCES [1] H. Goto and E. Osawa. An efficient algorithm for searching low-energy conformers of cyclic and acyclic molecules. J. Chem. Soc., Perkin Trans, 2:187-198, 1993. [2] M. Sato, T. Boku, and D. Takahashi. OmniRPC: a Grid RPC System for Parallel Programming in Cluster and Grid Environment. In Proc. of CCGrid2003, pages 219-229, 2003. [3] M. Sato, M. Hirano, Y. Tanaka, and S. Sekiguchi. OmniRPC: a Grid RPC facility for Cluster and Global Computing in OpenMP. In Proc. of Workshop on OpenMP Applications and Tools 2001(LNCS 2104 ), pages 130-135, 2001. [4] OmniRPC Project. http://www.omni.hpcc.jp/omnirpc/. [5] M. Sato, H. Nakada, S. Sekiguchi, S. Matsuoka, U. Nagashima, and H. Takagi. Ninf: A Network Based Information Library for Global World-Wide Computing Infrastructure. In HPCN Europe, pages 491-502, 1997. [6] Ninf Project. http://ninf.apgrid.org/. [7] Y. Tanaka, H. Nakada, S. Sekiguchi, T. Suzumura, and S. Matsuoka. Ninf-G: A Reference Implementation of RPC-based Programming Middleware for Grid Computing . Journal of Grid Computing, 1(1):41-51, 2003. [8] D. Arnold, S. Agrawal, S. Blackford, J. Dongarra, M. Miller, K. Seymour, K. Sagi, Z. Shi, and S. Vadhiyar. Users Guide to NetSolve V1.4.1. Innovative Computing Dept. Technical Report ICL-UT-02-05, University of Tennessee, Knoxville, TN, June 2002. [9] Object management group. http://www.omg.org/. [10] K. Seymour, H. Nakada, S. Matsuoka, J. Dongarra, C. Lee, and H. Casanova. GridRPC: A Remote Procedure Call API for Grid Computing. [11] H.Goto, T. Takahashi, Y. Takata, K. Ohta, and U Nagashima. Conflex: Conformational behaviors of polypeptides as predicted by a conformational space search. In Nanotech2003, volume 1, pages 32-35, 2003. [12] I. Foster and C. Kesselman. Globus: A metacomputing infrastructure toolkit. The International Journal of Supercomputer Applications and High Performanc e Computing, 11(2):115-128, Summer 1997. [13] Stefan M. Larson, Christopher D. Snow, Michael Shirts, and Vijay S. Pande. Folding@home and genome@home: Using distributed computing to tackle prev iously intractable problems in computational biology. Computational Genomics, 2002. [14] seti@home project. http://setiathome.ssl.berkeley.edu/. [15] R. Buyya, K. Branson, J. Giddy, and D. Abramson. The virtual laboratory: a toolset to enable distributed molecular modelling for drug design on the world-wide grid. Concurrency and Computation: Practice and Experience, 15(1):1-25, January 2003. [16] S. Matsuoka, H. Nakada, M. Sato, and S. Sekiguchi. Design issues of Network Enabled Server Systems for the Grid. In Proc. of GRID 2000 (LNCS 1971), pages 4-17, 2000. 163",
    "original_translation": "Implementación y Evaluación del Rendimiento de CONFLEX-G: Programa de Búsqueda de Espacio Conformacional Molecular Habilitado para Grid con OmniRPC. Hemos implementado CONFLEX-G utilizando un sistema de RPC en malla llamado OmniRPC. En este artículo, informamos sobre el rendimiento de CONFLEX-G en un banco de pruebas en red de varios clústeres de PC distribuidos geográficamente. Para explorar muchas conformaciones de grandes biomoléculas, CONFLEX-G genera estructuras de prueba de las moléculas y asigna trabajos para optimizar una estructura de prueba con un método confiable de mecánica molecular en la cuadrícula. OmniRPC proporciona un modelo de persistencia restringido para respaldar las aplicaciones de búsqueda paramétrica. En este modelo, cuando el procedimiento de inicialización está definido en el módulo RPC, el módulo se inicializa automáticamente en el momento de la invocación llamando al procedimiento de inicialización. Esto puede eliminar la comunicación y la inicialización innecesarias en cada llamada en CONFLEX-G. CONFLEXG puede lograr un rendimiento comparable al de CONFLEX MPI y puede aprovechar más recursos informáticos al permitir el uso de un clúster de múltiples clústeres en la cuadrícula. El resultado experimental muestra que CONFLEX-G logró una aceleración de 56.5 veces en el caso de la molécula 1BL1, donde la molécula consta de un gran número de átomos y cada optimización de la estructura de prueba requiere un tiempo significativo. El desequilibrio de carga en el tiempo de optimización de la estructura de prueba también puede causar degradación del rendimiento. Categorías y Descriptores de Asignaturas C.2.4 [Organización de Sistemas Informáticos]: RED DE COMUNICACIÓN DE COMPUTADORAS-Sistemas Distribuidos; J.2.4 [Aplicaciones Informáticas]: CIENCIAS FÍSICAS E INGENIERÍA Términos Generales Diseño, Rendimiento 1. INTRODUCCIÓN La elucidación de las conformaciones estables y el proceso de plegamiento de las proteínas es uno de los objetivos más fundamentales y desafiantes en las ciencias de la vida. Si bien algunas de las estructuras secundarias más comunes (por ejemplo, ciertos tipos de hélice, la lámina beta y la hélice) son bien conocidas, se requiere un análisis preciso de los miles de conformaciones químicamente importantes y un análisis de orden de pico-segundo de sus interconversiones conformacionales a través de los estados de transición en la superficie de energía potencial para la investigación de orden de microsegundo del proceso de plegamiento hacia la formación de la estructura terciaria. Recientemente, el concepto de la red computacional ha comenzado a atraer un interés significativo en el campo de la computación de alto rendimiento en red. Los rápidos avances en la tecnología e infraestructura de redes de área amplia han hecho posible construir entornos de computación distribuida a gran escala y alto rendimiento, o redes computacionales, que proporcionan acceso confiable, consistente y generalizado a enormes recursos computacionales. CONFLEX es uno de los programas de búsqueda de espacio conformacional más eficientes y confiables. Hemos aplicado este programa 154 a la paralelización utilizando computación global. El rendimiento del CONFLEX paralelizado permite explorar la región de energía más baja del espacio conformacional de péptidos pequeños en un tiempo transcurrido disponible utilizando un clúster de PC local. Dado que la optimización de la estructura de prueba en CONFLEX se calcula a través de la mecánica molecular, la búsqueda del espacio conformacional se puede realizar rápidamente en comparación con la que utiliza cálculos de orbitales moleculares. Aunque se utilizó la versión paralelizada de CONFLEX para calcular de forma paralela la optimización de la estructura, que representa más del 90% del procesamiento en la búsqueda de conformaciones moleculares, no se pudo lograr una mejora suficiente en la aceleración solo con este método. Por lo tanto, para polímeros de alto peso molecular de organismos vivos, como la proteasa del VIH, el uso de un solo clúster de PC es insuficiente debido a la necesidad de optimizar una gran cantidad de estructuras de prueba. Esto requiere los vastos recursos informáticos de un entorno de computación en malla. En este artículo, describimos CONFLEX-G, un programa de búsqueda conformacional molecular habilitado para grid, utilizando OmniRPC y reportamos su rendimiento en un grid de varios clusters de PC distribuidos geográficamente. El prototipo CONFLEX-G asigna la optimización de las estructuras de cálculo de prueba, que es una tarea muy consumidora de tiempo, a nodos trabajadores en el entorno de la red para obtener un alto rendimiento. Además, comparamos el rendimiento de CONFLEX-G en un clúster de PC local con el de un banco de pruebas en red. OmniRPC[2, 3, 4] es una implementación segura para hilos de Ninf RPC[5, 6], que es una facilidad de RPC de cuadrícula para la computación en entornos de cuadrícula. Varios sistemas adoptan el concepto de la RPC como el modelo básico para la computación en entornos de rejilla, incluyendo Ninf-G[7], NetSolve[8] y CORBA[9]. El sistema RPCstyle proporciona una interfaz de programación fácil de usar e intuitiva, que permite a los usuarios del sistema de cuadrícula crear fácilmente aplicaciones habilitadas para la cuadrícula. Para apoyar la programación paralela, un cliente de RPC puede emitir solicitudes de llamada asincrónicas a un ordenador remoto diferente para aprovechar el paralelismo en toda la red a través de OmniRPC. En este artículo, proponemos el modelo de persistencia OmniRPC para un sistema de RPC de Grid y demostramos su efectividad. Para apoyar una aplicación típica para un entorno de cuadrícula, como una aplicación de búsqueda paramétrica, en la que la misma función se ejecuta con diferentes parámetros de entrada en el mismo conjunto de datos. En el sistema GridRPC actual[10], el conjunto de datos establecido por la llamada anterior no puede ser utilizado por llamadas posteriores. En el sistema OmniRPC, una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado y su estado inicializado para llamadas posteriores a las mismas funciones remotas con el fin de eliminar el costo de invocación de cada llamada. Este documento demuestra que CONFLEX-G es capaz de aprovechar los enormes recursos informáticos de un entorno de grid y buscar conformadores moleculares a gran escala. Demostramos CONFLEX-G en nuestra plataforma de pruebas en red utilizando la proteína real como molécula de muestra. La facilidad OmniRPC del módulo inicializable automático (AIM) permite al sistema calcular eficientemente numerosos conformeros. Además, al utilizar OmniRPC, el usuario puede paralelizar en cuadrícula la aplicación existente y pasar del clúster al entorno de cuadrícula sin modificar el código del programa y compilar el programa. Además, el usuario puede construir fácilmente un entorno de red privada. El resto de este documento está organizado de la siguiente manera. Se presenta una visión general de la Base de Datos de Conformaciones de Estructuras Iniciales, la Perturbación Local, la Optimización de la Geometría, la Comparación y el Registro. Figura 1: Algoritmo de búsqueda de espacio conformacional en el CONFLEX original. El sistema CONFLEX se describe en la Sección 2, y la implementación y diseño de CONFLEX-G se detallan en la Sección 3. Informamos los resultados experimentales obtenidos utilizando CONFLEX-G y discutimos su rendimiento en la Sección 4. En la Sección 6, presentamos conclusiones y discutimos temas para estudios futuros. 2. CONFLEX es un programa eficiente de búsqueda de espacio conformacional, que puede buscar predominantemente y exhaustivamente los conformeros en la región de energía más baja. Las aplicaciones de CONFLEX incluyen la elucidación de la reactividad y selectividad de fármacos y posibles materiales medicinales con respecto a su flexibilidad conformacional. 2.1 Algoritmo de Búsqueda de Espacio Conformacional La estrategia básica de CONFLEX es una búsqueda exhaustiva solo de las regiones de baja energía. El CONFLEX original realiza los siguientes cuatro pasos principales: 1. Selección de una estructura inicial entre los conformeros únicos previamente descubiertos y ordenados en una base de datos conformacional. (Una estructura de entrada se utiliza como la primera estructura inicial al comienzo de una ejecución de búsqueda solamente.) 2. Generación de estructuras de prueba mediante perturbaciones locales a la estructura inicial seleccionada. 3. Optimización de geometría para las nuevas estructuras de prueba generadas. 4. Comparación de las estructuras optimizadas con éxito (ensayo) con los otros conformeros almacenados en una base de datos de conformaciones, y preservación de los conformeros únicos recién descubiertos en la base de datos. La Figura 1 muestra el esquema de CONFLEX, el algoritmo original de búsqueda de espacio conformacional. Estos procedimientos incorporan dos estrategias únicas. La Figura 2 muestra las estrategias para generar perturbaciones locales en CONFLEX. La primera estrategia implica tanto el aleteo de las esquinas como el volteo de los bordes para los átomos del anillo y la rotación paso a paso para las cadenas laterales o cadenas del esqueleto. Estos métodos proporcionan una forma altamente eficiente de producir varias estructuras de prueba buenas. Estas perturbaciones pueden considerarse como una imitación de 155 Rotación Escalonada de Esquina de Solapa de Borde de Giro Figura 2: Estrategias utilizadas para generar las perturbaciones locales, un paso de cruce de barrera en el proceso elemental de la interconversión conformacional térmica. De hecho, las perturbaciones de una estructura inicial corresponden al rendimiento preciso alrededor del espacio de la estructura inicial debido a la localización y debilidad de la perturbación. La regla de selección de la estructura inicial, la regla LowestConformer-First, es la segunda estrategia para dirigir la búsqueda de conformaciones ampliada a las regiones de baja energía. La estructura inicial se selecciona como el conjunto de conformaciones de menor energía almacenadas en la base de datos de conformaciones. Esta regla es efectiva para desplazarse hacia abajo en el espacio de búsqueda hacia regiones de menor energía, como el agua de un arroyo que fluye hacia un embalse vacío, llenando depresiones locales en el camino. Por lo tanto, estos procedimientos tácticos de la búsqueda CONFLEX se conocen como el Algoritmo de Llenado de Reservorio. Para permanecer en la región de baja energía y realizar una búsqueda exhaustiva, el límite de búsqueda (SEL), que determina la energía máxima de las estructuras iniciales, está predefinido. El aumento gradual de SEL permite buscar solo los conformeros de baja energía y evita desviarse hacia regiones de energía innecesariamente alta. 2.2 Paralelización de CONFLEX para clúster Para su aplicación en más de 100 átomos, CONFLEX fue mejorado utilizando técnicas de computación paralela de alto rendimiento. En el algoritmo de búsqueda CONFLEX, los procedimientos de optimización de geometría siempre ocupan el 95% del tiempo transcurrido durante la ejecución de la búsqueda. Por lo tanto, paralelizamos esta optimización utilizando la técnica de paralelización Maestro/Trabajador. Modificamos los procedimientos de búsqueda de la siguiente manera. Después de que se generan las estructuras de prueba (paso 2), se almacenan temporalmente en un grupo de tareas en el nodo maestro. Entonces, cada nodo trabajador recibe dinámicamente una estructura de prueba del nodo maestro. Después de que se complete una optimización en un nodo de trabajador, este recibe inmediatamente otra estructura de prueba. Cuando todas las estructuras de prueba relacionadas con una estructura inicial dada están optimizadas, solo se utiliza el procedimiento principal para la comparación. Al paralelizar CONFLEX, la aceleración de la búsqueda de conformadores moleculares obtenida es la reportada en[11]. 3. CONFLEX-G Originalmente, CONFLEX estaba destinado a ser utilizado para explorar los conformeros de las grandes biomoléculas, como la proteasa del VIH. En tales moléculas, el número de estructuras de prueba aumenta y el tiempo requerido para la optimización de la Selección de RPC de Estructuras Iniciales Conformaciones de la Base de Datos de Perturbación Local Comparación y Registro del Cliente Programa Cliente Grupo de Tareas de Optimización Geométrica RPC Entorno de Rejilla RPC Cluster B Cluster A Cluster C Estructura de prueba Estructura de prueba Estructura de prueba Estructura de prueba Figura 3: Procedimiento de CONFLEX-G. agente rexrex rex Cliente jones.tsukuba.ac.jp hpc-serv.hpcc.jp hpc1 hpc2 hpc3 Invocación del agente Comunicación de la red Figura 4: Visión general del sistema OmniRPC para el clúster remoto con una dirección IP privada. la estructura de prueba se vuelve inmensa. Implementamos la versión paralelizada de CONFLEX, la cual no puede tratar tales moléculas utilizando solo un clúster de PC local. Para aprovechar los vastos recursos informáticos de un entorno de grid, diseñamos e implementamos CONFLEX-G, que es una versión habilitada para grid de CONFLEX, con el sistema OmniRPC. CONFLEX-G asigna trabajos para optimizar una estructura de prueba a los nodos computacionales de cada clúster en el entorno de la red. La Figura 3 muestra el proceso de CONFLEX-G. Los programas de los trabajadores se inicializan mediante el método de inicialización, que es proporcionado por la instalación de OmniRPC AIM en la invocación del trabajador. En cada llamada RPC, el estado inicializado se reutiliza en el host remoto. En otras palabras, el programa cliente puede eliminar la inicialización para cada llamada RPC, y por lo tanto optimizar eficientemente las estructuras de prueba. 3.1 El sistema OmniRPC OmniRPC es un sistema de RPC en malla que permite una programación paralela sin problemas desde un clúster de PC hasta un entorno de malla. OmniRPC hereda su API y arquitectura básica de Ninf. Un cliente y los hosts computacionales remotos que ejecutan los procedimientos remotos pueden estar conectados a través de una red. Las bibliotecas remotas se implementan como un programa ejecutable que contiene una rutina de soporte de red como su rutina principal. Llamamos a este programa ejecutable un programa ejecutable remoto (rex). Cuando el programa cliente OmniRPC se inicia, la función de inicialización del sistema OmniRPC invoca el programa agente OmniRPC omrpc-agent en los hosts remotos listados en el archivo de hosts. Para invocar al agente, el usuario puede utilizar el comando de shell remoto rsh en una red de área local, la API de GRAM (Gestor de Asignación de Recursos Globus) del kit de herramientas Globus 156 en un entorno de grid, o el comando de shell remoto seguro ssh. El usuario puede cambiar las configuraciones solo modificando el archivo de host. OmniRpcCall es una interfaz de programación de cliente simple para llamar a funciones remotas. Cuando OmniRpcCall realiza una llamada a un procedimiento remoto, la llamada se asigna a un host remoto apropiado. Cuando el cliente emite la solicitud de RPC, solicita que el agente en el host seleccionado envíe el trabajo del ejecutable remoto con el programador de trabajos local especificado en el archivo del host. Si no se especifica el programador de tareas, el agente ejecuta el ejecutable remoto en el mismo nodo mediante la llamada al sistema fork. El cliente envía los datos de los argumentos de entrada al ejecutable remoto invocado, y recibe los resultados al regreso de la función remota. Una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado para llamadas RPC posteriores con el fin de eliminar el costo de invocar nuevamente el mismo ejecutable remoto. Cuando el agente y los ejecutables remotos son invocados, los programas remotos obtienen la dirección y el puerto del cliente de la lista de argumentos y se conectan de vuelta al cliente mediante TCP/IP directo o Globus-IO para la transmisión de datos. Debido a que el sistema OmniRPC no utiliza puertos de servicio fijos, el programa cliente asigna puertos no utilizados dinámicamente para esperar la conexión de los ejecutables remotos. Esto evita posibles problemas de seguridad y permite al usuario instalar el sistema OmniRPC sin necesidad de contar con una cuenta privilegiada. Aquí, un recurso de red típico se considera como un grupo de clústeres de PC distribuidos geográficamente. Para los clústeres de PC en una red privada, un proceso agente OmniRPC en el host del servidor funciona como un proxy para relé de comunicaciones entre el cliente y los ejecutables remotos mediante la multiplexación de las comunicaciones utilizando una única conexión. Esta característica, llamada multiplex IO (MXIO), permite a un único cliente utilizar hasta 1,000 hosts de computación remota. Cuando el clúster de PC está dentro de un firewall, el reenvío de puertos de SSH permite que el nodo se comunique con el exterior a través de MXIO. La Figura 4 muestra la descripción general del sistema OmniRPC para un clúster remoto con una dirección IP privada. Para la programación en paralelo, el programador puede utilizar llamadas a procedimientos remotos asíncronos, lo que permite al cliente emitir varias solicitudes mientras continúa con otras computaciones. Las solicitudes se envían a diferentes hosts remotos para ser ejecutadas en paralelo, y el cliente espera o consulta la solicitud completada. En un modelo de programación con llamadas a procedimientos remotos asíncronos, el programador debe manejar las solicitudes pendientes de forma explícita. Debido a que OmniRPC es un sistema seguro para hilos, puede haber varios llamados a procedimientos remotos pendientes en cualquier momento para programas multi-hilo escritos en OpenMP. Modelo de persistencia de OmniRPC 3.2: módulo inicializable automáticamente. OmniRPC soporta eficientemente aplicaciones paralelas típicas de Maestro/Trabajador como programas de ejecución paramétrica. Para aplicaciones de búsqueda paramétrica, que a menudo requieren una gran cantidad de datos idénticos para cada llamada, OmniRPC admite un modelo de persistencia limitado, que está implementado por el módulo inicializable automático. El usuario puede definir un procedimiento de inicialización en el ejecutable remoto para enviar y almacenar datos automáticamente antes de las llamadas reales al procedimiento remoto. Dado que el ejecutable remoto puede aceptar solicitudes para llamadas posteriores, el conjunto de datos que ha sido establecido por el procedimiento de inicialización puede ser reutilizado. Como resultado, el programa del trabajador puede ejecutarse de manera eficiente y reducir la cantidad de datos transmitidos para la inicialización. Una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado para llamadas RPC posteriores. Sin embargo, OmniRPC no garantiza la persistencia del ejecutable remoto, por lo que el conjunto de datos establecido por la llamada anterior no puede ser utilizado por llamadas posteriores. Esto se debe a que una llamada remota realizada por OmniRpcCall puede ser programada en cualquier host remoto de forma dinámica, y los ejecutables remotos pueden ser terminados accidentalmente debido a una reprogramación dinámica o fallos en el host. Sin embargo, la persistencia del ejecutable remoto puede ser explotada en ciertas aplicaciones. Un ejemplo es una aplicación de búsqueda paramétrica: en dicha aplicación, sería eficiente si un gran conjunto de datos pudiera cargarse previamente en la primera llamada, y las llamadas posteriores pudieran realizarse en los mismos datos, pero con diferentes parámetros. Este es el caso para CONFLEX. OmniRPC proporciona un modelo de persistencia restringido a través del módulo inicializable automático (AIM) para apoyar este tipo de aplicación. Si el procedimiento de inicialización está definido en el módulo, el módulo se inicializa automáticamente al invocarlo llamando al procedimiento de inicialización. Cuando el ejecutable remoto se reprograma en diferentes hosts, se llama a la inicialización para inicializar el módulo remoto recién asignado. Esto puede eliminar comunicaciones innecesarias cuando las llamadas RPC utilizan los mismos datos. Para revelar más sobre la diferencia en el progreso entre los casos con OmniRPC AIM y sin OmniRPC AIM, presentamos dos figuras. La Figura 5 ilustra el gráfico de tiempo del progreso de una aplicación típica de OmniRPC utilizando la facilidad OmniRPC AIM, y la Figura 6 ilustra el gráfico de tiempo de la misma aplicación sin la facilidad OmniRPC AIM. En ambas figuras, las líneas entre los diamantes representan los procesos de inicialización, y las líneas entre los puntos representan los cálculos. La línea en negrita indica el momento en que el programa cliente envía los datos al programa trabajador. Es necesario que la aplicación sin la funcionalidad OmniRPC AIM se inicialice en cada RPC. La aplicación que utiliza la funcionalidad OmniRPC AIM puede reutilizar los datos inicializados una vez que el conjunto de datos está inicializado. Esto puede reducir la inicialización en cada RPC. Los trabajadores de la aplicación con AIM pueden calcular de manera eficiente en comparación con la aplicación sin la facilidad de AIM de OmniRPC. 3.3 Implementación de CONFLEX-G utilizando OmniRPC. La Figura 3 muestra una visión general del proceso utilizado en CONFLEX-G. Usando RPCs, CONFLEX-G asigna los procesos de optimización de la estructura de prueba, que son realizados por los nodos de cálculo de un clúster de PC en la versión MPI de CONFLEX, a los nodos computacionales de cada clúster en un entorno de grid. Hay dos cálculos que realizan los programas de trabajador en CONFLEX-G. Uno es la inicialización de un programa de trabajador, y otro es el cálculo de la optimización de la estructura de prueba. Primero, la instalación OmniRPC del AIM se adapta para la inicialización de un programa trabajador. Esta instalación llama automáticamente a la función de inicialización, la cual está contenida en el programa de trabajador, una vez que el programa cliente invoca al programa de trabajador en un nodo remoto. Es necesario que el sistema RPC común, incluido GridRPC, inicialice un programa para cada llamada RPC, ya que la persistencia de datos de los programas trabajadores. Tabla 1: Configuraciones de máquinas en la plataforma de pruebas en red. El nombre del clúster del sitio Máquina Red de Autenticación # de Nodos # de CPUs Univ. de Tsukuba Dennis Dual Xeon 2.4GHz 1Gb Ethernet Globus, SSH 14 28 Alice Dual Athlon 1800+ 100Mb Ethernet Globus, SSH 18 36 TUT Toyo Dual Athlon 2600+ 100Mb Ethernet SSH 8 16 AIST Ume Dual Pentium3 1.4GHz 1Gb Ethernet Globus, SSH 32 64 no es compatible. En OmniRPC, sin embargo, cuando se define la función remota Inicializar en el programa del trabajador y se asigna un nuevo programa de trabajador, correspondiente al otro RPC, para ejecutar, se llama automáticamente a una función Inicializar. Por lo tanto, después de la llamada a la función Initialize para configurar los datos de inicialización comunes, un programa trabajador puede reutilizar estos datos y aumentar la eficiencia de sus procesos. Por lo tanto, cuanto mayor sea el costo de configuración, mayor será el beneficio potencial. Implementamos el programa de trabajador de CONFLEX-G para recibir datos, como parámetros de evaluación de energía, de un programa cliente y para ser inicializado por la función Inicializar. Organizamos el programa del cliente de CONFLEX-G para transferir el archivo de parámetros en el momento de la inicialización del trabajador. Esto permite que la ejecución se realice modificando solo la configuración del cliente si el usuario desea ejecutar CONFLEX-G con un conjunto de datos diferente. Segundo, para calcular la optimización de la estructura de prueba en un programa de trabajador, el programa de trabajador debe recibir los datos, como el arreglo de átomos de la estructura de prueba y el estado de energía interna. El resultado se devuelve al programa cliente después de que el trabajador haya optimizado la estructura de prueba. Dado que la parte de cálculo de la optimización de la estructura en este programa de trabajador puede ser calculada de forma independiente utilizando diferentes parámetros, paralelizamos esta parte utilizando RPC asincrónicos en el lado del cliente. Para llamar a la función de optimización de estructuras en un programa trabajador desde el programa cliente, utilizamos la API OmniRpcCallAsync, la cual está diseñada para RPC asincrónico. Además, la API OmniRpcCallWaitAll espera hasta que se utilicen todas las RPC asíncronas para realizar la sincronización una vez que todas las RPC asíncronas se hayan completado, con el fin de optimizar la estructura de la prueba. El programa cliente que asigna la optimización de la estructura de prueba al nodo de cálculo de un clúster de PC utilizando RPC se describe de la siguiente manera. OmniRpcInit() OmniRpcModuleInit(conflex_search,...); ... mientras( <nuevos conformeros> ) { para cada( <estructuras de prueba> ) OmniRpcCallAsync(conflex_search_worker, ...); OmniRpcWaitAll(); ... Ten en cuenta que la API OmniRpcModuleInit solo devuelve los argumentos necesarios para la inicialización y no ejecutará realmente la función de inicialización. Como se describe arriba, la inicialización real se realiza en la primera llamada remota. Dado que el sistema OmniRPC tiene un programador de round-robin sencillo, no es necesario escribir explícitamente el código para el equilibrio de carga. Por lo tanto, los RPC se asignan automáticamente a los trabajadores inactivos. Tabla 2: Rendimiento de la red entre el nodo maestro del clúster Dennis y el nodo maestro de cada clúster de PC. Rendimiento de ida y vuelta del clúster Tiempo (ms) (Mbps) Dennis 0.23 879.31 Alice 0.18 94.12 Toyo 11.27 1.53 Ume 1.07 373.33 RESULTADOS PRELIMINARES 4.1 Banco de pruebas de la red El banco de pruebas de la red fue construido utilizando recursos informáticos de la Universidad de Tsukuba, la Universidad de Tecnología de Toyohashi (TUT) y el Instituto Nacional de Ciencia y Tecnología Industrial Avanzada (AIST). La Tabla 1 muestra los recursos informáticos utilizados para la red del presente estudio. La Universidad de Tsukuba y AIST están conectadas por una red WAN de 1 Gbps en Tsukuba, y los otros clústeres de PC están conectados por SINET, que es una red de área amplia dedicada a la investigación académica en Japón. La Tabla 2 muestra el rendimiento de la red medida entre el nodo maestro del clúster Dennis y el nodo maestro de cada clúster de PC en el banco de pruebas de la red. El rendimiento de CONFLEX-G En todos los experimentos de CONFLEX-G, el programa cliente se ejecutó en el nodo maestro del clúster Dennis en la Universidad de Tsukuba. El planificador Round-Robin incorporado de OmniRPC se utilizó como planificador de tareas. Se utilizó SSH para un sistema de autenticación, el OminRPCs MXIO, que retransmite la comunicación de E/S entre el programa cliente y los programas trabajadores mediante el reenvío de puertos de SSH, no se utilizó. Se debe tener en cuenta que un programa de trabajador se asigna y se ejecuta en una CPU de un nodo de cálculo en un clúster de PC. Es decir, el número de trabajadores es igual al número de CPUs. Estos programas fueron compilados por el Intel Fortran Compiler 7.0 y gcc 2.95. Se utilizó MPICH, Versión 1.2.5, para comparar el rendimiento entre CONFLEX MPI y CONFLEX-G. Para demostrar la usabilidad de la instalación OmniRPC de AIM, implementamos otra versión de CONFLEX-G que no utilizaba la instalación OmniRPC. El programa del trabajador en esta versión de CONFLEXG debe inicializarse en cada RPC porque el trabajador no conserva el conjunto de datos anterior. Para examinar el rendimiento de CONFLEX-G, seleccionamos dos péptidos y dos proteínas pequeñas como moléculas de prueba: • N-acetil tetra-alanina metilester (AlaX04) • N-acetil hexadeca-alanina metilester (AlaX16) • Construcción de miniproteína TRP-cage TC5B (1L2Y) • Fragmento del extremo N del receptor de PTH (1BL1) La Tabla 3 enumera las características de estas moléculas de muestra. La estructura de prueba de columnas / bucles en esta tabla muestra la Figura 7: Rendimientos de CONFLEX-G, CONFLEX MPI y CONFLEX Original en el clúster Dennis. Figura 8: Proporción de aceleración, que se basa en el tiempo transcurrido de CONFLEX-G utilizando un trabajador en el clúster de Dennis. Figura 9: Rendimiento de CONFLEX-G con y sin la facilidad OmniRPC del módulo inicializable automático para AlaX16. Tabla 3: Características de las moléculas y transmisión de datos para optimizar las estructuras moleculares de prueba en cada código molecular. Tabla 4: Tiempo de búsqueda transcurrido para la conformación molecular de AlaX04. Tabla 6: Tiempo transcurrido de la búsqueda de la estructura de prueba de 1L2Y. Tabla 7: Tiempo transcurrido de la búsqueda de la estructura de prueba de 1BL1. Número total de estructuras del clúster Tiempo de optimización Transcurrido Velocidad transcurrida (# de trabajadores) trabajadores / trabajador / estructura (s) tiempo (s) tiempo (H) hasta Toyo MPI (1) 1 519.0 3,646 189,210 525.61 1.00 Toyo MPI (16) 16 32.4 3,646 120,028 33.34 15.76 Dennis (28) 28 18.5 3,154 61,803 17.16 30.61 Dennis (28) + Ume (56) 84 6.1 4,497 33,502 9.30 56.48 160 número de estructuras de prueba generadas en cada iteración, indicando el grado de paralelismo. La Figura 3 también resume la cantidad de transmisión de datos requerida para la inicialización de un programa de trabajador y para la optimización de cada estructura de prueba. Ten en cuenta que la cantidad de transmisión de datos necesaria para inicializar un programa de trabajador y optimizar una estructura de prueba en la versión MPI de CONFLEX es igual a la de CONFLEX-G. Utilizamos una versión mejorada del campo de fuerza MM2 para asignar una función de energía potencial a varias propiedades geométricas de un grupo de átomos. 4.2.1 Rendimiento en un clúster local. Primero comparamos el rendimiento de CONFLEX-G, la versión MPI de CONFLEX y la versión secuencial original de CONFLEX-G utilizando un clúster local. Investigamos el rendimiento variando el número de trabajadores utilizando el clúster Dennis. Elegimos AlaX04 como molécula de prueba para este experimento. La Figura 7 compara los resultados para el CONFLEX MPI y el CONFLEX-G en un clúster de PC local. El resultado de este experimento muestra que CONFLEX-G puede reducir el tiempo de ejecución a medida que aumenta el número de trabajadores, al igual que en la versión MPI de CONFLEX. Descubrimos que CONFLEX-G logró eficiencias comparables a la versión MPI. Con 28 trabajadores, CONFLEX-G logró una mejora de velocidad de 18.00 veces en comparación con la versión secuencial de CONFLEX. El rendimiento de CONFLEX-G sin la funcionalidad AIM de OmniRPC es peor que el de CONFLEX-G que utiliza la funcionalidad, basado en el aumento en el número de trabajadores. Esto indica que el OmniRPC AIM permite al trabajador calcular de manera eficiente sin necesidad de realizar otros cálculos, como la inicialización o la invocación de programas de trabajador. A medida que se aumenta el número de trabajadores, el rendimiento de CONFLEX-G es ligeramente inferior al de la versión MPI. Esta degradación del rendimiento es causada por diferencias en los procesos de inicialización de los trabajadores de CONFLEX-G y CONFLEX MPI. En el caso de CONFLEX MPI, todos los trabajadores se inicializan antes de la fase de optimización. En el caso de OminRPC, el trabajador es invocado bajo demanda cuando la llamada RPC es emitida realmente. Por lo tanto, la inicialización conlleva este sobrecosto. Dado que el objetivo de CONFLEX-G es explorar las conformaciones de grandes bio-moléculas, el número de estructuras de prueba y el tiempo para optimizar la estructura de prueba podrían ser grandes. En tales casos, el gasto general para invocar e inicializar el programa de trabajador puede ser pequeño en comparación con el tiempo total transcurrido. 4.2.2 Rendimiento para Péptidos en el Banco de Pruebas de la Red En primer lugar, las moléculas de muestra (AlaX04 y AlaX16) se utilizaron para examinar el rendimiento de CONFLEX-G en un entorno de red. La Figura 8 muestra la aceleración lograda al utilizar múltiples clústeres en comparación con el uso de un solo trabajador en el clúster de Dennis. Los resultados detallados se muestran en la Tabla 4 y la Tabla 5. En ambos casos, el mejor rendimiento se obtuvo utilizando 64 trabajadores de la combinación de los clústeres de Dennis y Alice. CONFLEX-G logró una aceleración máxima de 36.08 veces para AlaX04 y una aceleración máxima de 21.91 veces para AlaX16. En el caso de AlaX04, el rendimiento mejora solo cuando el rendimiento de la red entre clústeres es alto. Sin embargo, aunque se utilicen dos o más grupos en un entorno de red de área amplia, la mejora en el rendimiento fue leve debido a que el tiempo de optimización de una estructura de prueba generada a partir de AlaX04, una molécula pequeña, es corto. Además, los gastos generales necesarios para la invocación de un programa de trabajador y la transmisión de datos a través de la red consumen una gran parte del tiempo de procesamiento restante. En particular, la transmisión de datos necesaria para la inicialización de un programa de trabajador es de 2 MB. En el caso del clúster Toyo, donde el rendimiento de la red entre el programa cliente y los programas trabajadores es deficiente, el tiempo de transmisión de datos al programa trabajador requería aproximadamente 6.7 segundos. Dado que el tiempo de transmisión fue más largo que el tiempo de procesamiento de una optimización de estructura en CONFLEX-G, la mayor parte del tiempo se dedicó a esta transmisión de datos. Por lo tanto, incluso si CONFLEX-G utiliza un gran número de nodos de cálculo en un entorno de red de área amplia, no se obtiene el beneficio de utilizar un recurso de cuadrícula. En el caso de AlaX16, CONFLEX-G logró una aceleración al utilizar dos o más clústeres de PC en nuestro banco de pruebas en red. Esto se debió a que el tiempo de cálculo en el programa del trabajador era largo y los costos adicionales, como la latencia de red y la invocación de programas de trabajador, se volvieron relativamente pequeños y pudieron ocultarse. El mejor rendimiento se obtuvo utilizando 64 trabajadores en los clústeres de Dennis y Alice. En el caso de AaX16, el rendimiento logrado fue un aumento de velocidad de 36.08 veces. La Figura 9 revela el efecto de utilizar la facilidad del OmniRPC AIM en el rendimiento de CONFLEX-G. En la mayoría de los casos, CONFLEX-G con la instalación de OmniRPC AIM logró un mejor rendimiento que CONFLEX-G sin la instalación. En particular, la facilidad OmniRPC AIM fue ventajosa al usar dos clústeres conectados por una red de bajo rendimiento. Los resultados indican que la instalación OmniRPC AIM puede mejorar el rendimiento en el entorno de la red. 4.2.3 Rendimiento para proteínas pequeñas en el banco de pruebas de la red. Finalmente, exploramos la conformación molecular utilizando CONFLEX-G para moléculas grandes. En un entorno de cuadrícula, este experimento se llevó a cabo utilizando los clústeres Dennis y Ume. En este experimento, utilizamos dos proteínas, 1L2Y y 1BL1. La Tabla 6 y la Tabla 7 muestran el rendimiento de CONFLEX-G en el entorno de la red y el de CONFLEX MPI en el clúster de Toyo, respectivamente. Los incrementos de velocidad en estas tablas fueron calculados respectivamente basados en el rendimiento de un trabajador y 16 trabajadores del clúster Toyo utilizando CONFLEX MPI. CONFLEX-G con 84 trabajadores en los grupos de Dennis y Ume obtuvo aceleraciones máximas de 56.5 veces para 1L2Y y 34.5 veces para 1L2Y. Dado que el tiempo de cálculo para la optimización de la estructura requería una gran cantidad de tiempo, la proporción de gastos generales, incluidas tareas como la invocación de un programa de trabajador y la transmisión de datos para la inicialización, se volvió muy pequeña, por lo que el rendimiento de CONFLEX-G mejoró. Descubrimos que el desequilibrio de carga en el tiempo de procesamiento de la optimización para cada estructura de prueba causó una degradación del rendimiento. Cuando obtuvimos el mejor rendimiento para 1L2Y utilizando los cúmulos de Dennis y Ume, el tiempo para la optimización de cada estructura varió de 190 a 27,887 segundos, y la proporción entre los tiempos más largos y más cortos fue de 13.4. Para 1BL1, la proporción de tiempo mínimo sobre tiempo máximo fue de 190. Además, para que el programa del trabajador espere hasta que se complete la optimización de todas las estructuras de prueba, se descubrió que todos los programas de trabajador esperaban en un estado inactivo durante aproximadamente 6 horas. Esto ha causado la degradación del rendimiento de CONFLEX-G. 161 4.3 Discusión En esta subsección, discutimos la mejora del rendimiento reflejada en nuestros experimentos. Explotando el paralelismo - Para aprovechar más recursos computacionales, es necesario aumentar el grado de paralelismo. En este experimento, el grado de paralelismo no fue tan grande en el caso de las moléculas de muestra. Al utilizar un conjunto de más de 500 nodos informáticos para 1BL1, el número de estructuras de un solo ensayo asignadas a cada trabajador será solo de uno o dos. Si se asignan más de 100 estructuras de prueba a cada programa de trabajador, el cálculo se puede realizar de manera más eficiente debido a la reducción de la sobrecarga para la invocación y la inicialización de los trabajadores a través de la facilidad de OmniRPC AIM. Una idea para aumentar el paralelismo es superponer la ejecución de dos o más conjuntos de estructuras de prueba. En el algoritmo actual, se genera un conjunto de estructuras de prueba a partir de una estructura inicial y se calculan las optimizaciones para todas las estructuras de este conjunto. Además, esto ayudará a mejorar el desequilibrio de carga. Al hacer que otros conjuntos de estructuras de prueba se superpongan, incluso si algunas optimizaciones requieren mucho tiempo, la optimización de las estructuras en otros conjuntos se puede ejecutar para compensar a los trabajadores inactivos de otras optimizaciones. Sin embargo, no está claro cómo dicha modificación del algoritmo podría afectar la calidad de los resultados finales en términos de una búsqueda de conformación. Mejora en el desequilibrio de carga al optimizar cada estructura de prueba: la Tabla 8 enumera las estadísticas de los tiempos de optimización de las estructuras de prueba generadas para cada molécula de muestra medida utilizando 28 trabajadores en el clúster de Dennis. Cuando se utilizan dos o más conjuntos de grupos de PC, la mejora en el rendimiento se ve obstaculizada por el desequilibrio de carga en la optimización de las estructuras de prueba. El tiempo más largo para optimizar una estructura de prueba fue casi 24 veces más largo que el tiempo más corto. Además, los demás trabajadores deben esperar hasta que el trabajo más largo haya terminado, por lo que el tiempo total de ejecución no se puede reducir. Cuando CONFLEX-G buscó los conformeros de 1BL1 mediante el clúster de Dennis, el tiempo de cálculo más largo de la optimización de la estructura de prueba representó aproximadamente el 80% del tiempo transcurrido. Por lo tanto, hay dos posibles soluciones para el desequilibrio de carga. • Es necesario refinar el algoritmo utilizado para generar la estructura de prueba, que suprime la variación temporal para optimizar una estructura de prueba en CONFLEX. Esto permite que CONFLEX-G logre un alto rendimiento al utilizar muchos recursos informáticos. • Una de las soluciones es superponer las ejecuciones para dos o más conjuntos de estructuras de prueba. En los algoritmos actuales, se genera un conjunto de estructuras de prueba a partir de una estructura inicial y el cálculo continúa hasta que se calculen todas las estructuras de este conjunto. Al tener otros conjuntos de estructuras de prueba, incluso si una búsqueda de estructuras lleva mucho tiempo, un trabajo puede ejecutarse para compensar el desequilibrio de carga causado por otros trabajos. Sin embargo, no está claro cómo tal modificación de los algoritmos podría afectar la eficiencia. En este experimento, utilizamos un programador de round-robin incorporado simple de OmniRPC, que es necesario para aplicar el programador que asigna estructuras con largos tiempos de optimización a una tabla de alto rendimiento. Tabla 8: Estadísticas del tiempo transcurrido de la optimización de la estructura de prueba utilizando 28 trabajadores en el clúster Dennis. Código de Varianza Promedio Mínimo Máximo Molecular (s) (s) (s) AlaX04 2.0 11.3 5.3 3 AlaX16 47.6 920.0 154.2 5404 1L2Y 114.2 13331.4 803.2 636782 1BL1 121.0 29641.8 3153.5 2734811 nodos y estructuras con tiempos de optimización cortos a nodos de bajo rendimiento. En general, sin embargo, podría ser difícil predecir el tiempo necesario para la optimización de la estructura del ensayo. Paralelización del programa del trabajador para acelerar y optimizar una estructura de prueba - En la implementación actual, no paralelizamos el programa del trabajador. Para acelerar las estructuras de prueba, la programación híbrida utilizando OmniRPC y OpenMP en una máquina SMP (Symmetric Multiple Processor) puede ser uno de los métodos alternativos para mejorar el rendimiento general. TRABAJO RELACIONADO Recientemente, se ha desarrollado un algoritmo que resuelve los problemas de paralelización y comunicación en procesadores poco conectados para ser utilizados en simulaciones. El proyecto Folding@home simula escalas de tiempo miles a millones de veces más largas que las logradas previamente. Esto nos ha permitido simular el plegamiento por primera vez y examinar directamente enfermedades relacionadas con el plegamiento. SETI@home es un programa para buscar vida extraterrestre mediante el análisis de señales de radio telescopio utilizando datos de telescopios de diferentes sitios mediante la transformada de Fourier. SETI@home aborda problemas inmensamente paralelos, en los cuales los cálculos pueden dividirse fácilmente entre varios ordenadores. Los fragmentos de datos del radiotelescopio pueden asignarse fácilmente a diferentes computadoras. La mayoría de estos esfuerzos desarrollan explícitamente una aplicación de acoplamiento como una aplicación paralela utilizando un lenguaje de programación paralela de propósito especial y middleware, como MPI, lo cual requiere habilidades y esfuerzo de desarrollo. Sin embargo, las habilidades y esfuerzo necesarios para desarrollar una aplicación de cuadrícula pueden no ser necesarios para OmniRPC. Nimrod/G[15] es una herramienta para modelado paramétrico distribuido e implementa una granja de tareas paralelas para simulaciones que requieren varios parámetros de entrada variables. Nimrod incorpora un componente de programación distribuida que puede gestionar la programación de experimentos individuales en computadoras inactivas en una red de área local. Nimrod se ha aplicado en aplicaciones que incluyen bioinformática, investigación de operaciones y modelado molecular para el diseño de fármacos. NetSolve es una instalación de RPC similar a OmniRPC y Ninf, que proporciona una interfaz de programación similar y un mecanismo de equilibrio de carga automático. Ninf-G[7] es una implementación habilitada para grid de Ninf y proporciona un sistema GridRPC[10] que utiliza LDAP para gestionar la base de datos de ejecutables remotos, pero no admite clústeres que involucren direcciones IP privadas o direcciones dentro de un firewall. Matsuoka et al. [16] también han discutido varios problemas de diseño relacionados con los sistemas de RPC en malla. 162 6. CONCLUSIONES Y TRABAJO FUTURO Hemos diseñado e implementado CONFLEX-G utilizando OmniRPC. Informamos sobre su rendimiento en un banco de pruebas en red de varios clústeres de PC distribuidos geográficamente. Para explorar la conformación de grandes biomoléculas, se utilizó CONFLEXG para generar estructuras de prueba de las moléculas y asignar trabajos para optimizarlas mediante mecánica molecular en la cuadrícula. OmniRPC proporciona un modelo de persistencia restringido para que el módulo se inicialice automáticamente al invocarse llamando al procedimiento de inicialización. Esto puede eliminar la comunicación innecesaria y la inicialización en cada llamada en CONFLEX-G. CONFLEX-G puede lograr un rendimiento comparable al de CONFLEX MPI y aprovecha más recursos informáticos al permitir el uso de múltiples clústeres de PC en la red. El resultado experimental muestra que CONFLEX-G logró una aceleración de 56.5 veces para la molécula 1BL1, donde la molécula consta de un gran número de átomos y cada optimización de la estructura de prueba requiere mucho tiempo. El desequilibrio de carga de las optimizaciones de la estructura de prueba puede causar degradación del rendimiento. Necesitamos refinar el algoritmo utilizado para generar la estructura de prueba con el fin de mejorar la optimización del equilibrio de carga para las estructuras de prueba en CONFLEX. Los estudios futuros incluirán el desarrollo de herramientas de implementación y un examen de la tolerancia a fallos. En el OmniRPC actual, el registro de un programa de ejecución en hosts remotos y despliegues de programas de trabajadores se configuran manualmente. Se requerirán herramientas de implementación a medida que se incremente el número de hosts remotos. En entornos de cuadrícula en los que el entorno cambia dinámicamente, también es necesario contar con soporte para la tolerancia a fallos. Esta característica es especialmente importante en aplicaciones a gran escala que requieren cálculos prolongados en un entorno de cuadrícula. Planeamos refinar el algoritmo de optimización conformacional en CONFLEX para explorar el espacio de búsqueda de conformaciones de moléculas biológicas más grandes como la proteasa del VIH utilizando hasta 1000 trabajadores en un entorno de cuadrícula. AGRADECIMIENTOS Esta investigación fue apoyada en parte por una Subvención de la Secretaría de Educación, Cultura, Deportes, Ciencia y Tecnología de Japón, No. 14019011, 2002, y como parte del Programa de Investigación y Desarrollo para Aplicar la Ciencia y Tecnología Computacional Avanzada por la Corporación de Ciencia y Tecnología de Japón (Investigación en la plataforma de computación en red para el diseño de fármacos). Nos gustaría agradecer al centro de investigación de tecnología de red, AIST, Japón por proporcionar recursos informáticos para nuestro experimento. 8. REFERENCIAS [1] H. Goto y E. Osawa. Un algoritmo eficiente para buscar conformaciones de baja energía de moléculas cíclicas y acíclicas. J. Quím. Soc., Perkin Trans, 2:187-198, 1993. [2] M. Sato, T. Boku, y D. Takahashi. OmniRPC: un sistema de RPC en malla para programación paralela en entornos de clúster y malla. En Proc. de CCGrid2003, páginas 219-229, 2003. [3] M. Sato, M. Hirano, Y. Tanaka y S. Sekiguchi. OmniRPC: una instalación de RPC en Grid para la computación en clúster y global en OpenMP. En Proc. del Taller sobre Aplicaciones y Herramientas OpenMP 2001 (LNCS 2104), páginas 130-135, 2001. [4] Proyecto OmniRPC. http://www.omni.hpcc.jp/omnirpc/. [5] M. Sato, H. Nakada, S. Sekiguchi, S. Matsuoka, U. Nagashima y H. Takagi. Ninf: Una Biblioteca de Información Basada en Red para la Infraestructura de Computación Global en Todo el Mundo. En HPCN Europe, páginas 491-502, 1997. [6] Proyecto Ninf. http://ninf.apgrid.org/. [7] Y. Tanaka, H. Nakada, S. Sekiguchi, T. Suzumura y S. Matsuoka. Ninf-G: Una Implementación de Referencia de Middleware de Programación basado en RPC para la Computación en Grid. Revista de Computación en Red, 1(1):41-51, 2003. [8] D. Arnold, S. Agrawal, S. Blackford, J. Dongarra, M. Miller, K. Seymour, K. Sagi, Z. Shi y S. Vadhiyar. Guía del usuario de NetSolve V1.4.1. Departamento de Computación Innovador. Informe técnico ICL-UT-02-05, Universidad de Tennessee, Knoxville, TN, junio de 2002. [9] Grupo de gestión de objetos. http://www.omg.org/. [10] K. Seymour, H. Nakada, S. Matsuoka, J. Dongarra, C. Lee y H. Casanova. GridRPC: Una API de Llamada a Procedimientos Remotos para la Computación en Grid. [11] H. Goto, T. Takahashi, Y. Takata, K. Ohta y U. Nagashima. Conflex: Comportamientos conformacionales de polipéptidos según lo predicho por una búsqueda en el espacio conformacional. En Nanotech2003, volumen 1, páginas 32-35, 2003. [12] I. Foster y C. Kesselman. Globus: Un conjunto de herramientas de infraestructura de metacomputación. La Revista Internacional de Aplicaciones de Supercomputadoras y Computación de Alto Rendimiento, 11(2):115-128, Verano 1997. [13] Stefan M. Larson, Christopher D. Snow, Michael Shirts y Vijay S. Pande. Folding@home y genome@home: Utilizando computación distribuida para abordar problemas previamente intratables en biología computacional. Genómica Computacional, 2002. Proyecto seti@home. http://setiathome.ssl.berkeley.edu/. R. Buyya, K. Branson, J. Giddy y D. Abramson. El laboratorio virtual: un conjunto de herramientas para habilitar la modelización molecular distribuida para el diseño de fármacos en la red mundial. Concurrencia y Computación: Práctica y Experiencia, 15(1):1-25, enero de 2003. [16] S. Matsuoka, H. Nakada, M. Sato y S. Sekiguchi. Problemas de diseño de sistemas de servidores habilitados para redes para la red. En Proc. de GRID 2000 (LNCS 1971), páginas 4-17, 2000. 163",
    "original_sentences": [
        "Implementation and Performance Evaluation of CONFLEX-G: Grid-enabled Molecular Conformational Space Search Program with OmniRPC Yoshihiro Nakajima Graduate School of Systems & Information Engineering, University of Tsukuba Tsukuba, 305-8577, Japan yoshihiro@hpcs.is.tsukuba.ac.jp Mitsuhisa Sato Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan msato@is.tsukuba.ac.jp Hitoshi Goto Knowledge-based Information Engineering, Toyohashi University of Technology Toyohashi, 441-8580, Japan gotoh@cochem2.tutkie.tut.ac.jp Taisuke Boku, Daisuke Takahashi Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan {taisuke,daisuke}@hpcs.is.tsukuba.ac.jp ABSTRACT CONFLEX-G is the grid-enabled version of a molecular conformational space search program called CONFLEX.",
        "We have implemented CONFLEX-G using a grid RPC system called OmniRPC.",
        "In this paper, we report the performance of CONFLEX-G in a grid testbed of several geographically distributed PC clusters.",
        "In order to explore many conformation of large bio-molecules, CONFLEX-G generates trial structures of the molecules and allocates jobs to optimize a trial structure with a reliable molecular mechanics method in the grid.",
        "OmniRPC provides a restricted persistence model to support the parametric search applications.",
        "In this model, when the initialization procedure is defined in the RPC module, the module is automatically initialized at the time of invocation by calling the initialization procedure.",
        "This can eliminate unnecessary communication and initialization at each call in CONFLEX-G. CONFLEXG can achieve performance comparable to CONFLEX MPI and can exploit more computing resources by allowing the use of a cluster of multiple clusters in the grid.",
        "The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times in the case of the 1BL1 molecule, where the molecule consists of a large number of atoms, and each trial structure optimization requires significant time.",
        "The load imbalance of the optimization time of the trial structure may also cause performance degradation.",
        "Categories and Subject Descriptors C.2.4 [Computer Systems Organization]: COMPUTERCOMMUNICATION NETWORK-Distributed Systems; J.2.4 [Computer Applications]: PHYSICAL SCIENCES AND ENGINEERING General Terms Design,Performance 1.",
        "INTRODUCTION Elucidation of the stable conformations and the folding process of proteins is one of the most fundamental and challenging goals in life science.",
        "While some of the most common secondary structures (e.g., certain types of helix, the beta-strand, and the coil) are well known, precise analysis of the thousands of chemically important conformers and pico-second-order analysis of their conformational interconversions via the transition states on the potential energy surface are required for the microsecond-order investigation of the folding process toward the tertiary structure formations.",
        "Recently, the concept of the computational grid has begun to attract significant interest in the field of high-performance network computing.",
        "Rapid advances in wide-area networking technology and infrastructure have made it possible to construct large-scale, high-performance distributed computing environments, or computational grids, that provide dependable, consistent and pervasive access to enormous computational resources.",
        "CONFLEX is one of the most efficient and reliable conformational space search programs[1].",
        "We have applied this 154 program to parallelization using global computing.",
        "The performance of the parallelized CONFLEX enables exploration of the lower-energy region of the conformational space of small peptides within an available elapsed time using a local PC cluster.",
        "Since trial structure optimization in CONFLEX is calculated via molecular mechanics, conformational space search can be performed quickly compared to that using molecular orbital calculation.",
        "Although the parallelized version of CONFLEX was used to calculate in parallel the structure optimization, which takes up over 90% of the processing in the molecular conformation search, sufficient improvement in the speedup could not be achieved by this method alone.",
        "Therefore, for high polymers from live organisms, such as HIV protease, the use one PC cluster is insufficient due to the requirement for optimization of a huge number of trial structures.",
        "This requires the vast computer resources of a grid computing environment.",
        "In this paper, we describe CONFLEX-G, a grid-enabled molecular conformational search program, using OmniRPC and report its performance in a grid of several PC clusters which are geographically distributed.",
        "The prototype CONFLEX-G allocates calculation trial structures optimization, which is a very time-consuming task, to worker nodes in the grid environment in order to obtain high throughput.",
        "In addition, we compare the performance of CONFLEX-G in a local PC cluster to that in a grid testbed.",
        "OmniRPC[2, 3, 4] is a thread-safe implementation of Ninf RPC[5, 6] which is a Grid RPC facility for grid environment computing.",
        "Several systems adopt the concept of the RPC as the basic model for grid environment computing, including Ninf-G[7], NetSolve[8] and CORBA[9].",
        "The RPCstyle system provides an easy-to-use, intuitive programming interface, allowing users of the grid system to easily create grid-enabled applications.",
        "In order to support parallel programming, an RPC client can issue asynchronous call requests to a different remote computer to exploit networkwide parallelism via OmniRPC.",
        "In this paper, we propose the OmniRPC persistence model to a Grid RPC system and demonstrate its effectiveness.",
        "In order to support a typical application for a grid environment, such as a parametric search application, in which the same function is executed with different input parameters on the same data set.",
        "In the current GridRPC system[10], the data set by the previous call cannot be used by subsequent calls.",
        "In the OmniRPC system, once a remote executable is invoked, the client attempts to use the invoked remote executable and its initialized state for subsequent RPC calls to the same remote functions in order to eliminate the invocation cost of each call.",
        "This paper demonstrates that CONFLEX-G is able to exploit the huge computer resources of a grid environment and search large-scale molecular conformers.",
        "We demonstrate CONFLEX-G on our grid testbed using the actual protein as a sample molecule.",
        "The OmniRPC facility of the automatic initializable module (AIM) allows the system to efficiently calculate numerous conformers.",
        "Furthermore, by using OmniRPC, the user can grid-parallelize the existing application, and move from the cluster to the grid environment without modifying program code and compiling the program.",
        "In addition, the user can easily build a private grid environment.",
        "The rest of this paper is organized as follows.",
        "An overview Selection of Initial Structure Conformations Database Local Perturbation Geometry Optimization Comparison and Registration Figure 1: Algorithm of conformational space search in the original CONFLEX. of the CONFLEX system is presented in Section2, and the implementation and design of CONFLEX-G are described in Section 3.",
        "We report experimental results obtained using CONFLEX-G and discuss its performance in Section 4.",
        "In Section 6, we present conclusions and discuss subjects for future study. 2.",
        "CONFLEX CONFLEX [1] is an efficient conformational space search program, which can predominately and exhaustively search the conformers in the lower-energy region.",
        "Applications of CONFLEX include the elucidation of the reactivity and selectivity of drugs and possible drug materials with regard to their conformational flexibility. 2.1 Algorithm of ConformationalSpaceSearch The basic strategy of CONFLEX is an exhaustive search of only the low-energy regions.",
        "The original CONFLEX performs the following four major steps: 1.",
        "Selection of an initial structure among the previously discovered unique conformers sorted in a conformational database. (An input structure is used as the first initial structure at the beginning of a search execution only.) 2.",
        "Generation of trial structures by local perturbations to the selected initial structure. 3.",
        "Geometry optimization for the newly generated trial structures. 4.",
        "Comparison of the successfully optimized (trial) structures with the other conformers stored in a conformation database, and preservation of newly discovered unique conformers in the database.",
        "Figure 1 shows the outline of CONFLEX, the original conformational space search algorithm.",
        "These procedures incorporate two unique strategies.",
        "Figure 2 shows the strategies for generating local perturbations in CONFLEX.",
        "The first strategy involves both corner flapping and edge flipping for the ring atoms and stepwise rotation for side-chains or backbone chains.",
        "These methods provide a highly efficient way to produce several good trial structures.",
        "These perturbations can be considered to mimic 155 Stepwise Rotation Corner Flap Edge Flip Figure 2: Strategies used to generate the local perturbations. a barrier-crossing step in the elementary process of the thermal conformational inter-conversion.",
        "Actually, the perturbations of an initial structure correspond to the precise performance around the space of the initial structure because of localization and weakness of the perturbation.",
        "The selection rule of the initial structure, the LowestConformer-First rule, is the second strategy for directing the conformation search expanded to the low-energy regions.",
        "The initial structure is selected as the set of lowest energy conformers stored in the conformation database.",
        "This rule is effective in moving down the search space toward lower energy regions, like water from a stream running into an empty reservoir, while filling local depressions along the way.",
        "Therefore, these tactical procedures of the CONFLEX search are referred to as the Reservoir Filling Algorithm.",
        "In order to remain in the low-energy region and perform an exhaustive search, the search limit (SEL), which determines the maximum energy of the initial structures, is pre-defined.",
        "Gradually increasing SEL allows only the lowenergy conformers to be searched and avoids straying into unnecessarily high-energy regions. 2.2 Parallelization of CONFLEX for Cluster For application to over 100 atoms, CONFLEX was improved using high-performance parallel computing techniques.",
        "In the CONFLEX search algorithm, the geometry optimization procedures always take 95% of the elapsed time of the search execution.",
        "Therefore, we parallelized this optimization using the Master/Worker parallelization technique.",
        "We modified the search procedures as follows.",
        "After trial structures are generated (step 2), they are temporarily stored in a task pool on the master node.",
        "Then, each worker node is dynamically supplied with one trial structure from the master node.",
        "After an optimization on a worker node is finished, the worker is immediately supplied with another trial structure.",
        "When all of the trial structures related to a given initial structure are optimized, only the master procedure is used in comparison.",
        "By parallelizing CONFLEX, the speedup of searching molecular conformers obtained is as reported in[11]. 3.",
        "CONFLEX-G Originally, CONFLEX was intended for use in exploring the conformers of the large bio-molecules, such HIV protease.",
        "In such molecules, the number of trial structures increases and the time required for optimization of RPC Selection of Initial Structure Conformations Database Local Perturbation Comparison and Registration Client program Task Pool of Geometry Optimization RPC RPC Grid environment Cluster B Cluster A Cluster C Trial structureTrial structure Trial structure Trial structure Figure 3: Procedure of CONFLEX-G. agent rexrex rex Client jones.tsukuba.ac.jp hpc-serv.hpcc.jp hpc1 hpc2 hpc3 Agent invocation communicationNetwork Figure 4: Overview of the OmniRPC system for the remote cluster having a private IP address. the trial structure becomes immense.",
        "We implemented the parallelized version of CONFLEX, which cannot treat such molecules using only a local PC cluster.",
        "In order to exploit the vast computing resources of a grid environment, we designed and implemented CONFLEX-G, which is a grid-enabled version of CONFLEX, with the OmniRPC system.",
        "CONFLEX-G allocates jobs to optimize a trial structure to the computational nodes of each cluster in the grid environment.",
        "Figure 3 shows the process of CONFLEX-G.",
        "The worker programs are initialized by the initialize method, which is provided by the OmniRPC AIM facility at worker invocation.",
        "At each RPC call, the initialized state is reused on the remote host.",
        "In other words, the client program can eliminate the initialization for each RPC call, and can therefore optimize trial structures efficiently. 3.1 The OmniRPC system OmniRPC is a Grid RPC system which allows seamless parallel programming from a PC cluster to a grid environment.",
        "OmniRPC inherits its API and basic architecture from Ninf.",
        "A client and the remote computational hosts which execute the remote procedures may be connected via a network.",
        "The remote libraries are implemented as an executable program which contains a network stub routine as its main routine.",
        "We call this executable program a remote executable program (rex).",
        "When the OmniRPC client program starts, the initialization function of OmniRPC system invokes the OmniRPC agent program omrpc-agent in the remote hosts listed in the host file.",
        "To invoke the agent, the user can use the remote shell command rsh in a local-area network, the GRAM (Globus Resource Allocation Manager) API of the Globus 156 toolkit[12] in a grid environment, or the secure remote shell command ssh.",
        "The user can switch the configurations only by changing the host file.",
        "OmniRpcCall is a simple client programming interface for calling remote functions.",
        "When OmniRpcCall makes a remote procedure call, the call is allocated to an appropriate remote host.",
        "When the client issues the RPC request, it requests that the agent in the selected host submit the job of the remote executable with the local job scheduler specified in the host file.",
        "If the job scheduler is not specified, the agent executes the remote executable in the same node by the fork system call.",
        "The client sends the data of the input arguments to the invoked remote executable, and receives the results upon return of the remote function.",
        "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls in order to eliminate the cost of invoking the same remote executable again.",
        "When the agent and the remote executables are invoked, the remote programs obtain the client address and port from the argument list and connect back to the client by direct TCP/IP or Globus-IO for data transmission.",
        "Because the OmniRPC system does not use any fixed service ports, the client program allocates unused ports dynamically to wait for connection from the remote executables.",
        "This avoids possible security problems, and allows the user to install the OmniRPC system without requiring a privileged account.",
        "Herein, a typical grid resource is regarded as a cluster of geographically distributed PC clusters.",
        "For PC clusters on a private network, an OmniRPC agent process on the server host functions as a proxy to relay communications between the client and the remote executables by multiplexing the communications using a single connection.",
        "This feature, called multiplex IO (MXIO), allows a single client to use up to 1,000 remote computing hosts.",
        "When the PC cluster is inside a firewall, the port forwarding of SSH enables the node to communicate to the outside with MXIO.",
        "Figure 4 shows the overview of the OmniRPC system for a remote cluster with a private IP address.",
        "For parallel programming, the programmer can use asynchronous remote procedure calls, allowing the client to issue several requests while continuing with other computations.",
        "The requests are dispatched to different remote hosts to be executed in parallel, and the client waits or polls the completed request.",
        "In such a programming model with asynchronous remote procedure calls, the programmer should handle outstanding requests explicitly.",
        "Because OmniRPC is a thread-safe system, a number of remote procedure calls may be outstanding at any time for multi-threaded programs written in OpenMP. 3.2 OmniRPC persistence model: automatic initializable module OmniRPC efficiently supports typical Master/Worker parallel applications such as parametric execution programs.",
        "For parametric search applications, which often require large amount of identical data for each call, OmniRPC supports a limited persistence model, which is implemented by the automatic initializable module.",
        "The user can define an initialization procedure in the remote executable in order to send and store data automatically in advance of actual remote procedure calls.",
        "Since the remote executable may accept requests for subsequent calls, the data set which has been set by the initialization procedure can be re-used.",
        "As a result, the worker program can execute efficiently and reduce the amount of data transmitted for initialization.",
        "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls.",
        "However, OmniRPC does not guarantee persistence of the remote executable, so that the data set by the previous call cannot be used by subsequent calls.",
        "This is because a remote call by OmniRpcCall may be scheduled to any remote host dynamically, and remote executables may be terminated accidentally due to dynamic re-scheduling or host faults.",
        "However, persistence of the remote executable can be exploited in certain applications.",
        "An example is a parametric search application: in such an application, it would be efficient if a large set of data could be pre-loaded by the first call, and subsequent calls could be performed on the same data, but with different parameters.",
        "This is the case for CONFLEX.",
        "OmniRPC provides a restricted persistence model through the automatic initializable module (AIM) in order to support this type of application.",
        "If the initialization procedure is defined in the module, the module is automatically initialized at invocation by calling the initialization procedure.",
        "When the remote executable is re-scheduled in different hosts, the initialization is called to initialize the newly allocated remote module.",
        "This can eliminate unnecessary communications when RPC calls use the same data.",
        "To reveal more about the difference in progress between the cases with OmniRPC AIM and without OmniRPC AIM, we present two figures.",
        "Figure 5 illustrates the time chart of the progress of a typical OmniRPC application using the OmniRPC AIM facility, and Figure 6 illustrates the time chart of the same application without the OmniRPC AIM facility.",
        "In both figures, the lines between diamonds represent the processes of initialization, and the lines between points represent the calculation.",
        "The bold line indicates the time when the client program sends the data to a worker program.",
        "It is necessary for the application without the OmniRPC AIM facility to initialize at each RPC.",
        "The application using the OmniRPC AIM facility can re-use the initialized data once the data set is initialized.",
        "This can reduce the initialization at each RPC.",
        "The workers of the application with the AIM can calculate efficiently compared to the application without the OmniRPC AIM facility. 3.3 Implementation of CONFLEX-G using OmniRPC Figure 3 shows an overview of the process used in CONFLEXG.",
        "Using RPCs, CONFLEX-G allocates the processes of trial structure optimization, which are performed by the computation nodes of a PC cluster in the MPI version of CONFLEX, to the computational nodes of each cluster in a grid environment.",
        "There are two computations which are performed by the worker programs in CONFLEX-G. One is the initialization of a worker program, and another is the calculation of trial structure optimization.",
        "First, the OmniRPC facility of the AIM is adapted for initialization of a worker program.",
        "This facility automatically calls the initialization function, which is contained in the worker program, once the client program invokes the worker program in a remote node.",
        "It is necessary for the common RPC system including GridRPC to initialize a program for every RPC call, since data persistence of worker programs 157 time Client Program Worker Program 1 Worker Program 2 initialization initialization calculation calculation calculation calculation calculation Parallelized using asynchronous RPCs Figure 5: Time chart of applications using the OmniRPC facility of the automatic initializable module. time Client Program Worker Program 1 Worker Program 2 initialization initializationcalculation calculation calculation calculation initialization initialization initialization Parallelized using asynchronous RPCs calculation Figure 6: Time chart of applications without the OmniRPC facility of the automatic initializable module.",
        "Table 1: Machine configurations in the grid testbed.",
        "Site Cluster Name Machine Network Authentication # of Nodes # of CPUs Univ. of Tsukuba Dennis Dual Xeon 2.4GHz 1Gb Ethernet Globus, SSH 14 28 Alice Dual Athlon 1800+ 100Mb Ethernet Globus, SSH 18 36 TUT Toyo Dual Athlon 2600+ 100Mb Ethernet SSH 8 16 AIST Ume Dual Pentium3 1.4GHz 1Gb Ethernet Globus, SSH 32 64 is not supported.",
        "In OmniRPC, however, when the Initialize remote function is defined in the worker program and a new worker program, corresponding to the other RPC, is assigned to execute, an Initialize function is called automatically.",
        "Therefore, after the Initialize function call to set up common initialization data, a worker program can re-use this data and increase the efficiency of its processes.",
        "Thus, the higher the set-up cost, the greater the potential benefit.",
        "We implemented the worker program of CONFLEX-G to receive data, such as evaluation parameters of energy, from a client program and to be initialized by the Initialize function.",
        "We arranged the client program of CONFLEX-G to transfer the parameter file at the time of worker initialization.",
        "This enables execution to be performed by modify only the client setting if the user wants to run CONFLEX-G with a different data set.",
        "Second, in order to calculate trial structure optimization in a worker program, the worker program must receive the data, such as the atom arrangement of the trial structure and the internal energy state.",
        "The result is returned to the client program after the worker has Optimized the trial structure.",
        "Since the calculation portion of the structure optimization in this worker program can be calculated independently using different parameters, we parallelized this portion using asynchronous RPCs on the client side.",
        "To call the structure optimization function in a worker program from the client program, we use the OmniRpcCallAsync API, which is intended for asynchronous RPC.",
        "In addition, OmniRpcCallWaitAll API which waits until all asynchronous RPCs are used in order to perform synchronization with all of the asynchronous RPCs completed so as to optimize the trial structure.",
        "The client program which assigns trial structure optimization to the calculation node of a PC cluster using RPC is outlined as follows.",
        "OmniRpcInit() OmniRpcModuleInit(conflex_search,...); ... while( <new conformers> ) { foreach( <trial structures> ) OmniRpcCallAsync(conflex_search_worker, ...); OmniRpcWaitAll(); ...",
        "Note that OmniRpcModuleInit API returns only the arguments needed for initialization and will not actually execute the Initialization function.",
        "As described above, the actual Initialization is performed at the first remote call.",
        "Since the OmniRPC system has an easy round-robin scheduler, we do not have to explicitly write the code for load balance.",
        "Therefore, RPCs are allocated automatically to idle workers. 158 Table 2: Network performance between the master node of the Dennis cluster and the master node of each PC cluster.",
        "Round-Trip Throughput Cluster Time (ms) (Mbps) Dennis 0.23 879.31 Alice 0.18 94.12 Toyo 11.27 1.53 Ume 1.07 373.33 4.",
        "PRELIMINARY RESULTS 4.1 Grid Testbed The grid testbed was constructed by computing resources at the University of Tsukuba, the Toyohashi University of Technology (TUT) and the National Institute of Advanced Industrial Science and Technology (AIST).",
        "Table 1 shows the computing resources used for the grid of the present study.",
        "The University of Tsukuba and AIST are connected by a 1-Gbps Tsukuba WAN, and the other PC clusters are connected by SINET, which is wide-area network dedicated to academic research in Japan.",
        "Table 2 shows the performance of the measured network between the master node of the Dennis cluster and the master node of each PC cluster in the grid testbed.",
        "The communication throughput was measured using netperf, and the round-trip time was measured by ping. 4.2 Performance of CONFLEX-G In all of the CONFLEX-G experiments, the client program was executed on the master node of the Dennis cluster at the University of Tsukuba.",
        "The built-in Round-Robin scheduler of OmniRPC was used as a job scheduler.",
        "SSH was used for an authentication system, the OminRPCs MXIO, which relays the I/O communication between client program and worker programs by port forwarding of SSH was, not used.",
        "Note that one worker program is assigned and performed on one CPU of the calculation node in a PC cluster.",
        "That is, the number of workers is equal to the number of CPUs.",
        "These programs were compiled by the Intel Fortran Compiler 7.0 and gcc 2.95.",
        "MPICH, Version 1.2.5, was used to compare the performance between CONFLEX MPI and CONFLEX-G.",
        "In order to demonstrate the usability of the OmniRPC facility of the AIM, we implemented another version of CONFLEX-G which did not utilize the OmniRPC facility.",
        "The worker program in this version of CONFLEXG must be initialized at each RPC because the worker does not hold the previous data set.",
        "In order to examine the performance of CONFLEX-G, we selected two peptides and two small protein as test molecules: • N-acetyl tetra-alanine methylester (AlaX04) • N-acetyl hexdeca-alanine methylester (AlaX16) • TRP-cage miniprotein construct TC5B (1L2Y) • PTH receptor N-terminus fragment (1BL1) Table 3 lists the characteristics of these sample molecules.",
        "The column trial structure / loops in this table shows the Figure 7: Performances of CONFLEX-G, CONFLEX MPI and Original CONFLEX in the Dennis cluster.",
        "Figure 8: Speedup ratio, which is based on the elapsed time of CONFLEX-G using one worker in the Dennis cluster.",
        "Figure 9: Performance of CONFLEX-G with and without the OmniRPC facility of automatic initializable module for AlaX16. 159 Table 3: Characteristics of molecules and data transmission for optimizing trial molecular structures in each molecular code.",
        "Molecular # of # of total trial trial structure Data transfer to Data transfer code atoms structures / loop initialize a worker / trial structure AlaX04 181 360 45 2033KB 17.00KB AlaX16 191 480 160 2063KB 18.14KB 1L2Y 315 331 331 2099KB 29.58KB 1BL1 519 519 519 2150KB 48.67KB Table 4: Elapsed search time for the molecular conformation of AlaX04.",
        "Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (sequential) 1 320.0 1786.21 4.96 1786.21 1.00 Toyo (16) 16 20.0 1497.08 4.16 196.32 9.10 Dennis (28) 28 11.4 1905.51 5.29 97.00 18.41 Alice (36) 36 8.9 2055.25 5.71 87.09 20.51 Ume (56) 56 5.7 2196.77 6.10 120.69 14.80 Dennis (28) + Toyo (16) 44 7.3 1630.09 4.53 162.35 11.00 Alice (36) + Toyo (16) 52 6.2 1774.53 4.93 178.24 10.02 Dennis (28) + Alice (36) 64 5.0 1999.02 5.55 81.52 21.91 Dennis (28) + Ume (56) 84 3.8 2085.84 5.79 92.22 19.37 Alice (36) + Ume (56) 92 3.5 2120.87 5.89 101.25 17.64 Table 5: Elapsed search time for the molecular conformation of AlaX16 Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (1) 1 480.0 74027.80 154.22 74027.80 1.00 Toyo (16) 16 30.0 70414.21 146.70 4699.15 15.75 Dennis (28) 28 17.1 74027.80 154.22 3375.60 21.93 Alice (36) 36 13.3 90047.27 187.60 3260.41 22.71 Ume (56) 56 8.6 123399.38 257.08 2913.63 25.41 Dennis (28) + Toyo (16) 44 10.9 76747.74 159.89 2762.10 26.80 Alice (36) + Toyo (16) 52 9.2 82700.44 172.29 2246.73 32.95 Dennis (28) + Alice (36) 64 7.5 87571.30 182.44 2051.50 36.08 Toyo (16) + Ume (56) 72 6.7 109671.32 228.48 2617.85 28.28 Dennis (28) + Ume (56) 84 5.7 102817.90 214.20 2478.93 29.86 Dennis(28)+Ume(56)+Toyo(16) 100 4.8 98238.07 204.66 2478.93 29.86 Table 6: Elapsed time of the search for the trial structure of 1L2Y.",
        "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 331.0 867 286,967 79.71 1.00 Toyo MPI (16) 16 20.7 867 18,696 5.19 15.34 Dennis (28) 28 11.8 803 14,101 3.91 20.35 Dennis (28) + Ume(56) 84 3.9 1,064 8,316 2.31 34.50 Table 7: Elapsed time of the search for the trial structure of 1BL1.",
        "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 519.0 3,646 1892,210 525.61 1.00 Toyo MPI (16) 16 32.4 3,646 120,028 33.34 15.76 Dennis (28) 28 18.5 3,154 61,803 17.16 30.61 Dennis (28) + Ume (56) 84 6.1 4,497 33,502 9.30 56.48 160 number of trial structures generated in each iteration, indicating the degree of parallelism.",
        "Figure 3 also summarizes the amount of data transmission required for initialization of a worker program and for optimization of each trial structure.",
        "Note that the amount of data transmission, which is required in order to initialize a worker program and optimize a trial structure in the MPI version of CONFLEX, is equal to that of CONFLEX-G. We used an improvement version of MM2 force field to assign a potential energy function to various geometric properties of a group of atoms. 4.2.1 Performance in a Local Cluster We first compared the performance of CONFLEX-G, the MPI version of CONFLEX, and the original sequential version of CONFLEX-G using a local cluster.",
        "We investigated performance by varying the number of workers using the Dennis cluster.",
        "We chose AlaX04 as a test molecule for this experiment.",
        "Figure 7 compares the results for the CONFLEX MPI and CONFLEX-G in a local PC cluster.",
        "The result of this experiment shows that CONFLEX-G can reduce the execution time as the number of workers increases, as in the MPI version of CONFLEX.",
        "We found that CONFLEX-G achieved efficiencies comparable to the MPI version.",
        "With 28 workers, CONFLEX-G achieved an 18.00 times speedup compared to the CONFLEX sequential version.",
        "The performance of CONFLEX-G without the OmniRPC AIM facility is worse than that of CONFLEXG using the facility, based on the increase in the number of workers.",
        "This indicates that the OmniRPC AIM enables the worker to calculate efficiently without other calculations, such initialization or invocation of worker programs.",
        "As the number of workers is increased, the performance of CONFLEX-G is a slightly lower than that of the MPI version.",
        "This performance degradation is caused by differences in the worker initialization processes of CONFLEX-G and CONFLEX MPI.",
        "In the case of CONFLEX MPI, all workers are initialized in advance of the optimization phase.",
        "In the case of OminRPC, the worker is invoked on-demand when the RPC call is actually issued.",
        "Therefore, the initialization incurs this overhead.",
        "Since the objective of CONFLEX-G is to explore the conformations of large bio-molecules, the number of trial structures and the time to optimize the trial structure might be large.",
        "In such cases, the overhead to invoke and initialize the worker program can be small compared to the entire elapsed time. 4.2.2 Performance for Peptides in The Grid Testbed First, the sample molecules (AlaX04 and AlaX16) were used to examine the CONFLEX-G performance in a grid environment.",
        "Figure 8 shows the speedup achieved by using multiple clusters compared to using one worker in the Dennis cluster.",
        "Detailed results are shown in Table 4 and Table 5.",
        "In both cases, the best performance was obtained using 64 workers of the combination of the Dennis and Alice clusters.",
        "CONFLEX-G achieved a maximum speedup of 36.08 times for AlaX04 and a maximum speedup of 21.91 times for AlaX16.",
        "In the case of AlaX04, the performance is improved only when the network performance between clusters is high.",
        "However, even if two or more clusters are used in a wide area network environment, the performance improvement was slight because the optimization time of one trial structure generated from AlaX04, a small molecule, is short.",
        "In addition, the overhead required for invocation of a worker program and network data transmission consume a large portion of the remaining processing time.",
        "In particular, the data transmission required for the initialization of a worker program is 2 MB.",
        "In the case of Toyo cluster, where the network performance between the client program and the worker programs is poor, the time of data transmission to the worker program required approximately 6.7 seconds.",
        "Since this transmission time was longer than the processing time of one structure optimization in CONFLEX-G, most of the time was spent for this data transmission.",
        "Therefore, even if CONFLEX-G uses a large number of calculation nodes in a wide area network environment, the benefit of using a grid resource is not obtained.",
        "In the case of AlaX16, CONFLEX-G achieved a speedup by using two or more PC clusters in our grid testbed.",
        "This was because the calculation time on the worker program was long and the overhead, such as network latency and the invoking of worker programs, became relatively small and could be hidden.",
        "The best performance was obtained using 64 workers in the Dennis and Alice clusters.",
        "In the case of AaX16, the achieved performance was a speedup of 36.08 times.",
        "Figure 9 reveals the effect of using the facility of the OmniRPC AIM on CONFLEX-G performance.",
        "In most cases, CONFLEX-G with the OmniRPC AIM facility archived better performance than CONFLEX-G without the facility.",
        "In particular, the OmniRPC AIM facility was advantageous when using two clusters connected by a low-performance network.",
        "The results indicate that the OmniRPC AIM facility can improve performance in the grid environment. 4.2.3 PerformanceforSmallProteininTheGridTestbed Finally, we explored the molecular conformation using CONFLEX-G for large molecules.",
        "In a grid environment, this experiment was conducted using the Dennis and Ume clusters.",
        "In this experiment, we used two proteins, 1L2Y and 1BL1.",
        "Table 6 and Table 7 show the performance of CONFLEX-G in the grid environment and that of CONFLEX MPI in the Toyo cluster, respectively.",
        "The speedups in these tables were computed respectively based on the performance of one worker and 16 workers of the Toyo cluster using CONFLEX MPI.",
        "CONFLEX-G with 84 workers in Dennis and Ume clusters obtained maximum speedups of 56.5 times for 1L2Y and 34.5 times for 1L2Y.",
        "Since the calculation time for structure optimization required a great deal of time, the ratio of overhead, including tasks such as the invocation of a worker program and data transmission for initialization, became very small, so that the performance of CONFLEX-G was improved.",
        "We found that the load imbalance in the processing time of optimization for each trial structure caused performance degradation.",
        "When we obtained the best performance for 1L2Y using the Dennis and Ume clusters, the time for each structure optimization varied from 190 to 27,887 seconds, and the ratio between the longest and shortest times was 13.4.",
        "For 1BL1, the ratio of minimum time over maximum time was 190.",
        "In addition, in order that the worker program wait until the completion of optimization of all trial structures, all worker programs were found to wait in an idle state for approximately 6 hours.",
        "This has caused the performance degradation of CONFLEX-G. 161 4.3 Discussion In this subsection, we discuss the improvement of the performance reflected in our experiments.",
        "Exploiting parallelism - In order to exploit more computational resources, it is necessary to increase the degree of parallelism.",
        "In this experiment, the degree of parallelism was not so large in the case of the sample molecules.",
        "When using a set of over 500 computing nodes for 1BL1, the number of one trial structures assigned to each worker will be only one or two.",
        "If over 100 trial structures are assigned to each worker program, calculation can be performed more efficiently due to the reduction of the overhead for worker invocation and initialization via the facility of the OmniRPC AIM.",
        "One idea for increasing parallelism is to overlap the execution of two or more sets of trial structures.",
        "In the current algorithm, a set of trial structures is generated from one initial structure and computed until optimizations for all structures in this set are calculated.",
        "Furthermore, this will help to improve load imbalance.",
        "By having other sets of trial structures overlap, even if some optimizations require a long time, the optimization for the structures in other sets can be executed to compensate for the idle workers for other optimizations.",
        "It is however unclear how such modification of the algorithm might affect the quality of the final results in terms of a conformation search.",
        "Improvement in load imbalance when optimizing each trial structure - Table 8 lists the statistics for optimization times of trial structures generated for each sample molecule measured using 28 workers in the Dennis cluster.",
        "When two or more sets of PC clusters are used, the speedup in performance is hampered by the load imbalance of the optimization of the trial structures.",
        "The longest time for optimizing a trial structure was nearly 24 times longer than the shortest time.",
        "Furthermore, other workers must wait until the longest job has Finished, so that the entire execution time cannot be reduced.",
        "When CONFLEX-G searched the conformers of 1BL1 by the Dennis cluster, the longest calculation time of the trial structure optimization made up approximately 80% of the elapsed time.",
        "Therefore, there are two possible solutions for the load Imbalance. • It is necessary to refine the algorithm used to generate the trial structure, which suppresses the time variation for optimizing a trial structure in CONFLEX.",
        "This enables CONFLEX-G to achieve high-throughput by using many computer resources. • One of the solutions is to overlap the executions for two or more sets of trial structures.",
        "In the current algorithms, a set of trial structures is generated from one initial structure and calculation continues until all structures in this set are calculated.",
        "By having other sets of trial structures, even if a structure search takes a long time, a job can be executed in order to compensate the load imbalance by other jobs.",
        "However, how such modification of the algorithms might affect the efficiency is not clear. • In this experiment, we used a simple build-in roundrobbin scheduler of OmniRPC, which is necessary in order to apply the scheduler that allocates structures with long optimization times to a high-performance Table 8: Statistics of elapsed time of trial structure optimization using 28 workers in the Dennis cluster.",
        "Molecular Min Max Average Variance code (s) (s) (s) AlaX04 2.0 11.3 5.3 3 AlaX16 47.6 920.0 154.2 5404 1L2Y 114.2 13331.4 803.2 636782 1BL1 121.0 29641.8 3153.5 2734811 node and structures with short optimization times to low-performance nodes.",
        "In general, however, it might be difficult to predict the time required for trial structure optimization.",
        "Parallelization of the worker program for speedup to optimize a trial structure - In the current implementation, we do not parallelize the worker program.",
        "In order to speed up trial structures, hybrid programming using OmniRPC and OpenMP in an SMP (Symmetric Multiple Processor) machine may be one of the alternative methods by which to improve overall performance. 5.",
        "RELATED WORK Recently, an algorithm has been developed that solves the problems of parallelization and communication in poorly connected processors to be used for simulation.",
        "The Folding@home project[13] simulates timescales thousands to millions of times longer than previously achieved.",
        "This has allowed us to simulate folding for the first time and to directly examine folding related diseases.",
        "SETI@home[14] is a program to search for alien life by analyzing radio telescope signals using Fourier transform radio telescope data from telescopes from different sites.",
        "SETI@home tackles immensely parallel problems, in which calculation can easily be divided among several computers.",
        "Radio telescope data chunks can easily be assigned to different computers.",
        "Most of these efforts explicitly develop a docking application as a parallel application using a special purpose parallel programming language and middleware, such as MPI, which requires development skills and effort.",
        "However, the skills and effort required to develop a grid application may not be required for OmniRPC.",
        "Nimrod/G[15] is a tool for distributed parametric modeling and implements a parallel task farm for simulations that require several varying input parameters.",
        "Nimrod incorporates a distributed scheduling component that can manage the scheduling of individual experiments to idle computers in a local area network.",
        "Nimrod has been applied to applications including bio-informatics, operations research, and molecular modeling for drug design.",
        "NetSolve[8] is an RPC facility similar to OmniRPC and Ninf, providing a similar programming interface and automatic load balancing mechanism.",
        "Ninf-G[7] is a grid-enabled implementation of Ninf and provides a GridRPC[10] system that uses LDAP to manage the database of remote executables, but does not support clusters involving private IP addresses or addresses inside a firewall.",
        "Matsuoka et al. [16] has also discussed several design issues related to grid RPC systems. 162 6.",
        "CONCLUSIONS AND FUTURE WORK We have designed and implemented CONFLEX-G using OmniRPC.",
        "We reported its performance in a grid testbed of several geographically distributed PC clusters.",
        "In order to explore the conformation of large bio-molecules, CONFLEXG was used to generate trial structures of the molecules, and allocate jobs to optimize them by molecular mechanics in the grid.",
        "OmniRPC provides a restricted persistence model so that the module is automatically initialized at invocation by calling the initialization procedure.",
        "This can eliminate unnecessary communication and the initialization at each call in CONFLEX-G. CONFLEX-G can achieves performance comparable to CONFLEX MPI and exploits more computing resources by allowing the use of multiple PC clusters in the grid.",
        "The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times for the 1BL1 molecule, where the molecule consists of a large number of atoms and each trial structure optimization requires a great deal of time.",
        "The load imbalance of the trial structure optimizations may cause performance degradation.",
        "We need to refine the algorithm used to generate the trial structure in order to improve the load balance optimization for trial structures in CONFLEX.",
        "Future studies will include development of deployment tools and an examination of fault tolerance.",
        "In the current OmniRPC, the registration of an execution program to remote hosts and deployments of worker programs are manually set.",
        "Deployment tools will be required as the number of remote hosts is increased.",
        "In grid environments in which the environment changes dynamically, it is also necessary to support fault tolerance.",
        "This feature is especially important in large-scale applications which require lengthy calculation in a grid environment.",
        "We plan to refine the conformational optimization algorithm in CONFLEX to explore the conformation space search of larger bio-molecules such HIV protease using up to 1000 workers in a grid environment. 7.",
        "ACKNOWLEDGMENTS This research was supported in part by a Grant-in-Aid from the Ministry of Education, Culture, Sports, Science and Technology in Japan, No. 14019011, 2002, and as part of the Program of Research and Development for Applying Advanced Computational Science and Technology by the Japan Science and Technology Corporation (Research on the grid computing platform for drug design).",
        "We would like to thank grid technology research center, AIST, Japan for providing computing resources for our experiment. 8.",
        "REFERENCES [1] H. Goto and E. Osawa.",
        "An efficient algorithm for searching low-energy conformers of cyclic and acyclic molecules.",
        "J. Chem.",
        "Soc., Perkin Trans, 2:187-198, 1993. [2] M. Sato, T. Boku, and D. Takahashi.",
        "OmniRPC: a Grid RPC System for Parallel Programming in Cluster and Grid Environment.",
        "In Proc. of CCGrid2003, pages 219-229, 2003. [3] M. Sato, M. Hirano, Y. Tanaka, and S. Sekiguchi.",
        "OmniRPC: a Grid RPC facility for Cluster and Global Computing in OpenMP.",
        "In Proc. of Workshop on OpenMP Applications and Tools 2001(LNCS 2104 ), pages 130-135, 2001. [4] OmniRPC Project. http://www.omni.hpcc.jp/omnirpc/. [5] M. Sato, H. Nakada, S. Sekiguchi, S. Matsuoka, U. Nagashima, and H. Takagi.",
        "Ninf: A Network Based Information Library for Global World-Wide Computing Infrastructure.",
        "In HPCN Europe, pages 491-502, 1997. [6] Ninf Project. http://ninf.apgrid.org/. [7] Y. Tanaka, H. Nakada, S. Sekiguchi, T. Suzumura, and S. Matsuoka.",
        "Ninf-G: A Reference Implementation of RPC-based Programming Middleware for Grid Computing .",
        "Journal of Grid Computing, 1(1):41-51, 2003. [8] D. Arnold, S. Agrawal, S. Blackford, J. Dongarra, M. Miller, K. Seymour, K. Sagi, Z. Shi, and S. Vadhiyar.",
        "Users Guide to NetSolve V1.4.1.",
        "Innovative Computing Dept.",
        "Technical Report ICL-UT-02-05, University of Tennessee, Knoxville, TN, June 2002. [9] Object management group. http://www.omg.org/. [10] K. Seymour, H. Nakada, S. Matsuoka, J. Dongarra, C. Lee, and H. Casanova.",
        "GridRPC: A Remote Procedure Call API for Grid Computing. [11] H.Goto, T. Takahashi, Y. Takata, K. Ohta, and U Nagashima.",
        "Conflex: Conformational behaviors of polypeptides as predicted by a conformational space search.",
        "In Nanotech2003, volume 1, pages 32-35, 2003. [12] I.",
        "Foster and C. Kesselman.",
        "Globus: A metacomputing infrastructure toolkit.",
        "The International Journal of Supercomputer Applications and High Performanc e Computing, 11(2):115-128, Summer 1997. [13] Stefan M. Larson, Christopher D. Snow, Michael Shirts, and Vijay S. Pande.",
        "Folding@home and genome@home: Using distributed computing to tackle prev iously intractable problems in computational biology.",
        "Computational Genomics, 2002. [14] seti@home project. http://setiathome.ssl.berkeley.edu/. [15] R. Buyya, K. Branson, J. Giddy, and D. Abramson.",
        "The virtual laboratory: a toolset to enable distributed molecular modelling for drug design on the world-wide grid.",
        "Concurrency and Computation: Practice and Experience, 15(1):1-25, January 2003. [16] S. Matsuoka, H. Nakada, M. Sato, and S. Sekiguchi.",
        "Design issues of Network Enabled Server Systems for the Grid.",
        "In Proc. of GRID 2000 (LNCS 1971), pages 4-17, 2000. 163"
    ],
    "translated_text_sentences": [
        "Implementación y Evaluación del Rendimiento de CONFLEX-G: Programa de Búsqueda de Espacio Conformacional Molecular Habilitado para Grid con OmniRPC.",
        "Hemos implementado CONFLEX-G utilizando un sistema de RPC en malla llamado OmniRPC.",
        "En este artículo, informamos sobre el rendimiento de CONFLEX-G en un banco de pruebas en red de varios clústeres de PC distribuidos geográficamente.",
        "Para explorar muchas conformaciones de grandes biomoléculas, CONFLEX-G genera estructuras de prueba de las moléculas y asigna trabajos para optimizar una estructura de prueba con un método confiable de mecánica molecular en la cuadrícula.",
        "OmniRPC proporciona un modelo de persistencia restringido para respaldar las aplicaciones de búsqueda paramétrica.",
        "En este modelo, cuando el procedimiento de inicialización está definido en el módulo RPC, el módulo se inicializa automáticamente en el momento de la invocación llamando al procedimiento de inicialización.",
        "Esto puede eliminar la comunicación y la inicialización innecesarias en cada llamada en CONFLEX-G. CONFLEXG puede lograr un rendimiento comparable al de CONFLEX MPI y puede aprovechar más recursos informáticos al permitir el uso de un clúster de múltiples clústeres en la cuadrícula.",
        "El resultado experimental muestra que CONFLEX-G logró una aceleración de 56.5 veces en el caso de la molécula 1BL1, donde la molécula consta de un gran número de átomos y cada optimización de la estructura de prueba requiere un tiempo significativo.",
        "El desequilibrio de carga en el tiempo de optimización de la estructura de prueba también puede causar degradación del rendimiento.",
        "Categorías y Descriptores de Asignaturas C.2.4 [Organización de Sistemas Informáticos]: RED DE COMUNICACIÓN DE COMPUTADORAS-Sistemas Distribuidos; J.2.4 [Aplicaciones Informáticas]: CIENCIAS FÍSICAS E INGENIERÍA Términos Generales Diseño, Rendimiento 1.",
        "INTRODUCCIÓN La elucidación de las conformaciones estables y el proceso de plegamiento de las proteínas es uno de los objetivos más fundamentales y desafiantes en las ciencias de la vida.",
        "Si bien algunas de las estructuras secundarias más comunes (por ejemplo, ciertos tipos de hélice, la lámina beta y la hélice) son bien conocidas, se requiere un análisis preciso de los miles de conformaciones químicamente importantes y un análisis de orden de pico-segundo de sus interconversiones conformacionales a través de los estados de transición en la superficie de energía potencial para la investigación de orden de microsegundo del proceso de plegamiento hacia la formación de la estructura terciaria.",
        "Recientemente, el concepto de la red computacional ha comenzado a atraer un interés significativo en el campo de la computación de alto rendimiento en red.",
        "Los rápidos avances en la tecnología e infraestructura de redes de área amplia han hecho posible construir entornos de computación distribuida a gran escala y alto rendimiento, o redes computacionales, que proporcionan acceso confiable, consistente y generalizado a enormes recursos computacionales.",
        "CONFLEX es uno de los programas de búsqueda de espacio conformacional más eficientes y confiables.",
        "Hemos aplicado este programa 154 a la paralelización utilizando computación global.",
        "El rendimiento del CONFLEX paralelizado permite explorar la región de energía más baja del espacio conformacional de péptidos pequeños en un tiempo transcurrido disponible utilizando un clúster de PC local.",
        "Dado que la optimización de la estructura de prueba en CONFLEX se calcula a través de la mecánica molecular, la búsqueda del espacio conformacional se puede realizar rápidamente en comparación con la que utiliza cálculos de orbitales moleculares.",
        "Aunque se utilizó la versión paralelizada de CONFLEX para calcular de forma paralela la optimización de la estructura, que representa más del 90% del procesamiento en la búsqueda de conformaciones moleculares, no se pudo lograr una mejora suficiente en la aceleración solo con este método.",
        "Por lo tanto, para polímeros de alto peso molecular de organismos vivos, como la proteasa del VIH, el uso de un solo clúster de PC es insuficiente debido a la necesidad de optimizar una gran cantidad de estructuras de prueba.",
        "Esto requiere los vastos recursos informáticos de un entorno de computación en malla.",
        "En este artículo, describimos CONFLEX-G, un programa de búsqueda conformacional molecular habilitado para grid, utilizando OmniRPC y reportamos su rendimiento en un grid de varios clusters de PC distribuidos geográficamente.",
        "El prototipo CONFLEX-G asigna la optimización de las estructuras de cálculo de prueba, que es una tarea muy consumidora de tiempo, a nodos trabajadores en el entorno de la red para obtener un alto rendimiento.",
        "Además, comparamos el rendimiento de CONFLEX-G en un clúster de PC local con el de un banco de pruebas en red.",
        "OmniRPC[2, 3, 4] es una implementación segura para hilos de Ninf RPC[5, 6], que es una facilidad de RPC de cuadrícula para la computación en entornos de cuadrícula.",
        "Varios sistemas adoptan el concepto de la RPC como el modelo básico para la computación en entornos de rejilla, incluyendo Ninf-G[7], NetSolve[8] y CORBA[9].",
        "El sistema RPCstyle proporciona una interfaz de programación fácil de usar e intuitiva, que permite a los usuarios del sistema de cuadrícula crear fácilmente aplicaciones habilitadas para la cuadrícula.",
        "Para apoyar la programación paralela, un cliente de RPC puede emitir solicitudes de llamada asincrónicas a un ordenador remoto diferente para aprovechar el paralelismo en toda la red a través de OmniRPC.",
        "En este artículo, proponemos el modelo de persistencia OmniRPC para un sistema de RPC de Grid y demostramos su efectividad.",
        "Para apoyar una aplicación típica para un entorno de cuadrícula, como una aplicación de búsqueda paramétrica, en la que la misma función se ejecuta con diferentes parámetros de entrada en el mismo conjunto de datos.",
        "En el sistema GridRPC actual[10], el conjunto de datos establecido por la llamada anterior no puede ser utilizado por llamadas posteriores.",
        "En el sistema OmniRPC, una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado y su estado inicializado para llamadas posteriores a las mismas funciones remotas con el fin de eliminar el costo de invocación de cada llamada.",
        "Este documento demuestra que CONFLEX-G es capaz de aprovechar los enormes recursos informáticos de un entorno de grid y buscar conformadores moleculares a gran escala.",
        "Demostramos CONFLEX-G en nuestra plataforma de pruebas en red utilizando la proteína real como molécula de muestra.",
        "La facilidad OmniRPC del módulo inicializable automático (AIM) permite al sistema calcular eficientemente numerosos conformeros.",
        "Además, al utilizar OmniRPC, el usuario puede paralelizar en cuadrícula la aplicación existente y pasar del clúster al entorno de cuadrícula sin modificar el código del programa y compilar el programa.",
        "Además, el usuario puede construir fácilmente un entorno de red privada.",
        "El resto de este documento está organizado de la siguiente manera.",
        "Se presenta una visión general de la Base de Datos de Conformaciones de Estructuras Iniciales, la Perturbación Local, la Optimización de la Geometría, la Comparación y el Registro. Figura 1: Algoritmo de búsqueda de espacio conformacional en el CONFLEX original. El sistema CONFLEX se describe en la Sección 2, y la implementación y diseño de CONFLEX-G se detallan en la Sección 3.",
        "Informamos los resultados experimentales obtenidos utilizando CONFLEX-G y discutimos su rendimiento en la Sección 4.",
        "En la Sección 6, presentamos conclusiones y discutimos temas para estudios futuros. 2.",
        "CONFLEX es un programa eficiente de búsqueda de espacio conformacional, que puede buscar predominantemente y exhaustivamente los conformeros en la región de energía más baja.",
        "Las aplicaciones de CONFLEX incluyen la elucidación de la reactividad y selectividad de fármacos y posibles materiales medicinales con respecto a su flexibilidad conformacional. 2.1 Algoritmo de Búsqueda de Espacio Conformacional La estrategia básica de CONFLEX es una búsqueda exhaustiva solo de las regiones de baja energía.",
        "El CONFLEX original realiza los siguientes cuatro pasos principales: 1.",
        "Selección de una estructura inicial entre los conformeros únicos previamente descubiertos y ordenados en una base de datos conformacional. (Una estructura de entrada se utiliza como la primera estructura inicial al comienzo de una ejecución de búsqueda solamente.) 2.",
        "Generación de estructuras de prueba mediante perturbaciones locales a la estructura inicial seleccionada. 3.",
        "Optimización de geometría para las nuevas estructuras de prueba generadas. 4.",
        "Comparación de las estructuras optimizadas con éxito (ensayo) con los otros conformeros almacenados en una base de datos de conformaciones, y preservación de los conformeros únicos recién descubiertos en la base de datos.",
        "La Figura 1 muestra el esquema de CONFLEX, el algoritmo original de búsqueda de espacio conformacional.",
        "Estos procedimientos incorporan dos estrategias únicas.",
        "La Figura 2 muestra las estrategias para generar perturbaciones locales en CONFLEX.",
        "La primera estrategia implica tanto el aleteo de las esquinas como el volteo de los bordes para los átomos del anillo y la rotación paso a paso para las cadenas laterales o cadenas del esqueleto.",
        "Estos métodos proporcionan una forma altamente eficiente de producir varias estructuras de prueba buenas.",
        "Estas perturbaciones pueden considerarse como una imitación de 155 Rotación Escalonada de Esquina de Solapa de Borde de Giro Figura 2: Estrategias utilizadas para generar las perturbaciones locales, un paso de cruce de barrera en el proceso elemental de la interconversión conformacional térmica.",
        "De hecho, las perturbaciones de una estructura inicial corresponden al rendimiento preciso alrededor del espacio de la estructura inicial debido a la localización y debilidad de la perturbación.",
        "La regla de selección de la estructura inicial, la regla LowestConformer-First, es la segunda estrategia para dirigir la búsqueda de conformaciones ampliada a las regiones de baja energía.",
        "La estructura inicial se selecciona como el conjunto de conformaciones de menor energía almacenadas en la base de datos de conformaciones.",
        "Esta regla es efectiva para desplazarse hacia abajo en el espacio de búsqueda hacia regiones de menor energía, como el agua de un arroyo que fluye hacia un embalse vacío, llenando depresiones locales en el camino.",
        "Por lo tanto, estos procedimientos tácticos de la búsqueda CONFLEX se conocen como el Algoritmo de Llenado de Reservorio.",
        "Para permanecer en la región de baja energía y realizar una búsqueda exhaustiva, el límite de búsqueda (SEL), que determina la energía máxima de las estructuras iniciales, está predefinido.",
        "El aumento gradual de SEL permite buscar solo los conformeros de baja energía y evita desviarse hacia regiones de energía innecesariamente alta. 2.2 Paralelización de CONFLEX para clúster Para su aplicación en más de 100 átomos, CONFLEX fue mejorado utilizando técnicas de computación paralela de alto rendimiento.",
        "En el algoritmo de búsqueda CONFLEX, los procedimientos de optimización de geometría siempre ocupan el 95% del tiempo transcurrido durante la ejecución de la búsqueda.",
        "Por lo tanto, paralelizamos esta optimización utilizando la técnica de paralelización Maestro/Trabajador.",
        "Modificamos los procedimientos de búsqueda de la siguiente manera.",
        "Después de que se generan las estructuras de prueba (paso 2), se almacenan temporalmente en un grupo de tareas en el nodo maestro.",
        "Entonces, cada nodo trabajador recibe dinámicamente una estructura de prueba del nodo maestro.",
        "Después de que se complete una optimización en un nodo de trabajador, este recibe inmediatamente otra estructura de prueba.",
        "Cuando todas las estructuras de prueba relacionadas con una estructura inicial dada están optimizadas, solo se utiliza el procedimiento principal para la comparación.",
        "Al paralelizar CONFLEX, la aceleración de la búsqueda de conformadores moleculares obtenida es la reportada en[11]. 3.",
        "CONFLEX-G Originalmente, CONFLEX estaba destinado a ser utilizado para explorar los conformeros de las grandes biomoléculas, como la proteasa del VIH.",
        "En tales moléculas, el número de estructuras de prueba aumenta y el tiempo requerido para la optimización de la Selección de RPC de Estructuras Iniciales Conformaciones de la Base de Datos de Perturbación Local Comparación y Registro del Cliente Programa Cliente Grupo de Tareas de Optimización Geométrica RPC Entorno de Rejilla RPC Cluster B Cluster A Cluster C Estructura de prueba Estructura de prueba Estructura de prueba Estructura de prueba Figura 3: Procedimiento de CONFLEX-G. agente rexrex rex Cliente jones.tsukuba.ac.jp hpc-serv.hpcc.jp hpc1 hpc2 hpc3 Invocación del agente Comunicación de la red Figura 4: Visión general del sistema OmniRPC para el clúster remoto con una dirección IP privada. la estructura de prueba se vuelve inmensa.",
        "Implementamos la versión paralelizada de CONFLEX, la cual no puede tratar tales moléculas utilizando solo un clúster de PC local.",
        "Para aprovechar los vastos recursos informáticos de un entorno de grid, diseñamos e implementamos CONFLEX-G, que es una versión habilitada para grid de CONFLEX, con el sistema OmniRPC.",
        "CONFLEX-G asigna trabajos para optimizar una estructura de prueba a los nodos computacionales de cada clúster en el entorno de la red.",
        "La Figura 3 muestra el proceso de CONFLEX-G.",
        "Los programas de los trabajadores se inicializan mediante el método de inicialización, que es proporcionado por la instalación de OmniRPC AIM en la invocación del trabajador.",
        "En cada llamada RPC, el estado inicializado se reutiliza en el host remoto.",
        "En otras palabras, el programa cliente puede eliminar la inicialización para cada llamada RPC, y por lo tanto optimizar eficientemente las estructuras de prueba. 3.1 El sistema OmniRPC OmniRPC es un sistema de RPC en malla que permite una programación paralela sin problemas desde un clúster de PC hasta un entorno de malla.",
        "OmniRPC hereda su API y arquitectura básica de Ninf.",
        "Un cliente y los hosts computacionales remotos que ejecutan los procedimientos remotos pueden estar conectados a través de una red.",
        "Las bibliotecas remotas se implementan como un programa ejecutable que contiene una rutina de soporte de red como su rutina principal.",
        "Llamamos a este programa ejecutable un programa ejecutable remoto (rex).",
        "Cuando el programa cliente OmniRPC se inicia, la función de inicialización del sistema OmniRPC invoca el programa agente OmniRPC omrpc-agent en los hosts remotos listados en el archivo de hosts.",
        "Para invocar al agente, el usuario puede utilizar el comando de shell remoto rsh en una red de área local, la API de GRAM (Gestor de Asignación de Recursos Globus) del kit de herramientas Globus 156 en un entorno de grid, o el comando de shell remoto seguro ssh.",
        "El usuario puede cambiar las configuraciones solo modificando el archivo de host.",
        "OmniRpcCall es una interfaz de programación de cliente simple para llamar a funciones remotas.",
        "Cuando OmniRpcCall realiza una llamada a un procedimiento remoto, la llamada se asigna a un host remoto apropiado.",
        "Cuando el cliente emite la solicitud de RPC, solicita que el agente en el host seleccionado envíe el trabajo del ejecutable remoto con el programador de trabajos local especificado en el archivo del host.",
        "Si no se especifica el programador de tareas, el agente ejecuta el ejecutable remoto en el mismo nodo mediante la llamada al sistema fork.",
        "El cliente envía los datos de los argumentos de entrada al ejecutable remoto invocado, y recibe los resultados al regreso de la función remota.",
        "Una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado para llamadas RPC posteriores con el fin de eliminar el costo de invocar nuevamente el mismo ejecutable remoto.",
        "Cuando el agente y los ejecutables remotos son invocados, los programas remotos obtienen la dirección y el puerto del cliente de la lista de argumentos y se conectan de vuelta al cliente mediante TCP/IP directo o Globus-IO para la transmisión de datos.",
        "Debido a que el sistema OmniRPC no utiliza puertos de servicio fijos, el programa cliente asigna puertos no utilizados dinámicamente para esperar la conexión de los ejecutables remotos.",
        "Esto evita posibles problemas de seguridad y permite al usuario instalar el sistema OmniRPC sin necesidad de contar con una cuenta privilegiada.",
        "Aquí, un recurso de red típico se considera como un grupo de clústeres de PC distribuidos geográficamente.",
        "Para los clústeres de PC en una red privada, un proceso agente OmniRPC en el host del servidor funciona como un proxy para relé de comunicaciones entre el cliente y los ejecutables remotos mediante la multiplexación de las comunicaciones utilizando una única conexión.",
        "Esta característica, llamada multiplex IO (MXIO), permite a un único cliente utilizar hasta 1,000 hosts de computación remota.",
        "Cuando el clúster de PC está dentro de un firewall, el reenvío de puertos de SSH permite que el nodo se comunique con el exterior a través de MXIO.",
        "La Figura 4 muestra la descripción general del sistema OmniRPC para un clúster remoto con una dirección IP privada.",
        "Para la programación en paralelo, el programador puede utilizar llamadas a procedimientos remotos asíncronos, lo que permite al cliente emitir varias solicitudes mientras continúa con otras computaciones.",
        "Las solicitudes se envían a diferentes hosts remotos para ser ejecutadas en paralelo, y el cliente espera o consulta la solicitud completada.",
        "En un modelo de programación con llamadas a procedimientos remotos asíncronos, el programador debe manejar las solicitudes pendientes de forma explícita.",
        "Debido a que OmniRPC es un sistema seguro para hilos, puede haber varios llamados a procedimientos remotos pendientes en cualquier momento para programas multi-hilo escritos en OpenMP. Modelo de persistencia de OmniRPC 3.2: módulo inicializable automáticamente. OmniRPC soporta eficientemente aplicaciones paralelas típicas de Maestro/Trabajador como programas de ejecución paramétrica.",
        "Para aplicaciones de búsqueda paramétrica, que a menudo requieren una gran cantidad de datos idénticos para cada llamada, OmniRPC admite un modelo de persistencia limitado, que está implementado por el módulo inicializable automático.",
        "El usuario puede definir un procedimiento de inicialización en el ejecutable remoto para enviar y almacenar datos automáticamente antes de las llamadas reales al procedimiento remoto.",
        "Dado que el ejecutable remoto puede aceptar solicitudes para llamadas posteriores, el conjunto de datos que ha sido establecido por el procedimiento de inicialización puede ser reutilizado.",
        "Como resultado, el programa del trabajador puede ejecutarse de manera eficiente y reducir la cantidad de datos transmitidos para la inicialización.",
        "Una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado para llamadas RPC posteriores.",
        "Sin embargo, OmniRPC no garantiza la persistencia del ejecutable remoto, por lo que el conjunto de datos establecido por la llamada anterior no puede ser utilizado por llamadas posteriores.",
        "Esto se debe a que una llamada remota realizada por OmniRpcCall puede ser programada en cualquier host remoto de forma dinámica, y los ejecutables remotos pueden ser terminados accidentalmente debido a una reprogramación dinámica o fallos en el host.",
        "Sin embargo, la persistencia del ejecutable remoto puede ser explotada en ciertas aplicaciones.",
        "Un ejemplo es una aplicación de búsqueda paramétrica: en dicha aplicación, sería eficiente si un gran conjunto de datos pudiera cargarse previamente en la primera llamada, y las llamadas posteriores pudieran realizarse en los mismos datos, pero con diferentes parámetros.",
        "Este es el caso para CONFLEX.",
        "OmniRPC proporciona un modelo de persistencia restringido a través del módulo inicializable automático (AIM) para apoyar este tipo de aplicación.",
        "Si el procedimiento de inicialización está definido en el módulo, el módulo se inicializa automáticamente al invocarlo llamando al procedimiento de inicialización.",
        "Cuando el ejecutable remoto se reprograma en diferentes hosts, se llama a la inicialización para inicializar el módulo remoto recién asignado.",
        "Esto puede eliminar comunicaciones innecesarias cuando las llamadas RPC utilizan los mismos datos.",
        "Para revelar más sobre la diferencia en el progreso entre los casos con OmniRPC AIM y sin OmniRPC AIM, presentamos dos figuras.",
        "La Figura 5 ilustra el gráfico de tiempo del progreso de una aplicación típica de OmniRPC utilizando la facilidad OmniRPC AIM, y la Figura 6 ilustra el gráfico de tiempo de la misma aplicación sin la facilidad OmniRPC AIM.",
        "En ambas figuras, las líneas entre los diamantes representan los procesos de inicialización, y las líneas entre los puntos representan los cálculos.",
        "La línea en negrita indica el momento en que el programa cliente envía los datos al programa trabajador.",
        "Es necesario que la aplicación sin la funcionalidad OmniRPC AIM se inicialice en cada RPC.",
        "La aplicación que utiliza la funcionalidad OmniRPC AIM puede reutilizar los datos inicializados una vez que el conjunto de datos está inicializado.",
        "Esto puede reducir la inicialización en cada RPC.",
        "Los trabajadores de la aplicación con AIM pueden calcular de manera eficiente en comparación con la aplicación sin la facilidad de AIM de OmniRPC. 3.3 Implementación de CONFLEX-G utilizando OmniRPC. La Figura 3 muestra una visión general del proceso utilizado en CONFLEX-G.",
        "Usando RPCs, CONFLEX-G asigna los procesos de optimización de la estructura de prueba, que son realizados por los nodos de cálculo de un clúster de PC en la versión MPI de CONFLEX, a los nodos computacionales de cada clúster en un entorno de grid.",
        "Hay dos cálculos que realizan los programas de trabajador en CONFLEX-G. Uno es la inicialización de un programa de trabajador, y otro es el cálculo de la optimización de la estructura de prueba.",
        "Primero, la instalación OmniRPC del AIM se adapta para la inicialización de un programa trabajador.",
        "Esta instalación llama automáticamente a la función de inicialización, la cual está contenida en el programa de trabajador, una vez que el programa cliente invoca al programa de trabajador en un nodo remoto.",
        "Es necesario que el sistema RPC común, incluido GridRPC, inicialice un programa para cada llamada RPC, ya que la persistencia de datos de los programas trabajadores.",
        "Tabla 1: Configuraciones de máquinas en la plataforma de pruebas en red.",
        "El nombre del clúster del sitio Máquina Red de Autenticación # de Nodos # de CPUs Univ. de Tsukuba Dennis Dual Xeon 2.4GHz 1Gb Ethernet Globus, SSH 14 28 Alice Dual Athlon 1800+ 100Mb Ethernet Globus, SSH 18 36 TUT Toyo Dual Athlon 2600+ 100Mb Ethernet SSH 8 16 AIST Ume Dual Pentium3 1.4GHz 1Gb Ethernet Globus, SSH 32 64 no es compatible.",
        "En OmniRPC, sin embargo, cuando se define la función remota Inicializar en el programa del trabajador y se asigna un nuevo programa de trabajador, correspondiente al otro RPC, para ejecutar, se llama automáticamente a una función Inicializar.",
        "Por lo tanto, después de la llamada a la función Initialize para configurar los datos de inicialización comunes, un programa trabajador puede reutilizar estos datos y aumentar la eficiencia de sus procesos.",
        "Por lo tanto, cuanto mayor sea el costo de configuración, mayor será el beneficio potencial.",
        "Implementamos el programa de trabajador de CONFLEX-G para recibir datos, como parámetros de evaluación de energía, de un programa cliente y para ser inicializado por la función Inicializar.",
        "Organizamos el programa del cliente de CONFLEX-G para transferir el archivo de parámetros en el momento de la inicialización del trabajador.",
        "Esto permite que la ejecución se realice modificando solo la configuración del cliente si el usuario desea ejecutar CONFLEX-G con un conjunto de datos diferente.",
        "Segundo, para calcular la optimización de la estructura de prueba en un programa de trabajador, el programa de trabajador debe recibir los datos, como el arreglo de átomos de la estructura de prueba y el estado de energía interna.",
        "El resultado se devuelve al programa cliente después de que el trabajador haya optimizado la estructura de prueba.",
        "Dado que la parte de cálculo de la optimización de la estructura en este programa de trabajador puede ser calculada de forma independiente utilizando diferentes parámetros, paralelizamos esta parte utilizando RPC asincrónicos en el lado del cliente.",
        "Para llamar a la función de optimización de estructuras en un programa trabajador desde el programa cliente, utilizamos la API OmniRpcCallAsync, la cual está diseñada para RPC asincrónico.",
        "Además, la API OmniRpcCallWaitAll espera hasta que se utilicen todas las RPC asíncronas para realizar la sincronización una vez que todas las RPC asíncronas se hayan completado, con el fin de optimizar la estructura de la prueba.",
        "El programa cliente que asigna la optimización de la estructura de prueba al nodo de cálculo de un clúster de PC utilizando RPC se describe de la siguiente manera.",
        "OmniRpcInit() OmniRpcModuleInit(conflex_search,...); ... mientras( <nuevos conformeros> ) { para cada( <estructuras de prueba> ) OmniRpcCallAsync(conflex_search_worker, ...); OmniRpcWaitAll(); ...",
        "Ten en cuenta que la API OmniRpcModuleInit solo devuelve los argumentos necesarios para la inicialización y no ejecutará realmente la función de inicialización.",
        "Como se describe arriba, la inicialización real se realiza en la primera llamada remota.",
        "Dado que el sistema OmniRPC tiene un programador de round-robin sencillo, no es necesario escribir explícitamente el código para el equilibrio de carga.",
        "Por lo tanto, los RPC se asignan automáticamente a los trabajadores inactivos. Tabla 2: Rendimiento de la red entre el nodo maestro del clúster Dennis y el nodo maestro de cada clúster de PC.",
        "Rendimiento de ida y vuelta del clúster Tiempo (ms) (Mbps) Dennis 0.23 879.31 Alice 0.18 94.12 Toyo 11.27 1.53 Ume 1.07 373.33",
        "RESULTADOS PRELIMINARES 4.1 Banco de pruebas de la red El banco de pruebas de la red fue construido utilizando recursos informáticos de la Universidad de Tsukuba, la Universidad de Tecnología de Toyohashi (TUT) y el Instituto Nacional de Ciencia y Tecnología Industrial Avanzada (AIST).",
        "La Tabla 1 muestra los recursos informáticos utilizados para la red del presente estudio.",
        "La Universidad de Tsukuba y AIST están conectadas por una red WAN de 1 Gbps en Tsukuba, y los otros clústeres de PC están conectados por SINET, que es una red de área amplia dedicada a la investigación académica en Japón.",
        "La Tabla 2 muestra el rendimiento de la red medida entre el nodo maestro del clúster Dennis y el nodo maestro de cada clúster de PC en el banco de pruebas de la red.",
        "El rendimiento de CONFLEX-G En todos los experimentos de CONFLEX-G, el programa cliente se ejecutó en el nodo maestro del clúster Dennis en la Universidad de Tsukuba.",
        "El planificador Round-Robin incorporado de OmniRPC se utilizó como planificador de tareas.",
        "Se utilizó SSH para un sistema de autenticación, el OminRPCs MXIO, que retransmite la comunicación de E/S entre el programa cliente y los programas trabajadores mediante el reenvío de puertos de SSH, no se utilizó.",
        "Se debe tener en cuenta que un programa de trabajador se asigna y se ejecuta en una CPU de un nodo de cálculo en un clúster de PC.",
        "Es decir, el número de trabajadores es igual al número de CPUs.",
        "Estos programas fueron compilados por el Intel Fortran Compiler 7.0 y gcc 2.95.",
        "Se utilizó MPICH, Versión 1.2.5, para comparar el rendimiento entre CONFLEX MPI y CONFLEX-G.",
        "Para demostrar la usabilidad de la instalación OmniRPC de AIM, implementamos otra versión de CONFLEX-G que no utilizaba la instalación OmniRPC.",
        "El programa del trabajador en esta versión de CONFLEXG debe inicializarse en cada RPC porque el trabajador no conserva el conjunto de datos anterior.",
        "Para examinar el rendimiento de CONFLEX-G, seleccionamos dos péptidos y dos proteínas pequeñas como moléculas de prueba: • N-acetil tetra-alanina metilester (AlaX04) • N-acetil hexadeca-alanina metilester (AlaX16) • Construcción de miniproteína TRP-cage TC5B (1L2Y) • Fragmento del extremo N del receptor de PTH (1BL1) La Tabla 3 enumera las características de estas moléculas de muestra.",
        "La estructura de prueba de columnas / bucles en esta tabla muestra la Figura 7: Rendimientos de CONFLEX-G, CONFLEX MPI y CONFLEX Original en el clúster Dennis.",
        "Figura 8: Proporción de aceleración, que se basa en el tiempo transcurrido de CONFLEX-G utilizando un trabajador en el clúster de Dennis.",
        "Figura 9: Rendimiento de CONFLEX-G con y sin la facilidad OmniRPC del módulo inicializable automático para AlaX16. Tabla 3: Características de las moléculas y transmisión de datos para optimizar las estructuras moleculares de prueba en cada código molecular.",
        "Tabla 4: Tiempo de búsqueda transcurrido para la conformación molecular de AlaX04.",
        "Tabla 6: Tiempo transcurrido de la búsqueda de la estructura de prueba de 1L2Y.",
        "Tabla 7: Tiempo transcurrido de la búsqueda de la estructura de prueba de 1BL1.",
        "Número total de estructuras del clúster Tiempo de optimización Transcurrido Velocidad transcurrida (# de trabajadores) trabajadores / trabajador / estructura (s) tiempo (s) tiempo (H) hasta Toyo MPI (1) 1 519.0 3,646 189,210 525.61 1.00 Toyo MPI (16) 16 32.4 3,646 120,028 33.34 15.76 Dennis (28) 28 18.5 3,154 61,803 17.16 30.61 Dennis (28) + Ume (56) 84 6.1 4,497 33,502 9.30 56.48 160 número de estructuras de prueba generadas en cada iteración, indicando el grado de paralelismo.",
        "La Figura 3 también resume la cantidad de transmisión de datos requerida para la inicialización de un programa de trabajador y para la optimización de cada estructura de prueba.",
        "Ten en cuenta que la cantidad de transmisión de datos necesaria para inicializar un programa de trabajador y optimizar una estructura de prueba en la versión MPI de CONFLEX es igual a la de CONFLEX-G. Utilizamos una versión mejorada del campo de fuerza MM2 para asignar una función de energía potencial a varias propiedades geométricas de un grupo de átomos. 4.2.1 Rendimiento en un clúster local. Primero comparamos el rendimiento de CONFLEX-G, la versión MPI de CONFLEX y la versión secuencial original de CONFLEX-G utilizando un clúster local.",
        "Investigamos el rendimiento variando el número de trabajadores utilizando el clúster Dennis.",
        "Elegimos AlaX04 como molécula de prueba para este experimento.",
        "La Figura 7 compara los resultados para el CONFLEX MPI y el CONFLEX-G en un clúster de PC local.",
        "El resultado de este experimento muestra que CONFLEX-G puede reducir el tiempo de ejecución a medida que aumenta el número de trabajadores, al igual que en la versión MPI de CONFLEX.",
        "Descubrimos que CONFLEX-G logró eficiencias comparables a la versión MPI.",
        "Con 28 trabajadores, CONFLEX-G logró una mejora de velocidad de 18.00 veces en comparación con la versión secuencial de CONFLEX.",
        "El rendimiento de CONFLEX-G sin la funcionalidad AIM de OmniRPC es peor que el de CONFLEX-G que utiliza la funcionalidad, basado en el aumento en el número de trabajadores.",
        "Esto indica que el OmniRPC AIM permite al trabajador calcular de manera eficiente sin necesidad de realizar otros cálculos, como la inicialización o la invocación de programas de trabajador.",
        "A medida que se aumenta el número de trabajadores, el rendimiento de CONFLEX-G es ligeramente inferior al de la versión MPI.",
        "Esta degradación del rendimiento es causada por diferencias en los procesos de inicialización de los trabajadores de CONFLEX-G y CONFLEX MPI.",
        "En el caso de CONFLEX MPI, todos los trabajadores se inicializan antes de la fase de optimización.",
        "En el caso de OminRPC, el trabajador es invocado bajo demanda cuando la llamada RPC es emitida realmente.",
        "Por lo tanto, la inicialización conlleva este sobrecosto.",
        "Dado que el objetivo de CONFLEX-G es explorar las conformaciones de grandes bio-moléculas, el número de estructuras de prueba y el tiempo para optimizar la estructura de prueba podrían ser grandes.",
        "En tales casos, el gasto general para invocar e inicializar el programa de trabajador puede ser pequeño en comparación con el tiempo total transcurrido. 4.2.2 Rendimiento para Péptidos en el Banco de Pruebas de la Red En primer lugar, las moléculas de muestra (AlaX04 y AlaX16) se utilizaron para examinar el rendimiento de CONFLEX-G en un entorno de red.",
        "La Figura 8 muestra la aceleración lograda al utilizar múltiples clústeres en comparación con el uso de un solo trabajador en el clúster de Dennis.",
        "Los resultados detallados se muestran en la Tabla 4 y la Tabla 5.",
        "En ambos casos, el mejor rendimiento se obtuvo utilizando 64 trabajadores de la combinación de los clústeres de Dennis y Alice.",
        "CONFLEX-G logró una aceleración máxima de 36.08 veces para AlaX04 y una aceleración máxima de 21.91 veces para AlaX16.",
        "En el caso de AlaX04, el rendimiento mejora solo cuando el rendimiento de la red entre clústeres es alto.",
        "Sin embargo, aunque se utilicen dos o más grupos en un entorno de red de área amplia, la mejora en el rendimiento fue leve debido a que el tiempo de optimización de una estructura de prueba generada a partir de AlaX04, una molécula pequeña, es corto.",
        "Además, los gastos generales necesarios para la invocación de un programa de trabajador y la transmisión de datos a través de la red consumen una gran parte del tiempo de procesamiento restante.",
        "En particular, la transmisión de datos necesaria para la inicialización de un programa de trabajador es de 2 MB.",
        "En el caso del clúster Toyo, donde el rendimiento de la red entre el programa cliente y los programas trabajadores es deficiente, el tiempo de transmisión de datos al programa trabajador requería aproximadamente 6.7 segundos.",
        "Dado que el tiempo de transmisión fue más largo que el tiempo de procesamiento de una optimización de estructura en CONFLEX-G, la mayor parte del tiempo se dedicó a esta transmisión de datos.",
        "Por lo tanto, incluso si CONFLEX-G utiliza un gran número de nodos de cálculo en un entorno de red de área amplia, no se obtiene el beneficio de utilizar un recurso de cuadrícula.",
        "En el caso de AlaX16, CONFLEX-G logró una aceleración al utilizar dos o más clústeres de PC en nuestro banco de pruebas en red.",
        "Esto se debió a que el tiempo de cálculo en el programa del trabajador era largo y los costos adicionales, como la latencia de red y la invocación de programas de trabajador, se volvieron relativamente pequeños y pudieron ocultarse.",
        "El mejor rendimiento se obtuvo utilizando 64 trabajadores en los clústeres de Dennis y Alice.",
        "En el caso de AaX16, el rendimiento logrado fue un aumento de velocidad de 36.08 veces.",
        "La Figura 9 revela el efecto de utilizar la facilidad del OmniRPC AIM en el rendimiento de CONFLEX-G.",
        "En la mayoría de los casos, CONFLEX-G con la instalación de OmniRPC AIM logró un mejor rendimiento que CONFLEX-G sin la instalación.",
        "En particular, la facilidad OmniRPC AIM fue ventajosa al usar dos clústeres conectados por una red de bajo rendimiento.",
        "Los resultados indican que la instalación OmniRPC AIM puede mejorar el rendimiento en el entorno de la red. 4.2.3 Rendimiento para proteínas pequeñas en el banco de pruebas de la red. Finalmente, exploramos la conformación molecular utilizando CONFLEX-G para moléculas grandes.",
        "En un entorno de cuadrícula, este experimento se llevó a cabo utilizando los clústeres Dennis y Ume.",
        "En este experimento, utilizamos dos proteínas, 1L2Y y 1BL1.",
        "La Tabla 6 y la Tabla 7 muestran el rendimiento de CONFLEX-G en el entorno de la red y el de CONFLEX MPI en el clúster de Toyo, respectivamente.",
        "Los incrementos de velocidad en estas tablas fueron calculados respectivamente basados en el rendimiento de un trabajador y 16 trabajadores del clúster Toyo utilizando CONFLEX MPI.",
        "CONFLEX-G con 84 trabajadores en los grupos de Dennis y Ume obtuvo aceleraciones máximas de 56.5 veces para 1L2Y y 34.5 veces para 1L2Y.",
        "Dado que el tiempo de cálculo para la optimización de la estructura requería una gran cantidad de tiempo, la proporción de gastos generales, incluidas tareas como la invocación de un programa de trabajador y la transmisión de datos para la inicialización, se volvió muy pequeña, por lo que el rendimiento de CONFLEX-G mejoró.",
        "Descubrimos que el desequilibrio de carga en el tiempo de procesamiento de la optimización para cada estructura de prueba causó una degradación del rendimiento.",
        "Cuando obtuvimos el mejor rendimiento para 1L2Y utilizando los cúmulos de Dennis y Ume, el tiempo para la optimización de cada estructura varió de 190 a 27,887 segundos, y la proporción entre los tiempos más largos y más cortos fue de 13.4.",
        "Para 1BL1, la proporción de tiempo mínimo sobre tiempo máximo fue de 190.",
        "Además, para que el programa del trabajador espere hasta que se complete la optimización de todas las estructuras de prueba, se descubrió que todos los programas de trabajador esperaban en un estado inactivo durante aproximadamente 6 horas.",
        "Esto ha causado la degradación del rendimiento de CONFLEX-G. 161 4.3 Discusión En esta subsección, discutimos la mejora del rendimiento reflejada en nuestros experimentos.",
        "Explotando el paralelismo - Para aprovechar más recursos computacionales, es necesario aumentar el grado de paralelismo.",
        "En este experimento, el grado de paralelismo no fue tan grande en el caso de las moléculas de muestra.",
        "Al utilizar un conjunto de más de 500 nodos informáticos para 1BL1, el número de estructuras de un solo ensayo asignadas a cada trabajador será solo de uno o dos.",
        "Si se asignan más de 100 estructuras de prueba a cada programa de trabajador, el cálculo se puede realizar de manera más eficiente debido a la reducción de la sobrecarga para la invocación y la inicialización de los trabajadores a través de la facilidad de OmniRPC AIM.",
        "Una idea para aumentar el paralelismo es superponer la ejecución de dos o más conjuntos de estructuras de prueba.",
        "En el algoritmo actual, se genera un conjunto de estructuras de prueba a partir de una estructura inicial y se calculan las optimizaciones para todas las estructuras de este conjunto.",
        "Además, esto ayudará a mejorar el desequilibrio de carga.",
        "Al hacer que otros conjuntos de estructuras de prueba se superpongan, incluso si algunas optimizaciones requieren mucho tiempo, la optimización de las estructuras en otros conjuntos se puede ejecutar para compensar a los trabajadores inactivos de otras optimizaciones.",
        "Sin embargo, no está claro cómo dicha modificación del algoritmo podría afectar la calidad de los resultados finales en términos de una búsqueda de conformación.",
        "Mejora en el desequilibrio de carga al optimizar cada estructura de prueba: la Tabla 8 enumera las estadísticas de los tiempos de optimización de las estructuras de prueba generadas para cada molécula de muestra medida utilizando 28 trabajadores en el clúster de Dennis.",
        "Cuando se utilizan dos o más conjuntos de grupos de PC, la mejora en el rendimiento se ve obstaculizada por el desequilibrio de carga en la optimización de las estructuras de prueba.",
        "El tiempo más largo para optimizar una estructura de prueba fue casi 24 veces más largo que el tiempo más corto.",
        "Además, los demás trabajadores deben esperar hasta que el trabajo más largo haya terminado, por lo que el tiempo total de ejecución no se puede reducir.",
        "Cuando CONFLEX-G buscó los conformeros de 1BL1 mediante el clúster de Dennis, el tiempo de cálculo más largo de la optimización de la estructura de prueba representó aproximadamente el 80% del tiempo transcurrido.",
        "Por lo tanto, hay dos posibles soluciones para el desequilibrio de carga. • Es necesario refinar el algoritmo utilizado para generar la estructura de prueba, que suprime la variación temporal para optimizar una estructura de prueba en CONFLEX.",
        "Esto permite que CONFLEX-G logre un alto rendimiento al utilizar muchos recursos informáticos. • Una de las soluciones es superponer las ejecuciones para dos o más conjuntos de estructuras de prueba.",
        "En los algoritmos actuales, se genera un conjunto de estructuras de prueba a partir de una estructura inicial y el cálculo continúa hasta que se calculen todas las estructuras de este conjunto.",
        "Al tener otros conjuntos de estructuras de prueba, incluso si una búsqueda de estructuras lleva mucho tiempo, un trabajo puede ejecutarse para compensar el desequilibrio de carga causado por otros trabajos.",
        "Sin embargo, no está claro cómo tal modificación de los algoritmos podría afectar la eficiencia. En este experimento, utilizamos un programador de round-robin incorporado simple de OmniRPC, que es necesario para aplicar el programador que asigna estructuras con largos tiempos de optimización a una tabla de alto rendimiento. Tabla 8: Estadísticas del tiempo transcurrido de la optimización de la estructura de prueba utilizando 28 trabajadores en el clúster Dennis.",
        "Código de Varianza Promedio Mínimo Máximo Molecular (s) (s) (s) AlaX04 2.0 11.3 5.3 3 AlaX16 47.6 920.0 154.2 5404 1L2Y 114.2 13331.4 803.2 636782 1BL1 121.0 29641.8 3153.5 2734811 nodos y estructuras con tiempos de optimización cortos a nodos de bajo rendimiento.",
        "En general, sin embargo, podría ser difícil predecir el tiempo necesario para la optimización de la estructura del ensayo.",
        "Paralelización del programa del trabajador para acelerar y optimizar una estructura de prueba - En la implementación actual, no paralelizamos el programa del trabajador.",
        "Para acelerar las estructuras de prueba, la programación híbrida utilizando OmniRPC y OpenMP en una máquina SMP (Symmetric Multiple Processor) puede ser uno de los métodos alternativos para mejorar el rendimiento general.",
        "TRABAJO RELACIONADO Recientemente, se ha desarrollado un algoritmo que resuelve los problemas de paralelización y comunicación en procesadores poco conectados para ser utilizados en simulaciones.",
        "El proyecto Folding@home simula escalas de tiempo miles a millones de veces más largas que las logradas previamente.",
        "Esto nos ha permitido simular el plegamiento por primera vez y examinar directamente enfermedades relacionadas con el plegamiento.",
        "SETI@home es un programa para buscar vida extraterrestre mediante el análisis de señales de radio telescopio utilizando datos de telescopios de diferentes sitios mediante la transformada de Fourier.",
        "SETI@home aborda problemas inmensamente paralelos, en los cuales los cálculos pueden dividirse fácilmente entre varios ordenadores.",
        "Los fragmentos de datos del radiotelescopio pueden asignarse fácilmente a diferentes computadoras.",
        "La mayoría de estos esfuerzos desarrollan explícitamente una aplicación de acoplamiento como una aplicación paralela utilizando un lenguaje de programación paralela de propósito especial y middleware, como MPI, lo cual requiere habilidades y esfuerzo de desarrollo.",
        "Sin embargo, las habilidades y esfuerzo necesarios para desarrollar una aplicación de cuadrícula pueden no ser necesarios para OmniRPC.",
        "Nimrod/G[15] es una herramienta para modelado paramétrico distribuido e implementa una granja de tareas paralelas para simulaciones que requieren varios parámetros de entrada variables.",
        "Nimrod incorpora un componente de programación distribuida que puede gestionar la programación de experimentos individuales en computadoras inactivas en una red de área local.",
        "Nimrod se ha aplicado en aplicaciones que incluyen bioinformática, investigación de operaciones y modelado molecular para el diseño de fármacos.",
        "NetSolve es una instalación de RPC similar a OmniRPC y Ninf, que proporciona una interfaz de programación similar y un mecanismo de equilibrio de carga automático.",
        "Ninf-G[7] es una implementación habilitada para grid de Ninf y proporciona un sistema GridRPC[10] que utiliza LDAP para gestionar la base de datos de ejecutables remotos, pero no admite clústeres que involucren direcciones IP privadas o direcciones dentro de un firewall.",
        "Matsuoka et al. [16] también han discutido varios problemas de diseño relacionados con los sistemas de RPC en malla. 162 6.",
        "CONCLUSIONES Y TRABAJO FUTURO Hemos diseñado e implementado CONFLEX-G utilizando OmniRPC.",
        "Informamos sobre su rendimiento en un banco de pruebas en red de varios clústeres de PC distribuidos geográficamente.",
        "Para explorar la conformación de grandes biomoléculas, se utilizó CONFLEXG para generar estructuras de prueba de las moléculas y asignar trabajos para optimizarlas mediante mecánica molecular en la cuadrícula.",
        "OmniRPC proporciona un modelo de persistencia restringido para que el módulo se inicialice automáticamente al invocarse llamando al procedimiento de inicialización.",
        "Esto puede eliminar la comunicación innecesaria y la inicialización en cada llamada en CONFLEX-G. CONFLEX-G puede lograr un rendimiento comparable al de CONFLEX MPI y aprovecha más recursos informáticos al permitir el uso de múltiples clústeres de PC en la red.",
        "El resultado experimental muestra que CONFLEX-G logró una aceleración de 56.5 veces para la molécula 1BL1, donde la molécula consta de un gran número de átomos y cada optimización de la estructura de prueba requiere mucho tiempo.",
        "El desequilibrio de carga de las optimizaciones de la estructura de prueba puede causar degradación del rendimiento.",
        "Necesitamos refinar el algoritmo utilizado para generar la estructura de prueba con el fin de mejorar la optimización del equilibrio de carga para las estructuras de prueba en CONFLEX.",
        "Los estudios futuros incluirán el desarrollo de herramientas de implementación y un examen de la tolerancia a fallos.",
        "En el OmniRPC actual, el registro de un programa de ejecución en hosts remotos y despliegues de programas de trabajadores se configuran manualmente.",
        "Se requerirán herramientas de implementación a medida que se incremente el número de hosts remotos.",
        "En entornos de cuadrícula en los que el entorno cambia dinámicamente, también es necesario contar con soporte para la tolerancia a fallos.",
        "Esta característica es especialmente importante en aplicaciones a gran escala que requieren cálculos prolongados en un entorno de cuadrícula.",
        "Planeamos refinar el algoritmo de optimización conformacional en CONFLEX para explorar el espacio de búsqueda de conformaciones de moléculas biológicas más grandes como la proteasa del VIH utilizando hasta 1000 trabajadores en un entorno de cuadrícula.",
        "AGRADECIMIENTOS Esta investigación fue apoyada en parte por una Subvención de la Secretaría de Educación, Cultura, Deportes, Ciencia y Tecnología de Japón, No. 14019011, 2002, y como parte del Programa de Investigación y Desarrollo para Aplicar la Ciencia y Tecnología Computacional Avanzada por la Corporación de Ciencia y Tecnología de Japón (Investigación en la plataforma de computación en red para el diseño de fármacos).",
        "Nos gustaría agradecer al centro de investigación de tecnología de red, AIST, Japón por proporcionar recursos informáticos para nuestro experimento. 8.",
        "REFERENCIAS [1] H. Goto y E. Osawa.",
        "Un algoritmo eficiente para buscar conformaciones de baja energía de moléculas cíclicas y acíclicas.",
        "J. Quím.",
        "Soc., Perkin Trans, 2:187-198, 1993. [2] M. Sato, T. Boku, y D. Takahashi.",
        "OmniRPC: un sistema de RPC en malla para programación paralela en entornos de clúster y malla.",
        "En Proc. de CCGrid2003, páginas 219-229, 2003. [3] M. Sato, M. Hirano, Y. Tanaka y S. Sekiguchi.",
        "OmniRPC: una instalación de RPC en Grid para la computación en clúster y global en OpenMP.",
        "En Proc. del Taller sobre Aplicaciones y Herramientas OpenMP 2001 (LNCS 2104), páginas 130-135, 2001. [4] Proyecto OmniRPC. http://www.omni.hpcc.jp/omnirpc/. [5] M. Sato, H. Nakada, S. Sekiguchi, S. Matsuoka, U. Nagashima y H. Takagi.",
        "Ninf: Una Biblioteca de Información Basada en Red para la Infraestructura de Computación Global en Todo el Mundo.",
        "En HPCN Europe, páginas 491-502, 1997. [6] Proyecto Ninf. http://ninf.apgrid.org/. [7] Y. Tanaka, H. Nakada, S. Sekiguchi, T. Suzumura y S. Matsuoka.",
        "Ninf-G: Una Implementación de Referencia de Middleware de Programación basado en RPC para la Computación en Grid.",
        "Revista de Computación en Red, 1(1):41-51, 2003. [8] D. Arnold, S. Agrawal, S. Blackford, J. Dongarra, M. Miller, K. Seymour, K. Sagi, Z. Shi y S. Vadhiyar.",
        "Guía del usuario de NetSolve V1.4.1.",
        "Departamento de Computación Innovador.",
        "Informe técnico ICL-UT-02-05, Universidad de Tennessee, Knoxville, TN, junio de 2002. [9] Grupo de gestión de objetos. http://www.omg.org/. [10] K. Seymour, H. Nakada, S. Matsuoka, J. Dongarra, C. Lee y H. Casanova.",
        "GridRPC: Una API de Llamada a Procedimientos Remotos para la Computación en Grid. [11] H. Goto, T. Takahashi, Y. Takata, K. Ohta y U. Nagashima.",
        "Conflex: Comportamientos conformacionales de polipéptidos según lo predicho por una búsqueda en el espacio conformacional.",
        "En Nanotech2003, volumen 1, páginas 32-35, 2003. [12] I.",
        "Foster y C. Kesselman.",
        "Globus: Un conjunto de herramientas de infraestructura de metacomputación.",
        "La Revista Internacional de Aplicaciones de Supercomputadoras y Computación de Alto Rendimiento, 11(2):115-128, Verano 1997. [13] Stefan M. Larson, Christopher D. Snow, Michael Shirts y Vijay S. Pande.",
        "Folding@home y genome@home: Utilizando computación distribuida para abordar problemas previamente intratables en biología computacional.",
        "Genómica Computacional, 2002. Proyecto seti@home. http://setiathome.ssl.berkeley.edu/. R. Buyya, K. Branson, J. Giddy y D. Abramson.",
        "El laboratorio virtual: un conjunto de herramientas para habilitar la modelización molecular distribuida para el diseño de fármacos en la red mundial.",
        "Concurrencia y Computación: Práctica y Experiencia, 15(1):1-25, enero de 2003. [16] S. Matsuoka, H. Nakada, M. Sato y S. Sekiguchi.",
        "Problemas de diseño de sistemas de servidores habilitados para redes para la red.",
        "En Proc. de GRID 2000 (LNCS 1971), páginas 4-17, 2000. 163"
    ],
    "error_count": 9,
    "keys": {
        "conflex-g": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Implementation and Performance Evaluation of <br>conflex-g</br>: Grid-enabled Molecular Conformational Space Search Program with OmniRPC Yoshihiro Nakajima Graduate School of Systems & Information Engineering, University of Tsukuba Tsukuba, 305-8577, Japan yoshihiro@hpcs.is.tsukuba.ac.jp Mitsuhisa Sato Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan msato@is.tsukuba.ac.jp Hitoshi Goto Knowledge-based Information Engineering, Toyohashi University of Technology Toyohashi, 441-8580, Japan gotoh@cochem2.tutkie.tut.ac.jp Taisuke Boku, Daisuke Takahashi Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan {taisuke,daisuke}@hpcs.is.tsukuba.ac.jp ABSTRACT <br>conflex-g</br> is the grid-enabled version of a molecular conformational space search program called CONFLEX.",
                "We have implemented <br>conflex-g</br> using a grid RPC system called OmniRPC.",
                "In this paper, we report the performance of <br>conflex-g</br> in a grid testbed of several geographically distributed PC clusters.",
                "In order to explore many conformation of large bio-molecules, <br>conflex-g</br> generates trial structures of the molecules and allocates jobs to optimize a trial structure with a reliable molecular mechanics method in the grid.",
                "OmniRPC provides a restricted persistence model to support the parametric search applications.",
                "In this model, when the initialization procedure is defined in the RPC module, the module is automatically initialized at the time of invocation by calling the initialization procedure.",
                "This can eliminate unnecessary communication and initialization at each call in <br>conflex-g</br>. CONFLEXG can achieve performance comparable to CONFLEX MPI and can exploit more computing resources by allowing the use of a cluster of multiple clusters in the grid.",
                "The experimental result shows that <br>conflex-g</br> achieved a speedup of 56.5 times in the case of the 1BL1 molecule, where the molecule consists of a large number of atoms, and each trial structure optimization requires significant time.",
                "The load imbalance of the optimization time of the trial structure may also cause performance degradation.",
                "Categories and Subject Descriptors C.2.4 [Computer Systems Organization]: COMPUTERCOMMUNICATION NETWORK-Distributed Systems; J.2.4 [Computer Applications]: PHYSICAL SCIENCES AND ENGINEERING General Terms Design,Performance 1.",
                "INTRODUCTION Elucidation of the stable conformations and the folding process of proteins is one of the most fundamental and challenging goals in life science.",
                "While some of the most common secondary structures (e.g., certain types of helix, the beta-strand, and the coil) are well known, precise analysis of the thousands of chemically important conformers and pico-second-order analysis of their conformational interconversions via the transition states on the potential energy surface are required for the microsecond-order investigation of the folding process toward the tertiary structure formations.",
                "Recently, the concept of the computational grid has begun to attract significant interest in the field of high-performance network computing.",
                "Rapid advances in wide-area networking technology and infrastructure have made it possible to construct large-scale, high-performance distributed computing environments, or computational grids, that provide dependable, consistent and pervasive access to enormous computational resources.",
                "CONFLEX is one of the most efficient and reliable conformational space search programs[1].",
                "We have applied this 154 program to parallelization using global computing.",
                "The performance of the parallelized CONFLEX enables exploration of the lower-energy region of the conformational space of small peptides within an available elapsed time using a local PC cluster.",
                "Since trial structure optimization in CONFLEX is calculated via molecular mechanics, conformational space search can be performed quickly compared to that using molecular orbital calculation.",
                "Although the parallelized version of CONFLEX was used to calculate in parallel the structure optimization, which takes up over 90% of the processing in the molecular conformation search, sufficient improvement in the speedup could not be achieved by this method alone.",
                "Therefore, for high polymers from live organisms, such as HIV protease, the use one PC cluster is insufficient due to the requirement for optimization of a huge number of trial structures.",
                "This requires the vast computer resources of a grid computing environment.",
                "In this paper, we describe <br>conflex-g</br>, a grid-enabled molecular conformational search program, using OmniRPC and report its performance in a grid of several PC clusters which are geographically distributed.",
                "The prototype <br>conflex-g</br> allocates calculation trial structures optimization, which is a very time-consuming task, to worker nodes in the grid environment in order to obtain high throughput.",
                "In addition, we compare the performance of <br>conflex-g</br> in a local PC cluster to that in a grid testbed.",
                "OmniRPC[2, 3, 4] is a thread-safe implementation of Ninf RPC[5, 6] which is a Grid RPC facility for grid environment computing.",
                "Several systems adopt the concept of the RPC as the basic model for grid environment computing, including Ninf-G[7], NetSolve[8] and CORBA[9].",
                "The RPCstyle system provides an easy-to-use, intuitive programming interface, allowing users of the grid system to easily create grid-enabled applications.",
                "In order to support parallel programming, an RPC client can issue asynchronous call requests to a different remote computer to exploit networkwide parallelism via OmniRPC.",
                "In this paper, we propose the OmniRPC persistence model to a Grid RPC system and demonstrate its effectiveness.",
                "In order to support a typical application for a grid environment, such as a parametric search application, in which the same function is executed with different input parameters on the same data set.",
                "In the current GridRPC system[10], the data set by the previous call cannot be used by subsequent calls.",
                "In the OmniRPC system, once a remote executable is invoked, the client attempts to use the invoked remote executable and its initialized state for subsequent RPC calls to the same remote functions in order to eliminate the invocation cost of each call.",
                "This paper demonstrates that <br>conflex-g</br> is able to exploit the huge computer resources of a grid environment and search large-scale molecular conformers.",
                "We demonstrate <br>conflex-g</br> on our grid testbed using the actual protein as a sample molecule.",
                "The OmniRPC facility of the automatic initializable module (AIM) allows the system to efficiently calculate numerous conformers.",
                "Furthermore, by using OmniRPC, the user can grid-parallelize the existing application, and move from the cluster to the grid environment without modifying program code and compiling the program.",
                "In addition, the user can easily build a private grid environment.",
                "The rest of this paper is organized as follows.",
                "An overview Selection of Initial Structure Conformations Database Local Perturbation Geometry Optimization Comparison and Registration Figure 1: Algorithm of conformational space search in the original CONFLEX. of the CONFLEX system is presented in Section2, and the implementation and design of <br>conflex-g</br> are described in Section 3.",
                "We report experimental results obtained using <br>conflex-g</br> and discuss its performance in Section 4.",
                "In Section 6, we present conclusions and discuss subjects for future study. 2.",
                "CONFLEX CONFLEX [1] is an efficient conformational space search program, which can predominately and exhaustively search the conformers in the lower-energy region.",
                "Applications of CONFLEX include the elucidation of the reactivity and selectivity of drugs and possible drug materials with regard to their conformational flexibility. 2.1 Algorithm of ConformationalSpaceSearch The basic strategy of CONFLEX is an exhaustive search of only the low-energy regions.",
                "The original CONFLEX performs the following four major steps: 1.",
                "Selection of an initial structure among the previously discovered unique conformers sorted in a conformational database. (An input structure is used as the first initial structure at the beginning of a search execution only.) 2.",
                "Generation of trial structures by local perturbations to the selected initial structure. 3.",
                "Geometry optimization for the newly generated trial structures. 4.",
                "Comparison of the successfully optimized (trial) structures with the other conformers stored in a conformation database, and preservation of newly discovered unique conformers in the database.",
                "Figure 1 shows the outline of CONFLEX, the original conformational space search algorithm.",
                "These procedures incorporate two unique strategies.",
                "Figure 2 shows the strategies for generating local perturbations in CONFLEX.",
                "The first strategy involves both corner flapping and edge flipping for the ring atoms and stepwise rotation for side-chains or backbone chains.",
                "These methods provide a highly efficient way to produce several good trial structures.",
                "These perturbations can be considered to mimic 155 Stepwise Rotation Corner Flap Edge Flip Figure 2: Strategies used to generate the local perturbations. a barrier-crossing step in the elementary process of the thermal conformational inter-conversion.",
                "Actually, the perturbations of an initial structure correspond to the precise performance around the space of the initial structure because of localization and weakness of the perturbation.",
                "The selection rule of the initial structure, the LowestConformer-First rule, is the second strategy for directing the conformation search expanded to the low-energy regions.",
                "The initial structure is selected as the set of lowest energy conformers stored in the conformation database.",
                "This rule is effective in moving down the search space toward lower energy regions, like water from a stream running into an empty reservoir, while filling local depressions along the way.",
                "Therefore, these tactical procedures of the CONFLEX search are referred to as the Reservoir Filling Algorithm.",
                "In order to remain in the low-energy region and perform an exhaustive search, the search limit (SEL), which determines the maximum energy of the initial structures, is pre-defined.",
                "Gradually increasing SEL allows only the lowenergy conformers to be searched and avoids straying into unnecessarily high-energy regions. 2.2 Parallelization of CONFLEX for Cluster For application to over 100 atoms, CONFLEX was improved using high-performance parallel computing techniques.",
                "In the CONFLEX search algorithm, the geometry optimization procedures always take 95% of the elapsed time of the search execution.",
                "Therefore, we parallelized this optimization using the Master/Worker parallelization technique.",
                "We modified the search procedures as follows.",
                "After trial structures are generated (step 2), they are temporarily stored in a task pool on the master node.",
                "Then, each worker node is dynamically supplied with one trial structure from the master node.",
                "After an optimization on a worker node is finished, the worker is immediately supplied with another trial structure.",
                "When all of the trial structures related to a given initial structure are optimized, only the master procedure is used in comparison.",
                "By parallelizing CONFLEX, the speedup of searching molecular conformers obtained is as reported in[11]. 3.",
                "<br>conflex-g</br> Originally, CONFLEX was intended for use in exploring the conformers of the large bio-molecules, such HIV protease.",
                "In such molecules, the number of trial structures increases and the time required for optimization of RPC Selection of Initial Structure Conformations Database Local Perturbation Comparison and Registration Client program Task Pool of Geometry Optimization RPC RPC Grid environment Cluster B Cluster A Cluster C Trial structureTrial structure Trial structure Trial structure Figure 3: Procedure of <br>conflex-g</br>. agent rexrex rex Client jones.tsukuba.ac.jp hpc-serv.hpcc.jp hpc1 hpc2 hpc3 Agent invocation communicationNetwork Figure 4: Overview of the OmniRPC system for the remote cluster having a private IP address. the trial structure becomes immense.",
                "We implemented the parallelized version of CONFLEX, which cannot treat such molecules using only a local PC cluster.",
                "In order to exploit the vast computing resources of a grid environment, we designed and implemented <br>conflex-g</br>, which is a grid-enabled version of CONFLEX, with the OmniRPC system.",
                "<br>conflex-g</br> allocates jobs to optimize a trial structure to the computational nodes of each cluster in the grid environment.",
                "Figure 3 shows the process of <br>conflex-g</br>.",
                "The worker programs are initialized by the initialize method, which is provided by the OmniRPC AIM facility at worker invocation.",
                "At each RPC call, the initialized state is reused on the remote host.",
                "In other words, the client program can eliminate the initialization for each RPC call, and can therefore optimize trial structures efficiently. 3.1 The OmniRPC system OmniRPC is a Grid RPC system which allows seamless parallel programming from a PC cluster to a grid environment.",
                "OmniRPC inherits its API and basic architecture from Ninf.",
                "A client and the remote computational hosts which execute the remote procedures may be connected via a network.",
                "The remote libraries are implemented as an executable program which contains a network stub routine as its main routine.",
                "We call this executable program a remote executable program (rex).",
                "When the OmniRPC client program starts, the initialization function of OmniRPC system invokes the OmniRPC agent program omrpc-agent in the remote hosts listed in the host file.",
                "To invoke the agent, the user can use the remote shell command rsh in a local-area network, the GRAM (Globus Resource Allocation Manager) API of the Globus 156 toolkit[12] in a grid environment, or the secure remote shell command ssh.",
                "The user can switch the configurations only by changing the host file.",
                "OmniRpcCall is a simple client programming interface for calling remote functions.",
                "When OmniRpcCall makes a remote procedure call, the call is allocated to an appropriate remote host.",
                "When the client issues the RPC request, it requests that the agent in the selected host submit the job of the remote executable with the local job scheduler specified in the host file.",
                "If the job scheduler is not specified, the agent executes the remote executable in the same node by the fork system call.",
                "The client sends the data of the input arguments to the invoked remote executable, and receives the results upon return of the remote function.",
                "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls in order to eliminate the cost of invoking the same remote executable again.",
                "When the agent and the remote executables are invoked, the remote programs obtain the client address and port from the argument list and connect back to the client by direct TCP/IP or Globus-IO for data transmission.",
                "Because the OmniRPC system does not use any fixed service ports, the client program allocates unused ports dynamically to wait for connection from the remote executables.",
                "This avoids possible security problems, and allows the user to install the OmniRPC system without requiring a privileged account.",
                "Herein, a typical grid resource is regarded as a cluster of geographically distributed PC clusters.",
                "For PC clusters on a private network, an OmniRPC agent process on the server host functions as a proxy to relay communications between the client and the remote executables by multiplexing the communications using a single connection.",
                "This feature, called multiplex IO (MXIO), allows a single client to use up to 1,000 remote computing hosts.",
                "When the PC cluster is inside a firewall, the port forwarding of SSH enables the node to communicate to the outside with MXIO.",
                "Figure 4 shows the overview of the OmniRPC system for a remote cluster with a private IP address.",
                "For parallel programming, the programmer can use asynchronous remote procedure calls, allowing the client to issue several requests while continuing with other computations.",
                "The requests are dispatched to different remote hosts to be executed in parallel, and the client waits or polls the completed request.",
                "In such a programming model with asynchronous remote procedure calls, the programmer should handle outstanding requests explicitly.",
                "Because OmniRPC is a thread-safe system, a number of remote procedure calls may be outstanding at any time for multi-threaded programs written in OpenMP. 3.2 OmniRPC persistence model: automatic initializable module OmniRPC efficiently supports typical Master/Worker parallel applications such as parametric execution programs.",
                "For parametric search applications, which often require large amount of identical data for each call, OmniRPC supports a limited persistence model, which is implemented by the automatic initializable module.",
                "The user can define an initialization procedure in the remote executable in order to send and store data automatically in advance of actual remote procedure calls.",
                "Since the remote executable may accept requests for subsequent calls, the data set which has been set by the initialization procedure can be re-used.",
                "As a result, the worker program can execute efficiently and reduce the amount of data transmitted for initialization.",
                "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls.",
                "However, OmniRPC does not guarantee persistence of the remote executable, so that the data set by the previous call cannot be used by subsequent calls.",
                "This is because a remote call by OmniRpcCall may be scheduled to any remote host dynamically, and remote executables may be terminated accidentally due to dynamic re-scheduling or host faults.",
                "However, persistence of the remote executable can be exploited in certain applications.",
                "An example is a parametric search application: in such an application, it would be efficient if a large set of data could be pre-loaded by the first call, and subsequent calls could be performed on the same data, but with different parameters.",
                "This is the case for CONFLEX.",
                "OmniRPC provides a restricted persistence model through the automatic initializable module (AIM) in order to support this type of application.",
                "If the initialization procedure is defined in the module, the module is automatically initialized at invocation by calling the initialization procedure.",
                "When the remote executable is re-scheduled in different hosts, the initialization is called to initialize the newly allocated remote module.",
                "This can eliminate unnecessary communications when RPC calls use the same data.",
                "To reveal more about the difference in progress between the cases with OmniRPC AIM and without OmniRPC AIM, we present two figures.",
                "Figure 5 illustrates the time chart of the progress of a typical OmniRPC application using the OmniRPC AIM facility, and Figure 6 illustrates the time chart of the same application without the OmniRPC AIM facility.",
                "In both figures, the lines between diamonds represent the processes of initialization, and the lines between points represent the calculation.",
                "The bold line indicates the time when the client program sends the data to a worker program.",
                "It is necessary for the application without the OmniRPC AIM facility to initialize at each RPC.",
                "The application using the OmniRPC AIM facility can re-use the initialized data once the data set is initialized.",
                "This can reduce the initialization at each RPC.",
                "The workers of the application with the AIM can calculate efficiently compared to the application without the OmniRPC AIM facility. 3.3 Implementation of <br>conflex-g</br> using OmniRPC Figure 3 shows an overview of the process used in CONFLEXG.",
                "Using RPCs, <br>conflex-g</br> allocates the processes of trial structure optimization, which are performed by the computation nodes of a PC cluster in the MPI version of CONFLEX, to the computational nodes of each cluster in a grid environment.",
                "There are two computations which are performed by the worker programs in <br>conflex-g</br>. One is the initialization of a worker program, and another is the calculation of trial structure optimization.",
                "First, the OmniRPC facility of the AIM is adapted for initialization of a worker program.",
                "This facility automatically calls the initialization function, which is contained in the worker program, once the client program invokes the worker program in a remote node.",
                "It is necessary for the common RPC system including GridRPC to initialize a program for every RPC call, since data persistence of worker programs 157 time Client Program Worker Program 1 Worker Program 2 initialization initialization calculation calculation calculation calculation calculation Parallelized using asynchronous RPCs Figure 5: Time chart of applications using the OmniRPC facility of the automatic initializable module. time Client Program Worker Program 1 Worker Program 2 initialization initializationcalculation calculation calculation calculation initialization initialization initialization Parallelized using asynchronous RPCs calculation Figure 6: Time chart of applications without the OmniRPC facility of the automatic initializable module.",
                "Table 1: Machine configurations in the grid testbed.",
                "Site Cluster Name Machine Network Authentication # of Nodes # of CPUs Univ. of Tsukuba Dennis Dual Xeon 2.4GHz 1Gb Ethernet Globus, SSH 14 28 Alice Dual Athlon 1800+ 100Mb Ethernet Globus, SSH 18 36 TUT Toyo Dual Athlon 2600+ 100Mb Ethernet SSH 8 16 AIST Ume Dual Pentium3 1.4GHz 1Gb Ethernet Globus, SSH 32 64 is not supported.",
                "In OmniRPC, however, when the Initialize remote function is defined in the worker program and a new worker program, corresponding to the other RPC, is assigned to execute, an Initialize function is called automatically.",
                "Therefore, after the Initialize function call to set up common initialization data, a worker program can re-use this data and increase the efficiency of its processes.",
                "Thus, the higher the set-up cost, the greater the potential benefit.",
                "We implemented the worker program of <br>conflex-g</br> to receive data, such as evaluation parameters of energy, from a client program and to be initialized by the Initialize function.",
                "We arranged the client program of <br>conflex-g</br> to transfer the parameter file at the time of worker initialization.",
                "This enables execution to be performed by modify only the client setting if the user wants to run <br>conflex-g</br> with a different data set.",
                "Second, in order to calculate trial structure optimization in a worker program, the worker program must receive the data, such as the atom arrangement of the trial structure and the internal energy state.",
                "The result is returned to the client program after the worker has Optimized the trial structure.",
                "Since the calculation portion of the structure optimization in this worker program can be calculated independently using different parameters, we parallelized this portion using asynchronous RPCs on the client side.",
                "To call the structure optimization function in a worker program from the client program, we use the OmniRpcCallAsync API, which is intended for asynchronous RPC.",
                "In addition, OmniRpcCallWaitAll API which waits until all asynchronous RPCs are used in order to perform synchronization with all of the asynchronous RPCs completed so as to optimize the trial structure.",
                "The client program which assigns trial structure optimization to the calculation node of a PC cluster using RPC is outlined as follows.",
                "OmniRpcInit() OmniRpcModuleInit(conflex_search,...); ... while( <new conformers> ) { foreach( <trial structures> ) OmniRpcCallAsync(conflex_search_worker, ...); OmniRpcWaitAll(); ...",
                "Note that OmniRpcModuleInit API returns only the arguments needed for initialization and will not actually execute the Initialization function.",
                "As described above, the actual Initialization is performed at the first remote call.",
                "Since the OmniRPC system has an easy round-robin scheduler, we do not have to explicitly write the code for load balance.",
                "Therefore, RPCs are allocated automatically to idle workers. 158 Table 2: Network performance between the master node of the Dennis cluster and the master node of each PC cluster.",
                "Round-Trip Throughput Cluster Time (ms) (Mbps) Dennis 0.23 879.31 Alice 0.18 94.12 Toyo 11.27 1.53 Ume 1.07 373.33 4.",
                "PRELIMINARY RESULTS 4.1 Grid Testbed The grid testbed was constructed by computing resources at the University of Tsukuba, the Toyohashi University of Technology (TUT) and the National Institute of Advanced Industrial Science and Technology (AIST).",
                "Table 1 shows the computing resources used for the grid of the present study.",
                "The University of Tsukuba and AIST are connected by a 1-Gbps Tsukuba WAN, and the other PC clusters are connected by SINET, which is wide-area network dedicated to academic research in Japan.",
                "Table 2 shows the performance of the measured network between the master node of the Dennis cluster and the master node of each PC cluster in the grid testbed.",
                "The communication throughput was measured using netperf, and the round-trip time was measured by ping. 4.2 Performance of <br>conflex-g</br> In all of the <br>conflex-g</br> experiments, the client program was executed on the master node of the Dennis cluster at the University of Tsukuba.",
                "The built-in Round-Robin scheduler of OmniRPC was used as a job scheduler.",
                "SSH was used for an authentication system, the OminRPCs MXIO, which relays the I/O communication between client program and worker programs by port forwarding of SSH was, not used.",
                "Note that one worker program is assigned and performed on one CPU of the calculation node in a PC cluster.",
                "That is, the number of workers is equal to the number of CPUs.",
                "These programs were compiled by the Intel Fortran Compiler 7.0 and gcc 2.95.",
                "MPICH, Version 1.2.5, was used to compare the performance between CONFLEX MPI and <br>conflex-g</br>.",
                "In order to demonstrate the usability of the OmniRPC facility of the AIM, we implemented another version of <br>conflex-g</br> which did not utilize the OmniRPC facility.",
                "The worker program in this version of CONFLEXG must be initialized at each RPC because the worker does not hold the previous data set.",
                "In order to examine the performance of <br>conflex-g</br>, we selected two peptides and two small protein as test molecules: • N-acetyl tetra-alanine methylester (AlaX04) • N-acetyl hexdeca-alanine methylester (AlaX16) • TRP-cage miniprotein construct TC5B (1L2Y) • PTH receptor N-terminus fragment (1BL1) Table 3 lists the characteristics of these sample molecules.",
                "The column trial structure / loops in this table shows the Figure 7: Performances of <br>conflex-g</br>, CONFLEX MPI and Original CONFLEX in the Dennis cluster.",
                "Figure 8: Speedup ratio, which is based on the elapsed time of <br>conflex-g</br> using one worker in the Dennis cluster.",
                "Figure 9: Performance of <br>conflex-g</br> with and without the OmniRPC facility of automatic initializable module for AlaX16. 159 Table 3: Characteristics of molecules and data transmission for optimizing trial molecular structures in each molecular code.",
                "Molecular # of # of total trial trial structure Data transfer to Data transfer code atoms structures / loop initialize a worker / trial structure AlaX04 181 360 45 2033KB 17.00KB AlaX16 191 480 160 2063KB 18.14KB 1L2Y 315 331 331 2099KB 29.58KB 1BL1 519 519 519 2150KB 48.67KB Table 4: Elapsed search time for the molecular conformation of AlaX04.",
                "Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (sequential) 1 320.0 1786.21 4.96 1786.21 1.00 Toyo (16) 16 20.0 1497.08 4.16 196.32 9.10 Dennis (28) 28 11.4 1905.51 5.29 97.00 18.41 Alice (36) 36 8.9 2055.25 5.71 87.09 20.51 Ume (56) 56 5.7 2196.77 6.10 120.69 14.80 Dennis (28) + Toyo (16) 44 7.3 1630.09 4.53 162.35 11.00 Alice (36) + Toyo (16) 52 6.2 1774.53 4.93 178.24 10.02 Dennis (28) + Alice (36) 64 5.0 1999.02 5.55 81.52 21.91 Dennis (28) + Ume (56) 84 3.8 2085.84 5.79 92.22 19.37 Alice (36) + Ume (56) 92 3.5 2120.87 5.89 101.25 17.64 Table 5: Elapsed search time for the molecular conformation of AlaX16 Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (1) 1 480.0 74027.80 154.22 74027.80 1.00 Toyo (16) 16 30.0 70414.21 146.70 4699.15 15.75 Dennis (28) 28 17.1 74027.80 154.22 3375.60 21.93 Alice (36) 36 13.3 90047.27 187.60 3260.41 22.71 Ume (56) 56 8.6 123399.38 257.08 2913.63 25.41 Dennis (28) + Toyo (16) 44 10.9 76747.74 159.89 2762.10 26.80 Alice (36) + Toyo (16) 52 9.2 82700.44 172.29 2246.73 32.95 Dennis (28) + Alice (36) 64 7.5 87571.30 182.44 2051.50 36.08 Toyo (16) + Ume (56) 72 6.7 109671.32 228.48 2617.85 28.28 Dennis (28) + Ume (56) 84 5.7 102817.90 214.20 2478.93 29.86 Dennis(28)+Ume(56)+Toyo(16) 100 4.8 98238.07 204.66 2478.93 29.86 Table 6: Elapsed time of the search for the trial structure of 1L2Y.",
                "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 331.0 867 286,967 79.71 1.00 Toyo MPI (16) 16 20.7 867 18,696 5.19 15.34 Dennis (28) 28 11.8 803 14,101 3.91 20.35 Dennis (28) + Ume(56) 84 3.9 1,064 8,316 2.31 34.50 Table 7: Elapsed time of the search for the trial structure of 1BL1.",
                "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 519.0 3,646 1892,210 525.61 1.00 Toyo MPI (16) 16 32.4 3,646 120,028 33.34 15.76 Dennis (28) 28 18.5 3,154 61,803 17.16 30.61 Dennis (28) + Ume (56) 84 6.1 4,497 33,502 9.30 56.48 160 number of trial structures generated in each iteration, indicating the degree of parallelism.",
                "Figure 3 also summarizes the amount of data transmission required for initialization of a worker program and for optimization of each trial structure.",
                "Note that the amount of data transmission, which is required in order to initialize a worker program and optimize a trial structure in the MPI version of CONFLEX, is equal to that of <br>conflex-g</br>. We used an improvement version of MM2 force field to assign a potential energy function to various geometric properties of a group of atoms. 4.2.1 Performance in a Local Cluster We first compared the performance of <br>conflex-g</br>, the MPI version of CONFLEX, and the original sequential version of CONFLEX-G using a local cluster.",
                "We investigated performance by varying the number of workers using the Dennis cluster.",
                "We chose AlaX04 as a test molecule for this experiment.",
                "Figure 7 compares the results for the CONFLEX MPI and <br>conflex-g</br> in a local PC cluster.",
                "The result of this experiment shows that <br>conflex-g</br> can reduce the execution time as the number of workers increases, as in the MPI version of CONFLEX.",
                "We found that <br>conflex-g</br> achieved efficiencies comparable to the MPI version.",
                "With 28 workers, <br>conflex-g</br> achieved an 18.00 times speedup compared to the CONFLEX sequential version.",
                "The performance of <br>conflex-g</br> without the OmniRPC AIM facility is worse than that of CONFLEXG using the facility, based on the increase in the number of workers.",
                "This indicates that the OmniRPC AIM enables the worker to calculate efficiently without other calculations, such initialization or invocation of worker programs.",
                "As the number of workers is increased, the performance of <br>conflex-g</br> is a slightly lower than that of the MPI version.",
                "This performance degradation is caused by differences in the worker initialization processes of <br>conflex-g</br> and CONFLEX MPI.",
                "In the case of CONFLEX MPI, all workers are initialized in advance of the optimization phase.",
                "In the case of OminRPC, the worker is invoked on-demand when the RPC call is actually issued.",
                "Therefore, the initialization incurs this overhead.",
                "Since the objective of <br>conflex-g</br> is to explore the conformations of large bio-molecules, the number of trial structures and the time to optimize the trial structure might be large.",
                "In such cases, the overhead to invoke and initialize the worker program can be small compared to the entire elapsed time. 4.2.2 Performance for Peptides in The Grid Testbed First, the sample molecules (AlaX04 and AlaX16) were used to examine the <br>conflex-g</br> performance in a grid environment.",
                "Figure 8 shows the speedup achieved by using multiple clusters compared to using one worker in the Dennis cluster.",
                "Detailed results are shown in Table 4 and Table 5.",
                "In both cases, the best performance was obtained using 64 workers of the combination of the Dennis and Alice clusters.",
                "<br>conflex-g</br> achieved a maximum speedup of 36.08 times for AlaX04 and a maximum speedup of 21.91 times for AlaX16.",
                "In the case of AlaX04, the performance is improved only when the network performance between clusters is high.",
                "However, even if two or more clusters are used in a wide area network environment, the performance improvement was slight because the optimization time of one trial structure generated from AlaX04, a small molecule, is short.",
                "In addition, the overhead required for invocation of a worker program and network data transmission consume a large portion of the remaining processing time.",
                "In particular, the data transmission required for the initialization of a worker program is 2 MB.",
                "In the case of Toyo cluster, where the network performance between the client program and the worker programs is poor, the time of data transmission to the worker program required approximately 6.7 seconds.",
                "Since this transmission time was longer than the processing time of one structure optimization in <br>conflex-g</br>, most of the time was spent for this data transmission.",
                "Therefore, even if <br>conflex-g</br> uses a large number of calculation nodes in a wide area network environment, the benefit of using a grid resource is not obtained.",
                "In the case of AlaX16, <br>conflex-g</br> achieved a speedup by using two or more PC clusters in our grid testbed.",
                "This was because the calculation time on the worker program was long and the overhead, such as network latency and the invoking of worker programs, became relatively small and could be hidden.",
                "The best performance was obtained using 64 workers in the Dennis and Alice clusters.",
                "In the case of AaX16, the achieved performance was a speedup of 36.08 times.",
                "Figure 9 reveals the effect of using the facility of the OmniRPC AIM on <br>conflex-g</br> performance.",
                "In most cases, <br>conflex-g</br> with the OmniRPC AIM facility archived better performance than <br>conflex-g</br> without the facility.",
                "In particular, the OmniRPC AIM facility was advantageous when using two clusters connected by a low-performance network.",
                "The results indicate that the OmniRPC AIM facility can improve performance in the grid environment. 4.2.3 PerformanceforSmallProteininTheGridTestbed Finally, we explored the molecular conformation using <br>conflex-g</br> for large molecules.",
                "In a grid environment, this experiment was conducted using the Dennis and Ume clusters.",
                "In this experiment, we used two proteins, 1L2Y and 1BL1.",
                "Table 6 and Table 7 show the performance of <br>conflex-g</br> in the grid environment and that of CONFLEX MPI in the Toyo cluster, respectively.",
                "The speedups in these tables were computed respectively based on the performance of one worker and 16 workers of the Toyo cluster using CONFLEX MPI.",
                "<br>conflex-g</br> with 84 workers in Dennis and Ume clusters obtained maximum speedups of 56.5 times for 1L2Y and 34.5 times for 1L2Y.",
                "Since the calculation time for structure optimization required a great deal of time, the ratio of overhead, including tasks such as the invocation of a worker program and data transmission for initialization, became very small, so that the performance of <br>conflex-g</br> was improved.",
                "We found that the load imbalance in the processing time of optimization for each trial structure caused performance degradation.",
                "When we obtained the best performance for 1L2Y using the Dennis and Ume clusters, the time for each structure optimization varied from 190 to 27,887 seconds, and the ratio between the longest and shortest times was 13.4.",
                "For 1BL1, the ratio of minimum time over maximum time was 190.",
                "In addition, in order that the worker program wait until the completion of optimization of all trial structures, all worker programs were found to wait in an idle state for approximately 6 hours.",
                "This has caused the performance degradation of <br>conflex-g</br>. 161 4.3 Discussion In this subsection, we discuss the improvement of the performance reflected in our experiments.",
                "Exploiting parallelism - In order to exploit more computational resources, it is necessary to increase the degree of parallelism.",
                "In this experiment, the degree of parallelism was not so large in the case of the sample molecules.",
                "When using a set of over 500 computing nodes for 1BL1, the number of one trial structures assigned to each worker will be only one or two.",
                "If over 100 trial structures are assigned to each worker program, calculation can be performed more efficiently due to the reduction of the overhead for worker invocation and initialization via the facility of the OmniRPC AIM.",
                "One idea for increasing parallelism is to overlap the execution of two or more sets of trial structures.",
                "In the current algorithm, a set of trial structures is generated from one initial structure and computed until optimizations for all structures in this set are calculated.",
                "Furthermore, this will help to improve load imbalance.",
                "By having other sets of trial structures overlap, even if some optimizations require a long time, the optimization for the structures in other sets can be executed to compensate for the idle workers for other optimizations.",
                "It is however unclear how such modification of the algorithm might affect the quality of the final results in terms of a conformation search.",
                "Improvement in load imbalance when optimizing each trial structure - Table 8 lists the statistics for optimization times of trial structures generated for each sample molecule measured using 28 workers in the Dennis cluster.",
                "When two or more sets of PC clusters are used, the speedup in performance is hampered by the load imbalance of the optimization of the trial structures.",
                "The longest time for optimizing a trial structure was nearly 24 times longer than the shortest time.",
                "Furthermore, other workers must wait until the longest job has Finished, so that the entire execution time cannot be reduced.",
                "When <br>conflex-g</br> searched the conformers of 1BL1 by the Dennis cluster, the longest calculation time of the trial structure optimization made up approximately 80% of the elapsed time.",
                "Therefore, there are two possible solutions for the load Imbalance. • It is necessary to refine the algorithm used to generate the trial structure, which suppresses the time variation for optimizing a trial structure in CONFLEX.",
                "This enables <br>conflex-g</br> to achieve high-throughput by using many computer resources. • One of the solutions is to overlap the executions for two or more sets of trial structures.",
                "In the current algorithms, a set of trial structures is generated from one initial structure and calculation continues until all structures in this set are calculated.",
                "By having other sets of trial structures, even if a structure search takes a long time, a job can be executed in order to compensate the load imbalance by other jobs.",
                "However, how such modification of the algorithms might affect the efficiency is not clear. • In this experiment, we used a simple build-in roundrobbin scheduler of OmniRPC, which is necessary in order to apply the scheduler that allocates structures with long optimization times to a high-performance Table 8: Statistics of elapsed time of trial structure optimization using 28 workers in the Dennis cluster.",
                "Molecular Min Max Average Variance code (s) (s) (s) AlaX04 2.0 11.3 5.3 3 AlaX16 47.6 920.0 154.2 5404 1L2Y 114.2 13331.4 803.2 636782 1BL1 121.0 29641.8 3153.5 2734811 node and structures with short optimization times to low-performance nodes.",
                "In general, however, it might be difficult to predict the time required for trial structure optimization.",
                "Parallelization of the worker program for speedup to optimize a trial structure - In the current implementation, we do not parallelize the worker program.",
                "In order to speed up trial structures, hybrid programming using OmniRPC and OpenMP in an SMP (Symmetric Multiple Processor) machine may be one of the alternative methods by which to improve overall performance. 5.",
                "RELATED WORK Recently, an algorithm has been developed that solves the problems of parallelization and communication in poorly connected processors to be used for simulation.",
                "The Folding@home project[13] simulates timescales thousands to millions of times longer than previously achieved.",
                "This has allowed us to simulate folding for the first time and to directly examine folding related diseases.",
                "SETI@home[14] is a program to search for alien life by analyzing radio telescope signals using Fourier transform radio telescope data from telescopes from different sites.",
                "SETI@home tackles immensely parallel problems, in which calculation can easily be divided among several computers.",
                "Radio telescope data chunks can easily be assigned to different computers.",
                "Most of these efforts explicitly develop a docking application as a parallel application using a special purpose parallel programming language and middleware, such as MPI, which requires development skills and effort.",
                "However, the skills and effort required to develop a grid application may not be required for OmniRPC.",
                "Nimrod/G[15] is a tool for distributed parametric modeling and implements a parallel task farm for simulations that require several varying input parameters.",
                "Nimrod incorporates a distributed scheduling component that can manage the scheduling of individual experiments to idle computers in a local area network.",
                "Nimrod has been applied to applications including bio-informatics, operations research, and molecular modeling for drug design.",
                "NetSolve[8] is an RPC facility similar to OmniRPC and Ninf, providing a similar programming interface and automatic load balancing mechanism.",
                "Ninf-G[7] is a grid-enabled implementation of Ninf and provides a GridRPC[10] system that uses LDAP to manage the database of remote executables, but does not support clusters involving private IP addresses or addresses inside a firewall.",
                "Matsuoka et al. [16] has also discussed several design issues related to grid RPC systems. 162 6.",
                "CONCLUSIONS AND FUTURE WORK We have designed and implemented <br>conflex-g</br> using OmniRPC.",
                "We reported its performance in a grid testbed of several geographically distributed PC clusters.",
                "In order to explore the conformation of large bio-molecules, CONFLEXG was used to generate trial structures of the molecules, and allocate jobs to optimize them by molecular mechanics in the grid.",
                "OmniRPC provides a restricted persistence model so that the module is automatically initialized at invocation by calling the initialization procedure.",
                "This can eliminate unnecessary communication and the initialization at each call in <br>conflex-g</br>. <br>conflex-g</br> can achieves performance comparable to CONFLEX MPI and exploits more computing resources by allowing the use of multiple PC clusters in the grid.",
                "The experimental result shows that <br>conflex-g</br> achieved a speedup of 56.5 times for the 1BL1 molecule, where the molecule consists of a large number of atoms and each trial structure optimization requires a great deal of time.",
                "The load imbalance of the trial structure optimizations may cause performance degradation.",
                "We need to refine the algorithm used to generate the trial structure in order to improve the load balance optimization for trial structures in CONFLEX.",
                "Future studies will include development of deployment tools and an examination of fault tolerance.",
                "In the current OmniRPC, the registration of an execution program to remote hosts and deployments of worker programs are manually set.",
                "Deployment tools will be required as the number of remote hosts is increased.",
                "In grid environments in which the environment changes dynamically, it is also necessary to support fault tolerance.",
                "This feature is especially important in large-scale applications which require lengthy calculation in a grid environment.",
                "We plan to refine the conformational optimization algorithm in CONFLEX to explore the conformation space search of larger bio-molecules such HIV protease using up to 1000 workers in a grid environment. 7.",
                "ACKNOWLEDGMENTS This research was supported in part by a Grant-in-Aid from the Ministry of Education, Culture, Sports, Science and Technology in Japan, No. 14019011, 2002, and as part of the Program of Research and Development for Applying Advanced Computational Science and Technology by the Japan Science and Technology Corporation (Research on the grid computing platform for drug design).",
                "We would like to thank grid technology research center, AIST, Japan for providing computing resources for our experiment. 8.",
                "REFERENCES [1] H. Goto and E. Osawa.",
                "An efficient algorithm for searching low-energy conformers of cyclic and acyclic molecules.",
                "J. Chem.",
                "Soc., Perkin Trans, 2:187-198, 1993. [2] M. Sato, T. Boku, and D. Takahashi.",
                "OmniRPC: a Grid RPC System for Parallel Programming in Cluster and Grid Environment.",
                "In Proc. of CCGrid2003, pages 219-229, 2003. [3] M. Sato, M. Hirano, Y. Tanaka, and S. Sekiguchi.",
                "OmniRPC: a Grid RPC facility for Cluster and Global Computing in OpenMP.",
                "In Proc. of Workshop on OpenMP Applications and Tools 2001(LNCS 2104 ), pages 130-135, 2001. [4] OmniRPC Project. http://www.omni.hpcc.jp/omnirpc/. [5] M. Sato, H. Nakada, S. Sekiguchi, S. Matsuoka, U. Nagashima, and H. Takagi.",
                "Ninf: A Network Based Information Library for Global World-Wide Computing Infrastructure.",
                "In HPCN Europe, pages 491-502, 1997. [6] Ninf Project. http://ninf.apgrid.org/. [7] Y. Tanaka, H. Nakada, S. Sekiguchi, T. Suzumura, and S. Matsuoka.",
                "Ninf-G: A Reference Implementation of RPC-based Programming Middleware for Grid Computing .",
                "Journal of Grid Computing, 1(1):41-51, 2003. [8] D. Arnold, S. Agrawal, S. Blackford, J. Dongarra, M. Miller, K. Seymour, K. Sagi, Z. Shi, and S. Vadhiyar.",
                "Users Guide to NetSolve V1.4.1.",
                "Innovative Computing Dept.",
                "Technical Report ICL-UT-02-05, University of Tennessee, Knoxville, TN, June 2002. [9] Object management group. http://www.omg.org/. [10] K. Seymour, H. Nakada, S. Matsuoka, J. Dongarra, C. Lee, and H. Casanova.",
                "GridRPC: A Remote Procedure Call API for Grid Computing. [11] H.Goto, T. Takahashi, Y. Takata, K. Ohta, and U Nagashima.",
                "Conflex: Conformational behaviors of polypeptides as predicted by a conformational space search.",
                "In Nanotech2003, volume 1, pages 32-35, 2003. [12] I.",
                "Foster and C. Kesselman.",
                "Globus: A metacomputing infrastructure toolkit.",
                "The International Journal of Supercomputer Applications and High Performanc e Computing, 11(2):115-128, Summer 1997. [13] Stefan M. Larson, Christopher D. Snow, Michael Shirts, and Vijay S. Pande.",
                "Folding@home and genome@home: Using distributed computing to tackle prev iously intractable problems in computational biology.",
                "Computational Genomics, 2002. [14] seti@home project. http://setiathome.ssl.berkeley.edu/. [15] R. Buyya, K. Branson, J. Giddy, and D. Abramson.",
                "The virtual laboratory: a toolset to enable distributed molecular modelling for drug design on the world-wide grid.",
                "Concurrency and Computation: Practice and Experience, 15(1):1-25, January 2003. [16] S. Matsuoka, H. Nakada, M. Sato, and S. Sekiguchi.",
                "Design issues of Network Enabled Server Systems for the Grid.",
                "In Proc. of GRID 2000 (LNCS 1971), pages 4-17, 2000. 163"
            ],
            "original_annotated_samples": [
                "Implementation and Performance Evaluation of <br>conflex-g</br>: Grid-enabled Molecular Conformational Space Search Program with OmniRPC Yoshihiro Nakajima Graduate School of Systems & Information Engineering, University of Tsukuba Tsukuba, 305-8577, Japan yoshihiro@hpcs.is.tsukuba.ac.jp Mitsuhisa Sato Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan msato@is.tsukuba.ac.jp Hitoshi Goto Knowledge-based Information Engineering, Toyohashi University of Technology Toyohashi, 441-8580, Japan gotoh@cochem2.tutkie.tut.ac.jp Taisuke Boku, Daisuke Takahashi Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan {taisuke,daisuke}@hpcs.is.tsukuba.ac.jp ABSTRACT <br>conflex-g</br> is the grid-enabled version of a molecular conformational space search program called CONFLEX.",
                "We have implemented <br>conflex-g</br> using a grid RPC system called OmniRPC.",
                "In this paper, we report the performance of <br>conflex-g</br> in a grid testbed of several geographically distributed PC clusters.",
                "In order to explore many conformation of large bio-molecules, <br>conflex-g</br> generates trial structures of the molecules and allocates jobs to optimize a trial structure with a reliable molecular mechanics method in the grid.",
                "This can eliminate unnecessary communication and initialization at each call in <br>conflex-g</br>. CONFLEXG can achieve performance comparable to CONFLEX MPI and can exploit more computing resources by allowing the use of a cluster of multiple clusters in the grid."
            ],
            "translated_annotated_samples": [
                "Implementación y Evaluación del Rendimiento de CONFLEX-G: <br>Programa de Búsqueda de Espacio Conformacional Molecular</br> Habilitado para Grid con OmniRPC.",
                "Hemos implementado CONFLEX-G utilizando un sistema de RPC en malla llamado OmniRPC.",
                "En este artículo, informamos sobre el rendimiento de <br>CONFLEX-G</br> en un banco de pruebas en red de varios clústeres de PC distribuidos geográficamente.",
                "Para explorar muchas conformaciones de grandes biomoléculas, CONFLEX-G genera estructuras de prueba de las moléculas y asigna trabajos para optimizar una estructura de prueba con un <br>método confiable de mecánica molecular</br> en la cuadrícula.",
                "Esto puede eliminar la comunicación y la inicialización innecesarias en cada llamada en <br>CONFLEX-G</br>. CONFLEXG puede lograr un rendimiento comparable al de CONFLEX MPI y puede aprovechar más recursos informáticos al permitir el uso de un clúster de múltiples clústeres en la cuadrícula."
            ],
            "translated_text": "Implementación y Evaluación del Rendimiento de CONFLEX-G: <br>Programa de Búsqueda de Espacio Conformacional Molecular</br> Habilitado para Grid con OmniRPC. Hemos implementado CONFLEX-G utilizando un sistema de RPC en malla llamado OmniRPC. En este artículo, informamos sobre el rendimiento de <br>CONFLEX-G</br> en un banco de pruebas en red de varios clústeres de PC distribuidos geográficamente. Para explorar muchas conformaciones de grandes biomoléculas, CONFLEX-G genera estructuras de prueba de las moléculas y asigna trabajos para optimizar una estructura de prueba con un <br>método confiable de mecánica molecular</br> en la cuadrícula. OmniRPC proporciona un modelo de persistencia restringido para respaldar las aplicaciones de búsqueda paramétrica. En este modelo, cuando el procedimiento de inicialización está definido en el módulo RPC, el módulo se inicializa automáticamente en el momento de la invocación llamando al procedimiento de inicialización. Esto puede eliminar la comunicación y la inicialización innecesarias en cada llamada en <br>CONFLEX-G</br>. CONFLEXG puede lograr un rendimiento comparable al de CONFLEX MPI y puede aprovechar más recursos informáticos al permitir el uso de un clúster de múltiples clústeres en la cuadrícula. ",
            "candidates": [],
            "error": [
                [
                    "Programa de Búsqueda de Espacio Conformacional Molecular",
                    "CONFLEX-G",
                    "método confiable de mecánica molecular",
                    "CONFLEX-G"
                ]
            ]
        },
        "omnirpc": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Implementation and Performance Evaluation of CONFLEX-G: Grid-enabled Molecular Conformational Space Search Program with <br>omnirpc</br> Yoshihiro Nakajima Graduate School of Systems & Information Engineering, University of Tsukuba Tsukuba, 305-8577, Japan yoshihiro@hpcs.is.tsukuba.ac.jp Mitsuhisa Sato Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan msato@is.tsukuba.ac.jp Hitoshi Goto Knowledge-based Information Engineering, Toyohashi University of Technology Toyohashi, 441-8580, Japan gotoh@cochem2.tutkie.tut.ac.jp Taisuke Boku, Daisuke Takahashi Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan {taisuke,daisuke}@hpcs.is.tsukuba.ac.jp ABSTRACT CONFLEX-G is the grid-enabled version of a molecular conformational space search program called CONFLEX.",
                "We have implemented CONFLEX-G using a grid RPC system called <br>omnirpc</br>.",
                "In this paper, we report the performance of CONFLEX-G in a grid testbed of several geographically distributed PC clusters.",
                "In order to explore many conformation of large bio-molecules, CONFLEX-G generates trial structures of the molecules and allocates jobs to optimize a trial structure with a reliable molecular mechanics method in the grid.",
                "<br>omnirpc</br> provides a restricted persistence model to support the parametric search applications.",
                "In this model, when the initialization procedure is defined in the RPC module, the module is automatically initialized at the time of invocation by calling the initialization procedure.",
                "This can eliminate unnecessary communication and initialization at each call in CONFLEX-G. CONFLEXG can achieve performance comparable to CONFLEX MPI and can exploit more computing resources by allowing the use of a cluster of multiple clusters in the grid.",
                "The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times in the case of the 1BL1 molecule, where the molecule consists of a large number of atoms, and each trial structure optimization requires significant time.",
                "The load imbalance of the optimization time of the trial structure may also cause performance degradation.",
                "Categories and Subject Descriptors C.2.4 [Computer Systems Organization]: COMPUTERCOMMUNICATION NETWORK-Distributed Systems; J.2.4 [Computer Applications]: PHYSICAL SCIENCES AND ENGINEERING General Terms Design,Performance 1.",
                "INTRODUCTION Elucidation of the stable conformations and the folding process of proteins is one of the most fundamental and challenging goals in life science.",
                "While some of the most common secondary structures (e.g., certain types of helix, the beta-strand, and the coil) are well known, precise analysis of the thousands of chemically important conformers and pico-second-order analysis of their conformational interconversions via the transition states on the potential energy surface are required for the microsecond-order investigation of the folding process toward the tertiary structure formations.",
                "Recently, the concept of the computational grid has begun to attract significant interest in the field of high-performance network computing.",
                "Rapid advances in wide-area networking technology and infrastructure have made it possible to construct large-scale, high-performance distributed computing environments, or computational grids, that provide dependable, consistent and pervasive access to enormous computational resources.",
                "CONFLEX is one of the most efficient and reliable conformational space search programs[1].",
                "We have applied this 154 program to parallelization using global computing.",
                "The performance of the parallelized CONFLEX enables exploration of the lower-energy region of the conformational space of small peptides within an available elapsed time using a local PC cluster.",
                "Since trial structure optimization in CONFLEX is calculated via molecular mechanics, conformational space search can be performed quickly compared to that using molecular orbital calculation.",
                "Although the parallelized version of CONFLEX was used to calculate in parallel the structure optimization, which takes up over 90% of the processing in the molecular conformation search, sufficient improvement in the speedup could not be achieved by this method alone.",
                "Therefore, for high polymers from live organisms, such as HIV protease, the use one PC cluster is insufficient due to the requirement for optimization of a huge number of trial structures.",
                "This requires the vast computer resources of a grid computing environment.",
                "In this paper, we describe CONFLEX-G, a grid-enabled molecular conformational search program, using <br>omnirpc</br> and report its performance in a grid of several PC clusters which are geographically distributed.",
                "The prototype CONFLEX-G allocates calculation trial structures optimization, which is a very time-consuming task, to worker nodes in the grid environment in order to obtain high throughput.",
                "In addition, we compare the performance of CONFLEX-G in a local PC cluster to that in a grid testbed.",
                "<br>omnirpc</br>[2, 3, 4] is a thread-safe implementation of Ninf RPC[5, 6] which is a Grid RPC facility for grid environment computing.",
                "Several systems adopt the concept of the RPC as the basic model for grid environment computing, including Ninf-G[7], NetSolve[8] and CORBA[9].",
                "The RPCstyle system provides an easy-to-use, intuitive programming interface, allowing users of the grid system to easily create grid-enabled applications.",
                "In order to support parallel programming, an RPC client can issue asynchronous call requests to a different remote computer to exploit networkwide parallelism via <br>omnirpc</br>.",
                "In this paper, we propose the <br>omnirpc</br> persistence model to a Grid RPC system and demonstrate its effectiveness.",
                "In order to support a typical application for a grid environment, such as a parametric search application, in which the same function is executed with different input parameters on the same data set.",
                "In the current GridRPC system[10], the data set by the previous call cannot be used by subsequent calls.",
                "In the <br>omnirpc</br> system, once a remote executable is invoked, the client attempts to use the invoked remote executable and its initialized state for subsequent RPC calls to the same remote functions in order to eliminate the invocation cost of each call.",
                "This paper demonstrates that CONFLEX-G is able to exploit the huge computer resources of a grid environment and search large-scale molecular conformers.",
                "We demonstrate CONFLEX-G on our grid testbed using the actual protein as a sample molecule.",
                "The <br>omnirpc</br> facility of the automatic initializable module (AIM) allows the system to efficiently calculate numerous conformers.",
                "Furthermore, by using <br>omnirpc</br>, the user can grid-parallelize the existing application, and move from the cluster to the grid environment without modifying program code and compiling the program.",
                "In addition, the user can easily build a private grid environment.",
                "The rest of this paper is organized as follows.",
                "An overview Selection of Initial Structure Conformations Database Local Perturbation Geometry Optimization Comparison and Registration Figure 1: Algorithm of conformational space search in the original CONFLEX. of the CONFLEX system is presented in Section2, and the implementation and design of CONFLEX-G are described in Section 3.",
                "We report experimental results obtained using CONFLEX-G and discuss its performance in Section 4.",
                "In Section 6, we present conclusions and discuss subjects for future study. 2.",
                "CONFLEX CONFLEX [1] is an efficient conformational space search program, which can predominately and exhaustively search the conformers in the lower-energy region.",
                "Applications of CONFLEX include the elucidation of the reactivity and selectivity of drugs and possible drug materials with regard to their conformational flexibility. 2.1 Algorithm of ConformationalSpaceSearch The basic strategy of CONFLEX is an exhaustive search of only the low-energy regions.",
                "The original CONFLEX performs the following four major steps: 1.",
                "Selection of an initial structure among the previously discovered unique conformers sorted in a conformational database. (An input structure is used as the first initial structure at the beginning of a search execution only.) 2.",
                "Generation of trial structures by local perturbations to the selected initial structure. 3.",
                "Geometry optimization for the newly generated trial structures. 4.",
                "Comparison of the successfully optimized (trial) structures with the other conformers stored in a conformation database, and preservation of newly discovered unique conformers in the database.",
                "Figure 1 shows the outline of CONFLEX, the original conformational space search algorithm.",
                "These procedures incorporate two unique strategies.",
                "Figure 2 shows the strategies for generating local perturbations in CONFLEX.",
                "The first strategy involves both corner flapping and edge flipping for the ring atoms and stepwise rotation for side-chains or backbone chains.",
                "These methods provide a highly efficient way to produce several good trial structures.",
                "These perturbations can be considered to mimic 155 Stepwise Rotation Corner Flap Edge Flip Figure 2: Strategies used to generate the local perturbations. a barrier-crossing step in the elementary process of the thermal conformational inter-conversion.",
                "Actually, the perturbations of an initial structure correspond to the precise performance around the space of the initial structure because of localization and weakness of the perturbation.",
                "The selection rule of the initial structure, the LowestConformer-First rule, is the second strategy for directing the conformation search expanded to the low-energy regions.",
                "The initial structure is selected as the set of lowest energy conformers stored in the conformation database.",
                "This rule is effective in moving down the search space toward lower energy regions, like water from a stream running into an empty reservoir, while filling local depressions along the way.",
                "Therefore, these tactical procedures of the CONFLEX search are referred to as the Reservoir Filling Algorithm.",
                "In order to remain in the low-energy region and perform an exhaustive search, the search limit (SEL), which determines the maximum energy of the initial structures, is pre-defined.",
                "Gradually increasing SEL allows only the lowenergy conformers to be searched and avoids straying into unnecessarily high-energy regions. 2.2 Parallelization of CONFLEX for Cluster For application to over 100 atoms, CONFLEX was improved using high-performance parallel computing techniques.",
                "In the CONFLEX search algorithm, the geometry optimization procedures always take 95% of the elapsed time of the search execution.",
                "Therefore, we parallelized this optimization using the Master/Worker parallelization technique.",
                "We modified the search procedures as follows.",
                "After trial structures are generated (step 2), they are temporarily stored in a task pool on the master node.",
                "Then, each worker node is dynamically supplied with one trial structure from the master node.",
                "After an optimization on a worker node is finished, the worker is immediately supplied with another trial structure.",
                "When all of the trial structures related to a given initial structure are optimized, only the master procedure is used in comparison.",
                "By parallelizing CONFLEX, the speedup of searching molecular conformers obtained is as reported in[11]. 3.",
                "CONFLEX-G Originally, CONFLEX was intended for use in exploring the conformers of the large bio-molecules, such HIV protease.",
                "In such molecules, the number of trial structures increases and the time required for optimization of RPC Selection of Initial Structure Conformations Database Local Perturbation Comparison and Registration Client program Task Pool of Geometry Optimization RPC RPC Grid environment Cluster B Cluster A Cluster C Trial structureTrial structure Trial structure Trial structure Figure 3: Procedure of CONFLEX-G. agent rexrex rex Client jones.tsukuba.ac.jp hpc-serv.hpcc.jp hpc1 hpc2 hpc3 Agent invocation communicationNetwork Figure 4: Overview of the <br>omnirpc</br> system for the remote cluster having a private IP address. the trial structure becomes immense.",
                "We implemented the parallelized version of CONFLEX, which cannot treat such molecules using only a local PC cluster.",
                "In order to exploit the vast computing resources of a grid environment, we designed and implemented CONFLEX-G, which is a grid-enabled version of CONFLEX, with the <br>omnirpc</br> system.",
                "CONFLEX-G allocates jobs to optimize a trial structure to the computational nodes of each cluster in the grid environment.",
                "Figure 3 shows the process of CONFLEX-G.",
                "The worker programs are initialized by the initialize method, which is provided by the <br>omnirpc</br> AIM facility at worker invocation.",
                "At each RPC call, the initialized state is reused on the remote host.",
                "In other words, the client program can eliminate the initialization for each RPC call, and can therefore optimize trial structures efficiently. 3.1 The <br>omnirpc</br> system <br>omnirpc</br> is a Grid RPC system which allows seamless parallel programming from a PC cluster to a grid environment.",
                "<br>omnirpc</br> inherits its API and basic architecture from Ninf.",
                "A client and the remote computational hosts which execute the remote procedures may be connected via a network.",
                "The remote libraries are implemented as an executable program which contains a network stub routine as its main routine.",
                "We call this executable program a remote executable program (rex).",
                "When the <br>omnirpc</br> client program starts, the initialization function of <br>omnirpc</br> system invokes the OmniRPC agent program omrpc-agent in the remote hosts listed in the host file.",
                "To invoke the agent, the user can use the remote shell command rsh in a local-area network, the GRAM (Globus Resource Allocation Manager) API of the Globus 156 toolkit[12] in a grid environment, or the secure remote shell command ssh.",
                "The user can switch the configurations only by changing the host file.",
                "OmniRpcCall is a simple client programming interface for calling remote functions.",
                "When OmniRpcCall makes a remote procedure call, the call is allocated to an appropriate remote host.",
                "When the client issues the RPC request, it requests that the agent in the selected host submit the job of the remote executable with the local job scheduler specified in the host file.",
                "If the job scheduler is not specified, the agent executes the remote executable in the same node by the fork system call.",
                "The client sends the data of the input arguments to the invoked remote executable, and receives the results upon return of the remote function.",
                "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls in order to eliminate the cost of invoking the same remote executable again.",
                "When the agent and the remote executables are invoked, the remote programs obtain the client address and port from the argument list and connect back to the client by direct TCP/IP or Globus-IO for data transmission.",
                "Because the <br>omnirpc</br> system does not use any fixed service ports, the client program allocates unused ports dynamically to wait for connection from the remote executables.",
                "This avoids possible security problems, and allows the user to install the <br>omnirpc</br> system without requiring a privileged account.",
                "Herein, a typical grid resource is regarded as a cluster of geographically distributed PC clusters.",
                "For PC clusters on a private network, an <br>omnirpc</br> agent process on the server host functions as a proxy to relay communications between the client and the remote executables by multiplexing the communications using a single connection.",
                "This feature, called multiplex IO (MXIO), allows a single client to use up to 1,000 remote computing hosts.",
                "When the PC cluster is inside a firewall, the port forwarding of SSH enables the node to communicate to the outside with MXIO.",
                "Figure 4 shows the overview of the <br>omnirpc</br> system for a remote cluster with a private IP address.",
                "For parallel programming, the programmer can use asynchronous remote procedure calls, allowing the client to issue several requests while continuing with other computations.",
                "The requests are dispatched to different remote hosts to be executed in parallel, and the client waits or polls the completed request.",
                "In such a programming model with asynchronous remote procedure calls, the programmer should handle outstanding requests explicitly.",
                "Because <br>omnirpc</br> is a thread-safe system, a number of remote procedure calls may be outstanding at any time for multi-threaded programs written in OpenMP. 3.2 <br>omnirpc</br> persistence model: automatic initializable module OmniRPC efficiently supports typical Master/Worker parallel applications such as parametric execution programs.",
                "For parametric search applications, which often require large amount of identical data for each call, <br>omnirpc</br> supports a limited persistence model, which is implemented by the automatic initializable module.",
                "The user can define an initialization procedure in the remote executable in order to send and store data automatically in advance of actual remote procedure calls.",
                "Since the remote executable may accept requests for subsequent calls, the data set which has been set by the initialization procedure can be re-used.",
                "As a result, the worker program can execute efficiently and reduce the amount of data transmitted for initialization.",
                "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls.",
                "However, <br>omnirpc</br> does not guarantee persistence of the remote executable, so that the data set by the previous call cannot be used by subsequent calls.",
                "This is because a remote call by OmniRpcCall may be scheduled to any remote host dynamically, and remote executables may be terminated accidentally due to dynamic re-scheduling or host faults.",
                "However, persistence of the remote executable can be exploited in certain applications.",
                "An example is a parametric search application: in such an application, it would be efficient if a large set of data could be pre-loaded by the first call, and subsequent calls could be performed on the same data, but with different parameters.",
                "This is the case for CONFLEX.",
                "<br>omnirpc</br> provides a restricted persistence model through the automatic initializable module (AIM) in order to support this type of application.",
                "If the initialization procedure is defined in the module, the module is automatically initialized at invocation by calling the initialization procedure.",
                "When the remote executable is re-scheduled in different hosts, the initialization is called to initialize the newly allocated remote module.",
                "This can eliminate unnecessary communications when RPC calls use the same data.",
                "To reveal more about the difference in progress between the cases with <br>omnirpc</br> AIM and without <br>omnirpc</br> AIM, we present two figures.",
                "Figure 5 illustrates the time chart of the progress of a typical <br>omnirpc</br> application using the <br>omnirpc</br> AIM facility, and Figure 6 illustrates the time chart of the same application without the OmniRPC AIM facility.",
                "In both figures, the lines between diamonds represent the processes of initialization, and the lines between points represent the calculation.",
                "The bold line indicates the time when the client program sends the data to a worker program.",
                "It is necessary for the application without the <br>omnirpc</br> AIM facility to initialize at each RPC.",
                "The application using the <br>omnirpc</br> AIM facility can re-use the initialized data once the data set is initialized.",
                "This can reduce the initialization at each RPC.",
                "The workers of the application with the AIM can calculate efficiently compared to the application without the <br>omnirpc</br> AIM facility. 3.3 Implementation of CONFLEX-G using <br>omnirpc</br> Figure 3 shows an overview of the process used in CONFLEXG.",
                "Using RPCs, CONFLEX-G allocates the processes of trial structure optimization, which are performed by the computation nodes of a PC cluster in the MPI version of CONFLEX, to the computational nodes of each cluster in a grid environment.",
                "There are two computations which are performed by the worker programs in CONFLEX-G. One is the initialization of a worker program, and another is the calculation of trial structure optimization.",
                "First, the <br>omnirpc</br> facility of the AIM is adapted for initialization of a worker program.",
                "This facility automatically calls the initialization function, which is contained in the worker program, once the client program invokes the worker program in a remote node.",
                "It is necessary for the common RPC system including GridRPC to initialize a program for every RPC call, since data persistence of worker programs 157 time Client Program Worker Program 1 Worker Program 2 initialization initialization calculation calculation calculation calculation calculation Parallelized using asynchronous RPCs Figure 5: Time chart of applications using the <br>omnirpc</br> facility of the automatic initializable module. time Client Program Worker Program 1 Worker Program 2 initialization initializationcalculation calculation calculation calculation initialization initialization initialization Parallelized using asynchronous RPCs calculation Figure 6: Time chart of applications without the <br>omnirpc</br> facility of the automatic initializable module.",
                "Table 1: Machine configurations in the grid testbed.",
                "Site Cluster Name Machine Network Authentication # of Nodes # of CPUs Univ. of Tsukuba Dennis Dual Xeon 2.4GHz 1Gb Ethernet Globus, SSH 14 28 Alice Dual Athlon 1800+ 100Mb Ethernet Globus, SSH 18 36 TUT Toyo Dual Athlon 2600+ 100Mb Ethernet SSH 8 16 AIST Ume Dual Pentium3 1.4GHz 1Gb Ethernet Globus, SSH 32 64 is not supported.",
                "In <br>omnirpc</br>, however, when the Initialize remote function is defined in the worker program and a new worker program, corresponding to the other RPC, is assigned to execute, an Initialize function is called automatically.",
                "Therefore, after the Initialize function call to set up common initialization data, a worker program can re-use this data and increase the efficiency of its processes.",
                "Thus, the higher the set-up cost, the greater the potential benefit.",
                "We implemented the worker program of CONFLEX-G to receive data, such as evaluation parameters of energy, from a client program and to be initialized by the Initialize function.",
                "We arranged the client program of CONFLEX-G to transfer the parameter file at the time of worker initialization.",
                "This enables execution to be performed by modify only the client setting if the user wants to run CONFLEX-G with a different data set.",
                "Second, in order to calculate trial structure optimization in a worker program, the worker program must receive the data, such as the atom arrangement of the trial structure and the internal energy state.",
                "The result is returned to the client program after the worker has Optimized the trial structure.",
                "Since the calculation portion of the structure optimization in this worker program can be calculated independently using different parameters, we parallelized this portion using asynchronous RPCs on the client side.",
                "To call the structure optimization function in a worker program from the client program, we use the OmniRpcCallAsync API, which is intended for asynchronous RPC.",
                "In addition, OmniRpcCallWaitAll API which waits until all asynchronous RPCs are used in order to perform synchronization with all of the asynchronous RPCs completed so as to optimize the trial structure.",
                "The client program which assigns trial structure optimization to the calculation node of a PC cluster using RPC is outlined as follows.",
                "OmniRpcInit() OmniRpcModuleInit(conflex_search,...); ... while( <new conformers> ) { foreach( <trial structures> ) OmniRpcCallAsync(conflex_search_worker, ...); OmniRpcWaitAll(); ...",
                "Note that OmniRpcModuleInit API returns only the arguments needed for initialization and will not actually execute the Initialization function.",
                "As described above, the actual Initialization is performed at the first remote call.",
                "Since the <br>omnirpc</br> system has an easy round-robin scheduler, we do not have to explicitly write the code for load balance.",
                "Therefore, RPCs are allocated automatically to idle workers. 158 Table 2: Network performance between the master node of the Dennis cluster and the master node of each PC cluster.",
                "Round-Trip Throughput Cluster Time (ms) (Mbps) Dennis 0.23 879.31 Alice 0.18 94.12 Toyo 11.27 1.53 Ume 1.07 373.33 4.",
                "PRELIMINARY RESULTS 4.1 Grid Testbed The grid testbed was constructed by computing resources at the University of Tsukuba, the Toyohashi University of Technology (TUT) and the National Institute of Advanced Industrial Science and Technology (AIST).",
                "Table 1 shows the computing resources used for the grid of the present study.",
                "The University of Tsukuba and AIST are connected by a 1-Gbps Tsukuba WAN, and the other PC clusters are connected by SINET, which is wide-area network dedicated to academic research in Japan.",
                "Table 2 shows the performance of the measured network between the master node of the Dennis cluster and the master node of each PC cluster in the grid testbed.",
                "The communication throughput was measured using netperf, and the round-trip time was measured by ping. 4.2 Performance of CONFLEX-G In all of the CONFLEX-G experiments, the client program was executed on the master node of the Dennis cluster at the University of Tsukuba.",
                "The built-in Round-Robin scheduler of <br>omnirpc</br> was used as a job scheduler.",
                "SSH was used for an authentication system, the OminRPCs MXIO, which relays the I/O communication between client program and worker programs by port forwarding of SSH was, not used.",
                "Note that one worker program is assigned and performed on one CPU of the calculation node in a PC cluster.",
                "That is, the number of workers is equal to the number of CPUs.",
                "These programs were compiled by the Intel Fortran Compiler 7.0 and gcc 2.95.",
                "MPICH, Version 1.2.5, was used to compare the performance between CONFLEX MPI and CONFLEX-G.",
                "In order to demonstrate the usability of the <br>omnirpc</br> facility of the AIM, we implemented another version of CONFLEX-G which did not utilize the <br>omnirpc</br> facility.",
                "The worker program in this version of CONFLEXG must be initialized at each RPC because the worker does not hold the previous data set.",
                "In order to examine the performance of CONFLEX-G, we selected two peptides and two small protein as test molecules: • N-acetyl tetra-alanine methylester (AlaX04) • N-acetyl hexdeca-alanine methylester (AlaX16) • TRP-cage miniprotein construct TC5B (1L2Y) • PTH receptor N-terminus fragment (1BL1) Table 3 lists the characteristics of these sample molecules.",
                "The column trial structure / loops in this table shows the Figure 7: Performances of CONFLEX-G, CONFLEX MPI and Original CONFLEX in the Dennis cluster.",
                "Figure 8: Speedup ratio, which is based on the elapsed time of CONFLEX-G using one worker in the Dennis cluster.",
                "Figure 9: Performance of CONFLEX-G with and without the <br>omnirpc</br> facility of automatic initializable module for AlaX16. 159 Table 3: Characteristics of molecules and data transmission for optimizing trial molecular structures in each molecular code.",
                "Molecular # of # of total trial trial structure Data transfer to Data transfer code atoms structures / loop initialize a worker / trial structure AlaX04 181 360 45 2033KB 17.00KB AlaX16 191 480 160 2063KB 18.14KB 1L2Y 315 331 331 2099KB 29.58KB 1BL1 519 519 519 2150KB 48.67KB Table 4: Elapsed search time for the molecular conformation of AlaX04.",
                "Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (sequential) 1 320.0 1786.21 4.96 1786.21 1.00 Toyo (16) 16 20.0 1497.08 4.16 196.32 9.10 Dennis (28) 28 11.4 1905.51 5.29 97.00 18.41 Alice (36) 36 8.9 2055.25 5.71 87.09 20.51 Ume (56) 56 5.7 2196.77 6.10 120.69 14.80 Dennis (28) + Toyo (16) 44 7.3 1630.09 4.53 162.35 11.00 Alice (36) + Toyo (16) 52 6.2 1774.53 4.93 178.24 10.02 Dennis (28) + Alice (36) 64 5.0 1999.02 5.55 81.52 21.91 Dennis (28) + Ume (56) 84 3.8 2085.84 5.79 92.22 19.37 Alice (36) + Ume (56) 92 3.5 2120.87 5.89 101.25 17.64 Table 5: Elapsed search time for the molecular conformation of AlaX16 Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (1) 1 480.0 74027.80 154.22 74027.80 1.00 Toyo (16) 16 30.0 70414.21 146.70 4699.15 15.75 Dennis (28) 28 17.1 74027.80 154.22 3375.60 21.93 Alice (36) 36 13.3 90047.27 187.60 3260.41 22.71 Ume (56) 56 8.6 123399.38 257.08 2913.63 25.41 Dennis (28) + Toyo (16) 44 10.9 76747.74 159.89 2762.10 26.80 Alice (36) + Toyo (16) 52 9.2 82700.44 172.29 2246.73 32.95 Dennis (28) + Alice (36) 64 7.5 87571.30 182.44 2051.50 36.08 Toyo (16) + Ume (56) 72 6.7 109671.32 228.48 2617.85 28.28 Dennis (28) + Ume (56) 84 5.7 102817.90 214.20 2478.93 29.86 Dennis(28)+Ume(56)+Toyo(16) 100 4.8 98238.07 204.66 2478.93 29.86 Table 6: Elapsed time of the search for the trial structure of 1L2Y.",
                "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 331.0 867 286,967 79.71 1.00 Toyo MPI (16) 16 20.7 867 18,696 5.19 15.34 Dennis (28) 28 11.8 803 14,101 3.91 20.35 Dennis (28) + Ume(56) 84 3.9 1,064 8,316 2.31 34.50 Table 7: Elapsed time of the search for the trial structure of 1BL1.",
                "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 519.0 3,646 1892,210 525.61 1.00 Toyo MPI (16) 16 32.4 3,646 120,028 33.34 15.76 Dennis (28) 28 18.5 3,154 61,803 17.16 30.61 Dennis (28) + Ume (56) 84 6.1 4,497 33,502 9.30 56.48 160 number of trial structures generated in each iteration, indicating the degree of parallelism.",
                "Figure 3 also summarizes the amount of data transmission required for initialization of a worker program and for optimization of each trial structure.",
                "Note that the amount of data transmission, which is required in order to initialize a worker program and optimize a trial structure in the MPI version of CONFLEX, is equal to that of CONFLEX-G. We used an improvement version of MM2 force field to assign a potential energy function to various geometric properties of a group of atoms. 4.2.1 Performance in a Local Cluster We first compared the performance of CONFLEX-G, the MPI version of CONFLEX, and the original sequential version of CONFLEX-G using a local cluster.",
                "We investigated performance by varying the number of workers using the Dennis cluster.",
                "We chose AlaX04 as a test molecule for this experiment.",
                "Figure 7 compares the results for the CONFLEX MPI and CONFLEX-G in a local PC cluster.",
                "The result of this experiment shows that CONFLEX-G can reduce the execution time as the number of workers increases, as in the MPI version of CONFLEX.",
                "We found that CONFLEX-G achieved efficiencies comparable to the MPI version.",
                "With 28 workers, CONFLEX-G achieved an 18.00 times speedup compared to the CONFLEX sequential version.",
                "The performance of CONFLEX-G without the <br>omnirpc</br> AIM facility is worse than that of CONFLEXG using the facility, based on the increase in the number of workers.",
                "This indicates that the <br>omnirpc</br> AIM enables the worker to calculate efficiently without other calculations, such initialization or invocation of worker programs.",
                "As the number of workers is increased, the performance of CONFLEX-G is a slightly lower than that of the MPI version.",
                "This performance degradation is caused by differences in the worker initialization processes of CONFLEX-G and CONFLEX MPI.",
                "In the case of CONFLEX MPI, all workers are initialized in advance of the optimization phase.",
                "In the case of OminRPC, the worker is invoked on-demand when the RPC call is actually issued.",
                "Therefore, the initialization incurs this overhead.",
                "Since the objective of CONFLEX-G is to explore the conformations of large bio-molecules, the number of trial structures and the time to optimize the trial structure might be large.",
                "In such cases, the overhead to invoke and initialize the worker program can be small compared to the entire elapsed time. 4.2.2 Performance for Peptides in The Grid Testbed First, the sample molecules (AlaX04 and AlaX16) were used to examine the CONFLEX-G performance in a grid environment.",
                "Figure 8 shows the speedup achieved by using multiple clusters compared to using one worker in the Dennis cluster.",
                "Detailed results are shown in Table 4 and Table 5.",
                "In both cases, the best performance was obtained using 64 workers of the combination of the Dennis and Alice clusters.",
                "CONFLEX-G achieved a maximum speedup of 36.08 times for AlaX04 and a maximum speedup of 21.91 times for AlaX16.",
                "In the case of AlaX04, the performance is improved only when the network performance between clusters is high.",
                "However, even if two or more clusters are used in a wide area network environment, the performance improvement was slight because the optimization time of one trial structure generated from AlaX04, a small molecule, is short.",
                "In addition, the overhead required for invocation of a worker program and network data transmission consume a large portion of the remaining processing time.",
                "In particular, the data transmission required for the initialization of a worker program is 2 MB.",
                "In the case of Toyo cluster, where the network performance between the client program and the worker programs is poor, the time of data transmission to the worker program required approximately 6.7 seconds.",
                "Since this transmission time was longer than the processing time of one structure optimization in CONFLEX-G, most of the time was spent for this data transmission.",
                "Therefore, even if CONFLEX-G uses a large number of calculation nodes in a wide area network environment, the benefit of using a grid resource is not obtained.",
                "In the case of AlaX16, CONFLEX-G achieved a speedup by using two or more PC clusters in our grid testbed.",
                "This was because the calculation time on the worker program was long and the overhead, such as network latency and the invoking of worker programs, became relatively small and could be hidden.",
                "The best performance was obtained using 64 workers in the Dennis and Alice clusters.",
                "In the case of AaX16, the achieved performance was a speedup of 36.08 times.",
                "Figure 9 reveals the effect of using the facility of the <br>omnirpc</br> AIM on CONFLEX-G performance.",
                "In most cases, CONFLEX-G with the <br>omnirpc</br> AIM facility archived better performance than CONFLEX-G without the facility.",
                "In particular, the <br>omnirpc</br> AIM facility was advantageous when using two clusters connected by a low-performance network.",
                "The results indicate that the <br>omnirpc</br> AIM facility can improve performance in the grid environment. 4.2.3 PerformanceforSmallProteininTheGridTestbed Finally, we explored the molecular conformation using CONFLEX-G for large molecules.",
                "In a grid environment, this experiment was conducted using the Dennis and Ume clusters.",
                "In this experiment, we used two proteins, 1L2Y and 1BL1.",
                "Table 6 and Table 7 show the performance of CONFLEX-G in the grid environment and that of CONFLEX MPI in the Toyo cluster, respectively.",
                "The speedups in these tables were computed respectively based on the performance of one worker and 16 workers of the Toyo cluster using CONFLEX MPI.",
                "CONFLEX-G with 84 workers in Dennis and Ume clusters obtained maximum speedups of 56.5 times for 1L2Y and 34.5 times for 1L2Y.",
                "Since the calculation time for structure optimization required a great deal of time, the ratio of overhead, including tasks such as the invocation of a worker program and data transmission for initialization, became very small, so that the performance of CONFLEX-G was improved.",
                "We found that the load imbalance in the processing time of optimization for each trial structure caused performance degradation.",
                "When we obtained the best performance for 1L2Y using the Dennis and Ume clusters, the time for each structure optimization varied from 190 to 27,887 seconds, and the ratio between the longest and shortest times was 13.4.",
                "For 1BL1, the ratio of minimum time over maximum time was 190.",
                "In addition, in order that the worker program wait until the completion of optimization of all trial structures, all worker programs were found to wait in an idle state for approximately 6 hours.",
                "This has caused the performance degradation of CONFLEX-G. 161 4.3 Discussion In this subsection, we discuss the improvement of the performance reflected in our experiments.",
                "Exploiting parallelism - In order to exploit more computational resources, it is necessary to increase the degree of parallelism.",
                "In this experiment, the degree of parallelism was not so large in the case of the sample molecules.",
                "When using a set of over 500 computing nodes for 1BL1, the number of one trial structures assigned to each worker will be only one or two.",
                "If over 100 trial structures are assigned to each worker program, calculation can be performed more efficiently due to the reduction of the overhead for worker invocation and initialization via the facility of the <br>omnirpc</br> AIM.",
                "One idea for increasing parallelism is to overlap the execution of two or more sets of trial structures.",
                "In the current algorithm, a set of trial structures is generated from one initial structure and computed until optimizations for all structures in this set are calculated.",
                "Furthermore, this will help to improve load imbalance.",
                "By having other sets of trial structures overlap, even if some optimizations require a long time, the optimization for the structures in other sets can be executed to compensate for the idle workers for other optimizations.",
                "It is however unclear how such modification of the algorithm might affect the quality of the final results in terms of a conformation search.",
                "Improvement in load imbalance when optimizing each trial structure - Table 8 lists the statistics for optimization times of trial structures generated for each sample molecule measured using 28 workers in the Dennis cluster.",
                "When two or more sets of PC clusters are used, the speedup in performance is hampered by the load imbalance of the optimization of the trial structures.",
                "The longest time for optimizing a trial structure was nearly 24 times longer than the shortest time.",
                "Furthermore, other workers must wait until the longest job has Finished, so that the entire execution time cannot be reduced.",
                "When CONFLEX-G searched the conformers of 1BL1 by the Dennis cluster, the longest calculation time of the trial structure optimization made up approximately 80% of the elapsed time.",
                "Therefore, there are two possible solutions for the load Imbalance. • It is necessary to refine the algorithm used to generate the trial structure, which suppresses the time variation for optimizing a trial structure in CONFLEX.",
                "This enables CONFLEX-G to achieve high-throughput by using many computer resources. • One of the solutions is to overlap the executions for two or more sets of trial structures.",
                "In the current algorithms, a set of trial structures is generated from one initial structure and calculation continues until all structures in this set are calculated.",
                "By having other sets of trial structures, even if a structure search takes a long time, a job can be executed in order to compensate the load imbalance by other jobs.",
                "However, how such modification of the algorithms might affect the efficiency is not clear. • In this experiment, we used a simple build-in roundrobbin scheduler of <br>omnirpc</br>, which is necessary in order to apply the scheduler that allocates structures with long optimization times to a high-performance Table 8: Statistics of elapsed time of trial structure optimization using 28 workers in the Dennis cluster.",
                "Molecular Min Max Average Variance code (s) (s) (s) AlaX04 2.0 11.3 5.3 3 AlaX16 47.6 920.0 154.2 5404 1L2Y 114.2 13331.4 803.2 636782 1BL1 121.0 29641.8 3153.5 2734811 node and structures with short optimization times to low-performance nodes.",
                "In general, however, it might be difficult to predict the time required for trial structure optimization.",
                "Parallelization of the worker program for speedup to optimize a trial structure - In the current implementation, we do not parallelize the worker program.",
                "In order to speed up trial structures, hybrid programming using <br>omnirpc</br> and OpenMP in an SMP (Symmetric Multiple Processor) machine may be one of the alternative methods by which to improve overall performance. 5.",
                "RELATED WORK Recently, an algorithm has been developed that solves the problems of parallelization and communication in poorly connected processors to be used for simulation.",
                "The Folding@home project[13] simulates timescales thousands to millions of times longer than previously achieved.",
                "This has allowed us to simulate folding for the first time and to directly examine folding related diseases.",
                "SETI@home[14] is a program to search for alien life by analyzing radio telescope signals using Fourier transform radio telescope data from telescopes from different sites.",
                "SETI@home tackles immensely parallel problems, in which calculation can easily be divided among several computers.",
                "Radio telescope data chunks can easily be assigned to different computers.",
                "Most of these efforts explicitly develop a docking application as a parallel application using a special purpose parallel programming language and middleware, such as MPI, which requires development skills and effort.",
                "However, the skills and effort required to develop a grid application may not be required for <br>omnirpc</br>.",
                "Nimrod/G[15] is a tool for distributed parametric modeling and implements a parallel task farm for simulations that require several varying input parameters.",
                "Nimrod incorporates a distributed scheduling component that can manage the scheduling of individual experiments to idle computers in a local area network.",
                "Nimrod has been applied to applications including bio-informatics, operations research, and molecular modeling for drug design.",
                "NetSolve[8] is an RPC facility similar to <br>omnirpc</br> and Ninf, providing a similar programming interface and automatic load balancing mechanism.",
                "Ninf-G[7] is a grid-enabled implementation of Ninf and provides a GridRPC[10] system that uses LDAP to manage the database of remote executables, but does not support clusters involving private IP addresses or addresses inside a firewall.",
                "Matsuoka et al. [16] has also discussed several design issues related to grid RPC systems. 162 6.",
                "CONCLUSIONS AND FUTURE WORK We have designed and implemented CONFLEX-G using <br>omnirpc</br>.",
                "We reported its performance in a grid testbed of several geographically distributed PC clusters.",
                "In order to explore the conformation of large bio-molecules, CONFLEXG was used to generate trial structures of the molecules, and allocate jobs to optimize them by molecular mechanics in the grid.",
                "<br>omnirpc</br> provides a restricted persistence model so that the module is automatically initialized at invocation by calling the initialization procedure.",
                "This can eliminate unnecessary communication and the initialization at each call in CONFLEX-G. CONFLEX-G can achieves performance comparable to CONFLEX MPI and exploits more computing resources by allowing the use of multiple PC clusters in the grid.",
                "The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times for the 1BL1 molecule, where the molecule consists of a large number of atoms and each trial structure optimization requires a great deal of time.",
                "The load imbalance of the trial structure optimizations may cause performance degradation.",
                "We need to refine the algorithm used to generate the trial structure in order to improve the load balance optimization for trial structures in CONFLEX.",
                "Future studies will include development of deployment tools and an examination of fault tolerance.",
                "In the current <br>omnirpc</br>, the registration of an execution program to remote hosts and deployments of worker programs are manually set.",
                "Deployment tools will be required as the number of remote hosts is increased.",
                "In grid environments in which the environment changes dynamically, it is also necessary to support fault tolerance.",
                "This feature is especially important in large-scale applications which require lengthy calculation in a grid environment.",
                "We plan to refine the conformational optimization algorithm in CONFLEX to explore the conformation space search of larger bio-molecules such HIV protease using up to 1000 workers in a grid environment. 7.",
                "ACKNOWLEDGMENTS This research was supported in part by a Grant-in-Aid from the Ministry of Education, Culture, Sports, Science and Technology in Japan, No. 14019011, 2002, and as part of the Program of Research and Development for Applying Advanced Computational Science and Technology by the Japan Science and Technology Corporation (Research on the grid computing platform for drug design).",
                "We would like to thank grid technology research center, AIST, Japan for providing computing resources for our experiment. 8.",
                "REFERENCES [1] H. Goto and E. Osawa.",
                "An efficient algorithm for searching low-energy conformers of cyclic and acyclic molecules.",
                "J. Chem.",
                "Soc., Perkin Trans, 2:187-198, 1993. [2] M. Sato, T. Boku, and D. Takahashi.",
                "<br>omnirpc</br>: a Grid RPC System for Parallel Programming in Cluster and Grid Environment.",
                "In Proc. of CCGrid2003, pages 219-229, 2003. [3] M. Sato, M. Hirano, Y. Tanaka, and S. Sekiguchi.",
                "<br>omnirpc</br>: a Grid RPC facility for Cluster and Global Computing in OpenMP.",
                "In Proc. of Workshop on OpenMP Applications and Tools 2001(LNCS 2104 ), pages 130-135, 2001. [4] <br>omnirpc</br> Project. http://www.omni.hpcc.jp/<br>omnirpc</br>/. [5] M. Sato, H. Nakada, S. Sekiguchi, S. Matsuoka, U. Nagashima, and H. Takagi.",
                "Ninf: A Network Based Information Library for Global World-Wide Computing Infrastructure.",
                "In HPCN Europe, pages 491-502, 1997. [6] Ninf Project. http://ninf.apgrid.org/. [7] Y. Tanaka, H. Nakada, S. Sekiguchi, T. Suzumura, and S. Matsuoka.",
                "Ninf-G: A Reference Implementation of RPC-based Programming Middleware for Grid Computing .",
                "Journal of Grid Computing, 1(1):41-51, 2003. [8] D. Arnold, S. Agrawal, S. Blackford, J. Dongarra, M. Miller, K. Seymour, K. Sagi, Z. Shi, and S. Vadhiyar.",
                "Users Guide to NetSolve V1.4.1.",
                "Innovative Computing Dept.",
                "Technical Report ICL-UT-02-05, University of Tennessee, Knoxville, TN, June 2002. [9] Object management group. http://www.omg.org/. [10] K. Seymour, H. Nakada, S. Matsuoka, J. Dongarra, C. Lee, and H. Casanova.",
                "GridRPC: A Remote Procedure Call API for Grid Computing. [11] H.Goto, T. Takahashi, Y. Takata, K. Ohta, and U Nagashima.",
                "Conflex: Conformational behaviors of polypeptides as predicted by a conformational space search.",
                "In Nanotech2003, volume 1, pages 32-35, 2003. [12] I.",
                "Foster and C. Kesselman.",
                "Globus: A metacomputing infrastructure toolkit.",
                "The International Journal of Supercomputer Applications and High Performanc e Computing, 11(2):115-128, Summer 1997. [13] Stefan M. Larson, Christopher D. Snow, Michael Shirts, and Vijay S. Pande.",
                "Folding@home and genome@home: Using distributed computing to tackle prev iously intractable problems in computational biology.",
                "Computational Genomics, 2002. [14] seti@home project. http://setiathome.ssl.berkeley.edu/. [15] R. Buyya, K. Branson, J. Giddy, and D. Abramson.",
                "The virtual laboratory: a toolset to enable distributed molecular modelling for drug design on the world-wide grid.",
                "Concurrency and Computation: Practice and Experience, 15(1):1-25, January 2003. [16] S. Matsuoka, H. Nakada, M. Sato, and S. Sekiguchi.",
                "Design issues of Network Enabled Server Systems for the Grid.",
                "In Proc. of GRID 2000 (LNCS 1971), pages 4-17, 2000. 163"
            ],
            "original_annotated_samples": [
                "Implementation and Performance Evaluation of CONFLEX-G: Grid-enabled Molecular Conformational Space Search Program with <br>omnirpc</br> Yoshihiro Nakajima Graduate School of Systems & Information Engineering, University of Tsukuba Tsukuba, 305-8577, Japan yoshihiro@hpcs.is.tsukuba.ac.jp Mitsuhisa Sato Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan msato@is.tsukuba.ac.jp Hitoshi Goto Knowledge-based Information Engineering, Toyohashi University of Technology Toyohashi, 441-8580, Japan gotoh@cochem2.tutkie.tut.ac.jp Taisuke Boku, Daisuke Takahashi Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan {taisuke,daisuke}@hpcs.is.tsukuba.ac.jp ABSTRACT CONFLEX-G is the grid-enabled version of a molecular conformational space search program called CONFLEX.",
                "We have implemented CONFLEX-G using a grid RPC system called <br>omnirpc</br>.",
                "<br>omnirpc</br> provides a restricted persistence model to support the parametric search applications.",
                "In this paper, we describe CONFLEX-G, a grid-enabled molecular conformational search program, using <br>omnirpc</br> and report its performance in a grid of several PC clusters which are geographically distributed.",
                "<br>omnirpc</br>[2, 3, 4] is a thread-safe implementation of Ninf RPC[5, 6] which is a Grid RPC facility for grid environment computing."
            ],
            "translated_annotated_samples": [
                "Implementación y Evaluación del Rendimiento de CONFLEX-G: Programa de Búsqueda de Espacio Conformacional Molecular Habilitado para Grid con OmniRPC.",
                "Hemos implementado CONFLEX-G utilizando un sistema de RPC en malla llamado OmniRPC.",
                "OmniRPC proporciona un <br>modelo de persistencia restringido</br> para respaldar las aplicaciones de búsqueda paramétrica.",
                "En este artículo, describimos CONFLEX-G, un programa de búsqueda conformacional molecular habilitado para grid, utilizando <br>OmniRPC</br> y reportamos su rendimiento en un grid de varios clusters de PC distribuidos geográficamente.",
                "OmniRPC[2, 3, 4] es una implementación segura para hilos de Ninf RPC[5, 6], que es una facilidad de RPC de cuadrícula para la computación en entornos de cuadrícula."
            ],
            "translated_text": "Implementación y Evaluación del Rendimiento de CONFLEX-G: Programa de Búsqueda de Espacio Conformacional Molecular Habilitado para Grid con OmniRPC. Hemos implementado CONFLEX-G utilizando un sistema de RPC en malla llamado OmniRPC. En este artículo, informamos sobre el rendimiento de CONFLEX-G en un banco de pruebas en red de varios clústeres de PC distribuidos geográficamente. Para explorar muchas conformaciones de grandes biomoléculas, CONFLEX-G genera estructuras de prueba de las moléculas y asigna trabajos para optimizar una estructura de prueba con un método confiable de mecánica molecular en la cuadrícula. OmniRPC proporciona un <br>modelo de persistencia restringido</br> para respaldar las aplicaciones de búsqueda paramétrica. En este modelo, cuando el procedimiento de inicialización está definido en el módulo RPC, el módulo se inicializa automáticamente en el momento de la invocación llamando al procedimiento de inicialización. Esto puede eliminar la comunicación y la inicialización innecesarias en cada llamada en CONFLEX-G. CONFLEXG puede lograr un rendimiento comparable al de CONFLEX MPI y puede aprovechar más recursos informáticos al permitir el uso de un clúster de múltiples clústeres en la cuadrícula. El resultado experimental muestra que CONFLEX-G logró una aceleración de 56.5 veces en el caso de la molécula 1BL1, donde la molécula consta de un gran número de átomos y cada optimización de la estructura de prueba requiere un tiempo significativo. El desequilibrio de carga en el tiempo de optimización de la estructura de prueba también puede causar degradación del rendimiento. Categorías y Descriptores de Asignaturas C.2.4 [Organización de Sistemas Informáticos]: RED DE COMUNICACIÓN DE COMPUTADORAS-Sistemas Distribuidos; J.2.4 [Aplicaciones Informáticas]: CIENCIAS FÍSICAS E INGENIERÍA Términos Generales Diseño, Rendimiento 1. INTRODUCCIÓN La elucidación de las conformaciones estables y el proceso de plegamiento de las proteínas es uno de los objetivos más fundamentales y desafiantes en las ciencias de la vida. Si bien algunas de las estructuras secundarias más comunes (por ejemplo, ciertos tipos de hélice, la lámina beta y la hélice) son bien conocidas, se requiere un análisis preciso de los miles de conformaciones químicamente importantes y un análisis de orden de pico-segundo de sus interconversiones conformacionales a través de los estados de transición en la superficie de energía potencial para la investigación de orden de microsegundo del proceso de plegamiento hacia la formación de la estructura terciaria. Recientemente, el concepto de la red computacional ha comenzado a atraer un interés significativo en el campo de la computación de alto rendimiento en red. Los rápidos avances en la tecnología e infraestructura de redes de área amplia han hecho posible construir entornos de computación distribuida a gran escala y alto rendimiento, o redes computacionales, que proporcionan acceso confiable, consistente y generalizado a enormes recursos computacionales. CONFLEX es uno de los programas de búsqueda de espacio conformacional más eficientes y confiables. Hemos aplicado este programa 154 a la paralelización utilizando computación global. El rendimiento del CONFLEX paralelizado permite explorar la región de energía más baja del espacio conformacional de péptidos pequeños en un tiempo transcurrido disponible utilizando un clúster de PC local. Dado que la optimización de la estructura de prueba en CONFLEX se calcula a través de la mecánica molecular, la búsqueda del espacio conformacional se puede realizar rápidamente en comparación con la que utiliza cálculos de orbitales moleculares. Aunque se utilizó la versión paralelizada de CONFLEX para calcular de forma paralela la optimización de la estructura, que representa más del 90% del procesamiento en la búsqueda de conformaciones moleculares, no se pudo lograr una mejora suficiente en la aceleración solo con este método. Por lo tanto, para polímeros de alto peso molecular de organismos vivos, como la proteasa del VIH, el uso de un solo clúster de PC es insuficiente debido a la necesidad de optimizar una gran cantidad de estructuras de prueba. Esto requiere los vastos recursos informáticos de un entorno de computación en malla. En este artículo, describimos CONFLEX-G, un programa de búsqueda conformacional molecular habilitado para grid, utilizando <br>OmniRPC</br> y reportamos su rendimiento en un grid de varios clusters de PC distribuidos geográficamente. El prototipo CONFLEX-G asigna la optimización de las estructuras de cálculo de prueba, que es una tarea muy consumidora de tiempo, a nodos trabajadores en el entorno de la red para obtener un alto rendimiento. Además, comparamos el rendimiento de CONFLEX-G en un clúster de PC local con el de un banco de pruebas en red. OmniRPC[2, 3, 4] es una implementación segura para hilos de Ninf RPC[5, 6], que es una facilidad de RPC de cuadrícula para la computación en entornos de cuadrícula. ",
            "candidates": [],
            "error": [
                [
                    "modelo de persistencia restringido",
                    "OmniRPC"
                ]
            ]
        },
        "conformational space search": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Implementation and Performance Evaluation of CONFLEX-G: Grid-enabled Molecular <br>conformational space search</br> Program with OmniRPC Yoshihiro Nakajima Graduate School of Systems & Information Engineering, University of Tsukuba Tsukuba, 305-8577, Japan yoshihiro@hpcs.is.tsukuba.ac.jp Mitsuhisa Sato Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan msato@is.tsukuba.ac.jp Hitoshi Goto Knowledge-based Information Engineering, Toyohashi University of Technology Toyohashi, 441-8580, Japan gotoh@cochem2.tutkie.tut.ac.jp Taisuke Boku, Daisuke Takahashi Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan {taisuke,daisuke}@hpcs.is.tsukuba.ac.jp ABSTRACT CONFLEX-G is the grid-enabled version of a molecular <br>conformational space search</br> program called CONFLEX.",
                "We have implemented CONFLEX-G using a grid RPC system called OmniRPC.",
                "In this paper, we report the performance of CONFLEX-G in a grid testbed of several geographically distributed PC clusters.",
                "In order to explore many conformation of large bio-molecules, CONFLEX-G generates trial structures of the molecules and allocates jobs to optimize a trial structure with a reliable molecular mechanics method in the grid.",
                "OmniRPC provides a restricted persistence model to support the parametric search applications.",
                "In this model, when the initialization procedure is defined in the RPC module, the module is automatically initialized at the time of invocation by calling the initialization procedure.",
                "This can eliminate unnecessary communication and initialization at each call in CONFLEX-G. CONFLEXG can achieve performance comparable to CONFLEX MPI and can exploit more computing resources by allowing the use of a cluster of multiple clusters in the grid.",
                "The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times in the case of the 1BL1 molecule, where the molecule consists of a large number of atoms, and each trial structure optimization requires significant time.",
                "The load imbalance of the optimization time of the trial structure may also cause performance degradation.",
                "Categories and Subject Descriptors C.2.4 [Computer Systems Organization]: COMPUTERCOMMUNICATION NETWORK-Distributed Systems; J.2.4 [Computer Applications]: PHYSICAL SCIENCES AND ENGINEERING General Terms Design,Performance 1.",
                "INTRODUCTION Elucidation of the stable conformations and the folding process of proteins is one of the most fundamental and challenging goals in life science.",
                "While some of the most common secondary structures (e.g., certain types of helix, the beta-strand, and the coil) are well known, precise analysis of the thousands of chemically important conformers and pico-second-order analysis of their conformational interconversions via the transition states on the potential energy surface are required for the microsecond-order investigation of the folding process toward the tertiary structure formations.",
                "Recently, the concept of the computational grid has begun to attract significant interest in the field of high-performance network computing.",
                "Rapid advances in wide-area networking technology and infrastructure have made it possible to construct large-scale, high-performance distributed computing environments, or computational grids, that provide dependable, consistent and pervasive access to enormous computational resources.",
                "CONFLEX is one of the most efficient and reliable <br>conformational space search</br> programs[1].",
                "We have applied this 154 program to parallelization using global computing.",
                "The performance of the parallelized CONFLEX enables exploration of the lower-energy region of the conformational space of small peptides within an available elapsed time using a local PC cluster.",
                "Since trial structure optimization in CONFLEX is calculated via molecular mechanics, <br>conformational space search</br> can be performed quickly compared to that using molecular orbital calculation.",
                "Although the parallelized version of CONFLEX was used to calculate in parallel the structure optimization, which takes up over 90% of the processing in the molecular conformation search, sufficient improvement in the speedup could not be achieved by this method alone.",
                "Therefore, for high polymers from live organisms, such as HIV protease, the use one PC cluster is insufficient due to the requirement for optimization of a huge number of trial structures.",
                "This requires the vast computer resources of a grid computing environment.",
                "In this paper, we describe CONFLEX-G, a grid-enabled molecular conformational search program, using OmniRPC and report its performance in a grid of several PC clusters which are geographically distributed.",
                "The prototype CONFLEX-G allocates calculation trial structures optimization, which is a very time-consuming task, to worker nodes in the grid environment in order to obtain high throughput.",
                "In addition, we compare the performance of CONFLEX-G in a local PC cluster to that in a grid testbed.",
                "OmniRPC[2, 3, 4] is a thread-safe implementation of Ninf RPC[5, 6] which is a Grid RPC facility for grid environment computing.",
                "Several systems adopt the concept of the RPC as the basic model for grid environment computing, including Ninf-G[7], NetSolve[8] and CORBA[9].",
                "The RPCstyle system provides an easy-to-use, intuitive programming interface, allowing users of the grid system to easily create grid-enabled applications.",
                "In order to support parallel programming, an RPC client can issue asynchronous call requests to a different remote computer to exploit networkwide parallelism via OmniRPC.",
                "In this paper, we propose the OmniRPC persistence model to a Grid RPC system and demonstrate its effectiveness.",
                "In order to support a typical application for a grid environment, such as a parametric search application, in which the same function is executed with different input parameters on the same data set.",
                "In the current GridRPC system[10], the data set by the previous call cannot be used by subsequent calls.",
                "In the OmniRPC system, once a remote executable is invoked, the client attempts to use the invoked remote executable and its initialized state for subsequent RPC calls to the same remote functions in order to eliminate the invocation cost of each call.",
                "This paper demonstrates that CONFLEX-G is able to exploit the huge computer resources of a grid environment and search large-scale molecular conformers.",
                "We demonstrate CONFLEX-G on our grid testbed using the actual protein as a sample molecule.",
                "The OmniRPC facility of the automatic initializable module (AIM) allows the system to efficiently calculate numerous conformers.",
                "Furthermore, by using OmniRPC, the user can grid-parallelize the existing application, and move from the cluster to the grid environment without modifying program code and compiling the program.",
                "In addition, the user can easily build a private grid environment.",
                "The rest of this paper is organized as follows.",
                "An overview Selection of Initial Structure Conformations Database Local Perturbation Geometry Optimization Comparison and Registration Figure 1: Algorithm of <br>conformational space search</br> in the original CONFLEX. of the CONFLEX system is presented in Section2, and the implementation and design of CONFLEX-G are described in Section 3.",
                "We report experimental results obtained using CONFLEX-G and discuss its performance in Section 4.",
                "In Section 6, we present conclusions and discuss subjects for future study. 2.",
                "CONFLEX CONFLEX [1] is an efficient <br>conformational space search</br> program, which can predominately and exhaustively search the conformers in the lower-energy region.",
                "Applications of CONFLEX include the elucidation of the reactivity and selectivity of drugs and possible drug materials with regard to their conformational flexibility. 2.1 Algorithm of ConformationalSpaceSearch The basic strategy of CONFLEX is an exhaustive search of only the low-energy regions.",
                "The original CONFLEX performs the following four major steps: 1.",
                "Selection of an initial structure among the previously discovered unique conformers sorted in a conformational database. (An input structure is used as the first initial structure at the beginning of a search execution only.) 2.",
                "Generation of trial structures by local perturbations to the selected initial structure. 3.",
                "Geometry optimization for the newly generated trial structures. 4.",
                "Comparison of the successfully optimized (trial) structures with the other conformers stored in a conformation database, and preservation of newly discovered unique conformers in the database.",
                "Figure 1 shows the outline of CONFLEX, the original <br>conformational space search</br> algorithm.",
                "These procedures incorporate two unique strategies.",
                "Figure 2 shows the strategies for generating local perturbations in CONFLEX.",
                "The first strategy involves both corner flapping and edge flipping for the ring atoms and stepwise rotation for side-chains or backbone chains.",
                "These methods provide a highly efficient way to produce several good trial structures.",
                "These perturbations can be considered to mimic 155 Stepwise Rotation Corner Flap Edge Flip Figure 2: Strategies used to generate the local perturbations. a barrier-crossing step in the elementary process of the thermal conformational inter-conversion.",
                "Actually, the perturbations of an initial structure correspond to the precise performance around the space of the initial structure because of localization and weakness of the perturbation.",
                "The selection rule of the initial structure, the LowestConformer-First rule, is the second strategy for directing the conformation search expanded to the low-energy regions.",
                "The initial structure is selected as the set of lowest energy conformers stored in the conformation database.",
                "This rule is effective in moving down the search space toward lower energy regions, like water from a stream running into an empty reservoir, while filling local depressions along the way.",
                "Therefore, these tactical procedures of the CONFLEX search are referred to as the Reservoir Filling Algorithm.",
                "In order to remain in the low-energy region and perform an exhaustive search, the search limit (SEL), which determines the maximum energy of the initial structures, is pre-defined.",
                "Gradually increasing SEL allows only the lowenergy conformers to be searched and avoids straying into unnecessarily high-energy regions. 2.2 Parallelization of CONFLEX for Cluster For application to over 100 atoms, CONFLEX was improved using high-performance parallel computing techniques.",
                "In the CONFLEX search algorithm, the geometry optimization procedures always take 95% of the elapsed time of the search execution.",
                "Therefore, we parallelized this optimization using the Master/Worker parallelization technique.",
                "We modified the search procedures as follows.",
                "After trial structures are generated (step 2), they are temporarily stored in a task pool on the master node.",
                "Then, each worker node is dynamically supplied with one trial structure from the master node.",
                "After an optimization on a worker node is finished, the worker is immediately supplied with another trial structure.",
                "When all of the trial structures related to a given initial structure are optimized, only the master procedure is used in comparison.",
                "By parallelizing CONFLEX, the speedup of searching molecular conformers obtained is as reported in[11]. 3.",
                "CONFLEX-G Originally, CONFLEX was intended for use in exploring the conformers of the large bio-molecules, such HIV protease.",
                "In such molecules, the number of trial structures increases and the time required for optimization of RPC Selection of Initial Structure Conformations Database Local Perturbation Comparison and Registration Client program Task Pool of Geometry Optimization RPC RPC Grid environment Cluster B Cluster A Cluster C Trial structureTrial structure Trial structure Trial structure Figure 3: Procedure of CONFLEX-G. agent rexrex rex Client jones.tsukuba.ac.jp hpc-serv.hpcc.jp hpc1 hpc2 hpc3 Agent invocation communicationNetwork Figure 4: Overview of the OmniRPC system for the remote cluster having a private IP address. the trial structure becomes immense.",
                "We implemented the parallelized version of CONFLEX, which cannot treat such molecules using only a local PC cluster.",
                "In order to exploit the vast computing resources of a grid environment, we designed and implemented CONFLEX-G, which is a grid-enabled version of CONFLEX, with the OmniRPC system.",
                "CONFLEX-G allocates jobs to optimize a trial structure to the computational nodes of each cluster in the grid environment.",
                "Figure 3 shows the process of CONFLEX-G.",
                "The worker programs are initialized by the initialize method, which is provided by the OmniRPC AIM facility at worker invocation.",
                "At each RPC call, the initialized state is reused on the remote host.",
                "In other words, the client program can eliminate the initialization for each RPC call, and can therefore optimize trial structures efficiently. 3.1 The OmniRPC system OmniRPC is a Grid RPC system which allows seamless parallel programming from a PC cluster to a grid environment.",
                "OmniRPC inherits its API and basic architecture from Ninf.",
                "A client and the remote computational hosts which execute the remote procedures may be connected via a network.",
                "The remote libraries are implemented as an executable program which contains a network stub routine as its main routine.",
                "We call this executable program a remote executable program (rex).",
                "When the OmniRPC client program starts, the initialization function of OmniRPC system invokes the OmniRPC agent program omrpc-agent in the remote hosts listed in the host file.",
                "To invoke the agent, the user can use the remote shell command rsh in a local-area network, the GRAM (Globus Resource Allocation Manager) API of the Globus 156 toolkit[12] in a grid environment, or the secure remote shell command ssh.",
                "The user can switch the configurations only by changing the host file.",
                "OmniRpcCall is a simple client programming interface for calling remote functions.",
                "When OmniRpcCall makes a remote procedure call, the call is allocated to an appropriate remote host.",
                "When the client issues the RPC request, it requests that the agent in the selected host submit the job of the remote executable with the local job scheduler specified in the host file.",
                "If the job scheduler is not specified, the agent executes the remote executable in the same node by the fork system call.",
                "The client sends the data of the input arguments to the invoked remote executable, and receives the results upon return of the remote function.",
                "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls in order to eliminate the cost of invoking the same remote executable again.",
                "When the agent and the remote executables are invoked, the remote programs obtain the client address and port from the argument list and connect back to the client by direct TCP/IP or Globus-IO for data transmission.",
                "Because the OmniRPC system does not use any fixed service ports, the client program allocates unused ports dynamically to wait for connection from the remote executables.",
                "This avoids possible security problems, and allows the user to install the OmniRPC system without requiring a privileged account.",
                "Herein, a typical grid resource is regarded as a cluster of geographically distributed PC clusters.",
                "For PC clusters on a private network, an OmniRPC agent process on the server host functions as a proxy to relay communications between the client and the remote executables by multiplexing the communications using a single connection.",
                "This feature, called multiplex IO (MXIO), allows a single client to use up to 1,000 remote computing hosts.",
                "When the PC cluster is inside a firewall, the port forwarding of SSH enables the node to communicate to the outside with MXIO.",
                "Figure 4 shows the overview of the OmniRPC system for a remote cluster with a private IP address.",
                "For parallel programming, the programmer can use asynchronous remote procedure calls, allowing the client to issue several requests while continuing with other computations.",
                "The requests are dispatched to different remote hosts to be executed in parallel, and the client waits or polls the completed request.",
                "In such a programming model with asynchronous remote procedure calls, the programmer should handle outstanding requests explicitly.",
                "Because OmniRPC is a thread-safe system, a number of remote procedure calls may be outstanding at any time for multi-threaded programs written in OpenMP. 3.2 OmniRPC persistence model: automatic initializable module OmniRPC efficiently supports typical Master/Worker parallel applications such as parametric execution programs.",
                "For parametric search applications, which often require large amount of identical data for each call, OmniRPC supports a limited persistence model, which is implemented by the automatic initializable module.",
                "The user can define an initialization procedure in the remote executable in order to send and store data automatically in advance of actual remote procedure calls.",
                "Since the remote executable may accept requests for subsequent calls, the data set which has been set by the initialization procedure can be re-used.",
                "As a result, the worker program can execute efficiently and reduce the amount of data transmitted for initialization.",
                "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls.",
                "However, OmniRPC does not guarantee persistence of the remote executable, so that the data set by the previous call cannot be used by subsequent calls.",
                "This is because a remote call by OmniRpcCall may be scheduled to any remote host dynamically, and remote executables may be terminated accidentally due to dynamic re-scheduling or host faults.",
                "However, persistence of the remote executable can be exploited in certain applications.",
                "An example is a parametric search application: in such an application, it would be efficient if a large set of data could be pre-loaded by the first call, and subsequent calls could be performed on the same data, but with different parameters.",
                "This is the case for CONFLEX.",
                "OmniRPC provides a restricted persistence model through the automatic initializable module (AIM) in order to support this type of application.",
                "If the initialization procedure is defined in the module, the module is automatically initialized at invocation by calling the initialization procedure.",
                "When the remote executable is re-scheduled in different hosts, the initialization is called to initialize the newly allocated remote module.",
                "This can eliminate unnecessary communications when RPC calls use the same data.",
                "To reveal more about the difference in progress between the cases with OmniRPC AIM and without OmniRPC AIM, we present two figures.",
                "Figure 5 illustrates the time chart of the progress of a typical OmniRPC application using the OmniRPC AIM facility, and Figure 6 illustrates the time chart of the same application without the OmniRPC AIM facility.",
                "In both figures, the lines between diamonds represent the processes of initialization, and the lines between points represent the calculation.",
                "The bold line indicates the time when the client program sends the data to a worker program.",
                "It is necessary for the application without the OmniRPC AIM facility to initialize at each RPC.",
                "The application using the OmniRPC AIM facility can re-use the initialized data once the data set is initialized.",
                "This can reduce the initialization at each RPC.",
                "The workers of the application with the AIM can calculate efficiently compared to the application without the OmniRPC AIM facility. 3.3 Implementation of CONFLEX-G using OmniRPC Figure 3 shows an overview of the process used in CONFLEXG.",
                "Using RPCs, CONFLEX-G allocates the processes of trial structure optimization, which are performed by the computation nodes of a PC cluster in the MPI version of CONFLEX, to the computational nodes of each cluster in a grid environment.",
                "There are two computations which are performed by the worker programs in CONFLEX-G. One is the initialization of a worker program, and another is the calculation of trial structure optimization.",
                "First, the OmniRPC facility of the AIM is adapted for initialization of a worker program.",
                "This facility automatically calls the initialization function, which is contained in the worker program, once the client program invokes the worker program in a remote node.",
                "It is necessary for the common RPC system including GridRPC to initialize a program for every RPC call, since data persistence of worker programs 157 time Client Program Worker Program 1 Worker Program 2 initialization initialization calculation calculation calculation calculation calculation Parallelized using asynchronous RPCs Figure 5: Time chart of applications using the OmniRPC facility of the automatic initializable module. time Client Program Worker Program 1 Worker Program 2 initialization initializationcalculation calculation calculation calculation initialization initialization initialization Parallelized using asynchronous RPCs calculation Figure 6: Time chart of applications without the OmniRPC facility of the automatic initializable module.",
                "Table 1: Machine configurations in the grid testbed.",
                "Site Cluster Name Machine Network Authentication # of Nodes # of CPUs Univ. of Tsukuba Dennis Dual Xeon 2.4GHz 1Gb Ethernet Globus, SSH 14 28 Alice Dual Athlon 1800+ 100Mb Ethernet Globus, SSH 18 36 TUT Toyo Dual Athlon 2600+ 100Mb Ethernet SSH 8 16 AIST Ume Dual Pentium3 1.4GHz 1Gb Ethernet Globus, SSH 32 64 is not supported.",
                "In OmniRPC, however, when the Initialize remote function is defined in the worker program and a new worker program, corresponding to the other RPC, is assigned to execute, an Initialize function is called automatically.",
                "Therefore, after the Initialize function call to set up common initialization data, a worker program can re-use this data and increase the efficiency of its processes.",
                "Thus, the higher the set-up cost, the greater the potential benefit.",
                "We implemented the worker program of CONFLEX-G to receive data, such as evaluation parameters of energy, from a client program and to be initialized by the Initialize function.",
                "We arranged the client program of CONFLEX-G to transfer the parameter file at the time of worker initialization.",
                "This enables execution to be performed by modify only the client setting if the user wants to run CONFLEX-G with a different data set.",
                "Second, in order to calculate trial structure optimization in a worker program, the worker program must receive the data, such as the atom arrangement of the trial structure and the internal energy state.",
                "The result is returned to the client program after the worker has Optimized the trial structure.",
                "Since the calculation portion of the structure optimization in this worker program can be calculated independently using different parameters, we parallelized this portion using asynchronous RPCs on the client side.",
                "To call the structure optimization function in a worker program from the client program, we use the OmniRpcCallAsync API, which is intended for asynchronous RPC.",
                "In addition, OmniRpcCallWaitAll API which waits until all asynchronous RPCs are used in order to perform synchronization with all of the asynchronous RPCs completed so as to optimize the trial structure.",
                "The client program which assigns trial structure optimization to the calculation node of a PC cluster using RPC is outlined as follows.",
                "OmniRpcInit() OmniRpcModuleInit(conflex_search,...); ... while( <new conformers> ) { foreach( <trial structures> ) OmniRpcCallAsync(conflex_search_worker, ...); OmniRpcWaitAll(); ...",
                "Note that OmniRpcModuleInit API returns only the arguments needed for initialization and will not actually execute the Initialization function.",
                "As described above, the actual Initialization is performed at the first remote call.",
                "Since the OmniRPC system has an easy round-robin scheduler, we do not have to explicitly write the code for load balance.",
                "Therefore, RPCs are allocated automatically to idle workers. 158 Table 2: Network performance between the master node of the Dennis cluster and the master node of each PC cluster.",
                "Round-Trip Throughput Cluster Time (ms) (Mbps) Dennis 0.23 879.31 Alice 0.18 94.12 Toyo 11.27 1.53 Ume 1.07 373.33 4.",
                "PRELIMINARY RESULTS 4.1 Grid Testbed The grid testbed was constructed by computing resources at the University of Tsukuba, the Toyohashi University of Technology (TUT) and the National Institute of Advanced Industrial Science and Technology (AIST).",
                "Table 1 shows the computing resources used for the grid of the present study.",
                "The University of Tsukuba and AIST are connected by a 1-Gbps Tsukuba WAN, and the other PC clusters are connected by SINET, which is wide-area network dedicated to academic research in Japan.",
                "Table 2 shows the performance of the measured network between the master node of the Dennis cluster and the master node of each PC cluster in the grid testbed.",
                "The communication throughput was measured using netperf, and the round-trip time was measured by ping. 4.2 Performance of CONFLEX-G In all of the CONFLEX-G experiments, the client program was executed on the master node of the Dennis cluster at the University of Tsukuba.",
                "The built-in Round-Robin scheduler of OmniRPC was used as a job scheduler.",
                "SSH was used for an authentication system, the OminRPCs MXIO, which relays the I/O communication between client program and worker programs by port forwarding of SSH was, not used.",
                "Note that one worker program is assigned and performed on one CPU of the calculation node in a PC cluster.",
                "That is, the number of workers is equal to the number of CPUs.",
                "These programs were compiled by the Intel Fortran Compiler 7.0 and gcc 2.95.",
                "MPICH, Version 1.2.5, was used to compare the performance between CONFLEX MPI and CONFLEX-G.",
                "In order to demonstrate the usability of the OmniRPC facility of the AIM, we implemented another version of CONFLEX-G which did not utilize the OmniRPC facility.",
                "The worker program in this version of CONFLEXG must be initialized at each RPC because the worker does not hold the previous data set.",
                "In order to examine the performance of CONFLEX-G, we selected two peptides and two small protein as test molecules: • N-acetyl tetra-alanine methylester (AlaX04) • N-acetyl hexdeca-alanine methylester (AlaX16) • TRP-cage miniprotein construct TC5B (1L2Y) • PTH receptor N-terminus fragment (1BL1) Table 3 lists the characteristics of these sample molecules.",
                "The column trial structure / loops in this table shows the Figure 7: Performances of CONFLEX-G, CONFLEX MPI and Original CONFLEX in the Dennis cluster.",
                "Figure 8: Speedup ratio, which is based on the elapsed time of CONFLEX-G using one worker in the Dennis cluster.",
                "Figure 9: Performance of CONFLEX-G with and without the OmniRPC facility of automatic initializable module for AlaX16. 159 Table 3: Characteristics of molecules and data transmission for optimizing trial molecular structures in each molecular code.",
                "Molecular # of # of total trial trial structure Data transfer to Data transfer code atoms structures / loop initialize a worker / trial structure AlaX04 181 360 45 2033KB 17.00KB AlaX16 191 480 160 2063KB 18.14KB 1L2Y 315 331 331 2099KB 29.58KB 1BL1 519 519 519 2150KB 48.67KB Table 4: Elapsed search time for the molecular conformation of AlaX04.",
                "Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (sequential) 1 320.0 1786.21 4.96 1786.21 1.00 Toyo (16) 16 20.0 1497.08 4.16 196.32 9.10 Dennis (28) 28 11.4 1905.51 5.29 97.00 18.41 Alice (36) 36 8.9 2055.25 5.71 87.09 20.51 Ume (56) 56 5.7 2196.77 6.10 120.69 14.80 Dennis (28) + Toyo (16) 44 7.3 1630.09 4.53 162.35 11.00 Alice (36) + Toyo (16) 52 6.2 1774.53 4.93 178.24 10.02 Dennis (28) + Alice (36) 64 5.0 1999.02 5.55 81.52 21.91 Dennis (28) + Ume (56) 84 3.8 2085.84 5.79 92.22 19.37 Alice (36) + Ume (56) 92 3.5 2120.87 5.89 101.25 17.64 Table 5: Elapsed search time for the molecular conformation of AlaX16 Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (1) 1 480.0 74027.80 154.22 74027.80 1.00 Toyo (16) 16 30.0 70414.21 146.70 4699.15 15.75 Dennis (28) 28 17.1 74027.80 154.22 3375.60 21.93 Alice (36) 36 13.3 90047.27 187.60 3260.41 22.71 Ume (56) 56 8.6 123399.38 257.08 2913.63 25.41 Dennis (28) + Toyo (16) 44 10.9 76747.74 159.89 2762.10 26.80 Alice (36) + Toyo (16) 52 9.2 82700.44 172.29 2246.73 32.95 Dennis (28) + Alice (36) 64 7.5 87571.30 182.44 2051.50 36.08 Toyo (16) + Ume (56) 72 6.7 109671.32 228.48 2617.85 28.28 Dennis (28) + Ume (56) 84 5.7 102817.90 214.20 2478.93 29.86 Dennis(28)+Ume(56)+Toyo(16) 100 4.8 98238.07 204.66 2478.93 29.86 Table 6: Elapsed time of the search for the trial structure of 1L2Y.",
                "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 331.0 867 286,967 79.71 1.00 Toyo MPI (16) 16 20.7 867 18,696 5.19 15.34 Dennis (28) 28 11.8 803 14,101 3.91 20.35 Dennis (28) + Ume(56) 84 3.9 1,064 8,316 2.31 34.50 Table 7: Elapsed time of the search for the trial structure of 1BL1.",
                "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 519.0 3,646 1892,210 525.61 1.00 Toyo MPI (16) 16 32.4 3,646 120,028 33.34 15.76 Dennis (28) 28 18.5 3,154 61,803 17.16 30.61 Dennis (28) + Ume (56) 84 6.1 4,497 33,502 9.30 56.48 160 number of trial structures generated in each iteration, indicating the degree of parallelism.",
                "Figure 3 also summarizes the amount of data transmission required for initialization of a worker program and for optimization of each trial structure.",
                "Note that the amount of data transmission, which is required in order to initialize a worker program and optimize a trial structure in the MPI version of CONFLEX, is equal to that of CONFLEX-G. We used an improvement version of MM2 force field to assign a potential energy function to various geometric properties of a group of atoms. 4.2.1 Performance in a Local Cluster We first compared the performance of CONFLEX-G, the MPI version of CONFLEX, and the original sequential version of CONFLEX-G using a local cluster.",
                "We investigated performance by varying the number of workers using the Dennis cluster.",
                "We chose AlaX04 as a test molecule for this experiment.",
                "Figure 7 compares the results for the CONFLEX MPI and CONFLEX-G in a local PC cluster.",
                "The result of this experiment shows that CONFLEX-G can reduce the execution time as the number of workers increases, as in the MPI version of CONFLEX.",
                "We found that CONFLEX-G achieved efficiencies comparable to the MPI version.",
                "With 28 workers, CONFLEX-G achieved an 18.00 times speedup compared to the CONFLEX sequential version.",
                "The performance of CONFLEX-G without the OmniRPC AIM facility is worse than that of CONFLEXG using the facility, based on the increase in the number of workers.",
                "This indicates that the OmniRPC AIM enables the worker to calculate efficiently without other calculations, such initialization or invocation of worker programs.",
                "As the number of workers is increased, the performance of CONFLEX-G is a slightly lower than that of the MPI version.",
                "This performance degradation is caused by differences in the worker initialization processes of CONFLEX-G and CONFLEX MPI.",
                "In the case of CONFLEX MPI, all workers are initialized in advance of the optimization phase.",
                "In the case of OminRPC, the worker is invoked on-demand when the RPC call is actually issued.",
                "Therefore, the initialization incurs this overhead.",
                "Since the objective of CONFLEX-G is to explore the conformations of large bio-molecules, the number of trial structures and the time to optimize the trial structure might be large.",
                "In such cases, the overhead to invoke and initialize the worker program can be small compared to the entire elapsed time. 4.2.2 Performance for Peptides in The Grid Testbed First, the sample molecules (AlaX04 and AlaX16) were used to examine the CONFLEX-G performance in a grid environment.",
                "Figure 8 shows the speedup achieved by using multiple clusters compared to using one worker in the Dennis cluster.",
                "Detailed results are shown in Table 4 and Table 5.",
                "In both cases, the best performance was obtained using 64 workers of the combination of the Dennis and Alice clusters.",
                "CONFLEX-G achieved a maximum speedup of 36.08 times for AlaX04 and a maximum speedup of 21.91 times for AlaX16.",
                "In the case of AlaX04, the performance is improved only when the network performance between clusters is high.",
                "However, even if two or more clusters are used in a wide area network environment, the performance improvement was slight because the optimization time of one trial structure generated from AlaX04, a small molecule, is short.",
                "In addition, the overhead required for invocation of a worker program and network data transmission consume a large portion of the remaining processing time.",
                "In particular, the data transmission required for the initialization of a worker program is 2 MB.",
                "In the case of Toyo cluster, where the network performance between the client program and the worker programs is poor, the time of data transmission to the worker program required approximately 6.7 seconds.",
                "Since this transmission time was longer than the processing time of one structure optimization in CONFLEX-G, most of the time was spent for this data transmission.",
                "Therefore, even if CONFLEX-G uses a large number of calculation nodes in a wide area network environment, the benefit of using a grid resource is not obtained.",
                "In the case of AlaX16, CONFLEX-G achieved a speedup by using two or more PC clusters in our grid testbed.",
                "This was because the calculation time on the worker program was long and the overhead, such as network latency and the invoking of worker programs, became relatively small and could be hidden.",
                "The best performance was obtained using 64 workers in the Dennis and Alice clusters.",
                "In the case of AaX16, the achieved performance was a speedup of 36.08 times.",
                "Figure 9 reveals the effect of using the facility of the OmniRPC AIM on CONFLEX-G performance.",
                "In most cases, CONFLEX-G with the OmniRPC AIM facility archived better performance than CONFLEX-G without the facility.",
                "In particular, the OmniRPC AIM facility was advantageous when using two clusters connected by a low-performance network.",
                "The results indicate that the OmniRPC AIM facility can improve performance in the grid environment. 4.2.3 PerformanceforSmallProteininTheGridTestbed Finally, we explored the molecular conformation using CONFLEX-G for large molecules.",
                "In a grid environment, this experiment was conducted using the Dennis and Ume clusters.",
                "In this experiment, we used two proteins, 1L2Y and 1BL1.",
                "Table 6 and Table 7 show the performance of CONFLEX-G in the grid environment and that of CONFLEX MPI in the Toyo cluster, respectively.",
                "The speedups in these tables were computed respectively based on the performance of one worker and 16 workers of the Toyo cluster using CONFLEX MPI.",
                "CONFLEX-G with 84 workers in Dennis and Ume clusters obtained maximum speedups of 56.5 times for 1L2Y and 34.5 times for 1L2Y.",
                "Since the calculation time for structure optimization required a great deal of time, the ratio of overhead, including tasks such as the invocation of a worker program and data transmission for initialization, became very small, so that the performance of CONFLEX-G was improved.",
                "We found that the load imbalance in the processing time of optimization for each trial structure caused performance degradation.",
                "When we obtained the best performance for 1L2Y using the Dennis and Ume clusters, the time for each structure optimization varied from 190 to 27,887 seconds, and the ratio between the longest and shortest times was 13.4.",
                "For 1BL1, the ratio of minimum time over maximum time was 190.",
                "In addition, in order that the worker program wait until the completion of optimization of all trial structures, all worker programs were found to wait in an idle state for approximately 6 hours.",
                "This has caused the performance degradation of CONFLEX-G. 161 4.3 Discussion In this subsection, we discuss the improvement of the performance reflected in our experiments.",
                "Exploiting parallelism - In order to exploit more computational resources, it is necessary to increase the degree of parallelism.",
                "In this experiment, the degree of parallelism was not so large in the case of the sample molecules.",
                "When using a set of over 500 computing nodes for 1BL1, the number of one trial structures assigned to each worker will be only one or two.",
                "If over 100 trial structures are assigned to each worker program, calculation can be performed more efficiently due to the reduction of the overhead for worker invocation and initialization via the facility of the OmniRPC AIM.",
                "One idea for increasing parallelism is to overlap the execution of two or more sets of trial structures.",
                "In the current algorithm, a set of trial structures is generated from one initial structure and computed until optimizations for all structures in this set are calculated.",
                "Furthermore, this will help to improve load imbalance.",
                "By having other sets of trial structures overlap, even if some optimizations require a long time, the optimization for the structures in other sets can be executed to compensate for the idle workers for other optimizations.",
                "It is however unclear how such modification of the algorithm might affect the quality of the final results in terms of a conformation search.",
                "Improvement in load imbalance when optimizing each trial structure - Table 8 lists the statistics for optimization times of trial structures generated for each sample molecule measured using 28 workers in the Dennis cluster.",
                "When two or more sets of PC clusters are used, the speedup in performance is hampered by the load imbalance of the optimization of the trial structures.",
                "The longest time for optimizing a trial structure was nearly 24 times longer than the shortest time.",
                "Furthermore, other workers must wait until the longest job has Finished, so that the entire execution time cannot be reduced.",
                "When CONFLEX-G searched the conformers of 1BL1 by the Dennis cluster, the longest calculation time of the trial structure optimization made up approximately 80% of the elapsed time.",
                "Therefore, there are two possible solutions for the load Imbalance. • It is necessary to refine the algorithm used to generate the trial structure, which suppresses the time variation for optimizing a trial structure in CONFLEX.",
                "This enables CONFLEX-G to achieve high-throughput by using many computer resources. • One of the solutions is to overlap the executions for two or more sets of trial structures.",
                "In the current algorithms, a set of trial structures is generated from one initial structure and calculation continues until all structures in this set are calculated.",
                "By having other sets of trial structures, even if a structure search takes a long time, a job can be executed in order to compensate the load imbalance by other jobs.",
                "However, how such modification of the algorithms might affect the efficiency is not clear. • In this experiment, we used a simple build-in roundrobbin scheduler of OmniRPC, which is necessary in order to apply the scheduler that allocates structures with long optimization times to a high-performance Table 8: Statistics of elapsed time of trial structure optimization using 28 workers in the Dennis cluster.",
                "Molecular Min Max Average Variance code (s) (s) (s) AlaX04 2.0 11.3 5.3 3 AlaX16 47.6 920.0 154.2 5404 1L2Y 114.2 13331.4 803.2 636782 1BL1 121.0 29641.8 3153.5 2734811 node and structures with short optimization times to low-performance nodes.",
                "In general, however, it might be difficult to predict the time required for trial structure optimization.",
                "Parallelization of the worker program for speedup to optimize a trial structure - In the current implementation, we do not parallelize the worker program.",
                "In order to speed up trial structures, hybrid programming using OmniRPC and OpenMP in an SMP (Symmetric Multiple Processor) machine may be one of the alternative methods by which to improve overall performance. 5.",
                "RELATED WORK Recently, an algorithm has been developed that solves the problems of parallelization and communication in poorly connected processors to be used for simulation.",
                "The Folding@home project[13] simulates timescales thousands to millions of times longer than previously achieved.",
                "This has allowed us to simulate folding for the first time and to directly examine folding related diseases.",
                "SETI@home[14] is a program to search for alien life by analyzing radio telescope signals using Fourier transform radio telescope data from telescopes from different sites.",
                "SETI@home tackles immensely parallel problems, in which calculation can easily be divided among several computers.",
                "Radio telescope data chunks can easily be assigned to different computers.",
                "Most of these efforts explicitly develop a docking application as a parallel application using a special purpose parallel programming language and middleware, such as MPI, which requires development skills and effort.",
                "However, the skills and effort required to develop a grid application may not be required for OmniRPC.",
                "Nimrod/G[15] is a tool for distributed parametric modeling and implements a parallel task farm for simulations that require several varying input parameters.",
                "Nimrod incorporates a distributed scheduling component that can manage the scheduling of individual experiments to idle computers in a local area network.",
                "Nimrod has been applied to applications including bio-informatics, operations research, and molecular modeling for drug design.",
                "NetSolve[8] is an RPC facility similar to OmniRPC and Ninf, providing a similar programming interface and automatic load balancing mechanism.",
                "Ninf-G[7] is a grid-enabled implementation of Ninf and provides a GridRPC[10] system that uses LDAP to manage the database of remote executables, but does not support clusters involving private IP addresses or addresses inside a firewall.",
                "Matsuoka et al. [16] has also discussed several design issues related to grid RPC systems. 162 6.",
                "CONCLUSIONS AND FUTURE WORK We have designed and implemented CONFLEX-G using OmniRPC.",
                "We reported its performance in a grid testbed of several geographically distributed PC clusters.",
                "In order to explore the conformation of large bio-molecules, CONFLEXG was used to generate trial structures of the molecules, and allocate jobs to optimize them by molecular mechanics in the grid.",
                "OmniRPC provides a restricted persistence model so that the module is automatically initialized at invocation by calling the initialization procedure.",
                "This can eliminate unnecessary communication and the initialization at each call in CONFLEX-G. CONFLEX-G can achieves performance comparable to CONFLEX MPI and exploits more computing resources by allowing the use of multiple PC clusters in the grid.",
                "The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times for the 1BL1 molecule, where the molecule consists of a large number of atoms and each trial structure optimization requires a great deal of time.",
                "The load imbalance of the trial structure optimizations may cause performance degradation.",
                "We need to refine the algorithm used to generate the trial structure in order to improve the load balance optimization for trial structures in CONFLEX.",
                "Future studies will include development of deployment tools and an examination of fault tolerance.",
                "In the current OmniRPC, the registration of an execution program to remote hosts and deployments of worker programs are manually set.",
                "Deployment tools will be required as the number of remote hosts is increased.",
                "In grid environments in which the environment changes dynamically, it is also necessary to support fault tolerance.",
                "This feature is especially important in large-scale applications which require lengthy calculation in a grid environment.",
                "We plan to refine the conformational optimization algorithm in CONFLEX to explore the conformation space search of larger bio-molecules such HIV protease using up to 1000 workers in a grid environment. 7.",
                "ACKNOWLEDGMENTS This research was supported in part by a Grant-in-Aid from the Ministry of Education, Culture, Sports, Science and Technology in Japan, No. 14019011, 2002, and as part of the Program of Research and Development for Applying Advanced Computational Science and Technology by the Japan Science and Technology Corporation (Research on the grid computing platform for drug design).",
                "We would like to thank grid technology research center, AIST, Japan for providing computing resources for our experiment. 8.",
                "REFERENCES [1] H. Goto and E. Osawa.",
                "An efficient algorithm for searching low-energy conformers of cyclic and acyclic molecules.",
                "J. Chem.",
                "Soc., Perkin Trans, 2:187-198, 1993. [2] M. Sato, T. Boku, and D. Takahashi.",
                "OmniRPC: a Grid RPC System for Parallel Programming in Cluster and Grid Environment.",
                "In Proc. of CCGrid2003, pages 219-229, 2003. [3] M. Sato, M. Hirano, Y. Tanaka, and S. Sekiguchi.",
                "OmniRPC: a Grid RPC facility for Cluster and Global Computing in OpenMP.",
                "In Proc. of Workshop on OpenMP Applications and Tools 2001(LNCS 2104 ), pages 130-135, 2001. [4] OmniRPC Project. http://www.omni.hpcc.jp/omnirpc/. [5] M. Sato, H. Nakada, S. Sekiguchi, S. Matsuoka, U. Nagashima, and H. Takagi.",
                "Ninf: A Network Based Information Library for Global World-Wide Computing Infrastructure.",
                "In HPCN Europe, pages 491-502, 1997. [6] Ninf Project. http://ninf.apgrid.org/. [7] Y. Tanaka, H. Nakada, S. Sekiguchi, T. Suzumura, and S. Matsuoka.",
                "Ninf-G: A Reference Implementation of RPC-based Programming Middleware for Grid Computing .",
                "Journal of Grid Computing, 1(1):41-51, 2003. [8] D. Arnold, S. Agrawal, S. Blackford, J. Dongarra, M. Miller, K. Seymour, K. Sagi, Z. Shi, and S. Vadhiyar.",
                "Users Guide to NetSolve V1.4.1.",
                "Innovative Computing Dept.",
                "Technical Report ICL-UT-02-05, University of Tennessee, Knoxville, TN, June 2002. [9] Object management group. http://www.omg.org/. [10] K. Seymour, H. Nakada, S. Matsuoka, J. Dongarra, C. Lee, and H. Casanova.",
                "GridRPC: A Remote Procedure Call API for Grid Computing. [11] H.Goto, T. Takahashi, Y. Takata, K. Ohta, and U Nagashima.",
                "Conflex: Conformational behaviors of polypeptides as predicted by a <br>conformational space search</br>.",
                "In Nanotech2003, volume 1, pages 32-35, 2003. [12] I.",
                "Foster and C. Kesselman.",
                "Globus: A metacomputing infrastructure toolkit.",
                "The International Journal of Supercomputer Applications and High Performanc e Computing, 11(2):115-128, Summer 1997. [13] Stefan M. Larson, Christopher D. Snow, Michael Shirts, and Vijay S. Pande.",
                "Folding@home and genome@home: Using distributed computing to tackle prev iously intractable problems in computational biology.",
                "Computational Genomics, 2002. [14] seti@home project. http://setiathome.ssl.berkeley.edu/. [15] R. Buyya, K. Branson, J. Giddy, and D. Abramson.",
                "The virtual laboratory: a toolset to enable distributed molecular modelling for drug design on the world-wide grid.",
                "Concurrency and Computation: Practice and Experience, 15(1):1-25, January 2003. [16] S. Matsuoka, H. Nakada, M. Sato, and S. Sekiguchi.",
                "Design issues of Network Enabled Server Systems for the Grid.",
                "In Proc. of GRID 2000 (LNCS 1971), pages 4-17, 2000. 163"
            ],
            "original_annotated_samples": [
                "Implementation and Performance Evaluation of CONFLEX-G: Grid-enabled Molecular <br>conformational space search</br> Program with OmniRPC Yoshihiro Nakajima Graduate School of Systems & Information Engineering, University of Tsukuba Tsukuba, 305-8577, Japan yoshihiro@hpcs.is.tsukuba.ac.jp Mitsuhisa Sato Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan msato@is.tsukuba.ac.jp Hitoshi Goto Knowledge-based Information Engineering, Toyohashi University of Technology Toyohashi, 441-8580, Japan gotoh@cochem2.tutkie.tut.ac.jp Taisuke Boku, Daisuke Takahashi Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan {taisuke,daisuke}@hpcs.is.tsukuba.ac.jp ABSTRACT CONFLEX-G is the grid-enabled version of a molecular <br>conformational space search</br> program called CONFLEX.",
                "CONFLEX is one of the most efficient and reliable <br>conformational space search</br> programs[1].",
                "Since trial structure optimization in CONFLEX is calculated via molecular mechanics, <br>conformational space search</br> can be performed quickly compared to that using molecular orbital calculation.",
                "An overview Selection of Initial Structure Conformations Database Local Perturbation Geometry Optimization Comparison and Registration Figure 1: Algorithm of <br>conformational space search</br> in the original CONFLEX. of the CONFLEX system is presented in Section2, and the implementation and design of CONFLEX-G are described in Section 3.",
                "CONFLEX CONFLEX [1] is an efficient <br>conformational space search</br> program, which can predominately and exhaustively search the conformers in the lower-energy region."
            ],
            "translated_annotated_samples": [
                "Implementación y Evaluación del Rendimiento de CONFLEX-G: Programa de Búsqueda de Espacio Conformacional Molecular Habilitado para Grid con OmniRPC.",
                "CONFLEX es uno de los programas de <br>búsqueda de espacio conformacional</br> más eficientes y confiables.",
                "Dado que la optimización de la estructura de prueba en CONFLEX se calcula a través de la mecánica molecular, la <br>búsqueda del espacio conformacional</br> se puede realizar rápidamente en comparación con la que utiliza cálculos de orbitales moleculares.",
                "Se presenta una visión general de la Base de Datos de Conformaciones de Estructuras Iniciales, la Perturbación Local, la Optimización de la Geometría, la Comparación y el Registro. Figura 1: Algoritmo de <br>búsqueda de espacio conformacional</br> en el CONFLEX original. El sistema CONFLEX se describe en la Sección 2, y la implementación y diseño de CONFLEX-G se detallan en la Sección 3.",
                "CONFLEX es un programa eficiente de <br>búsqueda de espacio conformacional</br>, que puede buscar predominantemente y exhaustivamente los conformeros en la región de energía más baja."
            ],
            "translated_text": "Implementación y Evaluación del Rendimiento de CONFLEX-G: Programa de Búsqueda de Espacio Conformacional Molecular Habilitado para Grid con OmniRPC. Hemos implementado CONFLEX-G utilizando un sistema de RPC en malla llamado OmniRPC. En este artículo, informamos sobre el rendimiento de CONFLEX-G en un banco de pruebas en red de varios clústeres de PC distribuidos geográficamente. Para explorar muchas conformaciones de grandes biomoléculas, CONFLEX-G genera estructuras de prueba de las moléculas y asigna trabajos para optimizar una estructura de prueba con un método confiable de mecánica molecular en la cuadrícula. OmniRPC proporciona un modelo de persistencia restringido para respaldar las aplicaciones de búsqueda paramétrica. En este modelo, cuando el procedimiento de inicialización está definido en el módulo RPC, el módulo se inicializa automáticamente en el momento de la invocación llamando al procedimiento de inicialización. Esto puede eliminar la comunicación y la inicialización innecesarias en cada llamada en CONFLEX-G. CONFLEXG puede lograr un rendimiento comparable al de CONFLEX MPI y puede aprovechar más recursos informáticos al permitir el uso de un clúster de múltiples clústeres en la cuadrícula. El resultado experimental muestra que CONFLEX-G logró una aceleración de 56.5 veces en el caso de la molécula 1BL1, donde la molécula consta de un gran número de átomos y cada optimización de la estructura de prueba requiere un tiempo significativo. El desequilibrio de carga en el tiempo de optimización de la estructura de prueba también puede causar degradación del rendimiento. Categorías y Descriptores de Asignaturas C.2.4 [Organización de Sistemas Informáticos]: RED DE COMUNICACIÓN DE COMPUTADORAS-Sistemas Distribuidos; J.2.4 [Aplicaciones Informáticas]: CIENCIAS FÍSICAS E INGENIERÍA Términos Generales Diseño, Rendimiento 1. INTRODUCCIÓN La elucidación de las conformaciones estables y el proceso de plegamiento de las proteínas es uno de los objetivos más fundamentales y desafiantes en las ciencias de la vida. Si bien algunas de las estructuras secundarias más comunes (por ejemplo, ciertos tipos de hélice, la lámina beta y la hélice) son bien conocidas, se requiere un análisis preciso de los miles de conformaciones químicamente importantes y un análisis de orden de pico-segundo de sus interconversiones conformacionales a través de los estados de transición en la superficie de energía potencial para la investigación de orden de microsegundo del proceso de plegamiento hacia la formación de la estructura terciaria. Recientemente, el concepto de la red computacional ha comenzado a atraer un interés significativo en el campo de la computación de alto rendimiento en red. Los rápidos avances en la tecnología e infraestructura de redes de área amplia han hecho posible construir entornos de computación distribuida a gran escala y alto rendimiento, o redes computacionales, que proporcionan acceso confiable, consistente y generalizado a enormes recursos computacionales. CONFLEX es uno de los programas de <br>búsqueda de espacio conformacional</br> más eficientes y confiables. Hemos aplicado este programa 154 a la paralelización utilizando computación global. El rendimiento del CONFLEX paralelizado permite explorar la región de energía más baja del espacio conformacional de péptidos pequeños en un tiempo transcurrido disponible utilizando un clúster de PC local. Dado que la optimización de la estructura de prueba en CONFLEX se calcula a través de la mecánica molecular, la <br>búsqueda del espacio conformacional</br> se puede realizar rápidamente en comparación con la que utiliza cálculos de orbitales moleculares. Aunque se utilizó la versión paralelizada de CONFLEX para calcular de forma paralela la optimización de la estructura, que representa más del 90% del procesamiento en la búsqueda de conformaciones moleculares, no se pudo lograr una mejora suficiente en la aceleración solo con este método. Por lo tanto, para polímeros de alto peso molecular de organismos vivos, como la proteasa del VIH, el uso de un solo clúster de PC es insuficiente debido a la necesidad de optimizar una gran cantidad de estructuras de prueba. Esto requiere los vastos recursos informáticos de un entorno de computación en malla. En este artículo, describimos CONFLEX-G, un programa de búsqueda conformacional molecular habilitado para grid, utilizando OmniRPC y reportamos su rendimiento en un grid de varios clusters de PC distribuidos geográficamente. El prototipo CONFLEX-G asigna la optimización de las estructuras de cálculo de prueba, que es una tarea muy consumidora de tiempo, a nodos trabajadores en el entorno de la red para obtener un alto rendimiento. Además, comparamos el rendimiento de CONFLEX-G en un clúster de PC local con el de un banco de pruebas en red. OmniRPC[2, 3, 4] es una implementación segura para hilos de Ninf RPC[5, 6], que es una facilidad de RPC de cuadrícula para la computación en entornos de cuadrícula. Varios sistemas adoptan el concepto de la RPC como el modelo básico para la computación en entornos de rejilla, incluyendo Ninf-G[7], NetSolve[8] y CORBA[9]. El sistema RPCstyle proporciona una interfaz de programación fácil de usar e intuitiva, que permite a los usuarios del sistema de cuadrícula crear fácilmente aplicaciones habilitadas para la cuadrícula. Para apoyar la programación paralela, un cliente de RPC puede emitir solicitudes de llamada asincrónicas a un ordenador remoto diferente para aprovechar el paralelismo en toda la red a través de OmniRPC. En este artículo, proponemos el modelo de persistencia OmniRPC para un sistema de RPC de Grid y demostramos su efectividad. Para apoyar una aplicación típica para un entorno de cuadrícula, como una aplicación de búsqueda paramétrica, en la que la misma función se ejecuta con diferentes parámetros de entrada en el mismo conjunto de datos. En el sistema GridRPC actual[10], el conjunto de datos establecido por la llamada anterior no puede ser utilizado por llamadas posteriores. En el sistema OmniRPC, una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado y su estado inicializado para llamadas posteriores a las mismas funciones remotas con el fin de eliminar el costo de invocación de cada llamada. Este documento demuestra que CONFLEX-G es capaz de aprovechar los enormes recursos informáticos de un entorno de grid y buscar conformadores moleculares a gran escala. Demostramos CONFLEX-G en nuestra plataforma de pruebas en red utilizando la proteína real como molécula de muestra. La facilidad OmniRPC del módulo inicializable automático (AIM) permite al sistema calcular eficientemente numerosos conformeros. Además, al utilizar OmniRPC, el usuario puede paralelizar en cuadrícula la aplicación existente y pasar del clúster al entorno de cuadrícula sin modificar el código del programa y compilar el programa. Además, el usuario puede construir fácilmente un entorno de red privada. El resto de este documento está organizado de la siguiente manera. Se presenta una visión general de la Base de Datos de Conformaciones de Estructuras Iniciales, la Perturbación Local, la Optimización de la Geometría, la Comparación y el Registro. Figura 1: Algoritmo de <br>búsqueda de espacio conformacional</br> en el CONFLEX original. El sistema CONFLEX se describe en la Sección 2, y la implementación y diseño de CONFLEX-G se detallan en la Sección 3. Informamos los resultados experimentales obtenidos utilizando CONFLEX-G y discutimos su rendimiento en la Sección 4. En la Sección 6, presentamos conclusiones y discutimos temas para estudios futuros. 2. CONFLEX es un programa eficiente de <br>búsqueda de espacio conformacional</br>, que puede buscar predominantemente y exhaustivamente los conformeros en la región de energía más baja. ",
            "candidates": [],
            "error": [
                [
                    "búsqueda de espacio conformacional",
                    "búsqueda del espacio conformacional",
                    "búsqueda de espacio conformacional",
                    "búsqueda de espacio conformacional"
                ]
            ]
        },
        "bio-molecule": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Implementation and Performance Evaluation of CONFLEX-G: Grid-enabled Molecular Conformational Space Search Program with OmniRPC Yoshihiro Nakajima Graduate School of Systems & Information Engineering, University of Tsukuba Tsukuba, 305-8577, Japan yoshihiro@hpcs.is.tsukuba.ac.jp Mitsuhisa Sato Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan msato@is.tsukuba.ac.jp Hitoshi Goto Knowledge-based Information Engineering, Toyohashi University of Technology Toyohashi, 441-8580, Japan gotoh@cochem2.tutkie.tut.ac.jp Taisuke Boku, Daisuke Takahashi Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan {taisuke,daisuke}@hpcs.is.tsukuba.ac.jp ABSTRACT CONFLEX-G is the grid-enabled version of a molecular conformational space search program called CONFLEX.",
                "We have implemented CONFLEX-G using a grid RPC system called OmniRPC.",
                "In this paper, we report the performance of CONFLEX-G in a grid testbed of several geographically distributed PC clusters.",
                "In order to explore many conformation of large <br>bio-molecule</br>s, CONFLEX-G generates trial structures of the molecules and allocates jobs to optimize a trial structure with a reliable molecular mechanics method in the grid.",
                "OmniRPC provides a restricted persistence model to support the parametric search applications.",
                "In this model, when the initialization procedure is defined in the RPC module, the module is automatically initialized at the time of invocation by calling the initialization procedure.",
                "This can eliminate unnecessary communication and initialization at each call in CONFLEX-G. CONFLEXG can achieve performance comparable to CONFLEX MPI and can exploit more computing resources by allowing the use of a cluster of multiple clusters in the grid.",
                "The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times in the case of the 1BL1 molecule, where the molecule consists of a large number of atoms, and each trial structure optimization requires significant time.",
                "The load imbalance of the optimization time of the trial structure may also cause performance degradation.",
                "Categories and Subject Descriptors C.2.4 [Computer Systems Organization]: COMPUTERCOMMUNICATION NETWORK-Distributed Systems; J.2.4 [Computer Applications]: PHYSICAL SCIENCES AND ENGINEERING General Terms Design,Performance 1.",
                "INTRODUCTION Elucidation of the stable conformations and the folding process of proteins is one of the most fundamental and challenging goals in life science.",
                "While some of the most common secondary structures (e.g., certain types of helix, the beta-strand, and the coil) are well known, precise analysis of the thousands of chemically important conformers and pico-second-order analysis of their conformational interconversions via the transition states on the potential energy surface are required for the microsecond-order investigation of the folding process toward the tertiary structure formations.",
                "Recently, the concept of the computational grid has begun to attract significant interest in the field of high-performance network computing.",
                "Rapid advances in wide-area networking technology and infrastructure have made it possible to construct large-scale, high-performance distributed computing environments, or computational grids, that provide dependable, consistent and pervasive access to enormous computational resources.",
                "CONFLEX is one of the most efficient and reliable conformational space search programs[1].",
                "We have applied this 154 program to parallelization using global computing.",
                "The performance of the parallelized CONFLEX enables exploration of the lower-energy region of the conformational space of small peptides within an available elapsed time using a local PC cluster.",
                "Since trial structure optimization in CONFLEX is calculated via molecular mechanics, conformational space search can be performed quickly compared to that using molecular orbital calculation.",
                "Although the parallelized version of CONFLEX was used to calculate in parallel the structure optimization, which takes up over 90% of the processing in the molecular conformation search, sufficient improvement in the speedup could not be achieved by this method alone.",
                "Therefore, for high polymers from live organisms, such as HIV protease, the use one PC cluster is insufficient due to the requirement for optimization of a huge number of trial structures.",
                "This requires the vast computer resources of a grid computing environment.",
                "In this paper, we describe CONFLEX-G, a grid-enabled molecular conformational search program, using OmniRPC and report its performance in a grid of several PC clusters which are geographically distributed.",
                "The prototype CONFLEX-G allocates calculation trial structures optimization, which is a very time-consuming task, to worker nodes in the grid environment in order to obtain high throughput.",
                "In addition, we compare the performance of CONFLEX-G in a local PC cluster to that in a grid testbed.",
                "OmniRPC[2, 3, 4] is a thread-safe implementation of Ninf RPC[5, 6] which is a Grid RPC facility for grid environment computing.",
                "Several systems adopt the concept of the RPC as the basic model for grid environment computing, including Ninf-G[7], NetSolve[8] and CORBA[9].",
                "The RPCstyle system provides an easy-to-use, intuitive programming interface, allowing users of the grid system to easily create grid-enabled applications.",
                "In order to support parallel programming, an RPC client can issue asynchronous call requests to a different remote computer to exploit networkwide parallelism via OmniRPC.",
                "In this paper, we propose the OmniRPC persistence model to a Grid RPC system and demonstrate its effectiveness.",
                "In order to support a typical application for a grid environment, such as a parametric search application, in which the same function is executed with different input parameters on the same data set.",
                "In the current GridRPC system[10], the data set by the previous call cannot be used by subsequent calls.",
                "In the OmniRPC system, once a remote executable is invoked, the client attempts to use the invoked remote executable and its initialized state for subsequent RPC calls to the same remote functions in order to eliminate the invocation cost of each call.",
                "This paper demonstrates that CONFLEX-G is able to exploit the huge computer resources of a grid environment and search large-scale molecular conformers.",
                "We demonstrate CONFLEX-G on our grid testbed using the actual protein as a sample molecule.",
                "The OmniRPC facility of the automatic initializable module (AIM) allows the system to efficiently calculate numerous conformers.",
                "Furthermore, by using OmniRPC, the user can grid-parallelize the existing application, and move from the cluster to the grid environment without modifying program code and compiling the program.",
                "In addition, the user can easily build a private grid environment.",
                "The rest of this paper is organized as follows.",
                "An overview Selection of Initial Structure Conformations Database Local Perturbation Geometry Optimization Comparison and Registration Figure 1: Algorithm of conformational space search in the original CONFLEX. of the CONFLEX system is presented in Section2, and the implementation and design of CONFLEX-G are described in Section 3.",
                "We report experimental results obtained using CONFLEX-G and discuss its performance in Section 4.",
                "In Section 6, we present conclusions and discuss subjects for future study. 2.",
                "CONFLEX CONFLEX [1] is an efficient conformational space search program, which can predominately and exhaustively search the conformers in the lower-energy region.",
                "Applications of CONFLEX include the elucidation of the reactivity and selectivity of drugs and possible drug materials with regard to their conformational flexibility. 2.1 Algorithm of ConformationalSpaceSearch The basic strategy of CONFLEX is an exhaustive search of only the low-energy regions.",
                "The original CONFLEX performs the following four major steps: 1.",
                "Selection of an initial structure among the previously discovered unique conformers sorted in a conformational database. (An input structure is used as the first initial structure at the beginning of a search execution only.) 2.",
                "Generation of trial structures by local perturbations to the selected initial structure. 3.",
                "Geometry optimization for the newly generated trial structures. 4.",
                "Comparison of the successfully optimized (trial) structures with the other conformers stored in a conformation database, and preservation of newly discovered unique conformers in the database.",
                "Figure 1 shows the outline of CONFLEX, the original conformational space search algorithm.",
                "These procedures incorporate two unique strategies.",
                "Figure 2 shows the strategies for generating local perturbations in CONFLEX.",
                "The first strategy involves both corner flapping and edge flipping for the ring atoms and stepwise rotation for side-chains or backbone chains.",
                "These methods provide a highly efficient way to produce several good trial structures.",
                "These perturbations can be considered to mimic 155 Stepwise Rotation Corner Flap Edge Flip Figure 2: Strategies used to generate the local perturbations. a barrier-crossing step in the elementary process of the thermal conformational inter-conversion.",
                "Actually, the perturbations of an initial structure correspond to the precise performance around the space of the initial structure because of localization and weakness of the perturbation.",
                "The selection rule of the initial structure, the LowestConformer-First rule, is the second strategy for directing the conformation search expanded to the low-energy regions.",
                "The initial structure is selected as the set of lowest energy conformers stored in the conformation database.",
                "This rule is effective in moving down the search space toward lower energy regions, like water from a stream running into an empty reservoir, while filling local depressions along the way.",
                "Therefore, these tactical procedures of the CONFLEX search are referred to as the Reservoir Filling Algorithm.",
                "In order to remain in the low-energy region and perform an exhaustive search, the search limit (SEL), which determines the maximum energy of the initial structures, is pre-defined.",
                "Gradually increasing SEL allows only the lowenergy conformers to be searched and avoids straying into unnecessarily high-energy regions. 2.2 Parallelization of CONFLEX for Cluster For application to over 100 atoms, CONFLEX was improved using high-performance parallel computing techniques.",
                "In the CONFLEX search algorithm, the geometry optimization procedures always take 95% of the elapsed time of the search execution.",
                "Therefore, we parallelized this optimization using the Master/Worker parallelization technique.",
                "We modified the search procedures as follows.",
                "After trial structures are generated (step 2), they are temporarily stored in a task pool on the master node.",
                "Then, each worker node is dynamically supplied with one trial structure from the master node.",
                "After an optimization on a worker node is finished, the worker is immediately supplied with another trial structure.",
                "When all of the trial structures related to a given initial structure are optimized, only the master procedure is used in comparison.",
                "By parallelizing CONFLEX, the speedup of searching molecular conformers obtained is as reported in[11]. 3.",
                "CONFLEX-G Originally, CONFLEX was intended for use in exploring the conformers of the large <br>bio-molecule</br>s, such HIV protease.",
                "In such molecules, the number of trial structures increases and the time required for optimization of RPC Selection of Initial Structure Conformations Database Local Perturbation Comparison and Registration Client program Task Pool of Geometry Optimization RPC RPC Grid environment Cluster B Cluster A Cluster C Trial structureTrial structure Trial structure Trial structure Figure 3: Procedure of CONFLEX-G. agent rexrex rex Client jones.tsukuba.ac.jp hpc-serv.hpcc.jp hpc1 hpc2 hpc3 Agent invocation communicationNetwork Figure 4: Overview of the OmniRPC system for the remote cluster having a private IP address. the trial structure becomes immense.",
                "We implemented the parallelized version of CONFLEX, which cannot treat such molecules using only a local PC cluster.",
                "In order to exploit the vast computing resources of a grid environment, we designed and implemented CONFLEX-G, which is a grid-enabled version of CONFLEX, with the OmniRPC system.",
                "CONFLEX-G allocates jobs to optimize a trial structure to the computational nodes of each cluster in the grid environment.",
                "Figure 3 shows the process of CONFLEX-G.",
                "The worker programs are initialized by the initialize method, which is provided by the OmniRPC AIM facility at worker invocation.",
                "At each RPC call, the initialized state is reused on the remote host.",
                "In other words, the client program can eliminate the initialization for each RPC call, and can therefore optimize trial structures efficiently. 3.1 The OmniRPC system OmniRPC is a Grid RPC system which allows seamless parallel programming from a PC cluster to a grid environment.",
                "OmniRPC inherits its API and basic architecture from Ninf.",
                "A client and the remote computational hosts which execute the remote procedures may be connected via a network.",
                "The remote libraries are implemented as an executable program which contains a network stub routine as its main routine.",
                "We call this executable program a remote executable program (rex).",
                "When the OmniRPC client program starts, the initialization function of OmniRPC system invokes the OmniRPC agent program omrpc-agent in the remote hosts listed in the host file.",
                "To invoke the agent, the user can use the remote shell command rsh in a local-area network, the GRAM (Globus Resource Allocation Manager) API of the Globus 156 toolkit[12] in a grid environment, or the secure remote shell command ssh.",
                "The user can switch the configurations only by changing the host file.",
                "OmniRpcCall is a simple client programming interface for calling remote functions.",
                "When OmniRpcCall makes a remote procedure call, the call is allocated to an appropriate remote host.",
                "When the client issues the RPC request, it requests that the agent in the selected host submit the job of the remote executable with the local job scheduler specified in the host file.",
                "If the job scheduler is not specified, the agent executes the remote executable in the same node by the fork system call.",
                "The client sends the data of the input arguments to the invoked remote executable, and receives the results upon return of the remote function.",
                "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls in order to eliminate the cost of invoking the same remote executable again.",
                "When the agent and the remote executables are invoked, the remote programs obtain the client address and port from the argument list and connect back to the client by direct TCP/IP or Globus-IO for data transmission.",
                "Because the OmniRPC system does not use any fixed service ports, the client program allocates unused ports dynamically to wait for connection from the remote executables.",
                "This avoids possible security problems, and allows the user to install the OmniRPC system without requiring a privileged account.",
                "Herein, a typical grid resource is regarded as a cluster of geographically distributed PC clusters.",
                "For PC clusters on a private network, an OmniRPC agent process on the server host functions as a proxy to relay communications between the client and the remote executables by multiplexing the communications using a single connection.",
                "This feature, called multiplex IO (MXIO), allows a single client to use up to 1,000 remote computing hosts.",
                "When the PC cluster is inside a firewall, the port forwarding of SSH enables the node to communicate to the outside with MXIO.",
                "Figure 4 shows the overview of the OmniRPC system for a remote cluster with a private IP address.",
                "For parallel programming, the programmer can use asynchronous remote procedure calls, allowing the client to issue several requests while continuing with other computations.",
                "The requests are dispatched to different remote hosts to be executed in parallel, and the client waits or polls the completed request.",
                "In such a programming model with asynchronous remote procedure calls, the programmer should handle outstanding requests explicitly.",
                "Because OmniRPC is a thread-safe system, a number of remote procedure calls may be outstanding at any time for multi-threaded programs written in OpenMP. 3.2 OmniRPC persistence model: automatic initializable module OmniRPC efficiently supports typical Master/Worker parallel applications such as parametric execution programs.",
                "For parametric search applications, which often require large amount of identical data for each call, OmniRPC supports a limited persistence model, which is implemented by the automatic initializable module.",
                "The user can define an initialization procedure in the remote executable in order to send and store data automatically in advance of actual remote procedure calls.",
                "Since the remote executable may accept requests for subsequent calls, the data set which has been set by the initialization procedure can be re-used.",
                "As a result, the worker program can execute efficiently and reduce the amount of data transmitted for initialization.",
                "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls.",
                "However, OmniRPC does not guarantee persistence of the remote executable, so that the data set by the previous call cannot be used by subsequent calls.",
                "This is because a remote call by OmniRpcCall may be scheduled to any remote host dynamically, and remote executables may be terminated accidentally due to dynamic re-scheduling or host faults.",
                "However, persistence of the remote executable can be exploited in certain applications.",
                "An example is a parametric search application: in such an application, it would be efficient if a large set of data could be pre-loaded by the first call, and subsequent calls could be performed on the same data, but with different parameters.",
                "This is the case for CONFLEX.",
                "OmniRPC provides a restricted persistence model through the automatic initializable module (AIM) in order to support this type of application.",
                "If the initialization procedure is defined in the module, the module is automatically initialized at invocation by calling the initialization procedure.",
                "When the remote executable is re-scheduled in different hosts, the initialization is called to initialize the newly allocated remote module.",
                "This can eliminate unnecessary communications when RPC calls use the same data.",
                "To reveal more about the difference in progress between the cases with OmniRPC AIM and without OmniRPC AIM, we present two figures.",
                "Figure 5 illustrates the time chart of the progress of a typical OmniRPC application using the OmniRPC AIM facility, and Figure 6 illustrates the time chart of the same application without the OmniRPC AIM facility.",
                "In both figures, the lines between diamonds represent the processes of initialization, and the lines between points represent the calculation.",
                "The bold line indicates the time when the client program sends the data to a worker program.",
                "It is necessary for the application without the OmniRPC AIM facility to initialize at each RPC.",
                "The application using the OmniRPC AIM facility can re-use the initialized data once the data set is initialized.",
                "This can reduce the initialization at each RPC.",
                "The workers of the application with the AIM can calculate efficiently compared to the application without the OmniRPC AIM facility. 3.3 Implementation of CONFLEX-G using OmniRPC Figure 3 shows an overview of the process used in CONFLEXG.",
                "Using RPCs, CONFLEX-G allocates the processes of trial structure optimization, which are performed by the computation nodes of a PC cluster in the MPI version of CONFLEX, to the computational nodes of each cluster in a grid environment.",
                "There are two computations which are performed by the worker programs in CONFLEX-G. One is the initialization of a worker program, and another is the calculation of trial structure optimization.",
                "First, the OmniRPC facility of the AIM is adapted for initialization of a worker program.",
                "This facility automatically calls the initialization function, which is contained in the worker program, once the client program invokes the worker program in a remote node.",
                "It is necessary for the common RPC system including GridRPC to initialize a program for every RPC call, since data persistence of worker programs 157 time Client Program Worker Program 1 Worker Program 2 initialization initialization calculation calculation calculation calculation calculation Parallelized using asynchronous RPCs Figure 5: Time chart of applications using the OmniRPC facility of the automatic initializable module. time Client Program Worker Program 1 Worker Program 2 initialization initializationcalculation calculation calculation calculation initialization initialization initialization Parallelized using asynchronous RPCs calculation Figure 6: Time chart of applications without the OmniRPC facility of the automatic initializable module.",
                "Table 1: Machine configurations in the grid testbed.",
                "Site Cluster Name Machine Network Authentication # of Nodes # of CPUs Univ. of Tsukuba Dennis Dual Xeon 2.4GHz 1Gb Ethernet Globus, SSH 14 28 Alice Dual Athlon 1800+ 100Mb Ethernet Globus, SSH 18 36 TUT Toyo Dual Athlon 2600+ 100Mb Ethernet SSH 8 16 AIST Ume Dual Pentium3 1.4GHz 1Gb Ethernet Globus, SSH 32 64 is not supported.",
                "In OmniRPC, however, when the Initialize remote function is defined in the worker program and a new worker program, corresponding to the other RPC, is assigned to execute, an Initialize function is called automatically.",
                "Therefore, after the Initialize function call to set up common initialization data, a worker program can re-use this data and increase the efficiency of its processes.",
                "Thus, the higher the set-up cost, the greater the potential benefit.",
                "We implemented the worker program of CONFLEX-G to receive data, such as evaluation parameters of energy, from a client program and to be initialized by the Initialize function.",
                "We arranged the client program of CONFLEX-G to transfer the parameter file at the time of worker initialization.",
                "This enables execution to be performed by modify only the client setting if the user wants to run CONFLEX-G with a different data set.",
                "Second, in order to calculate trial structure optimization in a worker program, the worker program must receive the data, such as the atom arrangement of the trial structure and the internal energy state.",
                "The result is returned to the client program after the worker has Optimized the trial structure.",
                "Since the calculation portion of the structure optimization in this worker program can be calculated independently using different parameters, we parallelized this portion using asynchronous RPCs on the client side.",
                "To call the structure optimization function in a worker program from the client program, we use the OmniRpcCallAsync API, which is intended for asynchronous RPC.",
                "In addition, OmniRpcCallWaitAll API which waits until all asynchronous RPCs are used in order to perform synchronization with all of the asynchronous RPCs completed so as to optimize the trial structure.",
                "The client program which assigns trial structure optimization to the calculation node of a PC cluster using RPC is outlined as follows.",
                "OmniRpcInit() OmniRpcModuleInit(conflex_search,...); ... while( <new conformers> ) { foreach( <trial structures> ) OmniRpcCallAsync(conflex_search_worker, ...); OmniRpcWaitAll(); ...",
                "Note that OmniRpcModuleInit API returns only the arguments needed for initialization and will not actually execute the Initialization function.",
                "As described above, the actual Initialization is performed at the first remote call.",
                "Since the OmniRPC system has an easy round-robin scheduler, we do not have to explicitly write the code for load balance.",
                "Therefore, RPCs are allocated automatically to idle workers. 158 Table 2: Network performance between the master node of the Dennis cluster and the master node of each PC cluster.",
                "Round-Trip Throughput Cluster Time (ms) (Mbps) Dennis 0.23 879.31 Alice 0.18 94.12 Toyo 11.27 1.53 Ume 1.07 373.33 4.",
                "PRELIMINARY RESULTS 4.1 Grid Testbed The grid testbed was constructed by computing resources at the University of Tsukuba, the Toyohashi University of Technology (TUT) and the National Institute of Advanced Industrial Science and Technology (AIST).",
                "Table 1 shows the computing resources used for the grid of the present study.",
                "The University of Tsukuba and AIST are connected by a 1-Gbps Tsukuba WAN, and the other PC clusters are connected by SINET, which is wide-area network dedicated to academic research in Japan.",
                "Table 2 shows the performance of the measured network between the master node of the Dennis cluster and the master node of each PC cluster in the grid testbed.",
                "The communication throughput was measured using netperf, and the round-trip time was measured by ping. 4.2 Performance of CONFLEX-G In all of the CONFLEX-G experiments, the client program was executed on the master node of the Dennis cluster at the University of Tsukuba.",
                "The built-in Round-Robin scheduler of OmniRPC was used as a job scheduler.",
                "SSH was used for an authentication system, the OminRPCs MXIO, which relays the I/O communication between client program and worker programs by port forwarding of SSH was, not used.",
                "Note that one worker program is assigned and performed on one CPU of the calculation node in a PC cluster.",
                "That is, the number of workers is equal to the number of CPUs.",
                "These programs were compiled by the Intel Fortran Compiler 7.0 and gcc 2.95.",
                "MPICH, Version 1.2.5, was used to compare the performance between CONFLEX MPI and CONFLEX-G.",
                "In order to demonstrate the usability of the OmniRPC facility of the AIM, we implemented another version of CONFLEX-G which did not utilize the OmniRPC facility.",
                "The worker program in this version of CONFLEXG must be initialized at each RPC because the worker does not hold the previous data set.",
                "In order to examine the performance of CONFLEX-G, we selected two peptides and two small protein as test molecules: • N-acetyl tetra-alanine methylester (AlaX04) • N-acetyl hexdeca-alanine methylester (AlaX16) • TRP-cage miniprotein construct TC5B (1L2Y) • PTH receptor N-terminus fragment (1BL1) Table 3 lists the characteristics of these sample molecules.",
                "The column trial structure / loops in this table shows the Figure 7: Performances of CONFLEX-G, CONFLEX MPI and Original CONFLEX in the Dennis cluster.",
                "Figure 8: Speedup ratio, which is based on the elapsed time of CONFLEX-G using one worker in the Dennis cluster.",
                "Figure 9: Performance of CONFLEX-G with and without the OmniRPC facility of automatic initializable module for AlaX16. 159 Table 3: Characteristics of molecules and data transmission for optimizing trial molecular structures in each molecular code.",
                "Molecular # of # of total trial trial structure Data transfer to Data transfer code atoms structures / loop initialize a worker / trial structure AlaX04 181 360 45 2033KB 17.00KB AlaX16 191 480 160 2063KB 18.14KB 1L2Y 315 331 331 2099KB 29.58KB 1BL1 519 519 519 2150KB 48.67KB Table 4: Elapsed search time for the molecular conformation of AlaX04.",
                "Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (sequential) 1 320.0 1786.21 4.96 1786.21 1.00 Toyo (16) 16 20.0 1497.08 4.16 196.32 9.10 Dennis (28) 28 11.4 1905.51 5.29 97.00 18.41 Alice (36) 36 8.9 2055.25 5.71 87.09 20.51 Ume (56) 56 5.7 2196.77 6.10 120.69 14.80 Dennis (28) + Toyo (16) 44 7.3 1630.09 4.53 162.35 11.00 Alice (36) + Toyo (16) 52 6.2 1774.53 4.93 178.24 10.02 Dennis (28) + Alice (36) 64 5.0 1999.02 5.55 81.52 21.91 Dennis (28) + Ume (56) 84 3.8 2085.84 5.79 92.22 19.37 Alice (36) + Ume (56) 92 3.5 2120.87 5.89 101.25 17.64 Table 5: Elapsed search time for the molecular conformation of AlaX16 Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (1) 1 480.0 74027.80 154.22 74027.80 1.00 Toyo (16) 16 30.0 70414.21 146.70 4699.15 15.75 Dennis (28) 28 17.1 74027.80 154.22 3375.60 21.93 Alice (36) 36 13.3 90047.27 187.60 3260.41 22.71 Ume (56) 56 8.6 123399.38 257.08 2913.63 25.41 Dennis (28) + Toyo (16) 44 10.9 76747.74 159.89 2762.10 26.80 Alice (36) + Toyo (16) 52 9.2 82700.44 172.29 2246.73 32.95 Dennis (28) + Alice (36) 64 7.5 87571.30 182.44 2051.50 36.08 Toyo (16) + Ume (56) 72 6.7 109671.32 228.48 2617.85 28.28 Dennis (28) + Ume (56) 84 5.7 102817.90 214.20 2478.93 29.86 Dennis(28)+Ume(56)+Toyo(16) 100 4.8 98238.07 204.66 2478.93 29.86 Table 6: Elapsed time of the search for the trial structure of 1L2Y.",
                "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 331.0 867 286,967 79.71 1.00 Toyo MPI (16) 16 20.7 867 18,696 5.19 15.34 Dennis (28) 28 11.8 803 14,101 3.91 20.35 Dennis (28) + Ume(56) 84 3.9 1,064 8,316 2.31 34.50 Table 7: Elapsed time of the search for the trial structure of 1BL1.",
                "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 519.0 3,646 1892,210 525.61 1.00 Toyo MPI (16) 16 32.4 3,646 120,028 33.34 15.76 Dennis (28) 28 18.5 3,154 61,803 17.16 30.61 Dennis (28) + Ume (56) 84 6.1 4,497 33,502 9.30 56.48 160 number of trial structures generated in each iteration, indicating the degree of parallelism.",
                "Figure 3 also summarizes the amount of data transmission required for initialization of a worker program and for optimization of each trial structure.",
                "Note that the amount of data transmission, which is required in order to initialize a worker program and optimize a trial structure in the MPI version of CONFLEX, is equal to that of CONFLEX-G. We used an improvement version of MM2 force field to assign a potential energy function to various geometric properties of a group of atoms. 4.2.1 Performance in a Local Cluster We first compared the performance of CONFLEX-G, the MPI version of CONFLEX, and the original sequential version of CONFLEX-G using a local cluster.",
                "We investigated performance by varying the number of workers using the Dennis cluster.",
                "We chose AlaX04 as a test molecule for this experiment.",
                "Figure 7 compares the results for the CONFLEX MPI and CONFLEX-G in a local PC cluster.",
                "The result of this experiment shows that CONFLEX-G can reduce the execution time as the number of workers increases, as in the MPI version of CONFLEX.",
                "We found that CONFLEX-G achieved efficiencies comparable to the MPI version.",
                "With 28 workers, CONFLEX-G achieved an 18.00 times speedup compared to the CONFLEX sequential version.",
                "The performance of CONFLEX-G without the OmniRPC AIM facility is worse than that of CONFLEXG using the facility, based on the increase in the number of workers.",
                "This indicates that the OmniRPC AIM enables the worker to calculate efficiently without other calculations, such initialization or invocation of worker programs.",
                "As the number of workers is increased, the performance of CONFLEX-G is a slightly lower than that of the MPI version.",
                "This performance degradation is caused by differences in the worker initialization processes of CONFLEX-G and CONFLEX MPI.",
                "In the case of CONFLEX MPI, all workers are initialized in advance of the optimization phase.",
                "In the case of OminRPC, the worker is invoked on-demand when the RPC call is actually issued.",
                "Therefore, the initialization incurs this overhead.",
                "Since the objective of CONFLEX-G is to explore the conformations of large <br>bio-molecule</br>s, the number of trial structures and the time to optimize the trial structure might be large.",
                "In such cases, the overhead to invoke and initialize the worker program can be small compared to the entire elapsed time. 4.2.2 Performance for Peptides in The Grid Testbed First, the sample molecules (AlaX04 and AlaX16) were used to examine the CONFLEX-G performance in a grid environment.",
                "Figure 8 shows the speedup achieved by using multiple clusters compared to using one worker in the Dennis cluster.",
                "Detailed results are shown in Table 4 and Table 5.",
                "In both cases, the best performance was obtained using 64 workers of the combination of the Dennis and Alice clusters.",
                "CONFLEX-G achieved a maximum speedup of 36.08 times for AlaX04 and a maximum speedup of 21.91 times for AlaX16.",
                "In the case of AlaX04, the performance is improved only when the network performance between clusters is high.",
                "However, even if two or more clusters are used in a wide area network environment, the performance improvement was slight because the optimization time of one trial structure generated from AlaX04, a small molecule, is short.",
                "In addition, the overhead required for invocation of a worker program and network data transmission consume a large portion of the remaining processing time.",
                "In particular, the data transmission required for the initialization of a worker program is 2 MB.",
                "In the case of Toyo cluster, where the network performance between the client program and the worker programs is poor, the time of data transmission to the worker program required approximately 6.7 seconds.",
                "Since this transmission time was longer than the processing time of one structure optimization in CONFLEX-G, most of the time was spent for this data transmission.",
                "Therefore, even if CONFLEX-G uses a large number of calculation nodes in a wide area network environment, the benefit of using a grid resource is not obtained.",
                "In the case of AlaX16, CONFLEX-G achieved a speedup by using two or more PC clusters in our grid testbed.",
                "This was because the calculation time on the worker program was long and the overhead, such as network latency and the invoking of worker programs, became relatively small and could be hidden.",
                "The best performance was obtained using 64 workers in the Dennis and Alice clusters.",
                "In the case of AaX16, the achieved performance was a speedup of 36.08 times.",
                "Figure 9 reveals the effect of using the facility of the OmniRPC AIM on CONFLEX-G performance.",
                "In most cases, CONFLEX-G with the OmniRPC AIM facility archived better performance than CONFLEX-G without the facility.",
                "In particular, the OmniRPC AIM facility was advantageous when using two clusters connected by a low-performance network.",
                "The results indicate that the OmniRPC AIM facility can improve performance in the grid environment. 4.2.3 PerformanceforSmallProteininTheGridTestbed Finally, we explored the molecular conformation using CONFLEX-G for large molecules.",
                "In a grid environment, this experiment was conducted using the Dennis and Ume clusters.",
                "In this experiment, we used two proteins, 1L2Y and 1BL1.",
                "Table 6 and Table 7 show the performance of CONFLEX-G in the grid environment and that of CONFLEX MPI in the Toyo cluster, respectively.",
                "The speedups in these tables were computed respectively based on the performance of one worker and 16 workers of the Toyo cluster using CONFLEX MPI.",
                "CONFLEX-G with 84 workers in Dennis and Ume clusters obtained maximum speedups of 56.5 times for 1L2Y and 34.5 times for 1L2Y.",
                "Since the calculation time for structure optimization required a great deal of time, the ratio of overhead, including tasks such as the invocation of a worker program and data transmission for initialization, became very small, so that the performance of CONFLEX-G was improved.",
                "We found that the load imbalance in the processing time of optimization for each trial structure caused performance degradation.",
                "When we obtained the best performance for 1L2Y using the Dennis and Ume clusters, the time for each structure optimization varied from 190 to 27,887 seconds, and the ratio between the longest and shortest times was 13.4.",
                "For 1BL1, the ratio of minimum time over maximum time was 190.",
                "In addition, in order that the worker program wait until the completion of optimization of all trial structures, all worker programs were found to wait in an idle state for approximately 6 hours.",
                "This has caused the performance degradation of CONFLEX-G. 161 4.3 Discussion In this subsection, we discuss the improvement of the performance reflected in our experiments.",
                "Exploiting parallelism - In order to exploit more computational resources, it is necessary to increase the degree of parallelism.",
                "In this experiment, the degree of parallelism was not so large in the case of the sample molecules.",
                "When using a set of over 500 computing nodes for 1BL1, the number of one trial structures assigned to each worker will be only one or two.",
                "If over 100 trial structures are assigned to each worker program, calculation can be performed more efficiently due to the reduction of the overhead for worker invocation and initialization via the facility of the OmniRPC AIM.",
                "One idea for increasing parallelism is to overlap the execution of two or more sets of trial structures.",
                "In the current algorithm, a set of trial structures is generated from one initial structure and computed until optimizations for all structures in this set are calculated.",
                "Furthermore, this will help to improve load imbalance.",
                "By having other sets of trial structures overlap, even if some optimizations require a long time, the optimization for the structures in other sets can be executed to compensate for the idle workers for other optimizations.",
                "It is however unclear how such modification of the algorithm might affect the quality of the final results in terms of a conformation search.",
                "Improvement in load imbalance when optimizing each trial structure - Table 8 lists the statistics for optimization times of trial structures generated for each sample molecule measured using 28 workers in the Dennis cluster.",
                "When two or more sets of PC clusters are used, the speedup in performance is hampered by the load imbalance of the optimization of the trial structures.",
                "The longest time for optimizing a trial structure was nearly 24 times longer than the shortest time.",
                "Furthermore, other workers must wait until the longest job has Finished, so that the entire execution time cannot be reduced.",
                "When CONFLEX-G searched the conformers of 1BL1 by the Dennis cluster, the longest calculation time of the trial structure optimization made up approximately 80% of the elapsed time.",
                "Therefore, there are two possible solutions for the load Imbalance. • It is necessary to refine the algorithm used to generate the trial structure, which suppresses the time variation for optimizing a trial structure in CONFLEX.",
                "This enables CONFLEX-G to achieve high-throughput by using many computer resources. • One of the solutions is to overlap the executions for two or more sets of trial structures.",
                "In the current algorithms, a set of trial structures is generated from one initial structure and calculation continues until all structures in this set are calculated.",
                "By having other sets of trial structures, even if a structure search takes a long time, a job can be executed in order to compensate the load imbalance by other jobs.",
                "However, how such modification of the algorithms might affect the efficiency is not clear. • In this experiment, we used a simple build-in roundrobbin scheduler of OmniRPC, which is necessary in order to apply the scheduler that allocates structures with long optimization times to a high-performance Table 8: Statistics of elapsed time of trial structure optimization using 28 workers in the Dennis cluster.",
                "Molecular Min Max Average Variance code (s) (s) (s) AlaX04 2.0 11.3 5.3 3 AlaX16 47.6 920.0 154.2 5404 1L2Y 114.2 13331.4 803.2 636782 1BL1 121.0 29641.8 3153.5 2734811 node and structures with short optimization times to low-performance nodes.",
                "In general, however, it might be difficult to predict the time required for trial structure optimization.",
                "Parallelization of the worker program for speedup to optimize a trial structure - In the current implementation, we do not parallelize the worker program.",
                "In order to speed up trial structures, hybrid programming using OmniRPC and OpenMP in an SMP (Symmetric Multiple Processor) machine may be one of the alternative methods by which to improve overall performance. 5.",
                "RELATED WORK Recently, an algorithm has been developed that solves the problems of parallelization and communication in poorly connected processors to be used for simulation.",
                "The Folding@home project[13] simulates timescales thousands to millions of times longer than previously achieved.",
                "This has allowed us to simulate folding for the first time and to directly examine folding related diseases.",
                "SETI@home[14] is a program to search for alien life by analyzing radio telescope signals using Fourier transform radio telescope data from telescopes from different sites.",
                "SETI@home tackles immensely parallel problems, in which calculation can easily be divided among several computers.",
                "Radio telescope data chunks can easily be assigned to different computers.",
                "Most of these efforts explicitly develop a docking application as a parallel application using a special purpose parallel programming language and middleware, such as MPI, which requires development skills and effort.",
                "However, the skills and effort required to develop a grid application may not be required for OmniRPC.",
                "Nimrod/G[15] is a tool for distributed parametric modeling and implements a parallel task farm for simulations that require several varying input parameters.",
                "Nimrod incorporates a distributed scheduling component that can manage the scheduling of individual experiments to idle computers in a local area network.",
                "Nimrod has been applied to applications including bio-informatics, operations research, and molecular modeling for drug design.",
                "NetSolve[8] is an RPC facility similar to OmniRPC and Ninf, providing a similar programming interface and automatic load balancing mechanism.",
                "Ninf-G[7] is a grid-enabled implementation of Ninf and provides a GridRPC[10] system that uses LDAP to manage the database of remote executables, but does not support clusters involving private IP addresses or addresses inside a firewall.",
                "Matsuoka et al. [16] has also discussed several design issues related to grid RPC systems. 162 6.",
                "CONCLUSIONS AND FUTURE WORK We have designed and implemented CONFLEX-G using OmniRPC.",
                "We reported its performance in a grid testbed of several geographically distributed PC clusters.",
                "In order to explore the conformation of large <br>bio-molecule</br>s, CONFLEXG was used to generate trial structures of the molecules, and allocate jobs to optimize them by molecular mechanics in the grid.",
                "OmniRPC provides a restricted persistence model so that the module is automatically initialized at invocation by calling the initialization procedure.",
                "This can eliminate unnecessary communication and the initialization at each call in CONFLEX-G. CONFLEX-G can achieves performance comparable to CONFLEX MPI and exploits more computing resources by allowing the use of multiple PC clusters in the grid.",
                "The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times for the 1BL1 molecule, where the molecule consists of a large number of atoms and each trial structure optimization requires a great deal of time.",
                "The load imbalance of the trial structure optimizations may cause performance degradation.",
                "We need to refine the algorithm used to generate the trial structure in order to improve the load balance optimization for trial structures in CONFLEX.",
                "Future studies will include development of deployment tools and an examination of fault tolerance.",
                "In the current OmniRPC, the registration of an execution program to remote hosts and deployments of worker programs are manually set.",
                "Deployment tools will be required as the number of remote hosts is increased.",
                "In grid environments in which the environment changes dynamically, it is also necessary to support fault tolerance.",
                "This feature is especially important in large-scale applications which require lengthy calculation in a grid environment.",
                "We plan to refine the conformational optimization algorithm in CONFLEX to explore the conformation space search of larger <br>bio-molecule</br>s such HIV protease using up to 1000 workers in a grid environment. 7.",
                "ACKNOWLEDGMENTS This research was supported in part by a Grant-in-Aid from the Ministry of Education, Culture, Sports, Science and Technology in Japan, No. 14019011, 2002, and as part of the Program of Research and Development for Applying Advanced Computational Science and Technology by the Japan Science and Technology Corporation (Research on the grid computing platform for drug design).",
                "We would like to thank grid technology research center, AIST, Japan for providing computing resources for our experiment. 8.",
                "REFERENCES [1] H. Goto and E. Osawa.",
                "An efficient algorithm for searching low-energy conformers of cyclic and acyclic molecules.",
                "J. Chem.",
                "Soc., Perkin Trans, 2:187-198, 1993. [2] M. Sato, T. Boku, and D. Takahashi.",
                "OmniRPC: a Grid RPC System for Parallel Programming in Cluster and Grid Environment.",
                "In Proc. of CCGrid2003, pages 219-229, 2003. [3] M. Sato, M. Hirano, Y. Tanaka, and S. Sekiguchi.",
                "OmniRPC: a Grid RPC facility for Cluster and Global Computing in OpenMP.",
                "In Proc. of Workshop on OpenMP Applications and Tools 2001(LNCS 2104 ), pages 130-135, 2001. [4] OmniRPC Project. http://www.omni.hpcc.jp/omnirpc/. [5] M. Sato, H. Nakada, S. Sekiguchi, S. Matsuoka, U. Nagashima, and H. Takagi.",
                "Ninf: A Network Based Information Library for Global World-Wide Computing Infrastructure.",
                "In HPCN Europe, pages 491-502, 1997. [6] Ninf Project. http://ninf.apgrid.org/. [7] Y. Tanaka, H. Nakada, S. Sekiguchi, T. Suzumura, and S. Matsuoka.",
                "Ninf-G: A Reference Implementation of RPC-based Programming Middleware for Grid Computing .",
                "Journal of Grid Computing, 1(1):41-51, 2003. [8] D. Arnold, S. Agrawal, S. Blackford, J. Dongarra, M. Miller, K. Seymour, K. Sagi, Z. Shi, and S. Vadhiyar.",
                "Users Guide to NetSolve V1.4.1.",
                "Innovative Computing Dept.",
                "Technical Report ICL-UT-02-05, University of Tennessee, Knoxville, TN, June 2002. [9] Object management group. http://www.omg.org/. [10] K. Seymour, H. Nakada, S. Matsuoka, J. Dongarra, C. Lee, and H. Casanova.",
                "GridRPC: A Remote Procedure Call API for Grid Computing. [11] H.Goto, T. Takahashi, Y. Takata, K. Ohta, and U Nagashima.",
                "Conflex: Conformational behaviors of polypeptides as predicted by a conformational space search.",
                "In Nanotech2003, volume 1, pages 32-35, 2003. [12] I.",
                "Foster and C. Kesselman.",
                "Globus: A metacomputing infrastructure toolkit.",
                "The International Journal of Supercomputer Applications and High Performanc e Computing, 11(2):115-128, Summer 1997. [13] Stefan M. Larson, Christopher D. Snow, Michael Shirts, and Vijay S. Pande.",
                "Folding@home and genome@home: Using distributed computing to tackle prev iously intractable problems in computational biology.",
                "Computational Genomics, 2002. [14] seti@home project. http://setiathome.ssl.berkeley.edu/. [15] R. Buyya, K. Branson, J. Giddy, and D. Abramson.",
                "The virtual laboratory: a toolset to enable distributed molecular modelling for drug design on the world-wide grid.",
                "Concurrency and Computation: Practice and Experience, 15(1):1-25, January 2003. [16] S. Matsuoka, H. Nakada, M. Sato, and S. Sekiguchi.",
                "Design issues of Network Enabled Server Systems for the Grid.",
                "In Proc. of GRID 2000 (LNCS 1971), pages 4-17, 2000. 163"
            ],
            "original_annotated_samples": [
                "In order to explore many conformation of large <br>bio-molecule</br>s, CONFLEX-G generates trial structures of the molecules and allocates jobs to optimize a trial structure with a reliable molecular mechanics method in the grid.",
                "CONFLEX-G Originally, CONFLEX was intended for use in exploring the conformers of the large <br>bio-molecule</br>s, such HIV protease.",
                "Since the objective of CONFLEX-G is to explore the conformations of large <br>bio-molecule</br>s, the number of trial structures and the time to optimize the trial structure might be large.",
                "In order to explore the conformation of large <br>bio-molecule</br>s, CONFLEXG was used to generate trial structures of the molecules, and allocate jobs to optimize them by molecular mechanics in the grid.",
                "We plan to refine the conformational optimization algorithm in CONFLEX to explore the conformation space search of larger <br>bio-molecule</br>s such HIV protease using up to 1000 workers in a grid environment. 7."
            ],
            "translated_annotated_samples": [
                "Para explorar muchas conformaciones de grandes <br>biomoléculas</br>, CONFLEX-G genera estructuras de prueba de las moléculas y asigna trabajos para optimizar una estructura de prueba con un método confiable de mecánica molecular en la cuadrícula.",
                "CONFLEX-G Originalmente, CONFLEX estaba destinado a ser utilizado para explorar los conformeros de las grandes <br>biomoléculas</br>, como la proteasa del VIH.",
                "Dado que el objetivo de CONFLEX-G es explorar las conformaciones de grandes <br>bio-moléculas</br>, el número de estructuras de prueba y el tiempo para optimizar la estructura de prueba podrían ser grandes.",
                "Para explorar la conformación de grandes <br>biomoléculas</br>, se utilizó CONFLEXG para generar estructuras de prueba de las moléculas y asignar trabajos para optimizarlas mediante mecánica molecular en la cuadrícula.",
                "Planeamos refinar el algoritmo de optimización conformacional en CONFLEX para explorar el espacio de búsqueda de conformaciones de <br>moléculas biológicas</br> más grandes como la proteasa del VIH utilizando hasta 1000 trabajadores en un entorno de cuadrícula."
            ],
            "translated_text": "Implementación y Evaluación del Rendimiento de CONFLEX-G: Programa de Búsqueda de Espacio Conformacional Molecular Habilitado para Grid con OmniRPC. Hemos implementado CONFLEX-G utilizando un sistema de RPC en malla llamado OmniRPC. En este artículo, informamos sobre el rendimiento de CONFLEX-G en un banco de pruebas en red de varios clústeres de PC distribuidos geográficamente. Para explorar muchas conformaciones de grandes <br>biomoléculas</br>, CONFLEX-G genera estructuras de prueba de las moléculas y asigna trabajos para optimizar una estructura de prueba con un método confiable de mecánica molecular en la cuadrícula. OmniRPC proporciona un modelo de persistencia restringido para respaldar las aplicaciones de búsqueda paramétrica. En este modelo, cuando el procedimiento de inicialización está definido en el módulo RPC, el módulo se inicializa automáticamente en el momento de la invocación llamando al procedimiento de inicialización. Esto puede eliminar la comunicación y la inicialización innecesarias en cada llamada en CONFLEX-G. CONFLEXG puede lograr un rendimiento comparable al de CONFLEX MPI y puede aprovechar más recursos informáticos al permitir el uso de un clúster de múltiples clústeres en la cuadrícula. El resultado experimental muestra que CONFLEX-G logró una aceleración de 56.5 veces en el caso de la molécula 1BL1, donde la molécula consta de un gran número de átomos y cada optimización de la estructura de prueba requiere un tiempo significativo. El desequilibrio de carga en el tiempo de optimización de la estructura de prueba también puede causar degradación del rendimiento. Categorías y Descriptores de Asignaturas C.2.4 [Organización de Sistemas Informáticos]: RED DE COMUNICACIÓN DE COMPUTADORAS-Sistemas Distribuidos; J.2.4 [Aplicaciones Informáticas]: CIENCIAS FÍSICAS E INGENIERÍA Términos Generales Diseño, Rendimiento 1. INTRODUCCIÓN La elucidación de las conformaciones estables y el proceso de plegamiento de las proteínas es uno de los objetivos más fundamentales y desafiantes en las ciencias de la vida. Si bien algunas de las estructuras secundarias más comunes (por ejemplo, ciertos tipos de hélice, la lámina beta y la hélice) son bien conocidas, se requiere un análisis preciso de los miles de conformaciones químicamente importantes y un análisis de orden de pico-segundo de sus interconversiones conformacionales a través de los estados de transición en la superficie de energía potencial para la investigación de orden de microsegundo del proceso de plegamiento hacia la formación de la estructura terciaria. Recientemente, el concepto de la red computacional ha comenzado a atraer un interés significativo en el campo de la computación de alto rendimiento en red. Los rápidos avances en la tecnología e infraestructura de redes de área amplia han hecho posible construir entornos de computación distribuida a gran escala y alto rendimiento, o redes computacionales, que proporcionan acceso confiable, consistente y generalizado a enormes recursos computacionales. CONFLEX es uno de los programas de búsqueda de espacio conformacional más eficientes y confiables. Hemos aplicado este programa 154 a la paralelización utilizando computación global. El rendimiento del CONFLEX paralelizado permite explorar la región de energía más baja del espacio conformacional de péptidos pequeños en un tiempo transcurrido disponible utilizando un clúster de PC local. Dado que la optimización de la estructura de prueba en CONFLEX se calcula a través de la mecánica molecular, la búsqueda del espacio conformacional se puede realizar rápidamente en comparación con la que utiliza cálculos de orbitales moleculares. Aunque se utilizó la versión paralelizada de CONFLEX para calcular de forma paralela la optimización de la estructura, que representa más del 90% del procesamiento en la búsqueda de conformaciones moleculares, no se pudo lograr una mejora suficiente en la aceleración solo con este método. Por lo tanto, para polímeros de alto peso molecular de organismos vivos, como la proteasa del VIH, el uso de un solo clúster de PC es insuficiente debido a la necesidad de optimizar una gran cantidad de estructuras de prueba. Esto requiere los vastos recursos informáticos de un entorno de computación en malla. En este artículo, describimos CONFLEX-G, un programa de búsqueda conformacional molecular habilitado para grid, utilizando OmniRPC y reportamos su rendimiento en un grid de varios clusters de PC distribuidos geográficamente. El prototipo CONFLEX-G asigna la optimización de las estructuras de cálculo de prueba, que es una tarea muy consumidora de tiempo, a nodos trabajadores en el entorno de la red para obtener un alto rendimiento. Además, comparamos el rendimiento de CONFLEX-G en un clúster de PC local con el de un banco de pruebas en red. OmniRPC[2, 3, 4] es una implementación segura para hilos de Ninf RPC[5, 6], que es una facilidad de RPC de cuadrícula para la computación en entornos de cuadrícula. Varios sistemas adoptan el concepto de la RPC como el modelo básico para la computación en entornos de rejilla, incluyendo Ninf-G[7], NetSolve[8] y CORBA[9]. El sistema RPCstyle proporciona una interfaz de programación fácil de usar e intuitiva, que permite a los usuarios del sistema de cuadrícula crear fácilmente aplicaciones habilitadas para la cuadrícula. Para apoyar la programación paralela, un cliente de RPC puede emitir solicitudes de llamada asincrónicas a un ordenador remoto diferente para aprovechar el paralelismo en toda la red a través de OmniRPC. En este artículo, proponemos el modelo de persistencia OmniRPC para un sistema de RPC de Grid y demostramos su efectividad. Para apoyar una aplicación típica para un entorno de cuadrícula, como una aplicación de búsqueda paramétrica, en la que la misma función se ejecuta con diferentes parámetros de entrada en el mismo conjunto de datos. En el sistema GridRPC actual[10], el conjunto de datos establecido por la llamada anterior no puede ser utilizado por llamadas posteriores. En el sistema OmniRPC, una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado y su estado inicializado para llamadas posteriores a las mismas funciones remotas con el fin de eliminar el costo de invocación de cada llamada. Este documento demuestra que CONFLEX-G es capaz de aprovechar los enormes recursos informáticos de un entorno de grid y buscar conformadores moleculares a gran escala. Demostramos CONFLEX-G en nuestra plataforma de pruebas en red utilizando la proteína real como molécula de muestra. La facilidad OmniRPC del módulo inicializable automático (AIM) permite al sistema calcular eficientemente numerosos conformeros. Además, al utilizar OmniRPC, el usuario puede paralelizar en cuadrícula la aplicación existente y pasar del clúster al entorno de cuadrícula sin modificar el código del programa y compilar el programa. Además, el usuario puede construir fácilmente un entorno de red privada. El resto de este documento está organizado de la siguiente manera. Se presenta una visión general de la Base de Datos de Conformaciones de Estructuras Iniciales, la Perturbación Local, la Optimización de la Geometría, la Comparación y el Registro. Figura 1: Algoritmo de búsqueda de espacio conformacional en el CONFLEX original. El sistema CONFLEX se describe en la Sección 2, y la implementación y diseño de CONFLEX-G se detallan en la Sección 3. Informamos los resultados experimentales obtenidos utilizando CONFLEX-G y discutimos su rendimiento en la Sección 4. En la Sección 6, presentamos conclusiones y discutimos temas para estudios futuros. 2. CONFLEX es un programa eficiente de búsqueda de espacio conformacional, que puede buscar predominantemente y exhaustivamente los conformeros en la región de energía más baja. Las aplicaciones de CONFLEX incluyen la elucidación de la reactividad y selectividad de fármacos y posibles materiales medicinales con respecto a su flexibilidad conformacional. 2.1 Algoritmo de Búsqueda de Espacio Conformacional La estrategia básica de CONFLEX es una búsqueda exhaustiva solo de las regiones de baja energía. El CONFLEX original realiza los siguientes cuatro pasos principales: 1. Selección de una estructura inicial entre los conformeros únicos previamente descubiertos y ordenados en una base de datos conformacional. (Una estructura de entrada se utiliza como la primera estructura inicial al comienzo de una ejecución de búsqueda solamente.) 2. Generación de estructuras de prueba mediante perturbaciones locales a la estructura inicial seleccionada. 3. Optimización de geometría para las nuevas estructuras de prueba generadas. 4. Comparación de las estructuras optimizadas con éxito (ensayo) con los otros conformeros almacenados en una base de datos de conformaciones, y preservación de los conformeros únicos recién descubiertos en la base de datos. La Figura 1 muestra el esquema de CONFLEX, el algoritmo original de búsqueda de espacio conformacional. Estos procedimientos incorporan dos estrategias únicas. La Figura 2 muestra las estrategias para generar perturbaciones locales en CONFLEX. La primera estrategia implica tanto el aleteo de las esquinas como el volteo de los bordes para los átomos del anillo y la rotación paso a paso para las cadenas laterales o cadenas del esqueleto. Estos métodos proporcionan una forma altamente eficiente de producir varias estructuras de prueba buenas. Estas perturbaciones pueden considerarse como una imitación de 155 Rotación Escalonada de Esquina de Solapa de Borde de Giro Figura 2: Estrategias utilizadas para generar las perturbaciones locales, un paso de cruce de barrera en el proceso elemental de la interconversión conformacional térmica. De hecho, las perturbaciones de una estructura inicial corresponden al rendimiento preciso alrededor del espacio de la estructura inicial debido a la localización y debilidad de la perturbación. La regla de selección de la estructura inicial, la regla LowestConformer-First, es la segunda estrategia para dirigir la búsqueda de conformaciones ampliada a las regiones de baja energía. La estructura inicial se selecciona como el conjunto de conformaciones de menor energía almacenadas en la base de datos de conformaciones. Esta regla es efectiva para desplazarse hacia abajo en el espacio de búsqueda hacia regiones de menor energía, como el agua de un arroyo que fluye hacia un embalse vacío, llenando depresiones locales en el camino. Por lo tanto, estos procedimientos tácticos de la búsqueda CONFLEX se conocen como el Algoritmo de Llenado de Reservorio. Para permanecer en la región de baja energía y realizar una búsqueda exhaustiva, el límite de búsqueda (SEL), que determina la energía máxima de las estructuras iniciales, está predefinido. El aumento gradual de SEL permite buscar solo los conformeros de baja energía y evita desviarse hacia regiones de energía innecesariamente alta. 2.2 Paralelización de CONFLEX para clúster Para su aplicación en más de 100 átomos, CONFLEX fue mejorado utilizando técnicas de computación paralela de alto rendimiento. En el algoritmo de búsqueda CONFLEX, los procedimientos de optimización de geometría siempre ocupan el 95% del tiempo transcurrido durante la ejecución de la búsqueda. Por lo tanto, paralelizamos esta optimización utilizando la técnica de paralelización Maestro/Trabajador. Modificamos los procedimientos de búsqueda de la siguiente manera. Después de que se generan las estructuras de prueba (paso 2), se almacenan temporalmente en un grupo de tareas en el nodo maestro. Entonces, cada nodo trabajador recibe dinámicamente una estructura de prueba del nodo maestro. Después de que se complete una optimización en un nodo de trabajador, este recibe inmediatamente otra estructura de prueba. Cuando todas las estructuras de prueba relacionadas con una estructura inicial dada están optimizadas, solo se utiliza el procedimiento principal para la comparación. Al paralelizar CONFLEX, la aceleración de la búsqueda de conformadores moleculares obtenida es la reportada en[11]. 3. CONFLEX-G Originalmente, CONFLEX estaba destinado a ser utilizado para explorar los conformeros de las grandes <br>biomoléculas</br>, como la proteasa del VIH. En tales moléculas, el número de estructuras de prueba aumenta y el tiempo requerido para la optimización de la Selección de RPC de Estructuras Iniciales Conformaciones de la Base de Datos de Perturbación Local Comparación y Registro del Cliente Programa Cliente Grupo de Tareas de Optimización Geométrica RPC Entorno de Rejilla RPC Cluster B Cluster A Cluster C Estructura de prueba Estructura de prueba Estructura de prueba Estructura de prueba Figura 3: Procedimiento de CONFLEX-G. agente rexrex rex Cliente jones.tsukuba.ac.jp hpc-serv.hpcc.jp hpc1 hpc2 hpc3 Invocación del agente Comunicación de la red Figura 4: Visión general del sistema OmniRPC para el clúster remoto con una dirección IP privada. la estructura de prueba se vuelve inmensa. Implementamos la versión paralelizada de CONFLEX, la cual no puede tratar tales moléculas utilizando solo un clúster de PC local. Para aprovechar los vastos recursos informáticos de un entorno de grid, diseñamos e implementamos CONFLEX-G, que es una versión habilitada para grid de CONFLEX, con el sistema OmniRPC. CONFLEX-G asigna trabajos para optimizar una estructura de prueba a los nodos computacionales de cada clúster en el entorno de la red. La Figura 3 muestra el proceso de CONFLEX-G. Los programas de los trabajadores se inicializan mediante el método de inicialización, que es proporcionado por la instalación de OmniRPC AIM en la invocación del trabajador. En cada llamada RPC, el estado inicializado se reutiliza en el host remoto. En otras palabras, el programa cliente puede eliminar la inicialización para cada llamada RPC, y por lo tanto optimizar eficientemente las estructuras de prueba. 3.1 El sistema OmniRPC OmniRPC es un sistema de RPC en malla que permite una programación paralela sin problemas desde un clúster de PC hasta un entorno de malla. OmniRPC hereda su API y arquitectura básica de Ninf. Un cliente y los hosts computacionales remotos que ejecutan los procedimientos remotos pueden estar conectados a través de una red. Las bibliotecas remotas se implementan como un programa ejecutable que contiene una rutina de soporte de red como su rutina principal. Llamamos a este programa ejecutable un programa ejecutable remoto (rex). Cuando el programa cliente OmniRPC se inicia, la función de inicialización del sistema OmniRPC invoca el programa agente OmniRPC omrpc-agent en los hosts remotos listados en el archivo de hosts. Para invocar al agente, el usuario puede utilizar el comando de shell remoto rsh en una red de área local, la API de GRAM (Gestor de Asignación de Recursos Globus) del kit de herramientas Globus 156 en un entorno de grid, o el comando de shell remoto seguro ssh. El usuario puede cambiar las configuraciones solo modificando el archivo de host. OmniRpcCall es una interfaz de programación de cliente simple para llamar a funciones remotas. Cuando OmniRpcCall realiza una llamada a un procedimiento remoto, la llamada se asigna a un host remoto apropiado. Cuando el cliente emite la solicitud de RPC, solicita que el agente en el host seleccionado envíe el trabajo del ejecutable remoto con el programador de trabajos local especificado en el archivo del host. Si no se especifica el programador de tareas, el agente ejecuta el ejecutable remoto en el mismo nodo mediante la llamada al sistema fork. El cliente envía los datos de los argumentos de entrada al ejecutable remoto invocado, y recibe los resultados al regreso de la función remota. Una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado para llamadas RPC posteriores con el fin de eliminar el costo de invocar nuevamente el mismo ejecutable remoto. Cuando el agente y los ejecutables remotos son invocados, los programas remotos obtienen la dirección y el puerto del cliente de la lista de argumentos y se conectan de vuelta al cliente mediante TCP/IP directo o Globus-IO para la transmisión de datos. Debido a que el sistema OmniRPC no utiliza puertos de servicio fijos, el programa cliente asigna puertos no utilizados dinámicamente para esperar la conexión de los ejecutables remotos. Esto evita posibles problemas de seguridad y permite al usuario instalar el sistema OmniRPC sin necesidad de contar con una cuenta privilegiada. Aquí, un recurso de red típico se considera como un grupo de clústeres de PC distribuidos geográficamente. Para los clústeres de PC en una red privada, un proceso agente OmniRPC en el host del servidor funciona como un proxy para relé de comunicaciones entre el cliente y los ejecutables remotos mediante la multiplexación de las comunicaciones utilizando una única conexión. Esta característica, llamada multiplex IO (MXIO), permite a un único cliente utilizar hasta 1,000 hosts de computación remota. Cuando el clúster de PC está dentro de un firewall, el reenvío de puertos de SSH permite que el nodo se comunique con el exterior a través de MXIO. La Figura 4 muestra la descripción general del sistema OmniRPC para un clúster remoto con una dirección IP privada. Para la programación en paralelo, el programador puede utilizar llamadas a procedimientos remotos asíncronos, lo que permite al cliente emitir varias solicitudes mientras continúa con otras computaciones. Las solicitudes se envían a diferentes hosts remotos para ser ejecutadas en paralelo, y el cliente espera o consulta la solicitud completada. En un modelo de programación con llamadas a procedimientos remotos asíncronos, el programador debe manejar las solicitudes pendientes de forma explícita. Debido a que OmniRPC es un sistema seguro para hilos, puede haber varios llamados a procedimientos remotos pendientes en cualquier momento para programas multi-hilo escritos en OpenMP. Modelo de persistencia de OmniRPC 3.2: módulo inicializable automáticamente. OmniRPC soporta eficientemente aplicaciones paralelas típicas de Maestro/Trabajador como programas de ejecución paramétrica. Para aplicaciones de búsqueda paramétrica, que a menudo requieren una gran cantidad de datos idénticos para cada llamada, OmniRPC admite un modelo de persistencia limitado, que está implementado por el módulo inicializable automático. El usuario puede definir un procedimiento de inicialización en el ejecutable remoto para enviar y almacenar datos automáticamente antes de las llamadas reales al procedimiento remoto. Dado que el ejecutable remoto puede aceptar solicitudes para llamadas posteriores, el conjunto de datos que ha sido establecido por el procedimiento de inicialización puede ser reutilizado. Como resultado, el programa del trabajador puede ejecutarse de manera eficiente y reducir la cantidad de datos transmitidos para la inicialización. Una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado para llamadas RPC posteriores. Sin embargo, OmniRPC no garantiza la persistencia del ejecutable remoto, por lo que el conjunto de datos establecido por la llamada anterior no puede ser utilizado por llamadas posteriores. Esto se debe a que una llamada remota realizada por OmniRpcCall puede ser programada en cualquier host remoto de forma dinámica, y los ejecutables remotos pueden ser terminados accidentalmente debido a una reprogramación dinámica o fallos en el host. Sin embargo, la persistencia del ejecutable remoto puede ser explotada en ciertas aplicaciones. Un ejemplo es una aplicación de búsqueda paramétrica: en dicha aplicación, sería eficiente si un gran conjunto de datos pudiera cargarse previamente en la primera llamada, y las llamadas posteriores pudieran realizarse en los mismos datos, pero con diferentes parámetros. Este es el caso para CONFLEX. OmniRPC proporciona un modelo de persistencia restringido a través del módulo inicializable automático (AIM) para apoyar este tipo de aplicación. Si el procedimiento de inicialización está definido en el módulo, el módulo se inicializa automáticamente al invocarlo llamando al procedimiento de inicialización. Cuando el ejecutable remoto se reprograma en diferentes hosts, se llama a la inicialización para inicializar el módulo remoto recién asignado. Esto puede eliminar comunicaciones innecesarias cuando las llamadas RPC utilizan los mismos datos. Para revelar más sobre la diferencia en el progreso entre los casos con OmniRPC AIM y sin OmniRPC AIM, presentamos dos figuras. La Figura 5 ilustra el gráfico de tiempo del progreso de una aplicación típica de OmniRPC utilizando la facilidad OmniRPC AIM, y la Figura 6 ilustra el gráfico de tiempo de la misma aplicación sin la facilidad OmniRPC AIM. En ambas figuras, las líneas entre los diamantes representan los procesos de inicialización, y las líneas entre los puntos representan los cálculos. La línea en negrita indica el momento en que el programa cliente envía los datos al programa trabajador. Es necesario que la aplicación sin la funcionalidad OmniRPC AIM se inicialice en cada RPC. La aplicación que utiliza la funcionalidad OmniRPC AIM puede reutilizar los datos inicializados una vez que el conjunto de datos está inicializado. Esto puede reducir la inicialización en cada RPC. Los trabajadores de la aplicación con AIM pueden calcular de manera eficiente en comparación con la aplicación sin la facilidad de AIM de OmniRPC. 3.3 Implementación de CONFLEX-G utilizando OmniRPC. La Figura 3 muestra una visión general del proceso utilizado en CONFLEX-G. Usando RPCs, CONFLEX-G asigna los procesos de optimización de la estructura de prueba, que son realizados por los nodos de cálculo de un clúster de PC en la versión MPI de CONFLEX, a los nodos computacionales de cada clúster en un entorno de grid. Hay dos cálculos que realizan los programas de trabajador en CONFLEX-G. Uno es la inicialización de un programa de trabajador, y otro es el cálculo de la optimización de la estructura de prueba. Primero, la instalación OmniRPC del AIM se adapta para la inicialización de un programa trabajador. Esta instalación llama automáticamente a la función de inicialización, la cual está contenida en el programa de trabajador, una vez que el programa cliente invoca al programa de trabajador en un nodo remoto. Es necesario que el sistema RPC común, incluido GridRPC, inicialice un programa para cada llamada RPC, ya que la persistencia de datos de los programas trabajadores. Tabla 1: Configuraciones de máquinas en la plataforma de pruebas en red. El nombre del clúster del sitio Máquina Red de Autenticación # de Nodos # de CPUs Univ. de Tsukuba Dennis Dual Xeon 2.4GHz 1Gb Ethernet Globus, SSH 14 28 Alice Dual Athlon 1800+ 100Mb Ethernet Globus, SSH 18 36 TUT Toyo Dual Athlon 2600+ 100Mb Ethernet SSH 8 16 AIST Ume Dual Pentium3 1.4GHz 1Gb Ethernet Globus, SSH 32 64 no es compatible. En OmniRPC, sin embargo, cuando se define la función remota Inicializar en el programa del trabajador y se asigna un nuevo programa de trabajador, correspondiente al otro RPC, para ejecutar, se llama automáticamente a una función Inicializar. Por lo tanto, después de la llamada a la función Initialize para configurar los datos de inicialización comunes, un programa trabajador puede reutilizar estos datos y aumentar la eficiencia de sus procesos. Por lo tanto, cuanto mayor sea el costo de configuración, mayor será el beneficio potencial. Implementamos el programa de trabajador de CONFLEX-G para recibir datos, como parámetros de evaluación de energía, de un programa cliente y para ser inicializado por la función Inicializar. Organizamos el programa del cliente de CONFLEX-G para transferir el archivo de parámetros en el momento de la inicialización del trabajador. Esto permite que la ejecución se realice modificando solo la configuración del cliente si el usuario desea ejecutar CONFLEX-G con un conjunto de datos diferente. Segundo, para calcular la optimización de la estructura de prueba en un programa de trabajador, el programa de trabajador debe recibir los datos, como el arreglo de átomos de la estructura de prueba y el estado de energía interna. El resultado se devuelve al programa cliente después de que el trabajador haya optimizado la estructura de prueba. Dado que la parte de cálculo de la optimización de la estructura en este programa de trabajador puede ser calculada de forma independiente utilizando diferentes parámetros, paralelizamos esta parte utilizando RPC asincrónicos en el lado del cliente. Para llamar a la función de optimización de estructuras en un programa trabajador desde el programa cliente, utilizamos la API OmniRpcCallAsync, la cual está diseñada para RPC asincrónico. Además, la API OmniRpcCallWaitAll espera hasta que se utilicen todas las RPC asíncronas para realizar la sincronización una vez que todas las RPC asíncronas se hayan completado, con el fin de optimizar la estructura de la prueba. El programa cliente que asigna la optimización de la estructura de prueba al nodo de cálculo de un clúster de PC utilizando RPC se describe de la siguiente manera. OmniRpcInit() OmniRpcModuleInit(conflex_search,...); ... mientras( <nuevos conformeros> ) { para cada( <estructuras de prueba> ) OmniRpcCallAsync(conflex_search_worker, ...); OmniRpcWaitAll(); ... Ten en cuenta que la API OmniRpcModuleInit solo devuelve los argumentos necesarios para la inicialización y no ejecutará realmente la función de inicialización. Como se describe arriba, la inicialización real se realiza en la primera llamada remota. Dado que el sistema OmniRPC tiene un programador de round-robin sencillo, no es necesario escribir explícitamente el código para el equilibrio de carga. Por lo tanto, los RPC se asignan automáticamente a los trabajadores inactivos. Tabla 2: Rendimiento de la red entre el nodo maestro del clúster Dennis y el nodo maestro de cada clúster de PC. Rendimiento de ida y vuelta del clúster Tiempo (ms) (Mbps) Dennis 0.23 879.31 Alice 0.18 94.12 Toyo 11.27 1.53 Ume 1.07 373.33 RESULTADOS PRELIMINARES 4.1 Banco de pruebas de la red El banco de pruebas de la red fue construido utilizando recursos informáticos de la Universidad de Tsukuba, la Universidad de Tecnología de Toyohashi (TUT) y el Instituto Nacional de Ciencia y Tecnología Industrial Avanzada (AIST). La Tabla 1 muestra los recursos informáticos utilizados para la red del presente estudio. La Universidad de Tsukuba y AIST están conectadas por una red WAN de 1 Gbps en Tsukuba, y los otros clústeres de PC están conectados por SINET, que es una red de área amplia dedicada a la investigación académica en Japón. La Tabla 2 muestra el rendimiento de la red medida entre el nodo maestro del clúster Dennis y el nodo maestro de cada clúster de PC en el banco de pruebas de la red. El rendimiento de CONFLEX-G En todos los experimentos de CONFLEX-G, el programa cliente se ejecutó en el nodo maestro del clúster Dennis en la Universidad de Tsukuba. El planificador Round-Robin incorporado de OmniRPC se utilizó como planificador de tareas. Se utilizó SSH para un sistema de autenticación, el OminRPCs MXIO, que retransmite la comunicación de E/S entre el programa cliente y los programas trabajadores mediante el reenvío de puertos de SSH, no se utilizó. Se debe tener en cuenta que un programa de trabajador se asigna y se ejecuta en una CPU de un nodo de cálculo en un clúster de PC. Es decir, el número de trabajadores es igual al número de CPUs. Estos programas fueron compilados por el Intel Fortran Compiler 7.0 y gcc 2.95. Se utilizó MPICH, Versión 1.2.5, para comparar el rendimiento entre CONFLEX MPI y CONFLEX-G. Para demostrar la usabilidad de la instalación OmniRPC de AIM, implementamos otra versión de CONFLEX-G que no utilizaba la instalación OmniRPC. El programa del trabajador en esta versión de CONFLEXG debe inicializarse en cada RPC porque el trabajador no conserva el conjunto de datos anterior. Para examinar el rendimiento de CONFLEX-G, seleccionamos dos péptidos y dos proteínas pequeñas como moléculas de prueba: • N-acetil tetra-alanina metilester (AlaX04) • N-acetil hexadeca-alanina metilester (AlaX16) • Construcción de miniproteína TRP-cage TC5B (1L2Y) • Fragmento del extremo N del receptor de PTH (1BL1) La Tabla 3 enumera las características de estas moléculas de muestra. La estructura de prueba de columnas / bucles en esta tabla muestra la Figura 7: Rendimientos de CONFLEX-G, CONFLEX MPI y CONFLEX Original en el clúster Dennis. Figura 8: Proporción de aceleración, que se basa en el tiempo transcurrido de CONFLEX-G utilizando un trabajador en el clúster de Dennis. Figura 9: Rendimiento de CONFLEX-G con y sin la facilidad OmniRPC del módulo inicializable automático para AlaX16. Tabla 3: Características de las moléculas y transmisión de datos para optimizar las estructuras moleculares de prueba en cada código molecular. Tabla 4: Tiempo de búsqueda transcurrido para la conformación molecular de AlaX04. Tabla 6: Tiempo transcurrido de la búsqueda de la estructura de prueba de 1L2Y. Tabla 7: Tiempo transcurrido de la búsqueda de la estructura de prueba de 1BL1. Número total de estructuras del clúster Tiempo de optimización Transcurrido Velocidad transcurrida (# de trabajadores) trabajadores / trabajador / estructura (s) tiempo (s) tiempo (H) hasta Toyo MPI (1) 1 519.0 3,646 189,210 525.61 1.00 Toyo MPI (16) 16 32.4 3,646 120,028 33.34 15.76 Dennis (28) 28 18.5 3,154 61,803 17.16 30.61 Dennis (28) + Ume (56) 84 6.1 4,497 33,502 9.30 56.48 160 número de estructuras de prueba generadas en cada iteración, indicando el grado de paralelismo. La Figura 3 también resume la cantidad de transmisión de datos requerida para la inicialización de un programa de trabajador y para la optimización de cada estructura de prueba. Ten en cuenta que la cantidad de transmisión de datos necesaria para inicializar un programa de trabajador y optimizar una estructura de prueba en la versión MPI de CONFLEX es igual a la de CONFLEX-G. Utilizamos una versión mejorada del campo de fuerza MM2 para asignar una función de energía potencial a varias propiedades geométricas de un grupo de átomos. 4.2.1 Rendimiento en un clúster local. Primero comparamos el rendimiento de CONFLEX-G, la versión MPI de CONFLEX y la versión secuencial original de CONFLEX-G utilizando un clúster local. Investigamos el rendimiento variando el número de trabajadores utilizando el clúster Dennis. Elegimos AlaX04 como molécula de prueba para este experimento. La Figura 7 compara los resultados para el CONFLEX MPI y el CONFLEX-G en un clúster de PC local. El resultado de este experimento muestra que CONFLEX-G puede reducir el tiempo de ejecución a medida que aumenta el número de trabajadores, al igual que en la versión MPI de CONFLEX. Descubrimos que CONFLEX-G logró eficiencias comparables a la versión MPI. Con 28 trabajadores, CONFLEX-G logró una mejora de velocidad de 18.00 veces en comparación con la versión secuencial de CONFLEX. El rendimiento de CONFLEX-G sin la funcionalidad AIM de OmniRPC es peor que el de CONFLEX-G que utiliza la funcionalidad, basado en el aumento en el número de trabajadores. Esto indica que el OmniRPC AIM permite al trabajador calcular de manera eficiente sin necesidad de realizar otros cálculos, como la inicialización o la invocación de programas de trabajador. A medida que se aumenta el número de trabajadores, el rendimiento de CONFLEX-G es ligeramente inferior al de la versión MPI. Esta degradación del rendimiento es causada por diferencias en los procesos de inicialización de los trabajadores de CONFLEX-G y CONFLEX MPI. En el caso de CONFLEX MPI, todos los trabajadores se inicializan antes de la fase de optimización. En el caso de OminRPC, el trabajador es invocado bajo demanda cuando la llamada RPC es emitida realmente. Por lo tanto, la inicialización conlleva este sobrecosto. Dado que el objetivo de CONFLEX-G es explorar las conformaciones de grandes <br>bio-moléculas</br>, el número de estructuras de prueba y el tiempo para optimizar la estructura de prueba podrían ser grandes. En tales casos, el gasto general para invocar e inicializar el programa de trabajador puede ser pequeño en comparación con el tiempo total transcurrido. 4.2.2 Rendimiento para Péptidos en el Banco de Pruebas de la Red En primer lugar, las moléculas de muestra (AlaX04 y AlaX16) se utilizaron para examinar el rendimiento de CONFLEX-G en un entorno de red. La Figura 8 muestra la aceleración lograda al utilizar múltiples clústeres en comparación con el uso de un solo trabajador en el clúster de Dennis. Los resultados detallados se muestran en la Tabla 4 y la Tabla 5. En ambos casos, el mejor rendimiento se obtuvo utilizando 64 trabajadores de la combinación de los clústeres de Dennis y Alice. CONFLEX-G logró una aceleración máxima de 36.08 veces para AlaX04 y una aceleración máxima de 21.91 veces para AlaX16. En el caso de AlaX04, el rendimiento mejora solo cuando el rendimiento de la red entre clústeres es alto. Sin embargo, aunque se utilicen dos o más grupos en un entorno de red de área amplia, la mejora en el rendimiento fue leve debido a que el tiempo de optimización de una estructura de prueba generada a partir de AlaX04, una molécula pequeña, es corto. Además, los gastos generales necesarios para la invocación de un programa de trabajador y la transmisión de datos a través de la red consumen una gran parte del tiempo de procesamiento restante. En particular, la transmisión de datos necesaria para la inicialización de un programa de trabajador es de 2 MB. En el caso del clúster Toyo, donde el rendimiento de la red entre el programa cliente y los programas trabajadores es deficiente, el tiempo de transmisión de datos al programa trabajador requería aproximadamente 6.7 segundos. Dado que el tiempo de transmisión fue más largo que el tiempo de procesamiento de una optimización de estructura en CONFLEX-G, la mayor parte del tiempo se dedicó a esta transmisión de datos. Por lo tanto, incluso si CONFLEX-G utiliza un gran número de nodos de cálculo en un entorno de red de área amplia, no se obtiene el beneficio de utilizar un recurso de cuadrícula. En el caso de AlaX16, CONFLEX-G logró una aceleración al utilizar dos o más clústeres de PC en nuestro banco de pruebas en red. Esto se debió a que el tiempo de cálculo en el programa del trabajador era largo y los costos adicionales, como la latencia de red y la invocación de programas de trabajador, se volvieron relativamente pequeños y pudieron ocultarse. El mejor rendimiento se obtuvo utilizando 64 trabajadores en los clústeres de Dennis y Alice. En el caso de AaX16, el rendimiento logrado fue un aumento de velocidad de 36.08 veces. La Figura 9 revela el efecto de utilizar la facilidad del OmniRPC AIM en el rendimiento de CONFLEX-G. En la mayoría de los casos, CONFLEX-G con la instalación de OmniRPC AIM logró un mejor rendimiento que CONFLEX-G sin la instalación. En particular, la facilidad OmniRPC AIM fue ventajosa al usar dos clústeres conectados por una red de bajo rendimiento. Los resultados indican que la instalación OmniRPC AIM puede mejorar el rendimiento en el entorno de la red. 4.2.3 Rendimiento para proteínas pequeñas en el banco de pruebas de la red. Finalmente, exploramos la conformación molecular utilizando CONFLEX-G para moléculas grandes. En un entorno de cuadrícula, este experimento se llevó a cabo utilizando los clústeres Dennis y Ume. En este experimento, utilizamos dos proteínas, 1L2Y y 1BL1. La Tabla 6 y la Tabla 7 muestran el rendimiento de CONFLEX-G en el entorno de la red y el de CONFLEX MPI en el clúster de Toyo, respectivamente. Los incrementos de velocidad en estas tablas fueron calculados respectivamente basados en el rendimiento de un trabajador y 16 trabajadores del clúster Toyo utilizando CONFLEX MPI. CONFLEX-G con 84 trabajadores en los grupos de Dennis y Ume obtuvo aceleraciones máximas de 56.5 veces para 1L2Y y 34.5 veces para 1L2Y. Dado que el tiempo de cálculo para la optimización de la estructura requería una gran cantidad de tiempo, la proporción de gastos generales, incluidas tareas como la invocación de un programa de trabajador y la transmisión de datos para la inicialización, se volvió muy pequeña, por lo que el rendimiento de CONFLEX-G mejoró. Descubrimos que el desequilibrio de carga en el tiempo de procesamiento de la optimización para cada estructura de prueba causó una degradación del rendimiento. Cuando obtuvimos el mejor rendimiento para 1L2Y utilizando los cúmulos de Dennis y Ume, el tiempo para la optimización de cada estructura varió de 190 a 27,887 segundos, y la proporción entre los tiempos más largos y más cortos fue de 13.4. Para 1BL1, la proporción de tiempo mínimo sobre tiempo máximo fue de 190. Además, para que el programa del trabajador espere hasta que se complete la optimización de todas las estructuras de prueba, se descubrió que todos los programas de trabajador esperaban en un estado inactivo durante aproximadamente 6 horas. Esto ha causado la degradación del rendimiento de CONFLEX-G. 161 4.3 Discusión En esta subsección, discutimos la mejora del rendimiento reflejada en nuestros experimentos. Explotando el paralelismo - Para aprovechar más recursos computacionales, es necesario aumentar el grado de paralelismo. En este experimento, el grado de paralelismo no fue tan grande en el caso de las moléculas de muestra. Al utilizar un conjunto de más de 500 nodos informáticos para 1BL1, el número de estructuras de un solo ensayo asignadas a cada trabajador será solo de uno o dos. Si se asignan más de 100 estructuras de prueba a cada programa de trabajador, el cálculo se puede realizar de manera más eficiente debido a la reducción de la sobrecarga para la invocación y la inicialización de los trabajadores a través de la facilidad de OmniRPC AIM. Una idea para aumentar el paralelismo es superponer la ejecución de dos o más conjuntos de estructuras de prueba. En el algoritmo actual, se genera un conjunto de estructuras de prueba a partir de una estructura inicial y se calculan las optimizaciones para todas las estructuras de este conjunto. Además, esto ayudará a mejorar el desequilibrio de carga. Al hacer que otros conjuntos de estructuras de prueba se superpongan, incluso si algunas optimizaciones requieren mucho tiempo, la optimización de las estructuras en otros conjuntos se puede ejecutar para compensar a los trabajadores inactivos de otras optimizaciones. Sin embargo, no está claro cómo dicha modificación del algoritmo podría afectar la calidad de los resultados finales en términos de una búsqueda de conformación. Mejora en el desequilibrio de carga al optimizar cada estructura de prueba: la Tabla 8 enumera las estadísticas de los tiempos de optimización de las estructuras de prueba generadas para cada molécula de muestra medida utilizando 28 trabajadores en el clúster de Dennis. Cuando se utilizan dos o más conjuntos de grupos de PC, la mejora en el rendimiento se ve obstaculizada por el desequilibrio de carga en la optimización de las estructuras de prueba. El tiempo más largo para optimizar una estructura de prueba fue casi 24 veces más largo que el tiempo más corto. Además, los demás trabajadores deben esperar hasta que el trabajo más largo haya terminado, por lo que el tiempo total de ejecución no se puede reducir. Cuando CONFLEX-G buscó los conformeros de 1BL1 mediante el clúster de Dennis, el tiempo de cálculo más largo de la optimización de la estructura de prueba representó aproximadamente el 80% del tiempo transcurrido. Por lo tanto, hay dos posibles soluciones para el desequilibrio de carga. • Es necesario refinar el algoritmo utilizado para generar la estructura de prueba, que suprime la variación temporal para optimizar una estructura de prueba en CONFLEX. Esto permite que CONFLEX-G logre un alto rendimiento al utilizar muchos recursos informáticos. • Una de las soluciones es superponer las ejecuciones para dos o más conjuntos de estructuras de prueba. En los algoritmos actuales, se genera un conjunto de estructuras de prueba a partir de una estructura inicial y el cálculo continúa hasta que se calculen todas las estructuras de este conjunto. Al tener otros conjuntos de estructuras de prueba, incluso si una búsqueda de estructuras lleva mucho tiempo, un trabajo puede ejecutarse para compensar el desequilibrio de carga causado por otros trabajos. Sin embargo, no está claro cómo tal modificación de los algoritmos podría afectar la eficiencia. En este experimento, utilizamos un programador de round-robin incorporado simple de OmniRPC, que es necesario para aplicar el programador que asigna estructuras con largos tiempos de optimización a una tabla de alto rendimiento. Tabla 8: Estadísticas del tiempo transcurrido de la optimización de la estructura de prueba utilizando 28 trabajadores en el clúster Dennis. Código de Varianza Promedio Mínimo Máximo Molecular (s) (s) (s) AlaX04 2.0 11.3 5.3 3 AlaX16 47.6 920.0 154.2 5404 1L2Y 114.2 13331.4 803.2 636782 1BL1 121.0 29641.8 3153.5 2734811 nodos y estructuras con tiempos de optimización cortos a nodos de bajo rendimiento. En general, sin embargo, podría ser difícil predecir el tiempo necesario para la optimización de la estructura del ensayo. Paralelización del programa del trabajador para acelerar y optimizar una estructura de prueba - En la implementación actual, no paralelizamos el programa del trabajador. Para acelerar las estructuras de prueba, la programación híbrida utilizando OmniRPC y OpenMP en una máquina SMP (Symmetric Multiple Processor) puede ser uno de los métodos alternativos para mejorar el rendimiento general. TRABAJO RELACIONADO Recientemente, se ha desarrollado un algoritmo que resuelve los problemas de paralelización y comunicación en procesadores poco conectados para ser utilizados en simulaciones. El proyecto Folding@home simula escalas de tiempo miles a millones de veces más largas que las logradas previamente. Esto nos ha permitido simular el plegamiento por primera vez y examinar directamente enfermedades relacionadas con el plegamiento. SETI@home es un programa para buscar vida extraterrestre mediante el análisis de señales de radio telescopio utilizando datos de telescopios de diferentes sitios mediante la transformada de Fourier. SETI@home aborda problemas inmensamente paralelos, en los cuales los cálculos pueden dividirse fácilmente entre varios ordenadores. Los fragmentos de datos del radiotelescopio pueden asignarse fácilmente a diferentes computadoras. La mayoría de estos esfuerzos desarrollan explícitamente una aplicación de acoplamiento como una aplicación paralela utilizando un lenguaje de programación paralela de propósito especial y middleware, como MPI, lo cual requiere habilidades y esfuerzo de desarrollo. Sin embargo, las habilidades y esfuerzo necesarios para desarrollar una aplicación de cuadrícula pueden no ser necesarios para OmniRPC. Nimrod/G[15] es una herramienta para modelado paramétrico distribuido e implementa una granja de tareas paralelas para simulaciones que requieren varios parámetros de entrada variables. Nimrod incorpora un componente de programación distribuida que puede gestionar la programación de experimentos individuales en computadoras inactivas en una red de área local. Nimrod se ha aplicado en aplicaciones que incluyen bioinformática, investigación de operaciones y modelado molecular para el diseño de fármacos. NetSolve es una instalación de RPC similar a OmniRPC y Ninf, que proporciona una interfaz de programación similar y un mecanismo de equilibrio de carga automático. Ninf-G[7] es una implementación habilitada para grid de Ninf y proporciona un sistema GridRPC[10] que utiliza LDAP para gestionar la base de datos de ejecutables remotos, pero no admite clústeres que involucren direcciones IP privadas o direcciones dentro de un firewall. Matsuoka et al. [16] también han discutido varios problemas de diseño relacionados con los sistemas de RPC en malla. 162 6. CONCLUSIONES Y TRABAJO FUTURO Hemos diseñado e implementado CONFLEX-G utilizando OmniRPC. Informamos sobre su rendimiento en un banco de pruebas en red de varios clústeres de PC distribuidos geográficamente. Para explorar la conformación de grandes <br>biomoléculas</br>, se utilizó CONFLEXG para generar estructuras de prueba de las moléculas y asignar trabajos para optimizarlas mediante mecánica molecular en la cuadrícula. OmniRPC proporciona un modelo de persistencia restringido para que el módulo se inicialice automáticamente al invocarse llamando al procedimiento de inicialización. Esto puede eliminar la comunicación innecesaria y la inicialización en cada llamada en CONFLEX-G. CONFLEX-G puede lograr un rendimiento comparable al de CONFLEX MPI y aprovecha más recursos informáticos al permitir el uso de múltiples clústeres de PC en la red. El resultado experimental muestra que CONFLEX-G logró una aceleración de 56.5 veces para la molécula 1BL1, donde la molécula consta de un gran número de átomos y cada optimización de la estructura de prueba requiere mucho tiempo. El desequilibrio de carga de las optimizaciones de la estructura de prueba puede causar degradación del rendimiento. Necesitamos refinar el algoritmo utilizado para generar la estructura de prueba con el fin de mejorar la optimización del equilibrio de carga para las estructuras de prueba en CONFLEX. Los estudios futuros incluirán el desarrollo de herramientas de implementación y un examen de la tolerancia a fallos. En el OmniRPC actual, el registro de un programa de ejecución en hosts remotos y despliegues de programas de trabajadores se configuran manualmente. Se requerirán herramientas de implementación a medida que se incremente el número de hosts remotos. En entornos de cuadrícula en los que el entorno cambia dinámicamente, también es necesario contar con soporte para la tolerancia a fallos. Esta característica es especialmente importante en aplicaciones a gran escala que requieren cálculos prolongados en un entorno de cuadrícula. Planeamos refinar el algoritmo de optimización conformacional en CONFLEX para explorar el espacio de búsqueda de conformaciones de <br>moléculas biológicas</br> más grandes como la proteasa del VIH utilizando hasta 1000 trabajadores en un entorno de cuadrícula. ",
            "candidates": [],
            "error": [
                [
                    "biomoléculas",
                    "biomoléculas",
                    "bio-moléculas",
                    "biomoléculas",
                    "moléculas biológicas"
                ]
            ]
        },
        "rpc module": {
            "translated_key": "módulo RPC",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Implementation and Performance Evaluation of CONFLEX-G: Grid-enabled Molecular Conformational Space Search Program with OmniRPC Yoshihiro Nakajima Graduate School of Systems & Information Engineering, University of Tsukuba Tsukuba, 305-8577, Japan yoshihiro@hpcs.is.tsukuba.ac.jp Mitsuhisa Sato Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan msato@is.tsukuba.ac.jp Hitoshi Goto Knowledge-based Information Engineering, Toyohashi University of Technology Toyohashi, 441-8580, Japan gotoh@cochem2.tutkie.tut.ac.jp Taisuke Boku, Daisuke Takahashi Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan {taisuke,daisuke}@hpcs.is.tsukuba.ac.jp ABSTRACT CONFLEX-G is the grid-enabled version of a molecular conformational space search program called CONFLEX.",
                "We have implemented CONFLEX-G using a grid RPC system called OmniRPC.",
                "In this paper, we report the performance of CONFLEX-G in a grid testbed of several geographically distributed PC clusters.",
                "In order to explore many conformation of large bio-molecules, CONFLEX-G generates trial structures of the molecules and allocates jobs to optimize a trial structure with a reliable molecular mechanics method in the grid.",
                "OmniRPC provides a restricted persistence model to support the parametric search applications.",
                "In this model, when the initialization procedure is defined in the <br>rpc module</br>, the module is automatically initialized at the time of invocation by calling the initialization procedure.",
                "This can eliminate unnecessary communication and initialization at each call in CONFLEX-G. CONFLEXG can achieve performance comparable to CONFLEX MPI and can exploit more computing resources by allowing the use of a cluster of multiple clusters in the grid.",
                "The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times in the case of the 1BL1 molecule, where the molecule consists of a large number of atoms, and each trial structure optimization requires significant time.",
                "The load imbalance of the optimization time of the trial structure may also cause performance degradation.",
                "Categories and Subject Descriptors C.2.4 [Computer Systems Organization]: COMPUTERCOMMUNICATION NETWORK-Distributed Systems; J.2.4 [Computer Applications]: PHYSICAL SCIENCES AND ENGINEERING General Terms Design,Performance 1.",
                "INTRODUCTION Elucidation of the stable conformations and the folding process of proteins is one of the most fundamental and challenging goals in life science.",
                "While some of the most common secondary structures (e.g., certain types of helix, the beta-strand, and the coil) are well known, precise analysis of the thousands of chemically important conformers and pico-second-order analysis of their conformational interconversions via the transition states on the potential energy surface are required for the microsecond-order investigation of the folding process toward the tertiary structure formations.",
                "Recently, the concept of the computational grid has begun to attract significant interest in the field of high-performance network computing.",
                "Rapid advances in wide-area networking technology and infrastructure have made it possible to construct large-scale, high-performance distributed computing environments, or computational grids, that provide dependable, consistent and pervasive access to enormous computational resources.",
                "CONFLEX is one of the most efficient and reliable conformational space search programs[1].",
                "We have applied this 154 program to parallelization using global computing.",
                "The performance of the parallelized CONFLEX enables exploration of the lower-energy region of the conformational space of small peptides within an available elapsed time using a local PC cluster.",
                "Since trial structure optimization in CONFLEX is calculated via molecular mechanics, conformational space search can be performed quickly compared to that using molecular orbital calculation.",
                "Although the parallelized version of CONFLEX was used to calculate in parallel the structure optimization, which takes up over 90% of the processing in the molecular conformation search, sufficient improvement in the speedup could not be achieved by this method alone.",
                "Therefore, for high polymers from live organisms, such as HIV protease, the use one PC cluster is insufficient due to the requirement for optimization of a huge number of trial structures.",
                "This requires the vast computer resources of a grid computing environment.",
                "In this paper, we describe CONFLEX-G, a grid-enabled molecular conformational search program, using OmniRPC and report its performance in a grid of several PC clusters which are geographically distributed.",
                "The prototype CONFLEX-G allocates calculation trial structures optimization, which is a very time-consuming task, to worker nodes in the grid environment in order to obtain high throughput.",
                "In addition, we compare the performance of CONFLEX-G in a local PC cluster to that in a grid testbed.",
                "OmniRPC[2, 3, 4] is a thread-safe implementation of Ninf RPC[5, 6] which is a Grid RPC facility for grid environment computing.",
                "Several systems adopt the concept of the RPC as the basic model for grid environment computing, including Ninf-G[7], NetSolve[8] and CORBA[9].",
                "The RPCstyle system provides an easy-to-use, intuitive programming interface, allowing users of the grid system to easily create grid-enabled applications.",
                "In order to support parallel programming, an RPC client can issue asynchronous call requests to a different remote computer to exploit networkwide parallelism via OmniRPC.",
                "In this paper, we propose the OmniRPC persistence model to a Grid RPC system and demonstrate its effectiveness.",
                "In order to support a typical application for a grid environment, such as a parametric search application, in which the same function is executed with different input parameters on the same data set.",
                "In the current GridRPC system[10], the data set by the previous call cannot be used by subsequent calls.",
                "In the OmniRPC system, once a remote executable is invoked, the client attempts to use the invoked remote executable and its initialized state for subsequent RPC calls to the same remote functions in order to eliminate the invocation cost of each call.",
                "This paper demonstrates that CONFLEX-G is able to exploit the huge computer resources of a grid environment and search large-scale molecular conformers.",
                "We demonstrate CONFLEX-G on our grid testbed using the actual protein as a sample molecule.",
                "The OmniRPC facility of the automatic initializable module (AIM) allows the system to efficiently calculate numerous conformers.",
                "Furthermore, by using OmniRPC, the user can grid-parallelize the existing application, and move from the cluster to the grid environment without modifying program code and compiling the program.",
                "In addition, the user can easily build a private grid environment.",
                "The rest of this paper is organized as follows.",
                "An overview Selection of Initial Structure Conformations Database Local Perturbation Geometry Optimization Comparison and Registration Figure 1: Algorithm of conformational space search in the original CONFLEX. of the CONFLEX system is presented in Section2, and the implementation and design of CONFLEX-G are described in Section 3.",
                "We report experimental results obtained using CONFLEX-G and discuss its performance in Section 4.",
                "In Section 6, we present conclusions and discuss subjects for future study. 2.",
                "CONFLEX CONFLEX [1] is an efficient conformational space search program, which can predominately and exhaustively search the conformers in the lower-energy region.",
                "Applications of CONFLEX include the elucidation of the reactivity and selectivity of drugs and possible drug materials with regard to their conformational flexibility. 2.1 Algorithm of ConformationalSpaceSearch The basic strategy of CONFLEX is an exhaustive search of only the low-energy regions.",
                "The original CONFLEX performs the following four major steps: 1.",
                "Selection of an initial structure among the previously discovered unique conformers sorted in a conformational database. (An input structure is used as the first initial structure at the beginning of a search execution only.) 2.",
                "Generation of trial structures by local perturbations to the selected initial structure. 3.",
                "Geometry optimization for the newly generated trial structures. 4.",
                "Comparison of the successfully optimized (trial) structures with the other conformers stored in a conformation database, and preservation of newly discovered unique conformers in the database.",
                "Figure 1 shows the outline of CONFLEX, the original conformational space search algorithm.",
                "These procedures incorporate two unique strategies.",
                "Figure 2 shows the strategies for generating local perturbations in CONFLEX.",
                "The first strategy involves both corner flapping and edge flipping for the ring atoms and stepwise rotation for side-chains or backbone chains.",
                "These methods provide a highly efficient way to produce several good trial structures.",
                "These perturbations can be considered to mimic 155 Stepwise Rotation Corner Flap Edge Flip Figure 2: Strategies used to generate the local perturbations. a barrier-crossing step in the elementary process of the thermal conformational inter-conversion.",
                "Actually, the perturbations of an initial structure correspond to the precise performance around the space of the initial structure because of localization and weakness of the perturbation.",
                "The selection rule of the initial structure, the LowestConformer-First rule, is the second strategy for directing the conformation search expanded to the low-energy regions.",
                "The initial structure is selected as the set of lowest energy conformers stored in the conformation database.",
                "This rule is effective in moving down the search space toward lower energy regions, like water from a stream running into an empty reservoir, while filling local depressions along the way.",
                "Therefore, these tactical procedures of the CONFLEX search are referred to as the Reservoir Filling Algorithm.",
                "In order to remain in the low-energy region and perform an exhaustive search, the search limit (SEL), which determines the maximum energy of the initial structures, is pre-defined.",
                "Gradually increasing SEL allows only the lowenergy conformers to be searched and avoids straying into unnecessarily high-energy regions. 2.2 Parallelization of CONFLEX for Cluster For application to over 100 atoms, CONFLEX was improved using high-performance parallel computing techniques.",
                "In the CONFLEX search algorithm, the geometry optimization procedures always take 95% of the elapsed time of the search execution.",
                "Therefore, we parallelized this optimization using the Master/Worker parallelization technique.",
                "We modified the search procedures as follows.",
                "After trial structures are generated (step 2), they are temporarily stored in a task pool on the master node.",
                "Then, each worker node is dynamically supplied with one trial structure from the master node.",
                "After an optimization on a worker node is finished, the worker is immediately supplied with another trial structure.",
                "When all of the trial structures related to a given initial structure are optimized, only the master procedure is used in comparison.",
                "By parallelizing CONFLEX, the speedup of searching molecular conformers obtained is as reported in[11]. 3.",
                "CONFLEX-G Originally, CONFLEX was intended for use in exploring the conformers of the large bio-molecules, such HIV protease.",
                "In such molecules, the number of trial structures increases and the time required for optimization of RPC Selection of Initial Structure Conformations Database Local Perturbation Comparison and Registration Client program Task Pool of Geometry Optimization RPC RPC Grid environment Cluster B Cluster A Cluster C Trial structureTrial structure Trial structure Trial structure Figure 3: Procedure of CONFLEX-G. agent rexrex rex Client jones.tsukuba.ac.jp hpc-serv.hpcc.jp hpc1 hpc2 hpc3 Agent invocation communicationNetwork Figure 4: Overview of the OmniRPC system for the remote cluster having a private IP address. the trial structure becomes immense.",
                "We implemented the parallelized version of CONFLEX, which cannot treat such molecules using only a local PC cluster.",
                "In order to exploit the vast computing resources of a grid environment, we designed and implemented CONFLEX-G, which is a grid-enabled version of CONFLEX, with the OmniRPC system.",
                "CONFLEX-G allocates jobs to optimize a trial structure to the computational nodes of each cluster in the grid environment.",
                "Figure 3 shows the process of CONFLEX-G.",
                "The worker programs are initialized by the initialize method, which is provided by the OmniRPC AIM facility at worker invocation.",
                "At each RPC call, the initialized state is reused on the remote host.",
                "In other words, the client program can eliminate the initialization for each RPC call, and can therefore optimize trial structures efficiently. 3.1 The OmniRPC system OmniRPC is a Grid RPC system which allows seamless parallel programming from a PC cluster to a grid environment.",
                "OmniRPC inherits its API and basic architecture from Ninf.",
                "A client and the remote computational hosts which execute the remote procedures may be connected via a network.",
                "The remote libraries are implemented as an executable program which contains a network stub routine as its main routine.",
                "We call this executable program a remote executable program (rex).",
                "When the OmniRPC client program starts, the initialization function of OmniRPC system invokes the OmniRPC agent program omrpc-agent in the remote hosts listed in the host file.",
                "To invoke the agent, the user can use the remote shell command rsh in a local-area network, the GRAM (Globus Resource Allocation Manager) API of the Globus 156 toolkit[12] in a grid environment, or the secure remote shell command ssh.",
                "The user can switch the configurations only by changing the host file.",
                "OmniRpcCall is a simple client programming interface for calling remote functions.",
                "When OmniRpcCall makes a remote procedure call, the call is allocated to an appropriate remote host.",
                "When the client issues the RPC request, it requests that the agent in the selected host submit the job of the remote executable with the local job scheduler specified in the host file.",
                "If the job scheduler is not specified, the agent executes the remote executable in the same node by the fork system call.",
                "The client sends the data of the input arguments to the invoked remote executable, and receives the results upon return of the remote function.",
                "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls in order to eliminate the cost of invoking the same remote executable again.",
                "When the agent and the remote executables are invoked, the remote programs obtain the client address and port from the argument list and connect back to the client by direct TCP/IP or Globus-IO for data transmission.",
                "Because the OmniRPC system does not use any fixed service ports, the client program allocates unused ports dynamically to wait for connection from the remote executables.",
                "This avoids possible security problems, and allows the user to install the OmniRPC system without requiring a privileged account.",
                "Herein, a typical grid resource is regarded as a cluster of geographically distributed PC clusters.",
                "For PC clusters on a private network, an OmniRPC agent process on the server host functions as a proxy to relay communications between the client and the remote executables by multiplexing the communications using a single connection.",
                "This feature, called multiplex IO (MXIO), allows a single client to use up to 1,000 remote computing hosts.",
                "When the PC cluster is inside a firewall, the port forwarding of SSH enables the node to communicate to the outside with MXIO.",
                "Figure 4 shows the overview of the OmniRPC system for a remote cluster with a private IP address.",
                "For parallel programming, the programmer can use asynchronous remote procedure calls, allowing the client to issue several requests while continuing with other computations.",
                "The requests are dispatched to different remote hosts to be executed in parallel, and the client waits or polls the completed request.",
                "In such a programming model with asynchronous remote procedure calls, the programmer should handle outstanding requests explicitly.",
                "Because OmniRPC is a thread-safe system, a number of remote procedure calls may be outstanding at any time for multi-threaded programs written in OpenMP. 3.2 OmniRPC persistence model: automatic initializable module OmniRPC efficiently supports typical Master/Worker parallel applications such as parametric execution programs.",
                "For parametric search applications, which often require large amount of identical data for each call, OmniRPC supports a limited persistence model, which is implemented by the automatic initializable module.",
                "The user can define an initialization procedure in the remote executable in order to send and store data automatically in advance of actual remote procedure calls.",
                "Since the remote executable may accept requests for subsequent calls, the data set which has been set by the initialization procedure can be re-used.",
                "As a result, the worker program can execute efficiently and reduce the amount of data transmitted for initialization.",
                "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls.",
                "However, OmniRPC does not guarantee persistence of the remote executable, so that the data set by the previous call cannot be used by subsequent calls.",
                "This is because a remote call by OmniRpcCall may be scheduled to any remote host dynamically, and remote executables may be terminated accidentally due to dynamic re-scheduling or host faults.",
                "However, persistence of the remote executable can be exploited in certain applications.",
                "An example is a parametric search application: in such an application, it would be efficient if a large set of data could be pre-loaded by the first call, and subsequent calls could be performed on the same data, but with different parameters.",
                "This is the case for CONFLEX.",
                "OmniRPC provides a restricted persistence model through the automatic initializable module (AIM) in order to support this type of application.",
                "If the initialization procedure is defined in the module, the module is automatically initialized at invocation by calling the initialization procedure.",
                "When the remote executable is re-scheduled in different hosts, the initialization is called to initialize the newly allocated remote module.",
                "This can eliminate unnecessary communications when RPC calls use the same data.",
                "To reveal more about the difference in progress between the cases with OmniRPC AIM and without OmniRPC AIM, we present two figures.",
                "Figure 5 illustrates the time chart of the progress of a typical OmniRPC application using the OmniRPC AIM facility, and Figure 6 illustrates the time chart of the same application without the OmniRPC AIM facility.",
                "In both figures, the lines between diamonds represent the processes of initialization, and the lines between points represent the calculation.",
                "The bold line indicates the time when the client program sends the data to a worker program.",
                "It is necessary for the application without the OmniRPC AIM facility to initialize at each RPC.",
                "The application using the OmniRPC AIM facility can re-use the initialized data once the data set is initialized.",
                "This can reduce the initialization at each RPC.",
                "The workers of the application with the AIM can calculate efficiently compared to the application without the OmniRPC AIM facility. 3.3 Implementation of CONFLEX-G using OmniRPC Figure 3 shows an overview of the process used in CONFLEXG.",
                "Using RPCs, CONFLEX-G allocates the processes of trial structure optimization, which are performed by the computation nodes of a PC cluster in the MPI version of CONFLEX, to the computational nodes of each cluster in a grid environment.",
                "There are two computations which are performed by the worker programs in CONFLEX-G. One is the initialization of a worker program, and another is the calculation of trial structure optimization.",
                "First, the OmniRPC facility of the AIM is adapted for initialization of a worker program.",
                "This facility automatically calls the initialization function, which is contained in the worker program, once the client program invokes the worker program in a remote node.",
                "It is necessary for the common RPC system including GridRPC to initialize a program for every RPC call, since data persistence of worker programs 157 time Client Program Worker Program 1 Worker Program 2 initialization initialization calculation calculation calculation calculation calculation Parallelized using asynchronous RPCs Figure 5: Time chart of applications using the OmniRPC facility of the automatic initializable module. time Client Program Worker Program 1 Worker Program 2 initialization initializationcalculation calculation calculation calculation initialization initialization initialization Parallelized using asynchronous RPCs calculation Figure 6: Time chart of applications without the OmniRPC facility of the automatic initializable module.",
                "Table 1: Machine configurations in the grid testbed.",
                "Site Cluster Name Machine Network Authentication # of Nodes # of CPUs Univ. of Tsukuba Dennis Dual Xeon 2.4GHz 1Gb Ethernet Globus, SSH 14 28 Alice Dual Athlon 1800+ 100Mb Ethernet Globus, SSH 18 36 TUT Toyo Dual Athlon 2600+ 100Mb Ethernet SSH 8 16 AIST Ume Dual Pentium3 1.4GHz 1Gb Ethernet Globus, SSH 32 64 is not supported.",
                "In OmniRPC, however, when the Initialize remote function is defined in the worker program and a new worker program, corresponding to the other RPC, is assigned to execute, an Initialize function is called automatically.",
                "Therefore, after the Initialize function call to set up common initialization data, a worker program can re-use this data and increase the efficiency of its processes.",
                "Thus, the higher the set-up cost, the greater the potential benefit.",
                "We implemented the worker program of CONFLEX-G to receive data, such as evaluation parameters of energy, from a client program and to be initialized by the Initialize function.",
                "We arranged the client program of CONFLEX-G to transfer the parameter file at the time of worker initialization.",
                "This enables execution to be performed by modify only the client setting if the user wants to run CONFLEX-G with a different data set.",
                "Second, in order to calculate trial structure optimization in a worker program, the worker program must receive the data, such as the atom arrangement of the trial structure and the internal energy state.",
                "The result is returned to the client program after the worker has Optimized the trial structure.",
                "Since the calculation portion of the structure optimization in this worker program can be calculated independently using different parameters, we parallelized this portion using asynchronous RPCs on the client side.",
                "To call the structure optimization function in a worker program from the client program, we use the OmniRpcCallAsync API, which is intended for asynchronous RPC.",
                "In addition, OmniRpcCallWaitAll API which waits until all asynchronous RPCs are used in order to perform synchronization with all of the asynchronous RPCs completed so as to optimize the trial structure.",
                "The client program which assigns trial structure optimization to the calculation node of a PC cluster using RPC is outlined as follows.",
                "OmniRpcInit() OmniRpcModuleInit(conflex_search,...); ... while( <new conformers> ) { foreach( <trial structures> ) OmniRpcCallAsync(conflex_search_worker, ...); OmniRpcWaitAll(); ...",
                "Note that OmniRpcModuleInit API returns only the arguments needed for initialization and will not actually execute the Initialization function.",
                "As described above, the actual Initialization is performed at the first remote call.",
                "Since the OmniRPC system has an easy round-robin scheduler, we do not have to explicitly write the code for load balance.",
                "Therefore, RPCs are allocated automatically to idle workers. 158 Table 2: Network performance between the master node of the Dennis cluster and the master node of each PC cluster.",
                "Round-Trip Throughput Cluster Time (ms) (Mbps) Dennis 0.23 879.31 Alice 0.18 94.12 Toyo 11.27 1.53 Ume 1.07 373.33 4.",
                "PRELIMINARY RESULTS 4.1 Grid Testbed The grid testbed was constructed by computing resources at the University of Tsukuba, the Toyohashi University of Technology (TUT) and the National Institute of Advanced Industrial Science and Technology (AIST).",
                "Table 1 shows the computing resources used for the grid of the present study.",
                "The University of Tsukuba and AIST are connected by a 1-Gbps Tsukuba WAN, and the other PC clusters are connected by SINET, which is wide-area network dedicated to academic research in Japan.",
                "Table 2 shows the performance of the measured network between the master node of the Dennis cluster and the master node of each PC cluster in the grid testbed.",
                "The communication throughput was measured using netperf, and the round-trip time was measured by ping. 4.2 Performance of CONFLEX-G In all of the CONFLEX-G experiments, the client program was executed on the master node of the Dennis cluster at the University of Tsukuba.",
                "The built-in Round-Robin scheduler of OmniRPC was used as a job scheduler.",
                "SSH was used for an authentication system, the OminRPCs MXIO, which relays the I/O communication between client program and worker programs by port forwarding of SSH was, not used.",
                "Note that one worker program is assigned and performed on one CPU of the calculation node in a PC cluster.",
                "That is, the number of workers is equal to the number of CPUs.",
                "These programs were compiled by the Intel Fortran Compiler 7.0 and gcc 2.95.",
                "MPICH, Version 1.2.5, was used to compare the performance between CONFLEX MPI and CONFLEX-G.",
                "In order to demonstrate the usability of the OmniRPC facility of the AIM, we implemented another version of CONFLEX-G which did not utilize the OmniRPC facility.",
                "The worker program in this version of CONFLEXG must be initialized at each RPC because the worker does not hold the previous data set.",
                "In order to examine the performance of CONFLEX-G, we selected two peptides and two small protein as test molecules: • N-acetyl tetra-alanine methylester (AlaX04) • N-acetyl hexdeca-alanine methylester (AlaX16) • TRP-cage miniprotein construct TC5B (1L2Y) • PTH receptor N-terminus fragment (1BL1) Table 3 lists the characteristics of these sample molecules.",
                "The column trial structure / loops in this table shows the Figure 7: Performances of CONFLEX-G, CONFLEX MPI and Original CONFLEX in the Dennis cluster.",
                "Figure 8: Speedup ratio, which is based on the elapsed time of CONFLEX-G using one worker in the Dennis cluster.",
                "Figure 9: Performance of CONFLEX-G with and without the OmniRPC facility of automatic initializable module for AlaX16. 159 Table 3: Characteristics of molecules and data transmission for optimizing trial molecular structures in each molecular code.",
                "Molecular # of # of total trial trial structure Data transfer to Data transfer code atoms structures / loop initialize a worker / trial structure AlaX04 181 360 45 2033KB 17.00KB AlaX16 191 480 160 2063KB 18.14KB 1L2Y 315 331 331 2099KB 29.58KB 1BL1 519 519 519 2150KB 48.67KB Table 4: Elapsed search time for the molecular conformation of AlaX04.",
                "Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (sequential) 1 320.0 1786.21 4.96 1786.21 1.00 Toyo (16) 16 20.0 1497.08 4.16 196.32 9.10 Dennis (28) 28 11.4 1905.51 5.29 97.00 18.41 Alice (36) 36 8.9 2055.25 5.71 87.09 20.51 Ume (56) 56 5.7 2196.77 6.10 120.69 14.80 Dennis (28) + Toyo (16) 44 7.3 1630.09 4.53 162.35 11.00 Alice (36) + Toyo (16) 52 6.2 1774.53 4.93 178.24 10.02 Dennis (28) + Alice (36) 64 5.0 1999.02 5.55 81.52 21.91 Dennis (28) + Ume (56) 84 3.8 2085.84 5.79 92.22 19.37 Alice (36) + Ume (56) 92 3.5 2120.87 5.89 101.25 17.64 Table 5: Elapsed search time for the molecular conformation of AlaX16 Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (1) 1 480.0 74027.80 154.22 74027.80 1.00 Toyo (16) 16 30.0 70414.21 146.70 4699.15 15.75 Dennis (28) 28 17.1 74027.80 154.22 3375.60 21.93 Alice (36) 36 13.3 90047.27 187.60 3260.41 22.71 Ume (56) 56 8.6 123399.38 257.08 2913.63 25.41 Dennis (28) + Toyo (16) 44 10.9 76747.74 159.89 2762.10 26.80 Alice (36) + Toyo (16) 52 9.2 82700.44 172.29 2246.73 32.95 Dennis (28) + Alice (36) 64 7.5 87571.30 182.44 2051.50 36.08 Toyo (16) + Ume (56) 72 6.7 109671.32 228.48 2617.85 28.28 Dennis (28) + Ume (56) 84 5.7 102817.90 214.20 2478.93 29.86 Dennis(28)+Ume(56)+Toyo(16) 100 4.8 98238.07 204.66 2478.93 29.86 Table 6: Elapsed time of the search for the trial structure of 1L2Y.",
                "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 331.0 867 286,967 79.71 1.00 Toyo MPI (16) 16 20.7 867 18,696 5.19 15.34 Dennis (28) 28 11.8 803 14,101 3.91 20.35 Dennis (28) + Ume(56) 84 3.9 1,064 8,316 2.31 34.50 Table 7: Elapsed time of the search for the trial structure of 1BL1.",
                "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 519.0 3,646 1892,210 525.61 1.00 Toyo MPI (16) 16 32.4 3,646 120,028 33.34 15.76 Dennis (28) 28 18.5 3,154 61,803 17.16 30.61 Dennis (28) + Ume (56) 84 6.1 4,497 33,502 9.30 56.48 160 number of trial structures generated in each iteration, indicating the degree of parallelism.",
                "Figure 3 also summarizes the amount of data transmission required for initialization of a worker program and for optimization of each trial structure.",
                "Note that the amount of data transmission, which is required in order to initialize a worker program and optimize a trial structure in the MPI version of CONFLEX, is equal to that of CONFLEX-G. We used an improvement version of MM2 force field to assign a potential energy function to various geometric properties of a group of atoms. 4.2.1 Performance in a Local Cluster We first compared the performance of CONFLEX-G, the MPI version of CONFLEX, and the original sequential version of CONFLEX-G using a local cluster.",
                "We investigated performance by varying the number of workers using the Dennis cluster.",
                "We chose AlaX04 as a test molecule for this experiment.",
                "Figure 7 compares the results for the CONFLEX MPI and CONFLEX-G in a local PC cluster.",
                "The result of this experiment shows that CONFLEX-G can reduce the execution time as the number of workers increases, as in the MPI version of CONFLEX.",
                "We found that CONFLEX-G achieved efficiencies comparable to the MPI version.",
                "With 28 workers, CONFLEX-G achieved an 18.00 times speedup compared to the CONFLEX sequential version.",
                "The performance of CONFLEX-G without the OmniRPC AIM facility is worse than that of CONFLEXG using the facility, based on the increase in the number of workers.",
                "This indicates that the OmniRPC AIM enables the worker to calculate efficiently without other calculations, such initialization or invocation of worker programs.",
                "As the number of workers is increased, the performance of CONFLEX-G is a slightly lower than that of the MPI version.",
                "This performance degradation is caused by differences in the worker initialization processes of CONFLEX-G and CONFLEX MPI.",
                "In the case of CONFLEX MPI, all workers are initialized in advance of the optimization phase.",
                "In the case of OminRPC, the worker is invoked on-demand when the RPC call is actually issued.",
                "Therefore, the initialization incurs this overhead.",
                "Since the objective of CONFLEX-G is to explore the conformations of large bio-molecules, the number of trial structures and the time to optimize the trial structure might be large.",
                "In such cases, the overhead to invoke and initialize the worker program can be small compared to the entire elapsed time. 4.2.2 Performance for Peptides in The Grid Testbed First, the sample molecules (AlaX04 and AlaX16) were used to examine the CONFLEX-G performance in a grid environment.",
                "Figure 8 shows the speedup achieved by using multiple clusters compared to using one worker in the Dennis cluster.",
                "Detailed results are shown in Table 4 and Table 5.",
                "In both cases, the best performance was obtained using 64 workers of the combination of the Dennis and Alice clusters.",
                "CONFLEX-G achieved a maximum speedup of 36.08 times for AlaX04 and a maximum speedup of 21.91 times for AlaX16.",
                "In the case of AlaX04, the performance is improved only when the network performance between clusters is high.",
                "However, even if two or more clusters are used in a wide area network environment, the performance improvement was slight because the optimization time of one trial structure generated from AlaX04, a small molecule, is short.",
                "In addition, the overhead required for invocation of a worker program and network data transmission consume a large portion of the remaining processing time.",
                "In particular, the data transmission required for the initialization of a worker program is 2 MB.",
                "In the case of Toyo cluster, where the network performance between the client program and the worker programs is poor, the time of data transmission to the worker program required approximately 6.7 seconds.",
                "Since this transmission time was longer than the processing time of one structure optimization in CONFLEX-G, most of the time was spent for this data transmission.",
                "Therefore, even if CONFLEX-G uses a large number of calculation nodes in a wide area network environment, the benefit of using a grid resource is not obtained.",
                "In the case of AlaX16, CONFLEX-G achieved a speedup by using two or more PC clusters in our grid testbed.",
                "This was because the calculation time on the worker program was long and the overhead, such as network latency and the invoking of worker programs, became relatively small and could be hidden.",
                "The best performance was obtained using 64 workers in the Dennis and Alice clusters.",
                "In the case of AaX16, the achieved performance was a speedup of 36.08 times.",
                "Figure 9 reveals the effect of using the facility of the OmniRPC AIM on CONFLEX-G performance.",
                "In most cases, CONFLEX-G with the OmniRPC AIM facility archived better performance than CONFLEX-G without the facility.",
                "In particular, the OmniRPC AIM facility was advantageous when using two clusters connected by a low-performance network.",
                "The results indicate that the OmniRPC AIM facility can improve performance in the grid environment. 4.2.3 PerformanceforSmallProteininTheGridTestbed Finally, we explored the molecular conformation using CONFLEX-G for large molecules.",
                "In a grid environment, this experiment was conducted using the Dennis and Ume clusters.",
                "In this experiment, we used two proteins, 1L2Y and 1BL1.",
                "Table 6 and Table 7 show the performance of CONFLEX-G in the grid environment and that of CONFLEX MPI in the Toyo cluster, respectively.",
                "The speedups in these tables were computed respectively based on the performance of one worker and 16 workers of the Toyo cluster using CONFLEX MPI.",
                "CONFLEX-G with 84 workers in Dennis and Ume clusters obtained maximum speedups of 56.5 times for 1L2Y and 34.5 times for 1L2Y.",
                "Since the calculation time for structure optimization required a great deal of time, the ratio of overhead, including tasks such as the invocation of a worker program and data transmission for initialization, became very small, so that the performance of CONFLEX-G was improved.",
                "We found that the load imbalance in the processing time of optimization for each trial structure caused performance degradation.",
                "When we obtained the best performance for 1L2Y using the Dennis and Ume clusters, the time for each structure optimization varied from 190 to 27,887 seconds, and the ratio between the longest and shortest times was 13.4.",
                "For 1BL1, the ratio of minimum time over maximum time was 190.",
                "In addition, in order that the worker program wait until the completion of optimization of all trial structures, all worker programs were found to wait in an idle state for approximately 6 hours.",
                "This has caused the performance degradation of CONFLEX-G. 161 4.3 Discussion In this subsection, we discuss the improvement of the performance reflected in our experiments.",
                "Exploiting parallelism - In order to exploit more computational resources, it is necessary to increase the degree of parallelism.",
                "In this experiment, the degree of parallelism was not so large in the case of the sample molecules.",
                "When using a set of over 500 computing nodes for 1BL1, the number of one trial structures assigned to each worker will be only one or two.",
                "If over 100 trial structures are assigned to each worker program, calculation can be performed more efficiently due to the reduction of the overhead for worker invocation and initialization via the facility of the OmniRPC AIM.",
                "One idea for increasing parallelism is to overlap the execution of two or more sets of trial structures.",
                "In the current algorithm, a set of trial structures is generated from one initial structure and computed until optimizations for all structures in this set are calculated.",
                "Furthermore, this will help to improve load imbalance.",
                "By having other sets of trial structures overlap, even if some optimizations require a long time, the optimization for the structures in other sets can be executed to compensate for the idle workers for other optimizations.",
                "It is however unclear how such modification of the algorithm might affect the quality of the final results in terms of a conformation search.",
                "Improvement in load imbalance when optimizing each trial structure - Table 8 lists the statistics for optimization times of trial structures generated for each sample molecule measured using 28 workers in the Dennis cluster.",
                "When two or more sets of PC clusters are used, the speedup in performance is hampered by the load imbalance of the optimization of the trial structures.",
                "The longest time for optimizing a trial structure was nearly 24 times longer than the shortest time.",
                "Furthermore, other workers must wait until the longest job has Finished, so that the entire execution time cannot be reduced.",
                "When CONFLEX-G searched the conformers of 1BL1 by the Dennis cluster, the longest calculation time of the trial structure optimization made up approximately 80% of the elapsed time.",
                "Therefore, there are two possible solutions for the load Imbalance. • It is necessary to refine the algorithm used to generate the trial structure, which suppresses the time variation for optimizing a trial structure in CONFLEX.",
                "This enables CONFLEX-G to achieve high-throughput by using many computer resources. • One of the solutions is to overlap the executions for two or more sets of trial structures.",
                "In the current algorithms, a set of trial structures is generated from one initial structure and calculation continues until all structures in this set are calculated.",
                "By having other sets of trial structures, even if a structure search takes a long time, a job can be executed in order to compensate the load imbalance by other jobs.",
                "However, how such modification of the algorithms might affect the efficiency is not clear. • In this experiment, we used a simple build-in roundrobbin scheduler of OmniRPC, which is necessary in order to apply the scheduler that allocates structures with long optimization times to a high-performance Table 8: Statistics of elapsed time of trial structure optimization using 28 workers in the Dennis cluster.",
                "Molecular Min Max Average Variance code (s) (s) (s) AlaX04 2.0 11.3 5.3 3 AlaX16 47.6 920.0 154.2 5404 1L2Y 114.2 13331.4 803.2 636782 1BL1 121.0 29641.8 3153.5 2734811 node and structures with short optimization times to low-performance nodes.",
                "In general, however, it might be difficult to predict the time required for trial structure optimization.",
                "Parallelization of the worker program for speedup to optimize a trial structure - In the current implementation, we do not parallelize the worker program.",
                "In order to speed up trial structures, hybrid programming using OmniRPC and OpenMP in an SMP (Symmetric Multiple Processor) machine may be one of the alternative methods by which to improve overall performance. 5.",
                "RELATED WORK Recently, an algorithm has been developed that solves the problems of parallelization and communication in poorly connected processors to be used for simulation.",
                "The Folding@home project[13] simulates timescales thousands to millions of times longer than previously achieved.",
                "This has allowed us to simulate folding for the first time and to directly examine folding related diseases.",
                "SETI@home[14] is a program to search for alien life by analyzing radio telescope signals using Fourier transform radio telescope data from telescopes from different sites.",
                "SETI@home tackles immensely parallel problems, in which calculation can easily be divided among several computers.",
                "Radio telescope data chunks can easily be assigned to different computers.",
                "Most of these efforts explicitly develop a docking application as a parallel application using a special purpose parallel programming language and middleware, such as MPI, which requires development skills and effort.",
                "However, the skills and effort required to develop a grid application may not be required for OmniRPC.",
                "Nimrod/G[15] is a tool for distributed parametric modeling and implements a parallel task farm for simulations that require several varying input parameters.",
                "Nimrod incorporates a distributed scheduling component that can manage the scheduling of individual experiments to idle computers in a local area network.",
                "Nimrod has been applied to applications including bio-informatics, operations research, and molecular modeling for drug design.",
                "NetSolve[8] is an RPC facility similar to OmniRPC and Ninf, providing a similar programming interface and automatic load balancing mechanism.",
                "Ninf-G[7] is a grid-enabled implementation of Ninf and provides a GridRPC[10] system that uses LDAP to manage the database of remote executables, but does not support clusters involving private IP addresses or addresses inside a firewall.",
                "Matsuoka et al. [16] has also discussed several design issues related to grid RPC systems. 162 6.",
                "CONCLUSIONS AND FUTURE WORK We have designed and implemented CONFLEX-G using OmniRPC.",
                "We reported its performance in a grid testbed of several geographically distributed PC clusters.",
                "In order to explore the conformation of large bio-molecules, CONFLEXG was used to generate trial structures of the molecules, and allocate jobs to optimize them by molecular mechanics in the grid.",
                "OmniRPC provides a restricted persistence model so that the module is automatically initialized at invocation by calling the initialization procedure.",
                "This can eliminate unnecessary communication and the initialization at each call in CONFLEX-G. CONFLEX-G can achieves performance comparable to CONFLEX MPI and exploits more computing resources by allowing the use of multiple PC clusters in the grid.",
                "The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times for the 1BL1 molecule, where the molecule consists of a large number of atoms and each trial structure optimization requires a great deal of time.",
                "The load imbalance of the trial structure optimizations may cause performance degradation.",
                "We need to refine the algorithm used to generate the trial structure in order to improve the load balance optimization for trial structures in CONFLEX.",
                "Future studies will include development of deployment tools and an examination of fault tolerance.",
                "In the current OmniRPC, the registration of an execution program to remote hosts and deployments of worker programs are manually set.",
                "Deployment tools will be required as the number of remote hosts is increased.",
                "In grid environments in which the environment changes dynamically, it is also necessary to support fault tolerance.",
                "This feature is especially important in large-scale applications which require lengthy calculation in a grid environment.",
                "We plan to refine the conformational optimization algorithm in CONFLEX to explore the conformation space search of larger bio-molecules such HIV protease using up to 1000 workers in a grid environment. 7.",
                "ACKNOWLEDGMENTS This research was supported in part by a Grant-in-Aid from the Ministry of Education, Culture, Sports, Science and Technology in Japan, No. 14019011, 2002, and as part of the Program of Research and Development for Applying Advanced Computational Science and Technology by the Japan Science and Technology Corporation (Research on the grid computing platform for drug design).",
                "We would like to thank grid technology research center, AIST, Japan for providing computing resources for our experiment. 8.",
                "REFERENCES [1] H. Goto and E. Osawa.",
                "An efficient algorithm for searching low-energy conformers of cyclic and acyclic molecules.",
                "J. Chem.",
                "Soc., Perkin Trans, 2:187-198, 1993. [2] M. Sato, T. Boku, and D. Takahashi.",
                "OmniRPC: a Grid RPC System for Parallel Programming in Cluster and Grid Environment.",
                "In Proc. of CCGrid2003, pages 219-229, 2003. [3] M. Sato, M. Hirano, Y. Tanaka, and S. Sekiguchi.",
                "OmniRPC: a Grid RPC facility for Cluster and Global Computing in OpenMP.",
                "In Proc. of Workshop on OpenMP Applications and Tools 2001(LNCS 2104 ), pages 130-135, 2001. [4] OmniRPC Project. http://www.omni.hpcc.jp/omnirpc/. [5] M. Sato, H. Nakada, S. Sekiguchi, S. Matsuoka, U. Nagashima, and H. Takagi.",
                "Ninf: A Network Based Information Library for Global World-Wide Computing Infrastructure.",
                "In HPCN Europe, pages 491-502, 1997. [6] Ninf Project. http://ninf.apgrid.org/. [7] Y. Tanaka, H. Nakada, S. Sekiguchi, T. Suzumura, and S. Matsuoka.",
                "Ninf-G: A Reference Implementation of RPC-based Programming Middleware for Grid Computing .",
                "Journal of Grid Computing, 1(1):41-51, 2003. [8] D. Arnold, S. Agrawal, S. Blackford, J. Dongarra, M. Miller, K. Seymour, K. Sagi, Z. Shi, and S. Vadhiyar.",
                "Users Guide to NetSolve V1.4.1.",
                "Innovative Computing Dept.",
                "Technical Report ICL-UT-02-05, University of Tennessee, Knoxville, TN, June 2002. [9] Object management group. http://www.omg.org/. [10] K. Seymour, H. Nakada, S. Matsuoka, J. Dongarra, C. Lee, and H. Casanova.",
                "GridRPC: A Remote Procedure Call API for Grid Computing. [11] H.Goto, T. Takahashi, Y. Takata, K. Ohta, and U Nagashima.",
                "Conflex: Conformational behaviors of polypeptides as predicted by a conformational space search.",
                "In Nanotech2003, volume 1, pages 32-35, 2003. [12] I.",
                "Foster and C. Kesselman.",
                "Globus: A metacomputing infrastructure toolkit.",
                "The International Journal of Supercomputer Applications and High Performanc e Computing, 11(2):115-128, Summer 1997. [13] Stefan M. Larson, Christopher D. Snow, Michael Shirts, and Vijay S. Pande.",
                "Folding@home and genome@home: Using distributed computing to tackle prev iously intractable problems in computational biology.",
                "Computational Genomics, 2002. [14] seti@home project. http://setiathome.ssl.berkeley.edu/. [15] R. Buyya, K. Branson, J. Giddy, and D. Abramson.",
                "The virtual laboratory: a toolset to enable distributed molecular modelling for drug design on the world-wide grid.",
                "Concurrency and Computation: Practice and Experience, 15(1):1-25, January 2003. [16] S. Matsuoka, H. Nakada, M. Sato, and S. Sekiguchi.",
                "Design issues of Network Enabled Server Systems for the Grid.",
                "In Proc. of GRID 2000 (LNCS 1971), pages 4-17, 2000. 163"
            ],
            "original_annotated_samples": [
                "In this model, when the initialization procedure is defined in the <br>rpc module</br>, the module is automatically initialized at the time of invocation by calling the initialization procedure."
            ],
            "translated_annotated_samples": [
                "En este modelo, cuando el procedimiento de inicialización está definido en el <br>módulo RPC</br>, el módulo se inicializa automáticamente en el momento de la invocación llamando al procedimiento de inicialización."
            ],
            "translated_text": "Implementación y Evaluación del Rendimiento de CONFLEX-G: Programa de Búsqueda de Espacio Conformacional Molecular Habilitado para Grid con OmniRPC. Hemos implementado CONFLEX-G utilizando un sistema de RPC en malla llamado OmniRPC. En este artículo, informamos sobre el rendimiento de CONFLEX-G en un banco de pruebas en red de varios clústeres de PC distribuidos geográficamente. Para explorar muchas conformaciones de grandes biomoléculas, CONFLEX-G genera estructuras de prueba de las moléculas y asigna trabajos para optimizar una estructura de prueba con un método confiable de mecánica molecular en la cuadrícula. OmniRPC proporciona un modelo de persistencia restringido para respaldar las aplicaciones de búsqueda paramétrica. En este modelo, cuando el procedimiento de inicialización está definido en el <br>módulo RPC</br>, el módulo se inicializa automáticamente en el momento de la invocación llamando al procedimiento de inicialización. Esto puede eliminar la comunicación y la inicialización innecesarias en cada llamada en CONFLEX-G. CONFLEXG puede lograr un rendimiento comparable al de CONFLEX MPI y puede aprovechar más recursos informáticos al permitir el uso de un clúster de múltiples clústeres en la cuadrícula. El resultado experimental muestra que CONFLEX-G logró una aceleración de 56.5 veces en el caso de la molécula 1BL1, donde la molécula consta de un gran número de átomos y cada optimización de la estructura de prueba requiere un tiempo significativo. El desequilibrio de carga en el tiempo de optimización de la estructura de prueba también puede causar degradación del rendimiento. Categorías y Descriptores de Asignaturas C.2.4 [Organización de Sistemas Informáticos]: RED DE COMUNICACIÓN DE COMPUTADORAS-Sistemas Distribuidos; J.2.4 [Aplicaciones Informáticas]: CIENCIAS FÍSICAS E INGENIERÍA Términos Generales Diseño, Rendimiento 1. INTRODUCCIÓN La elucidación de las conformaciones estables y el proceso de plegamiento de las proteínas es uno de los objetivos más fundamentales y desafiantes en las ciencias de la vida. Si bien algunas de las estructuras secundarias más comunes (por ejemplo, ciertos tipos de hélice, la lámina beta y la hélice) son bien conocidas, se requiere un análisis preciso de los miles de conformaciones químicamente importantes y un análisis de orden de pico-segundo de sus interconversiones conformacionales a través de los estados de transición en la superficie de energía potencial para la investigación de orden de microsegundo del proceso de plegamiento hacia la formación de la estructura terciaria. Recientemente, el concepto de la red computacional ha comenzado a atraer un interés significativo en el campo de la computación de alto rendimiento en red. Los rápidos avances en la tecnología e infraestructura de redes de área amplia han hecho posible construir entornos de computación distribuida a gran escala y alto rendimiento, o redes computacionales, que proporcionan acceso confiable, consistente y generalizado a enormes recursos computacionales. CONFLEX es uno de los programas de búsqueda de espacio conformacional más eficientes y confiables. Hemos aplicado este programa 154 a la paralelización utilizando computación global. El rendimiento del CONFLEX paralelizado permite explorar la región de energía más baja del espacio conformacional de péptidos pequeños en un tiempo transcurrido disponible utilizando un clúster de PC local. Dado que la optimización de la estructura de prueba en CONFLEX se calcula a través de la mecánica molecular, la búsqueda del espacio conformacional se puede realizar rápidamente en comparación con la que utiliza cálculos de orbitales moleculares. Aunque se utilizó la versión paralelizada de CONFLEX para calcular de forma paralela la optimización de la estructura, que representa más del 90% del procesamiento en la búsqueda de conformaciones moleculares, no se pudo lograr una mejora suficiente en la aceleración solo con este método. Por lo tanto, para polímeros de alto peso molecular de organismos vivos, como la proteasa del VIH, el uso de un solo clúster de PC es insuficiente debido a la necesidad de optimizar una gran cantidad de estructuras de prueba. Esto requiere los vastos recursos informáticos de un entorno de computación en malla. En este artículo, describimos CONFLEX-G, un programa de búsqueda conformacional molecular habilitado para grid, utilizando OmniRPC y reportamos su rendimiento en un grid de varios clusters de PC distribuidos geográficamente. El prototipo CONFLEX-G asigna la optimización de las estructuras de cálculo de prueba, que es una tarea muy consumidora de tiempo, a nodos trabajadores en el entorno de la red para obtener un alto rendimiento. Además, comparamos el rendimiento de CONFLEX-G en un clúster de PC local con el de un banco de pruebas en red. OmniRPC[2, 3, 4] es una implementación segura para hilos de Ninf RPC[5, 6], que es una facilidad de RPC de cuadrícula para la computación en entornos de cuadrícula. Varios sistemas adoptan el concepto de la RPC como el modelo básico para la computación en entornos de rejilla, incluyendo Ninf-G[7], NetSolve[8] y CORBA[9]. El sistema RPCstyle proporciona una interfaz de programación fácil de usar e intuitiva, que permite a los usuarios del sistema de cuadrícula crear fácilmente aplicaciones habilitadas para la cuadrícula. Para apoyar la programación paralela, un cliente de RPC puede emitir solicitudes de llamada asincrónicas a un ordenador remoto diferente para aprovechar el paralelismo en toda la red a través de OmniRPC. En este artículo, proponemos el modelo de persistencia OmniRPC para un sistema de RPC de Grid y demostramos su efectividad. Para apoyar una aplicación típica para un entorno de cuadrícula, como una aplicación de búsqueda paramétrica, en la que la misma función se ejecuta con diferentes parámetros de entrada en el mismo conjunto de datos. En el sistema GridRPC actual[10], el conjunto de datos establecido por la llamada anterior no puede ser utilizado por llamadas posteriores. En el sistema OmniRPC, una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado y su estado inicializado para llamadas posteriores a las mismas funciones remotas con el fin de eliminar el costo de invocación de cada llamada. Este documento demuestra que CONFLEX-G es capaz de aprovechar los enormes recursos informáticos de un entorno de grid y buscar conformadores moleculares a gran escala. Demostramos CONFLEX-G en nuestra plataforma de pruebas en red utilizando la proteína real como molécula de muestra. La facilidad OmniRPC del módulo inicializable automático (AIM) permite al sistema calcular eficientemente numerosos conformeros. Además, al utilizar OmniRPC, el usuario puede paralelizar en cuadrícula la aplicación existente y pasar del clúster al entorno de cuadrícula sin modificar el código del programa y compilar el programa. Además, el usuario puede construir fácilmente un entorno de red privada. El resto de este documento está organizado de la siguiente manera. Se presenta una visión general de la Base de Datos de Conformaciones de Estructuras Iniciales, la Perturbación Local, la Optimización de la Geometría, la Comparación y el Registro. Figura 1: Algoritmo de búsqueda de espacio conformacional en el CONFLEX original. El sistema CONFLEX se describe en la Sección 2, y la implementación y diseño de CONFLEX-G se detallan en la Sección 3. Informamos los resultados experimentales obtenidos utilizando CONFLEX-G y discutimos su rendimiento en la Sección 4. En la Sección 6, presentamos conclusiones y discutimos temas para estudios futuros. 2. CONFLEX es un programa eficiente de búsqueda de espacio conformacional, que puede buscar predominantemente y exhaustivamente los conformeros en la región de energía más baja. Las aplicaciones de CONFLEX incluyen la elucidación de la reactividad y selectividad de fármacos y posibles materiales medicinales con respecto a su flexibilidad conformacional. 2.1 Algoritmo de Búsqueda de Espacio Conformacional La estrategia básica de CONFLEX es una búsqueda exhaustiva solo de las regiones de baja energía. El CONFLEX original realiza los siguientes cuatro pasos principales: 1. Selección de una estructura inicial entre los conformeros únicos previamente descubiertos y ordenados en una base de datos conformacional. (Una estructura de entrada se utiliza como la primera estructura inicial al comienzo de una ejecución de búsqueda solamente.) 2. Generación de estructuras de prueba mediante perturbaciones locales a la estructura inicial seleccionada. 3. Optimización de geometría para las nuevas estructuras de prueba generadas. 4. Comparación de las estructuras optimizadas con éxito (ensayo) con los otros conformeros almacenados en una base de datos de conformaciones, y preservación de los conformeros únicos recién descubiertos en la base de datos. La Figura 1 muestra el esquema de CONFLEX, el algoritmo original de búsqueda de espacio conformacional. Estos procedimientos incorporan dos estrategias únicas. La Figura 2 muestra las estrategias para generar perturbaciones locales en CONFLEX. La primera estrategia implica tanto el aleteo de las esquinas como el volteo de los bordes para los átomos del anillo y la rotación paso a paso para las cadenas laterales o cadenas del esqueleto. Estos métodos proporcionan una forma altamente eficiente de producir varias estructuras de prueba buenas. Estas perturbaciones pueden considerarse como una imitación de 155 Rotación Escalonada de Esquina de Solapa de Borde de Giro Figura 2: Estrategias utilizadas para generar las perturbaciones locales, un paso de cruce de barrera en el proceso elemental de la interconversión conformacional térmica. De hecho, las perturbaciones de una estructura inicial corresponden al rendimiento preciso alrededor del espacio de la estructura inicial debido a la localización y debilidad de la perturbación. La regla de selección de la estructura inicial, la regla LowestConformer-First, es la segunda estrategia para dirigir la búsqueda de conformaciones ampliada a las regiones de baja energía. La estructura inicial se selecciona como el conjunto de conformaciones de menor energía almacenadas en la base de datos de conformaciones. Esta regla es efectiva para desplazarse hacia abajo en el espacio de búsqueda hacia regiones de menor energía, como el agua de un arroyo que fluye hacia un embalse vacío, llenando depresiones locales en el camino. Por lo tanto, estos procedimientos tácticos de la búsqueda CONFLEX se conocen como el Algoritmo de Llenado de Reservorio. Para permanecer en la región de baja energía y realizar una búsqueda exhaustiva, el límite de búsqueda (SEL), que determina la energía máxima de las estructuras iniciales, está predefinido. El aumento gradual de SEL permite buscar solo los conformeros de baja energía y evita desviarse hacia regiones de energía innecesariamente alta. 2.2 Paralelización de CONFLEX para clúster Para su aplicación en más de 100 átomos, CONFLEX fue mejorado utilizando técnicas de computación paralela de alto rendimiento. En el algoritmo de búsqueda CONFLEX, los procedimientos de optimización de geometría siempre ocupan el 95% del tiempo transcurrido durante la ejecución de la búsqueda. Por lo tanto, paralelizamos esta optimización utilizando la técnica de paralelización Maestro/Trabajador. Modificamos los procedimientos de búsqueda de la siguiente manera. Después de que se generan las estructuras de prueba (paso 2), se almacenan temporalmente en un grupo de tareas en el nodo maestro. Entonces, cada nodo trabajador recibe dinámicamente una estructura de prueba del nodo maestro. Después de que se complete una optimización en un nodo de trabajador, este recibe inmediatamente otra estructura de prueba. Cuando todas las estructuras de prueba relacionadas con una estructura inicial dada están optimizadas, solo se utiliza el procedimiento principal para la comparación. Al paralelizar CONFLEX, la aceleración de la búsqueda de conformadores moleculares obtenida es la reportada en[11]. 3. CONFLEX-G Originalmente, CONFLEX estaba destinado a ser utilizado para explorar los conformeros de las grandes biomoléculas, como la proteasa del VIH. En tales moléculas, el número de estructuras de prueba aumenta y el tiempo requerido para la optimización de la Selección de RPC de Estructuras Iniciales Conformaciones de la Base de Datos de Perturbación Local Comparación y Registro del Cliente Programa Cliente Grupo de Tareas de Optimización Geométrica RPC Entorno de Rejilla RPC Cluster B Cluster A Cluster C Estructura de prueba Estructura de prueba Estructura de prueba Estructura de prueba Figura 3: Procedimiento de CONFLEX-G. agente rexrex rex Cliente jones.tsukuba.ac.jp hpc-serv.hpcc.jp hpc1 hpc2 hpc3 Invocación del agente Comunicación de la red Figura 4: Visión general del sistema OmniRPC para el clúster remoto con una dirección IP privada. la estructura de prueba se vuelve inmensa. Implementamos la versión paralelizada de CONFLEX, la cual no puede tratar tales moléculas utilizando solo un clúster de PC local. Para aprovechar los vastos recursos informáticos de un entorno de grid, diseñamos e implementamos CONFLEX-G, que es una versión habilitada para grid de CONFLEX, con el sistema OmniRPC. CONFLEX-G asigna trabajos para optimizar una estructura de prueba a los nodos computacionales de cada clúster en el entorno de la red. La Figura 3 muestra el proceso de CONFLEX-G. Los programas de los trabajadores se inicializan mediante el método de inicialización, que es proporcionado por la instalación de OmniRPC AIM en la invocación del trabajador. En cada llamada RPC, el estado inicializado se reutiliza en el host remoto. En otras palabras, el programa cliente puede eliminar la inicialización para cada llamada RPC, y por lo tanto optimizar eficientemente las estructuras de prueba. 3.1 El sistema OmniRPC OmniRPC es un sistema de RPC en malla que permite una programación paralela sin problemas desde un clúster de PC hasta un entorno de malla. OmniRPC hereda su API y arquitectura básica de Ninf. Un cliente y los hosts computacionales remotos que ejecutan los procedimientos remotos pueden estar conectados a través de una red. Las bibliotecas remotas se implementan como un programa ejecutable que contiene una rutina de soporte de red como su rutina principal. Llamamos a este programa ejecutable un programa ejecutable remoto (rex). Cuando el programa cliente OmniRPC se inicia, la función de inicialización del sistema OmniRPC invoca el programa agente OmniRPC omrpc-agent en los hosts remotos listados en el archivo de hosts. Para invocar al agente, el usuario puede utilizar el comando de shell remoto rsh en una red de área local, la API de GRAM (Gestor de Asignación de Recursos Globus) del kit de herramientas Globus 156 en un entorno de grid, o el comando de shell remoto seguro ssh. El usuario puede cambiar las configuraciones solo modificando el archivo de host. OmniRpcCall es una interfaz de programación de cliente simple para llamar a funciones remotas. Cuando OmniRpcCall realiza una llamada a un procedimiento remoto, la llamada se asigna a un host remoto apropiado. Cuando el cliente emite la solicitud de RPC, solicita que el agente en el host seleccionado envíe el trabajo del ejecutable remoto con el programador de trabajos local especificado en el archivo del host. Si no se especifica el programador de tareas, el agente ejecuta el ejecutable remoto en el mismo nodo mediante la llamada al sistema fork. El cliente envía los datos de los argumentos de entrada al ejecutable remoto invocado, y recibe los resultados al regreso de la función remota. Una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado para llamadas RPC posteriores con el fin de eliminar el costo de invocar nuevamente el mismo ejecutable remoto. Cuando el agente y los ejecutables remotos son invocados, los programas remotos obtienen la dirección y el puerto del cliente de la lista de argumentos y se conectan de vuelta al cliente mediante TCP/IP directo o Globus-IO para la transmisión de datos. Debido a que el sistema OmniRPC no utiliza puertos de servicio fijos, el programa cliente asigna puertos no utilizados dinámicamente para esperar la conexión de los ejecutables remotos. Esto evita posibles problemas de seguridad y permite al usuario instalar el sistema OmniRPC sin necesidad de contar con una cuenta privilegiada. Aquí, un recurso de red típico se considera como un grupo de clústeres de PC distribuidos geográficamente. Para los clústeres de PC en una red privada, un proceso agente OmniRPC en el host del servidor funciona como un proxy para relé de comunicaciones entre el cliente y los ejecutables remotos mediante la multiplexación de las comunicaciones utilizando una única conexión. Esta característica, llamada multiplex IO (MXIO), permite a un único cliente utilizar hasta 1,000 hosts de computación remota. Cuando el clúster de PC está dentro de un firewall, el reenvío de puertos de SSH permite que el nodo se comunique con el exterior a través de MXIO. La Figura 4 muestra la descripción general del sistema OmniRPC para un clúster remoto con una dirección IP privada. Para la programación en paralelo, el programador puede utilizar llamadas a procedimientos remotos asíncronos, lo que permite al cliente emitir varias solicitudes mientras continúa con otras computaciones. Las solicitudes se envían a diferentes hosts remotos para ser ejecutadas en paralelo, y el cliente espera o consulta la solicitud completada. En un modelo de programación con llamadas a procedimientos remotos asíncronos, el programador debe manejar las solicitudes pendientes de forma explícita. Debido a que OmniRPC es un sistema seguro para hilos, puede haber varios llamados a procedimientos remotos pendientes en cualquier momento para programas multi-hilo escritos en OpenMP. Modelo de persistencia de OmniRPC 3.2: módulo inicializable automáticamente. OmniRPC soporta eficientemente aplicaciones paralelas típicas de Maestro/Trabajador como programas de ejecución paramétrica. Para aplicaciones de búsqueda paramétrica, que a menudo requieren una gran cantidad de datos idénticos para cada llamada, OmniRPC admite un modelo de persistencia limitado, que está implementado por el módulo inicializable automático. El usuario puede definir un procedimiento de inicialización en el ejecutable remoto para enviar y almacenar datos automáticamente antes de las llamadas reales al procedimiento remoto. Dado que el ejecutable remoto puede aceptar solicitudes para llamadas posteriores, el conjunto de datos que ha sido establecido por el procedimiento de inicialización puede ser reutilizado. Como resultado, el programa del trabajador puede ejecutarse de manera eficiente y reducir la cantidad de datos transmitidos para la inicialización. Una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado para llamadas RPC posteriores. Sin embargo, OmniRPC no garantiza la persistencia del ejecutable remoto, por lo que el conjunto de datos establecido por la llamada anterior no puede ser utilizado por llamadas posteriores. Esto se debe a que una llamada remota realizada por OmniRpcCall puede ser programada en cualquier host remoto de forma dinámica, y los ejecutables remotos pueden ser terminados accidentalmente debido a una reprogramación dinámica o fallos en el host. Sin embargo, la persistencia del ejecutable remoto puede ser explotada en ciertas aplicaciones. Un ejemplo es una aplicación de búsqueda paramétrica: en dicha aplicación, sería eficiente si un gran conjunto de datos pudiera cargarse previamente en la primera llamada, y las llamadas posteriores pudieran realizarse en los mismos datos, pero con diferentes parámetros. Este es el caso para CONFLEX. OmniRPC proporciona un modelo de persistencia restringido a través del módulo inicializable automático (AIM) para apoyar este tipo de aplicación. Si el procedimiento de inicialización está definido en el módulo, el módulo se inicializa automáticamente al invocarlo llamando al procedimiento de inicialización. Cuando el ejecutable remoto se reprograma en diferentes hosts, se llama a la inicialización para inicializar el módulo remoto recién asignado. Esto puede eliminar comunicaciones innecesarias cuando las llamadas RPC utilizan los mismos datos. Para revelar más sobre la diferencia en el progreso entre los casos con OmniRPC AIM y sin OmniRPC AIM, presentamos dos figuras. La Figura 5 ilustra el gráfico de tiempo del progreso de una aplicación típica de OmniRPC utilizando la facilidad OmniRPC AIM, y la Figura 6 ilustra el gráfico de tiempo de la misma aplicación sin la facilidad OmniRPC AIM. En ambas figuras, las líneas entre los diamantes representan los procesos de inicialización, y las líneas entre los puntos representan los cálculos. La línea en negrita indica el momento en que el programa cliente envía los datos al programa trabajador. Es necesario que la aplicación sin la funcionalidad OmniRPC AIM se inicialice en cada RPC. La aplicación que utiliza la funcionalidad OmniRPC AIM puede reutilizar los datos inicializados una vez que el conjunto de datos está inicializado. Esto puede reducir la inicialización en cada RPC. Los trabajadores de la aplicación con AIM pueden calcular de manera eficiente en comparación con la aplicación sin la facilidad de AIM de OmniRPC. 3.3 Implementación de CONFLEX-G utilizando OmniRPC. La Figura 3 muestra una visión general del proceso utilizado en CONFLEX-G. Usando RPCs, CONFLEX-G asigna los procesos de optimización de la estructura de prueba, que son realizados por los nodos de cálculo de un clúster de PC en la versión MPI de CONFLEX, a los nodos computacionales de cada clúster en un entorno de grid. Hay dos cálculos que realizan los programas de trabajador en CONFLEX-G. Uno es la inicialización de un programa de trabajador, y otro es el cálculo de la optimización de la estructura de prueba. Primero, la instalación OmniRPC del AIM se adapta para la inicialización de un programa trabajador. Esta instalación llama automáticamente a la función de inicialización, la cual está contenida en el programa de trabajador, una vez que el programa cliente invoca al programa de trabajador en un nodo remoto. Es necesario que el sistema RPC común, incluido GridRPC, inicialice un programa para cada llamada RPC, ya que la persistencia de datos de los programas trabajadores. Tabla 1: Configuraciones de máquinas en la plataforma de pruebas en red. El nombre del clúster del sitio Máquina Red de Autenticación # de Nodos # de CPUs Univ. de Tsukuba Dennis Dual Xeon 2.4GHz 1Gb Ethernet Globus, SSH 14 28 Alice Dual Athlon 1800+ 100Mb Ethernet Globus, SSH 18 36 TUT Toyo Dual Athlon 2600+ 100Mb Ethernet SSH 8 16 AIST Ume Dual Pentium3 1.4GHz 1Gb Ethernet Globus, SSH 32 64 no es compatible. En OmniRPC, sin embargo, cuando se define la función remota Inicializar en el programa del trabajador y se asigna un nuevo programa de trabajador, correspondiente al otro RPC, para ejecutar, se llama automáticamente a una función Inicializar. Por lo tanto, después de la llamada a la función Initialize para configurar los datos de inicialización comunes, un programa trabajador puede reutilizar estos datos y aumentar la eficiencia de sus procesos. Por lo tanto, cuanto mayor sea el costo de configuración, mayor será el beneficio potencial. Implementamos el programa de trabajador de CONFLEX-G para recibir datos, como parámetros de evaluación de energía, de un programa cliente y para ser inicializado por la función Inicializar. Organizamos el programa del cliente de CONFLEX-G para transferir el archivo de parámetros en el momento de la inicialización del trabajador. Esto permite que la ejecución se realice modificando solo la configuración del cliente si el usuario desea ejecutar CONFLEX-G con un conjunto de datos diferente. Segundo, para calcular la optimización de la estructura de prueba en un programa de trabajador, el programa de trabajador debe recibir los datos, como el arreglo de átomos de la estructura de prueba y el estado de energía interna. El resultado se devuelve al programa cliente después de que el trabajador haya optimizado la estructura de prueba. Dado que la parte de cálculo de la optimización de la estructura en este programa de trabajador puede ser calculada de forma independiente utilizando diferentes parámetros, paralelizamos esta parte utilizando RPC asincrónicos en el lado del cliente. Para llamar a la función de optimización de estructuras en un programa trabajador desde el programa cliente, utilizamos la API OmniRpcCallAsync, la cual está diseñada para RPC asincrónico. Además, la API OmniRpcCallWaitAll espera hasta que se utilicen todas las RPC asíncronas para realizar la sincronización una vez que todas las RPC asíncronas se hayan completado, con el fin de optimizar la estructura de la prueba. El programa cliente que asigna la optimización de la estructura de prueba al nodo de cálculo de un clúster de PC utilizando RPC se describe de la siguiente manera. OmniRpcInit() OmniRpcModuleInit(conflex_search,...); ... mientras( <nuevos conformeros> ) { para cada( <estructuras de prueba> ) OmniRpcCallAsync(conflex_search_worker, ...); OmniRpcWaitAll(); ... Ten en cuenta que la API OmniRpcModuleInit solo devuelve los argumentos necesarios para la inicialización y no ejecutará realmente la función de inicialización. Como se describe arriba, la inicialización real se realiza en la primera llamada remota. Dado que el sistema OmniRPC tiene un programador de round-robin sencillo, no es necesario escribir explícitamente el código para el equilibrio de carga. Por lo tanto, los RPC se asignan automáticamente a los trabajadores inactivos. Tabla 2: Rendimiento de la red entre el nodo maestro del clúster Dennis y el nodo maestro de cada clúster de PC. Rendimiento de ida y vuelta del clúster Tiempo (ms) (Mbps) Dennis 0.23 879.31 Alice 0.18 94.12 Toyo 11.27 1.53 Ume 1.07 373.33 RESULTADOS PRELIMINARES 4.1 Banco de pruebas de la red El banco de pruebas de la red fue construido utilizando recursos informáticos de la Universidad de Tsukuba, la Universidad de Tecnología de Toyohashi (TUT) y el Instituto Nacional de Ciencia y Tecnología Industrial Avanzada (AIST). La Tabla 1 muestra los recursos informáticos utilizados para la red del presente estudio. La Universidad de Tsukuba y AIST están conectadas por una red WAN de 1 Gbps en Tsukuba, y los otros clústeres de PC están conectados por SINET, que es una red de área amplia dedicada a la investigación académica en Japón. La Tabla 2 muestra el rendimiento de la red medida entre el nodo maestro del clúster Dennis y el nodo maestro de cada clúster de PC en el banco de pruebas de la red. El rendimiento de CONFLEX-G En todos los experimentos de CONFLEX-G, el programa cliente se ejecutó en el nodo maestro del clúster Dennis en la Universidad de Tsukuba. El planificador Round-Robin incorporado de OmniRPC se utilizó como planificador de tareas. Se utilizó SSH para un sistema de autenticación, el OminRPCs MXIO, que retransmite la comunicación de E/S entre el programa cliente y los programas trabajadores mediante el reenvío de puertos de SSH, no se utilizó. Se debe tener en cuenta que un programa de trabajador se asigna y se ejecuta en una CPU de un nodo de cálculo en un clúster de PC. Es decir, el número de trabajadores es igual al número de CPUs. Estos programas fueron compilados por el Intel Fortran Compiler 7.0 y gcc 2.95. Se utilizó MPICH, Versión 1.2.5, para comparar el rendimiento entre CONFLEX MPI y CONFLEX-G. Para demostrar la usabilidad de la instalación OmniRPC de AIM, implementamos otra versión de CONFLEX-G que no utilizaba la instalación OmniRPC. El programa del trabajador en esta versión de CONFLEXG debe inicializarse en cada RPC porque el trabajador no conserva el conjunto de datos anterior. Para examinar el rendimiento de CONFLEX-G, seleccionamos dos péptidos y dos proteínas pequeñas como moléculas de prueba: • N-acetil tetra-alanina metilester (AlaX04) • N-acetil hexadeca-alanina metilester (AlaX16) • Construcción de miniproteína TRP-cage TC5B (1L2Y) • Fragmento del extremo N del receptor de PTH (1BL1) La Tabla 3 enumera las características de estas moléculas de muestra. La estructura de prueba de columnas / bucles en esta tabla muestra la Figura 7: Rendimientos de CONFLEX-G, CONFLEX MPI y CONFLEX Original en el clúster Dennis. Figura 8: Proporción de aceleración, que se basa en el tiempo transcurrido de CONFLEX-G utilizando un trabajador en el clúster de Dennis. Figura 9: Rendimiento de CONFLEX-G con y sin la facilidad OmniRPC del módulo inicializable automático para AlaX16. Tabla 3: Características de las moléculas y transmisión de datos para optimizar las estructuras moleculares de prueba en cada código molecular. Tabla 4: Tiempo de búsqueda transcurrido para la conformación molecular de AlaX04. Tabla 6: Tiempo transcurrido de la búsqueda de la estructura de prueba de 1L2Y. Tabla 7: Tiempo transcurrido de la búsqueda de la estructura de prueba de 1BL1. Número total de estructuras del clúster Tiempo de optimización Transcurrido Velocidad transcurrida (# de trabajadores) trabajadores / trabajador / estructura (s) tiempo (s) tiempo (H) hasta Toyo MPI (1) 1 519.0 3,646 189,210 525.61 1.00 Toyo MPI (16) 16 32.4 3,646 120,028 33.34 15.76 Dennis (28) 28 18.5 3,154 61,803 17.16 30.61 Dennis (28) + Ume (56) 84 6.1 4,497 33,502 9.30 56.48 160 número de estructuras de prueba generadas en cada iteración, indicando el grado de paralelismo. La Figura 3 también resume la cantidad de transmisión de datos requerida para la inicialización de un programa de trabajador y para la optimización de cada estructura de prueba. Ten en cuenta que la cantidad de transmisión de datos necesaria para inicializar un programa de trabajador y optimizar una estructura de prueba en la versión MPI de CONFLEX es igual a la de CONFLEX-G. Utilizamos una versión mejorada del campo de fuerza MM2 para asignar una función de energía potencial a varias propiedades geométricas de un grupo de átomos. 4.2.1 Rendimiento en un clúster local. Primero comparamos el rendimiento de CONFLEX-G, la versión MPI de CONFLEX y la versión secuencial original de CONFLEX-G utilizando un clúster local. Investigamos el rendimiento variando el número de trabajadores utilizando el clúster Dennis. Elegimos AlaX04 como molécula de prueba para este experimento. La Figura 7 compara los resultados para el CONFLEX MPI y el CONFLEX-G en un clúster de PC local. El resultado de este experimento muestra que CONFLEX-G puede reducir el tiempo de ejecución a medida que aumenta el número de trabajadores, al igual que en la versión MPI de CONFLEX. Descubrimos que CONFLEX-G logró eficiencias comparables a la versión MPI. Con 28 trabajadores, CONFLEX-G logró una mejora de velocidad de 18.00 veces en comparación con la versión secuencial de CONFLEX. El rendimiento de CONFLEX-G sin la funcionalidad AIM de OmniRPC es peor que el de CONFLEX-G que utiliza la funcionalidad, basado en el aumento en el número de trabajadores. Esto indica que el OmniRPC AIM permite al trabajador calcular de manera eficiente sin necesidad de realizar otros cálculos, como la inicialización o la invocación de programas de trabajador. A medida que se aumenta el número de trabajadores, el rendimiento de CONFLEX-G es ligeramente inferior al de la versión MPI. Esta degradación del rendimiento es causada por diferencias en los procesos de inicialización de los trabajadores de CONFLEX-G y CONFLEX MPI. En el caso de CONFLEX MPI, todos los trabajadores se inicializan antes de la fase de optimización. En el caso de OminRPC, el trabajador es invocado bajo demanda cuando la llamada RPC es emitida realmente. Por lo tanto, la inicialización conlleva este sobrecosto. Dado que el objetivo de CONFLEX-G es explorar las conformaciones de grandes bio-moléculas, el número de estructuras de prueba y el tiempo para optimizar la estructura de prueba podrían ser grandes. En tales casos, el gasto general para invocar e inicializar el programa de trabajador puede ser pequeño en comparación con el tiempo total transcurrido. 4.2.2 Rendimiento para Péptidos en el Banco de Pruebas de la Red En primer lugar, las moléculas de muestra (AlaX04 y AlaX16) se utilizaron para examinar el rendimiento de CONFLEX-G en un entorno de red. La Figura 8 muestra la aceleración lograda al utilizar múltiples clústeres en comparación con el uso de un solo trabajador en el clúster de Dennis. Los resultados detallados se muestran en la Tabla 4 y la Tabla 5. En ambos casos, el mejor rendimiento se obtuvo utilizando 64 trabajadores de la combinación de los clústeres de Dennis y Alice. CONFLEX-G logró una aceleración máxima de 36.08 veces para AlaX04 y una aceleración máxima de 21.91 veces para AlaX16. En el caso de AlaX04, el rendimiento mejora solo cuando el rendimiento de la red entre clústeres es alto. Sin embargo, aunque se utilicen dos o más grupos en un entorno de red de área amplia, la mejora en el rendimiento fue leve debido a que el tiempo de optimización de una estructura de prueba generada a partir de AlaX04, una molécula pequeña, es corto. Además, los gastos generales necesarios para la invocación de un programa de trabajador y la transmisión de datos a través de la red consumen una gran parte del tiempo de procesamiento restante. En particular, la transmisión de datos necesaria para la inicialización de un programa de trabajador es de 2 MB. En el caso del clúster Toyo, donde el rendimiento de la red entre el programa cliente y los programas trabajadores es deficiente, el tiempo de transmisión de datos al programa trabajador requería aproximadamente 6.7 segundos. Dado que el tiempo de transmisión fue más largo que el tiempo de procesamiento de una optimización de estructura en CONFLEX-G, la mayor parte del tiempo se dedicó a esta transmisión de datos. Por lo tanto, incluso si CONFLEX-G utiliza un gran número de nodos de cálculo en un entorno de red de área amplia, no se obtiene el beneficio de utilizar un recurso de cuadrícula. En el caso de AlaX16, CONFLEX-G logró una aceleración al utilizar dos o más clústeres de PC en nuestro banco de pruebas en red. Esto se debió a que el tiempo de cálculo en el programa del trabajador era largo y los costos adicionales, como la latencia de red y la invocación de programas de trabajador, se volvieron relativamente pequeños y pudieron ocultarse. El mejor rendimiento se obtuvo utilizando 64 trabajadores en los clústeres de Dennis y Alice. En el caso de AaX16, el rendimiento logrado fue un aumento de velocidad de 36.08 veces. La Figura 9 revela el efecto de utilizar la facilidad del OmniRPC AIM en el rendimiento de CONFLEX-G. En la mayoría de los casos, CONFLEX-G con la instalación de OmniRPC AIM logró un mejor rendimiento que CONFLEX-G sin la instalación. En particular, la facilidad OmniRPC AIM fue ventajosa al usar dos clústeres conectados por una red de bajo rendimiento. Los resultados indican que la instalación OmniRPC AIM puede mejorar el rendimiento en el entorno de la red. 4.2.3 Rendimiento para proteínas pequeñas en el banco de pruebas de la red. Finalmente, exploramos la conformación molecular utilizando CONFLEX-G para moléculas grandes. En un entorno de cuadrícula, este experimento se llevó a cabo utilizando los clústeres Dennis y Ume. En este experimento, utilizamos dos proteínas, 1L2Y y 1BL1. La Tabla 6 y la Tabla 7 muestran el rendimiento de CONFLEX-G en el entorno de la red y el de CONFLEX MPI en el clúster de Toyo, respectivamente. Los incrementos de velocidad en estas tablas fueron calculados respectivamente basados en el rendimiento de un trabajador y 16 trabajadores del clúster Toyo utilizando CONFLEX MPI. CONFLEX-G con 84 trabajadores en los grupos de Dennis y Ume obtuvo aceleraciones máximas de 56.5 veces para 1L2Y y 34.5 veces para 1L2Y. Dado que el tiempo de cálculo para la optimización de la estructura requería una gran cantidad de tiempo, la proporción de gastos generales, incluidas tareas como la invocación de un programa de trabajador y la transmisión de datos para la inicialización, se volvió muy pequeña, por lo que el rendimiento de CONFLEX-G mejoró. Descubrimos que el desequilibrio de carga en el tiempo de procesamiento de la optimización para cada estructura de prueba causó una degradación del rendimiento. Cuando obtuvimos el mejor rendimiento para 1L2Y utilizando los cúmulos de Dennis y Ume, el tiempo para la optimización de cada estructura varió de 190 a 27,887 segundos, y la proporción entre los tiempos más largos y más cortos fue de 13.4. Para 1BL1, la proporción de tiempo mínimo sobre tiempo máximo fue de 190. Además, para que el programa del trabajador espere hasta que se complete la optimización de todas las estructuras de prueba, se descubrió que todos los programas de trabajador esperaban en un estado inactivo durante aproximadamente 6 horas. Esto ha causado la degradación del rendimiento de CONFLEX-G. 161 4.3 Discusión En esta subsección, discutimos la mejora del rendimiento reflejada en nuestros experimentos. Explotando el paralelismo - Para aprovechar más recursos computacionales, es necesario aumentar el grado de paralelismo. En este experimento, el grado de paralelismo no fue tan grande en el caso de las moléculas de muestra. Al utilizar un conjunto de más de 500 nodos informáticos para 1BL1, el número de estructuras de un solo ensayo asignadas a cada trabajador será solo de uno o dos. Si se asignan más de 100 estructuras de prueba a cada programa de trabajador, el cálculo se puede realizar de manera más eficiente debido a la reducción de la sobrecarga para la invocación y la inicialización de los trabajadores a través de la facilidad de OmniRPC AIM. Una idea para aumentar el paralelismo es superponer la ejecución de dos o más conjuntos de estructuras de prueba. En el algoritmo actual, se genera un conjunto de estructuras de prueba a partir de una estructura inicial y se calculan las optimizaciones para todas las estructuras de este conjunto. Además, esto ayudará a mejorar el desequilibrio de carga. Al hacer que otros conjuntos de estructuras de prueba se superpongan, incluso si algunas optimizaciones requieren mucho tiempo, la optimización de las estructuras en otros conjuntos se puede ejecutar para compensar a los trabajadores inactivos de otras optimizaciones. Sin embargo, no está claro cómo dicha modificación del algoritmo podría afectar la calidad de los resultados finales en términos de una búsqueda de conformación. Mejora en el desequilibrio de carga al optimizar cada estructura de prueba: la Tabla 8 enumera las estadísticas de los tiempos de optimización de las estructuras de prueba generadas para cada molécula de muestra medida utilizando 28 trabajadores en el clúster de Dennis. Cuando se utilizan dos o más conjuntos de grupos de PC, la mejora en el rendimiento se ve obstaculizada por el desequilibrio de carga en la optimización de las estructuras de prueba. El tiempo más largo para optimizar una estructura de prueba fue casi 24 veces más largo que el tiempo más corto. Además, los demás trabajadores deben esperar hasta que el trabajo más largo haya terminado, por lo que el tiempo total de ejecución no se puede reducir. Cuando CONFLEX-G buscó los conformeros de 1BL1 mediante el clúster de Dennis, el tiempo de cálculo más largo de la optimización de la estructura de prueba representó aproximadamente el 80% del tiempo transcurrido. Por lo tanto, hay dos posibles soluciones para el desequilibrio de carga. • Es necesario refinar el algoritmo utilizado para generar la estructura de prueba, que suprime la variación temporal para optimizar una estructura de prueba en CONFLEX. Esto permite que CONFLEX-G logre un alto rendimiento al utilizar muchos recursos informáticos. • Una de las soluciones es superponer las ejecuciones para dos o más conjuntos de estructuras de prueba. En los algoritmos actuales, se genera un conjunto de estructuras de prueba a partir de una estructura inicial y el cálculo continúa hasta que se calculen todas las estructuras de este conjunto. Al tener otros conjuntos de estructuras de prueba, incluso si una búsqueda de estructuras lleva mucho tiempo, un trabajo puede ejecutarse para compensar el desequilibrio de carga causado por otros trabajos. Sin embargo, no está claro cómo tal modificación de los algoritmos podría afectar la eficiencia. En este experimento, utilizamos un programador de round-robin incorporado simple de OmniRPC, que es necesario para aplicar el programador que asigna estructuras con largos tiempos de optimización a una tabla de alto rendimiento. Tabla 8: Estadísticas del tiempo transcurrido de la optimización de la estructura de prueba utilizando 28 trabajadores en el clúster Dennis. Código de Varianza Promedio Mínimo Máximo Molecular (s) (s) (s) AlaX04 2.0 11.3 5.3 3 AlaX16 47.6 920.0 154.2 5404 1L2Y 114.2 13331.4 803.2 636782 1BL1 121.0 29641.8 3153.5 2734811 nodos y estructuras con tiempos de optimización cortos a nodos de bajo rendimiento. En general, sin embargo, podría ser difícil predecir el tiempo necesario para la optimización de la estructura del ensayo. Paralelización del programa del trabajador para acelerar y optimizar una estructura de prueba - En la implementación actual, no paralelizamos el programa del trabajador. Para acelerar las estructuras de prueba, la programación híbrida utilizando OmniRPC y OpenMP en una máquina SMP (Symmetric Multiple Processor) puede ser uno de los métodos alternativos para mejorar el rendimiento general. TRABAJO RELACIONADO Recientemente, se ha desarrollado un algoritmo que resuelve los problemas de paralelización y comunicación en procesadores poco conectados para ser utilizados en simulaciones. El proyecto Folding@home simula escalas de tiempo miles a millones de veces más largas que las logradas previamente. Esto nos ha permitido simular el plegamiento por primera vez y examinar directamente enfermedades relacionadas con el plegamiento. SETI@home es un programa para buscar vida extraterrestre mediante el análisis de señales de radio telescopio utilizando datos de telescopios de diferentes sitios mediante la transformada de Fourier. SETI@home aborda problemas inmensamente paralelos, en los cuales los cálculos pueden dividirse fácilmente entre varios ordenadores. Los fragmentos de datos del radiotelescopio pueden asignarse fácilmente a diferentes computadoras. La mayoría de estos esfuerzos desarrollan explícitamente una aplicación de acoplamiento como una aplicación paralela utilizando un lenguaje de programación paralela de propósito especial y middleware, como MPI, lo cual requiere habilidades y esfuerzo de desarrollo. Sin embargo, las habilidades y esfuerzo necesarios para desarrollar una aplicación de cuadrícula pueden no ser necesarios para OmniRPC. Nimrod/G[15] es una herramienta para modelado paramétrico distribuido e implementa una granja de tareas paralelas para simulaciones que requieren varios parámetros de entrada variables. Nimrod incorpora un componente de programación distribuida que puede gestionar la programación de experimentos individuales en computadoras inactivas en una red de área local. Nimrod se ha aplicado en aplicaciones que incluyen bioinformática, investigación de operaciones y modelado molecular para el diseño de fármacos. NetSolve es una instalación de RPC similar a OmniRPC y Ninf, que proporciona una interfaz de programación similar y un mecanismo de equilibrio de carga automático. Ninf-G[7] es una implementación habilitada para grid de Ninf y proporciona un sistema GridRPC[10] que utiliza LDAP para gestionar la base de datos de ejecutables remotos, pero no admite clústeres que involucren direcciones IP privadas o direcciones dentro de un firewall. Matsuoka et al. [16] también han discutido varios problemas de diseño relacionados con los sistemas de RPC en malla. 162 6. CONCLUSIONES Y TRABAJO FUTURO Hemos diseñado e implementado CONFLEX-G utilizando OmniRPC. Informamos sobre su rendimiento en un banco de pruebas en red de varios clústeres de PC distribuidos geográficamente. Para explorar la conformación de grandes biomoléculas, se utilizó CONFLEXG para generar estructuras de prueba de las moléculas y asignar trabajos para optimizarlas mediante mecánica molecular en la cuadrícula. OmniRPC proporciona un modelo de persistencia restringido para que el módulo se inicialice automáticamente al invocarse llamando al procedimiento de inicialización. Esto puede eliminar la comunicación innecesaria y la inicialización en cada llamada en CONFLEX-G. CONFLEX-G puede lograr un rendimiento comparable al de CONFLEX MPI y aprovecha más recursos informáticos al permitir el uso de múltiples clústeres de PC en la red. El resultado experimental muestra que CONFLEX-G logró una aceleración de 56.5 veces para la molécula 1BL1, donde la molécula consta de un gran número de átomos y cada optimización de la estructura de prueba requiere mucho tiempo. El desequilibrio de carga de las optimizaciones de la estructura de prueba puede causar degradación del rendimiento. Necesitamos refinar el algoritmo utilizado para generar la estructura de prueba con el fin de mejorar la optimización del equilibrio de carga para las estructuras de prueba en CONFLEX. Los estudios futuros incluirán el desarrollo de herramientas de implementación y un examen de la tolerancia a fallos. En el OmniRPC actual, el registro de un programa de ejecución en hosts remotos y despliegues de programas de trabajadores se configuran manualmente. Se requerirán herramientas de implementación a medida que se incremente el número de hosts remotos. En entornos de cuadrícula en los que el entorno cambia dinámicamente, también es necesario contar con soporte para la tolerancia a fallos. Esta característica es especialmente importante en aplicaciones a gran escala que requieren cálculos prolongados en un entorno de cuadrícula. Planeamos refinar el algoritmo de optimización conformacional en CONFLEX para explorar el espacio de búsqueda de conformaciones de moléculas biológicas más grandes como la proteasa del VIH utilizando hasta 1000 trabajadores en un entorno de cuadrícula. AGRADECIMIENTOS Esta investigación fue apoyada en parte por una Subvención de la Secretaría de Educación, Cultura, Deportes, Ciencia y Tecnología de Japón, No. 14019011, 2002, y como parte del Programa de Investigación y Desarrollo para Aplicar la Ciencia y Tecnología Computacional Avanzada por la Corporación de Ciencia y Tecnología de Japón (Investigación en la plataforma de computación en red para el diseño de fármacos). Nos gustaría agradecer al centro de investigación de tecnología de red, AIST, Japón por proporcionar recursos informáticos para nuestro experimento. 8. REFERENCIAS [1] H. Goto y E. Osawa. Un algoritmo eficiente para buscar conformaciones de baja energía de moléculas cíclicas y acíclicas. J. Quím. Soc., Perkin Trans, 2:187-198, 1993. [2] M. Sato, T. Boku, y D. Takahashi. OmniRPC: un sistema de RPC en malla para programación paralela en entornos de clúster y malla. En Proc. de CCGrid2003, páginas 219-229, 2003. [3] M. Sato, M. Hirano, Y. Tanaka y S. Sekiguchi. OmniRPC: una instalación de RPC en Grid para la computación en clúster y global en OpenMP. En Proc. del Taller sobre Aplicaciones y Herramientas OpenMP 2001 (LNCS 2104), páginas 130-135, 2001. [4] Proyecto OmniRPC. http://www.omni.hpcc.jp/omnirpc/. [5] M. Sato, H. Nakada, S. Sekiguchi, S. Matsuoka, U. Nagashima y H. Takagi. Ninf: Una Biblioteca de Información Basada en Red para la Infraestructura de Computación Global en Todo el Mundo. En HPCN Europe, páginas 491-502, 1997. [6] Proyecto Ninf. http://ninf.apgrid.org/. [7] Y. Tanaka, H. Nakada, S. Sekiguchi, T. Suzumura y S. Matsuoka. Ninf-G: Una Implementación de Referencia de Middleware de Programación basado en RPC para la Computación en Grid. Revista de Computación en Red, 1(1):41-51, 2003. [8] D. Arnold, S. Agrawal, S. Blackford, J. Dongarra, M. Miller, K. Seymour, K. Sagi, Z. Shi y S. Vadhiyar. Guía del usuario de NetSolve V1.4.1. Departamento de Computación Innovador. Informe técnico ICL-UT-02-05, Universidad de Tennessee, Knoxville, TN, junio de 2002. [9] Grupo de gestión de objetos. http://www.omg.org/. [10] K. Seymour, H. Nakada, S. Matsuoka, J. Dongarra, C. Lee y H. Casanova. GridRPC: Una API de Llamada a Procedimientos Remotos para la Computación en Grid. [11] H. Goto, T. Takahashi, Y. Takata, K. Ohta y U. Nagashima. Conflex: Comportamientos conformacionales de polipéptidos según lo predicho por una búsqueda en el espacio conformacional. En Nanotech2003, volumen 1, páginas 32-35, 2003. [12] I. Foster y C. Kesselman. Globus: Un conjunto de herramientas de infraestructura de metacomputación. La Revista Internacional de Aplicaciones de Supercomputadoras y Computación de Alto Rendimiento, 11(2):115-128, Verano 1997. [13] Stefan M. Larson, Christopher D. Snow, Michael Shirts y Vijay S. Pande. Folding@home y genome@home: Utilizando computación distribuida para abordar problemas previamente intratables en biología computacional. Genómica Computacional, 2002. Proyecto seti@home. http://setiathome.ssl.berkeley.edu/. R. Buyya, K. Branson, J. Giddy y D. Abramson. El laboratorio virtual: un conjunto de herramientas para habilitar la modelización molecular distribuida para el diseño de fármacos en la red mundial. Concurrencia y Computación: Práctica y Experiencia, 15(1):1-25, enero de 2003. [16] S. Matsuoka, H. Nakada, M. Sato y S. Sekiguchi. Problemas de diseño de sistemas de servidores habilitados para redes para la red. En Proc. de GRID 2000 (LNCS 1971), páginas 4-17, 2000. 163 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "initialization procedure": {
            "translated_key": "procedimiento de inicialización",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Implementation and Performance Evaluation of CONFLEX-G: Grid-enabled Molecular Conformational Space Search Program with OmniRPC Yoshihiro Nakajima Graduate School of Systems & Information Engineering, University of Tsukuba Tsukuba, 305-8577, Japan yoshihiro@hpcs.is.tsukuba.ac.jp Mitsuhisa Sato Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan msato@is.tsukuba.ac.jp Hitoshi Goto Knowledge-based Information Engineering, Toyohashi University of Technology Toyohashi, 441-8580, Japan gotoh@cochem2.tutkie.tut.ac.jp Taisuke Boku, Daisuke Takahashi Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan {taisuke,daisuke}@hpcs.is.tsukuba.ac.jp ABSTRACT CONFLEX-G is the grid-enabled version of a molecular conformational space search program called CONFLEX.",
                "We have implemented CONFLEX-G using a grid RPC system called OmniRPC.",
                "In this paper, we report the performance of CONFLEX-G in a grid testbed of several geographically distributed PC clusters.",
                "In order to explore many conformation of large bio-molecules, CONFLEX-G generates trial structures of the molecules and allocates jobs to optimize a trial structure with a reliable molecular mechanics method in the grid.",
                "OmniRPC provides a restricted persistence model to support the parametric search applications.",
                "In this model, when the <br>initialization procedure</br> is defined in the RPC module, the module is automatically initialized at the time of invocation by calling the <br>initialization procedure</br>.",
                "This can eliminate unnecessary communication and initialization at each call in CONFLEX-G. CONFLEXG can achieve performance comparable to CONFLEX MPI and can exploit more computing resources by allowing the use of a cluster of multiple clusters in the grid.",
                "The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times in the case of the 1BL1 molecule, where the molecule consists of a large number of atoms, and each trial structure optimization requires significant time.",
                "The load imbalance of the optimization time of the trial structure may also cause performance degradation.",
                "Categories and Subject Descriptors C.2.4 [Computer Systems Organization]: COMPUTERCOMMUNICATION NETWORK-Distributed Systems; J.2.4 [Computer Applications]: PHYSICAL SCIENCES AND ENGINEERING General Terms Design,Performance 1.",
                "INTRODUCTION Elucidation of the stable conformations and the folding process of proteins is one of the most fundamental and challenging goals in life science.",
                "While some of the most common secondary structures (e.g., certain types of helix, the beta-strand, and the coil) are well known, precise analysis of the thousands of chemically important conformers and pico-second-order analysis of their conformational interconversions via the transition states on the potential energy surface are required for the microsecond-order investigation of the folding process toward the tertiary structure formations.",
                "Recently, the concept of the computational grid has begun to attract significant interest in the field of high-performance network computing.",
                "Rapid advances in wide-area networking technology and infrastructure have made it possible to construct large-scale, high-performance distributed computing environments, or computational grids, that provide dependable, consistent and pervasive access to enormous computational resources.",
                "CONFLEX is one of the most efficient and reliable conformational space search programs[1].",
                "We have applied this 154 program to parallelization using global computing.",
                "The performance of the parallelized CONFLEX enables exploration of the lower-energy region of the conformational space of small peptides within an available elapsed time using a local PC cluster.",
                "Since trial structure optimization in CONFLEX is calculated via molecular mechanics, conformational space search can be performed quickly compared to that using molecular orbital calculation.",
                "Although the parallelized version of CONFLEX was used to calculate in parallel the structure optimization, which takes up over 90% of the processing in the molecular conformation search, sufficient improvement in the speedup could not be achieved by this method alone.",
                "Therefore, for high polymers from live organisms, such as HIV protease, the use one PC cluster is insufficient due to the requirement for optimization of a huge number of trial structures.",
                "This requires the vast computer resources of a grid computing environment.",
                "In this paper, we describe CONFLEX-G, a grid-enabled molecular conformational search program, using OmniRPC and report its performance in a grid of several PC clusters which are geographically distributed.",
                "The prototype CONFLEX-G allocates calculation trial structures optimization, which is a very time-consuming task, to worker nodes in the grid environment in order to obtain high throughput.",
                "In addition, we compare the performance of CONFLEX-G in a local PC cluster to that in a grid testbed.",
                "OmniRPC[2, 3, 4] is a thread-safe implementation of Ninf RPC[5, 6] which is a Grid RPC facility for grid environment computing.",
                "Several systems adopt the concept of the RPC as the basic model for grid environment computing, including Ninf-G[7], NetSolve[8] and CORBA[9].",
                "The RPCstyle system provides an easy-to-use, intuitive programming interface, allowing users of the grid system to easily create grid-enabled applications.",
                "In order to support parallel programming, an RPC client can issue asynchronous call requests to a different remote computer to exploit networkwide parallelism via OmniRPC.",
                "In this paper, we propose the OmniRPC persistence model to a Grid RPC system and demonstrate its effectiveness.",
                "In order to support a typical application for a grid environment, such as a parametric search application, in which the same function is executed with different input parameters on the same data set.",
                "In the current GridRPC system[10], the data set by the previous call cannot be used by subsequent calls.",
                "In the OmniRPC system, once a remote executable is invoked, the client attempts to use the invoked remote executable and its initialized state for subsequent RPC calls to the same remote functions in order to eliminate the invocation cost of each call.",
                "This paper demonstrates that CONFLEX-G is able to exploit the huge computer resources of a grid environment and search large-scale molecular conformers.",
                "We demonstrate CONFLEX-G on our grid testbed using the actual protein as a sample molecule.",
                "The OmniRPC facility of the automatic initializable module (AIM) allows the system to efficiently calculate numerous conformers.",
                "Furthermore, by using OmniRPC, the user can grid-parallelize the existing application, and move from the cluster to the grid environment without modifying program code and compiling the program.",
                "In addition, the user can easily build a private grid environment.",
                "The rest of this paper is organized as follows.",
                "An overview Selection of Initial Structure Conformations Database Local Perturbation Geometry Optimization Comparison and Registration Figure 1: Algorithm of conformational space search in the original CONFLEX. of the CONFLEX system is presented in Section2, and the implementation and design of CONFLEX-G are described in Section 3.",
                "We report experimental results obtained using CONFLEX-G and discuss its performance in Section 4.",
                "In Section 6, we present conclusions and discuss subjects for future study. 2.",
                "CONFLEX CONFLEX [1] is an efficient conformational space search program, which can predominately and exhaustively search the conformers in the lower-energy region.",
                "Applications of CONFLEX include the elucidation of the reactivity and selectivity of drugs and possible drug materials with regard to their conformational flexibility. 2.1 Algorithm of ConformationalSpaceSearch The basic strategy of CONFLEX is an exhaustive search of only the low-energy regions.",
                "The original CONFLEX performs the following four major steps: 1.",
                "Selection of an initial structure among the previously discovered unique conformers sorted in a conformational database. (An input structure is used as the first initial structure at the beginning of a search execution only.) 2.",
                "Generation of trial structures by local perturbations to the selected initial structure. 3.",
                "Geometry optimization for the newly generated trial structures. 4.",
                "Comparison of the successfully optimized (trial) structures with the other conformers stored in a conformation database, and preservation of newly discovered unique conformers in the database.",
                "Figure 1 shows the outline of CONFLEX, the original conformational space search algorithm.",
                "These procedures incorporate two unique strategies.",
                "Figure 2 shows the strategies for generating local perturbations in CONFLEX.",
                "The first strategy involves both corner flapping and edge flipping for the ring atoms and stepwise rotation for side-chains or backbone chains.",
                "These methods provide a highly efficient way to produce several good trial structures.",
                "These perturbations can be considered to mimic 155 Stepwise Rotation Corner Flap Edge Flip Figure 2: Strategies used to generate the local perturbations. a barrier-crossing step in the elementary process of the thermal conformational inter-conversion.",
                "Actually, the perturbations of an initial structure correspond to the precise performance around the space of the initial structure because of localization and weakness of the perturbation.",
                "The selection rule of the initial structure, the LowestConformer-First rule, is the second strategy for directing the conformation search expanded to the low-energy regions.",
                "The initial structure is selected as the set of lowest energy conformers stored in the conformation database.",
                "This rule is effective in moving down the search space toward lower energy regions, like water from a stream running into an empty reservoir, while filling local depressions along the way.",
                "Therefore, these tactical procedures of the CONFLEX search are referred to as the Reservoir Filling Algorithm.",
                "In order to remain in the low-energy region and perform an exhaustive search, the search limit (SEL), which determines the maximum energy of the initial structures, is pre-defined.",
                "Gradually increasing SEL allows only the lowenergy conformers to be searched and avoids straying into unnecessarily high-energy regions. 2.2 Parallelization of CONFLEX for Cluster For application to over 100 atoms, CONFLEX was improved using high-performance parallel computing techniques.",
                "In the CONFLEX search algorithm, the geometry optimization procedures always take 95% of the elapsed time of the search execution.",
                "Therefore, we parallelized this optimization using the Master/Worker parallelization technique.",
                "We modified the search procedures as follows.",
                "After trial structures are generated (step 2), they are temporarily stored in a task pool on the master node.",
                "Then, each worker node is dynamically supplied with one trial structure from the master node.",
                "After an optimization on a worker node is finished, the worker is immediately supplied with another trial structure.",
                "When all of the trial structures related to a given initial structure are optimized, only the master procedure is used in comparison.",
                "By parallelizing CONFLEX, the speedup of searching molecular conformers obtained is as reported in[11]. 3.",
                "CONFLEX-G Originally, CONFLEX was intended for use in exploring the conformers of the large bio-molecules, such HIV protease.",
                "In such molecules, the number of trial structures increases and the time required for optimization of RPC Selection of Initial Structure Conformations Database Local Perturbation Comparison and Registration Client program Task Pool of Geometry Optimization RPC RPC Grid environment Cluster B Cluster A Cluster C Trial structureTrial structure Trial structure Trial structure Figure 3: Procedure of CONFLEX-G. agent rexrex rex Client jones.tsukuba.ac.jp hpc-serv.hpcc.jp hpc1 hpc2 hpc3 Agent invocation communicationNetwork Figure 4: Overview of the OmniRPC system for the remote cluster having a private IP address. the trial structure becomes immense.",
                "We implemented the parallelized version of CONFLEX, which cannot treat such molecules using only a local PC cluster.",
                "In order to exploit the vast computing resources of a grid environment, we designed and implemented CONFLEX-G, which is a grid-enabled version of CONFLEX, with the OmniRPC system.",
                "CONFLEX-G allocates jobs to optimize a trial structure to the computational nodes of each cluster in the grid environment.",
                "Figure 3 shows the process of CONFLEX-G.",
                "The worker programs are initialized by the initialize method, which is provided by the OmniRPC AIM facility at worker invocation.",
                "At each RPC call, the initialized state is reused on the remote host.",
                "In other words, the client program can eliminate the initialization for each RPC call, and can therefore optimize trial structures efficiently. 3.1 The OmniRPC system OmniRPC is a Grid RPC system which allows seamless parallel programming from a PC cluster to a grid environment.",
                "OmniRPC inherits its API and basic architecture from Ninf.",
                "A client and the remote computational hosts which execute the remote procedures may be connected via a network.",
                "The remote libraries are implemented as an executable program which contains a network stub routine as its main routine.",
                "We call this executable program a remote executable program (rex).",
                "When the OmniRPC client program starts, the initialization function of OmniRPC system invokes the OmniRPC agent program omrpc-agent in the remote hosts listed in the host file.",
                "To invoke the agent, the user can use the remote shell command rsh in a local-area network, the GRAM (Globus Resource Allocation Manager) API of the Globus 156 toolkit[12] in a grid environment, or the secure remote shell command ssh.",
                "The user can switch the configurations only by changing the host file.",
                "OmniRpcCall is a simple client programming interface for calling remote functions.",
                "When OmniRpcCall makes a remote procedure call, the call is allocated to an appropriate remote host.",
                "When the client issues the RPC request, it requests that the agent in the selected host submit the job of the remote executable with the local job scheduler specified in the host file.",
                "If the job scheduler is not specified, the agent executes the remote executable in the same node by the fork system call.",
                "The client sends the data of the input arguments to the invoked remote executable, and receives the results upon return of the remote function.",
                "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls in order to eliminate the cost of invoking the same remote executable again.",
                "When the agent and the remote executables are invoked, the remote programs obtain the client address and port from the argument list and connect back to the client by direct TCP/IP or Globus-IO for data transmission.",
                "Because the OmniRPC system does not use any fixed service ports, the client program allocates unused ports dynamically to wait for connection from the remote executables.",
                "This avoids possible security problems, and allows the user to install the OmniRPC system without requiring a privileged account.",
                "Herein, a typical grid resource is regarded as a cluster of geographically distributed PC clusters.",
                "For PC clusters on a private network, an OmniRPC agent process on the server host functions as a proxy to relay communications between the client and the remote executables by multiplexing the communications using a single connection.",
                "This feature, called multiplex IO (MXIO), allows a single client to use up to 1,000 remote computing hosts.",
                "When the PC cluster is inside a firewall, the port forwarding of SSH enables the node to communicate to the outside with MXIO.",
                "Figure 4 shows the overview of the OmniRPC system for a remote cluster with a private IP address.",
                "For parallel programming, the programmer can use asynchronous remote procedure calls, allowing the client to issue several requests while continuing with other computations.",
                "The requests are dispatched to different remote hosts to be executed in parallel, and the client waits or polls the completed request.",
                "In such a programming model with asynchronous remote procedure calls, the programmer should handle outstanding requests explicitly.",
                "Because OmniRPC is a thread-safe system, a number of remote procedure calls may be outstanding at any time for multi-threaded programs written in OpenMP. 3.2 OmniRPC persistence model: automatic initializable module OmniRPC efficiently supports typical Master/Worker parallel applications such as parametric execution programs.",
                "For parametric search applications, which often require large amount of identical data for each call, OmniRPC supports a limited persistence model, which is implemented by the automatic initializable module.",
                "The user can define an <br>initialization procedure</br> in the remote executable in order to send and store data automatically in advance of actual remote procedure calls.",
                "Since the remote executable may accept requests for subsequent calls, the data set which has been set by the <br>initialization procedure</br> can be re-used.",
                "As a result, the worker program can execute efficiently and reduce the amount of data transmitted for initialization.",
                "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls.",
                "However, OmniRPC does not guarantee persistence of the remote executable, so that the data set by the previous call cannot be used by subsequent calls.",
                "This is because a remote call by OmniRpcCall may be scheduled to any remote host dynamically, and remote executables may be terminated accidentally due to dynamic re-scheduling or host faults.",
                "However, persistence of the remote executable can be exploited in certain applications.",
                "An example is a parametric search application: in such an application, it would be efficient if a large set of data could be pre-loaded by the first call, and subsequent calls could be performed on the same data, but with different parameters.",
                "This is the case for CONFLEX.",
                "OmniRPC provides a restricted persistence model through the automatic initializable module (AIM) in order to support this type of application.",
                "If the <br>initialization procedure</br> is defined in the module, the module is automatically initialized at invocation by calling the <br>initialization procedure</br>.",
                "When the remote executable is re-scheduled in different hosts, the initialization is called to initialize the newly allocated remote module.",
                "This can eliminate unnecessary communications when RPC calls use the same data.",
                "To reveal more about the difference in progress between the cases with OmniRPC AIM and without OmniRPC AIM, we present two figures.",
                "Figure 5 illustrates the time chart of the progress of a typical OmniRPC application using the OmniRPC AIM facility, and Figure 6 illustrates the time chart of the same application without the OmniRPC AIM facility.",
                "In both figures, the lines between diamonds represent the processes of initialization, and the lines between points represent the calculation.",
                "The bold line indicates the time when the client program sends the data to a worker program.",
                "It is necessary for the application without the OmniRPC AIM facility to initialize at each RPC.",
                "The application using the OmniRPC AIM facility can re-use the initialized data once the data set is initialized.",
                "This can reduce the initialization at each RPC.",
                "The workers of the application with the AIM can calculate efficiently compared to the application without the OmniRPC AIM facility. 3.3 Implementation of CONFLEX-G using OmniRPC Figure 3 shows an overview of the process used in CONFLEXG.",
                "Using RPCs, CONFLEX-G allocates the processes of trial structure optimization, which are performed by the computation nodes of a PC cluster in the MPI version of CONFLEX, to the computational nodes of each cluster in a grid environment.",
                "There are two computations which are performed by the worker programs in CONFLEX-G. One is the initialization of a worker program, and another is the calculation of trial structure optimization.",
                "First, the OmniRPC facility of the AIM is adapted for initialization of a worker program.",
                "This facility automatically calls the initialization function, which is contained in the worker program, once the client program invokes the worker program in a remote node.",
                "It is necessary for the common RPC system including GridRPC to initialize a program for every RPC call, since data persistence of worker programs 157 time Client Program Worker Program 1 Worker Program 2 initialization initialization calculation calculation calculation calculation calculation Parallelized using asynchronous RPCs Figure 5: Time chart of applications using the OmniRPC facility of the automatic initializable module. time Client Program Worker Program 1 Worker Program 2 initialization initializationcalculation calculation calculation calculation initialization initialization initialization Parallelized using asynchronous RPCs calculation Figure 6: Time chart of applications without the OmniRPC facility of the automatic initializable module.",
                "Table 1: Machine configurations in the grid testbed.",
                "Site Cluster Name Machine Network Authentication # of Nodes # of CPUs Univ. of Tsukuba Dennis Dual Xeon 2.4GHz 1Gb Ethernet Globus, SSH 14 28 Alice Dual Athlon 1800+ 100Mb Ethernet Globus, SSH 18 36 TUT Toyo Dual Athlon 2600+ 100Mb Ethernet SSH 8 16 AIST Ume Dual Pentium3 1.4GHz 1Gb Ethernet Globus, SSH 32 64 is not supported.",
                "In OmniRPC, however, when the Initialize remote function is defined in the worker program and a new worker program, corresponding to the other RPC, is assigned to execute, an Initialize function is called automatically.",
                "Therefore, after the Initialize function call to set up common initialization data, a worker program can re-use this data and increase the efficiency of its processes.",
                "Thus, the higher the set-up cost, the greater the potential benefit.",
                "We implemented the worker program of CONFLEX-G to receive data, such as evaluation parameters of energy, from a client program and to be initialized by the Initialize function.",
                "We arranged the client program of CONFLEX-G to transfer the parameter file at the time of worker initialization.",
                "This enables execution to be performed by modify only the client setting if the user wants to run CONFLEX-G with a different data set.",
                "Second, in order to calculate trial structure optimization in a worker program, the worker program must receive the data, such as the atom arrangement of the trial structure and the internal energy state.",
                "The result is returned to the client program after the worker has Optimized the trial structure.",
                "Since the calculation portion of the structure optimization in this worker program can be calculated independently using different parameters, we parallelized this portion using asynchronous RPCs on the client side.",
                "To call the structure optimization function in a worker program from the client program, we use the OmniRpcCallAsync API, which is intended for asynchronous RPC.",
                "In addition, OmniRpcCallWaitAll API which waits until all asynchronous RPCs are used in order to perform synchronization with all of the asynchronous RPCs completed so as to optimize the trial structure.",
                "The client program which assigns trial structure optimization to the calculation node of a PC cluster using RPC is outlined as follows.",
                "OmniRpcInit() OmniRpcModuleInit(conflex_search,...); ... while( <new conformers> ) { foreach( <trial structures> ) OmniRpcCallAsync(conflex_search_worker, ...); OmniRpcWaitAll(); ...",
                "Note that OmniRpcModuleInit API returns only the arguments needed for initialization and will not actually execute the Initialization function.",
                "As described above, the actual Initialization is performed at the first remote call.",
                "Since the OmniRPC system has an easy round-robin scheduler, we do not have to explicitly write the code for load balance.",
                "Therefore, RPCs are allocated automatically to idle workers. 158 Table 2: Network performance between the master node of the Dennis cluster and the master node of each PC cluster.",
                "Round-Trip Throughput Cluster Time (ms) (Mbps) Dennis 0.23 879.31 Alice 0.18 94.12 Toyo 11.27 1.53 Ume 1.07 373.33 4.",
                "PRELIMINARY RESULTS 4.1 Grid Testbed The grid testbed was constructed by computing resources at the University of Tsukuba, the Toyohashi University of Technology (TUT) and the National Institute of Advanced Industrial Science and Technology (AIST).",
                "Table 1 shows the computing resources used for the grid of the present study.",
                "The University of Tsukuba and AIST are connected by a 1-Gbps Tsukuba WAN, and the other PC clusters are connected by SINET, which is wide-area network dedicated to academic research in Japan.",
                "Table 2 shows the performance of the measured network between the master node of the Dennis cluster and the master node of each PC cluster in the grid testbed.",
                "The communication throughput was measured using netperf, and the round-trip time was measured by ping. 4.2 Performance of CONFLEX-G In all of the CONFLEX-G experiments, the client program was executed on the master node of the Dennis cluster at the University of Tsukuba.",
                "The built-in Round-Robin scheduler of OmniRPC was used as a job scheduler.",
                "SSH was used for an authentication system, the OminRPCs MXIO, which relays the I/O communication between client program and worker programs by port forwarding of SSH was, not used.",
                "Note that one worker program is assigned and performed on one CPU of the calculation node in a PC cluster.",
                "That is, the number of workers is equal to the number of CPUs.",
                "These programs were compiled by the Intel Fortran Compiler 7.0 and gcc 2.95.",
                "MPICH, Version 1.2.5, was used to compare the performance between CONFLEX MPI and CONFLEX-G.",
                "In order to demonstrate the usability of the OmniRPC facility of the AIM, we implemented another version of CONFLEX-G which did not utilize the OmniRPC facility.",
                "The worker program in this version of CONFLEXG must be initialized at each RPC because the worker does not hold the previous data set.",
                "In order to examine the performance of CONFLEX-G, we selected two peptides and two small protein as test molecules: • N-acetyl tetra-alanine methylester (AlaX04) • N-acetyl hexdeca-alanine methylester (AlaX16) • TRP-cage miniprotein construct TC5B (1L2Y) • PTH receptor N-terminus fragment (1BL1) Table 3 lists the characteristics of these sample molecules.",
                "The column trial structure / loops in this table shows the Figure 7: Performances of CONFLEX-G, CONFLEX MPI and Original CONFLEX in the Dennis cluster.",
                "Figure 8: Speedup ratio, which is based on the elapsed time of CONFLEX-G using one worker in the Dennis cluster.",
                "Figure 9: Performance of CONFLEX-G with and without the OmniRPC facility of automatic initializable module for AlaX16. 159 Table 3: Characteristics of molecules and data transmission for optimizing trial molecular structures in each molecular code.",
                "Molecular # of # of total trial trial structure Data transfer to Data transfer code atoms structures / loop initialize a worker / trial structure AlaX04 181 360 45 2033KB 17.00KB AlaX16 191 480 160 2063KB 18.14KB 1L2Y 315 331 331 2099KB 29.58KB 1BL1 519 519 519 2150KB 48.67KB Table 4: Elapsed search time for the molecular conformation of AlaX04.",
                "Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (sequential) 1 320.0 1786.21 4.96 1786.21 1.00 Toyo (16) 16 20.0 1497.08 4.16 196.32 9.10 Dennis (28) 28 11.4 1905.51 5.29 97.00 18.41 Alice (36) 36 8.9 2055.25 5.71 87.09 20.51 Ume (56) 56 5.7 2196.77 6.10 120.69 14.80 Dennis (28) + Toyo (16) 44 7.3 1630.09 4.53 162.35 11.00 Alice (36) + Toyo (16) 52 6.2 1774.53 4.93 178.24 10.02 Dennis (28) + Alice (36) 64 5.0 1999.02 5.55 81.52 21.91 Dennis (28) + Ume (56) 84 3.8 2085.84 5.79 92.22 19.37 Alice (36) + Ume (56) 92 3.5 2120.87 5.89 101.25 17.64 Table 5: Elapsed search time for the molecular conformation of AlaX16 Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (1) 1 480.0 74027.80 154.22 74027.80 1.00 Toyo (16) 16 30.0 70414.21 146.70 4699.15 15.75 Dennis (28) 28 17.1 74027.80 154.22 3375.60 21.93 Alice (36) 36 13.3 90047.27 187.60 3260.41 22.71 Ume (56) 56 8.6 123399.38 257.08 2913.63 25.41 Dennis (28) + Toyo (16) 44 10.9 76747.74 159.89 2762.10 26.80 Alice (36) + Toyo (16) 52 9.2 82700.44 172.29 2246.73 32.95 Dennis (28) + Alice (36) 64 7.5 87571.30 182.44 2051.50 36.08 Toyo (16) + Ume (56) 72 6.7 109671.32 228.48 2617.85 28.28 Dennis (28) + Ume (56) 84 5.7 102817.90 214.20 2478.93 29.86 Dennis(28)+Ume(56)+Toyo(16) 100 4.8 98238.07 204.66 2478.93 29.86 Table 6: Elapsed time of the search for the trial structure of 1L2Y.",
                "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 331.0 867 286,967 79.71 1.00 Toyo MPI (16) 16 20.7 867 18,696 5.19 15.34 Dennis (28) 28 11.8 803 14,101 3.91 20.35 Dennis (28) + Ume(56) 84 3.9 1,064 8,316 2.31 34.50 Table 7: Elapsed time of the search for the trial structure of 1BL1.",
                "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 519.0 3,646 1892,210 525.61 1.00 Toyo MPI (16) 16 32.4 3,646 120,028 33.34 15.76 Dennis (28) 28 18.5 3,154 61,803 17.16 30.61 Dennis (28) + Ume (56) 84 6.1 4,497 33,502 9.30 56.48 160 number of trial structures generated in each iteration, indicating the degree of parallelism.",
                "Figure 3 also summarizes the amount of data transmission required for initialization of a worker program and for optimization of each trial structure.",
                "Note that the amount of data transmission, which is required in order to initialize a worker program and optimize a trial structure in the MPI version of CONFLEX, is equal to that of CONFLEX-G. We used an improvement version of MM2 force field to assign a potential energy function to various geometric properties of a group of atoms. 4.2.1 Performance in a Local Cluster We first compared the performance of CONFLEX-G, the MPI version of CONFLEX, and the original sequential version of CONFLEX-G using a local cluster.",
                "We investigated performance by varying the number of workers using the Dennis cluster.",
                "We chose AlaX04 as a test molecule for this experiment.",
                "Figure 7 compares the results for the CONFLEX MPI and CONFLEX-G in a local PC cluster.",
                "The result of this experiment shows that CONFLEX-G can reduce the execution time as the number of workers increases, as in the MPI version of CONFLEX.",
                "We found that CONFLEX-G achieved efficiencies comparable to the MPI version.",
                "With 28 workers, CONFLEX-G achieved an 18.00 times speedup compared to the CONFLEX sequential version.",
                "The performance of CONFLEX-G without the OmniRPC AIM facility is worse than that of CONFLEXG using the facility, based on the increase in the number of workers.",
                "This indicates that the OmniRPC AIM enables the worker to calculate efficiently without other calculations, such initialization or invocation of worker programs.",
                "As the number of workers is increased, the performance of CONFLEX-G is a slightly lower than that of the MPI version.",
                "This performance degradation is caused by differences in the worker initialization processes of CONFLEX-G and CONFLEX MPI.",
                "In the case of CONFLEX MPI, all workers are initialized in advance of the optimization phase.",
                "In the case of OminRPC, the worker is invoked on-demand when the RPC call is actually issued.",
                "Therefore, the initialization incurs this overhead.",
                "Since the objective of CONFLEX-G is to explore the conformations of large bio-molecules, the number of trial structures and the time to optimize the trial structure might be large.",
                "In such cases, the overhead to invoke and initialize the worker program can be small compared to the entire elapsed time. 4.2.2 Performance for Peptides in The Grid Testbed First, the sample molecules (AlaX04 and AlaX16) were used to examine the CONFLEX-G performance in a grid environment.",
                "Figure 8 shows the speedup achieved by using multiple clusters compared to using one worker in the Dennis cluster.",
                "Detailed results are shown in Table 4 and Table 5.",
                "In both cases, the best performance was obtained using 64 workers of the combination of the Dennis and Alice clusters.",
                "CONFLEX-G achieved a maximum speedup of 36.08 times for AlaX04 and a maximum speedup of 21.91 times for AlaX16.",
                "In the case of AlaX04, the performance is improved only when the network performance between clusters is high.",
                "However, even if two or more clusters are used in a wide area network environment, the performance improvement was slight because the optimization time of one trial structure generated from AlaX04, a small molecule, is short.",
                "In addition, the overhead required for invocation of a worker program and network data transmission consume a large portion of the remaining processing time.",
                "In particular, the data transmission required for the initialization of a worker program is 2 MB.",
                "In the case of Toyo cluster, where the network performance between the client program and the worker programs is poor, the time of data transmission to the worker program required approximately 6.7 seconds.",
                "Since this transmission time was longer than the processing time of one structure optimization in CONFLEX-G, most of the time was spent for this data transmission.",
                "Therefore, even if CONFLEX-G uses a large number of calculation nodes in a wide area network environment, the benefit of using a grid resource is not obtained.",
                "In the case of AlaX16, CONFLEX-G achieved a speedup by using two or more PC clusters in our grid testbed.",
                "This was because the calculation time on the worker program was long and the overhead, such as network latency and the invoking of worker programs, became relatively small and could be hidden.",
                "The best performance was obtained using 64 workers in the Dennis and Alice clusters.",
                "In the case of AaX16, the achieved performance was a speedup of 36.08 times.",
                "Figure 9 reveals the effect of using the facility of the OmniRPC AIM on CONFLEX-G performance.",
                "In most cases, CONFLEX-G with the OmniRPC AIM facility archived better performance than CONFLEX-G without the facility.",
                "In particular, the OmniRPC AIM facility was advantageous when using two clusters connected by a low-performance network.",
                "The results indicate that the OmniRPC AIM facility can improve performance in the grid environment. 4.2.3 PerformanceforSmallProteininTheGridTestbed Finally, we explored the molecular conformation using CONFLEX-G for large molecules.",
                "In a grid environment, this experiment was conducted using the Dennis and Ume clusters.",
                "In this experiment, we used two proteins, 1L2Y and 1BL1.",
                "Table 6 and Table 7 show the performance of CONFLEX-G in the grid environment and that of CONFLEX MPI in the Toyo cluster, respectively.",
                "The speedups in these tables were computed respectively based on the performance of one worker and 16 workers of the Toyo cluster using CONFLEX MPI.",
                "CONFLEX-G with 84 workers in Dennis and Ume clusters obtained maximum speedups of 56.5 times for 1L2Y and 34.5 times for 1L2Y.",
                "Since the calculation time for structure optimization required a great deal of time, the ratio of overhead, including tasks such as the invocation of a worker program and data transmission for initialization, became very small, so that the performance of CONFLEX-G was improved.",
                "We found that the load imbalance in the processing time of optimization for each trial structure caused performance degradation.",
                "When we obtained the best performance for 1L2Y using the Dennis and Ume clusters, the time for each structure optimization varied from 190 to 27,887 seconds, and the ratio between the longest and shortest times was 13.4.",
                "For 1BL1, the ratio of minimum time over maximum time was 190.",
                "In addition, in order that the worker program wait until the completion of optimization of all trial structures, all worker programs were found to wait in an idle state for approximately 6 hours.",
                "This has caused the performance degradation of CONFLEX-G. 161 4.3 Discussion In this subsection, we discuss the improvement of the performance reflected in our experiments.",
                "Exploiting parallelism - In order to exploit more computational resources, it is necessary to increase the degree of parallelism.",
                "In this experiment, the degree of parallelism was not so large in the case of the sample molecules.",
                "When using a set of over 500 computing nodes for 1BL1, the number of one trial structures assigned to each worker will be only one or two.",
                "If over 100 trial structures are assigned to each worker program, calculation can be performed more efficiently due to the reduction of the overhead for worker invocation and initialization via the facility of the OmniRPC AIM.",
                "One idea for increasing parallelism is to overlap the execution of two or more sets of trial structures.",
                "In the current algorithm, a set of trial structures is generated from one initial structure and computed until optimizations for all structures in this set are calculated.",
                "Furthermore, this will help to improve load imbalance.",
                "By having other sets of trial structures overlap, even if some optimizations require a long time, the optimization for the structures in other sets can be executed to compensate for the idle workers for other optimizations.",
                "It is however unclear how such modification of the algorithm might affect the quality of the final results in terms of a conformation search.",
                "Improvement in load imbalance when optimizing each trial structure - Table 8 lists the statistics for optimization times of trial structures generated for each sample molecule measured using 28 workers in the Dennis cluster.",
                "When two or more sets of PC clusters are used, the speedup in performance is hampered by the load imbalance of the optimization of the trial structures.",
                "The longest time for optimizing a trial structure was nearly 24 times longer than the shortest time.",
                "Furthermore, other workers must wait until the longest job has Finished, so that the entire execution time cannot be reduced.",
                "When CONFLEX-G searched the conformers of 1BL1 by the Dennis cluster, the longest calculation time of the trial structure optimization made up approximately 80% of the elapsed time.",
                "Therefore, there are two possible solutions for the load Imbalance. • It is necessary to refine the algorithm used to generate the trial structure, which suppresses the time variation for optimizing a trial structure in CONFLEX.",
                "This enables CONFLEX-G to achieve high-throughput by using many computer resources. • One of the solutions is to overlap the executions for two or more sets of trial structures.",
                "In the current algorithms, a set of trial structures is generated from one initial structure and calculation continues until all structures in this set are calculated.",
                "By having other sets of trial structures, even if a structure search takes a long time, a job can be executed in order to compensate the load imbalance by other jobs.",
                "However, how such modification of the algorithms might affect the efficiency is not clear. • In this experiment, we used a simple build-in roundrobbin scheduler of OmniRPC, which is necessary in order to apply the scheduler that allocates structures with long optimization times to a high-performance Table 8: Statistics of elapsed time of trial structure optimization using 28 workers in the Dennis cluster.",
                "Molecular Min Max Average Variance code (s) (s) (s) AlaX04 2.0 11.3 5.3 3 AlaX16 47.6 920.0 154.2 5404 1L2Y 114.2 13331.4 803.2 636782 1BL1 121.0 29641.8 3153.5 2734811 node and structures with short optimization times to low-performance nodes.",
                "In general, however, it might be difficult to predict the time required for trial structure optimization.",
                "Parallelization of the worker program for speedup to optimize a trial structure - In the current implementation, we do not parallelize the worker program.",
                "In order to speed up trial structures, hybrid programming using OmniRPC and OpenMP in an SMP (Symmetric Multiple Processor) machine may be one of the alternative methods by which to improve overall performance. 5.",
                "RELATED WORK Recently, an algorithm has been developed that solves the problems of parallelization and communication in poorly connected processors to be used for simulation.",
                "The Folding@home project[13] simulates timescales thousands to millions of times longer than previously achieved.",
                "This has allowed us to simulate folding for the first time and to directly examine folding related diseases.",
                "SETI@home[14] is a program to search for alien life by analyzing radio telescope signals using Fourier transform radio telescope data from telescopes from different sites.",
                "SETI@home tackles immensely parallel problems, in which calculation can easily be divided among several computers.",
                "Radio telescope data chunks can easily be assigned to different computers.",
                "Most of these efforts explicitly develop a docking application as a parallel application using a special purpose parallel programming language and middleware, such as MPI, which requires development skills and effort.",
                "However, the skills and effort required to develop a grid application may not be required for OmniRPC.",
                "Nimrod/G[15] is a tool for distributed parametric modeling and implements a parallel task farm for simulations that require several varying input parameters.",
                "Nimrod incorporates a distributed scheduling component that can manage the scheduling of individual experiments to idle computers in a local area network.",
                "Nimrod has been applied to applications including bio-informatics, operations research, and molecular modeling for drug design.",
                "NetSolve[8] is an RPC facility similar to OmniRPC and Ninf, providing a similar programming interface and automatic load balancing mechanism.",
                "Ninf-G[7] is a grid-enabled implementation of Ninf and provides a GridRPC[10] system that uses LDAP to manage the database of remote executables, but does not support clusters involving private IP addresses or addresses inside a firewall.",
                "Matsuoka et al. [16] has also discussed several design issues related to grid RPC systems. 162 6.",
                "CONCLUSIONS AND FUTURE WORK We have designed and implemented CONFLEX-G using OmniRPC.",
                "We reported its performance in a grid testbed of several geographically distributed PC clusters.",
                "In order to explore the conformation of large bio-molecules, CONFLEXG was used to generate trial structures of the molecules, and allocate jobs to optimize them by molecular mechanics in the grid.",
                "OmniRPC provides a restricted persistence model so that the module is automatically initialized at invocation by calling the <br>initialization procedure</br>.",
                "This can eliminate unnecessary communication and the initialization at each call in CONFLEX-G. CONFLEX-G can achieves performance comparable to CONFLEX MPI and exploits more computing resources by allowing the use of multiple PC clusters in the grid.",
                "The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times for the 1BL1 molecule, where the molecule consists of a large number of atoms and each trial structure optimization requires a great deal of time.",
                "The load imbalance of the trial structure optimizations may cause performance degradation.",
                "We need to refine the algorithm used to generate the trial structure in order to improve the load balance optimization for trial structures in CONFLEX.",
                "Future studies will include development of deployment tools and an examination of fault tolerance.",
                "In the current OmniRPC, the registration of an execution program to remote hosts and deployments of worker programs are manually set.",
                "Deployment tools will be required as the number of remote hosts is increased.",
                "In grid environments in which the environment changes dynamically, it is also necessary to support fault tolerance.",
                "This feature is especially important in large-scale applications which require lengthy calculation in a grid environment.",
                "We plan to refine the conformational optimization algorithm in CONFLEX to explore the conformation space search of larger bio-molecules such HIV protease using up to 1000 workers in a grid environment. 7.",
                "ACKNOWLEDGMENTS This research was supported in part by a Grant-in-Aid from the Ministry of Education, Culture, Sports, Science and Technology in Japan, No. 14019011, 2002, and as part of the Program of Research and Development for Applying Advanced Computational Science and Technology by the Japan Science and Technology Corporation (Research on the grid computing platform for drug design).",
                "We would like to thank grid technology research center, AIST, Japan for providing computing resources for our experiment. 8.",
                "REFERENCES [1] H. Goto and E. Osawa.",
                "An efficient algorithm for searching low-energy conformers of cyclic and acyclic molecules.",
                "J. Chem.",
                "Soc., Perkin Trans, 2:187-198, 1993. [2] M. Sato, T. Boku, and D. Takahashi.",
                "OmniRPC: a Grid RPC System for Parallel Programming in Cluster and Grid Environment.",
                "In Proc. of CCGrid2003, pages 219-229, 2003. [3] M. Sato, M. Hirano, Y. Tanaka, and S. Sekiguchi.",
                "OmniRPC: a Grid RPC facility for Cluster and Global Computing in OpenMP.",
                "In Proc. of Workshop on OpenMP Applications and Tools 2001(LNCS 2104 ), pages 130-135, 2001. [4] OmniRPC Project. http://www.omni.hpcc.jp/omnirpc/. [5] M. Sato, H. Nakada, S. Sekiguchi, S. Matsuoka, U. Nagashima, and H. Takagi.",
                "Ninf: A Network Based Information Library for Global World-Wide Computing Infrastructure.",
                "In HPCN Europe, pages 491-502, 1997. [6] Ninf Project. http://ninf.apgrid.org/. [7] Y. Tanaka, H. Nakada, S. Sekiguchi, T. Suzumura, and S. Matsuoka.",
                "Ninf-G: A Reference Implementation of RPC-based Programming Middleware for Grid Computing .",
                "Journal of Grid Computing, 1(1):41-51, 2003. [8] D. Arnold, S. Agrawal, S. Blackford, J. Dongarra, M. Miller, K. Seymour, K. Sagi, Z. Shi, and S. Vadhiyar.",
                "Users Guide to NetSolve V1.4.1.",
                "Innovative Computing Dept.",
                "Technical Report ICL-UT-02-05, University of Tennessee, Knoxville, TN, June 2002. [9] Object management group. http://www.omg.org/. [10] K. Seymour, H. Nakada, S. Matsuoka, J. Dongarra, C. Lee, and H. Casanova.",
                "GridRPC: A Remote Procedure Call API for Grid Computing. [11] H.Goto, T. Takahashi, Y. Takata, K. Ohta, and U Nagashima.",
                "Conflex: Conformational behaviors of polypeptides as predicted by a conformational space search.",
                "In Nanotech2003, volume 1, pages 32-35, 2003. [12] I.",
                "Foster and C. Kesselman.",
                "Globus: A metacomputing infrastructure toolkit.",
                "The International Journal of Supercomputer Applications and High Performanc e Computing, 11(2):115-128, Summer 1997. [13] Stefan M. Larson, Christopher D. Snow, Michael Shirts, and Vijay S. Pande.",
                "Folding@home and genome@home: Using distributed computing to tackle prev iously intractable problems in computational biology.",
                "Computational Genomics, 2002. [14] seti@home project. http://setiathome.ssl.berkeley.edu/. [15] R. Buyya, K. Branson, J. Giddy, and D. Abramson.",
                "The virtual laboratory: a toolset to enable distributed molecular modelling for drug design on the world-wide grid.",
                "Concurrency and Computation: Practice and Experience, 15(1):1-25, January 2003. [16] S. Matsuoka, H. Nakada, M. Sato, and S. Sekiguchi.",
                "Design issues of Network Enabled Server Systems for the Grid.",
                "In Proc. of GRID 2000 (LNCS 1971), pages 4-17, 2000. 163"
            ],
            "original_annotated_samples": [
                "In this model, when the <br>initialization procedure</br> is defined in the RPC module, the module is automatically initialized at the time of invocation by calling the <br>initialization procedure</br>.",
                "The user can define an <br>initialization procedure</br> in the remote executable in order to send and store data automatically in advance of actual remote procedure calls.",
                "Since the remote executable may accept requests for subsequent calls, the data set which has been set by the <br>initialization procedure</br> can be re-used.",
                "If the <br>initialization procedure</br> is defined in the module, the module is automatically initialized at invocation by calling the <br>initialization procedure</br>.",
                "OmniRPC provides a restricted persistence model so that the module is automatically initialized at invocation by calling the <br>initialization procedure</br>."
            ],
            "translated_annotated_samples": [
                "En este modelo, cuando el <br>procedimiento de inicialización</br> está definido en el módulo RPC, el módulo se inicializa automáticamente en el momento de la invocación llamando al <br>procedimiento de inicialización</br>.",
                "El usuario puede definir un <br>procedimiento de inicialización</br> en el ejecutable remoto para enviar y almacenar datos automáticamente antes de las llamadas reales al procedimiento remoto.",
                "Dado que el ejecutable remoto puede aceptar solicitudes para llamadas posteriores, el conjunto de datos que ha sido establecido por el <br>procedimiento de inicialización</br> puede ser reutilizado.",
                "Si el <br>procedimiento de inicialización</br> está definido en el módulo, el módulo se inicializa automáticamente al invocarlo llamando al <br>procedimiento de inicialización</br>.",
                "OmniRPC proporciona un modelo de persistencia restringido para que el módulo se inicialice automáticamente al invocarse llamando al <br>procedimiento de inicialización</br>."
            ],
            "translated_text": "Implementación y Evaluación del Rendimiento de CONFLEX-G: Programa de Búsqueda de Espacio Conformacional Molecular Habilitado para Grid con OmniRPC. Hemos implementado CONFLEX-G utilizando un sistema de RPC en malla llamado OmniRPC. En este artículo, informamos sobre el rendimiento de CONFLEX-G en un banco de pruebas en red de varios clústeres de PC distribuidos geográficamente. Para explorar muchas conformaciones de grandes biomoléculas, CONFLEX-G genera estructuras de prueba de las moléculas y asigna trabajos para optimizar una estructura de prueba con un método confiable de mecánica molecular en la cuadrícula. OmniRPC proporciona un modelo de persistencia restringido para respaldar las aplicaciones de búsqueda paramétrica. En este modelo, cuando el <br>procedimiento de inicialización</br> está definido en el módulo RPC, el módulo se inicializa automáticamente en el momento de la invocación llamando al <br>procedimiento de inicialización</br>. Esto puede eliminar la comunicación y la inicialización innecesarias en cada llamada en CONFLEX-G. CONFLEXG puede lograr un rendimiento comparable al de CONFLEX MPI y puede aprovechar más recursos informáticos al permitir el uso de un clúster de múltiples clústeres en la cuadrícula. El resultado experimental muestra que CONFLEX-G logró una aceleración de 56.5 veces en el caso de la molécula 1BL1, donde la molécula consta de un gran número de átomos y cada optimización de la estructura de prueba requiere un tiempo significativo. El desequilibrio de carga en el tiempo de optimización de la estructura de prueba también puede causar degradación del rendimiento. Categorías y Descriptores de Asignaturas C.2.4 [Organización de Sistemas Informáticos]: RED DE COMUNICACIÓN DE COMPUTADORAS-Sistemas Distribuidos; J.2.4 [Aplicaciones Informáticas]: CIENCIAS FÍSICAS E INGENIERÍA Términos Generales Diseño, Rendimiento 1. INTRODUCCIÓN La elucidación de las conformaciones estables y el proceso de plegamiento de las proteínas es uno de los objetivos más fundamentales y desafiantes en las ciencias de la vida. Si bien algunas de las estructuras secundarias más comunes (por ejemplo, ciertos tipos de hélice, la lámina beta y la hélice) son bien conocidas, se requiere un análisis preciso de los miles de conformaciones químicamente importantes y un análisis de orden de pico-segundo de sus interconversiones conformacionales a través de los estados de transición en la superficie de energía potencial para la investigación de orden de microsegundo del proceso de plegamiento hacia la formación de la estructura terciaria. Recientemente, el concepto de la red computacional ha comenzado a atraer un interés significativo en el campo de la computación de alto rendimiento en red. Los rápidos avances en la tecnología e infraestructura de redes de área amplia han hecho posible construir entornos de computación distribuida a gran escala y alto rendimiento, o redes computacionales, que proporcionan acceso confiable, consistente y generalizado a enormes recursos computacionales. CONFLEX es uno de los programas de búsqueda de espacio conformacional más eficientes y confiables. Hemos aplicado este programa 154 a la paralelización utilizando computación global. El rendimiento del CONFLEX paralelizado permite explorar la región de energía más baja del espacio conformacional de péptidos pequeños en un tiempo transcurrido disponible utilizando un clúster de PC local. Dado que la optimización de la estructura de prueba en CONFLEX se calcula a través de la mecánica molecular, la búsqueda del espacio conformacional se puede realizar rápidamente en comparación con la que utiliza cálculos de orbitales moleculares. Aunque se utilizó la versión paralelizada de CONFLEX para calcular de forma paralela la optimización de la estructura, que representa más del 90% del procesamiento en la búsqueda de conformaciones moleculares, no se pudo lograr una mejora suficiente en la aceleración solo con este método. Por lo tanto, para polímeros de alto peso molecular de organismos vivos, como la proteasa del VIH, el uso de un solo clúster de PC es insuficiente debido a la necesidad de optimizar una gran cantidad de estructuras de prueba. Esto requiere los vastos recursos informáticos de un entorno de computación en malla. En este artículo, describimos CONFLEX-G, un programa de búsqueda conformacional molecular habilitado para grid, utilizando OmniRPC y reportamos su rendimiento en un grid de varios clusters de PC distribuidos geográficamente. El prototipo CONFLEX-G asigna la optimización de las estructuras de cálculo de prueba, que es una tarea muy consumidora de tiempo, a nodos trabajadores en el entorno de la red para obtener un alto rendimiento. Además, comparamos el rendimiento de CONFLEX-G en un clúster de PC local con el de un banco de pruebas en red. OmniRPC[2, 3, 4] es una implementación segura para hilos de Ninf RPC[5, 6], que es una facilidad de RPC de cuadrícula para la computación en entornos de cuadrícula. Varios sistemas adoptan el concepto de la RPC como el modelo básico para la computación en entornos de rejilla, incluyendo Ninf-G[7], NetSolve[8] y CORBA[9]. El sistema RPCstyle proporciona una interfaz de programación fácil de usar e intuitiva, que permite a los usuarios del sistema de cuadrícula crear fácilmente aplicaciones habilitadas para la cuadrícula. Para apoyar la programación paralela, un cliente de RPC puede emitir solicitudes de llamada asincrónicas a un ordenador remoto diferente para aprovechar el paralelismo en toda la red a través de OmniRPC. En este artículo, proponemos el modelo de persistencia OmniRPC para un sistema de RPC de Grid y demostramos su efectividad. Para apoyar una aplicación típica para un entorno de cuadrícula, como una aplicación de búsqueda paramétrica, en la que la misma función se ejecuta con diferentes parámetros de entrada en el mismo conjunto de datos. En el sistema GridRPC actual[10], el conjunto de datos establecido por la llamada anterior no puede ser utilizado por llamadas posteriores. En el sistema OmniRPC, una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado y su estado inicializado para llamadas posteriores a las mismas funciones remotas con el fin de eliminar el costo de invocación de cada llamada. Este documento demuestra que CONFLEX-G es capaz de aprovechar los enormes recursos informáticos de un entorno de grid y buscar conformadores moleculares a gran escala. Demostramos CONFLEX-G en nuestra plataforma de pruebas en red utilizando la proteína real como molécula de muestra. La facilidad OmniRPC del módulo inicializable automático (AIM) permite al sistema calcular eficientemente numerosos conformeros. Además, al utilizar OmniRPC, el usuario puede paralelizar en cuadrícula la aplicación existente y pasar del clúster al entorno de cuadrícula sin modificar el código del programa y compilar el programa. Además, el usuario puede construir fácilmente un entorno de red privada. El resto de este documento está organizado de la siguiente manera. Se presenta una visión general de la Base de Datos de Conformaciones de Estructuras Iniciales, la Perturbación Local, la Optimización de la Geometría, la Comparación y el Registro. Figura 1: Algoritmo de búsqueda de espacio conformacional en el CONFLEX original. El sistema CONFLEX se describe en la Sección 2, y la implementación y diseño de CONFLEX-G se detallan en la Sección 3. Informamos los resultados experimentales obtenidos utilizando CONFLEX-G y discutimos su rendimiento en la Sección 4. En la Sección 6, presentamos conclusiones y discutimos temas para estudios futuros. 2. CONFLEX es un programa eficiente de búsqueda de espacio conformacional, que puede buscar predominantemente y exhaustivamente los conformeros en la región de energía más baja. Las aplicaciones de CONFLEX incluyen la elucidación de la reactividad y selectividad de fármacos y posibles materiales medicinales con respecto a su flexibilidad conformacional. 2.1 Algoritmo de Búsqueda de Espacio Conformacional La estrategia básica de CONFLEX es una búsqueda exhaustiva solo de las regiones de baja energía. El CONFLEX original realiza los siguientes cuatro pasos principales: 1. Selección de una estructura inicial entre los conformeros únicos previamente descubiertos y ordenados en una base de datos conformacional. (Una estructura de entrada se utiliza como la primera estructura inicial al comienzo de una ejecución de búsqueda solamente.) 2. Generación de estructuras de prueba mediante perturbaciones locales a la estructura inicial seleccionada. 3. Optimización de geometría para las nuevas estructuras de prueba generadas. 4. Comparación de las estructuras optimizadas con éxito (ensayo) con los otros conformeros almacenados en una base de datos de conformaciones, y preservación de los conformeros únicos recién descubiertos en la base de datos. La Figura 1 muestra el esquema de CONFLEX, el algoritmo original de búsqueda de espacio conformacional. Estos procedimientos incorporan dos estrategias únicas. La Figura 2 muestra las estrategias para generar perturbaciones locales en CONFLEX. La primera estrategia implica tanto el aleteo de las esquinas como el volteo de los bordes para los átomos del anillo y la rotación paso a paso para las cadenas laterales o cadenas del esqueleto. Estos métodos proporcionan una forma altamente eficiente de producir varias estructuras de prueba buenas. Estas perturbaciones pueden considerarse como una imitación de 155 Rotación Escalonada de Esquina de Solapa de Borde de Giro Figura 2: Estrategias utilizadas para generar las perturbaciones locales, un paso de cruce de barrera en el proceso elemental de la interconversión conformacional térmica. De hecho, las perturbaciones de una estructura inicial corresponden al rendimiento preciso alrededor del espacio de la estructura inicial debido a la localización y debilidad de la perturbación. La regla de selección de la estructura inicial, la regla LowestConformer-First, es la segunda estrategia para dirigir la búsqueda de conformaciones ampliada a las regiones de baja energía. La estructura inicial se selecciona como el conjunto de conformaciones de menor energía almacenadas en la base de datos de conformaciones. Esta regla es efectiva para desplazarse hacia abajo en el espacio de búsqueda hacia regiones de menor energía, como el agua de un arroyo que fluye hacia un embalse vacío, llenando depresiones locales en el camino. Por lo tanto, estos procedimientos tácticos de la búsqueda CONFLEX se conocen como el Algoritmo de Llenado de Reservorio. Para permanecer en la región de baja energía y realizar una búsqueda exhaustiva, el límite de búsqueda (SEL), que determina la energía máxima de las estructuras iniciales, está predefinido. El aumento gradual de SEL permite buscar solo los conformeros de baja energía y evita desviarse hacia regiones de energía innecesariamente alta. 2.2 Paralelización de CONFLEX para clúster Para su aplicación en más de 100 átomos, CONFLEX fue mejorado utilizando técnicas de computación paralela de alto rendimiento. En el algoritmo de búsqueda CONFLEX, los procedimientos de optimización de geometría siempre ocupan el 95% del tiempo transcurrido durante la ejecución de la búsqueda. Por lo tanto, paralelizamos esta optimización utilizando la técnica de paralelización Maestro/Trabajador. Modificamos los procedimientos de búsqueda de la siguiente manera. Después de que se generan las estructuras de prueba (paso 2), se almacenan temporalmente en un grupo de tareas en el nodo maestro. Entonces, cada nodo trabajador recibe dinámicamente una estructura de prueba del nodo maestro. Después de que se complete una optimización en un nodo de trabajador, este recibe inmediatamente otra estructura de prueba. Cuando todas las estructuras de prueba relacionadas con una estructura inicial dada están optimizadas, solo se utiliza el procedimiento principal para la comparación. Al paralelizar CONFLEX, la aceleración de la búsqueda de conformadores moleculares obtenida es la reportada en[11]. 3. CONFLEX-G Originalmente, CONFLEX estaba destinado a ser utilizado para explorar los conformeros de las grandes biomoléculas, como la proteasa del VIH. En tales moléculas, el número de estructuras de prueba aumenta y el tiempo requerido para la optimización de la Selección de RPC de Estructuras Iniciales Conformaciones de la Base de Datos de Perturbación Local Comparación y Registro del Cliente Programa Cliente Grupo de Tareas de Optimización Geométrica RPC Entorno de Rejilla RPC Cluster B Cluster A Cluster C Estructura de prueba Estructura de prueba Estructura de prueba Estructura de prueba Figura 3: Procedimiento de CONFLEX-G. agente rexrex rex Cliente jones.tsukuba.ac.jp hpc-serv.hpcc.jp hpc1 hpc2 hpc3 Invocación del agente Comunicación de la red Figura 4: Visión general del sistema OmniRPC para el clúster remoto con una dirección IP privada. la estructura de prueba se vuelve inmensa. Implementamos la versión paralelizada de CONFLEX, la cual no puede tratar tales moléculas utilizando solo un clúster de PC local. Para aprovechar los vastos recursos informáticos de un entorno de grid, diseñamos e implementamos CONFLEX-G, que es una versión habilitada para grid de CONFLEX, con el sistema OmniRPC. CONFLEX-G asigna trabajos para optimizar una estructura de prueba a los nodos computacionales de cada clúster en el entorno de la red. La Figura 3 muestra el proceso de CONFLEX-G. Los programas de los trabajadores se inicializan mediante el método de inicialización, que es proporcionado por la instalación de OmniRPC AIM en la invocación del trabajador. En cada llamada RPC, el estado inicializado se reutiliza en el host remoto. En otras palabras, el programa cliente puede eliminar la inicialización para cada llamada RPC, y por lo tanto optimizar eficientemente las estructuras de prueba. 3.1 El sistema OmniRPC OmniRPC es un sistema de RPC en malla que permite una programación paralela sin problemas desde un clúster de PC hasta un entorno de malla. OmniRPC hereda su API y arquitectura básica de Ninf. Un cliente y los hosts computacionales remotos que ejecutan los procedimientos remotos pueden estar conectados a través de una red. Las bibliotecas remotas se implementan como un programa ejecutable que contiene una rutina de soporte de red como su rutina principal. Llamamos a este programa ejecutable un programa ejecutable remoto (rex). Cuando el programa cliente OmniRPC se inicia, la función de inicialización del sistema OmniRPC invoca el programa agente OmniRPC omrpc-agent en los hosts remotos listados en el archivo de hosts. Para invocar al agente, el usuario puede utilizar el comando de shell remoto rsh en una red de área local, la API de GRAM (Gestor de Asignación de Recursos Globus) del kit de herramientas Globus 156 en un entorno de grid, o el comando de shell remoto seguro ssh. El usuario puede cambiar las configuraciones solo modificando el archivo de host. OmniRpcCall es una interfaz de programación de cliente simple para llamar a funciones remotas. Cuando OmniRpcCall realiza una llamada a un procedimiento remoto, la llamada se asigna a un host remoto apropiado. Cuando el cliente emite la solicitud de RPC, solicita que el agente en el host seleccionado envíe el trabajo del ejecutable remoto con el programador de trabajos local especificado en el archivo del host. Si no se especifica el programador de tareas, el agente ejecuta el ejecutable remoto en el mismo nodo mediante la llamada al sistema fork. El cliente envía los datos de los argumentos de entrada al ejecutable remoto invocado, y recibe los resultados al regreso de la función remota. Una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado para llamadas RPC posteriores con el fin de eliminar el costo de invocar nuevamente el mismo ejecutable remoto. Cuando el agente y los ejecutables remotos son invocados, los programas remotos obtienen la dirección y el puerto del cliente de la lista de argumentos y se conectan de vuelta al cliente mediante TCP/IP directo o Globus-IO para la transmisión de datos. Debido a que el sistema OmniRPC no utiliza puertos de servicio fijos, el programa cliente asigna puertos no utilizados dinámicamente para esperar la conexión de los ejecutables remotos. Esto evita posibles problemas de seguridad y permite al usuario instalar el sistema OmniRPC sin necesidad de contar con una cuenta privilegiada. Aquí, un recurso de red típico se considera como un grupo de clústeres de PC distribuidos geográficamente. Para los clústeres de PC en una red privada, un proceso agente OmniRPC en el host del servidor funciona como un proxy para relé de comunicaciones entre el cliente y los ejecutables remotos mediante la multiplexación de las comunicaciones utilizando una única conexión. Esta característica, llamada multiplex IO (MXIO), permite a un único cliente utilizar hasta 1,000 hosts de computación remota. Cuando el clúster de PC está dentro de un firewall, el reenvío de puertos de SSH permite que el nodo se comunique con el exterior a través de MXIO. La Figura 4 muestra la descripción general del sistema OmniRPC para un clúster remoto con una dirección IP privada. Para la programación en paralelo, el programador puede utilizar llamadas a procedimientos remotos asíncronos, lo que permite al cliente emitir varias solicitudes mientras continúa con otras computaciones. Las solicitudes se envían a diferentes hosts remotos para ser ejecutadas en paralelo, y el cliente espera o consulta la solicitud completada. En un modelo de programación con llamadas a procedimientos remotos asíncronos, el programador debe manejar las solicitudes pendientes de forma explícita. Debido a que OmniRPC es un sistema seguro para hilos, puede haber varios llamados a procedimientos remotos pendientes en cualquier momento para programas multi-hilo escritos en OpenMP. Modelo de persistencia de OmniRPC 3.2: módulo inicializable automáticamente. OmniRPC soporta eficientemente aplicaciones paralelas típicas de Maestro/Trabajador como programas de ejecución paramétrica. Para aplicaciones de búsqueda paramétrica, que a menudo requieren una gran cantidad de datos idénticos para cada llamada, OmniRPC admite un modelo de persistencia limitado, que está implementado por el módulo inicializable automático. El usuario puede definir un <br>procedimiento de inicialización</br> en el ejecutable remoto para enviar y almacenar datos automáticamente antes de las llamadas reales al procedimiento remoto. Dado que el ejecutable remoto puede aceptar solicitudes para llamadas posteriores, el conjunto de datos que ha sido establecido por el <br>procedimiento de inicialización</br> puede ser reutilizado. Como resultado, el programa del trabajador puede ejecutarse de manera eficiente y reducir la cantidad de datos transmitidos para la inicialización. Una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado para llamadas RPC posteriores. Sin embargo, OmniRPC no garantiza la persistencia del ejecutable remoto, por lo que el conjunto de datos establecido por la llamada anterior no puede ser utilizado por llamadas posteriores. Esto se debe a que una llamada remota realizada por OmniRpcCall puede ser programada en cualquier host remoto de forma dinámica, y los ejecutables remotos pueden ser terminados accidentalmente debido a una reprogramación dinámica o fallos en el host. Sin embargo, la persistencia del ejecutable remoto puede ser explotada en ciertas aplicaciones. Un ejemplo es una aplicación de búsqueda paramétrica: en dicha aplicación, sería eficiente si un gran conjunto de datos pudiera cargarse previamente en la primera llamada, y las llamadas posteriores pudieran realizarse en los mismos datos, pero con diferentes parámetros. Este es el caso para CONFLEX. OmniRPC proporciona un modelo de persistencia restringido a través del módulo inicializable automático (AIM) para apoyar este tipo de aplicación. Si el <br>procedimiento de inicialización</br> está definido en el módulo, el módulo se inicializa automáticamente al invocarlo llamando al <br>procedimiento de inicialización</br>. Cuando el ejecutable remoto se reprograma en diferentes hosts, se llama a la inicialización para inicializar el módulo remoto recién asignado. Esto puede eliminar comunicaciones innecesarias cuando las llamadas RPC utilizan los mismos datos. Para revelar más sobre la diferencia en el progreso entre los casos con OmniRPC AIM y sin OmniRPC AIM, presentamos dos figuras. La Figura 5 ilustra el gráfico de tiempo del progreso de una aplicación típica de OmniRPC utilizando la facilidad OmniRPC AIM, y la Figura 6 ilustra el gráfico de tiempo de la misma aplicación sin la facilidad OmniRPC AIM. En ambas figuras, las líneas entre los diamantes representan los procesos de inicialización, y las líneas entre los puntos representan los cálculos. La línea en negrita indica el momento en que el programa cliente envía los datos al programa trabajador. Es necesario que la aplicación sin la funcionalidad OmniRPC AIM se inicialice en cada RPC. La aplicación que utiliza la funcionalidad OmniRPC AIM puede reutilizar los datos inicializados una vez que el conjunto de datos está inicializado. Esto puede reducir la inicialización en cada RPC. Los trabajadores de la aplicación con AIM pueden calcular de manera eficiente en comparación con la aplicación sin la facilidad de AIM de OmniRPC. 3.3 Implementación de CONFLEX-G utilizando OmniRPC. La Figura 3 muestra una visión general del proceso utilizado en CONFLEX-G. Usando RPCs, CONFLEX-G asigna los procesos de optimización de la estructura de prueba, que son realizados por los nodos de cálculo de un clúster de PC en la versión MPI de CONFLEX, a los nodos computacionales de cada clúster en un entorno de grid. Hay dos cálculos que realizan los programas de trabajador en CONFLEX-G. Uno es la inicialización de un programa de trabajador, y otro es el cálculo de la optimización de la estructura de prueba. Primero, la instalación OmniRPC del AIM se adapta para la inicialización de un programa trabajador. Esta instalación llama automáticamente a la función de inicialización, la cual está contenida en el programa de trabajador, una vez que el programa cliente invoca al programa de trabajador en un nodo remoto. Es necesario que el sistema RPC común, incluido GridRPC, inicialice un programa para cada llamada RPC, ya que la persistencia de datos de los programas trabajadores. Tabla 1: Configuraciones de máquinas en la plataforma de pruebas en red. El nombre del clúster del sitio Máquina Red de Autenticación # de Nodos # de CPUs Univ. de Tsukuba Dennis Dual Xeon 2.4GHz 1Gb Ethernet Globus, SSH 14 28 Alice Dual Athlon 1800+ 100Mb Ethernet Globus, SSH 18 36 TUT Toyo Dual Athlon 2600+ 100Mb Ethernet SSH 8 16 AIST Ume Dual Pentium3 1.4GHz 1Gb Ethernet Globus, SSH 32 64 no es compatible. En OmniRPC, sin embargo, cuando se define la función remota Inicializar en el programa del trabajador y se asigna un nuevo programa de trabajador, correspondiente al otro RPC, para ejecutar, se llama automáticamente a una función Inicializar. Por lo tanto, después de la llamada a la función Initialize para configurar los datos de inicialización comunes, un programa trabajador puede reutilizar estos datos y aumentar la eficiencia de sus procesos. Por lo tanto, cuanto mayor sea el costo de configuración, mayor será el beneficio potencial. Implementamos el programa de trabajador de CONFLEX-G para recibir datos, como parámetros de evaluación de energía, de un programa cliente y para ser inicializado por la función Inicializar. Organizamos el programa del cliente de CONFLEX-G para transferir el archivo de parámetros en el momento de la inicialización del trabajador. Esto permite que la ejecución se realice modificando solo la configuración del cliente si el usuario desea ejecutar CONFLEX-G con un conjunto de datos diferente. Segundo, para calcular la optimización de la estructura de prueba en un programa de trabajador, el programa de trabajador debe recibir los datos, como el arreglo de átomos de la estructura de prueba y el estado de energía interna. El resultado se devuelve al programa cliente después de que el trabajador haya optimizado la estructura de prueba. Dado que la parte de cálculo de la optimización de la estructura en este programa de trabajador puede ser calculada de forma independiente utilizando diferentes parámetros, paralelizamos esta parte utilizando RPC asincrónicos en el lado del cliente. Para llamar a la función de optimización de estructuras en un programa trabajador desde el programa cliente, utilizamos la API OmniRpcCallAsync, la cual está diseñada para RPC asincrónico. Además, la API OmniRpcCallWaitAll espera hasta que se utilicen todas las RPC asíncronas para realizar la sincronización una vez que todas las RPC asíncronas se hayan completado, con el fin de optimizar la estructura de la prueba. El programa cliente que asigna la optimización de la estructura de prueba al nodo de cálculo de un clúster de PC utilizando RPC se describe de la siguiente manera. OmniRpcInit() OmniRpcModuleInit(conflex_search,...); ... mientras( <nuevos conformeros> ) { para cada( <estructuras de prueba> ) OmniRpcCallAsync(conflex_search_worker, ...); OmniRpcWaitAll(); ... Ten en cuenta que la API OmniRpcModuleInit solo devuelve los argumentos necesarios para la inicialización y no ejecutará realmente la función de inicialización. Como se describe arriba, la inicialización real se realiza en la primera llamada remota. Dado que el sistema OmniRPC tiene un programador de round-robin sencillo, no es necesario escribir explícitamente el código para el equilibrio de carga. Por lo tanto, los RPC se asignan automáticamente a los trabajadores inactivos. Tabla 2: Rendimiento de la red entre el nodo maestro del clúster Dennis y el nodo maestro de cada clúster de PC. Rendimiento de ida y vuelta del clúster Tiempo (ms) (Mbps) Dennis 0.23 879.31 Alice 0.18 94.12 Toyo 11.27 1.53 Ume 1.07 373.33 RESULTADOS PRELIMINARES 4.1 Banco de pruebas de la red El banco de pruebas de la red fue construido utilizando recursos informáticos de la Universidad de Tsukuba, la Universidad de Tecnología de Toyohashi (TUT) y el Instituto Nacional de Ciencia y Tecnología Industrial Avanzada (AIST). La Tabla 1 muestra los recursos informáticos utilizados para la red del presente estudio. La Universidad de Tsukuba y AIST están conectadas por una red WAN de 1 Gbps en Tsukuba, y los otros clústeres de PC están conectados por SINET, que es una red de área amplia dedicada a la investigación académica en Japón. La Tabla 2 muestra el rendimiento de la red medida entre el nodo maestro del clúster Dennis y el nodo maestro de cada clúster de PC en el banco de pruebas de la red. El rendimiento de CONFLEX-G En todos los experimentos de CONFLEX-G, el programa cliente se ejecutó en el nodo maestro del clúster Dennis en la Universidad de Tsukuba. El planificador Round-Robin incorporado de OmniRPC se utilizó como planificador de tareas. Se utilizó SSH para un sistema de autenticación, el OminRPCs MXIO, que retransmite la comunicación de E/S entre el programa cliente y los programas trabajadores mediante el reenvío de puertos de SSH, no se utilizó. Se debe tener en cuenta que un programa de trabajador se asigna y se ejecuta en una CPU de un nodo de cálculo en un clúster de PC. Es decir, el número de trabajadores es igual al número de CPUs. Estos programas fueron compilados por el Intel Fortran Compiler 7.0 y gcc 2.95. Se utilizó MPICH, Versión 1.2.5, para comparar el rendimiento entre CONFLEX MPI y CONFLEX-G. Para demostrar la usabilidad de la instalación OmniRPC de AIM, implementamos otra versión de CONFLEX-G que no utilizaba la instalación OmniRPC. El programa del trabajador en esta versión de CONFLEXG debe inicializarse en cada RPC porque el trabajador no conserva el conjunto de datos anterior. Para examinar el rendimiento de CONFLEX-G, seleccionamos dos péptidos y dos proteínas pequeñas como moléculas de prueba: • N-acetil tetra-alanina metilester (AlaX04) • N-acetil hexadeca-alanina metilester (AlaX16) • Construcción de miniproteína TRP-cage TC5B (1L2Y) • Fragmento del extremo N del receptor de PTH (1BL1) La Tabla 3 enumera las características de estas moléculas de muestra. La estructura de prueba de columnas / bucles en esta tabla muestra la Figura 7: Rendimientos de CONFLEX-G, CONFLEX MPI y CONFLEX Original en el clúster Dennis. Figura 8: Proporción de aceleración, que se basa en el tiempo transcurrido de CONFLEX-G utilizando un trabajador en el clúster de Dennis. Figura 9: Rendimiento de CONFLEX-G con y sin la facilidad OmniRPC del módulo inicializable automático para AlaX16. Tabla 3: Características de las moléculas y transmisión de datos para optimizar las estructuras moleculares de prueba en cada código molecular. Tabla 4: Tiempo de búsqueda transcurrido para la conformación molecular de AlaX04. Tabla 6: Tiempo transcurrido de la búsqueda de la estructura de prueba de 1L2Y. Tabla 7: Tiempo transcurrido de la búsqueda de la estructura de prueba de 1BL1. Número total de estructuras del clúster Tiempo de optimización Transcurrido Velocidad transcurrida (# de trabajadores) trabajadores / trabajador / estructura (s) tiempo (s) tiempo (H) hasta Toyo MPI (1) 1 519.0 3,646 189,210 525.61 1.00 Toyo MPI (16) 16 32.4 3,646 120,028 33.34 15.76 Dennis (28) 28 18.5 3,154 61,803 17.16 30.61 Dennis (28) + Ume (56) 84 6.1 4,497 33,502 9.30 56.48 160 número de estructuras de prueba generadas en cada iteración, indicando el grado de paralelismo. La Figura 3 también resume la cantidad de transmisión de datos requerida para la inicialización de un programa de trabajador y para la optimización de cada estructura de prueba. Ten en cuenta que la cantidad de transmisión de datos necesaria para inicializar un programa de trabajador y optimizar una estructura de prueba en la versión MPI de CONFLEX es igual a la de CONFLEX-G. Utilizamos una versión mejorada del campo de fuerza MM2 para asignar una función de energía potencial a varias propiedades geométricas de un grupo de átomos. 4.2.1 Rendimiento en un clúster local. Primero comparamos el rendimiento de CONFLEX-G, la versión MPI de CONFLEX y la versión secuencial original de CONFLEX-G utilizando un clúster local. Investigamos el rendimiento variando el número de trabajadores utilizando el clúster Dennis. Elegimos AlaX04 como molécula de prueba para este experimento. La Figura 7 compara los resultados para el CONFLEX MPI y el CONFLEX-G en un clúster de PC local. El resultado de este experimento muestra que CONFLEX-G puede reducir el tiempo de ejecución a medida que aumenta el número de trabajadores, al igual que en la versión MPI de CONFLEX. Descubrimos que CONFLEX-G logró eficiencias comparables a la versión MPI. Con 28 trabajadores, CONFLEX-G logró una mejora de velocidad de 18.00 veces en comparación con la versión secuencial de CONFLEX. El rendimiento de CONFLEX-G sin la funcionalidad AIM de OmniRPC es peor que el de CONFLEX-G que utiliza la funcionalidad, basado en el aumento en el número de trabajadores. Esto indica que el OmniRPC AIM permite al trabajador calcular de manera eficiente sin necesidad de realizar otros cálculos, como la inicialización o la invocación de programas de trabajador. A medida que se aumenta el número de trabajadores, el rendimiento de CONFLEX-G es ligeramente inferior al de la versión MPI. Esta degradación del rendimiento es causada por diferencias en los procesos de inicialización de los trabajadores de CONFLEX-G y CONFLEX MPI. En el caso de CONFLEX MPI, todos los trabajadores se inicializan antes de la fase de optimización. En el caso de OminRPC, el trabajador es invocado bajo demanda cuando la llamada RPC es emitida realmente. Por lo tanto, la inicialización conlleva este sobrecosto. Dado que el objetivo de CONFLEX-G es explorar las conformaciones de grandes bio-moléculas, el número de estructuras de prueba y el tiempo para optimizar la estructura de prueba podrían ser grandes. En tales casos, el gasto general para invocar e inicializar el programa de trabajador puede ser pequeño en comparación con el tiempo total transcurrido. 4.2.2 Rendimiento para Péptidos en el Banco de Pruebas de la Red En primer lugar, las moléculas de muestra (AlaX04 y AlaX16) se utilizaron para examinar el rendimiento de CONFLEX-G en un entorno de red. La Figura 8 muestra la aceleración lograda al utilizar múltiples clústeres en comparación con el uso de un solo trabajador en el clúster de Dennis. Los resultados detallados se muestran en la Tabla 4 y la Tabla 5. En ambos casos, el mejor rendimiento se obtuvo utilizando 64 trabajadores de la combinación de los clústeres de Dennis y Alice. CONFLEX-G logró una aceleración máxima de 36.08 veces para AlaX04 y una aceleración máxima de 21.91 veces para AlaX16. En el caso de AlaX04, el rendimiento mejora solo cuando el rendimiento de la red entre clústeres es alto. Sin embargo, aunque se utilicen dos o más grupos en un entorno de red de área amplia, la mejora en el rendimiento fue leve debido a que el tiempo de optimización de una estructura de prueba generada a partir de AlaX04, una molécula pequeña, es corto. Además, los gastos generales necesarios para la invocación de un programa de trabajador y la transmisión de datos a través de la red consumen una gran parte del tiempo de procesamiento restante. En particular, la transmisión de datos necesaria para la inicialización de un programa de trabajador es de 2 MB. En el caso del clúster Toyo, donde el rendimiento de la red entre el programa cliente y los programas trabajadores es deficiente, el tiempo de transmisión de datos al programa trabajador requería aproximadamente 6.7 segundos. Dado que el tiempo de transmisión fue más largo que el tiempo de procesamiento de una optimización de estructura en CONFLEX-G, la mayor parte del tiempo se dedicó a esta transmisión de datos. Por lo tanto, incluso si CONFLEX-G utiliza un gran número de nodos de cálculo en un entorno de red de área amplia, no se obtiene el beneficio de utilizar un recurso de cuadrícula. En el caso de AlaX16, CONFLEX-G logró una aceleración al utilizar dos o más clústeres de PC en nuestro banco de pruebas en red. Esto se debió a que el tiempo de cálculo en el programa del trabajador era largo y los costos adicionales, como la latencia de red y la invocación de programas de trabajador, se volvieron relativamente pequeños y pudieron ocultarse. El mejor rendimiento se obtuvo utilizando 64 trabajadores en los clústeres de Dennis y Alice. En el caso de AaX16, el rendimiento logrado fue un aumento de velocidad de 36.08 veces. La Figura 9 revela el efecto de utilizar la facilidad del OmniRPC AIM en el rendimiento de CONFLEX-G. En la mayoría de los casos, CONFLEX-G con la instalación de OmniRPC AIM logró un mejor rendimiento que CONFLEX-G sin la instalación. En particular, la facilidad OmniRPC AIM fue ventajosa al usar dos clústeres conectados por una red de bajo rendimiento. Los resultados indican que la instalación OmniRPC AIM puede mejorar el rendimiento en el entorno de la red. 4.2.3 Rendimiento para proteínas pequeñas en el banco de pruebas de la red. Finalmente, exploramos la conformación molecular utilizando CONFLEX-G para moléculas grandes. En un entorno de cuadrícula, este experimento se llevó a cabo utilizando los clústeres Dennis y Ume. En este experimento, utilizamos dos proteínas, 1L2Y y 1BL1. La Tabla 6 y la Tabla 7 muestran el rendimiento de CONFLEX-G en el entorno de la red y el de CONFLEX MPI en el clúster de Toyo, respectivamente. Los incrementos de velocidad en estas tablas fueron calculados respectivamente basados en el rendimiento de un trabajador y 16 trabajadores del clúster Toyo utilizando CONFLEX MPI. CONFLEX-G con 84 trabajadores en los grupos de Dennis y Ume obtuvo aceleraciones máximas de 56.5 veces para 1L2Y y 34.5 veces para 1L2Y. Dado que el tiempo de cálculo para la optimización de la estructura requería una gran cantidad de tiempo, la proporción de gastos generales, incluidas tareas como la invocación de un programa de trabajador y la transmisión de datos para la inicialización, se volvió muy pequeña, por lo que el rendimiento de CONFLEX-G mejoró. Descubrimos que el desequilibrio de carga en el tiempo de procesamiento de la optimización para cada estructura de prueba causó una degradación del rendimiento. Cuando obtuvimos el mejor rendimiento para 1L2Y utilizando los cúmulos de Dennis y Ume, el tiempo para la optimización de cada estructura varió de 190 a 27,887 segundos, y la proporción entre los tiempos más largos y más cortos fue de 13.4. Para 1BL1, la proporción de tiempo mínimo sobre tiempo máximo fue de 190. Además, para que el programa del trabajador espere hasta que se complete la optimización de todas las estructuras de prueba, se descubrió que todos los programas de trabajador esperaban en un estado inactivo durante aproximadamente 6 horas. Esto ha causado la degradación del rendimiento de CONFLEX-G. 161 4.3 Discusión En esta subsección, discutimos la mejora del rendimiento reflejada en nuestros experimentos. Explotando el paralelismo - Para aprovechar más recursos computacionales, es necesario aumentar el grado de paralelismo. En este experimento, el grado de paralelismo no fue tan grande en el caso de las moléculas de muestra. Al utilizar un conjunto de más de 500 nodos informáticos para 1BL1, el número de estructuras de un solo ensayo asignadas a cada trabajador será solo de uno o dos. Si se asignan más de 100 estructuras de prueba a cada programa de trabajador, el cálculo se puede realizar de manera más eficiente debido a la reducción de la sobrecarga para la invocación y la inicialización de los trabajadores a través de la facilidad de OmniRPC AIM. Una idea para aumentar el paralelismo es superponer la ejecución de dos o más conjuntos de estructuras de prueba. En el algoritmo actual, se genera un conjunto de estructuras de prueba a partir de una estructura inicial y se calculan las optimizaciones para todas las estructuras de este conjunto. Además, esto ayudará a mejorar el desequilibrio de carga. Al hacer que otros conjuntos de estructuras de prueba se superpongan, incluso si algunas optimizaciones requieren mucho tiempo, la optimización de las estructuras en otros conjuntos se puede ejecutar para compensar a los trabajadores inactivos de otras optimizaciones. Sin embargo, no está claro cómo dicha modificación del algoritmo podría afectar la calidad de los resultados finales en términos de una búsqueda de conformación. Mejora en el desequilibrio de carga al optimizar cada estructura de prueba: la Tabla 8 enumera las estadísticas de los tiempos de optimización de las estructuras de prueba generadas para cada molécula de muestra medida utilizando 28 trabajadores en el clúster de Dennis. Cuando se utilizan dos o más conjuntos de grupos de PC, la mejora en el rendimiento se ve obstaculizada por el desequilibrio de carga en la optimización de las estructuras de prueba. El tiempo más largo para optimizar una estructura de prueba fue casi 24 veces más largo que el tiempo más corto. Además, los demás trabajadores deben esperar hasta que el trabajo más largo haya terminado, por lo que el tiempo total de ejecución no se puede reducir. Cuando CONFLEX-G buscó los conformeros de 1BL1 mediante el clúster de Dennis, el tiempo de cálculo más largo de la optimización de la estructura de prueba representó aproximadamente el 80% del tiempo transcurrido. Por lo tanto, hay dos posibles soluciones para el desequilibrio de carga. • Es necesario refinar el algoritmo utilizado para generar la estructura de prueba, que suprime la variación temporal para optimizar una estructura de prueba en CONFLEX. Esto permite que CONFLEX-G logre un alto rendimiento al utilizar muchos recursos informáticos. • Una de las soluciones es superponer las ejecuciones para dos o más conjuntos de estructuras de prueba. En los algoritmos actuales, se genera un conjunto de estructuras de prueba a partir de una estructura inicial y el cálculo continúa hasta que se calculen todas las estructuras de este conjunto. Al tener otros conjuntos de estructuras de prueba, incluso si una búsqueda de estructuras lleva mucho tiempo, un trabajo puede ejecutarse para compensar el desequilibrio de carga causado por otros trabajos. Sin embargo, no está claro cómo tal modificación de los algoritmos podría afectar la eficiencia. En este experimento, utilizamos un programador de round-robin incorporado simple de OmniRPC, que es necesario para aplicar el programador que asigna estructuras con largos tiempos de optimización a una tabla de alto rendimiento. Tabla 8: Estadísticas del tiempo transcurrido de la optimización de la estructura de prueba utilizando 28 trabajadores en el clúster Dennis. Código de Varianza Promedio Mínimo Máximo Molecular (s) (s) (s) AlaX04 2.0 11.3 5.3 3 AlaX16 47.6 920.0 154.2 5404 1L2Y 114.2 13331.4 803.2 636782 1BL1 121.0 29641.8 3153.5 2734811 nodos y estructuras con tiempos de optimización cortos a nodos de bajo rendimiento. En general, sin embargo, podría ser difícil predecir el tiempo necesario para la optimización de la estructura del ensayo. Paralelización del programa del trabajador para acelerar y optimizar una estructura de prueba - En la implementación actual, no paralelizamos el programa del trabajador. Para acelerar las estructuras de prueba, la programación híbrida utilizando OmniRPC y OpenMP en una máquina SMP (Symmetric Multiple Processor) puede ser uno de los métodos alternativos para mejorar el rendimiento general. TRABAJO RELACIONADO Recientemente, se ha desarrollado un algoritmo que resuelve los problemas de paralelización y comunicación en procesadores poco conectados para ser utilizados en simulaciones. El proyecto Folding@home simula escalas de tiempo miles a millones de veces más largas que las logradas previamente. Esto nos ha permitido simular el plegamiento por primera vez y examinar directamente enfermedades relacionadas con el plegamiento. SETI@home es un programa para buscar vida extraterrestre mediante el análisis de señales de radio telescopio utilizando datos de telescopios de diferentes sitios mediante la transformada de Fourier. SETI@home aborda problemas inmensamente paralelos, en los cuales los cálculos pueden dividirse fácilmente entre varios ordenadores. Los fragmentos de datos del radiotelescopio pueden asignarse fácilmente a diferentes computadoras. La mayoría de estos esfuerzos desarrollan explícitamente una aplicación de acoplamiento como una aplicación paralela utilizando un lenguaje de programación paralela de propósito especial y middleware, como MPI, lo cual requiere habilidades y esfuerzo de desarrollo. Sin embargo, las habilidades y esfuerzo necesarios para desarrollar una aplicación de cuadrícula pueden no ser necesarios para OmniRPC. Nimrod/G[15] es una herramienta para modelado paramétrico distribuido e implementa una granja de tareas paralelas para simulaciones que requieren varios parámetros de entrada variables. Nimrod incorpora un componente de programación distribuida que puede gestionar la programación de experimentos individuales en computadoras inactivas en una red de área local. Nimrod se ha aplicado en aplicaciones que incluyen bioinformática, investigación de operaciones y modelado molecular para el diseño de fármacos. NetSolve es una instalación de RPC similar a OmniRPC y Ninf, que proporciona una interfaz de programación similar y un mecanismo de equilibrio de carga automático. Ninf-G[7] es una implementación habilitada para grid de Ninf y proporciona un sistema GridRPC[10] que utiliza LDAP para gestionar la base de datos de ejecutables remotos, pero no admite clústeres que involucren direcciones IP privadas o direcciones dentro de un firewall. Matsuoka et al. [16] también han discutido varios problemas de diseño relacionados con los sistemas de RPC en malla. 162 6. CONCLUSIONES Y TRABAJO FUTURO Hemos diseñado e implementado CONFLEX-G utilizando OmniRPC. Informamos sobre su rendimiento en un banco de pruebas en red de varios clústeres de PC distribuidos geográficamente. Para explorar la conformación de grandes biomoléculas, se utilizó CONFLEXG para generar estructuras de prueba de las moléculas y asignar trabajos para optimizarlas mediante mecánica molecular en la cuadrícula. OmniRPC proporciona un modelo de persistencia restringido para que el módulo se inicialice automáticamente al invocarse llamando al <br>procedimiento de inicialización</br>. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "mpus": {
            "translated_key": "I'm sorry, but \"mpus\" is not a complete sentence in English. Could you please provide more context or clarify the sentence so I can assist you with an accurate translation to Spanish?",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Implementation and Performance Evaluation of CONFLEX-G: Grid-enabled Molecular Conformational Space Search Program with OmniRPC Yoshihiro Nakajima Graduate School of Systems & Information Engineering, University of Tsukuba Tsukuba, 305-8577, Japan yoshihiro@hpcs.is.tsukuba.ac.jp Mitsuhisa Sato Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan msato@is.tsukuba.ac.jp Hitoshi Goto Knowledge-based Information Engineering, Toyohashi University of Technology Toyohashi, 441-8580, Japan gotoh@cochem2.tutkie.tut.ac.jp Taisuke Boku, Daisuke Takahashi Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan {taisuke,daisuke}@hpcs.is.tsukuba.ac.jp ABSTRACT CONFLEX-G is the grid-enabled version of a molecular conformational space search program called CONFLEX.",
                "We have implemented CONFLEX-G using a grid RPC system called OmniRPC.",
                "In this paper, we report the performance of CONFLEX-G in a grid testbed of several geographically distributed PC clusters.",
                "In order to explore many conformation of large bio-molecules, CONFLEX-G generates trial structures of the molecules and allocates jobs to optimize a trial structure with a reliable molecular mechanics method in the grid.",
                "OmniRPC provides a restricted persistence model to support the parametric search applications.",
                "In this model, when the initialization procedure is defined in the RPC module, the module is automatically initialized at the time of invocation by calling the initialization procedure.",
                "This can eliminate unnecessary communication and initialization at each call in CONFLEX-G. CONFLEXG can achieve performance comparable to CONFLEX MPI and can exploit more computing resources by allowing the use of a cluster of multiple clusters in the grid.",
                "The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times in the case of the 1BL1 molecule, where the molecule consists of a large number of atoms, and each trial structure optimization requires significant time.",
                "The load imbalance of the optimization time of the trial structure may also cause performance degradation.",
                "Categories and Subject Descriptors C.2.4 [Computer Systems Organization]: COMPUTERCOMMUNICATION NETWORK-Distributed Systems; J.2.4 [Computer Applications]: PHYSICAL SCIENCES AND ENGINEERING General Terms Design,Performance 1.",
                "INTRODUCTION Elucidation of the stable conformations and the folding process of proteins is one of the most fundamental and challenging goals in life science.",
                "While some of the most common secondary structures (e.g., certain types of helix, the beta-strand, and the coil) are well known, precise analysis of the thousands of chemically important conformers and pico-second-order analysis of their conformational interconversions via the transition states on the potential energy surface are required for the microsecond-order investigation of the folding process toward the tertiary structure formations.",
                "Recently, the concept of the computational grid has begun to attract significant interest in the field of high-performance network computing.",
                "Rapid advances in wide-area networking technology and infrastructure have made it possible to construct large-scale, high-performance distributed computing environments, or computational grids, that provide dependable, consistent and pervasive access to enormous computational resources.",
                "CONFLEX is one of the most efficient and reliable conformational space search programs[1].",
                "We have applied this 154 program to parallelization using global computing.",
                "The performance of the parallelized CONFLEX enables exploration of the lower-energy region of the conformational space of small peptides within an available elapsed time using a local PC cluster.",
                "Since trial structure optimization in CONFLEX is calculated via molecular mechanics, conformational space search can be performed quickly compared to that using molecular orbital calculation.",
                "Although the parallelized version of CONFLEX was used to calculate in parallel the structure optimization, which takes up over 90% of the processing in the molecular conformation search, sufficient improvement in the speedup could not be achieved by this method alone.",
                "Therefore, for high polymers from live organisms, such as HIV protease, the use one PC cluster is insufficient due to the requirement for optimization of a huge number of trial structures.",
                "This requires the vast computer resources of a grid computing environment.",
                "In this paper, we describe CONFLEX-G, a grid-enabled molecular conformational search program, using OmniRPC and report its performance in a grid of several PC clusters which are geographically distributed.",
                "The prototype CONFLEX-G allocates calculation trial structures optimization, which is a very time-consuming task, to worker nodes in the grid environment in order to obtain high throughput.",
                "In addition, we compare the performance of CONFLEX-G in a local PC cluster to that in a grid testbed.",
                "OmniRPC[2, 3, 4] is a thread-safe implementation of Ninf RPC[5, 6] which is a Grid RPC facility for grid environment computing.",
                "Several systems adopt the concept of the RPC as the basic model for grid environment computing, including Ninf-G[7], NetSolve[8] and CORBA[9].",
                "The RPCstyle system provides an easy-to-use, intuitive programming interface, allowing users of the grid system to easily create grid-enabled applications.",
                "In order to support parallel programming, an RPC client can issue asynchronous call requests to a different remote computer to exploit networkwide parallelism via OmniRPC.",
                "In this paper, we propose the OmniRPC persistence model to a Grid RPC system and demonstrate its effectiveness.",
                "In order to support a typical application for a grid environment, such as a parametric search application, in which the same function is executed with different input parameters on the same data set.",
                "In the current GridRPC system[10], the data set by the previous call cannot be used by subsequent calls.",
                "In the OmniRPC system, once a remote executable is invoked, the client attempts to use the invoked remote executable and its initialized state for subsequent RPC calls to the same remote functions in order to eliminate the invocation cost of each call.",
                "This paper demonstrates that CONFLEX-G is able to exploit the huge computer resources of a grid environment and search large-scale molecular conformers.",
                "We demonstrate CONFLEX-G on our grid testbed using the actual protein as a sample molecule.",
                "The OmniRPC facility of the automatic initializable module (AIM) allows the system to efficiently calculate numerous conformers.",
                "Furthermore, by using OmniRPC, the user can grid-parallelize the existing application, and move from the cluster to the grid environment without modifying program code and compiling the program.",
                "In addition, the user can easily build a private grid environment.",
                "The rest of this paper is organized as follows.",
                "An overview Selection of Initial Structure Conformations Database Local Perturbation Geometry Optimization Comparison and Registration Figure 1: Algorithm of conformational space search in the original CONFLEX. of the CONFLEX system is presented in Section2, and the implementation and design of CONFLEX-G are described in Section 3.",
                "We report experimental results obtained using CONFLEX-G and discuss its performance in Section 4.",
                "In Section 6, we present conclusions and discuss subjects for future study. 2.",
                "CONFLEX CONFLEX [1] is an efficient conformational space search program, which can predominately and exhaustively search the conformers in the lower-energy region.",
                "Applications of CONFLEX include the elucidation of the reactivity and selectivity of drugs and possible drug materials with regard to their conformational flexibility. 2.1 Algorithm of ConformationalSpaceSearch The basic strategy of CONFLEX is an exhaustive search of only the low-energy regions.",
                "The original CONFLEX performs the following four major steps: 1.",
                "Selection of an initial structure among the previously discovered unique conformers sorted in a conformational database. (An input structure is used as the first initial structure at the beginning of a search execution only.) 2.",
                "Generation of trial structures by local perturbations to the selected initial structure. 3.",
                "Geometry optimization for the newly generated trial structures. 4.",
                "Comparison of the successfully optimized (trial) structures with the other conformers stored in a conformation database, and preservation of newly discovered unique conformers in the database.",
                "Figure 1 shows the outline of CONFLEX, the original conformational space search algorithm.",
                "These procedures incorporate two unique strategies.",
                "Figure 2 shows the strategies for generating local perturbations in CONFLEX.",
                "The first strategy involves both corner flapping and edge flipping for the ring atoms and stepwise rotation for side-chains or backbone chains.",
                "These methods provide a highly efficient way to produce several good trial structures.",
                "These perturbations can be considered to mimic 155 Stepwise Rotation Corner Flap Edge Flip Figure 2: Strategies used to generate the local perturbations. a barrier-crossing step in the elementary process of the thermal conformational inter-conversion.",
                "Actually, the perturbations of an initial structure correspond to the precise performance around the space of the initial structure because of localization and weakness of the perturbation.",
                "The selection rule of the initial structure, the LowestConformer-First rule, is the second strategy for directing the conformation search expanded to the low-energy regions.",
                "The initial structure is selected as the set of lowest energy conformers stored in the conformation database.",
                "This rule is effective in moving down the search space toward lower energy regions, like water from a stream running into an empty reservoir, while filling local depressions along the way.",
                "Therefore, these tactical procedures of the CONFLEX search are referred to as the Reservoir Filling Algorithm.",
                "In order to remain in the low-energy region and perform an exhaustive search, the search limit (SEL), which determines the maximum energy of the initial structures, is pre-defined.",
                "Gradually increasing SEL allows only the lowenergy conformers to be searched and avoids straying into unnecessarily high-energy regions. 2.2 Parallelization of CONFLEX for Cluster For application to over 100 atoms, CONFLEX was improved using high-performance parallel computing techniques.",
                "In the CONFLEX search algorithm, the geometry optimization procedures always take 95% of the elapsed time of the search execution.",
                "Therefore, we parallelized this optimization using the Master/Worker parallelization technique.",
                "We modified the search procedures as follows.",
                "After trial structures are generated (step 2), they are temporarily stored in a task pool on the master node.",
                "Then, each worker node is dynamically supplied with one trial structure from the master node.",
                "After an optimization on a worker node is finished, the worker is immediately supplied with another trial structure.",
                "When all of the trial structures related to a given initial structure are optimized, only the master procedure is used in comparison.",
                "By parallelizing CONFLEX, the speedup of searching molecular conformers obtained is as reported in[11]. 3.",
                "CONFLEX-G Originally, CONFLEX was intended for use in exploring the conformers of the large bio-molecules, such HIV protease.",
                "In such molecules, the number of trial structures increases and the time required for optimization of RPC Selection of Initial Structure Conformations Database Local Perturbation Comparison and Registration Client program Task Pool of Geometry Optimization RPC RPC Grid environment Cluster B Cluster A Cluster C Trial structureTrial structure Trial structure Trial structure Figure 3: Procedure of CONFLEX-G. agent rexrex rex Client jones.tsukuba.ac.jp hpc-serv.hpcc.jp hpc1 hpc2 hpc3 Agent invocation communicationNetwork Figure 4: Overview of the OmniRPC system for the remote cluster having a private IP address. the trial structure becomes immense.",
                "We implemented the parallelized version of CONFLEX, which cannot treat such molecules using only a local PC cluster.",
                "In order to exploit the vast computing resources of a grid environment, we designed and implemented CONFLEX-G, which is a grid-enabled version of CONFLEX, with the OmniRPC system.",
                "CONFLEX-G allocates jobs to optimize a trial structure to the computational nodes of each cluster in the grid environment.",
                "Figure 3 shows the process of CONFLEX-G.",
                "The worker programs are initialized by the initialize method, which is provided by the OmniRPC AIM facility at worker invocation.",
                "At each RPC call, the initialized state is reused on the remote host.",
                "In other words, the client program can eliminate the initialization for each RPC call, and can therefore optimize trial structures efficiently. 3.1 The OmniRPC system OmniRPC is a Grid RPC system which allows seamless parallel programming from a PC cluster to a grid environment.",
                "OmniRPC inherits its API and basic architecture from Ninf.",
                "A client and the remote computational hosts which execute the remote procedures may be connected via a network.",
                "The remote libraries are implemented as an executable program which contains a network stub routine as its main routine.",
                "We call this executable program a remote executable program (rex).",
                "When the OmniRPC client program starts, the initialization function of OmniRPC system invokes the OmniRPC agent program omrpc-agent in the remote hosts listed in the host file.",
                "To invoke the agent, the user can use the remote shell command rsh in a local-area network, the GRAM (Globus Resource Allocation Manager) API of the Globus 156 toolkit[12] in a grid environment, or the secure remote shell command ssh.",
                "The user can switch the configurations only by changing the host file.",
                "OmniRpcCall is a simple client programming interface for calling remote functions.",
                "When OmniRpcCall makes a remote procedure call, the call is allocated to an appropriate remote host.",
                "When the client issues the RPC request, it requests that the agent in the selected host submit the job of the remote executable with the local job scheduler specified in the host file.",
                "If the job scheduler is not specified, the agent executes the remote executable in the same node by the fork system call.",
                "The client sends the data of the input arguments to the invoked remote executable, and receives the results upon return of the remote function.",
                "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls in order to eliminate the cost of invoking the same remote executable again.",
                "When the agent and the remote executables are invoked, the remote programs obtain the client address and port from the argument list and connect back to the client by direct TCP/IP or Globus-IO for data transmission.",
                "Because the OmniRPC system does not use any fixed service ports, the client program allocates unused ports dynamically to wait for connection from the remote executables.",
                "This avoids possible security problems, and allows the user to install the OmniRPC system without requiring a privileged account.",
                "Herein, a typical grid resource is regarded as a cluster of geographically distributed PC clusters.",
                "For PC clusters on a private network, an OmniRPC agent process on the server host functions as a proxy to relay communications between the client and the remote executables by multiplexing the communications using a single connection.",
                "This feature, called multiplex IO (MXIO), allows a single client to use up to 1,000 remote computing hosts.",
                "When the PC cluster is inside a firewall, the port forwarding of SSH enables the node to communicate to the outside with MXIO.",
                "Figure 4 shows the overview of the OmniRPC system for a remote cluster with a private IP address.",
                "For parallel programming, the programmer can use asynchronous remote procedure calls, allowing the client to issue several requests while continuing with other computations.",
                "The requests are dispatched to different remote hosts to be executed in parallel, and the client waits or polls the completed request.",
                "In such a programming model with asynchronous remote procedure calls, the programmer should handle outstanding requests explicitly.",
                "Because OmniRPC is a thread-safe system, a number of remote procedure calls may be outstanding at any time for multi-threaded programs written in OpenMP. 3.2 OmniRPC persistence model: automatic initializable module OmniRPC efficiently supports typical Master/Worker parallel applications such as parametric execution programs.",
                "For parametric search applications, which often require large amount of identical data for each call, OmniRPC supports a limited persistence model, which is implemented by the automatic initializable module.",
                "The user can define an initialization procedure in the remote executable in order to send and store data automatically in advance of actual remote procedure calls.",
                "Since the remote executable may accept requests for subsequent calls, the data set which has been set by the initialization procedure can be re-used.",
                "As a result, the worker program can execute efficiently and reduce the amount of data transmitted for initialization.",
                "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls.",
                "However, OmniRPC does not guarantee persistence of the remote executable, so that the data set by the previous call cannot be used by subsequent calls.",
                "This is because a remote call by OmniRpcCall may be scheduled to any remote host dynamically, and remote executables may be terminated accidentally due to dynamic re-scheduling or host faults.",
                "However, persistence of the remote executable can be exploited in certain applications.",
                "An example is a parametric search application: in such an application, it would be efficient if a large set of data could be pre-loaded by the first call, and subsequent calls could be performed on the same data, but with different parameters.",
                "This is the case for CONFLEX.",
                "OmniRPC provides a restricted persistence model through the automatic initializable module (AIM) in order to support this type of application.",
                "If the initialization procedure is defined in the module, the module is automatically initialized at invocation by calling the initialization procedure.",
                "When the remote executable is re-scheduled in different hosts, the initialization is called to initialize the newly allocated remote module.",
                "This can eliminate unnecessary communications when RPC calls use the same data.",
                "To reveal more about the difference in progress between the cases with OmniRPC AIM and without OmniRPC AIM, we present two figures.",
                "Figure 5 illustrates the time chart of the progress of a typical OmniRPC application using the OmniRPC AIM facility, and Figure 6 illustrates the time chart of the same application without the OmniRPC AIM facility.",
                "In both figures, the lines between diamonds represent the processes of initialization, and the lines between points represent the calculation.",
                "The bold line indicates the time when the client program sends the data to a worker program.",
                "It is necessary for the application without the OmniRPC AIM facility to initialize at each RPC.",
                "The application using the OmniRPC AIM facility can re-use the initialized data once the data set is initialized.",
                "This can reduce the initialization at each RPC.",
                "The workers of the application with the AIM can calculate efficiently compared to the application without the OmniRPC AIM facility. 3.3 Implementation of CONFLEX-G using OmniRPC Figure 3 shows an overview of the process used in CONFLEXG.",
                "Using RPCs, CONFLEX-G allocates the processes of trial structure optimization, which are performed by the computation nodes of a PC cluster in the MPI version of CONFLEX, to the computational nodes of each cluster in a grid environment.",
                "There are two computations which are performed by the worker programs in CONFLEX-G. One is the initialization of a worker program, and another is the calculation of trial structure optimization.",
                "First, the OmniRPC facility of the AIM is adapted for initialization of a worker program.",
                "This facility automatically calls the initialization function, which is contained in the worker program, once the client program invokes the worker program in a remote node.",
                "It is necessary for the common RPC system including GridRPC to initialize a program for every RPC call, since data persistence of worker programs 157 time Client Program Worker Program 1 Worker Program 2 initialization initialization calculation calculation calculation calculation calculation Parallelized using asynchronous RPCs Figure 5: Time chart of applications using the OmniRPC facility of the automatic initializable module. time Client Program Worker Program 1 Worker Program 2 initialization initializationcalculation calculation calculation calculation initialization initialization initialization Parallelized using asynchronous RPCs calculation Figure 6: Time chart of applications without the OmniRPC facility of the automatic initializable module.",
                "Table 1: Machine configurations in the grid testbed.",
                "Site Cluster Name Machine Network Authentication # of Nodes # of CPUs Univ. of Tsukuba Dennis Dual Xeon 2.4GHz 1Gb Ethernet Globus, SSH 14 28 Alice Dual Athlon 1800+ 100Mb Ethernet Globus, SSH 18 36 TUT Toyo Dual Athlon 2600+ 100Mb Ethernet SSH 8 16 AIST Ume Dual Pentium3 1.4GHz 1Gb Ethernet Globus, SSH 32 64 is not supported.",
                "In OmniRPC, however, when the Initialize remote function is defined in the worker program and a new worker program, corresponding to the other RPC, is assigned to execute, an Initialize function is called automatically.",
                "Therefore, after the Initialize function call to set up common initialization data, a worker program can re-use this data and increase the efficiency of its processes.",
                "Thus, the higher the set-up cost, the greater the potential benefit.",
                "We implemented the worker program of CONFLEX-G to receive data, such as evaluation parameters of energy, from a client program and to be initialized by the Initialize function.",
                "We arranged the client program of CONFLEX-G to transfer the parameter file at the time of worker initialization.",
                "This enables execution to be performed by modify only the client setting if the user wants to run CONFLEX-G with a different data set.",
                "Second, in order to calculate trial structure optimization in a worker program, the worker program must receive the data, such as the atom arrangement of the trial structure and the internal energy state.",
                "The result is returned to the client program after the worker has Optimized the trial structure.",
                "Since the calculation portion of the structure optimization in this worker program can be calculated independently using different parameters, we parallelized this portion using asynchronous RPCs on the client side.",
                "To call the structure optimization function in a worker program from the client program, we use the OmniRpcCallAsync API, which is intended for asynchronous RPC.",
                "In addition, OmniRpcCallWaitAll API which waits until all asynchronous RPCs are used in order to perform synchronization with all of the asynchronous RPCs completed so as to optimize the trial structure.",
                "The client program which assigns trial structure optimization to the calculation node of a PC cluster using RPC is outlined as follows.",
                "OmniRpcInit() OmniRpcModuleInit(conflex_search,...); ... while( <new conformers> ) { foreach( <trial structures> ) OmniRpcCallAsync(conflex_search_worker, ...); OmniRpcWaitAll(); ...",
                "Note that OmniRpcModuleInit API returns only the arguments needed for initialization and will not actually execute the Initialization function.",
                "As described above, the actual Initialization is performed at the first remote call.",
                "Since the OmniRPC system has an easy round-robin scheduler, we do not have to explicitly write the code for load balance.",
                "Therefore, RPCs are allocated automatically to idle workers. 158 Table 2: Network performance between the master node of the Dennis cluster and the master node of each PC cluster.",
                "Round-Trip Throughput Cluster Time (ms) (Mbps) Dennis 0.23 879.31 Alice 0.18 94.12 Toyo 11.27 1.53 Ume 1.07 373.33 4.",
                "PRELIMINARY RESULTS 4.1 Grid Testbed The grid testbed was constructed by computing resources at the University of Tsukuba, the Toyohashi University of Technology (TUT) and the National Institute of Advanced Industrial Science and Technology (AIST).",
                "Table 1 shows the computing resources used for the grid of the present study.",
                "The University of Tsukuba and AIST are connected by a 1-Gbps Tsukuba WAN, and the other PC clusters are connected by SINET, which is wide-area network dedicated to academic research in Japan.",
                "Table 2 shows the performance of the measured network between the master node of the Dennis cluster and the master node of each PC cluster in the grid testbed.",
                "The communication throughput was measured using netperf, and the round-trip time was measured by ping. 4.2 Performance of CONFLEX-G In all of the CONFLEX-G experiments, the client program was executed on the master node of the Dennis cluster at the University of Tsukuba.",
                "The built-in Round-Robin scheduler of OmniRPC was used as a job scheduler.",
                "SSH was used for an authentication system, the OminRPCs MXIO, which relays the I/O communication between client program and worker programs by port forwarding of SSH was, not used.",
                "Note that one worker program is assigned and performed on one CPU of the calculation node in a PC cluster.",
                "That is, the number of workers is equal to the number of CPUs.",
                "These programs were compiled by the Intel Fortran Compiler 7.0 and gcc 2.95.",
                "MPICH, Version 1.2.5, was used to compare the performance between CONFLEX MPI and CONFLEX-G.",
                "In order to demonstrate the usability of the OmniRPC facility of the AIM, we implemented another version of CONFLEX-G which did not utilize the OmniRPC facility.",
                "The worker program in this version of CONFLEXG must be initialized at each RPC because the worker does not hold the previous data set.",
                "In order to examine the performance of CONFLEX-G, we selected two peptides and two small protein as test molecules: • N-acetyl tetra-alanine methylester (AlaX04) • N-acetyl hexdeca-alanine methylester (AlaX16) • TRP-cage miniprotein construct TC5B (1L2Y) • PTH receptor N-terminus fragment (1BL1) Table 3 lists the characteristics of these sample molecules.",
                "The column trial structure / loops in this table shows the Figure 7: Performances of CONFLEX-G, CONFLEX MPI and Original CONFLEX in the Dennis cluster.",
                "Figure 8: Speedup ratio, which is based on the elapsed time of CONFLEX-G using one worker in the Dennis cluster.",
                "Figure 9: Performance of CONFLEX-G with and without the OmniRPC facility of automatic initializable module for AlaX16. 159 Table 3: Characteristics of molecules and data transmission for optimizing trial molecular structures in each molecular code.",
                "Molecular # of # of total trial trial structure Data transfer to Data transfer code atoms structures / loop initialize a worker / trial structure AlaX04 181 360 45 2033KB 17.00KB AlaX16 191 480 160 2063KB 18.14KB 1L2Y 315 331 331 2099KB 29.58KB 1BL1 519 519 519 2150KB 48.67KB Table 4: Elapsed search time for the molecular conformation of AlaX04.",
                "Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (sequential) 1 320.0 1786.21 4.96 1786.21 1.00 Toyo (16) 16 20.0 1497.08 4.16 196.32 9.10 Dennis (28) 28 11.4 1905.51 5.29 97.00 18.41 Alice (36) 36 8.9 2055.25 5.71 87.09 20.51 Ume (56) 56 5.7 2196.77 6.10 120.69 14.80 Dennis (28) + Toyo (16) 44 7.3 1630.09 4.53 162.35 11.00 Alice (36) + Toyo (16) 52 6.2 1774.53 4.93 178.24 10.02 Dennis (28) + Alice (36) 64 5.0 1999.02 5.55 81.52 21.91 Dennis (28) + Ume (56) 84 3.8 2085.84 5.79 92.22 19.37 Alice (36) + Ume (56) 92 3.5 2120.87 5.89 101.25 17.64 Table 5: Elapsed search time for the molecular conformation of AlaX16 Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (1) 1 480.0 74027.80 154.22 74027.80 1.00 Toyo (16) 16 30.0 70414.21 146.70 4699.15 15.75 Dennis (28) 28 17.1 74027.80 154.22 3375.60 21.93 Alice (36) 36 13.3 90047.27 187.60 3260.41 22.71 Ume (56) 56 8.6 123399.38 257.08 2913.63 25.41 Dennis (28) + Toyo (16) 44 10.9 76747.74 159.89 2762.10 26.80 Alice (36) + Toyo (16) 52 9.2 82700.44 172.29 2246.73 32.95 Dennis (28) + Alice (36) 64 7.5 87571.30 182.44 2051.50 36.08 Toyo (16) + Ume (56) 72 6.7 109671.32 228.48 2617.85 28.28 Dennis (28) + Ume (56) 84 5.7 102817.90 214.20 2478.93 29.86 Dennis(28)+Ume(56)+Toyo(16) 100 4.8 98238.07 204.66 2478.93 29.86 Table 6: Elapsed time of the search for the trial structure of 1L2Y.",
                "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 331.0 867 286,967 79.71 1.00 Toyo MPI (16) 16 20.7 867 18,696 5.19 15.34 Dennis (28) 28 11.8 803 14,101 3.91 20.35 Dennis (28) + Ume(56) 84 3.9 1,064 8,316 2.31 34.50 Table 7: Elapsed time of the search for the trial structure of 1BL1.",
                "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 519.0 3,646 1892,210 525.61 1.00 Toyo MPI (16) 16 32.4 3,646 120,028 33.34 15.76 Dennis (28) 28 18.5 3,154 61,803 17.16 30.61 Dennis (28) + Ume (56) 84 6.1 4,497 33,502 9.30 56.48 160 number of trial structures generated in each iteration, indicating the degree of parallelism.",
                "Figure 3 also summarizes the amount of data transmission required for initialization of a worker program and for optimization of each trial structure.",
                "Note that the amount of data transmission, which is required in order to initialize a worker program and optimize a trial structure in the MPI version of CONFLEX, is equal to that of CONFLEX-G. We used an improvement version of MM2 force field to assign a potential energy function to various geometric properties of a group of atoms. 4.2.1 Performance in a Local Cluster We first compared the performance of CONFLEX-G, the MPI version of CONFLEX, and the original sequential version of CONFLEX-G using a local cluster.",
                "We investigated performance by varying the number of workers using the Dennis cluster.",
                "We chose AlaX04 as a test molecule for this experiment.",
                "Figure 7 compares the results for the CONFLEX MPI and CONFLEX-G in a local PC cluster.",
                "The result of this experiment shows that CONFLEX-G can reduce the execution time as the number of workers increases, as in the MPI version of CONFLEX.",
                "We found that CONFLEX-G achieved efficiencies comparable to the MPI version.",
                "With 28 workers, CONFLEX-G achieved an 18.00 times speedup compared to the CONFLEX sequential version.",
                "The performance of CONFLEX-G without the OmniRPC AIM facility is worse than that of CONFLEXG using the facility, based on the increase in the number of workers.",
                "This indicates that the OmniRPC AIM enables the worker to calculate efficiently without other calculations, such initialization or invocation of worker programs.",
                "As the number of workers is increased, the performance of CONFLEX-G is a slightly lower than that of the MPI version.",
                "This performance degradation is caused by differences in the worker initialization processes of CONFLEX-G and CONFLEX MPI.",
                "In the case of CONFLEX MPI, all workers are initialized in advance of the optimization phase.",
                "In the case of OminRPC, the worker is invoked on-demand when the RPC call is actually issued.",
                "Therefore, the initialization incurs this overhead.",
                "Since the objective of CONFLEX-G is to explore the conformations of large bio-molecules, the number of trial structures and the time to optimize the trial structure might be large.",
                "In such cases, the overhead to invoke and initialize the worker program can be small compared to the entire elapsed time. 4.2.2 Performance for Peptides in The Grid Testbed First, the sample molecules (AlaX04 and AlaX16) were used to examine the CONFLEX-G performance in a grid environment.",
                "Figure 8 shows the speedup achieved by using multiple clusters compared to using one worker in the Dennis cluster.",
                "Detailed results are shown in Table 4 and Table 5.",
                "In both cases, the best performance was obtained using 64 workers of the combination of the Dennis and Alice clusters.",
                "CONFLEX-G achieved a maximum speedup of 36.08 times for AlaX04 and a maximum speedup of 21.91 times for AlaX16.",
                "In the case of AlaX04, the performance is improved only when the network performance between clusters is high.",
                "However, even if two or more clusters are used in a wide area network environment, the performance improvement was slight because the optimization time of one trial structure generated from AlaX04, a small molecule, is short.",
                "In addition, the overhead required for invocation of a worker program and network data transmission consume a large portion of the remaining processing time.",
                "In particular, the data transmission required for the initialization of a worker program is 2 MB.",
                "In the case of Toyo cluster, where the network performance between the client program and the worker programs is poor, the time of data transmission to the worker program required approximately 6.7 seconds.",
                "Since this transmission time was longer than the processing time of one structure optimization in CONFLEX-G, most of the time was spent for this data transmission.",
                "Therefore, even if CONFLEX-G uses a large number of calculation nodes in a wide area network environment, the benefit of using a grid resource is not obtained.",
                "In the case of AlaX16, CONFLEX-G achieved a speedup by using two or more PC clusters in our grid testbed.",
                "This was because the calculation time on the worker program was long and the overhead, such as network latency and the invoking of worker programs, became relatively small and could be hidden.",
                "The best performance was obtained using 64 workers in the Dennis and Alice clusters.",
                "In the case of AaX16, the achieved performance was a speedup of 36.08 times.",
                "Figure 9 reveals the effect of using the facility of the OmniRPC AIM on CONFLEX-G performance.",
                "In most cases, CONFLEX-G with the OmniRPC AIM facility archived better performance than CONFLEX-G without the facility.",
                "In particular, the OmniRPC AIM facility was advantageous when using two clusters connected by a low-performance network.",
                "The results indicate that the OmniRPC AIM facility can improve performance in the grid environment. 4.2.3 PerformanceforSmallProteininTheGridTestbed Finally, we explored the molecular conformation using CONFLEX-G for large molecules.",
                "In a grid environment, this experiment was conducted using the Dennis and Ume clusters.",
                "In this experiment, we used two proteins, 1L2Y and 1BL1.",
                "Table 6 and Table 7 show the performance of CONFLEX-G in the grid environment and that of CONFLEX MPI in the Toyo cluster, respectively.",
                "The speedups in these tables were computed respectively based on the performance of one worker and 16 workers of the Toyo cluster using CONFLEX MPI.",
                "CONFLEX-G with 84 workers in Dennis and Ume clusters obtained maximum speedups of 56.5 times for 1L2Y and 34.5 times for 1L2Y.",
                "Since the calculation time for structure optimization required a great deal of time, the ratio of overhead, including tasks such as the invocation of a worker program and data transmission for initialization, became very small, so that the performance of CONFLEX-G was improved.",
                "We found that the load imbalance in the processing time of optimization for each trial structure caused performance degradation.",
                "When we obtained the best performance for 1L2Y using the Dennis and Ume clusters, the time for each structure optimization varied from 190 to 27,887 seconds, and the ratio between the longest and shortest times was 13.4.",
                "For 1BL1, the ratio of minimum time over maximum time was 190.",
                "In addition, in order that the worker program wait until the completion of optimization of all trial structures, all worker programs were found to wait in an idle state for approximately 6 hours.",
                "This has caused the performance degradation of CONFLEX-G. 161 4.3 Discussion In this subsection, we discuss the improvement of the performance reflected in our experiments.",
                "Exploiting parallelism - In order to exploit more computational resources, it is necessary to increase the degree of parallelism.",
                "In this experiment, the degree of parallelism was not so large in the case of the sample molecules.",
                "When using a set of over 500 computing nodes for 1BL1, the number of one trial structures assigned to each worker will be only one or two.",
                "If over 100 trial structures are assigned to each worker program, calculation can be performed more efficiently due to the reduction of the overhead for worker invocation and initialization via the facility of the OmniRPC AIM.",
                "One idea for increasing parallelism is to overlap the execution of two or more sets of trial structures.",
                "In the current algorithm, a set of trial structures is generated from one initial structure and computed until optimizations for all structures in this set are calculated.",
                "Furthermore, this will help to improve load imbalance.",
                "By having other sets of trial structures overlap, even if some optimizations require a long time, the optimization for the structures in other sets can be executed to compensate for the idle workers for other optimizations.",
                "It is however unclear how such modification of the algorithm might affect the quality of the final results in terms of a conformation search.",
                "Improvement in load imbalance when optimizing each trial structure - Table 8 lists the statistics for optimization times of trial structures generated for each sample molecule measured using 28 workers in the Dennis cluster.",
                "When two or more sets of PC clusters are used, the speedup in performance is hampered by the load imbalance of the optimization of the trial structures.",
                "The longest time for optimizing a trial structure was nearly 24 times longer than the shortest time.",
                "Furthermore, other workers must wait until the longest job has Finished, so that the entire execution time cannot be reduced.",
                "When CONFLEX-G searched the conformers of 1BL1 by the Dennis cluster, the longest calculation time of the trial structure optimization made up approximately 80% of the elapsed time.",
                "Therefore, there are two possible solutions for the load Imbalance. • It is necessary to refine the algorithm used to generate the trial structure, which suppresses the time variation for optimizing a trial structure in CONFLEX.",
                "This enables CONFLEX-G to achieve high-throughput by using many computer resources. • One of the solutions is to overlap the executions for two or more sets of trial structures.",
                "In the current algorithms, a set of trial structures is generated from one initial structure and calculation continues until all structures in this set are calculated.",
                "By having other sets of trial structures, even if a structure search takes a long time, a job can be executed in order to compensate the load imbalance by other jobs.",
                "However, how such modification of the algorithms might affect the efficiency is not clear. • In this experiment, we used a simple build-in roundrobbin scheduler of OmniRPC, which is necessary in order to apply the scheduler that allocates structures with long optimization times to a high-performance Table 8: Statistics of elapsed time of trial structure optimization using 28 workers in the Dennis cluster.",
                "Molecular Min Max Average Variance code (s) (s) (s) AlaX04 2.0 11.3 5.3 3 AlaX16 47.6 920.0 154.2 5404 1L2Y 114.2 13331.4 803.2 636782 1BL1 121.0 29641.8 3153.5 2734811 node and structures with short optimization times to low-performance nodes.",
                "In general, however, it might be difficult to predict the time required for trial structure optimization.",
                "Parallelization of the worker program for speedup to optimize a trial structure - In the current implementation, we do not parallelize the worker program.",
                "In order to speed up trial structures, hybrid programming using OmniRPC and OpenMP in an SMP (Symmetric Multiple Processor) machine may be one of the alternative methods by which to improve overall performance. 5.",
                "RELATED WORK Recently, an algorithm has been developed that solves the problems of parallelization and communication in poorly connected processors to be used for simulation.",
                "The Folding@home project[13] simulates timescales thousands to millions of times longer than previously achieved.",
                "This has allowed us to simulate folding for the first time and to directly examine folding related diseases.",
                "SETI@home[14] is a program to search for alien life by analyzing radio telescope signals using Fourier transform radio telescope data from telescopes from different sites.",
                "SETI@home tackles immensely parallel problems, in which calculation can easily be divided among several computers.",
                "Radio telescope data chunks can easily be assigned to different computers.",
                "Most of these efforts explicitly develop a docking application as a parallel application using a special purpose parallel programming language and middleware, such as MPI, which requires development skills and effort.",
                "However, the skills and effort required to develop a grid application may not be required for OmniRPC.",
                "Nimrod/G[15] is a tool for distributed parametric modeling and implements a parallel task farm for simulations that require several varying input parameters.",
                "Nimrod incorporates a distributed scheduling component that can manage the scheduling of individual experiments to idle computers in a local area network.",
                "Nimrod has been applied to applications including bio-informatics, operations research, and molecular modeling for drug design.",
                "NetSolve[8] is an RPC facility similar to OmniRPC and Ninf, providing a similar programming interface and automatic load balancing mechanism.",
                "Ninf-G[7] is a grid-enabled implementation of Ninf and provides a GridRPC[10] system that uses LDAP to manage the database of remote executables, but does not support clusters involving private IP addresses or addresses inside a firewall.",
                "Matsuoka et al. [16] has also discussed several design issues related to grid RPC systems. 162 6.",
                "CONCLUSIONS AND FUTURE WORK We have designed and implemented CONFLEX-G using OmniRPC.",
                "We reported its performance in a grid testbed of several geographically distributed PC clusters.",
                "In order to explore the conformation of large bio-molecules, CONFLEXG was used to generate trial structures of the molecules, and allocate jobs to optimize them by molecular mechanics in the grid.",
                "OmniRPC provides a restricted persistence model so that the module is automatically initialized at invocation by calling the initialization procedure.",
                "This can eliminate unnecessary communication and the initialization at each call in CONFLEX-G. CONFLEX-G can achieves performance comparable to CONFLEX MPI and exploits more computing resources by allowing the use of multiple PC clusters in the grid.",
                "The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times for the 1BL1 molecule, where the molecule consists of a large number of atoms and each trial structure optimization requires a great deal of time.",
                "The load imbalance of the trial structure optimizations may cause performance degradation.",
                "We need to refine the algorithm used to generate the trial structure in order to improve the load balance optimization for trial structures in CONFLEX.",
                "Future studies will include development of deployment tools and an examination of fault tolerance.",
                "In the current OmniRPC, the registration of an execution program to remote hosts and deployments of worker programs are manually set.",
                "Deployment tools will be required as the number of remote hosts is increased.",
                "In grid environments in which the environment changes dynamically, it is also necessary to support fault tolerance.",
                "This feature is especially important in large-scale applications which require lengthy calculation in a grid environment.",
                "We plan to refine the conformational optimization algorithm in CONFLEX to explore the conformation space search of larger bio-molecules such HIV protease using up to 1000 workers in a grid environment. 7.",
                "ACKNOWLEDGMENTS This research was supported in part by a Grant-in-Aid from the Ministry of Education, Culture, Sports, Science and Technology in Japan, No. 14019011, 2002, and as part of the Program of Research and Development for Applying Advanced Computational Science and Technology by the Japan Science and Technology Corporation (Research on the grid computing platform for drug design).",
                "We would like to thank grid technology research center, AIST, Japan for providing computing resources for our experiment. 8.",
                "REFERENCES [1] H. Goto and E. Osawa.",
                "An efficient algorithm for searching low-energy conformers of cyclic and acyclic molecules.",
                "J. Chem.",
                "Soc., Perkin Trans, 2:187-198, 1993. [2] M. Sato, T. Boku, and D. Takahashi.",
                "OmniRPC: a Grid RPC System for Parallel Programming in Cluster and Grid Environment.",
                "In Proc. of CCGrid2003, pages 219-229, 2003. [3] M. Sato, M. Hirano, Y. Tanaka, and S. Sekiguchi.",
                "OmniRPC: a Grid RPC facility for Cluster and Global Computing in OpenMP.",
                "In Proc. of Workshop on OpenMP Applications and Tools 2001(LNCS 2104 ), pages 130-135, 2001. [4] OmniRPC Project. http://www.omni.hpcc.jp/omnirpc/. [5] M. Sato, H. Nakada, S. Sekiguchi, S. Matsuoka, U. Nagashima, and H. Takagi.",
                "Ninf: A Network Based Information Library for Global World-Wide Computing Infrastructure.",
                "In HPCN Europe, pages 491-502, 1997. [6] Ninf Project. http://ninf.apgrid.org/. [7] Y. Tanaka, H. Nakada, S. Sekiguchi, T. Suzumura, and S. Matsuoka.",
                "Ninf-G: A Reference Implementation of RPC-based Programming Middleware for Grid Computing .",
                "Journal of Grid Computing, 1(1):41-51, 2003. [8] D. Arnold, S. Agrawal, S. Blackford, J. Dongarra, M. Miller, K. Seymour, K. Sagi, Z. Shi, and S. Vadhiyar.",
                "Users Guide to NetSolve V1.4.1.",
                "Innovative Computing Dept.",
                "Technical Report ICL-UT-02-05, University of Tennessee, Knoxville, TN, June 2002. [9] Object management group. http://www.omg.org/. [10] K. Seymour, H. Nakada, S. Matsuoka, J. Dongarra, C. Lee, and H. Casanova.",
                "GridRPC: A Remote Procedure Call API for Grid Computing. [11] H.Goto, T. Takahashi, Y. Takata, K. Ohta, and U Nagashima.",
                "Conflex: Conformational behaviors of polypeptides as predicted by a conformational space search.",
                "In Nanotech2003, volume 1, pages 32-35, 2003. [12] I.",
                "Foster and C. Kesselman.",
                "Globus: A metacomputing infrastructure toolkit.",
                "The International Journal of Supercomputer Applications and High Performanc e Computing, 11(2):115-128, Summer 1997. [13] Stefan M. Larson, Christopher D. Snow, Michael Shirts, and Vijay S. Pande.",
                "Folding@home and genome@home: Using distributed computing to tackle prev iously intractable problems in computational biology.",
                "Computational Genomics, 2002. [14] seti@home project. http://setiathome.ssl.berkeley.edu/. [15] R. Buyya, K. Branson, J. Giddy, and D. Abramson.",
                "The virtual laboratory: a toolset to enable distributed molecular modelling for drug design on the world-wide grid.",
                "Concurrency and Computation: Practice and Experience, 15(1):1-25, January 2003. [16] S. Matsuoka, H. Nakada, M. Sato, and S. Sekiguchi.",
                "Design issues of Network Enabled Server Systems for the Grid.",
                "In Proc. of GRID 2000 (LNCS 1971), pages 4-17, 2000. 163"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        },
        "pc cluster": {
            "translated_key": "clúster de PC",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Implementation and Performance Evaluation of CONFLEX-G: Grid-enabled Molecular Conformational Space Search Program with OmniRPC Yoshihiro Nakajima Graduate School of Systems & Information Engineering, University of Tsukuba Tsukuba, 305-8577, Japan yoshihiro@hpcs.is.tsukuba.ac.jp Mitsuhisa Sato Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan msato@is.tsukuba.ac.jp Hitoshi Goto Knowledge-based Information Engineering, Toyohashi University of Technology Toyohashi, 441-8580, Japan gotoh@cochem2.tutkie.tut.ac.jp Taisuke Boku, Daisuke Takahashi Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan {taisuke,daisuke}@hpcs.is.tsukuba.ac.jp ABSTRACT CONFLEX-G is the grid-enabled version of a molecular conformational space search program called CONFLEX.",
                "We have implemented CONFLEX-G using a grid RPC system called OmniRPC.",
                "In this paper, we report the performance of CONFLEX-G in a grid testbed of several geographically distributed PC clusters.",
                "In order to explore many conformation of large bio-molecules, CONFLEX-G generates trial structures of the molecules and allocates jobs to optimize a trial structure with a reliable molecular mechanics method in the grid.",
                "OmniRPC provides a restricted persistence model to support the parametric search applications.",
                "In this model, when the initialization procedure is defined in the RPC module, the module is automatically initialized at the time of invocation by calling the initialization procedure.",
                "This can eliminate unnecessary communication and initialization at each call in CONFLEX-G. CONFLEXG can achieve performance comparable to CONFLEX MPI and can exploit more computing resources by allowing the use of a cluster of multiple clusters in the grid.",
                "The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times in the case of the 1BL1 molecule, where the molecule consists of a large number of atoms, and each trial structure optimization requires significant time.",
                "The load imbalance of the optimization time of the trial structure may also cause performance degradation.",
                "Categories and Subject Descriptors C.2.4 [Computer Systems Organization]: COMPUTERCOMMUNICATION NETWORK-Distributed Systems; J.2.4 [Computer Applications]: PHYSICAL SCIENCES AND ENGINEERING General Terms Design,Performance 1.",
                "INTRODUCTION Elucidation of the stable conformations and the folding process of proteins is one of the most fundamental and challenging goals in life science.",
                "While some of the most common secondary structures (e.g., certain types of helix, the beta-strand, and the coil) are well known, precise analysis of the thousands of chemically important conformers and pico-second-order analysis of their conformational interconversions via the transition states on the potential energy surface are required for the microsecond-order investigation of the folding process toward the tertiary structure formations.",
                "Recently, the concept of the computational grid has begun to attract significant interest in the field of high-performance network computing.",
                "Rapid advances in wide-area networking technology and infrastructure have made it possible to construct large-scale, high-performance distributed computing environments, or computational grids, that provide dependable, consistent and pervasive access to enormous computational resources.",
                "CONFLEX is one of the most efficient and reliable conformational space search programs[1].",
                "We have applied this 154 program to parallelization using global computing.",
                "The performance of the parallelized CONFLEX enables exploration of the lower-energy region of the conformational space of small peptides within an available elapsed time using a local <br>pc cluster</br>.",
                "Since trial structure optimization in CONFLEX is calculated via molecular mechanics, conformational space search can be performed quickly compared to that using molecular orbital calculation.",
                "Although the parallelized version of CONFLEX was used to calculate in parallel the structure optimization, which takes up over 90% of the processing in the molecular conformation search, sufficient improvement in the speedup could not be achieved by this method alone.",
                "Therefore, for high polymers from live organisms, such as HIV protease, the use one <br>pc cluster</br> is insufficient due to the requirement for optimization of a huge number of trial structures.",
                "This requires the vast computer resources of a grid computing environment.",
                "In this paper, we describe CONFLEX-G, a grid-enabled molecular conformational search program, using OmniRPC and report its performance in a grid of several PC clusters which are geographically distributed.",
                "The prototype CONFLEX-G allocates calculation trial structures optimization, which is a very time-consuming task, to worker nodes in the grid environment in order to obtain high throughput.",
                "In addition, we compare the performance of CONFLEX-G in a local <br>pc cluster</br> to that in a grid testbed.",
                "OmniRPC[2, 3, 4] is a thread-safe implementation of Ninf RPC[5, 6] which is a Grid RPC facility for grid environment computing.",
                "Several systems adopt the concept of the RPC as the basic model for grid environment computing, including Ninf-G[7], NetSolve[8] and CORBA[9].",
                "The RPCstyle system provides an easy-to-use, intuitive programming interface, allowing users of the grid system to easily create grid-enabled applications.",
                "In order to support parallel programming, an RPC client can issue asynchronous call requests to a different remote computer to exploit networkwide parallelism via OmniRPC.",
                "In this paper, we propose the OmniRPC persistence model to a Grid RPC system and demonstrate its effectiveness.",
                "In order to support a typical application for a grid environment, such as a parametric search application, in which the same function is executed with different input parameters on the same data set.",
                "In the current GridRPC system[10], the data set by the previous call cannot be used by subsequent calls.",
                "In the OmniRPC system, once a remote executable is invoked, the client attempts to use the invoked remote executable and its initialized state for subsequent RPC calls to the same remote functions in order to eliminate the invocation cost of each call.",
                "This paper demonstrates that CONFLEX-G is able to exploit the huge computer resources of a grid environment and search large-scale molecular conformers.",
                "We demonstrate CONFLEX-G on our grid testbed using the actual protein as a sample molecule.",
                "The OmniRPC facility of the automatic initializable module (AIM) allows the system to efficiently calculate numerous conformers.",
                "Furthermore, by using OmniRPC, the user can grid-parallelize the existing application, and move from the cluster to the grid environment without modifying program code and compiling the program.",
                "In addition, the user can easily build a private grid environment.",
                "The rest of this paper is organized as follows.",
                "An overview Selection of Initial Structure Conformations Database Local Perturbation Geometry Optimization Comparison and Registration Figure 1: Algorithm of conformational space search in the original CONFLEX. of the CONFLEX system is presented in Section2, and the implementation and design of CONFLEX-G are described in Section 3.",
                "We report experimental results obtained using CONFLEX-G and discuss its performance in Section 4.",
                "In Section 6, we present conclusions and discuss subjects for future study. 2.",
                "CONFLEX CONFLEX [1] is an efficient conformational space search program, which can predominately and exhaustively search the conformers in the lower-energy region.",
                "Applications of CONFLEX include the elucidation of the reactivity and selectivity of drugs and possible drug materials with regard to their conformational flexibility. 2.1 Algorithm of ConformationalSpaceSearch The basic strategy of CONFLEX is an exhaustive search of only the low-energy regions.",
                "The original CONFLEX performs the following four major steps: 1.",
                "Selection of an initial structure among the previously discovered unique conformers sorted in a conformational database. (An input structure is used as the first initial structure at the beginning of a search execution only.) 2.",
                "Generation of trial structures by local perturbations to the selected initial structure. 3.",
                "Geometry optimization for the newly generated trial structures. 4.",
                "Comparison of the successfully optimized (trial) structures with the other conformers stored in a conformation database, and preservation of newly discovered unique conformers in the database.",
                "Figure 1 shows the outline of CONFLEX, the original conformational space search algorithm.",
                "These procedures incorporate two unique strategies.",
                "Figure 2 shows the strategies for generating local perturbations in CONFLEX.",
                "The first strategy involves both corner flapping and edge flipping for the ring atoms and stepwise rotation for side-chains or backbone chains.",
                "These methods provide a highly efficient way to produce several good trial structures.",
                "These perturbations can be considered to mimic 155 Stepwise Rotation Corner Flap Edge Flip Figure 2: Strategies used to generate the local perturbations. a barrier-crossing step in the elementary process of the thermal conformational inter-conversion.",
                "Actually, the perturbations of an initial structure correspond to the precise performance around the space of the initial structure because of localization and weakness of the perturbation.",
                "The selection rule of the initial structure, the LowestConformer-First rule, is the second strategy for directing the conformation search expanded to the low-energy regions.",
                "The initial structure is selected as the set of lowest energy conformers stored in the conformation database.",
                "This rule is effective in moving down the search space toward lower energy regions, like water from a stream running into an empty reservoir, while filling local depressions along the way.",
                "Therefore, these tactical procedures of the CONFLEX search are referred to as the Reservoir Filling Algorithm.",
                "In order to remain in the low-energy region and perform an exhaustive search, the search limit (SEL), which determines the maximum energy of the initial structures, is pre-defined.",
                "Gradually increasing SEL allows only the lowenergy conformers to be searched and avoids straying into unnecessarily high-energy regions. 2.2 Parallelization of CONFLEX for Cluster For application to over 100 atoms, CONFLEX was improved using high-performance parallel computing techniques.",
                "In the CONFLEX search algorithm, the geometry optimization procedures always take 95% of the elapsed time of the search execution.",
                "Therefore, we parallelized this optimization using the Master/Worker parallelization technique.",
                "We modified the search procedures as follows.",
                "After trial structures are generated (step 2), they are temporarily stored in a task pool on the master node.",
                "Then, each worker node is dynamically supplied with one trial structure from the master node.",
                "After an optimization on a worker node is finished, the worker is immediately supplied with another trial structure.",
                "When all of the trial structures related to a given initial structure are optimized, only the master procedure is used in comparison.",
                "By parallelizing CONFLEX, the speedup of searching molecular conformers obtained is as reported in[11]. 3.",
                "CONFLEX-G Originally, CONFLEX was intended for use in exploring the conformers of the large bio-molecules, such HIV protease.",
                "In such molecules, the number of trial structures increases and the time required for optimization of RPC Selection of Initial Structure Conformations Database Local Perturbation Comparison and Registration Client program Task Pool of Geometry Optimization RPC RPC Grid environment Cluster B Cluster A Cluster C Trial structureTrial structure Trial structure Trial structure Figure 3: Procedure of CONFLEX-G. agent rexrex rex Client jones.tsukuba.ac.jp hpc-serv.hpcc.jp hpc1 hpc2 hpc3 Agent invocation communicationNetwork Figure 4: Overview of the OmniRPC system for the remote cluster having a private IP address. the trial structure becomes immense.",
                "We implemented the parallelized version of CONFLEX, which cannot treat such molecules using only a local <br>pc cluster</br>.",
                "In order to exploit the vast computing resources of a grid environment, we designed and implemented CONFLEX-G, which is a grid-enabled version of CONFLEX, with the OmniRPC system.",
                "CONFLEX-G allocates jobs to optimize a trial structure to the computational nodes of each cluster in the grid environment.",
                "Figure 3 shows the process of CONFLEX-G.",
                "The worker programs are initialized by the initialize method, which is provided by the OmniRPC AIM facility at worker invocation.",
                "At each RPC call, the initialized state is reused on the remote host.",
                "In other words, the client program can eliminate the initialization for each RPC call, and can therefore optimize trial structures efficiently. 3.1 The OmniRPC system OmniRPC is a Grid RPC system which allows seamless parallel programming from a <br>pc cluster</br> to a grid environment.",
                "OmniRPC inherits its API and basic architecture from Ninf.",
                "A client and the remote computational hosts which execute the remote procedures may be connected via a network.",
                "The remote libraries are implemented as an executable program which contains a network stub routine as its main routine.",
                "We call this executable program a remote executable program (rex).",
                "When the OmniRPC client program starts, the initialization function of OmniRPC system invokes the OmniRPC agent program omrpc-agent in the remote hosts listed in the host file.",
                "To invoke the agent, the user can use the remote shell command rsh in a local-area network, the GRAM (Globus Resource Allocation Manager) API of the Globus 156 toolkit[12] in a grid environment, or the secure remote shell command ssh.",
                "The user can switch the configurations only by changing the host file.",
                "OmniRpcCall is a simple client programming interface for calling remote functions.",
                "When OmniRpcCall makes a remote procedure call, the call is allocated to an appropriate remote host.",
                "When the client issues the RPC request, it requests that the agent in the selected host submit the job of the remote executable with the local job scheduler specified in the host file.",
                "If the job scheduler is not specified, the agent executes the remote executable in the same node by the fork system call.",
                "The client sends the data of the input arguments to the invoked remote executable, and receives the results upon return of the remote function.",
                "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls in order to eliminate the cost of invoking the same remote executable again.",
                "When the agent and the remote executables are invoked, the remote programs obtain the client address and port from the argument list and connect back to the client by direct TCP/IP or Globus-IO for data transmission.",
                "Because the OmniRPC system does not use any fixed service ports, the client program allocates unused ports dynamically to wait for connection from the remote executables.",
                "This avoids possible security problems, and allows the user to install the OmniRPC system without requiring a privileged account.",
                "Herein, a typical grid resource is regarded as a cluster of geographically distributed PC clusters.",
                "For PC clusters on a private network, an OmniRPC agent process on the server host functions as a proxy to relay communications between the client and the remote executables by multiplexing the communications using a single connection.",
                "This feature, called multiplex IO (MXIO), allows a single client to use up to 1,000 remote computing hosts.",
                "When the <br>pc cluster</br> is inside a firewall, the port forwarding of SSH enables the node to communicate to the outside with MXIO.",
                "Figure 4 shows the overview of the OmniRPC system for a remote cluster with a private IP address.",
                "For parallel programming, the programmer can use asynchronous remote procedure calls, allowing the client to issue several requests while continuing with other computations.",
                "The requests are dispatched to different remote hosts to be executed in parallel, and the client waits or polls the completed request.",
                "In such a programming model with asynchronous remote procedure calls, the programmer should handle outstanding requests explicitly.",
                "Because OmniRPC is a thread-safe system, a number of remote procedure calls may be outstanding at any time for multi-threaded programs written in OpenMP. 3.2 OmniRPC persistence model: automatic initializable module OmniRPC efficiently supports typical Master/Worker parallel applications such as parametric execution programs.",
                "For parametric search applications, which often require large amount of identical data for each call, OmniRPC supports a limited persistence model, which is implemented by the automatic initializable module.",
                "The user can define an initialization procedure in the remote executable in order to send and store data automatically in advance of actual remote procedure calls.",
                "Since the remote executable may accept requests for subsequent calls, the data set which has been set by the initialization procedure can be re-used.",
                "As a result, the worker program can execute efficiently and reduce the amount of data transmitted for initialization.",
                "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls.",
                "However, OmniRPC does not guarantee persistence of the remote executable, so that the data set by the previous call cannot be used by subsequent calls.",
                "This is because a remote call by OmniRpcCall may be scheduled to any remote host dynamically, and remote executables may be terminated accidentally due to dynamic re-scheduling or host faults.",
                "However, persistence of the remote executable can be exploited in certain applications.",
                "An example is a parametric search application: in such an application, it would be efficient if a large set of data could be pre-loaded by the first call, and subsequent calls could be performed on the same data, but with different parameters.",
                "This is the case for CONFLEX.",
                "OmniRPC provides a restricted persistence model through the automatic initializable module (AIM) in order to support this type of application.",
                "If the initialization procedure is defined in the module, the module is automatically initialized at invocation by calling the initialization procedure.",
                "When the remote executable is re-scheduled in different hosts, the initialization is called to initialize the newly allocated remote module.",
                "This can eliminate unnecessary communications when RPC calls use the same data.",
                "To reveal more about the difference in progress between the cases with OmniRPC AIM and without OmniRPC AIM, we present two figures.",
                "Figure 5 illustrates the time chart of the progress of a typical OmniRPC application using the OmniRPC AIM facility, and Figure 6 illustrates the time chart of the same application without the OmniRPC AIM facility.",
                "In both figures, the lines between diamonds represent the processes of initialization, and the lines between points represent the calculation.",
                "The bold line indicates the time when the client program sends the data to a worker program.",
                "It is necessary for the application without the OmniRPC AIM facility to initialize at each RPC.",
                "The application using the OmniRPC AIM facility can re-use the initialized data once the data set is initialized.",
                "This can reduce the initialization at each RPC.",
                "The workers of the application with the AIM can calculate efficiently compared to the application without the OmniRPC AIM facility. 3.3 Implementation of CONFLEX-G using OmniRPC Figure 3 shows an overview of the process used in CONFLEXG.",
                "Using RPCs, CONFLEX-G allocates the processes of trial structure optimization, which are performed by the computation nodes of a <br>pc cluster</br> in the MPI version of CONFLEX, to the computational nodes of each cluster in a grid environment.",
                "There are two computations which are performed by the worker programs in CONFLEX-G. One is the initialization of a worker program, and another is the calculation of trial structure optimization.",
                "First, the OmniRPC facility of the AIM is adapted for initialization of a worker program.",
                "This facility automatically calls the initialization function, which is contained in the worker program, once the client program invokes the worker program in a remote node.",
                "It is necessary for the common RPC system including GridRPC to initialize a program for every RPC call, since data persistence of worker programs 157 time Client Program Worker Program 1 Worker Program 2 initialization initialization calculation calculation calculation calculation calculation Parallelized using asynchronous RPCs Figure 5: Time chart of applications using the OmniRPC facility of the automatic initializable module. time Client Program Worker Program 1 Worker Program 2 initialization initializationcalculation calculation calculation calculation initialization initialization initialization Parallelized using asynchronous RPCs calculation Figure 6: Time chart of applications without the OmniRPC facility of the automatic initializable module.",
                "Table 1: Machine configurations in the grid testbed.",
                "Site Cluster Name Machine Network Authentication # of Nodes # of CPUs Univ. of Tsukuba Dennis Dual Xeon 2.4GHz 1Gb Ethernet Globus, SSH 14 28 Alice Dual Athlon 1800+ 100Mb Ethernet Globus, SSH 18 36 TUT Toyo Dual Athlon 2600+ 100Mb Ethernet SSH 8 16 AIST Ume Dual Pentium3 1.4GHz 1Gb Ethernet Globus, SSH 32 64 is not supported.",
                "In OmniRPC, however, when the Initialize remote function is defined in the worker program and a new worker program, corresponding to the other RPC, is assigned to execute, an Initialize function is called automatically.",
                "Therefore, after the Initialize function call to set up common initialization data, a worker program can re-use this data and increase the efficiency of its processes.",
                "Thus, the higher the set-up cost, the greater the potential benefit.",
                "We implemented the worker program of CONFLEX-G to receive data, such as evaluation parameters of energy, from a client program and to be initialized by the Initialize function.",
                "We arranged the client program of CONFLEX-G to transfer the parameter file at the time of worker initialization.",
                "This enables execution to be performed by modify only the client setting if the user wants to run CONFLEX-G with a different data set.",
                "Second, in order to calculate trial structure optimization in a worker program, the worker program must receive the data, such as the atom arrangement of the trial structure and the internal energy state.",
                "The result is returned to the client program after the worker has Optimized the trial structure.",
                "Since the calculation portion of the structure optimization in this worker program can be calculated independently using different parameters, we parallelized this portion using asynchronous RPCs on the client side.",
                "To call the structure optimization function in a worker program from the client program, we use the OmniRpcCallAsync API, which is intended for asynchronous RPC.",
                "In addition, OmniRpcCallWaitAll API which waits until all asynchronous RPCs are used in order to perform synchronization with all of the asynchronous RPCs completed so as to optimize the trial structure.",
                "The client program which assigns trial structure optimization to the calculation node of a <br>pc cluster</br> using RPC is outlined as follows.",
                "OmniRpcInit() OmniRpcModuleInit(conflex_search,...); ... while( <new conformers> ) { foreach( <trial structures> ) OmniRpcCallAsync(conflex_search_worker, ...); OmniRpcWaitAll(); ...",
                "Note that OmniRpcModuleInit API returns only the arguments needed for initialization and will not actually execute the Initialization function.",
                "As described above, the actual Initialization is performed at the first remote call.",
                "Since the OmniRPC system has an easy round-robin scheduler, we do not have to explicitly write the code for load balance.",
                "Therefore, RPCs are allocated automatically to idle workers. 158 Table 2: Network performance between the master node of the Dennis cluster and the master node of each <br>pc cluster</br>.",
                "Round-Trip Throughput Cluster Time (ms) (Mbps) Dennis 0.23 879.31 Alice 0.18 94.12 Toyo 11.27 1.53 Ume 1.07 373.33 4.",
                "PRELIMINARY RESULTS 4.1 Grid Testbed The grid testbed was constructed by computing resources at the University of Tsukuba, the Toyohashi University of Technology (TUT) and the National Institute of Advanced Industrial Science and Technology (AIST).",
                "Table 1 shows the computing resources used for the grid of the present study.",
                "The University of Tsukuba and AIST are connected by a 1-Gbps Tsukuba WAN, and the other PC clusters are connected by SINET, which is wide-area network dedicated to academic research in Japan.",
                "Table 2 shows the performance of the measured network between the master node of the Dennis cluster and the master node of each <br>pc cluster</br> in the grid testbed.",
                "The communication throughput was measured using netperf, and the round-trip time was measured by ping. 4.2 Performance of CONFLEX-G In all of the CONFLEX-G experiments, the client program was executed on the master node of the Dennis cluster at the University of Tsukuba.",
                "The built-in Round-Robin scheduler of OmniRPC was used as a job scheduler.",
                "SSH was used for an authentication system, the OminRPCs MXIO, which relays the I/O communication between client program and worker programs by port forwarding of SSH was, not used.",
                "Note that one worker program is assigned and performed on one CPU of the calculation node in a <br>pc cluster</br>.",
                "That is, the number of workers is equal to the number of CPUs.",
                "These programs were compiled by the Intel Fortran Compiler 7.0 and gcc 2.95.",
                "MPICH, Version 1.2.5, was used to compare the performance between CONFLEX MPI and CONFLEX-G.",
                "In order to demonstrate the usability of the OmniRPC facility of the AIM, we implemented another version of CONFLEX-G which did not utilize the OmniRPC facility.",
                "The worker program in this version of CONFLEXG must be initialized at each RPC because the worker does not hold the previous data set.",
                "In order to examine the performance of CONFLEX-G, we selected two peptides and two small protein as test molecules: • N-acetyl tetra-alanine methylester (AlaX04) • N-acetyl hexdeca-alanine methylester (AlaX16) • TRP-cage miniprotein construct TC5B (1L2Y) • PTH receptor N-terminus fragment (1BL1) Table 3 lists the characteristics of these sample molecules.",
                "The column trial structure / loops in this table shows the Figure 7: Performances of CONFLEX-G, CONFLEX MPI and Original CONFLEX in the Dennis cluster.",
                "Figure 8: Speedup ratio, which is based on the elapsed time of CONFLEX-G using one worker in the Dennis cluster.",
                "Figure 9: Performance of CONFLEX-G with and without the OmniRPC facility of automatic initializable module for AlaX16. 159 Table 3: Characteristics of molecules and data transmission for optimizing trial molecular structures in each molecular code.",
                "Molecular # of # of total trial trial structure Data transfer to Data transfer code atoms structures / loop initialize a worker / trial structure AlaX04 181 360 45 2033KB 17.00KB AlaX16 191 480 160 2063KB 18.14KB 1L2Y 315 331 331 2099KB 29.58KB 1BL1 519 519 519 2150KB 48.67KB Table 4: Elapsed search time for the molecular conformation of AlaX04.",
                "Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (sequential) 1 320.0 1786.21 4.96 1786.21 1.00 Toyo (16) 16 20.0 1497.08 4.16 196.32 9.10 Dennis (28) 28 11.4 1905.51 5.29 97.00 18.41 Alice (36) 36 8.9 2055.25 5.71 87.09 20.51 Ume (56) 56 5.7 2196.77 6.10 120.69 14.80 Dennis (28) + Toyo (16) 44 7.3 1630.09 4.53 162.35 11.00 Alice (36) + Toyo (16) 52 6.2 1774.53 4.93 178.24 10.02 Dennis (28) + Alice (36) 64 5.0 1999.02 5.55 81.52 21.91 Dennis (28) + Ume (56) 84 3.8 2085.84 5.79 92.22 19.37 Alice (36) + Ume (56) 92 3.5 2120.87 5.89 101.25 17.64 Table 5: Elapsed search time for the molecular conformation of AlaX16 Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (1) 1 480.0 74027.80 154.22 74027.80 1.00 Toyo (16) 16 30.0 70414.21 146.70 4699.15 15.75 Dennis (28) 28 17.1 74027.80 154.22 3375.60 21.93 Alice (36) 36 13.3 90047.27 187.60 3260.41 22.71 Ume (56) 56 8.6 123399.38 257.08 2913.63 25.41 Dennis (28) + Toyo (16) 44 10.9 76747.74 159.89 2762.10 26.80 Alice (36) + Toyo (16) 52 9.2 82700.44 172.29 2246.73 32.95 Dennis (28) + Alice (36) 64 7.5 87571.30 182.44 2051.50 36.08 Toyo (16) + Ume (56) 72 6.7 109671.32 228.48 2617.85 28.28 Dennis (28) + Ume (56) 84 5.7 102817.90 214.20 2478.93 29.86 Dennis(28)+Ume(56)+Toyo(16) 100 4.8 98238.07 204.66 2478.93 29.86 Table 6: Elapsed time of the search for the trial structure of 1L2Y.",
                "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 331.0 867 286,967 79.71 1.00 Toyo MPI (16) 16 20.7 867 18,696 5.19 15.34 Dennis (28) 28 11.8 803 14,101 3.91 20.35 Dennis (28) + Ume(56) 84 3.9 1,064 8,316 2.31 34.50 Table 7: Elapsed time of the search for the trial structure of 1BL1.",
                "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 519.0 3,646 1892,210 525.61 1.00 Toyo MPI (16) 16 32.4 3,646 120,028 33.34 15.76 Dennis (28) 28 18.5 3,154 61,803 17.16 30.61 Dennis (28) + Ume (56) 84 6.1 4,497 33,502 9.30 56.48 160 number of trial structures generated in each iteration, indicating the degree of parallelism.",
                "Figure 3 also summarizes the amount of data transmission required for initialization of a worker program and for optimization of each trial structure.",
                "Note that the amount of data transmission, which is required in order to initialize a worker program and optimize a trial structure in the MPI version of CONFLEX, is equal to that of CONFLEX-G. We used an improvement version of MM2 force field to assign a potential energy function to various geometric properties of a group of atoms. 4.2.1 Performance in a Local Cluster We first compared the performance of CONFLEX-G, the MPI version of CONFLEX, and the original sequential version of CONFLEX-G using a local cluster.",
                "We investigated performance by varying the number of workers using the Dennis cluster.",
                "We chose AlaX04 as a test molecule for this experiment.",
                "Figure 7 compares the results for the CONFLEX MPI and CONFLEX-G in a local <br>pc cluster</br>.",
                "The result of this experiment shows that CONFLEX-G can reduce the execution time as the number of workers increases, as in the MPI version of CONFLEX.",
                "We found that CONFLEX-G achieved efficiencies comparable to the MPI version.",
                "With 28 workers, CONFLEX-G achieved an 18.00 times speedup compared to the CONFLEX sequential version.",
                "The performance of CONFLEX-G without the OmniRPC AIM facility is worse than that of CONFLEXG using the facility, based on the increase in the number of workers.",
                "This indicates that the OmniRPC AIM enables the worker to calculate efficiently without other calculations, such initialization or invocation of worker programs.",
                "As the number of workers is increased, the performance of CONFLEX-G is a slightly lower than that of the MPI version.",
                "This performance degradation is caused by differences in the worker initialization processes of CONFLEX-G and CONFLEX MPI.",
                "In the case of CONFLEX MPI, all workers are initialized in advance of the optimization phase.",
                "In the case of OminRPC, the worker is invoked on-demand when the RPC call is actually issued.",
                "Therefore, the initialization incurs this overhead.",
                "Since the objective of CONFLEX-G is to explore the conformations of large bio-molecules, the number of trial structures and the time to optimize the trial structure might be large.",
                "In such cases, the overhead to invoke and initialize the worker program can be small compared to the entire elapsed time. 4.2.2 Performance for Peptides in The Grid Testbed First, the sample molecules (AlaX04 and AlaX16) were used to examine the CONFLEX-G performance in a grid environment.",
                "Figure 8 shows the speedup achieved by using multiple clusters compared to using one worker in the Dennis cluster.",
                "Detailed results are shown in Table 4 and Table 5.",
                "In both cases, the best performance was obtained using 64 workers of the combination of the Dennis and Alice clusters.",
                "CONFLEX-G achieved a maximum speedup of 36.08 times for AlaX04 and a maximum speedup of 21.91 times for AlaX16.",
                "In the case of AlaX04, the performance is improved only when the network performance between clusters is high.",
                "However, even if two or more clusters are used in a wide area network environment, the performance improvement was slight because the optimization time of one trial structure generated from AlaX04, a small molecule, is short.",
                "In addition, the overhead required for invocation of a worker program and network data transmission consume a large portion of the remaining processing time.",
                "In particular, the data transmission required for the initialization of a worker program is 2 MB.",
                "In the case of Toyo cluster, where the network performance between the client program and the worker programs is poor, the time of data transmission to the worker program required approximately 6.7 seconds.",
                "Since this transmission time was longer than the processing time of one structure optimization in CONFLEX-G, most of the time was spent for this data transmission.",
                "Therefore, even if CONFLEX-G uses a large number of calculation nodes in a wide area network environment, the benefit of using a grid resource is not obtained.",
                "In the case of AlaX16, CONFLEX-G achieved a speedup by using two or more PC clusters in our grid testbed.",
                "This was because the calculation time on the worker program was long and the overhead, such as network latency and the invoking of worker programs, became relatively small and could be hidden.",
                "The best performance was obtained using 64 workers in the Dennis and Alice clusters.",
                "In the case of AaX16, the achieved performance was a speedup of 36.08 times.",
                "Figure 9 reveals the effect of using the facility of the OmniRPC AIM on CONFLEX-G performance.",
                "In most cases, CONFLEX-G with the OmniRPC AIM facility archived better performance than CONFLEX-G without the facility.",
                "In particular, the OmniRPC AIM facility was advantageous when using two clusters connected by a low-performance network.",
                "The results indicate that the OmniRPC AIM facility can improve performance in the grid environment. 4.2.3 PerformanceforSmallProteininTheGridTestbed Finally, we explored the molecular conformation using CONFLEX-G for large molecules.",
                "In a grid environment, this experiment was conducted using the Dennis and Ume clusters.",
                "In this experiment, we used two proteins, 1L2Y and 1BL1.",
                "Table 6 and Table 7 show the performance of CONFLEX-G in the grid environment and that of CONFLEX MPI in the Toyo cluster, respectively.",
                "The speedups in these tables were computed respectively based on the performance of one worker and 16 workers of the Toyo cluster using CONFLEX MPI.",
                "CONFLEX-G with 84 workers in Dennis and Ume clusters obtained maximum speedups of 56.5 times for 1L2Y and 34.5 times for 1L2Y.",
                "Since the calculation time for structure optimization required a great deal of time, the ratio of overhead, including tasks such as the invocation of a worker program and data transmission for initialization, became very small, so that the performance of CONFLEX-G was improved.",
                "We found that the load imbalance in the processing time of optimization for each trial structure caused performance degradation.",
                "When we obtained the best performance for 1L2Y using the Dennis and Ume clusters, the time for each structure optimization varied from 190 to 27,887 seconds, and the ratio between the longest and shortest times was 13.4.",
                "For 1BL1, the ratio of minimum time over maximum time was 190.",
                "In addition, in order that the worker program wait until the completion of optimization of all trial structures, all worker programs were found to wait in an idle state for approximately 6 hours.",
                "This has caused the performance degradation of CONFLEX-G. 161 4.3 Discussion In this subsection, we discuss the improvement of the performance reflected in our experiments.",
                "Exploiting parallelism - In order to exploit more computational resources, it is necessary to increase the degree of parallelism.",
                "In this experiment, the degree of parallelism was not so large in the case of the sample molecules.",
                "When using a set of over 500 computing nodes for 1BL1, the number of one trial structures assigned to each worker will be only one or two.",
                "If over 100 trial structures are assigned to each worker program, calculation can be performed more efficiently due to the reduction of the overhead for worker invocation and initialization via the facility of the OmniRPC AIM.",
                "One idea for increasing parallelism is to overlap the execution of two or more sets of trial structures.",
                "In the current algorithm, a set of trial structures is generated from one initial structure and computed until optimizations for all structures in this set are calculated.",
                "Furthermore, this will help to improve load imbalance.",
                "By having other sets of trial structures overlap, even if some optimizations require a long time, the optimization for the structures in other sets can be executed to compensate for the idle workers for other optimizations.",
                "It is however unclear how such modification of the algorithm might affect the quality of the final results in terms of a conformation search.",
                "Improvement in load imbalance when optimizing each trial structure - Table 8 lists the statistics for optimization times of trial structures generated for each sample molecule measured using 28 workers in the Dennis cluster.",
                "When two or more sets of PC clusters are used, the speedup in performance is hampered by the load imbalance of the optimization of the trial structures.",
                "The longest time for optimizing a trial structure was nearly 24 times longer than the shortest time.",
                "Furthermore, other workers must wait until the longest job has Finished, so that the entire execution time cannot be reduced.",
                "When CONFLEX-G searched the conformers of 1BL1 by the Dennis cluster, the longest calculation time of the trial structure optimization made up approximately 80% of the elapsed time.",
                "Therefore, there are two possible solutions for the load Imbalance. • It is necessary to refine the algorithm used to generate the trial structure, which suppresses the time variation for optimizing a trial structure in CONFLEX.",
                "This enables CONFLEX-G to achieve high-throughput by using many computer resources. • One of the solutions is to overlap the executions for two or more sets of trial structures.",
                "In the current algorithms, a set of trial structures is generated from one initial structure and calculation continues until all structures in this set are calculated.",
                "By having other sets of trial structures, even if a structure search takes a long time, a job can be executed in order to compensate the load imbalance by other jobs.",
                "However, how such modification of the algorithms might affect the efficiency is not clear. • In this experiment, we used a simple build-in roundrobbin scheduler of OmniRPC, which is necessary in order to apply the scheduler that allocates structures with long optimization times to a high-performance Table 8: Statistics of elapsed time of trial structure optimization using 28 workers in the Dennis cluster.",
                "Molecular Min Max Average Variance code (s) (s) (s) AlaX04 2.0 11.3 5.3 3 AlaX16 47.6 920.0 154.2 5404 1L2Y 114.2 13331.4 803.2 636782 1BL1 121.0 29641.8 3153.5 2734811 node and structures with short optimization times to low-performance nodes.",
                "In general, however, it might be difficult to predict the time required for trial structure optimization.",
                "Parallelization of the worker program for speedup to optimize a trial structure - In the current implementation, we do not parallelize the worker program.",
                "In order to speed up trial structures, hybrid programming using OmniRPC and OpenMP in an SMP (Symmetric Multiple Processor) machine may be one of the alternative methods by which to improve overall performance. 5.",
                "RELATED WORK Recently, an algorithm has been developed that solves the problems of parallelization and communication in poorly connected processors to be used for simulation.",
                "The Folding@home project[13] simulates timescales thousands to millions of times longer than previously achieved.",
                "This has allowed us to simulate folding for the first time and to directly examine folding related diseases.",
                "SETI@home[14] is a program to search for alien life by analyzing radio telescope signals using Fourier transform radio telescope data from telescopes from different sites.",
                "SETI@home tackles immensely parallel problems, in which calculation can easily be divided among several computers.",
                "Radio telescope data chunks can easily be assigned to different computers.",
                "Most of these efforts explicitly develop a docking application as a parallel application using a special purpose parallel programming language and middleware, such as MPI, which requires development skills and effort.",
                "However, the skills and effort required to develop a grid application may not be required for OmniRPC.",
                "Nimrod/G[15] is a tool for distributed parametric modeling and implements a parallel task farm for simulations that require several varying input parameters.",
                "Nimrod incorporates a distributed scheduling component that can manage the scheduling of individual experiments to idle computers in a local area network.",
                "Nimrod has been applied to applications including bio-informatics, operations research, and molecular modeling for drug design.",
                "NetSolve[8] is an RPC facility similar to OmniRPC and Ninf, providing a similar programming interface and automatic load balancing mechanism.",
                "Ninf-G[7] is a grid-enabled implementation of Ninf and provides a GridRPC[10] system that uses LDAP to manage the database of remote executables, but does not support clusters involving private IP addresses or addresses inside a firewall.",
                "Matsuoka et al. [16] has also discussed several design issues related to grid RPC systems. 162 6.",
                "CONCLUSIONS AND FUTURE WORK We have designed and implemented CONFLEX-G using OmniRPC.",
                "We reported its performance in a grid testbed of several geographically distributed PC clusters.",
                "In order to explore the conformation of large bio-molecules, CONFLEXG was used to generate trial structures of the molecules, and allocate jobs to optimize them by molecular mechanics in the grid.",
                "OmniRPC provides a restricted persistence model so that the module is automatically initialized at invocation by calling the initialization procedure.",
                "This can eliminate unnecessary communication and the initialization at each call in CONFLEX-G. CONFLEX-G can achieves performance comparable to CONFLEX MPI and exploits more computing resources by allowing the use of multiple PC clusters in the grid.",
                "The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times for the 1BL1 molecule, where the molecule consists of a large number of atoms and each trial structure optimization requires a great deal of time.",
                "The load imbalance of the trial structure optimizations may cause performance degradation.",
                "We need to refine the algorithm used to generate the trial structure in order to improve the load balance optimization for trial structures in CONFLEX.",
                "Future studies will include development of deployment tools and an examination of fault tolerance.",
                "In the current OmniRPC, the registration of an execution program to remote hosts and deployments of worker programs are manually set.",
                "Deployment tools will be required as the number of remote hosts is increased.",
                "In grid environments in which the environment changes dynamically, it is also necessary to support fault tolerance.",
                "This feature is especially important in large-scale applications which require lengthy calculation in a grid environment.",
                "We plan to refine the conformational optimization algorithm in CONFLEX to explore the conformation space search of larger bio-molecules such HIV protease using up to 1000 workers in a grid environment. 7.",
                "ACKNOWLEDGMENTS This research was supported in part by a Grant-in-Aid from the Ministry of Education, Culture, Sports, Science and Technology in Japan, No. 14019011, 2002, and as part of the Program of Research and Development for Applying Advanced Computational Science and Technology by the Japan Science and Technology Corporation (Research on the grid computing platform for drug design).",
                "We would like to thank grid technology research center, AIST, Japan for providing computing resources for our experiment. 8.",
                "REFERENCES [1] H. Goto and E. Osawa.",
                "An efficient algorithm for searching low-energy conformers of cyclic and acyclic molecules.",
                "J. Chem.",
                "Soc., Perkin Trans, 2:187-198, 1993. [2] M. Sato, T. Boku, and D. Takahashi.",
                "OmniRPC: a Grid RPC System for Parallel Programming in Cluster and Grid Environment.",
                "In Proc. of CCGrid2003, pages 219-229, 2003. [3] M. Sato, M. Hirano, Y. Tanaka, and S. Sekiguchi.",
                "OmniRPC: a Grid RPC facility for Cluster and Global Computing in OpenMP.",
                "In Proc. of Workshop on OpenMP Applications and Tools 2001(LNCS 2104 ), pages 130-135, 2001. [4] OmniRPC Project. http://www.omni.hpcc.jp/omnirpc/. [5] M. Sato, H. Nakada, S. Sekiguchi, S. Matsuoka, U. Nagashima, and H. Takagi.",
                "Ninf: A Network Based Information Library for Global World-Wide Computing Infrastructure.",
                "In HPCN Europe, pages 491-502, 1997. [6] Ninf Project. http://ninf.apgrid.org/. [7] Y. Tanaka, H. Nakada, S. Sekiguchi, T. Suzumura, and S. Matsuoka.",
                "Ninf-G: A Reference Implementation of RPC-based Programming Middleware for Grid Computing .",
                "Journal of Grid Computing, 1(1):41-51, 2003. [8] D. Arnold, S. Agrawal, S. Blackford, J. Dongarra, M. Miller, K. Seymour, K. Sagi, Z. Shi, and S. Vadhiyar.",
                "Users Guide to NetSolve V1.4.1.",
                "Innovative Computing Dept.",
                "Technical Report ICL-UT-02-05, University of Tennessee, Knoxville, TN, June 2002. [9] Object management group. http://www.omg.org/. [10] K. Seymour, H. Nakada, S. Matsuoka, J. Dongarra, C. Lee, and H. Casanova.",
                "GridRPC: A Remote Procedure Call API for Grid Computing. [11] H.Goto, T. Takahashi, Y. Takata, K. Ohta, and U Nagashima.",
                "Conflex: Conformational behaviors of polypeptides as predicted by a conformational space search.",
                "In Nanotech2003, volume 1, pages 32-35, 2003. [12] I.",
                "Foster and C. Kesselman.",
                "Globus: A metacomputing infrastructure toolkit.",
                "The International Journal of Supercomputer Applications and High Performanc e Computing, 11(2):115-128, Summer 1997. [13] Stefan M. Larson, Christopher D. Snow, Michael Shirts, and Vijay S. Pande.",
                "Folding@home and genome@home: Using distributed computing to tackle prev iously intractable problems in computational biology.",
                "Computational Genomics, 2002. [14] seti@home project. http://setiathome.ssl.berkeley.edu/. [15] R. Buyya, K. Branson, J. Giddy, and D. Abramson.",
                "The virtual laboratory: a toolset to enable distributed molecular modelling for drug design on the world-wide grid.",
                "Concurrency and Computation: Practice and Experience, 15(1):1-25, January 2003. [16] S. Matsuoka, H. Nakada, M. Sato, and S. Sekiguchi.",
                "Design issues of Network Enabled Server Systems for the Grid.",
                "In Proc. of GRID 2000 (LNCS 1971), pages 4-17, 2000. 163"
            ],
            "original_annotated_samples": [
                "The performance of the parallelized CONFLEX enables exploration of the lower-energy region of the conformational space of small peptides within an available elapsed time using a local <br>pc cluster</br>.",
                "Therefore, for high polymers from live organisms, such as HIV protease, the use one <br>pc cluster</br> is insufficient due to the requirement for optimization of a huge number of trial structures.",
                "In addition, we compare the performance of CONFLEX-G in a local <br>pc cluster</br> to that in a grid testbed.",
                "We implemented the parallelized version of CONFLEX, which cannot treat such molecules using only a local <br>pc cluster</br>.",
                "In other words, the client program can eliminate the initialization for each RPC call, and can therefore optimize trial structures efficiently. 3.1 The OmniRPC system OmniRPC is a Grid RPC system which allows seamless parallel programming from a <br>pc cluster</br> to a grid environment."
            ],
            "translated_annotated_samples": [
                "El rendimiento del CONFLEX paralelizado permite explorar la región de energía más baja del espacio conformacional de péptidos pequeños en un tiempo transcurrido disponible utilizando un <br>clúster de PC</br> local.",
                "Por lo tanto, para polímeros de alto peso molecular de organismos vivos, como la proteasa del VIH, el uso de un solo <br>clúster de PC</br> es insuficiente debido a la necesidad de optimizar una gran cantidad de estructuras de prueba.",
                "Además, comparamos el rendimiento de CONFLEX-G en un <br>clúster de PC</br> local con el de un banco de pruebas en red.",
                "Implementamos la versión paralelizada de CONFLEX, la cual no puede tratar tales moléculas utilizando solo un <br>clúster de PC</br> local.",
                "En otras palabras, el programa cliente puede eliminar la inicialización para cada llamada RPC, y por lo tanto optimizar eficientemente las estructuras de prueba. 3.1 El sistema OmniRPC OmniRPC es un sistema de RPC en malla que permite una programación paralela sin problemas desde un <br>clúster de PC</br> hasta un entorno de malla."
            ],
            "translated_text": "Implementación y Evaluación del Rendimiento de CONFLEX-G: Programa de Búsqueda de Espacio Conformacional Molecular Habilitado para Grid con OmniRPC. Hemos implementado CONFLEX-G utilizando un sistema de RPC en malla llamado OmniRPC. En este artículo, informamos sobre el rendimiento de CONFLEX-G en un banco de pruebas en red de varios clústeres de PC distribuidos geográficamente. Para explorar muchas conformaciones de grandes biomoléculas, CONFLEX-G genera estructuras de prueba de las moléculas y asigna trabajos para optimizar una estructura de prueba con un método confiable de mecánica molecular en la cuadrícula. OmniRPC proporciona un modelo de persistencia restringido para respaldar las aplicaciones de búsqueda paramétrica. En este modelo, cuando el procedimiento de inicialización está definido en el módulo RPC, el módulo se inicializa automáticamente en el momento de la invocación llamando al procedimiento de inicialización. Esto puede eliminar la comunicación y la inicialización innecesarias en cada llamada en CONFLEX-G. CONFLEXG puede lograr un rendimiento comparable al de CONFLEX MPI y puede aprovechar más recursos informáticos al permitir el uso de un clúster de múltiples clústeres en la cuadrícula. El resultado experimental muestra que CONFLEX-G logró una aceleración de 56.5 veces en el caso de la molécula 1BL1, donde la molécula consta de un gran número de átomos y cada optimización de la estructura de prueba requiere un tiempo significativo. El desequilibrio de carga en el tiempo de optimización de la estructura de prueba también puede causar degradación del rendimiento. Categorías y Descriptores de Asignaturas C.2.4 [Organización de Sistemas Informáticos]: RED DE COMUNICACIÓN DE COMPUTADORAS-Sistemas Distribuidos; J.2.4 [Aplicaciones Informáticas]: CIENCIAS FÍSICAS E INGENIERÍA Términos Generales Diseño, Rendimiento 1. INTRODUCCIÓN La elucidación de las conformaciones estables y el proceso de plegamiento de las proteínas es uno de los objetivos más fundamentales y desafiantes en las ciencias de la vida. Si bien algunas de las estructuras secundarias más comunes (por ejemplo, ciertos tipos de hélice, la lámina beta y la hélice) son bien conocidas, se requiere un análisis preciso de los miles de conformaciones químicamente importantes y un análisis de orden de pico-segundo de sus interconversiones conformacionales a través de los estados de transición en la superficie de energía potencial para la investigación de orden de microsegundo del proceso de plegamiento hacia la formación de la estructura terciaria. Recientemente, el concepto de la red computacional ha comenzado a atraer un interés significativo en el campo de la computación de alto rendimiento en red. Los rápidos avances en la tecnología e infraestructura de redes de área amplia han hecho posible construir entornos de computación distribuida a gran escala y alto rendimiento, o redes computacionales, que proporcionan acceso confiable, consistente y generalizado a enormes recursos computacionales. CONFLEX es uno de los programas de búsqueda de espacio conformacional más eficientes y confiables. Hemos aplicado este programa 154 a la paralelización utilizando computación global. El rendimiento del CONFLEX paralelizado permite explorar la región de energía más baja del espacio conformacional de péptidos pequeños en un tiempo transcurrido disponible utilizando un <br>clúster de PC</br> local. Dado que la optimización de la estructura de prueba en CONFLEX se calcula a través de la mecánica molecular, la búsqueda del espacio conformacional se puede realizar rápidamente en comparación con la que utiliza cálculos de orbitales moleculares. Aunque se utilizó la versión paralelizada de CONFLEX para calcular de forma paralela la optimización de la estructura, que representa más del 90% del procesamiento en la búsqueda de conformaciones moleculares, no se pudo lograr una mejora suficiente en la aceleración solo con este método. Por lo tanto, para polímeros de alto peso molecular de organismos vivos, como la proteasa del VIH, el uso de un solo <br>clúster de PC</br> es insuficiente debido a la necesidad de optimizar una gran cantidad de estructuras de prueba. Esto requiere los vastos recursos informáticos de un entorno de computación en malla. En este artículo, describimos CONFLEX-G, un programa de búsqueda conformacional molecular habilitado para grid, utilizando OmniRPC y reportamos su rendimiento en un grid de varios clusters de PC distribuidos geográficamente. El prototipo CONFLEX-G asigna la optimización de las estructuras de cálculo de prueba, que es una tarea muy consumidora de tiempo, a nodos trabajadores en el entorno de la red para obtener un alto rendimiento. Además, comparamos el rendimiento de CONFLEX-G en un <br>clúster de PC</br> local con el de un banco de pruebas en red. OmniRPC[2, 3, 4] es una implementación segura para hilos de Ninf RPC[5, 6], que es una facilidad de RPC de cuadrícula para la computación en entornos de cuadrícula. Varios sistemas adoptan el concepto de la RPC como el modelo básico para la computación en entornos de rejilla, incluyendo Ninf-G[7], NetSolve[8] y CORBA[9]. El sistema RPCstyle proporciona una interfaz de programación fácil de usar e intuitiva, que permite a los usuarios del sistema de cuadrícula crear fácilmente aplicaciones habilitadas para la cuadrícula. Para apoyar la programación paralela, un cliente de RPC puede emitir solicitudes de llamada asincrónicas a un ordenador remoto diferente para aprovechar el paralelismo en toda la red a través de OmniRPC. En este artículo, proponemos el modelo de persistencia OmniRPC para un sistema de RPC de Grid y demostramos su efectividad. Para apoyar una aplicación típica para un entorno de cuadrícula, como una aplicación de búsqueda paramétrica, en la que la misma función se ejecuta con diferentes parámetros de entrada en el mismo conjunto de datos. En el sistema GridRPC actual[10], el conjunto de datos establecido por la llamada anterior no puede ser utilizado por llamadas posteriores. En el sistema OmniRPC, una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado y su estado inicializado para llamadas posteriores a las mismas funciones remotas con el fin de eliminar el costo de invocación de cada llamada. Este documento demuestra que CONFLEX-G es capaz de aprovechar los enormes recursos informáticos de un entorno de grid y buscar conformadores moleculares a gran escala. Demostramos CONFLEX-G en nuestra plataforma de pruebas en red utilizando la proteína real como molécula de muestra. La facilidad OmniRPC del módulo inicializable automático (AIM) permite al sistema calcular eficientemente numerosos conformeros. Además, al utilizar OmniRPC, el usuario puede paralelizar en cuadrícula la aplicación existente y pasar del clúster al entorno de cuadrícula sin modificar el código del programa y compilar el programa. Además, el usuario puede construir fácilmente un entorno de red privada. El resto de este documento está organizado de la siguiente manera. Se presenta una visión general de la Base de Datos de Conformaciones de Estructuras Iniciales, la Perturbación Local, la Optimización de la Geometría, la Comparación y el Registro. Figura 1: Algoritmo de búsqueda de espacio conformacional en el CONFLEX original. El sistema CONFLEX se describe en la Sección 2, y la implementación y diseño de CONFLEX-G se detallan en la Sección 3. Informamos los resultados experimentales obtenidos utilizando CONFLEX-G y discutimos su rendimiento en la Sección 4. En la Sección 6, presentamos conclusiones y discutimos temas para estudios futuros. 2. CONFLEX es un programa eficiente de búsqueda de espacio conformacional, que puede buscar predominantemente y exhaustivamente los conformeros en la región de energía más baja. Las aplicaciones de CONFLEX incluyen la elucidación de la reactividad y selectividad de fármacos y posibles materiales medicinales con respecto a su flexibilidad conformacional. 2.1 Algoritmo de Búsqueda de Espacio Conformacional La estrategia básica de CONFLEX es una búsqueda exhaustiva solo de las regiones de baja energía. El CONFLEX original realiza los siguientes cuatro pasos principales: 1. Selección de una estructura inicial entre los conformeros únicos previamente descubiertos y ordenados en una base de datos conformacional. (Una estructura de entrada se utiliza como la primera estructura inicial al comienzo de una ejecución de búsqueda solamente.) 2. Generación de estructuras de prueba mediante perturbaciones locales a la estructura inicial seleccionada. 3. Optimización de geometría para las nuevas estructuras de prueba generadas. 4. Comparación de las estructuras optimizadas con éxito (ensayo) con los otros conformeros almacenados en una base de datos de conformaciones, y preservación de los conformeros únicos recién descubiertos en la base de datos. La Figura 1 muestra el esquema de CONFLEX, el algoritmo original de búsqueda de espacio conformacional. Estos procedimientos incorporan dos estrategias únicas. La Figura 2 muestra las estrategias para generar perturbaciones locales en CONFLEX. La primera estrategia implica tanto el aleteo de las esquinas como el volteo de los bordes para los átomos del anillo y la rotación paso a paso para las cadenas laterales o cadenas del esqueleto. Estos métodos proporcionan una forma altamente eficiente de producir varias estructuras de prueba buenas. Estas perturbaciones pueden considerarse como una imitación de 155 Rotación Escalonada de Esquina de Solapa de Borde de Giro Figura 2: Estrategias utilizadas para generar las perturbaciones locales, un paso de cruce de barrera en el proceso elemental de la interconversión conformacional térmica. De hecho, las perturbaciones de una estructura inicial corresponden al rendimiento preciso alrededor del espacio de la estructura inicial debido a la localización y debilidad de la perturbación. La regla de selección de la estructura inicial, la regla LowestConformer-First, es la segunda estrategia para dirigir la búsqueda de conformaciones ampliada a las regiones de baja energía. La estructura inicial se selecciona como el conjunto de conformaciones de menor energía almacenadas en la base de datos de conformaciones. Esta regla es efectiva para desplazarse hacia abajo en el espacio de búsqueda hacia regiones de menor energía, como el agua de un arroyo que fluye hacia un embalse vacío, llenando depresiones locales en el camino. Por lo tanto, estos procedimientos tácticos de la búsqueda CONFLEX se conocen como el Algoritmo de Llenado de Reservorio. Para permanecer en la región de baja energía y realizar una búsqueda exhaustiva, el límite de búsqueda (SEL), que determina la energía máxima de las estructuras iniciales, está predefinido. El aumento gradual de SEL permite buscar solo los conformeros de baja energía y evita desviarse hacia regiones de energía innecesariamente alta. 2.2 Paralelización de CONFLEX para clúster Para su aplicación en más de 100 átomos, CONFLEX fue mejorado utilizando técnicas de computación paralela de alto rendimiento. En el algoritmo de búsqueda CONFLEX, los procedimientos de optimización de geometría siempre ocupan el 95% del tiempo transcurrido durante la ejecución de la búsqueda. Por lo tanto, paralelizamos esta optimización utilizando la técnica de paralelización Maestro/Trabajador. Modificamos los procedimientos de búsqueda de la siguiente manera. Después de que se generan las estructuras de prueba (paso 2), se almacenan temporalmente en un grupo de tareas en el nodo maestro. Entonces, cada nodo trabajador recibe dinámicamente una estructura de prueba del nodo maestro. Después de que se complete una optimización en un nodo de trabajador, este recibe inmediatamente otra estructura de prueba. Cuando todas las estructuras de prueba relacionadas con una estructura inicial dada están optimizadas, solo se utiliza el procedimiento principal para la comparación. Al paralelizar CONFLEX, la aceleración de la búsqueda de conformadores moleculares obtenida es la reportada en[11]. 3. CONFLEX-G Originalmente, CONFLEX estaba destinado a ser utilizado para explorar los conformeros de las grandes biomoléculas, como la proteasa del VIH. En tales moléculas, el número de estructuras de prueba aumenta y el tiempo requerido para la optimización de la Selección de RPC de Estructuras Iniciales Conformaciones de la Base de Datos de Perturbación Local Comparación y Registro del Cliente Programa Cliente Grupo de Tareas de Optimización Geométrica RPC Entorno de Rejilla RPC Cluster B Cluster A Cluster C Estructura de prueba Estructura de prueba Estructura de prueba Estructura de prueba Figura 3: Procedimiento de CONFLEX-G. agente rexrex rex Cliente jones.tsukuba.ac.jp hpc-serv.hpcc.jp hpc1 hpc2 hpc3 Invocación del agente Comunicación de la red Figura 4: Visión general del sistema OmniRPC para el clúster remoto con una dirección IP privada. la estructura de prueba se vuelve inmensa. Implementamos la versión paralelizada de CONFLEX, la cual no puede tratar tales moléculas utilizando solo un <br>clúster de PC</br> local. Para aprovechar los vastos recursos informáticos de un entorno de grid, diseñamos e implementamos CONFLEX-G, que es una versión habilitada para grid de CONFLEX, con el sistema OmniRPC. CONFLEX-G asigna trabajos para optimizar una estructura de prueba a los nodos computacionales de cada clúster en el entorno de la red. La Figura 3 muestra el proceso de CONFLEX-G. Los programas de los trabajadores se inicializan mediante el método de inicialización, que es proporcionado por la instalación de OmniRPC AIM en la invocación del trabajador. En cada llamada RPC, el estado inicializado se reutiliza en el host remoto. En otras palabras, el programa cliente puede eliminar la inicialización para cada llamada RPC, y por lo tanto optimizar eficientemente las estructuras de prueba. 3.1 El sistema OmniRPC OmniRPC es un sistema de RPC en malla que permite una programación paralela sin problemas desde un <br>clúster de PC</br> hasta un entorno de malla. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "grid computing": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Implementation and Performance Evaluation of CONFLEX-G: Grid-enabled Molecular Conformational Space Search Program with OmniRPC Yoshihiro Nakajima Graduate School of Systems & Information Engineering, University of Tsukuba Tsukuba, 305-8577, Japan yoshihiro@hpcs.is.tsukuba.ac.jp Mitsuhisa Sato Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan msato@is.tsukuba.ac.jp Hitoshi Goto Knowledge-based Information Engineering, Toyohashi University of Technology Toyohashi, 441-8580, Japan gotoh@cochem2.tutkie.tut.ac.jp Taisuke Boku, Daisuke Takahashi Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan {taisuke,daisuke}@hpcs.is.tsukuba.ac.jp ABSTRACT CONFLEX-G is the grid-enabled version of a molecular conformational space search program called CONFLEX.",
                "We have implemented CONFLEX-G using a grid RPC system called OmniRPC.",
                "In this paper, we report the performance of CONFLEX-G in a grid testbed of several geographically distributed PC clusters.",
                "In order to explore many conformation of large bio-molecules, CONFLEX-G generates trial structures of the molecules and allocates jobs to optimize a trial structure with a reliable molecular mechanics method in the grid.",
                "OmniRPC provides a restricted persistence model to support the parametric search applications.",
                "In this model, when the initialization procedure is defined in the RPC module, the module is automatically initialized at the time of invocation by calling the initialization procedure.",
                "This can eliminate unnecessary communication and initialization at each call in CONFLEX-G. CONFLEXG can achieve performance comparable to CONFLEX MPI and can exploit more computing resources by allowing the use of a cluster of multiple clusters in the grid.",
                "The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times in the case of the 1BL1 molecule, where the molecule consists of a large number of atoms, and each trial structure optimization requires significant time.",
                "The load imbalance of the optimization time of the trial structure may also cause performance degradation.",
                "Categories and Subject Descriptors C.2.4 [Computer Systems Organization]: COMPUTERCOMMUNICATION NETWORK-Distributed Systems; J.2.4 [Computer Applications]: PHYSICAL SCIENCES AND ENGINEERING General Terms Design,Performance 1.",
                "INTRODUCTION Elucidation of the stable conformations and the folding process of proteins is one of the most fundamental and challenging goals in life science.",
                "While some of the most common secondary structures (e.g., certain types of helix, the beta-strand, and the coil) are well known, precise analysis of the thousands of chemically important conformers and pico-second-order analysis of their conformational interconversions via the transition states on the potential energy surface are required for the microsecond-order investigation of the folding process toward the tertiary structure formations.",
                "Recently, the concept of the computational grid has begun to attract significant interest in the field of high-performance network computing.",
                "Rapid advances in wide-area networking technology and infrastructure have made it possible to construct large-scale, high-performance distributed computing environments, or computational grids, that provide dependable, consistent and pervasive access to enormous computational resources.",
                "CONFLEX is one of the most efficient and reliable conformational space search programs[1].",
                "We have applied this 154 program to parallelization using global computing.",
                "The performance of the parallelized CONFLEX enables exploration of the lower-energy region of the conformational space of small peptides within an available elapsed time using a local PC cluster.",
                "Since trial structure optimization in CONFLEX is calculated via molecular mechanics, conformational space search can be performed quickly compared to that using molecular orbital calculation.",
                "Although the parallelized version of CONFLEX was used to calculate in parallel the structure optimization, which takes up over 90% of the processing in the molecular conformation search, sufficient improvement in the speedup could not be achieved by this method alone.",
                "Therefore, for high polymers from live organisms, such as HIV protease, the use one PC cluster is insufficient due to the requirement for optimization of a huge number of trial structures.",
                "This requires the vast computer resources of a <br>grid computing</br> environment.",
                "In this paper, we describe CONFLEX-G, a grid-enabled molecular conformational search program, using OmniRPC and report its performance in a grid of several PC clusters which are geographically distributed.",
                "The prototype CONFLEX-G allocates calculation trial structures optimization, which is a very time-consuming task, to worker nodes in the grid environment in order to obtain high throughput.",
                "In addition, we compare the performance of CONFLEX-G in a local PC cluster to that in a grid testbed.",
                "OmniRPC[2, 3, 4] is a thread-safe implementation of Ninf RPC[5, 6] which is a Grid RPC facility for grid environment computing.",
                "Several systems adopt the concept of the RPC as the basic model for grid environment computing, including Ninf-G[7], NetSolve[8] and CORBA[9].",
                "The RPCstyle system provides an easy-to-use, intuitive programming interface, allowing users of the grid system to easily create grid-enabled applications.",
                "In order to support parallel programming, an RPC client can issue asynchronous call requests to a different remote computer to exploit networkwide parallelism via OmniRPC.",
                "In this paper, we propose the OmniRPC persistence model to a Grid RPC system and demonstrate its effectiveness.",
                "In order to support a typical application for a grid environment, such as a parametric search application, in which the same function is executed with different input parameters on the same data set.",
                "In the current GridRPC system[10], the data set by the previous call cannot be used by subsequent calls.",
                "In the OmniRPC system, once a remote executable is invoked, the client attempts to use the invoked remote executable and its initialized state for subsequent RPC calls to the same remote functions in order to eliminate the invocation cost of each call.",
                "This paper demonstrates that CONFLEX-G is able to exploit the huge computer resources of a grid environment and search large-scale molecular conformers.",
                "We demonstrate CONFLEX-G on our grid testbed using the actual protein as a sample molecule.",
                "The OmniRPC facility of the automatic initializable module (AIM) allows the system to efficiently calculate numerous conformers.",
                "Furthermore, by using OmniRPC, the user can grid-parallelize the existing application, and move from the cluster to the grid environment without modifying program code and compiling the program.",
                "In addition, the user can easily build a private grid environment.",
                "The rest of this paper is organized as follows.",
                "An overview Selection of Initial Structure Conformations Database Local Perturbation Geometry Optimization Comparison and Registration Figure 1: Algorithm of conformational space search in the original CONFLEX. of the CONFLEX system is presented in Section2, and the implementation and design of CONFLEX-G are described in Section 3.",
                "We report experimental results obtained using CONFLEX-G and discuss its performance in Section 4.",
                "In Section 6, we present conclusions and discuss subjects for future study. 2.",
                "CONFLEX CONFLEX [1] is an efficient conformational space search program, which can predominately and exhaustively search the conformers in the lower-energy region.",
                "Applications of CONFLEX include the elucidation of the reactivity and selectivity of drugs and possible drug materials with regard to their conformational flexibility. 2.1 Algorithm of ConformationalSpaceSearch The basic strategy of CONFLEX is an exhaustive search of only the low-energy regions.",
                "The original CONFLEX performs the following four major steps: 1.",
                "Selection of an initial structure among the previously discovered unique conformers sorted in a conformational database. (An input structure is used as the first initial structure at the beginning of a search execution only.) 2.",
                "Generation of trial structures by local perturbations to the selected initial structure. 3.",
                "Geometry optimization for the newly generated trial structures. 4.",
                "Comparison of the successfully optimized (trial) structures with the other conformers stored in a conformation database, and preservation of newly discovered unique conformers in the database.",
                "Figure 1 shows the outline of CONFLEX, the original conformational space search algorithm.",
                "These procedures incorporate two unique strategies.",
                "Figure 2 shows the strategies for generating local perturbations in CONFLEX.",
                "The first strategy involves both corner flapping and edge flipping for the ring atoms and stepwise rotation for side-chains or backbone chains.",
                "These methods provide a highly efficient way to produce several good trial structures.",
                "These perturbations can be considered to mimic 155 Stepwise Rotation Corner Flap Edge Flip Figure 2: Strategies used to generate the local perturbations. a barrier-crossing step in the elementary process of the thermal conformational inter-conversion.",
                "Actually, the perturbations of an initial structure correspond to the precise performance around the space of the initial structure because of localization and weakness of the perturbation.",
                "The selection rule of the initial structure, the LowestConformer-First rule, is the second strategy for directing the conformation search expanded to the low-energy regions.",
                "The initial structure is selected as the set of lowest energy conformers stored in the conformation database.",
                "This rule is effective in moving down the search space toward lower energy regions, like water from a stream running into an empty reservoir, while filling local depressions along the way.",
                "Therefore, these tactical procedures of the CONFLEX search are referred to as the Reservoir Filling Algorithm.",
                "In order to remain in the low-energy region and perform an exhaustive search, the search limit (SEL), which determines the maximum energy of the initial structures, is pre-defined.",
                "Gradually increasing SEL allows only the lowenergy conformers to be searched and avoids straying into unnecessarily high-energy regions. 2.2 Parallelization of CONFLEX for Cluster For application to over 100 atoms, CONFLEX was improved using high-performance parallel computing techniques.",
                "In the CONFLEX search algorithm, the geometry optimization procedures always take 95% of the elapsed time of the search execution.",
                "Therefore, we parallelized this optimization using the Master/Worker parallelization technique.",
                "We modified the search procedures as follows.",
                "After trial structures are generated (step 2), they are temporarily stored in a task pool on the master node.",
                "Then, each worker node is dynamically supplied with one trial structure from the master node.",
                "After an optimization on a worker node is finished, the worker is immediately supplied with another trial structure.",
                "When all of the trial structures related to a given initial structure are optimized, only the master procedure is used in comparison.",
                "By parallelizing CONFLEX, the speedup of searching molecular conformers obtained is as reported in[11]. 3.",
                "CONFLEX-G Originally, CONFLEX was intended for use in exploring the conformers of the large bio-molecules, such HIV protease.",
                "In such molecules, the number of trial structures increases and the time required for optimization of RPC Selection of Initial Structure Conformations Database Local Perturbation Comparison and Registration Client program Task Pool of Geometry Optimization RPC RPC Grid environment Cluster B Cluster A Cluster C Trial structureTrial structure Trial structure Trial structure Figure 3: Procedure of CONFLEX-G. agent rexrex rex Client jones.tsukuba.ac.jp hpc-serv.hpcc.jp hpc1 hpc2 hpc3 Agent invocation communicationNetwork Figure 4: Overview of the OmniRPC system for the remote cluster having a private IP address. the trial structure becomes immense.",
                "We implemented the parallelized version of CONFLEX, which cannot treat such molecules using only a local PC cluster.",
                "In order to exploit the vast computing resources of a grid environment, we designed and implemented CONFLEX-G, which is a grid-enabled version of CONFLEX, with the OmniRPC system.",
                "CONFLEX-G allocates jobs to optimize a trial structure to the computational nodes of each cluster in the grid environment.",
                "Figure 3 shows the process of CONFLEX-G.",
                "The worker programs are initialized by the initialize method, which is provided by the OmniRPC AIM facility at worker invocation.",
                "At each RPC call, the initialized state is reused on the remote host.",
                "In other words, the client program can eliminate the initialization for each RPC call, and can therefore optimize trial structures efficiently. 3.1 The OmniRPC system OmniRPC is a Grid RPC system which allows seamless parallel programming from a PC cluster to a grid environment.",
                "OmniRPC inherits its API and basic architecture from Ninf.",
                "A client and the remote computational hosts which execute the remote procedures may be connected via a network.",
                "The remote libraries are implemented as an executable program which contains a network stub routine as its main routine.",
                "We call this executable program a remote executable program (rex).",
                "When the OmniRPC client program starts, the initialization function of OmniRPC system invokes the OmniRPC agent program omrpc-agent in the remote hosts listed in the host file.",
                "To invoke the agent, the user can use the remote shell command rsh in a local-area network, the GRAM (Globus Resource Allocation Manager) API of the Globus 156 toolkit[12] in a grid environment, or the secure remote shell command ssh.",
                "The user can switch the configurations only by changing the host file.",
                "OmniRpcCall is a simple client programming interface for calling remote functions.",
                "When OmniRpcCall makes a remote procedure call, the call is allocated to an appropriate remote host.",
                "When the client issues the RPC request, it requests that the agent in the selected host submit the job of the remote executable with the local job scheduler specified in the host file.",
                "If the job scheduler is not specified, the agent executes the remote executable in the same node by the fork system call.",
                "The client sends the data of the input arguments to the invoked remote executable, and receives the results upon return of the remote function.",
                "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls in order to eliminate the cost of invoking the same remote executable again.",
                "When the agent and the remote executables are invoked, the remote programs obtain the client address and port from the argument list and connect back to the client by direct TCP/IP or Globus-IO for data transmission.",
                "Because the OmniRPC system does not use any fixed service ports, the client program allocates unused ports dynamically to wait for connection from the remote executables.",
                "This avoids possible security problems, and allows the user to install the OmniRPC system without requiring a privileged account.",
                "Herein, a typical grid resource is regarded as a cluster of geographically distributed PC clusters.",
                "For PC clusters on a private network, an OmniRPC agent process on the server host functions as a proxy to relay communications between the client and the remote executables by multiplexing the communications using a single connection.",
                "This feature, called multiplex IO (MXIO), allows a single client to use up to 1,000 remote computing hosts.",
                "When the PC cluster is inside a firewall, the port forwarding of SSH enables the node to communicate to the outside with MXIO.",
                "Figure 4 shows the overview of the OmniRPC system for a remote cluster with a private IP address.",
                "For parallel programming, the programmer can use asynchronous remote procedure calls, allowing the client to issue several requests while continuing with other computations.",
                "The requests are dispatched to different remote hosts to be executed in parallel, and the client waits or polls the completed request.",
                "In such a programming model with asynchronous remote procedure calls, the programmer should handle outstanding requests explicitly.",
                "Because OmniRPC is a thread-safe system, a number of remote procedure calls may be outstanding at any time for multi-threaded programs written in OpenMP. 3.2 OmniRPC persistence model: automatic initializable module OmniRPC efficiently supports typical Master/Worker parallel applications such as parametric execution programs.",
                "For parametric search applications, which often require large amount of identical data for each call, OmniRPC supports a limited persistence model, which is implemented by the automatic initializable module.",
                "The user can define an initialization procedure in the remote executable in order to send and store data automatically in advance of actual remote procedure calls.",
                "Since the remote executable may accept requests for subsequent calls, the data set which has been set by the initialization procedure can be re-used.",
                "As a result, the worker program can execute efficiently and reduce the amount of data transmitted for initialization.",
                "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls.",
                "However, OmniRPC does not guarantee persistence of the remote executable, so that the data set by the previous call cannot be used by subsequent calls.",
                "This is because a remote call by OmniRpcCall may be scheduled to any remote host dynamically, and remote executables may be terminated accidentally due to dynamic re-scheduling or host faults.",
                "However, persistence of the remote executable can be exploited in certain applications.",
                "An example is a parametric search application: in such an application, it would be efficient if a large set of data could be pre-loaded by the first call, and subsequent calls could be performed on the same data, but with different parameters.",
                "This is the case for CONFLEX.",
                "OmniRPC provides a restricted persistence model through the automatic initializable module (AIM) in order to support this type of application.",
                "If the initialization procedure is defined in the module, the module is automatically initialized at invocation by calling the initialization procedure.",
                "When the remote executable is re-scheduled in different hosts, the initialization is called to initialize the newly allocated remote module.",
                "This can eliminate unnecessary communications when RPC calls use the same data.",
                "To reveal more about the difference in progress between the cases with OmniRPC AIM and without OmniRPC AIM, we present two figures.",
                "Figure 5 illustrates the time chart of the progress of a typical OmniRPC application using the OmniRPC AIM facility, and Figure 6 illustrates the time chart of the same application without the OmniRPC AIM facility.",
                "In both figures, the lines between diamonds represent the processes of initialization, and the lines between points represent the calculation.",
                "The bold line indicates the time when the client program sends the data to a worker program.",
                "It is necessary for the application without the OmniRPC AIM facility to initialize at each RPC.",
                "The application using the OmniRPC AIM facility can re-use the initialized data once the data set is initialized.",
                "This can reduce the initialization at each RPC.",
                "The workers of the application with the AIM can calculate efficiently compared to the application without the OmniRPC AIM facility. 3.3 Implementation of CONFLEX-G using OmniRPC Figure 3 shows an overview of the process used in CONFLEXG.",
                "Using RPCs, CONFLEX-G allocates the processes of trial structure optimization, which are performed by the computation nodes of a PC cluster in the MPI version of CONFLEX, to the computational nodes of each cluster in a grid environment.",
                "There are two computations which are performed by the worker programs in CONFLEX-G. One is the initialization of a worker program, and another is the calculation of trial structure optimization.",
                "First, the OmniRPC facility of the AIM is adapted for initialization of a worker program.",
                "This facility automatically calls the initialization function, which is contained in the worker program, once the client program invokes the worker program in a remote node.",
                "It is necessary for the common RPC system including GridRPC to initialize a program for every RPC call, since data persistence of worker programs 157 time Client Program Worker Program 1 Worker Program 2 initialization initialization calculation calculation calculation calculation calculation Parallelized using asynchronous RPCs Figure 5: Time chart of applications using the OmniRPC facility of the automatic initializable module. time Client Program Worker Program 1 Worker Program 2 initialization initializationcalculation calculation calculation calculation initialization initialization initialization Parallelized using asynchronous RPCs calculation Figure 6: Time chart of applications without the OmniRPC facility of the automatic initializable module.",
                "Table 1: Machine configurations in the grid testbed.",
                "Site Cluster Name Machine Network Authentication # of Nodes # of CPUs Univ. of Tsukuba Dennis Dual Xeon 2.4GHz 1Gb Ethernet Globus, SSH 14 28 Alice Dual Athlon 1800+ 100Mb Ethernet Globus, SSH 18 36 TUT Toyo Dual Athlon 2600+ 100Mb Ethernet SSH 8 16 AIST Ume Dual Pentium3 1.4GHz 1Gb Ethernet Globus, SSH 32 64 is not supported.",
                "In OmniRPC, however, when the Initialize remote function is defined in the worker program and a new worker program, corresponding to the other RPC, is assigned to execute, an Initialize function is called automatically.",
                "Therefore, after the Initialize function call to set up common initialization data, a worker program can re-use this data and increase the efficiency of its processes.",
                "Thus, the higher the set-up cost, the greater the potential benefit.",
                "We implemented the worker program of CONFLEX-G to receive data, such as evaluation parameters of energy, from a client program and to be initialized by the Initialize function.",
                "We arranged the client program of CONFLEX-G to transfer the parameter file at the time of worker initialization.",
                "This enables execution to be performed by modify only the client setting if the user wants to run CONFLEX-G with a different data set.",
                "Second, in order to calculate trial structure optimization in a worker program, the worker program must receive the data, such as the atom arrangement of the trial structure and the internal energy state.",
                "The result is returned to the client program after the worker has Optimized the trial structure.",
                "Since the calculation portion of the structure optimization in this worker program can be calculated independently using different parameters, we parallelized this portion using asynchronous RPCs on the client side.",
                "To call the structure optimization function in a worker program from the client program, we use the OmniRpcCallAsync API, which is intended for asynchronous RPC.",
                "In addition, OmniRpcCallWaitAll API which waits until all asynchronous RPCs are used in order to perform synchronization with all of the asynchronous RPCs completed so as to optimize the trial structure.",
                "The client program which assigns trial structure optimization to the calculation node of a PC cluster using RPC is outlined as follows.",
                "OmniRpcInit() OmniRpcModuleInit(conflex_search,...); ... while( <new conformers> ) { foreach( <trial structures> ) OmniRpcCallAsync(conflex_search_worker, ...); OmniRpcWaitAll(); ...",
                "Note that OmniRpcModuleInit API returns only the arguments needed for initialization and will not actually execute the Initialization function.",
                "As described above, the actual Initialization is performed at the first remote call.",
                "Since the OmniRPC system has an easy round-robin scheduler, we do not have to explicitly write the code for load balance.",
                "Therefore, RPCs are allocated automatically to idle workers. 158 Table 2: Network performance between the master node of the Dennis cluster and the master node of each PC cluster.",
                "Round-Trip Throughput Cluster Time (ms) (Mbps) Dennis 0.23 879.31 Alice 0.18 94.12 Toyo 11.27 1.53 Ume 1.07 373.33 4.",
                "PRELIMINARY RESULTS 4.1 Grid Testbed The grid testbed was constructed by computing resources at the University of Tsukuba, the Toyohashi University of Technology (TUT) and the National Institute of Advanced Industrial Science and Technology (AIST).",
                "Table 1 shows the computing resources used for the grid of the present study.",
                "The University of Tsukuba and AIST are connected by a 1-Gbps Tsukuba WAN, and the other PC clusters are connected by SINET, which is wide-area network dedicated to academic research in Japan.",
                "Table 2 shows the performance of the measured network between the master node of the Dennis cluster and the master node of each PC cluster in the grid testbed.",
                "The communication throughput was measured using netperf, and the round-trip time was measured by ping. 4.2 Performance of CONFLEX-G In all of the CONFLEX-G experiments, the client program was executed on the master node of the Dennis cluster at the University of Tsukuba.",
                "The built-in Round-Robin scheduler of OmniRPC was used as a job scheduler.",
                "SSH was used for an authentication system, the OminRPCs MXIO, which relays the I/O communication between client program and worker programs by port forwarding of SSH was, not used.",
                "Note that one worker program is assigned and performed on one CPU of the calculation node in a PC cluster.",
                "That is, the number of workers is equal to the number of CPUs.",
                "These programs were compiled by the Intel Fortran Compiler 7.0 and gcc 2.95.",
                "MPICH, Version 1.2.5, was used to compare the performance between CONFLEX MPI and CONFLEX-G.",
                "In order to demonstrate the usability of the OmniRPC facility of the AIM, we implemented another version of CONFLEX-G which did not utilize the OmniRPC facility.",
                "The worker program in this version of CONFLEXG must be initialized at each RPC because the worker does not hold the previous data set.",
                "In order to examine the performance of CONFLEX-G, we selected two peptides and two small protein as test molecules: • N-acetyl tetra-alanine methylester (AlaX04) • N-acetyl hexdeca-alanine methylester (AlaX16) • TRP-cage miniprotein construct TC5B (1L2Y) • PTH receptor N-terminus fragment (1BL1) Table 3 lists the characteristics of these sample molecules.",
                "The column trial structure / loops in this table shows the Figure 7: Performances of CONFLEX-G, CONFLEX MPI and Original CONFLEX in the Dennis cluster.",
                "Figure 8: Speedup ratio, which is based on the elapsed time of CONFLEX-G using one worker in the Dennis cluster.",
                "Figure 9: Performance of CONFLEX-G with and without the OmniRPC facility of automatic initializable module for AlaX16. 159 Table 3: Characteristics of molecules and data transmission for optimizing trial molecular structures in each molecular code.",
                "Molecular # of # of total trial trial structure Data transfer to Data transfer code atoms structures / loop initialize a worker / trial structure AlaX04 181 360 45 2033KB 17.00KB AlaX16 191 480 160 2063KB 18.14KB 1L2Y 315 331 331 2099KB 29.58KB 1BL1 519 519 519 2150KB 48.67KB Table 4: Elapsed search time for the molecular conformation of AlaX04.",
                "Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (sequential) 1 320.0 1786.21 4.96 1786.21 1.00 Toyo (16) 16 20.0 1497.08 4.16 196.32 9.10 Dennis (28) 28 11.4 1905.51 5.29 97.00 18.41 Alice (36) 36 8.9 2055.25 5.71 87.09 20.51 Ume (56) 56 5.7 2196.77 6.10 120.69 14.80 Dennis (28) + Toyo (16) 44 7.3 1630.09 4.53 162.35 11.00 Alice (36) + Toyo (16) 52 6.2 1774.53 4.93 178.24 10.02 Dennis (28) + Alice (36) 64 5.0 1999.02 5.55 81.52 21.91 Dennis (28) + Ume (56) 84 3.8 2085.84 5.79 92.22 19.37 Alice (36) + Ume (56) 92 3.5 2120.87 5.89 101.25 17.64 Table 5: Elapsed search time for the molecular conformation of AlaX16 Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (1) 1 480.0 74027.80 154.22 74027.80 1.00 Toyo (16) 16 30.0 70414.21 146.70 4699.15 15.75 Dennis (28) 28 17.1 74027.80 154.22 3375.60 21.93 Alice (36) 36 13.3 90047.27 187.60 3260.41 22.71 Ume (56) 56 8.6 123399.38 257.08 2913.63 25.41 Dennis (28) + Toyo (16) 44 10.9 76747.74 159.89 2762.10 26.80 Alice (36) + Toyo (16) 52 9.2 82700.44 172.29 2246.73 32.95 Dennis (28) + Alice (36) 64 7.5 87571.30 182.44 2051.50 36.08 Toyo (16) + Ume (56) 72 6.7 109671.32 228.48 2617.85 28.28 Dennis (28) + Ume (56) 84 5.7 102817.90 214.20 2478.93 29.86 Dennis(28)+Ume(56)+Toyo(16) 100 4.8 98238.07 204.66 2478.93 29.86 Table 6: Elapsed time of the search for the trial structure of 1L2Y.",
                "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 331.0 867 286,967 79.71 1.00 Toyo MPI (16) 16 20.7 867 18,696 5.19 15.34 Dennis (28) 28 11.8 803 14,101 3.91 20.35 Dennis (28) + Ume(56) 84 3.9 1,064 8,316 2.31 34.50 Table 7: Elapsed time of the search for the trial structure of 1BL1.",
                "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 519.0 3,646 1892,210 525.61 1.00 Toyo MPI (16) 16 32.4 3,646 120,028 33.34 15.76 Dennis (28) 28 18.5 3,154 61,803 17.16 30.61 Dennis (28) + Ume (56) 84 6.1 4,497 33,502 9.30 56.48 160 number of trial structures generated in each iteration, indicating the degree of parallelism.",
                "Figure 3 also summarizes the amount of data transmission required for initialization of a worker program and for optimization of each trial structure.",
                "Note that the amount of data transmission, which is required in order to initialize a worker program and optimize a trial structure in the MPI version of CONFLEX, is equal to that of CONFLEX-G. We used an improvement version of MM2 force field to assign a potential energy function to various geometric properties of a group of atoms. 4.2.1 Performance in a Local Cluster We first compared the performance of CONFLEX-G, the MPI version of CONFLEX, and the original sequential version of CONFLEX-G using a local cluster.",
                "We investigated performance by varying the number of workers using the Dennis cluster.",
                "We chose AlaX04 as a test molecule for this experiment.",
                "Figure 7 compares the results for the CONFLEX MPI and CONFLEX-G in a local PC cluster.",
                "The result of this experiment shows that CONFLEX-G can reduce the execution time as the number of workers increases, as in the MPI version of CONFLEX.",
                "We found that CONFLEX-G achieved efficiencies comparable to the MPI version.",
                "With 28 workers, CONFLEX-G achieved an 18.00 times speedup compared to the CONFLEX sequential version.",
                "The performance of CONFLEX-G without the OmniRPC AIM facility is worse than that of CONFLEXG using the facility, based on the increase in the number of workers.",
                "This indicates that the OmniRPC AIM enables the worker to calculate efficiently without other calculations, such initialization or invocation of worker programs.",
                "As the number of workers is increased, the performance of CONFLEX-G is a slightly lower than that of the MPI version.",
                "This performance degradation is caused by differences in the worker initialization processes of CONFLEX-G and CONFLEX MPI.",
                "In the case of CONFLEX MPI, all workers are initialized in advance of the optimization phase.",
                "In the case of OminRPC, the worker is invoked on-demand when the RPC call is actually issued.",
                "Therefore, the initialization incurs this overhead.",
                "Since the objective of CONFLEX-G is to explore the conformations of large bio-molecules, the number of trial structures and the time to optimize the trial structure might be large.",
                "In such cases, the overhead to invoke and initialize the worker program can be small compared to the entire elapsed time. 4.2.2 Performance for Peptides in The Grid Testbed First, the sample molecules (AlaX04 and AlaX16) were used to examine the CONFLEX-G performance in a grid environment.",
                "Figure 8 shows the speedup achieved by using multiple clusters compared to using one worker in the Dennis cluster.",
                "Detailed results are shown in Table 4 and Table 5.",
                "In both cases, the best performance was obtained using 64 workers of the combination of the Dennis and Alice clusters.",
                "CONFLEX-G achieved a maximum speedup of 36.08 times for AlaX04 and a maximum speedup of 21.91 times for AlaX16.",
                "In the case of AlaX04, the performance is improved only when the network performance between clusters is high.",
                "However, even if two or more clusters are used in a wide area network environment, the performance improvement was slight because the optimization time of one trial structure generated from AlaX04, a small molecule, is short.",
                "In addition, the overhead required for invocation of a worker program and network data transmission consume a large portion of the remaining processing time.",
                "In particular, the data transmission required for the initialization of a worker program is 2 MB.",
                "In the case of Toyo cluster, where the network performance between the client program and the worker programs is poor, the time of data transmission to the worker program required approximately 6.7 seconds.",
                "Since this transmission time was longer than the processing time of one structure optimization in CONFLEX-G, most of the time was spent for this data transmission.",
                "Therefore, even if CONFLEX-G uses a large number of calculation nodes in a wide area network environment, the benefit of using a grid resource is not obtained.",
                "In the case of AlaX16, CONFLEX-G achieved a speedup by using two or more PC clusters in our grid testbed.",
                "This was because the calculation time on the worker program was long and the overhead, such as network latency and the invoking of worker programs, became relatively small and could be hidden.",
                "The best performance was obtained using 64 workers in the Dennis and Alice clusters.",
                "In the case of AaX16, the achieved performance was a speedup of 36.08 times.",
                "Figure 9 reveals the effect of using the facility of the OmniRPC AIM on CONFLEX-G performance.",
                "In most cases, CONFLEX-G with the OmniRPC AIM facility archived better performance than CONFLEX-G without the facility.",
                "In particular, the OmniRPC AIM facility was advantageous when using two clusters connected by a low-performance network.",
                "The results indicate that the OmniRPC AIM facility can improve performance in the grid environment. 4.2.3 PerformanceforSmallProteininTheGridTestbed Finally, we explored the molecular conformation using CONFLEX-G for large molecules.",
                "In a grid environment, this experiment was conducted using the Dennis and Ume clusters.",
                "In this experiment, we used two proteins, 1L2Y and 1BL1.",
                "Table 6 and Table 7 show the performance of CONFLEX-G in the grid environment and that of CONFLEX MPI in the Toyo cluster, respectively.",
                "The speedups in these tables were computed respectively based on the performance of one worker and 16 workers of the Toyo cluster using CONFLEX MPI.",
                "CONFLEX-G with 84 workers in Dennis and Ume clusters obtained maximum speedups of 56.5 times for 1L2Y and 34.5 times for 1L2Y.",
                "Since the calculation time for structure optimization required a great deal of time, the ratio of overhead, including tasks such as the invocation of a worker program and data transmission for initialization, became very small, so that the performance of CONFLEX-G was improved.",
                "We found that the load imbalance in the processing time of optimization for each trial structure caused performance degradation.",
                "When we obtained the best performance for 1L2Y using the Dennis and Ume clusters, the time for each structure optimization varied from 190 to 27,887 seconds, and the ratio between the longest and shortest times was 13.4.",
                "For 1BL1, the ratio of minimum time over maximum time was 190.",
                "In addition, in order that the worker program wait until the completion of optimization of all trial structures, all worker programs were found to wait in an idle state for approximately 6 hours.",
                "This has caused the performance degradation of CONFLEX-G. 161 4.3 Discussion In this subsection, we discuss the improvement of the performance reflected in our experiments.",
                "Exploiting parallelism - In order to exploit more computational resources, it is necessary to increase the degree of parallelism.",
                "In this experiment, the degree of parallelism was not so large in the case of the sample molecules.",
                "When using a set of over 500 computing nodes for 1BL1, the number of one trial structures assigned to each worker will be only one or two.",
                "If over 100 trial structures are assigned to each worker program, calculation can be performed more efficiently due to the reduction of the overhead for worker invocation and initialization via the facility of the OmniRPC AIM.",
                "One idea for increasing parallelism is to overlap the execution of two or more sets of trial structures.",
                "In the current algorithm, a set of trial structures is generated from one initial structure and computed until optimizations for all structures in this set are calculated.",
                "Furthermore, this will help to improve load imbalance.",
                "By having other sets of trial structures overlap, even if some optimizations require a long time, the optimization for the structures in other sets can be executed to compensate for the idle workers for other optimizations.",
                "It is however unclear how such modification of the algorithm might affect the quality of the final results in terms of a conformation search.",
                "Improvement in load imbalance when optimizing each trial structure - Table 8 lists the statistics for optimization times of trial structures generated for each sample molecule measured using 28 workers in the Dennis cluster.",
                "When two or more sets of PC clusters are used, the speedup in performance is hampered by the load imbalance of the optimization of the trial structures.",
                "The longest time for optimizing a trial structure was nearly 24 times longer than the shortest time.",
                "Furthermore, other workers must wait until the longest job has Finished, so that the entire execution time cannot be reduced.",
                "When CONFLEX-G searched the conformers of 1BL1 by the Dennis cluster, the longest calculation time of the trial structure optimization made up approximately 80% of the elapsed time.",
                "Therefore, there are two possible solutions for the load Imbalance. • It is necessary to refine the algorithm used to generate the trial structure, which suppresses the time variation for optimizing a trial structure in CONFLEX.",
                "This enables CONFLEX-G to achieve high-throughput by using many computer resources. • One of the solutions is to overlap the executions for two or more sets of trial structures.",
                "In the current algorithms, a set of trial structures is generated from one initial structure and calculation continues until all structures in this set are calculated.",
                "By having other sets of trial structures, even if a structure search takes a long time, a job can be executed in order to compensate the load imbalance by other jobs.",
                "However, how such modification of the algorithms might affect the efficiency is not clear. • In this experiment, we used a simple build-in roundrobbin scheduler of OmniRPC, which is necessary in order to apply the scheduler that allocates structures with long optimization times to a high-performance Table 8: Statistics of elapsed time of trial structure optimization using 28 workers in the Dennis cluster.",
                "Molecular Min Max Average Variance code (s) (s) (s) AlaX04 2.0 11.3 5.3 3 AlaX16 47.6 920.0 154.2 5404 1L2Y 114.2 13331.4 803.2 636782 1BL1 121.0 29641.8 3153.5 2734811 node and structures with short optimization times to low-performance nodes.",
                "In general, however, it might be difficult to predict the time required for trial structure optimization.",
                "Parallelization of the worker program for speedup to optimize a trial structure - In the current implementation, we do not parallelize the worker program.",
                "In order to speed up trial structures, hybrid programming using OmniRPC and OpenMP in an SMP (Symmetric Multiple Processor) machine may be one of the alternative methods by which to improve overall performance. 5.",
                "RELATED WORK Recently, an algorithm has been developed that solves the problems of parallelization and communication in poorly connected processors to be used for simulation.",
                "The Folding@home project[13] simulates timescales thousands to millions of times longer than previously achieved.",
                "This has allowed us to simulate folding for the first time and to directly examine folding related diseases.",
                "SETI@home[14] is a program to search for alien life by analyzing radio telescope signals using Fourier transform radio telescope data from telescopes from different sites.",
                "SETI@home tackles immensely parallel problems, in which calculation can easily be divided among several computers.",
                "Radio telescope data chunks can easily be assigned to different computers.",
                "Most of these efforts explicitly develop a docking application as a parallel application using a special purpose parallel programming language and middleware, such as MPI, which requires development skills and effort.",
                "However, the skills and effort required to develop a grid application may not be required for OmniRPC.",
                "Nimrod/G[15] is a tool for distributed parametric modeling and implements a parallel task farm for simulations that require several varying input parameters.",
                "Nimrod incorporates a distributed scheduling component that can manage the scheduling of individual experiments to idle computers in a local area network.",
                "Nimrod has been applied to applications including bio-informatics, operations research, and molecular modeling for drug design.",
                "NetSolve[8] is an RPC facility similar to OmniRPC and Ninf, providing a similar programming interface and automatic load balancing mechanism.",
                "Ninf-G[7] is a grid-enabled implementation of Ninf and provides a GridRPC[10] system that uses LDAP to manage the database of remote executables, but does not support clusters involving private IP addresses or addresses inside a firewall.",
                "Matsuoka et al. [16] has also discussed several design issues related to grid RPC systems. 162 6.",
                "CONCLUSIONS AND FUTURE WORK We have designed and implemented CONFLEX-G using OmniRPC.",
                "We reported its performance in a grid testbed of several geographically distributed PC clusters.",
                "In order to explore the conformation of large bio-molecules, CONFLEXG was used to generate trial structures of the molecules, and allocate jobs to optimize them by molecular mechanics in the grid.",
                "OmniRPC provides a restricted persistence model so that the module is automatically initialized at invocation by calling the initialization procedure.",
                "This can eliminate unnecessary communication and the initialization at each call in CONFLEX-G. CONFLEX-G can achieves performance comparable to CONFLEX MPI and exploits more computing resources by allowing the use of multiple PC clusters in the grid.",
                "The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times for the 1BL1 molecule, where the molecule consists of a large number of atoms and each trial structure optimization requires a great deal of time.",
                "The load imbalance of the trial structure optimizations may cause performance degradation.",
                "We need to refine the algorithm used to generate the trial structure in order to improve the load balance optimization for trial structures in CONFLEX.",
                "Future studies will include development of deployment tools and an examination of fault tolerance.",
                "In the current OmniRPC, the registration of an execution program to remote hosts and deployments of worker programs are manually set.",
                "Deployment tools will be required as the number of remote hosts is increased.",
                "In grid environments in which the environment changes dynamically, it is also necessary to support fault tolerance.",
                "This feature is especially important in large-scale applications which require lengthy calculation in a grid environment.",
                "We plan to refine the conformational optimization algorithm in CONFLEX to explore the conformation space search of larger bio-molecules such HIV protease using up to 1000 workers in a grid environment. 7.",
                "ACKNOWLEDGMENTS This research was supported in part by a Grant-in-Aid from the Ministry of Education, Culture, Sports, Science and Technology in Japan, No. 14019011, 2002, and as part of the Program of Research and Development for Applying Advanced Computational Science and Technology by the Japan Science and Technology Corporation (Research on the <br>grid computing</br> platform for drug design).",
                "We would like to thank grid technology research center, AIST, Japan for providing computing resources for our experiment. 8.",
                "REFERENCES [1] H. Goto and E. Osawa.",
                "An efficient algorithm for searching low-energy conformers of cyclic and acyclic molecules.",
                "J. Chem.",
                "Soc., Perkin Trans, 2:187-198, 1993. [2] M. Sato, T. Boku, and D. Takahashi.",
                "OmniRPC: a Grid RPC System for Parallel Programming in Cluster and Grid Environment.",
                "In Proc. of CCGrid2003, pages 219-229, 2003. [3] M. Sato, M. Hirano, Y. Tanaka, and S. Sekiguchi.",
                "OmniRPC: a Grid RPC facility for Cluster and Global Computing in OpenMP.",
                "In Proc. of Workshop on OpenMP Applications and Tools 2001(LNCS 2104 ), pages 130-135, 2001. [4] OmniRPC Project. http://www.omni.hpcc.jp/omnirpc/. [5] M. Sato, H. Nakada, S. Sekiguchi, S. Matsuoka, U. Nagashima, and H. Takagi.",
                "Ninf: A Network Based Information Library for Global World-Wide Computing Infrastructure.",
                "In HPCN Europe, pages 491-502, 1997. [6] Ninf Project. http://ninf.apgrid.org/. [7] Y. Tanaka, H. Nakada, S. Sekiguchi, T. Suzumura, and S. Matsuoka.",
                "Ninf-G: A Reference Implementation of RPC-based Programming Middleware for <br>grid computing</br> .",
                "Journal of <br>grid computing</br>, 1(1):41-51, 2003. [8] D. Arnold, S. Agrawal, S. Blackford, J. Dongarra, M. Miller, K. Seymour, K. Sagi, Z. Shi, and S. Vadhiyar.",
                "Users Guide to NetSolve V1.4.1.",
                "Innovative Computing Dept.",
                "Technical Report ICL-UT-02-05, University of Tennessee, Knoxville, TN, June 2002. [9] Object management group. http://www.omg.org/. [10] K. Seymour, H. Nakada, S. Matsuoka, J. Dongarra, C. Lee, and H. Casanova.",
                "GridRPC: A Remote Procedure Call API for <br>grid computing</br>. [11] H.Goto, T. Takahashi, Y. Takata, K. Ohta, and U Nagashima.",
                "Conflex: Conformational behaviors of polypeptides as predicted by a conformational space search.",
                "In Nanotech2003, volume 1, pages 32-35, 2003. [12] I.",
                "Foster and C. Kesselman.",
                "Globus: A metacomputing infrastructure toolkit.",
                "The International Journal of Supercomputer Applications and High Performanc e Computing, 11(2):115-128, Summer 1997. [13] Stefan M. Larson, Christopher D. Snow, Michael Shirts, and Vijay S. Pande.",
                "Folding@home and genome@home: Using distributed computing to tackle prev iously intractable problems in computational biology.",
                "Computational Genomics, 2002. [14] seti@home project. http://setiathome.ssl.berkeley.edu/. [15] R. Buyya, K. Branson, J. Giddy, and D. Abramson.",
                "The virtual laboratory: a toolset to enable distributed molecular modelling for drug design on the world-wide grid.",
                "Concurrency and Computation: Practice and Experience, 15(1):1-25, January 2003. [16] S. Matsuoka, H. Nakada, M. Sato, and S. Sekiguchi.",
                "Design issues of Network Enabled Server Systems for the Grid.",
                "In Proc. of GRID 2000 (LNCS 1971), pages 4-17, 2000. 163"
            ],
            "original_annotated_samples": [
                "This requires the vast computer resources of a <br>grid computing</br> environment.",
                "ACKNOWLEDGMENTS This research was supported in part by a Grant-in-Aid from the Ministry of Education, Culture, Sports, Science and Technology in Japan, No. 14019011, 2002, and as part of the Program of Research and Development for Applying Advanced Computational Science and Technology by the Japan Science and Technology Corporation (Research on the <br>grid computing</br> platform for drug design).",
                "Ninf-G: A Reference Implementation of RPC-based Programming Middleware for <br>grid computing</br> .",
                "Journal of <br>grid computing</br>, 1(1):41-51, 2003. [8] D. Arnold, S. Agrawal, S. Blackford, J. Dongarra, M. Miller, K. Seymour, K. Sagi, Z. Shi, and S. Vadhiyar.",
                "GridRPC: A Remote Procedure Call API for <br>grid computing</br>. [11] H.Goto, T. Takahashi, Y. Takata, K. Ohta, and U Nagashima."
            ],
            "translated_annotated_samples": [
                "Esto requiere los vastos recursos informáticos de un entorno de <br>computación en malla</br>.",
                "AGRADECIMIENTOS Esta investigación fue apoyada en parte por una Subvención de la Secretaría de Educación, Cultura, Deportes, Ciencia y Tecnología de Japón, No. 14019011, 2002, y como parte del Programa de Investigación y Desarrollo para Aplicar la Ciencia y Tecnología Computacional Avanzada por la Corporación de Ciencia y Tecnología de Japón (Investigación en la plataforma de <br>computación en red</br> para el diseño de fármacos).",
                "Ninf-G: Una Implementación de Referencia de Middleware de Programación basado en RPC para la Computación en Grid.",
                "Revista de Computación en Red, 1(1):41-51, 2003. [8] D. Arnold, S. Agrawal, S. Blackford, J. Dongarra, M. Miller, K. Seymour, K. Sagi, Z. Shi y S. Vadhiyar.",
                "GridRPC: Una API de Llamada a Procedimientos Remotos para la Computación en Grid. [11] H. Goto, T. Takahashi, Y. Takata, K. Ohta y U. Nagashima."
            ],
            "translated_text": "Implementación y Evaluación del Rendimiento de CONFLEX-G: Programa de Búsqueda de Espacio Conformacional Molecular Habilitado para Grid con OmniRPC. Hemos implementado CONFLEX-G utilizando un sistema de RPC en malla llamado OmniRPC. En este artículo, informamos sobre el rendimiento de CONFLEX-G en un banco de pruebas en red de varios clústeres de PC distribuidos geográficamente. Para explorar muchas conformaciones de grandes biomoléculas, CONFLEX-G genera estructuras de prueba de las moléculas y asigna trabajos para optimizar una estructura de prueba con un método confiable de mecánica molecular en la cuadrícula. OmniRPC proporciona un modelo de persistencia restringido para respaldar las aplicaciones de búsqueda paramétrica. En este modelo, cuando el procedimiento de inicialización está definido en el módulo RPC, el módulo se inicializa automáticamente en el momento de la invocación llamando al procedimiento de inicialización. Esto puede eliminar la comunicación y la inicialización innecesarias en cada llamada en CONFLEX-G. CONFLEXG puede lograr un rendimiento comparable al de CONFLEX MPI y puede aprovechar más recursos informáticos al permitir el uso de un clúster de múltiples clústeres en la cuadrícula. El resultado experimental muestra que CONFLEX-G logró una aceleración de 56.5 veces en el caso de la molécula 1BL1, donde la molécula consta de un gran número de átomos y cada optimización de la estructura de prueba requiere un tiempo significativo. El desequilibrio de carga en el tiempo de optimización de la estructura de prueba también puede causar degradación del rendimiento. Categorías y Descriptores de Asignaturas C.2.4 [Organización de Sistemas Informáticos]: RED DE COMUNICACIÓN DE COMPUTADORAS-Sistemas Distribuidos; J.2.4 [Aplicaciones Informáticas]: CIENCIAS FÍSICAS E INGENIERÍA Términos Generales Diseño, Rendimiento 1. INTRODUCCIÓN La elucidación de las conformaciones estables y el proceso de plegamiento de las proteínas es uno de los objetivos más fundamentales y desafiantes en las ciencias de la vida. Si bien algunas de las estructuras secundarias más comunes (por ejemplo, ciertos tipos de hélice, la lámina beta y la hélice) son bien conocidas, se requiere un análisis preciso de los miles de conformaciones químicamente importantes y un análisis de orden de pico-segundo de sus interconversiones conformacionales a través de los estados de transición en la superficie de energía potencial para la investigación de orden de microsegundo del proceso de plegamiento hacia la formación de la estructura terciaria. Recientemente, el concepto de la red computacional ha comenzado a atraer un interés significativo en el campo de la computación de alto rendimiento en red. Los rápidos avances en la tecnología e infraestructura de redes de área amplia han hecho posible construir entornos de computación distribuida a gran escala y alto rendimiento, o redes computacionales, que proporcionan acceso confiable, consistente y generalizado a enormes recursos computacionales. CONFLEX es uno de los programas de búsqueda de espacio conformacional más eficientes y confiables. Hemos aplicado este programa 154 a la paralelización utilizando computación global. El rendimiento del CONFLEX paralelizado permite explorar la región de energía más baja del espacio conformacional de péptidos pequeños en un tiempo transcurrido disponible utilizando un clúster de PC local. Dado que la optimización de la estructura de prueba en CONFLEX se calcula a través de la mecánica molecular, la búsqueda del espacio conformacional se puede realizar rápidamente en comparación con la que utiliza cálculos de orbitales moleculares. Aunque se utilizó la versión paralelizada de CONFLEX para calcular de forma paralela la optimización de la estructura, que representa más del 90% del procesamiento en la búsqueda de conformaciones moleculares, no se pudo lograr una mejora suficiente en la aceleración solo con este método. Por lo tanto, para polímeros de alto peso molecular de organismos vivos, como la proteasa del VIH, el uso de un solo clúster de PC es insuficiente debido a la necesidad de optimizar una gran cantidad de estructuras de prueba. Esto requiere los vastos recursos informáticos de un entorno de <br>computación en malla</br>. En este artículo, describimos CONFLEX-G, un programa de búsqueda conformacional molecular habilitado para grid, utilizando OmniRPC y reportamos su rendimiento en un grid de varios clusters de PC distribuidos geográficamente. El prototipo CONFLEX-G asigna la optimización de las estructuras de cálculo de prueba, que es una tarea muy consumidora de tiempo, a nodos trabajadores en el entorno de la red para obtener un alto rendimiento. Además, comparamos el rendimiento de CONFLEX-G en un clúster de PC local con el de un banco de pruebas en red. OmniRPC[2, 3, 4] es una implementación segura para hilos de Ninf RPC[5, 6], que es una facilidad de RPC de cuadrícula para la computación en entornos de cuadrícula. Varios sistemas adoptan el concepto de la RPC como el modelo básico para la computación en entornos de rejilla, incluyendo Ninf-G[7], NetSolve[8] y CORBA[9]. El sistema RPCstyle proporciona una interfaz de programación fácil de usar e intuitiva, que permite a los usuarios del sistema de cuadrícula crear fácilmente aplicaciones habilitadas para la cuadrícula. Para apoyar la programación paralela, un cliente de RPC puede emitir solicitudes de llamada asincrónicas a un ordenador remoto diferente para aprovechar el paralelismo en toda la red a través de OmniRPC. En este artículo, proponemos el modelo de persistencia OmniRPC para un sistema de RPC de Grid y demostramos su efectividad. Para apoyar una aplicación típica para un entorno de cuadrícula, como una aplicación de búsqueda paramétrica, en la que la misma función se ejecuta con diferentes parámetros de entrada en el mismo conjunto de datos. En el sistema GridRPC actual[10], el conjunto de datos establecido por la llamada anterior no puede ser utilizado por llamadas posteriores. En el sistema OmniRPC, una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado y su estado inicializado para llamadas posteriores a las mismas funciones remotas con el fin de eliminar el costo de invocación de cada llamada. Este documento demuestra que CONFLEX-G es capaz de aprovechar los enormes recursos informáticos de un entorno de grid y buscar conformadores moleculares a gran escala. Demostramos CONFLEX-G en nuestra plataforma de pruebas en red utilizando la proteína real como molécula de muestra. La facilidad OmniRPC del módulo inicializable automático (AIM) permite al sistema calcular eficientemente numerosos conformeros. Además, al utilizar OmniRPC, el usuario puede paralelizar en cuadrícula la aplicación existente y pasar del clúster al entorno de cuadrícula sin modificar el código del programa y compilar el programa. Además, el usuario puede construir fácilmente un entorno de red privada. El resto de este documento está organizado de la siguiente manera. Se presenta una visión general de la Base de Datos de Conformaciones de Estructuras Iniciales, la Perturbación Local, la Optimización de la Geometría, la Comparación y el Registro. Figura 1: Algoritmo de búsqueda de espacio conformacional en el CONFLEX original. El sistema CONFLEX se describe en la Sección 2, y la implementación y diseño de CONFLEX-G se detallan en la Sección 3. Informamos los resultados experimentales obtenidos utilizando CONFLEX-G y discutimos su rendimiento en la Sección 4. En la Sección 6, presentamos conclusiones y discutimos temas para estudios futuros. 2. CONFLEX es un programa eficiente de búsqueda de espacio conformacional, que puede buscar predominantemente y exhaustivamente los conformeros en la región de energía más baja. Las aplicaciones de CONFLEX incluyen la elucidación de la reactividad y selectividad de fármacos y posibles materiales medicinales con respecto a su flexibilidad conformacional. 2.1 Algoritmo de Búsqueda de Espacio Conformacional La estrategia básica de CONFLEX es una búsqueda exhaustiva solo de las regiones de baja energía. El CONFLEX original realiza los siguientes cuatro pasos principales: 1. Selección de una estructura inicial entre los conformeros únicos previamente descubiertos y ordenados en una base de datos conformacional. (Una estructura de entrada se utiliza como la primera estructura inicial al comienzo de una ejecución de búsqueda solamente.) 2. Generación de estructuras de prueba mediante perturbaciones locales a la estructura inicial seleccionada. 3. Optimización de geometría para las nuevas estructuras de prueba generadas. 4. Comparación de las estructuras optimizadas con éxito (ensayo) con los otros conformeros almacenados en una base de datos de conformaciones, y preservación de los conformeros únicos recién descubiertos en la base de datos. La Figura 1 muestra el esquema de CONFLEX, el algoritmo original de búsqueda de espacio conformacional. Estos procedimientos incorporan dos estrategias únicas. La Figura 2 muestra las estrategias para generar perturbaciones locales en CONFLEX. La primera estrategia implica tanto el aleteo de las esquinas como el volteo de los bordes para los átomos del anillo y la rotación paso a paso para las cadenas laterales o cadenas del esqueleto. Estos métodos proporcionan una forma altamente eficiente de producir varias estructuras de prueba buenas. Estas perturbaciones pueden considerarse como una imitación de 155 Rotación Escalonada de Esquina de Solapa de Borde de Giro Figura 2: Estrategias utilizadas para generar las perturbaciones locales, un paso de cruce de barrera en el proceso elemental de la interconversión conformacional térmica. De hecho, las perturbaciones de una estructura inicial corresponden al rendimiento preciso alrededor del espacio de la estructura inicial debido a la localización y debilidad de la perturbación. La regla de selección de la estructura inicial, la regla LowestConformer-First, es la segunda estrategia para dirigir la búsqueda de conformaciones ampliada a las regiones de baja energía. La estructura inicial se selecciona como el conjunto de conformaciones de menor energía almacenadas en la base de datos de conformaciones. Esta regla es efectiva para desplazarse hacia abajo en el espacio de búsqueda hacia regiones de menor energía, como el agua de un arroyo que fluye hacia un embalse vacío, llenando depresiones locales en el camino. Por lo tanto, estos procedimientos tácticos de la búsqueda CONFLEX se conocen como el Algoritmo de Llenado de Reservorio. Para permanecer en la región de baja energía y realizar una búsqueda exhaustiva, el límite de búsqueda (SEL), que determina la energía máxima de las estructuras iniciales, está predefinido. El aumento gradual de SEL permite buscar solo los conformeros de baja energía y evita desviarse hacia regiones de energía innecesariamente alta. 2.2 Paralelización de CONFLEX para clúster Para su aplicación en más de 100 átomos, CONFLEX fue mejorado utilizando técnicas de computación paralela de alto rendimiento. En el algoritmo de búsqueda CONFLEX, los procedimientos de optimización de geometría siempre ocupan el 95% del tiempo transcurrido durante la ejecución de la búsqueda. Por lo tanto, paralelizamos esta optimización utilizando la técnica de paralelización Maestro/Trabajador. Modificamos los procedimientos de búsqueda de la siguiente manera. Después de que se generan las estructuras de prueba (paso 2), se almacenan temporalmente en un grupo de tareas en el nodo maestro. Entonces, cada nodo trabajador recibe dinámicamente una estructura de prueba del nodo maestro. Después de que se complete una optimización en un nodo de trabajador, este recibe inmediatamente otra estructura de prueba. Cuando todas las estructuras de prueba relacionadas con una estructura inicial dada están optimizadas, solo se utiliza el procedimiento principal para la comparación. Al paralelizar CONFLEX, la aceleración de la búsqueda de conformadores moleculares obtenida es la reportada en[11]. 3. CONFLEX-G Originalmente, CONFLEX estaba destinado a ser utilizado para explorar los conformeros de las grandes biomoléculas, como la proteasa del VIH. En tales moléculas, el número de estructuras de prueba aumenta y el tiempo requerido para la optimización de la Selección de RPC de Estructuras Iniciales Conformaciones de la Base de Datos de Perturbación Local Comparación y Registro del Cliente Programa Cliente Grupo de Tareas de Optimización Geométrica RPC Entorno de Rejilla RPC Cluster B Cluster A Cluster C Estructura de prueba Estructura de prueba Estructura de prueba Estructura de prueba Figura 3: Procedimiento de CONFLEX-G. agente rexrex rex Cliente jones.tsukuba.ac.jp hpc-serv.hpcc.jp hpc1 hpc2 hpc3 Invocación del agente Comunicación de la red Figura 4: Visión general del sistema OmniRPC para el clúster remoto con una dirección IP privada. la estructura de prueba se vuelve inmensa. Implementamos la versión paralelizada de CONFLEX, la cual no puede tratar tales moléculas utilizando solo un clúster de PC local. Para aprovechar los vastos recursos informáticos de un entorno de grid, diseñamos e implementamos CONFLEX-G, que es una versión habilitada para grid de CONFLEX, con el sistema OmniRPC. CONFLEX-G asigna trabajos para optimizar una estructura de prueba a los nodos computacionales de cada clúster en el entorno de la red. La Figura 3 muestra el proceso de CONFLEX-G. Los programas de los trabajadores se inicializan mediante el método de inicialización, que es proporcionado por la instalación de OmniRPC AIM en la invocación del trabajador. En cada llamada RPC, el estado inicializado se reutiliza en el host remoto. En otras palabras, el programa cliente puede eliminar la inicialización para cada llamada RPC, y por lo tanto optimizar eficientemente las estructuras de prueba. 3.1 El sistema OmniRPC OmniRPC es un sistema de RPC en malla que permite una programación paralela sin problemas desde un clúster de PC hasta un entorno de malla. OmniRPC hereda su API y arquitectura básica de Ninf. Un cliente y los hosts computacionales remotos que ejecutan los procedimientos remotos pueden estar conectados a través de una red. Las bibliotecas remotas se implementan como un programa ejecutable que contiene una rutina de soporte de red como su rutina principal. Llamamos a este programa ejecutable un programa ejecutable remoto (rex). Cuando el programa cliente OmniRPC se inicia, la función de inicialización del sistema OmniRPC invoca el programa agente OmniRPC omrpc-agent en los hosts remotos listados en el archivo de hosts. Para invocar al agente, el usuario puede utilizar el comando de shell remoto rsh en una red de área local, la API de GRAM (Gestor de Asignación de Recursos Globus) del kit de herramientas Globus 156 en un entorno de grid, o el comando de shell remoto seguro ssh. El usuario puede cambiar las configuraciones solo modificando el archivo de host. OmniRpcCall es una interfaz de programación de cliente simple para llamar a funciones remotas. Cuando OmniRpcCall realiza una llamada a un procedimiento remoto, la llamada se asigna a un host remoto apropiado. Cuando el cliente emite la solicitud de RPC, solicita que el agente en el host seleccionado envíe el trabajo del ejecutable remoto con el programador de trabajos local especificado en el archivo del host. Si no se especifica el programador de tareas, el agente ejecuta el ejecutable remoto en el mismo nodo mediante la llamada al sistema fork. El cliente envía los datos de los argumentos de entrada al ejecutable remoto invocado, y recibe los resultados al regreso de la función remota. Una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado para llamadas RPC posteriores con el fin de eliminar el costo de invocar nuevamente el mismo ejecutable remoto. Cuando el agente y los ejecutables remotos son invocados, los programas remotos obtienen la dirección y el puerto del cliente de la lista de argumentos y se conectan de vuelta al cliente mediante TCP/IP directo o Globus-IO para la transmisión de datos. Debido a que el sistema OmniRPC no utiliza puertos de servicio fijos, el programa cliente asigna puertos no utilizados dinámicamente para esperar la conexión de los ejecutables remotos. Esto evita posibles problemas de seguridad y permite al usuario instalar el sistema OmniRPC sin necesidad de contar con una cuenta privilegiada. Aquí, un recurso de red típico se considera como un grupo de clústeres de PC distribuidos geográficamente. Para los clústeres de PC en una red privada, un proceso agente OmniRPC en el host del servidor funciona como un proxy para relé de comunicaciones entre el cliente y los ejecutables remotos mediante la multiplexación de las comunicaciones utilizando una única conexión. Esta característica, llamada multiplex IO (MXIO), permite a un único cliente utilizar hasta 1,000 hosts de computación remota. Cuando el clúster de PC está dentro de un firewall, el reenvío de puertos de SSH permite que el nodo se comunique con el exterior a través de MXIO. La Figura 4 muestra la descripción general del sistema OmniRPC para un clúster remoto con una dirección IP privada. Para la programación en paralelo, el programador puede utilizar llamadas a procedimientos remotos asíncronos, lo que permite al cliente emitir varias solicitudes mientras continúa con otras computaciones. Las solicitudes se envían a diferentes hosts remotos para ser ejecutadas en paralelo, y el cliente espera o consulta la solicitud completada. En un modelo de programación con llamadas a procedimientos remotos asíncronos, el programador debe manejar las solicitudes pendientes de forma explícita. Debido a que OmniRPC es un sistema seguro para hilos, puede haber varios llamados a procedimientos remotos pendientes en cualquier momento para programas multi-hilo escritos en OpenMP. Modelo de persistencia de OmniRPC 3.2: módulo inicializable automáticamente. OmniRPC soporta eficientemente aplicaciones paralelas típicas de Maestro/Trabajador como programas de ejecución paramétrica. Para aplicaciones de búsqueda paramétrica, que a menudo requieren una gran cantidad de datos idénticos para cada llamada, OmniRPC admite un modelo de persistencia limitado, que está implementado por el módulo inicializable automático. El usuario puede definir un procedimiento de inicialización en el ejecutable remoto para enviar y almacenar datos automáticamente antes de las llamadas reales al procedimiento remoto. Dado que el ejecutable remoto puede aceptar solicitudes para llamadas posteriores, el conjunto de datos que ha sido establecido por el procedimiento de inicialización puede ser reutilizado. Como resultado, el programa del trabajador puede ejecutarse de manera eficiente y reducir la cantidad de datos transmitidos para la inicialización. Una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado para llamadas RPC posteriores. Sin embargo, OmniRPC no garantiza la persistencia del ejecutable remoto, por lo que el conjunto de datos establecido por la llamada anterior no puede ser utilizado por llamadas posteriores. Esto se debe a que una llamada remota realizada por OmniRpcCall puede ser programada en cualquier host remoto de forma dinámica, y los ejecutables remotos pueden ser terminados accidentalmente debido a una reprogramación dinámica o fallos en el host. Sin embargo, la persistencia del ejecutable remoto puede ser explotada en ciertas aplicaciones. Un ejemplo es una aplicación de búsqueda paramétrica: en dicha aplicación, sería eficiente si un gran conjunto de datos pudiera cargarse previamente en la primera llamada, y las llamadas posteriores pudieran realizarse en los mismos datos, pero con diferentes parámetros. Este es el caso para CONFLEX. OmniRPC proporciona un modelo de persistencia restringido a través del módulo inicializable automático (AIM) para apoyar este tipo de aplicación. Si el procedimiento de inicialización está definido en el módulo, el módulo se inicializa automáticamente al invocarlo llamando al procedimiento de inicialización. Cuando el ejecutable remoto se reprograma en diferentes hosts, se llama a la inicialización para inicializar el módulo remoto recién asignado. Esto puede eliminar comunicaciones innecesarias cuando las llamadas RPC utilizan los mismos datos. Para revelar más sobre la diferencia en el progreso entre los casos con OmniRPC AIM y sin OmniRPC AIM, presentamos dos figuras. La Figura 5 ilustra el gráfico de tiempo del progreso de una aplicación típica de OmniRPC utilizando la facilidad OmniRPC AIM, y la Figura 6 ilustra el gráfico de tiempo de la misma aplicación sin la facilidad OmniRPC AIM. En ambas figuras, las líneas entre los diamantes representan los procesos de inicialización, y las líneas entre los puntos representan los cálculos. La línea en negrita indica el momento en que el programa cliente envía los datos al programa trabajador. Es necesario que la aplicación sin la funcionalidad OmniRPC AIM se inicialice en cada RPC. La aplicación que utiliza la funcionalidad OmniRPC AIM puede reutilizar los datos inicializados una vez que el conjunto de datos está inicializado. Esto puede reducir la inicialización en cada RPC. Los trabajadores de la aplicación con AIM pueden calcular de manera eficiente en comparación con la aplicación sin la facilidad de AIM de OmniRPC. 3.3 Implementación de CONFLEX-G utilizando OmniRPC. La Figura 3 muestra una visión general del proceso utilizado en CONFLEX-G. Usando RPCs, CONFLEX-G asigna los procesos de optimización de la estructura de prueba, que son realizados por los nodos de cálculo de un clúster de PC en la versión MPI de CONFLEX, a los nodos computacionales de cada clúster en un entorno de grid. Hay dos cálculos que realizan los programas de trabajador en CONFLEX-G. Uno es la inicialización de un programa de trabajador, y otro es el cálculo de la optimización de la estructura de prueba. Primero, la instalación OmniRPC del AIM se adapta para la inicialización de un programa trabajador. Esta instalación llama automáticamente a la función de inicialización, la cual está contenida en el programa de trabajador, una vez que el programa cliente invoca al programa de trabajador en un nodo remoto. Es necesario que el sistema RPC común, incluido GridRPC, inicialice un programa para cada llamada RPC, ya que la persistencia de datos de los programas trabajadores. Tabla 1: Configuraciones de máquinas en la plataforma de pruebas en red. El nombre del clúster del sitio Máquina Red de Autenticación # de Nodos # de CPUs Univ. de Tsukuba Dennis Dual Xeon 2.4GHz 1Gb Ethernet Globus, SSH 14 28 Alice Dual Athlon 1800+ 100Mb Ethernet Globus, SSH 18 36 TUT Toyo Dual Athlon 2600+ 100Mb Ethernet SSH 8 16 AIST Ume Dual Pentium3 1.4GHz 1Gb Ethernet Globus, SSH 32 64 no es compatible. En OmniRPC, sin embargo, cuando se define la función remota Inicializar en el programa del trabajador y se asigna un nuevo programa de trabajador, correspondiente al otro RPC, para ejecutar, se llama automáticamente a una función Inicializar. Por lo tanto, después de la llamada a la función Initialize para configurar los datos de inicialización comunes, un programa trabajador puede reutilizar estos datos y aumentar la eficiencia de sus procesos. Por lo tanto, cuanto mayor sea el costo de configuración, mayor será el beneficio potencial. Implementamos el programa de trabajador de CONFLEX-G para recibir datos, como parámetros de evaluación de energía, de un programa cliente y para ser inicializado por la función Inicializar. Organizamos el programa del cliente de CONFLEX-G para transferir el archivo de parámetros en el momento de la inicialización del trabajador. Esto permite que la ejecución se realice modificando solo la configuración del cliente si el usuario desea ejecutar CONFLEX-G con un conjunto de datos diferente. Segundo, para calcular la optimización de la estructura de prueba en un programa de trabajador, el programa de trabajador debe recibir los datos, como el arreglo de átomos de la estructura de prueba y el estado de energía interna. El resultado se devuelve al programa cliente después de que el trabajador haya optimizado la estructura de prueba. Dado que la parte de cálculo de la optimización de la estructura en este programa de trabajador puede ser calculada de forma independiente utilizando diferentes parámetros, paralelizamos esta parte utilizando RPC asincrónicos en el lado del cliente. Para llamar a la función de optimización de estructuras en un programa trabajador desde el programa cliente, utilizamos la API OmniRpcCallAsync, la cual está diseñada para RPC asincrónico. Además, la API OmniRpcCallWaitAll espera hasta que se utilicen todas las RPC asíncronas para realizar la sincronización una vez que todas las RPC asíncronas se hayan completado, con el fin de optimizar la estructura de la prueba. El programa cliente que asigna la optimización de la estructura de prueba al nodo de cálculo de un clúster de PC utilizando RPC se describe de la siguiente manera. OmniRpcInit() OmniRpcModuleInit(conflex_search,...); ... mientras( <nuevos conformeros> ) { para cada( <estructuras de prueba> ) OmniRpcCallAsync(conflex_search_worker, ...); OmniRpcWaitAll(); ... Ten en cuenta que la API OmniRpcModuleInit solo devuelve los argumentos necesarios para la inicialización y no ejecutará realmente la función de inicialización. Como se describe arriba, la inicialización real se realiza en la primera llamada remota. Dado que el sistema OmniRPC tiene un programador de round-robin sencillo, no es necesario escribir explícitamente el código para el equilibrio de carga. Por lo tanto, los RPC se asignan automáticamente a los trabajadores inactivos. Tabla 2: Rendimiento de la red entre el nodo maestro del clúster Dennis y el nodo maestro de cada clúster de PC. Rendimiento de ida y vuelta del clúster Tiempo (ms) (Mbps) Dennis 0.23 879.31 Alice 0.18 94.12 Toyo 11.27 1.53 Ume 1.07 373.33 RESULTADOS PRELIMINARES 4.1 Banco de pruebas de la red El banco de pruebas de la red fue construido utilizando recursos informáticos de la Universidad de Tsukuba, la Universidad de Tecnología de Toyohashi (TUT) y el Instituto Nacional de Ciencia y Tecnología Industrial Avanzada (AIST). La Tabla 1 muestra los recursos informáticos utilizados para la red del presente estudio. La Universidad de Tsukuba y AIST están conectadas por una red WAN de 1 Gbps en Tsukuba, y los otros clústeres de PC están conectados por SINET, que es una red de área amplia dedicada a la investigación académica en Japón. La Tabla 2 muestra el rendimiento de la red medida entre el nodo maestro del clúster Dennis y el nodo maestro de cada clúster de PC en el banco de pruebas de la red. El rendimiento de CONFLEX-G En todos los experimentos de CONFLEX-G, el programa cliente se ejecutó en el nodo maestro del clúster Dennis en la Universidad de Tsukuba. El planificador Round-Robin incorporado de OmniRPC se utilizó como planificador de tareas. Se utilizó SSH para un sistema de autenticación, el OminRPCs MXIO, que retransmite la comunicación de E/S entre el programa cliente y los programas trabajadores mediante el reenvío de puertos de SSH, no se utilizó. Se debe tener en cuenta que un programa de trabajador se asigna y se ejecuta en una CPU de un nodo de cálculo en un clúster de PC. Es decir, el número de trabajadores es igual al número de CPUs. Estos programas fueron compilados por el Intel Fortran Compiler 7.0 y gcc 2.95. Se utilizó MPICH, Versión 1.2.5, para comparar el rendimiento entre CONFLEX MPI y CONFLEX-G. Para demostrar la usabilidad de la instalación OmniRPC de AIM, implementamos otra versión de CONFLEX-G que no utilizaba la instalación OmniRPC. El programa del trabajador en esta versión de CONFLEXG debe inicializarse en cada RPC porque el trabajador no conserva el conjunto de datos anterior. Para examinar el rendimiento de CONFLEX-G, seleccionamos dos péptidos y dos proteínas pequeñas como moléculas de prueba: • N-acetil tetra-alanina metilester (AlaX04) • N-acetil hexadeca-alanina metilester (AlaX16) • Construcción de miniproteína TRP-cage TC5B (1L2Y) • Fragmento del extremo N del receptor de PTH (1BL1) La Tabla 3 enumera las características de estas moléculas de muestra. La estructura de prueba de columnas / bucles en esta tabla muestra la Figura 7: Rendimientos de CONFLEX-G, CONFLEX MPI y CONFLEX Original en el clúster Dennis. Figura 8: Proporción de aceleración, que se basa en el tiempo transcurrido de CONFLEX-G utilizando un trabajador en el clúster de Dennis. Figura 9: Rendimiento de CONFLEX-G con y sin la facilidad OmniRPC del módulo inicializable automático para AlaX16. Tabla 3: Características de las moléculas y transmisión de datos para optimizar las estructuras moleculares de prueba en cada código molecular. Tabla 4: Tiempo de búsqueda transcurrido para la conformación molecular de AlaX04. Tabla 6: Tiempo transcurrido de la búsqueda de la estructura de prueba de 1L2Y. Tabla 7: Tiempo transcurrido de la búsqueda de la estructura de prueba de 1BL1. Número total de estructuras del clúster Tiempo de optimización Transcurrido Velocidad transcurrida (# de trabajadores) trabajadores / trabajador / estructura (s) tiempo (s) tiempo (H) hasta Toyo MPI (1) 1 519.0 3,646 189,210 525.61 1.00 Toyo MPI (16) 16 32.4 3,646 120,028 33.34 15.76 Dennis (28) 28 18.5 3,154 61,803 17.16 30.61 Dennis (28) + Ume (56) 84 6.1 4,497 33,502 9.30 56.48 160 número de estructuras de prueba generadas en cada iteración, indicando el grado de paralelismo. La Figura 3 también resume la cantidad de transmisión de datos requerida para la inicialización de un programa de trabajador y para la optimización de cada estructura de prueba. Ten en cuenta que la cantidad de transmisión de datos necesaria para inicializar un programa de trabajador y optimizar una estructura de prueba en la versión MPI de CONFLEX es igual a la de CONFLEX-G. Utilizamos una versión mejorada del campo de fuerza MM2 para asignar una función de energía potencial a varias propiedades geométricas de un grupo de átomos. 4.2.1 Rendimiento en un clúster local. Primero comparamos el rendimiento de CONFLEX-G, la versión MPI de CONFLEX y la versión secuencial original de CONFLEX-G utilizando un clúster local. Investigamos el rendimiento variando el número de trabajadores utilizando el clúster Dennis. Elegimos AlaX04 como molécula de prueba para este experimento. La Figura 7 compara los resultados para el CONFLEX MPI y el CONFLEX-G en un clúster de PC local. El resultado de este experimento muestra que CONFLEX-G puede reducir el tiempo de ejecución a medida que aumenta el número de trabajadores, al igual que en la versión MPI de CONFLEX. Descubrimos que CONFLEX-G logró eficiencias comparables a la versión MPI. Con 28 trabajadores, CONFLEX-G logró una mejora de velocidad de 18.00 veces en comparación con la versión secuencial de CONFLEX. El rendimiento de CONFLEX-G sin la funcionalidad AIM de OmniRPC es peor que el de CONFLEX-G que utiliza la funcionalidad, basado en el aumento en el número de trabajadores. Esto indica que el OmniRPC AIM permite al trabajador calcular de manera eficiente sin necesidad de realizar otros cálculos, como la inicialización o la invocación de programas de trabajador. A medida que se aumenta el número de trabajadores, el rendimiento de CONFLEX-G es ligeramente inferior al de la versión MPI. Esta degradación del rendimiento es causada por diferencias en los procesos de inicialización de los trabajadores de CONFLEX-G y CONFLEX MPI. En el caso de CONFLEX MPI, todos los trabajadores se inicializan antes de la fase de optimización. En el caso de OminRPC, el trabajador es invocado bajo demanda cuando la llamada RPC es emitida realmente. Por lo tanto, la inicialización conlleva este sobrecosto. Dado que el objetivo de CONFLEX-G es explorar las conformaciones de grandes bio-moléculas, el número de estructuras de prueba y el tiempo para optimizar la estructura de prueba podrían ser grandes. En tales casos, el gasto general para invocar e inicializar el programa de trabajador puede ser pequeño en comparación con el tiempo total transcurrido. 4.2.2 Rendimiento para Péptidos en el Banco de Pruebas de la Red En primer lugar, las moléculas de muestra (AlaX04 y AlaX16) se utilizaron para examinar el rendimiento de CONFLEX-G en un entorno de red. La Figura 8 muestra la aceleración lograda al utilizar múltiples clústeres en comparación con el uso de un solo trabajador en el clúster de Dennis. Los resultados detallados se muestran en la Tabla 4 y la Tabla 5. En ambos casos, el mejor rendimiento se obtuvo utilizando 64 trabajadores de la combinación de los clústeres de Dennis y Alice. CONFLEX-G logró una aceleración máxima de 36.08 veces para AlaX04 y una aceleración máxima de 21.91 veces para AlaX16. En el caso de AlaX04, el rendimiento mejora solo cuando el rendimiento de la red entre clústeres es alto. Sin embargo, aunque se utilicen dos o más grupos en un entorno de red de área amplia, la mejora en el rendimiento fue leve debido a que el tiempo de optimización de una estructura de prueba generada a partir de AlaX04, una molécula pequeña, es corto. Además, los gastos generales necesarios para la invocación de un programa de trabajador y la transmisión de datos a través de la red consumen una gran parte del tiempo de procesamiento restante. En particular, la transmisión de datos necesaria para la inicialización de un programa de trabajador es de 2 MB. En el caso del clúster Toyo, donde el rendimiento de la red entre el programa cliente y los programas trabajadores es deficiente, el tiempo de transmisión de datos al programa trabajador requería aproximadamente 6.7 segundos. Dado que el tiempo de transmisión fue más largo que el tiempo de procesamiento de una optimización de estructura en CONFLEX-G, la mayor parte del tiempo se dedicó a esta transmisión de datos. Por lo tanto, incluso si CONFLEX-G utiliza un gran número de nodos de cálculo en un entorno de red de área amplia, no se obtiene el beneficio de utilizar un recurso de cuadrícula. En el caso de AlaX16, CONFLEX-G logró una aceleración al utilizar dos o más clústeres de PC en nuestro banco de pruebas en red. Esto se debió a que el tiempo de cálculo en el programa del trabajador era largo y los costos adicionales, como la latencia de red y la invocación de programas de trabajador, se volvieron relativamente pequeños y pudieron ocultarse. El mejor rendimiento se obtuvo utilizando 64 trabajadores en los clústeres de Dennis y Alice. En el caso de AaX16, el rendimiento logrado fue un aumento de velocidad de 36.08 veces. La Figura 9 revela el efecto de utilizar la facilidad del OmniRPC AIM en el rendimiento de CONFLEX-G. En la mayoría de los casos, CONFLEX-G con la instalación de OmniRPC AIM logró un mejor rendimiento que CONFLEX-G sin la instalación. En particular, la facilidad OmniRPC AIM fue ventajosa al usar dos clústeres conectados por una red de bajo rendimiento. Los resultados indican que la instalación OmniRPC AIM puede mejorar el rendimiento en el entorno de la red. 4.2.3 Rendimiento para proteínas pequeñas en el banco de pruebas de la red. Finalmente, exploramos la conformación molecular utilizando CONFLEX-G para moléculas grandes. En un entorno de cuadrícula, este experimento se llevó a cabo utilizando los clústeres Dennis y Ume. En este experimento, utilizamos dos proteínas, 1L2Y y 1BL1. La Tabla 6 y la Tabla 7 muestran el rendimiento de CONFLEX-G en el entorno de la red y el de CONFLEX MPI en el clúster de Toyo, respectivamente. Los incrementos de velocidad en estas tablas fueron calculados respectivamente basados en el rendimiento de un trabajador y 16 trabajadores del clúster Toyo utilizando CONFLEX MPI. CONFLEX-G con 84 trabajadores en los grupos de Dennis y Ume obtuvo aceleraciones máximas de 56.5 veces para 1L2Y y 34.5 veces para 1L2Y. Dado que el tiempo de cálculo para la optimización de la estructura requería una gran cantidad de tiempo, la proporción de gastos generales, incluidas tareas como la invocación de un programa de trabajador y la transmisión de datos para la inicialización, se volvió muy pequeña, por lo que el rendimiento de CONFLEX-G mejoró. Descubrimos que el desequilibrio de carga en el tiempo de procesamiento de la optimización para cada estructura de prueba causó una degradación del rendimiento. Cuando obtuvimos el mejor rendimiento para 1L2Y utilizando los cúmulos de Dennis y Ume, el tiempo para la optimización de cada estructura varió de 190 a 27,887 segundos, y la proporción entre los tiempos más largos y más cortos fue de 13.4. Para 1BL1, la proporción de tiempo mínimo sobre tiempo máximo fue de 190. Además, para que el programa del trabajador espere hasta que se complete la optimización de todas las estructuras de prueba, se descubrió que todos los programas de trabajador esperaban en un estado inactivo durante aproximadamente 6 horas. Esto ha causado la degradación del rendimiento de CONFLEX-G. 161 4.3 Discusión En esta subsección, discutimos la mejora del rendimiento reflejada en nuestros experimentos. Explotando el paralelismo - Para aprovechar más recursos computacionales, es necesario aumentar el grado de paralelismo. En este experimento, el grado de paralelismo no fue tan grande en el caso de las moléculas de muestra. Al utilizar un conjunto de más de 500 nodos informáticos para 1BL1, el número de estructuras de un solo ensayo asignadas a cada trabajador será solo de uno o dos. Si se asignan más de 100 estructuras de prueba a cada programa de trabajador, el cálculo se puede realizar de manera más eficiente debido a la reducción de la sobrecarga para la invocación y la inicialización de los trabajadores a través de la facilidad de OmniRPC AIM. Una idea para aumentar el paralelismo es superponer la ejecución de dos o más conjuntos de estructuras de prueba. En el algoritmo actual, se genera un conjunto de estructuras de prueba a partir de una estructura inicial y se calculan las optimizaciones para todas las estructuras de este conjunto. Además, esto ayudará a mejorar el desequilibrio de carga. Al hacer que otros conjuntos de estructuras de prueba se superpongan, incluso si algunas optimizaciones requieren mucho tiempo, la optimización de las estructuras en otros conjuntos se puede ejecutar para compensar a los trabajadores inactivos de otras optimizaciones. Sin embargo, no está claro cómo dicha modificación del algoritmo podría afectar la calidad de los resultados finales en términos de una búsqueda de conformación. Mejora en el desequilibrio de carga al optimizar cada estructura de prueba: la Tabla 8 enumera las estadísticas de los tiempos de optimización de las estructuras de prueba generadas para cada molécula de muestra medida utilizando 28 trabajadores en el clúster de Dennis. Cuando se utilizan dos o más conjuntos de grupos de PC, la mejora en el rendimiento se ve obstaculizada por el desequilibrio de carga en la optimización de las estructuras de prueba. El tiempo más largo para optimizar una estructura de prueba fue casi 24 veces más largo que el tiempo más corto. Además, los demás trabajadores deben esperar hasta que el trabajo más largo haya terminado, por lo que el tiempo total de ejecución no se puede reducir. Cuando CONFLEX-G buscó los conformeros de 1BL1 mediante el clúster de Dennis, el tiempo de cálculo más largo de la optimización de la estructura de prueba representó aproximadamente el 80% del tiempo transcurrido. Por lo tanto, hay dos posibles soluciones para el desequilibrio de carga. • Es necesario refinar el algoritmo utilizado para generar la estructura de prueba, que suprime la variación temporal para optimizar una estructura de prueba en CONFLEX. Esto permite que CONFLEX-G logre un alto rendimiento al utilizar muchos recursos informáticos. • Una de las soluciones es superponer las ejecuciones para dos o más conjuntos de estructuras de prueba. En los algoritmos actuales, se genera un conjunto de estructuras de prueba a partir de una estructura inicial y el cálculo continúa hasta que se calculen todas las estructuras de este conjunto. Al tener otros conjuntos de estructuras de prueba, incluso si una búsqueda de estructuras lleva mucho tiempo, un trabajo puede ejecutarse para compensar el desequilibrio de carga causado por otros trabajos. Sin embargo, no está claro cómo tal modificación de los algoritmos podría afectar la eficiencia. En este experimento, utilizamos un programador de round-robin incorporado simple de OmniRPC, que es necesario para aplicar el programador que asigna estructuras con largos tiempos de optimización a una tabla de alto rendimiento. Tabla 8: Estadísticas del tiempo transcurrido de la optimización de la estructura de prueba utilizando 28 trabajadores en el clúster Dennis. Código de Varianza Promedio Mínimo Máximo Molecular (s) (s) (s) AlaX04 2.0 11.3 5.3 3 AlaX16 47.6 920.0 154.2 5404 1L2Y 114.2 13331.4 803.2 636782 1BL1 121.0 29641.8 3153.5 2734811 nodos y estructuras con tiempos de optimización cortos a nodos de bajo rendimiento. En general, sin embargo, podría ser difícil predecir el tiempo necesario para la optimización de la estructura del ensayo. Paralelización del programa del trabajador para acelerar y optimizar una estructura de prueba - En la implementación actual, no paralelizamos el programa del trabajador. Para acelerar las estructuras de prueba, la programación híbrida utilizando OmniRPC y OpenMP en una máquina SMP (Symmetric Multiple Processor) puede ser uno de los métodos alternativos para mejorar el rendimiento general. TRABAJO RELACIONADO Recientemente, se ha desarrollado un algoritmo que resuelve los problemas de paralelización y comunicación en procesadores poco conectados para ser utilizados en simulaciones. El proyecto Folding@home simula escalas de tiempo miles a millones de veces más largas que las logradas previamente. Esto nos ha permitido simular el plegamiento por primera vez y examinar directamente enfermedades relacionadas con el plegamiento. SETI@home es un programa para buscar vida extraterrestre mediante el análisis de señales de radio telescopio utilizando datos de telescopios de diferentes sitios mediante la transformada de Fourier. SETI@home aborda problemas inmensamente paralelos, en los cuales los cálculos pueden dividirse fácilmente entre varios ordenadores. Los fragmentos de datos del radiotelescopio pueden asignarse fácilmente a diferentes computadoras. La mayoría de estos esfuerzos desarrollan explícitamente una aplicación de acoplamiento como una aplicación paralela utilizando un lenguaje de programación paralela de propósito especial y middleware, como MPI, lo cual requiere habilidades y esfuerzo de desarrollo. Sin embargo, las habilidades y esfuerzo necesarios para desarrollar una aplicación de cuadrícula pueden no ser necesarios para OmniRPC. Nimrod/G[15] es una herramienta para modelado paramétrico distribuido e implementa una granja de tareas paralelas para simulaciones que requieren varios parámetros de entrada variables. Nimrod incorpora un componente de programación distribuida que puede gestionar la programación de experimentos individuales en computadoras inactivas en una red de área local. Nimrod se ha aplicado en aplicaciones que incluyen bioinformática, investigación de operaciones y modelado molecular para el diseño de fármacos. NetSolve es una instalación de RPC similar a OmniRPC y Ninf, que proporciona una interfaz de programación similar y un mecanismo de equilibrio de carga automático. Ninf-G[7] es una implementación habilitada para grid de Ninf y proporciona un sistema GridRPC[10] que utiliza LDAP para gestionar la base de datos de ejecutables remotos, pero no admite clústeres que involucren direcciones IP privadas o direcciones dentro de un firewall. Matsuoka et al. [16] también han discutido varios problemas de diseño relacionados con los sistemas de RPC en malla. 162 6. CONCLUSIONES Y TRABAJO FUTURO Hemos diseñado e implementado CONFLEX-G utilizando OmniRPC. Informamos sobre su rendimiento en un banco de pruebas en red de varios clústeres de PC distribuidos geográficamente. Para explorar la conformación de grandes biomoléculas, se utilizó CONFLEXG para generar estructuras de prueba de las moléculas y asignar trabajos para optimizarlas mediante mecánica molecular en la cuadrícula. OmniRPC proporciona un modelo de persistencia restringido para que el módulo se inicialice automáticamente al invocarse llamando al procedimiento de inicialización. Esto puede eliminar la comunicación innecesaria y la inicialización en cada llamada en CONFLEX-G. CONFLEX-G puede lograr un rendimiento comparable al de CONFLEX MPI y aprovecha más recursos informáticos al permitir el uso de múltiples clústeres de PC en la red. El resultado experimental muestra que CONFLEX-G logró una aceleración de 56.5 veces para la molécula 1BL1, donde la molécula consta de un gran número de átomos y cada optimización de la estructura de prueba requiere mucho tiempo. El desequilibrio de carga de las optimizaciones de la estructura de prueba puede causar degradación del rendimiento. Necesitamos refinar el algoritmo utilizado para generar la estructura de prueba con el fin de mejorar la optimización del equilibrio de carga para las estructuras de prueba en CONFLEX. Los estudios futuros incluirán el desarrollo de herramientas de implementación y un examen de la tolerancia a fallos. En el OmniRPC actual, el registro de un programa de ejecución en hosts remotos y despliegues de programas de trabajadores se configuran manualmente. Se requerirán herramientas de implementación a medida que se incremente el número de hosts remotos. En entornos de cuadrícula en los que el entorno cambia dinámicamente, también es necesario contar con soporte para la tolerancia a fallos. Esta característica es especialmente importante en aplicaciones a gran escala que requieren cálculos prolongados en un entorno de cuadrícula. Planeamos refinar el algoritmo de optimización conformacional en CONFLEX para explorar el espacio de búsqueda de conformaciones de moléculas biológicas más grandes como la proteasa del VIH utilizando hasta 1000 trabajadores en un entorno de cuadrícula. AGRADECIMIENTOS Esta investigación fue apoyada en parte por una Subvención de la Secretaría de Educación, Cultura, Deportes, Ciencia y Tecnología de Japón, No. 14019011, 2002, y como parte del Programa de Investigación y Desarrollo para Aplicar la Ciencia y Tecnología Computacional Avanzada por la Corporación de Ciencia y Tecnología de Japón (Investigación en la plataforma de <br>computación en red</br> para el diseño de fármacos). Nos gustaría agradecer al centro de investigación de tecnología de red, AIST, Japón por proporcionar recursos informáticos para nuestro experimento. 8. REFERENCIAS [1] H. Goto y E. Osawa. Un algoritmo eficiente para buscar conformaciones de baja energía de moléculas cíclicas y acíclicas. J. Quím. Soc., Perkin Trans, 2:187-198, 1993. [2] M. Sato, T. Boku, y D. Takahashi. OmniRPC: un sistema de RPC en malla para programación paralela en entornos de clúster y malla. En Proc. de CCGrid2003, páginas 219-229, 2003. [3] M. Sato, M. Hirano, Y. Tanaka y S. Sekiguchi. OmniRPC: una instalación de RPC en Grid para la computación en clúster y global en OpenMP. En Proc. del Taller sobre Aplicaciones y Herramientas OpenMP 2001 (LNCS 2104), páginas 130-135, 2001. [4] Proyecto OmniRPC. http://www.omni.hpcc.jp/omnirpc/. [5] M. Sato, H. Nakada, S. Sekiguchi, S. Matsuoka, U. Nagashima y H. Takagi. Ninf: Una Biblioteca de Información Basada en Red para la Infraestructura de Computación Global en Todo el Mundo. En HPCN Europe, páginas 491-502, 1997. [6] Proyecto Ninf. http://ninf.apgrid.org/. [7] Y. Tanaka, H. Nakada, S. Sekiguchi, T. Suzumura y S. Matsuoka. Ninf-G: Una Implementación de Referencia de Middleware de Programación basado en RPC para la Computación en Grid. Revista de Computación en Red, 1(1):41-51, 2003. [8] D. Arnold, S. Agrawal, S. Blackford, J. Dongarra, M. Miller, K. Seymour, K. Sagi, Z. Shi y S. Vadhiyar. Guía del usuario de NetSolve V1.4.1. Departamento de Computación Innovador. Informe técnico ICL-UT-02-05, Universidad de Tennessee, Knoxville, TN, junio de 2002. [9] Grupo de gestión de objetos. http://www.omg.org/. [10] K. Seymour, H. Nakada, S. Matsuoka, J. Dongarra, C. Lee y H. Casanova. GridRPC: Una API de Llamada a Procedimientos Remotos para la Computación en Grid. [11] H. Goto, T. Takahashi, Y. Takata, K. Ohta y U. Nagashima. ",
            "candidates": [],
            "error": [
                [
                    "computación en malla",
                    "computación en red"
                ]
            ]
        },
        "grid rpc system": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Implementation and Performance Evaluation of CONFLEX-G: Grid-enabled Molecular Conformational Space Search Program with OmniRPC Yoshihiro Nakajima Graduate School of Systems & Information Engineering, University of Tsukuba Tsukuba, 305-8577, Japan yoshihiro@hpcs.is.tsukuba.ac.jp Mitsuhisa Sato Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan msato@is.tsukuba.ac.jp Hitoshi Goto Knowledge-based Information Engineering, Toyohashi University of Technology Toyohashi, 441-8580, Japan gotoh@cochem2.tutkie.tut.ac.jp Taisuke Boku, Daisuke Takahashi Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan {taisuke,daisuke}@hpcs.is.tsukuba.ac.jp ABSTRACT CONFLEX-G is the grid-enabled version of a molecular conformational space search program called CONFLEX.",
                "We have implemented CONFLEX-G using a <br>grid rpc system</br> called OmniRPC.",
                "In this paper, we report the performance of CONFLEX-G in a grid testbed of several geographically distributed PC clusters.",
                "In order to explore many conformation of large bio-molecules, CONFLEX-G generates trial structures of the molecules and allocates jobs to optimize a trial structure with a reliable molecular mechanics method in the grid.",
                "OmniRPC provides a restricted persistence model to support the parametric search applications.",
                "In this model, when the initialization procedure is defined in the RPC module, the module is automatically initialized at the time of invocation by calling the initialization procedure.",
                "This can eliminate unnecessary communication and initialization at each call in CONFLEX-G. CONFLEXG can achieve performance comparable to CONFLEX MPI and can exploit more computing resources by allowing the use of a cluster of multiple clusters in the grid.",
                "The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times in the case of the 1BL1 molecule, where the molecule consists of a large number of atoms, and each trial structure optimization requires significant time.",
                "The load imbalance of the optimization time of the trial structure may also cause performance degradation.",
                "Categories and Subject Descriptors C.2.4 [Computer Systems Organization]: COMPUTERCOMMUNICATION NETWORK-Distributed Systems; J.2.4 [Computer Applications]: PHYSICAL SCIENCES AND ENGINEERING General Terms Design,Performance 1.",
                "INTRODUCTION Elucidation of the stable conformations and the folding process of proteins is one of the most fundamental and challenging goals in life science.",
                "While some of the most common secondary structures (e.g., certain types of helix, the beta-strand, and the coil) are well known, precise analysis of the thousands of chemically important conformers and pico-second-order analysis of their conformational interconversions via the transition states on the potential energy surface are required for the microsecond-order investigation of the folding process toward the tertiary structure formations.",
                "Recently, the concept of the computational grid has begun to attract significant interest in the field of high-performance network computing.",
                "Rapid advances in wide-area networking technology and infrastructure have made it possible to construct large-scale, high-performance distributed computing environments, or computational grids, that provide dependable, consistent and pervasive access to enormous computational resources.",
                "CONFLEX is one of the most efficient and reliable conformational space search programs[1].",
                "We have applied this 154 program to parallelization using global computing.",
                "The performance of the parallelized CONFLEX enables exploration of the lower-energy region of the conformational space of small peptides within an available elapsed time using a local PC cluster.",
                "Since trial structure optimization in CONFLEX is calculated via molecular mechanics, conformational space search can be performed quickly compared to that using molecular orbital calculation.",
                "Although the parallelized version of CONFLEX was used to calculate in parallel the structure optimization, which takes up over 90% of the processing in the molecular conformation search, sufficient improvement in the speedup could not be achieved by this method alone.",
                "Therefore, for high polymers from live organisms, such as HIV protease, the use one PC cluster is insufficient due to the requirement for optimization of a huge number of trial structures.",
                "This requires the vast computer resources of a grid computing environment.",
                "In this paper, we describe CONFLEX-G, a grid-enabled molecular conformational search program, using OmniRPC and report its performance in a grid of several PC clusters which are geographically distributed.",
                "The prototype CONFLEX-G allocates calculation trial structures optimization, which is a very time-consuming task, to worker nodes in the grid environment in order to obtain high throughput.",
                "In addition, we compare the performance of CONFLEX-G in a local PC cluster to that in a grid testbed.",
                "OmniRPC[2, 3, 4] is a thread-safe implementation of Ninf RPC[5, 6] which is a Grid RPC facility for grid environment computing.",
                "Several systems adopt the concept of the RPC as the basic model for grid environment computing, including Ninf-G[7], NetSolve[8] and CORBA[9].",
                "The RPCstyle system provides an easy-to-use, intuitive programming interface, allowing users of the grid system to easily create grid-enabled applications.",
                "In order to support parallel programming, an RPC client can issue asynchronous call requests to a different remote computer to exploit networkwide parallelism via OmniRPC.",
                "In this paper, we propose the OmniRPC persistence model to a <br>grid rpc system</br> and demonstrate its effectiveness.",
                "In order to support a typical application for a grid environment, such as a parametric search application, in which the same function is executed with different input parameters on the same data set.",
                "In the current GridRPC system[10], the data set by the previous call cannot be used by subsequent calls.",
                "In the OmniRPC system, once a remote executable is invoked, the client attempts to use the invoked remote executable and its initialized state for subsequent RPC calls to the same remote functions in order to eliminate the invocation cost of each call.",
                "This paper demonstrates that CONFLEX-G is able to exploit the huge computer resources of a grid environment and search large-scale molecular conformers.",
                "We demonstrate CONFLEX-G on our grid testbed using the actual protein as a sample molecule.",
                "The OmniRPC facility of the automatic initializable module (AIM) allows the system to efficiently calculate numerous conformers.",
                "Furthermore, by using OmniRPC, the user can grid-parallelize the existing application, and move from the cluster to the grid environment without modifying program code and compiling the program.",
                "In addition, the user can easily build a private grid environment.",
                "The rest of this paper is organized as follows.",
                "An overview Selection of Initial Structure Conformations Database Local Perturbation Geometry Optimization Comparison and Registration Figure 1: Algorithm of conformational space search in the original CONFLEX. of the CONFLEX system is presented in Section2, and the implementation and design of CONFLEX-G are described in Section 3.",
                "We report experimental results obtained using CONFLEX-G and discuss its performance in Section 4.",
                "In Section 6, we present conclusions and discuss subjects for future study. 2.",
                "CONFLEX CONFLEX [1] is an efficient conformational space search program, which can predominately and exhaustively search the conformers in the lower-energy region.",
                "Applications of CONFLEX include the elucidation of the reactivity and selectivity of drugs and possible drug materials with regard to their conformational flexibility. 2.1 Algorithm of ConformationalSpaceSearch The basic strategy of CONFLEX is an exhaustive search of only the low-energy regions.",
                "The original CONFLEX performs the following four major steps: 1.",
                "Selection of an initial structure among the previously discovered unique conformers sorted in a conformational database. (An input structure is used as the first initial structure at the beginning of a search execution only.) 2.",
                "Generation of trial structures by local perturbations to the selected initial structure. 3.",
                "Geometry optimization for the newly generated trial structures. 4.",
                "Comparison of the successfully optimized (trial) structures with the other conformers stored in a conformation database, and preservation of newly discovered unique conformers in the database.",
                "Figure 1 shows the outline of CONFLEX, the original conformational space search algorithm.",
                "These procedures incorporate two unique strategies.",
                "Figure 2 shows the strategies for generating local perturbations in CONFLEX.",
                "The first strategy involves both corner flapping and edge flipping for the ring atoms and stepwise rotation for side-chains or backbone chains.",
                "These methods provide a highly efficient way to produce several good trial structures.",
                "These perturbations can be considered to mimic 155 Stepwise Rotation Corner Flap Edge Flip Figure 2: Strategies used to generate the local perturbations. a barrier-crossing step in the elementary process of the thermal conformational inter-conversion.",
                "Actually, the perturbations of an initial structure correspond to the precise performance around the space of the initial structure because of localization and weakness of the perturbation.",
                "The selection rule of the initial structure, the LowestConformer-First rule, is the second strategy for directing the conformation search expanded to the low-energy regions.",
                "The initial structure is selected as the set of lowest energy conformers stored in the conformation database.",
                "This rule is effective in moving down the search space toward lower energy regions, like water from a stream running into an empty reservoir, while filling local depressions along the way.",
                "Therefore, these tactical procedures of the CONFLEX search are referred to as the Reservoir Filling Algorithm.",
                "In order to remain in the low-energy region and perform an exhaustive search, the search limit (SEL), which determines the maximum energy of the initial structures, is pre-defined.",
                "Gradually increasing SEL allows only the lowenergy conformers to be searched and avoids straying into unnecessarily high-energy regions. 2.2 Parallelization of CONFLEX for Cluster For application to over 100 atoms, CONFLEX was improved using high-performance parallel computing techniques.",
                "In the CONFLEX search algorithm, the geometry optimization procedures always take 95% of the elapsed time of the search execution.",
                "Therefore, we parallelized this optimization using the Master/Worker parallelization technique.",
                "We modified the search procedures as follows.",
                "After trial structures are generated (step 2), they are temporarily stored in a task pool on the master node.",
                "Then, each worker node is dynamically supplied with one trial structure from the master node.",
                "After an optimization on a worker node is finished, the worker is immediately supplied with another trial structure.",
                "When all of the trial structures related to a given initial structure are optimized, only the master procedure is used in comparison.",
                "By parallelizing CONFLEX, the speedup of searching molecular conformers obtained is as reported in[11]. 3.",
                "CONFLEX-G Originally, CONFLEX was intended for use in exploring the conformers of the large bio-molecules, such HIV protease.",
                "In such molecules, the number of trial structures increases and the time required for optimization of RPC Selection of Initial Structure Conformations Database Local Perturbation Comparison and Registration Client program Task Pool of Geometry Optimization RPC RPC Grid environment Cluster B Cluster A Cluster C Trial structureTrial structure Trial structure Trial structure Figure 3: Procedure of CONFLEX-G. agent rexrex rex Client jones.tsukuba.ac.jp hpc-serv.hpcc.jp hpc1 hpc2 hpc3 Agent invocation communicationNetwork Figure 4: Overview of the OmniRPC system for the remote cluster having a private IP address. the trial structure becomes immense.",
                "We implemented the parallelized version of CONFLEX, which cannot treat such molecules using only a local PC cluster.",
                "In order to exploit the vast computing resources of a grid environment, we designed and implemented CONFLEX-G, which is a grid-enabled version of CONFLEX, with the OmniRPC system.",
                "CONFLEX-G allocates jobs to optimize a trial structure to the computational nodes of each cluster in the grid environment.",
                "Figure 3 shows the process of CONFLEX-G.",
                "The worker programs are initialized by the initialize method, which is provided by the OmniRPC AIM facility at worker invocation.",
                "At each RPC call, the initialized state is reused on the remote host.",
                "In other words, the client program can eliminate the initialization for each RPC call, and can therefore optimize trial structures efficiently. 3.1 The OmniRPC system OmniRPC is a <br>grid rpc system</br> which allows seamless parallel programming from a PC cluster to a grid environment.",
                "OmniRPC inherits its API and basic architecture from Ninf.",
                "A client and the remote computational hosts which execute the remote procedures may be connected via a network.",
                "The remote libraries are implemented as an executable program which contains a network stub routine as its main routine.",
                "We call this executable program a remote executable program (rex).",
                "When the OmniRPC client program starts, the initialization function of OmniRPC system invokes the OmniRPC agent program omrpc-agent in the remote hosts listed in the host file.",
                "To invoke the agent, the user can use the remote shell command rsh in a local-area network, the GRAM (Globus Resource Allocation Manager) API of the Globus 156 toolkit[12] in a grid environment, or the secure remote shell command ssh.",
                "The user can switch the configurations only by changing the host file.",
                "OmniRpcCall is a simple client programming interface for calling remote functions.",
                "When OmniRpcCall makes a remote procedure call, the call is allocated to an appropriate remote host.",
                "When the client issues the RPC request, it requests that the agent in the selected host submit the job of the remote executable with the local job scheduler specified in the host file.",
                "If the job scheduler is not specified, the agent executes the remote executable in the same node by the fork system call.",
                "The client sends the data of the input arguments to the invoked remote executable, and receives the results upon return of the remote function.",
                "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls in order to eliminate the cost of invoking the same remote executable again.",
                "When the agent and the remote executables are invoked, the remote programs obtain the client address and port from the argument list and connect back to the client by direct TCP/IP or Globus-IO for data transmission.",
                "Because the OmniRPC system does not use any fixed service ports, the client program allocates unused ports dynamically to wait for connection from the remote executables.",
                "This avoids possible security problems, and allows the user to install the OmniRPC system without requiring a privileged account.",
                "Herein, a typical grid resource is regarded as a cluster of geographically distributed PC clusters.",
                "For PC clusters on a private network, an OmniRPC agent process on the server host functions as a proxy to relay communications between the client and the remote executables by multiplexing the communications using a single connection.",
                "This feature, called multiplex IO (MXIO), allows a single client to use up to 1,000 remote computing hosts.",
                "When the PC cluster is inside a firewall, the port forwarding of SSH enables the node to communicate to the outside with MXIO.",
                "Figure 4 shows the overview of the OmniRPC system for a remote cluster with a private IP address.",
                "For parallel programming, the programmer can use asynchronous remote procedure calls, allowing the client to issue several requests while continuing with other computations.",
                "The requests are dispatched to different remote hosts to be executed in parallel, and the client waits or polls the completed request.",
                "In such a programming model with asynchronous remote procedure calls, the programmer should handle outstanding requests explicitly.",
                "Because OmniRPC is a thread-safe system, a number of remote procedure calls may be outstanding at any time for multi-threaded programs written in OpenMP. 3.2 OmniRPC persistence model: automatic initializable module OmniRPC efficiently supports typical Master/Worker parallel applications such as parametric execution programs.",
                "For parametric search applications, which often require large amount of identical data for each call, OmniRPC supports a limited persistence model, which is implemented by the automatic initializable module.",
                "The user can define an initialization procedure in the remote executable in order to send and store data automatically in advance of actual remote procedure calls.",
                "Since the remote executable may accept requests for subsequent calls, the data set which has been set by the initialization procedure can be re-used.",
                "As a result, the worker program can execute efficiently and reduce the amount of data transmitted for initialization.",
                "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls.",
                "However, OmniRPC does not guarantee persistence of the remote executable, so that the data set by the previous call cannot be used by subsequent calls.",
                "This is because a remote call by OmniRpcCall may be scheduled to any remote host dynamically, and remote executables may be terminated accidentally due to dynamic re-scheduling or host faults.",
                "However, persistence of the remote executable can be exploited in certain applications.",
                "An example is a parametric search application: in such an application, it would be efficient if a large set of data could be pre-loaded by the first call, and subsequent calls could be performed on the same data, but with different parameters.",
                "This is the case for CONFLEX.",
                "OmniRPC provides a restricted persistence model through the automatic initializable module (AIM) in order to support this type of application.",
                "If the initialization procedure is defined in the module, the module is automatically initialized at invocation by calling the initialization procedure.",
                "When the remote executable is re-scheduled in different hosts, the initialization is called to initialize the newly allocated remote module.",
                "This can eliminate unnecessary communications when RPC calls use the same data.",
                "To reveal more about the difference in progress between the cases with OmniRPC AIM and without OmniRPC AIM, we present two figures.",
                "Figure 5 illustrates the time chart of the progress of a typical OmniRPC application using the OmniRPC AIM facility, and Figure 6 illustrates the time chart of the same application without the OmniRPC AIM facility.",
                "In both figures, the lines between diamonds represent the processes of initialization, and the lines between points represent the calculation.",
                "The bold line indicates the time when the client program sends the data to a worker program.",
                "It is necessary for the application without the OmniRPC AIM facility to initialize at each RPC.",
                "The application using the OmniRPC AIM facility can re-use the initialized data once the data set is initialized.",
                "This can reduce the initialization at each RPC.",
                "The workers of the application with the AIM can calculate efficiently compared to the application without the OmniRPC AIM facility. 3.3 Implementation of CONFLEX-G using OmniRPC Figure 3 shows an overview of the process used in CONFLEXG.",
                "Using RPCs, CONFLEX-G allocates the processes of trial structure optimization, which are performed by the computation nodes of a PC cluster in the MPI version of CONFLEX, to the computational nodes of each cluster in a grid environment.",
                "There are two computations which are performed by the worker programs in CONFLEX-G. One is the initialization of a worker program, and another is the calculation of trial structure optimization.",
                "First, the OmniRPC facility of the AIM is adapted for initialization of a worker program.",
                "This facility automatically calls the initialization function, which is contained in the worker program, once the client program invokes the worker program in a remote node.",
                "It is necessary for the common RPC system including GridRPC to initialize a program for every RPC call, since data persistence of worker programs 157 time Client Program Worker Program 1 Worker Program 2 initialization initialization calculation calculation calculation calculation calculation Parallelized using asynchronous RPCs Figure 5: Time chart of applications using the OmniRPC facility of the automatic initializable module. time Client Program Worker Program 1 Worker Program 2 initialization initializationcalculation calculation calculation calculation initialization initialization initialization Parallelized using asynchronous RPCs calculation Figure 6: Time chart of applications without the OmniRPC facility of the automatic initializable module.",
                "Table 1: Machine configurations in the grid testbed.",
                "Site Cluster Name Machine Network Authentication # of Nodes # of CPUs Univ. of Tsukuba Dennis Dual Xeon 2.4GHz 1Gb Ethernet Globus, SSH 14 28 Alice Dual Athlon 1800+ 100Mb Ethernet Globus, SSH 18 36 TUT Toyo Dual Athlon 2600+ 100Mb Ethernet SSH 8 16 AIST Ume Dual Pentium3 1.4GHz 1Gb Ethernet Globus, SSH 32 64 is not supported.",
                "In OmniRPC, however, when the Initialize remote function is defined in the worker program and a new worker program, corresponding to the other RPC, is assigned to execute, an Initialize function is called automatically.",
                "Therefore, after the Initialize function call to set up common initialization data, a worker program can re-use this data and increase the efficiency of its processes.",
                "Thus, the higher the set-up cost, the greater the potential benefit.",
                "We implemented the worker program of CONFLEX-G to receive data, such as evaluation parameters of energy, from a client program and to be initialized by the Initialize function.",
                "We arranged the client program of CONFLEX-G to transfer the parameter file at the time of worker initialization.",
                "This enables execution to be performed by modify only the client setting if the user wants to run CONFLEX-G with a different data set.",
                "Second, in order to calculate trial structure optimization in a worker program, the worker program must receive the data, such as the atom arrangement of the trial structure and the internal energy state.",
                "The result is returned to the client program after the worker has Optimized the trial structure.",
                "Since the calculation portion of the structure optimization in this worker program can be calculated independently using different parameters, we parallelized this portion using asynchronous RPCs on the client side.",
                "To call the structure optimization function in a worker program from the client program, we use the OmniRpcCallAsync API, which is intended for asynchronous RPC.",
                "In addition, OmniRpcCallWaitAll API which waits until all asynchronous RPCs are used in order to perform synchronization with all of the asynchronous RPCs completed so as to optimize the trial structure.",
                "The client program which assigns trial structure optimization to the calculation node of a PC cluster using RPC is outlined as follows.",
                "OmniRpcInit() OmniRpcModuleInit(conflex_search,...); ... while( <new conformers> ) { foreach( <trial structures> ) OmniRpcCallAsync(conflex_search_worker, ...); OmniRpcWaitAll(); ...",
                "Note that OmniRpcModuleInit API returns only the arguments needed for initialization and will not actually execute the Initialization function.",
                "As described above, the actual Initialization is performed at the first remote call.",
                "Since the OmniRPC system has an easy round-robin scheduler, we do not have to explicitly write the code for load balance.",
                "Therefore, RPCs are allocated automatically to idle workers. 158 Table 2: Network performance between the master node of the Dennis cluster and the master node of each PC cluster.",
                "Round-Trip Throughput Cluster Time (ms) (Mbps) Dennis 0.23 879.31 Alice 0.18 94.12 Toyo 11.27 1.53 Ume 1.07 373.33 4.",
                "PRELIMINARY RESULTS 4.1 Grid Testbed The grid testbed was constructed by computing resources at the University of Tsukuba, the Toyohashi University of Technology (TUT) and the National Institute of Advanced Industrial Science and Technology (AIST).",
                "Table 1 shows the computing resources used for the grid of the present study.",
                "The University of Tsukuba and AIST are connected by a 1-Gbps Tsukuba WAN, and the other PC clusters are connected by SINET, which is wide-area network dedicated to academic research in Japan.",
                "Table 2 shows the performance of the measured network between the master node of the Dennis cluster and the master node of each PC cluster in the grid testbed.",
                "The communication throughput was measured using netperf, and the round-trip time was measured by ping. 4.2 Performance of CONFLEX-G In all of the CONFLEX-G experiments, the client program was executed on the master node of the Dennis cluster at the University of Tsukuba.",
                "The built-in Round-Robin scheduler of OmniRPC was used as a job scheduler.",
                "SSH was used for an authentication system, the OminRPCs MXIO, which relays the I/O communication between client program and worker programs by port forwarding of SSH was, not used.",
                "Note that one worker program is assigned and performed on one CPU of the calculation node in a PC cluster.",
                "That is, the number of workers is equal to the number of CPUs.",
                "These programs were compiled by the Intel Fortran Compiler 7.0 and gcc 2.95.",
                "MPICH, Version 1.2.5, was used to compare the performance between CONFLEX MPI and CONFLEX-G.",
                "In order to demonstrate the usability of the OmniRPC facility of the AIM, we implemented another version of CONFLEX-G which did not utilize the OmniRPC facility.",
                "The worker program in this version of CONFLEXG must be initialized at each RPC because the worker does not hold the previous data set.",
                "In order to examine the performance of CONFLEX-G, we selected two peptides and two small protein as test molecules: • N-acetyl tetra-alanine methylester (AlaX04) • N-acetyl hexdeca-alanine methylester (AlaX16) • TRP-cage miniprotein construct TC5B (1L2Y) • PTH receptor N-terminus fragment (1BL1) Table 3 lists the characteristics of these sample molecules.",
                "The column trial structure / loops in this table shows the Figure 7: Performances of CONFLEX-G, CONFLEX MPI and Original CONFLEX in the Dennis cluster.",
                "Figure 8: Speedup ratio, which is based on the elapsed time of CONFLEX-G using one worker in the Dennis cluster.",
                "Figure 9: Performance of CONFLEX-G with and without the OmniRPC facility of automatic initializable module for AlaX16. 159 Table 3: Characteristics of molecules and data transmission for optimizing trial molecular structures in each molecular code.",
                "Molecular # of # of total trial trial structure Data transfer to Data transfer code atoms structures / loop initialize a worker / trial structure AlaX04 181 360 45 2033KB 17.00KB AlaX16 191 480 160 2063KB 18.14KB 1L2Y 315 331 331 2099KB 29.58KB 1BL1 519 519 519 2150KB 48.67KB Table 4: Elapsed search time for the molecular conformation of AlaX04.",
                "Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (sequential) 1 320.0 1786.21 4.96 1786.21 1.00 Toyo (16) 16 20.0 1497.08 4.16 196.32 9.10 Dennis (28) 28 11.4 1905.51 5.29 97.00 18.41 Alice (36) 36 8.9 2055.25 5.71 87.09 20.51 Ume (56) 56 5.7 2196.77 6.10 120.69 14.80 Dennis (28) + Toyo (16) 44 7.3 1630.09 4.53 162.35 11.00 Alice (36) + Toyo (16) 52 6.2 1774.53 4.93 178.24 10.02 Dennis (28) + Alice (36) 64 5.0 1999.02 5.55 81.52 21.91 Dennis (28) + Ume (56) 84 3.8 2085.84 5.79 92.22 19.37 Alice (36) + Ume (56) 92 3.5 2120.87 5.89 101.25 17.64 Table 5: Elapsed search time for the molecular conformation of AlaX16 Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (1) 1 480.0 74027.80 154.22 74027.80 1.00 Toyo (16) 16 30.0 70414.21 146.70 4699.15 15.75 Dennis (28) 28 17.1 74027.80 154.22 3375.60 21.93 Alice (36) 36 13.3 90047.27 187.60 3260.41 22.71 Ume (56) 56 8.6 123399.38 257.08 2913.63 25.41 Dennis (28) + Toyo (16) 44 10.9 76747.74 159.89 2762.10 26.80 Alice (36) + Toyo (16) 52 9.2 82700.44 172.29 2246.73 32.95 Dennis (28) + Alice (36) 64 7.5 87571.30 182.44 2051.50 36.08 Toyo (16) + Ume (56) 72 6.7 109671.32 228.48 2617.85 28.28 Dennis (28) + Ume (56) 84 5.7 102817.90 214.20 2478.93 29.86 Dennis(28)+Ume(56)+Toyo(16) 100 4.8 98238.07 204.66 2478.93 29.86 Table 6: Elapsed time of the search for the trial structure of 1L2Y.",
                "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 331.0 867 286,967 79.71 1.00 Toyo MPI (16) 16 20.7 867 18,696 5.19 15.34 Dennis (28) 28 11.8 803 14,101 3.91 20.35 Dennis (28) + Ume(56) 84 3.9 1,064 8,316 2.31 34.50 Table 7: Elapsed time of the search for the trial structure of 1BL1.",
                "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 519.0 3,646 1892,210 525.61 1.00 Toyo MPI (16) 16 32.4 3,646 120,028 33.34 15.76 Dennis (28) 28 18.5 3,154 61,803 17.16 30.61 Dennis (28) + Ume (56) 84 6.1 4,497 33,502 9.30 56.48 160 number of trial structures generated in each iteration, indicating the degree of parallelism.",
                "Figure 3 also summarizes the amount of data transmission required for initialization of a worker program and for optimization of each trial structure.",
                "Note that the amount of data transmission, which is required in order to initialize a worker program and optimize a trial structure in the MPI version of CONFLEX, is equal to that of CONFLEX-G. We used an improvement version of MM2 force field to assign a potential energy function to various geometric properties of a group of atoms. 4.2.1 Performance in a Local Cluster We first compared the performance of CONFLEX-G, the MPI version of CONFLEX, and the original sequential version of CONFLEX-G using a local cluster.",
                "We investigated performance by varying the number of workers using the Dennis cluster.",
                "We chose AlaX04 as a test molecule for this experiment.",
                "Figure 7 compares the results for the CONFLEX MPI and CONFLEX-G in a local PC cluster.",
                "The result of this experiment shows that CONFLEX-G can reduce the execution time as the number of workers increases, as in the MPI version of CONFLEX.",
                "We found that CONFLEX-G achieved efficiencies comparable to the MPI version.",
                "With 28 workers, CONFLEX-G achieved an 18.00 times speedup compared to the CONFLEX sequential version.",
                "The performance of CONFLEX-G without the OmniRPC AIM facility is worse than that of CONFLEXG using the facility, based on the increase in the number of workers.",
                "This indicates that the OmniRPC AIM enables the worker to calculate efficiently without other calculations, such initialization or invocation of worker programs.",
                "As the number of workers is increased, the performance of CONFLEX-G is a slightly lower than that of the MPI version.",
                "This performance degradation is caused by differences in the worker initialization processes of CONFLEX-G and CONFLEX MPI.",
                "In the case of CONFLEX MPI, all workers are initialized in advance of the optimization phase.",
                "In the case of OminRPC, the worker is invoked on-demand when the RPC call is actually issued.",
                "Therefore, the initialization incurs this overhead.",
                "Since the objective of CONFLEX-G is to explore the conformations of large bio-molecules, the number of trial structures and the time to optimize the trial structure might be large.",
                "In such cases, the overhead to invoke and initialize the worker program can be small compared to the entire elapsed time. 4.2.2 Performance for Peptides in The Grid Testbed First, the sample molecules (AlaX04 and AlaX16) were used to examine the CONFLEX-G performance in a grid environment.",
                "Figure 8 shows the speedup achieved by using multiple clusters compared to using one worker in the Dennis cluster.",
                "Detailed results are shown in Table 4 and Table 5.",
                "In both cases, the best performance was obtained using 64 workers of the combination of the Dennis and Alice clusters.",
                "CONFLEX-G achieved a maximum speedup of 36.08 times for AlaX04 and a maximum speedup of 21.91 times for AlaX16.",
                "In the case of AlaX04, the performance is improved only when the network performance between clusters is high.",
                "However, even if two or more clusters are used in a wide area network environment, the performance improvement was slight because the optimization time of one trial structure generated from AlaX04, a small molecule, is short.",
                "In addition, the overhead required for invocation of a worker program and network data transmission consume a large portion of the remaining processing time.",
                "In particular, the data transmission required for the initialization of a worker program is 2 MB.",
                "In the case of Toyo cluster, where the network performance between the client program and the worker programs is poor, the time of data transmission to the worker program required approximately 6.7 seconds.",
                "Since this transmission time was longer than the processing time of one structure optimization in CONFLEX-G, most of the time was spent for this data transmission.",
                "Therefore, even if CONFLEX-G uses a large number of calculation nodes in a wide area network environment, the benefit of using a grid resource is not obtained.",
                "In the case of AlaX16, CONFLEX-G achieved a speedup by using two or more PC clusters in our grid testbed.",
                "This was because the calculation time on the worker program was long and the overhead, such as network latency and the invoking of worker programs, became relatively small and could be hidden.",
                "The best performance was obtained using 64 workers in the Dennis and Alice clusters.",
                "In the case of AaX16, the achieved performance was a speedup of 36.08 times.",
                "Figure 9 reveals the effect of using the facility of the OmniRPC AIM on CONFLEX-G performance.",
                "In most cases, CONFLEX-G with the OmniRPC AIM facility archived better performance than CONFLEX-G without the facility.",
                "In particular, the OmniRPC AIM facility was advantageous when using two clusters connected by a low-performance network.",
                "The results indicate that the OmniRPC AIM facility can improve performance in the grid environment. 4.2.3 PerformanceforSmallProteininTheGridTestbed Finally, we explored the molecular conformation using CONFLEX-G for large molecules.",
                "In a grid environment, this experiment was conducted using the Dennis and Ume clusters.",
                "In this experiment, we used two proteins, 1L2Y and 1BL1.",
                "Table 6 and Table 7 show the performance of CONFLEX-G in the grid environment and that of CONFLEX MPI in the Toyo cluster, respectively.",
                "The speedups in these tables were computed respectively based on the performance of one worker and 16 workers of the Toyo cluster using CONFLEX MPI.",
                "CONFLEX-G with 84 workers in Dennis and Ume clusters obtained maximum speedups of 56.5 times for 1L2Y and 34.5 times for 1L2Y.",
                "Since the calculation time for structure optimization required a great deal of time, the ratio of overhead, including tasks such as the invocation of a worker program and data transmission for initialization, became very small, so that the performance of CONFLEX-G was improved.",
                "We found that the load imbalance in the processing time of optimization for each trial structure caused performance degradation.",
                "When we obtained the best performance for 1L2Y using the Dennis and Ume clusters, the time for each structure optimization varied from 190 to 27,887 seconds, and the ratio between the longest and shortest times was 13.4.",
                "For 1BL1, the ratio of minimum time over maximum time was 190.",
                "In addition, in order that the worker program wait until the completion of optimization of all trial structures, all worker programs were found to wait in an idle state for approximately 6 hours.",
                "This has caused the performance degradation of CONFLEX-G. 161 4.3 Discussion In this subsection, we discuss the improvement of the performance reflected in our experiments.",
                "Exploiting parallelism - In order to exploit more computational resources, it is necessary to increase the degree of parallelism.",
                "In this experiment, the degree of parallelism was not so large in the case of the sample molecules.",
                "When using a set of over 500 computing nodes for 1BL1, the number of one trial structures assigned to each worker will be only one or two.",
                "If over 100 trial structures are assigned to each worker program, calculation can be performed more efficiently due to the reduction of the overhead for worker invocation and initialization via the facility of the OmniRPC AIM.",
                "One idea for increasing parallelism is to overlap the execution of two or more sets of trial structures.",
                "In the current algorithm, a set of trial structures is generated from one initial structure and computed until optimizations for all structures in this set are calculated.",
                "Furthermore, this will help to improve load imbalance.",
                "By having other sets of trial structures overlap, even if some optimizations require a long time, the optimization for the structures in other sets can be executed to compensate for the idle workers for other optimizations.",
                "It is however unclear how such modification of the algorithm might affect the quality of the final results in terms of a conformation search.",
                "Improvement in load imbalance when optimizing each trial structure - Table 8 lists the statistics for optimization times of trial structures generated for each sample molecule measured using 28 workers in the Dennis cluster.",
                "When two or more sets of PC clusters are used, the speedup in performance is hampered by the load imbalance of the optimization of the trial structures.",
                "The longest time for optimizing a trial structure was nearly 24 times longer than the shortest time.",
                "Furthermore, other workers must wait until the longest job has Finished, so that the entire execution time cannot be reduced.",
                "When CONFLEX-G searched the conformers of 1BL1 by the Dennis cluster, the longest calculation time of the trial structure optimization made up approximately 80% of the elapsed time.",
                "Therefore, there are two possible solutions for the load Imbalance. • It is necessary to refine the algorithm used to generate the trial structure, which suppresses the time variation for optimizing a trial structure in CONFLEX.",
                "This enables CONFLEX-G to achieve high-throughput by using many computer resources. • One of the solutions is to overlap the executions for two or more sets of trial structures.",
                "In the current algorithms, a set of trial structures is generated from one initial structure and calculation continues until all structures in this set are calculated.",
                "By having other sets of trial structures, even if a structure search takes a long time, a job can be executed in order to compensate the load imbalance by other jobs.",
                "However, how such modification of the algorithms might affect the efficiency is not clear. • In this experiment, we used a simple build-in roundrobbin scheduler of OmniRPC, which is necessary in order to apply the scheduler that allocates structures with long optimization times to a high-performance Table 8: Statistics of elapsed time of trial structure optimization using 28 workers in the Dennis cluster.",
                "Molecular Min Max Average Variance code (s) (s) (s) AlaX04 2.0 11.3 5.3 3 AlaX16 47.6 920.0 154.2 5404 1L2Y 114.2 13331.4 803.2 636782 1BL1 121.0 29641.8 3153.5 2734811 node and structures with short optimization times to low-performance nodes.",
                "In general, however, it might be difficult to predict the time required for trial structure optimization.",
                "Parallelization of the worker program for speedup to optimize a trial structure - In the current implementation, we do not parallelize the worker program.",
                "In order to speed up trial structures, hybrid programming using OmniRPC and OpenMP in an SMP (Symmetric Multiple Processor) machine may be one of the alternative methods by which to improve overall performance. 5.",
                "RELATED WORK Recently, an algorithm has been developed that solves the problems of parallelization and communication in poorly connected processors to be used for simulation.",
                "The Folding@home project[13] simulates timescales thousands to millions of times longer than previously achieved.",
                "This has allowed us to simulate folding for the first time and to directly examine folding related diseases.",
                "SETI@home[14] is a program to search for alien life by analyzing radio telescope signals using Fourier transform radio telescope data from telescopes from different sites.",
                "SETI@home tackles immensely parallel problems, in which calculation can easily be divided among several computers.",
                "Radio telescope data chunks can easily be assigned to different computers.",
                "Most of these efforts explicitly develop a docking application as a parallel application using a special purpose parallel programming language and middleware, such as MPI, which requires development skills and effort.",
                "However, the skills and effort required to develop a grid application may not be required for OmniRPC.",
                "Nimrod/G[15] is a tool for distributed parametric modeling and implements a parallel task farm for simulations that require several varying input parameters.",
                "Nimrod incorporates a distributed scheduling component that can manage the scheduling of individual experiments to idle computers in a local area network.",
                "Nimrod has been applied to applications including bio-informatics, operations research, and molecular modeling for drug design.",
                "NetSolve[8] is an RPC facility similar to OmniRPC and Ninf, providing a similar programming interface and automatic load balancing mechanism.",
                "Ninf-G[7] is a grid-enabled implementation of Ninf and provides a GridRPC[10] system that uses LDAP to manage the database of remote executables, but does not support clusters involving private IP addresses or addresses inside a firewall.",
                "Matsuoka et al. [16] has also discussed several design issues related to grid RPC systems. 162 6.",
                "CONCLUSIONS AND FUTURE WORK We have designed and implemented CONFLEX-G using OmniRPC.",
                "We reported its performance in a grid testbed of several geographically distributed PC clusters.",
                "In order to explore the conformation of large bio-molecules, CONFLEXG was used to generate trial structures of the molecules, and allocate jobs to optimize them by molecular mechanics in the grid.",
                "OmniRPC provides a restricted persistence model so that the module is automatically initialized at invocation by calling the initialization procedure.",
                "This can eliminate unnecessary communication and the initialization at each call in CONFLEX-G. CONFLEX-G can achieves performance comparable to CONFLEX MPI and exploits more computing resources by allowing the use of multiple PC clusters in the grid.",
                "The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times for the 1BL1 molecule, where the molecule consists of a large number of atoms and each trial structure optimization requires a great deal of time.",
                "The load imbalance of the trial structure optimizations may cause performance degradation.",
                "We need to refine the algorithm used to generate the trial structure in order to improve the load balance optimization for trial structures in CONFLEX.",
                "Future studies will include development of deployment tools and an examination of fault tolerance.",
                "In the current OmniRPC, the registration of an execution program to remote hosts and deployments of worker programs are manually set.",
                "Deployment tools will be required as the number of remote hosts is increased.",
                "In grid environments in which the environment changes dynamically, it is also necessary to support fault tolerance.",
                "This feature is especially important in large-scale applications which require lengthy calculation in a grid environment.",
                "We plan to refine the conformational optimization algorithm in CONFLEX to explore the conformation space search of larger bio-molecules such HIV protease using up to 1000 workers in a grid environment. 7.",
                "ACKNOWLEDGMENTS This research was supported in part by a Grant-in-Aid from the Ministry of Education, Culture, Sports, Science and Technology in Japan, No. 14019011, 2002, and as part of the Program of Research and Development for Applying Advanced Computational Science and Technology by the Japan Science and Technology Corporation (Research on the grid computing platform for drug design).",
                "We would like to thank grid technology research center, AIST, Japan for providing computing resources for our experiment. 8.",
                "REFERENCES [1] H. Goto and E. Osawa.",
                "An efficient algorithm for searching low-energy conformers of cyclic and acyclic molecules.",
                "J. Chem.",
                "Soc., Perkin Trans, 2:187-198, 1993. [2] M. Sato, T. Boku, and D. Takahashi.",
                "OmniRPC: a <br>grid rpc system</br> for Parallel Programming in Cluster and Grid Environment.",
                "In Proc. of CCGrid2003, pages 219-229, 2003. [3] M. Sato, M. Hirano, Y. Tanaka, and S. Sekiguchi.",
                "OmniRPC: a Grid RPC facility for Cluster and Global Computing in OpenMP.",
                "In Proc. of Workshop on OpenMP Applications and Tools 2001(LNCS 2104 ), pages 130-135, 2001. [4] OmniRPC Project. http://www.omni.hpcc.jp/omnirpc/. [5] M. Sato, H. Nakada, S. Sekiguchi, S. Matsuoka, U. Nagashima, and H. Takagi.",
                "Ninf: A Network Based Information Library for Global World-Wide Computing Infrastructure.",
                "In HPCN Europe, pages 491-502, 1997. [6] Ninf Project. http://ninf.apgrid.org/. [7] Y. Tanaka, H. Nakada, S. Sekiguchi, T. Suzumura, and S. Matsuoka.",
                "Ninf-G: A Reference Implementation of RPC-based Programming Middleware for Grid Computing .",
                "Journal of Grid Computing, 1(1):41-51, 2003. [8] D. Arnold, S. Agrawal, S. Blackford, J. Dongarra, M. Miller, K. Seymour, K. Sagi, Z. Shi, and S. Vadhiyar.",
                "Users Guide to NetSolve V1.4.1.",
                "Innovative Computing Dept.",
                "Technical Report ICL-UT-02-05, University of Tennessee, Knoxville, TN, June 2002. [9] Object management group. http://www.omg.org/. [10] K. Seymour, H. Nakada, S. Matsuoka, J. Dongarra, C. Lee, and H. Casanova.",
                "GridRPC: A Remote Procedure Call API for Grid Computing. [11] H.Goto, T. Takahashi, Y. Takata, K. Ohta, and U Nagashima.",
                "Conflex: Conformational behaviors of polypeptides as predicted by a conformational space search.",
                "In Nanotech2003, volume 1, pages 32-35, 2003. [12] I.",
                "Foster and C. Kesselman.",
                "Globus: A metacomputing infrastructure toolkit.",
                "The International Journal of Supercomputer Applications and High Performanc e Computing, 11(2):115-128, Summer 1997. [13] Stefan M. Larson, Christopher D. Snow, Michael Shirts, and Vijay S. Pande.",
                "Folding@home and genome@home: Using distributed computing to tackle prev iously intractable problems in computational biology.",
                "Computational Genomics, 2002. [14] seti@home project. http://setiathome.ssl.berkeley.edu/. [15] R. Buyya, K. Branson, J. Giddy, and D. Abramson.",
                "The virtual laboratory: a toolset to enable distributed molecular modelling for drug design on the world-wide grid.",
                "Concurrency and Computation: Practice and Experience, 15(1):1-25, January 2003. [16] S. Matsuoka, H. Nakada, M. Sato, and S. Sekiguchi.",
                "Design issues of Network Enabled Server Systems for the Grid.",
                "In Proc. of GRID 2000 (LNCS 1971), pages 4-17, 2000. 163"
            ],
            "original_annotated_samples": [
                "We have implemented CONFLEX-G using a <br>grid rpc system</br> called OmniRPC.",
                "In this paper, we propose the OmniRPC persistence model to a <br>grid rpc system</br> and demonstrate its effectiveness.",
                "In other words, the client program can eliminate the initialization for each RPC call, and can therefore optimize trial structures efficiently. 3.1 The OmniRPC system OmniRPC is a <br>grid rpc system</br> which allows seamless parallel programming from a PC cluster to a grid environment.",
                "OmniRPC: a <br>grid rpc system</br> for Parallel Programming in Cluster and Grid Environment."
            ],
            "translated_annotated_samples": [
                "Hemos implementado CONFLEX-G utilizando un <br>sistema de RPC en malla</br> llamado OmniRPC.",
                "En este artículo, proponemos el modelo de persistencia OmniRPC para un <br>sistema de RPC de Grid</br> y demostramos su efectividad.",
                "En otras palabras, el programa cliente puede eliminar la inicialización para cada llamada RPC, y por lo tanto optimizar eficientemente las estructuras de prueba. 3.1 El sistema OmniRPC OmniRPC es un <br>sistema de RPC en malla</br> que permite una programación paralela sin problemas desde un clúster de PC hasta un entorno de malla.",
                "OmniRPC: un <br>sistema de RPC en malla</br> para programación paralela en entornos de clúster y malla."
            ],
            "translated_text": "Implementación y Evaluación del Rendimiento de CONFLEX-G: Programa de Búsqueda de Espacio Conformacional Molecular Habilitado para Grid con OmniRPC. Hemos implementado CONFLEX-G utilizando un <br>sistema de RPC en malla</br> llamado OmniRPC. En este artículo, informamos sobre el rendimiento de CONFLEX-G en un banco de pruebas en red de varios clústeres de PC distribuidos geográficamente. Para explorar muchas conformaciones de grandes biomoléculas, CONFLEX-G genera estructuras de prueba de las moléculas y asigna trabajos para optimizar una estructura de prueba con un método confiable de mecánica molecular en la cuadrícula. OmniRPC proporciona un modelo de persistencia restringido para respaldar las aplicaciones de búsqueda paramétrica. En este modelo, cuando el procedimiento de inicialización está definido en el módulo RPC, el módulo se inicializa automáticamente en el momento de la invocación llamando al procedimiento de inicialización. Esto puede eliminar la comunicación y la inicialización innecesarias en cada llamada en CONFLEX-G. CONFLEXG puede lograr un rendimiento comparable al de CONFLEX MPI y puede aprovechar más recursos informáticos al permitir el uso de un clúster de múltiples clústeres en la cuadrícula. El resultado experimental muestra que CONFLEX-G logró una aceleración de 56.5 veces en el caso de la molécula 1BL1, donde la molécula consta de un gran número de átomos y cada optimización de la estructura de prueba requiere un tiempo significativo. El desequilibrio de carga en el tiempo de optimización de la estructura de prueba también puede causar degradación del rendimiento. Categorías y Descriptores de Asignaturas C.2.4 [Organización de Sistemas Informáticos]: RED DE COMUNICACIÓN DE COMPUTADORAS-Sistemas Distribuidos; J.2.4 [Aplicaciones Informáticas]: CIENCIAS FÍSICAS E INGENIERÍA Términos Generales Diseño, Rendimiento 1. INTRODUCCIÓN La elucidación de las conformaciones estables y el proceso de plegamiento de las proteínas es uno de los objetivos más fundamentales y desafiantes en las ciencias de la vida. Si bien algunas de las estructuras secundarias más comunes (por ejemplo, ciertos tipos de hélice, la lámina beta y la hélice) son bien conocidas, se requiere un análisis preciso de los miles de conformaciones químicamente importantes y un análisis de orden de pico-segundo de sus interconversiones conformacionales a través de los estados de transición en la superficie de energía potencial para la investigación de orden de microsegundo del proceso de plegamiento hacia la formación de la estructura terciaria. Recientemente, el concepto de la red computacional ha comenzado a atraer un interés significativo en el campo de la computación de alto rendimiento en red. Los rápidos avances en la tecnología e infraestructura de redes de área amplia han hecho posible construir entornos de computación distribuida a gran escala y alto rendimiento, o redes computacionales, que proporcionan acceso confiable, consistente y generalizado a enormes recursos computacionales. CONFLEX es uno de los programas de búsqueda de espacio conformacional más eficientes y confiables. Hemos aplicado este programa 154 a la paralelización utilizando computación global. El rendimiento del CONFLEX paralelizado permite explorar la región de energía más baja del espacio conformacional de péptidos pequeños en un tiempo transcurrido disponible utilizando un clúster de PC local. Dado que la optimización de la estructura de prueba en CONFLEX se calcula a través de la mecánica molecular, la búsqueda del espacio conformacional se puede realizar rápidamente en comparación con la que utiliza cálculos de orbitales moleculares. Aunque se utilizó la versión paralelizada de CONFLEX para calcular de forma paralela la optimización de la estructura, que representa más del 90% del procesamiento en la búsqueda de conformaciones moleculares, no se pudo lograr una mejora suficiente en la aceleración solo con este método. Por lo tanto, para polímeros de alto peso molecular de organismos vivos, como la proteasa del VIH, el uso de un solo clúster de PC es insuficiente debido a la necesidad de optimizar una gran cantidad de estructuras de prueba. Esto requiere los vastos recursos informáticos de un entorno de computación en malla. En este artículo, describimos CONFLEX-G, un programa de búsqueda conformacional molecular habilitado para grid, utilizando OmniRPC y reportamos su rendimiento en un grid de varios clusters de PC distribuidos geográficamente. El prototipo CONFLEX-G asigna la optimización de las estructuras de cálculo de prueba, que es una tarea muy consumidora de tiempo, a nodos trabajadores en el entorno de la red para obtener un alto rendimiento. Además, comparamos el rendimiento de CONFLEX-G en un clúster de PC local con el de un banco de pruebas en red. OmniRPC[2, 3, 4] es una implementación segura para hilos de Ninf RPC[5, 6], que es una facilidad de RPC de cuadrícula para la computación en entornos de cuadrícula. Varios sistemas adoptan el concepto de la RPC como el modelo básico para la computación en entornos de rejilla, incluyendo Ninf-G[7], NetSolve[8] y CORBA[9]. El sistema RPCstyle proporciona una interfaz de programación fácil de usar e intuitiva, que permite a los usuarios del sistema de cuadrícula crear fácilmente aplicaciones habilitadas para la cuadrícula. Para apoyar la programación paralela, un cliente de RPC puede emitir solicitudes de llamada asincrónicas a un ordenador remoto diferente para aprovechar el paralelismo en toda la red a través de OmniRPC. En este artículo, proponemos el modelo de persistencia OmniRPC para un <br>sistema de RPC de Grid</br> y demostramos su efectividad. Para apoyar una aplicación típica para un entorno de cuadrícula, como una aplicación de búsqueda paramétrica, en la que la misma función se ejecuta con diferentes parámetros de entrada en el mismo conjunto de datos. En el sistema GridRPC actual[10], el conjunto de datos establecido por la llamada anterior no puede ser utilizado por llamadas posteriores. En el sistema OmniRPC, una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado y su estado inicializado para llamadas posteriores a las mismas funciones remotas con el fin de eliminar el costo de invocación de cada llamada. Este documento demuestra que CONFLEX-G es capaz de aprovechar los enormes recursos informáticos de un entorno de grid y buscar conformadores moleculares a gran escala. Demostramos CONFLEX-G en nuestra plataforma de pruebas en red utilizando la proteína real como molécula de muestra. La facilidad OmniRPC del módulo inicializable automático (AIM) permite al sistema calcular eficientemente numerosos conformeros. Además, al utilizar OmniRPC, el usuario puede paralelizar en cuadrícula la aplicación existente y pasar del clúster al entorno de cuadrícula sin modificar el código del programa y compilar el programa. Además, el usuario puede construir fácilmente un entorno de red privada. El resto de este documento está organizado de la siguiente manera. Se presenta una visión general de la Base de Datos de Conformaciones de Estructuras Iniciales, la Perturbación Local, la Optimización de la Geometría, la Comparación y el Registro. Figura 1: Algoritmo de búsqueda de espacio conformacional en el CONFLEX original. El sistema CONFLEX se describe en la Sección 2, y la implementación y diseño de CONFLEX-G se detallan en la Sección 3. Informamos los resultados experimentales obtenidos utilizando CONFLEX-G y discutimos su rendimiento en la Sección 4. En la Sección 6, presentamos conclusiones y discutimos temas para estudios futuros. 2. CONFLEX es un programa eficiente de búsqueda de espacio conformacional, que puede buscar predominantemente y exhaustivamente los conformeros en la región de energía más baja. Las aplicaciones de CONFLEX incluyen la elucidación de la reactividad y selectividad de fármacos y posibles materiales medicinales con respecto a su flexibilidad conformacional. 2.1 Algoritmo de Búsqueda de Espacio Conformacional La estrategia básica de CONFLEX es una búsqueda exhaustiva solo de las regiones de baja energía. El CONFLEX original realiza los siguientes cuatro pasos principales: 1. Selección de una estructura inicial entre los conformeros únicos previamente descubiertos y ordenados en una base de datos conformacional. (Una estructura de entrada se utiliza como la primera estructura inicial al comienzo de una ejecución de búsqueda solamente.) 2. Generación de estructuras de prueba mediante perturbaciones locales a la estructura inicial seleccionada. 3. Optimización de geometría para las nuevas estructuras de prueba generadas. 4. Comparación de las estructuras optimizadas con éxito (ensayo) con los otros conformeros almacenados en una base de datos de conformaciones, y preservación de los conformeros únicos recién descubiertos en la base de datos. La Figura 1 muestra el esquema de CONFLEX, el algoritmo original de búsqueda de espacio conformacional. Estos procedimientos incorporan dos estrategias únicas. La Figura 2 muestra las estrategias para generar perturbaciones locales en CONFLEX. La primera estrategia implica tanto el aleteo de las esquinas como el volteo de los bordes para los átomos del anillo y la rotación paso a paso para las cadenas laterales o cadenas del esqueleto. Estos métodos proporcionan una forma altamente eficiente de producir varias estructuras de prueba buenas. Estas perturbaciones pueden considerarse como una imitación de 155 Rotación Escalonada de Esquina de Solapa de Borde de Giro Figura 2: Estrategias utilizadas para generar las perturbaciones locales, un paso de cruce de barrera en el proceso elemental de la interconversión conformacional térmica. De hecho, las perturbaciones de una estructura inicial corresponden al rendimiento preciso alrededor del espacio de la estructura inicial debido a la localización y debilidad de la perturbación. La regla de selección de la estructura inicial, la regla LowestConformer-First, es la segunda estrategia para dirigir la búsqueda de conformaciones ampliada a las regiones de baja energía. La estructura inicial se selecciona como el conjunto de conformaciones de menor energía almacenadas en la base de datos de conformaciones. Esta regla es efectiva para desplazarse hacia abajo en el espacio de búsqueda hacia regiones de menor energía, como el agua de un arroyo que fluye hacia un embalse vacío, llenando depresiones locales en el camino. Por lo tanto, estos procedimientos tácticos de la búsqueda CONFLEX se conocen como el Algoritmo de Llenado de Reservorio. Para permanecer en la región de baja energía y realizar una búsqueda exhaustiva, el límite de búsqueda (SEL), que determina la energía máxima de las estructuras iniciales, está predefinido. El aumento gradual de SEL permite buscar solo los conformeros de baja energía y evita desviarse hacia regiones de energía innecesariamente alta. 2.2 Paralelización de CONFLEX para clúster Para su aplicación en más de 100 átomos, CONFLEX fue mejorado utilizando técnicas de computación paralela de alto rendimiento. En el algoritmo de búsqueda CONFLEX, los procedimientos de optimización de geometría siempre ocupan el 95% del tiempo transcurrido durante la ejecución de la búsqueda. Por lo tanto, paralelizamos esta optimización utilizando la técnica de paralelización Maestro/Trabajador. Modificamos los procedimientos de búsqueda de la siguiente manera. Después de que se generan las estructuras de prueba (paso 2), se almacenan temporalmente en un grupo de tareas en el nodo maestro. Entonces, cada nodo trabajador recibe dinámicamente una estructura de prueba del nodo maestro. Después de que se complete una optimización en un nodo de trabajador, este recibe inmediatamente otra estructura de prueba. Cuando todas las estructuras de prueba relacionadas con una estructura inicial dada están optimizadas, solo se utiliza el procedimiento principal para la comparación. Al paralelizar CONFLEX, la aceleración de la búsqueda de conformadores moleculares obtenida es la reportada en[11]. 3. CONFLEX-G Originalmente, CONFLEX estaba destinado a ser utilizado para explorar los conformeros de las grandes biomoléculas, como la proteasa del VIH. En tales moléculas, el número de estructuras de prueba aumenta y el tiempo requerido para la optimización de la Selección de RPC de Estructuras Iniciales Conformaciones de la Base de Datos de Perturbación Local Comparación y Registro del Cliente Programa Cliente Grupo de Tareas de Optimización Geométrica RPC Entorno de Rejilla RPC Cluster B Cluster A Cluster C Estructura de prueba Estructura de prueba Estructura de prueba Estructura de prueba Figura 3: Procedimiento de CONFLEX-G. agente rexrex rex Cliente jones.tsukuba.ac.jp hpc-serv.hpcc.jp hpc1 hpc2 hpc3 Invocación del agente Comunicación de la red Figura 4: Visión general del sistema OmniRPC para el clúster remoto con una dirección IP privada. la estructura de prueba se vuelve inmensa. Implementamos la versión paralelizada de CONFLEX, la cual no puede tratar tales moléculas utilizando solo un clúster de PC local. Para aprovechar los vastos recursos informáticos de un entorno de grid, diseñamos e implementamos CONFLEX-G, que es una versión habilitada para grid de CONFLEX, con el sistema OmniRPC. CONFLEX-G asigna trabajos para optimizar una estructura de prueba a los nodos computacionales de cada clúster en el entorno de la red. La Figura 3 muestra el proceso de CONFLEX-G. Los programas de los trabajadores se inicializan mediante el método de inicialización, que es proporcionado por la instalación de OmniRPC AIM en la invocación del trabajador. En cada llamada RPC, el estado inicializado se reutiliza en el host remoto. En otras palabras, el programa cliente puede eliminar la inicialización para cada llamada RPC, y por lo tanto optimizar eficientemente las estructuras de prueba. 3.1 El sistema OmniRPC OmniRPC es un <br>sistema de RPC en malla</br> que permite una programación paralela sin problemas desde un clúster de PC hasta un entorno de malla. OmniRPC hereda su API y arquitectura básica de Ninf. Un cliente y los hosts computacionales remotos que ejecutan los procedimientos remotos pueden estar conectados a través de una red. Las bibliotecas remotas se implementan como un programa ejecutable que contiene una rutina de soporte de red como su rutina principal. Llamamos a este programa ejecutable un programa ejecutable remoto (rex). Cuando el programa cliente OmniRPC se inicia, la función de inicialización del sistema OmniRPC invoca el programa agente OmniRPC omrpc-agent en los hosts remotos listados en el archivo de hosts. Para invocar al agente, el usuario puede utilizar el comando de shell remoto rsh en una red de área local, la API de GRAM (Gestor de Asignación de Recursos Globus) del kit de herramientas Globus 156 en un entorno de grid, o el comando de shell remoto seguro ssh. El usuario puede cambiar las configuraciones solo modificando el archivo de host. OmniRpcCall es una interfaz de programación de cliente simple para llamar a funciones remotas. Cuando OmniRpcCall realiza una llamada a un procedimiento remoto, la llamada se asigna a un host remoto apropiado. Cuando el cliente emite la solicitud de RPC, solicita que el agente en el host seleccionado envíe el trabajo del ejecutable remoto con el programador de trabajos local especificado en el archivo del host. Si no se especifica el programador de tareas, el agente ejecuta el ejecutable remoto en el mismo nodo mediante la llamada al sistema fork. El cliente envía los datos de los argumentos de entrada al ejecutable remoto invocado, y recibe los resultados al regreso de la función remota. Una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado para llamadas RPC posteriores con el fin de eliminar el costo de invocar nuevamente el mismo ejecutable remoto. Cuando el agente y los ejecutables remotos son invocados, los programas remotos obtienen la dirección y el puerto del cliente de la lista de argumentos y se conectan de vuelta al cliente mediante TCP/IP directo o Globus-IO para la transmisión de datos. Debido a que el sistema OmniRPC no utiliza puertos de servicio fijos, el programa cliente asigna puertos no utilizados dinámicamente para esperar la conexión de los ejecutables remotos. Esto evita posibles problemas de seguridad y permite al usuario instalar el sistema OmniRPC sin necesidad de contar con una cuenta privilegiada. Aquí, un recurso de red típico se considera como un grupo de clústeres de PC distribuidos geográficamente. Para los clústeres de PC en una red privada, un proceso agente OmniRPC en el host del servidor funciona como un proxy para relé de comunicaciones entre el cliente y los ejecutables remotos mediante la multiplexación de las comunicaciones utilizando una única conexión. Esta característica, llamada multiplex IO (MXIO), permite a un único cliente utilizar hasta 1,000 hosts de computación remota. Cuando el clúster de PC está dentro de un firewall, el reenvío de puertos de SSH permite que el nodo se comunique con el exterior a través de MXIO. La Figura 4 muestra la descripción general del sistema OmniRPC para un clúster remoto con una dirección IP privada. Para la programación en paralelo, el programador puede utilizar llamadas a procedimientos remotos asíncronos, lo que permite al cliente emitir varias solicitudes mientras continúa con otras computaciones. Las solicitudes se envían a diferentes hosts remotos para ser ejecutadas en paralelo, y el cliente espera o consulta la solicitud completada. En un modelo de programación con llamadas a procedimientos remotos asíncronos, el programador debe manejar las solicitudes pendientes de forma explícita. Debido a que OmniRPC es un sistema seguro para hilos, puede haber varios llamados a procedimientos remotos pendientes en cualquier momento para programas multi-hilo escritos en OpenMP. Modelo de persistencia de OmniRPC 3.2: módulo inicializable automáticamente. OmniRPC soporta eficientemente aplicaciones paralelas típicas de Maestro/Trabajador como programas de ejecución paramétrica. Para aplicaciones de búsqueda paramétrica, que a menudo requieren una gran cantidad de datos idénticos para cada llamada, OmniRPC admite un modelo de persistencia limitado, que está implementado por el módulo inicializable automático. El usuario puede definir un procedimiento de inicialización en el ejecutable remoto para enviar y almacenar datos automáticamente antes de las llamadas reales al procedimiento remoto. Dado que el ejecutable remoto puede aceptar solicitudes para llamadas posteriores, el conjunto de datos que ha sido establecido por el procedimiento de inicialización puede ser reutilizado. Como resultado, el programa del trabajador puede ejecutarse de manera eficiente y reducir la cantidad de datos transmitidos para la inicialización. Una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado para llamadas RPC posteriores. Sin embargo, OmniRPC no garantiza la persistencia del ejecutable remoto, por lo que el conjunto de datos establecido por la llamada anterior no puede ser utilizado por llamadas posteriores. Esto se debe a que una llamada remota realizada por OmniRpcCall puede ser programada en cualquier host remoto de forma dinámica, y los ejecutables remotos pueden ser terminados accidentalmente debido a una reprogramación dinámica o fallos en el host. Sin embargo, la persistencia del ejecutable remoto puede ser explotada en ciertas aplicaciones. Un ejemplo es una aplicación de búsqueda paramétrica: en dicha aplicación, sería eficiente si un gran conjunto de datos pudiera cargarse previamente en la primera llamada, y las llamadas posteriores pudieran realizarse en los mismos datos, pero con diferentes parámetros. Este es el caso para CONFLEX. OmniRPC proporciona un modelo de persistencia restringido a través del módulo inicializable automático (AIM) para apoyar este tipo de aplicación. Si el procedimiento de inicialización está definido en el módulo, el módulo se inicializa automáticamente al invocarlo llamando al procedimiento de inicialización. Cuando el ejecutable remoto se reprograma en diferentes hosts, se llama a la inicialización para inicializar el módulo remoto recién asignado. Esto puede eliminar comunicaciones innecesarias cuando las llamadas RPC utilizan los mismos datos. Para revelar más sobre la diferencia en el progreso entre los casos con OmniRPC AIM y sin OmniRPC AIM, presentamos dos figuras. La Figura 5 ilustra el gráfico de tiempo del progreso de una aplicación típica de OmniRPC utilizando la facilidad OmniRPC AIM, y la Figura 6 ilustra el gráfico de tiempo de la misma aplicación sin la facilidad OmniRPC AIM. En ambas figuras, las líneas entre los diamantes representan los procesos de inicialización, y las líneas entre los puntos representan los cálculos. La línea en negrita indica el momento en que el programa cliente envía los datos al programa trabajador. Es necesario que la aplicación sin la funcionalidad OmniRPC AIM se inicialice en cada RPC. La aplicación que utiliza la funcionalidad OmniRPC AIM puede reutilizar los datos inicializados una vez que el conjunto de datos está inicializado. Esto puede reducir la inicialización en cada RPC. Los trabajadores de la aplicación con AIM pueden calcular de manera eficiente en comparación con la aplicación sin la facilidad de AIM de OmniRPC. 3.3 Implementación de CONFLEX-G utilizando OmniRPC. La Figura 3 muestra una visión general del proceso utilizado en CONFLEX-G. Usando RPCs, CONFLEX-G asigna los procesos de optimización de la estructura de prueba, que son realizados por los nodos de cálculo de un clúster de PC en la versión MPI de CONFLEX, a los nodos computacionales de cada clúster en un entorno de grid. Hay dos cálculos que realizan los programas de trabajador en CONFLEX-G. Uno es la inicialización de un programa de trabajador, y otro es el cálculo de la optimización de la estructura de prueba. Primero, la instalación OmniRPC del AIM se adapta para la inicialización de un programa trabajador. Esta instalación llama automáticamente a la función de inicialización, la cual está contenida en el programa de trabajador, una vez que el programa cliente invoca al programa de trabajador en un nodo remoto. Es necesario que el sistema RPC común, incluido GridRPC, inicialice un programa para cada llamada RPC, ya que la persistencia de datos de los programas trabajadores. Tabla 1: Configuraciones de máquinas en la plataforma de pruebas en red. El nombre del clúster del sitio Máquina Red de Autenticación # de Nodos # de CPUs Univ. de Tsukuba Dennis Dual Xeon 2.4GHz 1Gb Ethernet Globus, SSH 14 28 Alice Dual Athlon 1800+ 100Mb Ethernet Globus, SSH 18 36 TUT Toyo Dual Athlon 2600+ 100Mb Ethernet SSH 8 16 AIST Ume Dual Pentium3 1.4GHz 1Gb Ethernet Globus, SSH 32 64 no es compatible. En OmniRPC, sin embargo, cuando se define la función remota Inicializar en el programa del trabajador y se asigna un nuevo programa de trabajador, correspondiente al otro RPC, para ejecutar, se llama automáticamente a una función Inicializar. Por lo tanto, después de la llamada a la función Initialize para configurar los datos de inicialización comunes, un programa trabajador puede reutilizar estos datos y aumentar la eficiencia de sus procesos. Por lo tanto, cuanto mayor sea el costo de configuración, mayor será el beneficio potencial. Implementamos el programa de trabajador de CONFLEX-G para recibir datos, como parámetros de evaluación de energía, de un programa cliente y para ser inicializado por la función Inicializar. Organizamos el programa del cliente de CONFLEX-G para transferir el archivo de parámetros en el momento de la inicialización del trabajador. Esto permite que la ejecución se realice modificando solo la configuración del cliente si el usuario desea ejecutar CONFLEX-G con un conjunto de datos diferente. Segundo, para calcular la optimización de la estructura de prueba en un programa de trabajador, el programa de trabajador debe recibir los datos, como el arreglo de átomos de la estructura de prueba y el estado de energía interna. El resultado se devuelve al programa cliente después de que el trabajador haya optimizado la estructura de prueba. Dado que la parte de cálculo de la optimización de la estructura en este programa de trabajador puede ser calculada de forma independiente utilizando diferentes parámetros, paralelizamos esta parte utilizando RPC asincrónicos en el lado del cliente. Para llamar a la función de optimización de estructuras en un programa trabajador desde el programa cliente, utilizamos la API OmniRpcCallAsync, la cual está diseñada para RPC asincrónico. Además, la API OmniRpcCallWaitAll espera hasta que se utilicen todas las RPC asíncronas para realizar la sincronización una vez que todas las RPC asíncronas se hayan completado, con el fin de optimizar la estructura de la prueba. El programa cliente que asigna la optimización de la estructura de prueba al nodo de cálculo de un clúster de PC utilizando RPC se describe de la siguiente manera. OmniRpcInit() OmniRpcModuleInit(conflex_search,...); ... mientras( <nuevos conformeros> ) { para cada( <estructuras de prueba> ) OmniRpcCallAsync(conflex_search_worker, ...); OmniRpcWaitAll(); ... Ten en cuenta que la API OmniRpcModuleInit solo devuelve los argumentos necesarios para la inicialización y no ejecutará realmente la función de inicialización. Como se describe arriba, la inicialización real se realiza en la primera llamada remota. Dado que el sistema OmniRPC tiene un programador de round-robin sencillo, no es necesario escribir explícitamente el código para el equilibrio de carga. Por lo tanto, los RPC se asignan automáticamente a los trabajadores inactivos. Tabla 2: Rendimiento de la red entre el nodo maestro del clúster Dennis y el nodo maestro de cada clúster de PC. Rendimiento de ida y vuelta del clúster Tiempo (ms) (Mbps) Dennis 0.23 879.31 Alice 0.18 94.12 Toyo 11.27 1.53 Ume 1.07 373.33 RESULTADOS PRELIMINARES 4.1 Banco de pruebas de la red El banco de pruebas de la red fue construido utilizando recursos informáticos de la Universidad de Tsukuba, la Universidad de Tecnología de Toyohashi (TUT) y el Instituto Nacional de Ciencia y Tecnología Industrial Avanzada (AIST). La Tabla 1 muestra los recursos informáticos utilizados para la red del presente estudio. La Universidad de Tsukuba y AIST están conectadas por una red WAN de 1 Gbps en Tsukuba, y los otros clústeres de PC están conectados por SINET, que es una red de área amplia dedicada a la investigación académica en Japón. La Tabla 2 muestra el rendimiento de la red medida entre el nodo maestro del clúster Dennis y el nodo maestro de cada clúster de PC en el banco de pruebas de la red. El rendimiento de CONFLEX-G En todos los experimentos de CONFLEX-G, el programa cliente se ejecutó en el nodo maestro del clúster Dennis en la Universidad de Tsukuba. El planificador Round-Robin incorporado de OmniRPC se utilizó como planificador de tareas. Se utilizó SSH para un sistema de autenticación, el OminRPCs MXIO, que retransmite la comunicación de E/S entre el programa cliente y los programas trabajadores mediante el reenvío de puertos de SSH, no se utilizó. Se debe tener en cuenta que un programa de trabajador se asigna y se ejecuta en una CPU de un nodo de cálculo en un clúster de PC. Es decir, el número de trabajadores es igual al número de CPUs. Estos programas fueron compilados por el Intel Fortran Compiler 7.0 y gcc 2.95. Se utilizó MPICH, Versión 1.2.5, para comparar el rendimiento entre CONFLEX MPI y CONFLEX-G. Para demostrar la usabilidad de la instalación OmniRPC de AIM, implementamos otra versión de CONFLEX-G que no utilizaba la instalación OmniRPC. El programa del trabajador en esta versión de CONFLEXG debe inicializarse en cada RPC porque el trabajador no conserva el conjunto de datos anterior. Para examinar el rendimiento de CONFLEX-G, seleccionamos dos péptidos y dos proteínas pequeñas como moléculas de prueba: • N-acetil tetra-alanina metilester (AlaX04) • N-acetil hexadeca-alanina metilester (AlaX16) • Construcción de miniproteína TRP-cage TC5B (1L2Y) • Fragmento del extremo N del receptor de PTH (1BL1) La Tabla 3 enumera las características de estas moléculas de muestra. La estructura de prueba de columnas / bucles en esta tabla muestra la Figura 7: Rendimientos de CONFLEX-G, CONFLEX MPI y CONFLEX Original en el clúster Dennis. Figura 8: Proporción de aceleración, que se basa en el tiempo transcurrido de CONFLEX-G utilizando un trabajador en el clúster de Dennis. Figura 9: Rendimiento de CONFLEX-G con y sin la facilidad OmniRPC del módulo inicializable automático para AlaX16. Tabla 3: Características de las moléculas y transmisión de datos para optimizar las estructuras moleculares de prueba en cada código molecular. Tabla 4: Tiempo de búsqueda transcurrido para la conformación molecular de AlaX04. Tabla 6: Tiempo transcurrido de la búsqueda de la estructura de prueba de 1L2Y. Tabla 7: Tiempo transcurrido de la búsqueda de la estructura de prueba de 1BL1. Número total de estructuras del clúster Tiempo de optimización Transcurrido Velocidad transcurrida (# de trabajadores) trabajadores / trabajador / estructura (s) tiempo (s) tiempo (H) hasta Toyo MPI (1) 1 519.0 3,646 189,210 525.61 1.00 Toyo MPI (16) 16 32.4 3,646 120,028 33.34 15.76 Dennis (28) 28 18.5 3,154 61,803 17.16 30.61 Dennis (28) + Ume (56) 84 6.1 4,497 33,502 9.30 56.48 160 número de estructuras de prueba generadas en cada iteración, indicando el grado de paralelismo. La Figura 3 también resume la cantidad de transmisión de datos requerida para la inicialización de un programa de trabajador y para la optimización de cada estructura de prueba. Ten en cuenta que la cantidad de transmisión de datos necesaria para inicializar un programa de trabajador y optimizar una estructura de prueba en la versión MPI de CONFLEX es igual a la de CONFLEX-G. Utilizamos una versión mejorada del campo de fuerza MM2 para asignar una función de energía potencial a varias propiedades geométricas de un grupo de átomos. 4.2.1 Rendimiento en un clúster local. Primero comparamos el rendimiento de CONFLEX-G, la versión MPI de CONFLEX y la versión secuencial original de CONFLEX-G utilizando un clúster local. Investigamos el rendimiento variando el número de trabajadores utilizando el clúster Dennis. Elegimos AlaX04 como molécula de prueba para este experimento. La Figura 7 compara los resultados para el CONFLEX MPI y el CONFLEX-G en un clúster de PC local. El resultado de este experimento muestra que CONFLEX-G puede reducir el tiempo de ejecución a medida que aumenta el número de trabajadores, al igual que en la versión MPI de CONFLEX. Descubrimos que CONFLEX-G logró eficiencias comparables a la versión MPI. Con 28 trabajadores, CONFLEX-G logró una mejora de velocidad de 18.00 veces en comparación con la versión secuencial de CONFLEX. El rendimiento de CONFLEX-G sin la funcionalidad AIM de OmniRPC es peor que el de CONFLEX-G que utiliza la funcionalidad, basado en el aumento en el número de trabajadores. Esto indica que el OmniRPC AIM permite al trabajador calcular de manera eficiente sin necesidad de realizar otros cálculos, como la inicialización o la invocación de programas de trabajador. A medida que se aumenta el número de trabajadores, el rendimiento de CONFLEX-G es ligeramente inferior al de la versión MPI. Esta degradación del rendimiento es causada por diferencias en los procesos de inicialización de los trabajadores de CONFLEX-G y CONFLEX MPI. En el caso de CONFLEX MPI, todos los trabajadores se inicializan antes de la fase de optimización. En el caso de OminRPC, el trabajador es invocado bajo demanda cuando la llamada RPC es emitida realmente. Por lo tanto, la inicialización conlleva este sobrecosto. Dado que el objetivo de CONFLEX-G es explorar las conformaciones de grandes bio-moléculas, el número de estructuras de prueba y el tiempo para optimizar la estructura de prueba podrían ser grandes. En tales casos, el gasto general para invocar e inicializar el programa de trabajador puede ser pequeño en comparación con el tiempo total transcurrido. 4.2.2 Rendimiento para Péptidos en el Banco de Pruebas de la Red En primer lugar, las moléculas de muestra (AlaX04 y AlaX16) se utilizaron para examinar el rendimiento de CONFLEX-G en un entorno de red. La Figura 8 muestra la aceleración lograda al utilizar múltiples clústeres en comparación con el uso de un solo trabajador en el clúster de Dennis. Los resultados detallados se muestran en la Tabla 4 y la Tabla 5. En ambos casos, el mejor rendimiento se obtuvo utilizando 64 trabajadores de la combinación de los clústeres de Dennis y Alice. CONFLEX-G logró una aceleración máxima de 36.08 veces para AlaX04 y una aceleración máxima de 21.91 veces para AlaX16. En el caso de AlaX04, el rendimiento mejora solo cuando el rendimiento de la red entre clústeres es alto. Sin embargo, aunque se utilicen dos o más grupos en un entorno de red de área amplia, la mejora en el rendimiento fue leve debido a que el tiempo de optimización de una estructura de prueba generada a partir de AlaX04, una molécula pequeña, es corto. Además, los gastos generales necesarios para la invocación de un programa de trabajador y la transmisión de datos a través de la red consumen una gran parte del tiempo de procesamiento restante. En particular, la transmisión de datos necesaria para la inicialización de un programa de trabajador es de 2 MB. En el caso del clúster Toyo, donde el rendimiento de la red entre el programa cliente y los programas trabajadores es deficiente, el tiempo de transmisión de datos al programa trabajador requería aproximadamente 6.7 segundos. Dado que el tiempo de transmisión fue más largo que el tiempo de procesamiento de una optimización de estructura en CONFLEX-G, la mayor parte del tiempo se dedicó a esta transmisión de datos. Por lo tanto, incluso si CONFLEX-G utiliza un gran número de nodos de cálculo en un entorno de red de área amplia, no se obtiene el beneficio de utilizar un recurso de cuadrícula. En el caso de AlaX16, CONFLEX-G logró una aceleración al utilizar dos o más clústeres de PC en nuestro banco de pruebas en red. Esto se debió a que el tiempo de cálculo en el programa del trabajador era largo y los costos adicionales, como la latencia de red y la invocación de programas de trabajador, se volvieron relativamente pequeños y pudieron ocultarse. El mejor rendimiento se obtuvo utilizando 64 trabajadores en los clústeres de Dennis y Alice. En el caso de AaX16, el rendimiento logrado fue un aumento de velocidad de 36.08 veces. La Figura 9 revela el efecto de utilizar la facilidad del OmniRPC AIM en el rendimiento de CONFLEX-G. En la mayoría de los casos, CONFLEX-G con la instalación de OmniRPC AIM logró un mejor rendimiento que CONFLEX-G sin la instalación. En particular, la facilidad OmniRPC AIM fue ventajosa al usar dos clústeres conectados por una red de bajo rendimiento. Los resultados indican que la instalación OmniRPC AIM puede mejorar el rendimiento en el entorno de la red. 4.2.3 Rendimiento para proteínas pequeñas en el banco de pruebas de la red. Finalmente, exploramos la conformación molecular utilizando CONFLEX-G para moléculas grandes. En un entorno de cuadrícula, este experimento se llevó a cabo utilizando los clústeres Dennis y Ume. En este experimento, utilizamos dos proteínas, 1L2Y y 1BL1. La Tabla 6 y la Tabla 7 muestran el rendimiento de CONFLEX-G en el entorno de la red y el de CONFLEX MPI en el clúster de Toyo, respectivamente. Los incrementos de velocidad en estas tablas fueron calculados respectivamente basados en el rendimiento de un trabajador y 16 trabajadores del clúster Toyo utilizando CONFLEX MPI. CONFLEX-G con 84 trabajadores en los grupos de Dennis y Ume obtuvo aceleraciones máximas de 56.5 veces para 1L2Y y 34.5 veces para 1L2Y. Dado que el tiempo de cálculo para la optimización de la estructura requería una gran cantidad de tiempo, la proporción de gastos generales, incluidas tareas como la invocación de un programa de trabajador y la transmisión de datos para la inicialización, se volvió muy pequeña, por lo que el rendimiento de CONFLEX-G mejoró. Descubrimos que el desequilibrio de carga en el tiempo de procesamiento de la optimización para cada estructura de prueba causó una degradación del rendimiento. Cuando obtuvimos el mejor rendimiento para 1L2Y utilizando los cúmulos de Dennis y Ume, el tiempo para la optimización de cada estructura varió de 190 a 27,887 segundos, y la proporción entre los tiempos más largos y más cortos fue de 13.4. Para 1BL1, la proporción de tiempo mínimo sobre tiempo máximo fue de 190. Además, para que el programa del trabajador espere hasta que se complete la optimización de todas las estructuras de prueba, se descubrió que todos los programas de trabajador esperaban en un estado inactivo durante aproximadamente 6 horas. Esto ha causado la degradación del rendimiento de CONFLEX-G. 161 4.3 Discusión En esta subsección, discutimos la mejora del rendimiento reflejada en nuestros experimentos. Explotando el paralelismo - Para aprovechar más recursos computacionales, es necesario aumentar el grado de paralelismo. En este experimento, el grado de paralelismo no fue tan grande en el caso de las moléculas de muestra. Al utilizar un conjunto de más de 500 nodos informáticos para 1BL1, el número de estructuras de un solo ensayo asignadas a cada trabajador será solo de uno o dos. Si se asignan más de 100 estructuras de prueba a cada programa de trabajador, el cálculo se puede realizar de manera más eficiente debido a la reducción de la sobrecarga para la invocación y la inicialización de los trabajadores a través de la facilidad de OmniRPC AIM. Una idea para aumentar el paralelismo es superponer la ejecución de dos o más conjuntos de estructuras de prueba. En el algoritmo actual, se genera un conjunto de estructuras de prueba a partir de una estructura inicial y se calculan las optimizaciones para todas las estructuras de este conjunto. Además, esto ayudará a mejorar el desequilibrio de carga. Al hacer que otros conjuntos de estructuras de prueba se superpongan, incluso si algunas optimizaciones requieren mucho tiempo, la optimización de las estructuras en otros conjuntos se puede ejecutar para compensar a los trabajadores inactivos de otras optimizaciones. Sin embargo, no está claro cómo dicha modificación del algoritmo podría afectar la calidad de los resultados finales en términos de una búsqueda de conformación. Mejora en el desequilibrio de carga al optimizar cada estructura de prueba: la Tabla 8 enumera las estadísticas de los tiempos de optimización de las estructuras de prueba generadas para cada molécula de muestra medida utilizando 28 trabajadores en el clúster de Dennis. Cuando se utilizan dos o más conjuntos de grupos de PC, la mejora en el rendimiento se ve obstaculizada por el desequilibrio de carga en la optimización de las estructuras de prueba. El tiempo más largo para optimizar una estructura de prueba fue casi 24 veces más largo que el tiempo más corto. Además, los demás trabajadores deben esperar hasta que el trabajo más largo haya terminado, por lo que el tiempo total de ejecución no se puede reducir. Cuando CONFLEX-G buscó los conformeros de 1BL1 mediante el clúster de Dennis, el tiempo de cálculo más largo de la optimización de la estructura de prueba representó aproximadamente el 80% del tiempo transcurrido. Por lo tanto, hay dos posibles soluciones para el desequilibrio de carga. • Es necesario refinar el algoritmo utilizado para generar la estructura de prueba, que suprime la variación temporal para optimizar una estructura de prueba en CONFLEX. Esto permite que CONFLEX-G logre un alto rendimiento al utilizar muchos recursos informáticos. • Una de las soluciones es superponer las ejecuciones para dos o más conjuntos de estructuras de prueba. En los algoritmos actuales, se genera un conjunto de estructuras de prueba a partir de una estructura inicial y el cálculo continúa hasta que se calculen todas las estructuras de este conjunto. Al tener otros conjuntos de estructuras de prueba, incluso si una búsqueda de estructuras lleva mucho tiempo, un trabajo puede ejecutarse para compensar el desequilibrio de carga causado por otros trabajos. Sin embargo, no está claro cómo tal modificación de los algoritmos podría afectar la eficiencia. En este experimento, utilizamos un programador de round-robin incorporado simple de OmniRPC, que es necesario para aplicar el programador que asigna estructuras con largos tiempos de optimización a una tabla de alto rendimiento. Tabla 8: Estadísticas del tiempo transcurrido de la optimización de la estructura de prueba utilizando 28 trabajadores en el clúster Dennis. Código de Varianza Promedio Mínimo Máximo Molecular (s) (s) (s) AlaX04 2.0 11.3 5.3 3 AlaX16 47.6 920.0 154.2 5404 1L2Y 114.2 13331.4 803.2 636782 1BL1 121.0 29641.8 3153.5 2734811 nodos y estructuras con tiempos de optimización cortos a nodos de bajo rendimiento. En general, sin embargo, podría ser difícil predecir el tiempo necesario para la optimización de la estructura del ensayo. Paralelización del programa del trabajador para acelerar y optimizar una estructura de prueba - En la implementación actual, no paralelizamos el programa del trabajador. Para acelerar las estructuras de prueba, la programación híbrida utilizando OmniRPC y OpenMP en una máquina SMP (Symmetric Multiple Processor) puede ser uno de los métodos alternativos para mejorar el rendimiento general. TRABAJO RELACIONADO Recientemente, se ha desarrollado un algoritmo que resuelve los problemas de paralelización y comunicación en procesadores poco conectados para ser utilizados en simulaciones. El proyecto Folding@home simula escalas de tiempo miles a millones de veces más largas que las logradas previamente. Esto nos ha permitido simular el plegamiento por primera vez y examinar directamente enfermedades relacionadas con el plegamiento. SETI@home es un programa para buscar vida extraterrestre mediante el análisis de señales de radio telescopio utilizando datos de telescopios de diferentes sitios mediante la transformada de Fourier. SETI@home aborda problemas inmensamente paralelos, en los cuales los cálculos pueden dividirse fácilmente entre varios ordenadores. Los fragmentos de datos del radiotelescopio pueden asignarse fácilmente a diferentes computadoras. La mayoría de estos esfuerzos desarrollan explícitamente una aplicación de acoplamiento como una aplicación paralela utilizando un lenguaje de programación paralela de propósito especial y middleware, como MPI, lo cual requiere habilidades y esfuerzo de desarrollo. Sin embargo, las habilidades y esfuerzo necesarios para desarrollar una aplicación de cuadrícula pueden no ser necesarios para OmniRPC. Nimrod/G[15] es una herramienta para modelado paramétrico distribuido e implementa una granja de tareas paralelas para simulaciones que requieren varios parámetros de entrada variables. Nimrod incorpora un componente de programación distribuida que puede gestionar la programación de experimentos individuales en computadoras inactivas en una red de área local. Nimrod se ha aplicado en aplicaciones que incluyen bioinformática, investigación de operaciones y modelado molecular para el diseño de fármacos. NetSolve es una instalación de RPC similar a OmniRPC y Ninf, que proporciona una interfaz de programación similar y un mecanismo de equilibrio de carga automático. Ninf-G[7] es una implementación habilitada para grid de Ninf y proporciona un sistema GridRPC[10] que utiliza LDAP para gestionar la base de datos de ejecutables remotos, pero no admite clústeres que involucren direcciones IP privadas o direcciones dentro de un firewall. Matsuoka et al. [16] también han discutido varios problemas de diseño relacionados con los sistemas de RPC en malla. 162 6. CONCLUSIONES Y TRABAJO FUTURO Hemos diseñado e implementado CONFLEX-G utilizando OmniRPC. Informamos sobre su rendimiento en un banco de pruebas en red de varios clústeres de PC distribuidos geográficamente. Para explorar la conformación de grandes biomoléculas, se utilizó CONFLEXG para generar estructuras de prueba de las moléculas y asignar trabajos para optimizarlas mediante mecánica molecular en la cuadrícula. OmniRPC proporciona un modelo de persistencia restringido para que el módulo se inicialice automáticamente al invocarse llamando al procedimiento de inicialización. Esto puede eliminar la comunicación innecesaria y la inicialización en cada llamada en CONFLEX-G. CONFLEX-G puede lograr un rendimiento comparable al de CONFLEX MPI y aprovecha más recursos informáticos al permitir el uso de múltiples clústeres de PC en la red. El resultado experimental muestra que CONFLEX-G logró una aceleración de 56.5 veces para la molécula 1BL1, donde la molécula consta de un gran número de átomos y cada optimización de la estructura de prueba requiere mucho tiempo. El desequilibrio de carga de las optimizaciones de la estructura de prueba puede causar degradación del rendimiento. Necesitamos refinar el algoritmo utilizado para generar la estructura de prueba con el fin de mejorar la optimización del equilibrio de carga para las estructuras de prueba en CONFLEX. Los estudios futuros incluirán el desarrollo de herramientas de implementación y un examen de la tolerancia a fallos. En el OmniRPC actual, el registro de un programa de ejecución en hosts remotos y despliegues de programas de trabajadores se configuran manualmente. Se requerirán herramientas de implementación a medida que se incremente el número de hosts remotos. En entornos de cuadrícula en los que el entorno cambia dinámicamente, también es necesario contar con soporte para la tolerancia a fallos. Esta característica es especialmente importante en aplicaciones a gran escala que requieren cálculos prolongados en un entorno de cuadrícula. Planeamos refinar el algoritmo de optimización conformacional en CONFLEX para explorar el espacio de búsqueda de conformaciones de moléculas biológicas más grandes como la proteasa del VIH utilizando hasta 1000 trabajadores en un entorno de cuadrícula. AGRADECIMIENTOS Esta investigación fue apoyada en parte por una Subvención de la Secretaría de Educación, Cultura, Deportes, Ciencia y Tecnología de Japón, No. 14019011, 2002, y como parte del Programa de Investigación y Desarrollo para Aplicar la Ciencia y Tecnología Computacional Avanzada por la Corporación de Ciencia y Tecnología de Japón (Investigación en la plataforma de computación en red para el diseño de fármacos). Nos gustaría agradecer al centro de investigación de tecnología de red, AIST, Japón por proporcionar recursos informáticos para nuestro experimento. 8. REFERENCIAS [1] H. Goto y E. Osawa. Un algoritmo eficiente para buscar conformaciones de baja energía de moléculas cíclicas y acíclicas. J. Quím. Soc., Perkin Trans, 2:187-198, 1993. [2] M. Sato, T. Boku, y D. Takahashi. OmniRPC: un <br>sistema de RPC en malla</br> para programación paralela en entornos de clúster y malla. En Proc. de CCGrid2003, páginas 219-229, 2003. [3] M. Sato, M. Hirano, Y. Tanaka y S. Sekiguchi. OmniRPC: una instalación de RPC en Grid para la computación en clúster y global en OpenMP. En Proc. del Taller sobre Aplicaciones y Herramientas OpenMP 2001 (LNCS 2104), páginas 130-135, 2001. [4] Proyecto OmniRPC. http://www.omni.hpcc.jp/omnirpc/. [5] M. Sato, H. Nakada, S. Sekiguchi, S. Matsuoka, U. Nagashima y H. Takagi. Ninf: Una Biblioteca de Información Basada en Red para la Infraestructura de Computación Global en Todo el Mundo. En HPCN Europe, páginas 491-502, 1997. [6] Proyecto Ninf. http://ninf.apgrid.org/. [7] Y. Tanaka, H. Nakada, S. Sekiguchi, T. Suzumura y S. Matsuoka. Ninf-G: Una Implementación de Referencia de Middleware de Programación basado en RPC para la Computación en Grid. Revista de Computación en Red, 1(1):41-51, 2003. [8] D. Arnold, S. Agrawal, S. Blackford, J. Dongarra, M. Miller, K. Seymour, K. Sagi, Z. Shi y S. Vadhiyar. Guía del usuario de NetSolve V1.4.1. Departamento de Computación Innovador. Informe técnico ICL-UT-02-05, Universidad de Tennessee, Knoxville, TN, junio de 2002. [9] Grupo de gestión de objetos. http://www.omg.org/. [10] K. Seymour, H. Nakada, S. Matsuoka, J. Dongarra, C. Lee y H. Casanova. GridRPC: Una API de Llamada a Procedimientos Remotos para la Computación en Grid. [11] H. Goto, T. Takahashi, Y. Takata, K. Ohta y U. Nagashima. Conflex: Comportamientos conformacionales de polipéptidos según lo predicho por una búsqueda en el espacio conformacional. En Nanotech2003, volumen 1, páginas 32-35, 2003. [12] I. Foster y C. Kesselman. Globus: Un conjunto de herramientas de infraestructura de metacomputación. La Revista Internacional de Aplicaciones de Supercomputadoras y Computación de Alto Rendimiento, 11(2):115-128, Verano 1997. [13] Stefan M. Larson, Christopher D. Snow, Michael Shirts y Vijay S. Pande. Folding@home y genome@home: Utilizando computación distribuida para abordar problemas previamente intratables en biología computacional. Genómica Computacional, 2002. Proyecto seti@home. http://setiathome.ssl.berkeley.edu/. R. Buyya, K. Branson, J. Giddy y D. Abramson. El laboratorio virtual: un conjunto de herramientas para habilitar la modelización molecular distribuida para el diseño de fármacos en la red mundial. Concurrencia y Computación: Práctica y Experiencia, 15(1):1-25, enero de 2003. [16] S. Matsuoka, H. Nakada, M. Sato y S. Sekiguchi. Problemas de diseño de sistemas de servidores habilitados para redes para la red. En Proc. de GRID 2000 (LNCS 1971), páginas 4-17, 2000. 163 ",
            "candidates": [],
            "error": [
                [
                    "sistema de RPC en malla",
                    "sistema de RPC de Grid",
                    "sistema de RPC en malla",
                    "sistema de RPC en malla"
                ]
            ]
        },
        "molecular mechanic": {
            "translated_key": "mecánica molecular",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Implementation and Performance Evaluation of CONFLEX-G: Grid-enabled Molecular Conformational Space Search Program with OmniRPC Yoshihiro Nakajima Graduate School of Systems & Information Engineering, University of Tsukuba Tsukuba, 305-8577, Japan yoshihiro@hpcs.is.tsukuba.ac.jp Mitsuhisa Sato Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan msato@is.tsukuba.ac.jp Hitoshi Goto Knowledge-based Information Engineering, Toyohashi University of Technology Toyohashi, 441-8580, Japan gotoh@cochem2.tutkie.tut.ac.jp Taisuke Boku, Daisuke Takahashi Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan {taisuke,daisuke}@hpcs.is.tsukuba.ac.jp ABSTRACT CONFLEX-G is the grid-enabled version of a molecular conformational space search program called CONFLEX.",
                "We have implemented CONFLEX-G using a grid RPC system called OmniRPC.",
                "In this paper, we report the performance of CONFLEX-G in a grid testbed of several geographically distributed PC clusters.",
                "In order to explore many conformation of large bio-molecules, CONFLEX-G generates trial structures of the molecules and allocates jobs to optimize a trial structure with a reliable <br>molecular mechanic</br>s method in the grid.",
                "OmniRPC provides a restricted persistence model to support the parametric search applications.",
                "In this model, when the initialization procedure is defined in the RPC module, the module is automatically initialized at the time of invocation by calling the initialization procedure.",
                "This can eliminate unnecessary communication and initialization at each call in CONFLEX-G. CONFLEXG can achieve performance comparable to CONFLEX MPI and can exploit more computing resources by allowing the use of a cluster of multiple clusters in the grid.",
                "The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times in the case of the 1BL1 molecule, where the molecule consists of a large number of atoms, and each trial structure optimization requires significant time.",
                "The load imbalance of the optimization time of the trial structure may also cause performance degradation.",
                "Categories and Subject Descriptors C.2.4 [Computer Systems Organization]: COMPUTERCOMMUNICATION NETWORK-Distributed Systems; J.2.4 [Computer Applications]: PHYSICAL SCIENCES AND ENGINEERING General Terms Design,Performance 1.",
                "INTRODUCTION Elucidation of the stable conformations and the folding process of proteins is one of the most fundamental and challenging goals in life science.",
                "While some of the most common secondary structures (e.g., certain types of helix, the beta-strand, and the coil) are well known, precise analysis of the thousands of chemically important conformers and pico-second-order analysis of their conformational interconversions via the transition states on the potential energy surface are required for the microsecond-order investigation of the folding process toward the tertiary structure formations.",
                "Recently, the concept of the computational grid has begun to attract significant interest in the field of high-performance network computing.",
                "Rapid advances in wide-area networking technology and infrastructure have made it possible to construct large-scale, high-performance distributed computing environments, or computational grids, that provide dependable, consistent and pervasive access to enormous computational resources.",
                "CONFLEX is one of the most efficient and reliable conformational space search programs[1].",
                "We have applied this 154 program to parallelization using global computing.",
                "The performance of the parallelized CONFLEX enables exploration of the lower-energy region of the conformational space of small peptides within an available elapsed time using a local PC cluster.",
                "Since trial structure optimization in CONFLEX is calculated via <br>molecular mechanic</br>s, conformational space search can be performed quickly compared to that using molecular orbital calculation.",
                "Although the parallelized version of CONFLEX was used to calculate in parallel the structure optimization, which takes up over 90% of the processing in the molecular conformation search, sufficient improvement in the speedup could not be achieved by this method alone.",
                "Therefore, for high polymers from live organisms, such as HIV protease, the use one PC cluster is insufficient due to the requirement for optimization of a huge number of trial structures.",
                "This requires the vast computer resources of a grid computing environment.",
                "In this paper, we describe CONFLEX-G, a grid-enabled molecular conformational search program, using OmniRPC and report its performance in a grid of several PC clusters which are geographically distributed.",
                "The prototype CONFLEX-G allocates calculation trial structures optimization, which is a very time-consuming task, to worker nodes in the grid environment in order to obtain high throughput.",
                "In addition, we compare the performance of CONFLEX-G in a local PC cluster to that in a grid testbed.",
                "OmniRPC[2, 3, 4] is a thread-safe implementation of Ninf RPC[5, 6] which is a Grid RPC facility for grid environment computing.",
                "Several systems adopt the concept of the RPC as the basic model for grid environment computing, including Ninf-G[7], NetSolve[8] and CORBA[9].",
                "The RPCstyle system provides an easy-to-use, intuitive programming interface, allowing users of the grid system to easily create grid-enabled applications.",
                "In order to support parallel programming, an RPC client can issue asynchronous call requests to a different remote computer to exploit networkwide parallelism via OmniRPC.",
                "In this paper, we propose the OmniRPC persistence model to a Grid RPC system and demonstrate its effectiveness.",
                "In order to support a typical application for a grid environment, such as a parametric search application, in which the same function is executed with different input parameters on the same data set.",
                "In the current GridRPC system[10], the data set by the previous call cannot be used by subsequent calls.",
                "In the OmniRPC system, once a remote executable is invoked, the client attempts to use the invoked remote executable and its initialized state for subsequent RPC calls to the same remote functions in order to eliminate the invocation cost of each call.",
                "This paper demonstrates that CONFLEX-G is able to exploit the huge computer resources of a grid environment and search large-scale molecular conformers.",
                "We demonstrate CONFLEX-G on our grid testbed using the actual protein as a sample molecule.",
                "The OmniRPC facility of the automatic initializable module (AIM) allows the system to efficiently calculate numerous conformers.",
                "Furthermore, by using OmniRPC, the user can grid-parallelize the existing application, and move from the cluster to the grid environment without modifying program code and compiling the program.",
                "In addition, the user can easily build a private grid environment.",
                "The rest of this paper is organized as follows.",
                "An overview Selection of Initial Structure Conformations Database Local Perturbation Geometry Optimization Comparison and Registration Figure 1: Algorithm of conformational space search in the original CONFLEX. of the CONFLEX system is presented in Section2, and the implementation and design of CONFLEX-G are described in Section 3.",
                "We report experimental results obtained using CONFLEX-G and discuss its performance in Section 4.",
                "In Section 6, we present conclusions and discuss subjects for future study. 2.",
                "CONFLEX CONFLEX [1] is an efficient conformational space search program, which can predominately and exhaustively search the conformers in the lower-energy region.",
                "Applications of CONFLEX include the elucidation of the reactivity and selectivity of drugs and possible drug materials with regard to their conformational flexibility. 2.1 Algorithm of ConformationalSpaceSearch The basic strategy of CONFLEX is an exhaustive search of only the low-energy regions.",
                "The original CONFLEX performs the following four major steps: 1.",
                "Selection of an initial structure among the previously discovered unique conformers sorted in a conformational database. (An input structure is used as the first initial structure at the beginning of a search execution only.) 2.",
                "Generation of trial structures by local perturbations to the selected initial structure. 3.",
                "Geometry optimization for the newly generated trial structures. 4.",
                "Comparison of the successfully optimized (trial) structures with the other conformers stored in a conformation database, and preservation of newly discovered unique conformers in the database.",
                "Figure 1 shows the outline of CONFLEX, the original conformational space search algorithm.",
                "These procedures incorporate two unique strategies.",
                "Figure 2 shows the strategies for generating local perturbations in CONFLEX.",
                "The first strategy involves both corner flapping and edge flipping for the ring atoms and stepwise rotation for side-chains or backbone chains.",
                "These methods provide a highly efficient way to produce several good trial structures.",
                "These perturbations can be considered to mimic 155 Stepwise Rotation Corner Flap Edge Flip Figure 2: Strategies used to generate the local perturbations. a barrier-crossing step in the elementary process of the thermal conformational inter-conversion.",
                "Actually, the perturbations of an initial structure correspond to the precise performance around the space of the initial structure because of localization and weakness of the perturbation.",
                "The selection rule of the initial structure, the LowestConformer-First rule, is the second strategy for directing the conformation search expanded to the low-energy regions.",
                "The initial structure is selected as the set of lowest energy conformers stored in the conformation database.",
                "This rule is effective in moving down the search space toward lower energy regions, like water from a stream running into an empty reservoir, while filling local depressions along the way.",
                "Therefore, these tactical procedures of the CONFLEX search are referred to as the Reservoir Filling Algorithm.",
                "In order to remain in the low-energy region and perform an exhaustive search, the search limit (SEL), which determines the maximum energy of the initial structures, is pre-defined.",
                "Gradually increasing SEL allows only the lowenergy conformers to be searched and avoids straying into unnecessarily high-energy regions. 2.2 Parallelization of CONFLEX for Cluster For application to over 100 atoms, CONFLEX was improved using high-performance parallel computing techniques.",
                "In the CONFLEX search algorithm, the geometry optimization procedures always take 95% of the elapsed time of the search execution.",
                "Therefore, we parallelized this optimization using the Master/Worker parallelization technique.",
                "We modified the search procedures as follows.",
                "After trial structures are generated (step 2), they are temporarily stored in a task pool on the master node.",
                "Then, each worker node is dynamically supplied with one trial structure from the master node.",
                "After an optimization on a worker node is finished, the worker is immediately supplied with another trial structure.",
                "When all of the trial structures related to a given initial structure are optimized, only the master procedure is used in comparison.",
                "By parallelizing CONFLEX, the speedup of searching molecular conformers obtained is as reported in[11]. 3.",
                "CONFLEX-G Originally, CONFLEX was intended for use in exploring the conformers of the large bio-molecules, such HIV protease.",
                "In such molecules, the number of trial structures increases and the time required for optimization of RPC Selection of Initial Structure Conformations Database Local Perturbation Comparison and Registration Client program Task Pool of Geometry Optimization RPC RPC Grid environment Cluster B Cluster A Cluster C Trial structureTrial structure Trial structure Trial structure Figure 3: Procedure of CONFLEX-G. agent rexrex rex Client jones.tsukuba.ac.jp hpc-serv.hpcc.jp hpc1 hpc2 hpc3 Agent invocation communicationNetwork Figure 4: Overview of the OmniRPC system for the remote cluster having a private IP address. the trial structure becomes immense.",
                "We implemented the parallelized version of CONFLEX, which cannot treat such molecules using only a local PC cluster.",
                "In order to exploit the vast computing resources of a grid environment, we designed and implemented CONFLEX-G, which is a grid-enabled version of CONFLEX, with the OmniRPC system.",
                "CONFLEX-G allocates jobs to optimize a trial structure to the computational nodes of each cluster in the grid environment.",
                "Figure 3 shows the process of CONFLEX-G.",
                "The worker programs are initialized by the initialize method, which is provided by the OmniRPC AIM facility at worker invocation.",
                "At each RPC call, the initialized state is reused on the remote host.",
                "In other words, the client program can eliminate the initialization for each RPC call, and can therefore optimize trial structures efficiently. 3.1 The OmniRPC system OmniRPC is a Grid RPC system which allows seamless parallel programming from a PC cluster to a grid environment.",
                "OmniRPC inherits its API and basic architecture from Ninf.",
                "A client and the remote computational hosts which execute the remote procedures may be connected via a network.",
                "The remote libraries are implemented as an executable program which contains a network stub routine as its main routine.",
                "We call this executable program a remote executable program (rex).",
                "When the OmniRPC client program starts, the initialization function of OmniRPC system invokes the OmniRPC agent program omrpc-agent in the remote hosts listed in the host file.",
                "To invoke the agent, the user can use the remote shell command rsh in a local-area network, the GRAM (Globus Resource Allocation Manager) API of the Globus 156 toolkit[12] in a grid environment, or the secure remote shell command ssh.",
                "The user can switch the configurations only by changing the host file.",
                "OmniRpcCall is a simple client programming interface for calling remote functions.",
                "When OmniRpcCall makes a remote procedure call, the call is allocated to an appropriate remote host.",
                "When the client issues the RPC request, it requests that the agent in the selected host submit the job of the remote executable with the local job scheduler specified in the host file.",
                "If the job scheduler is not specified, the agent executes the remote executable in the same node by the fork system call.",
                "The client sends the data of the input arguments to the invoked remote executable, and receives the results upon return of the remote function.",
                "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls in order to eliminate the cost of invoking the same remote executable again.",
                "When the agent and the remote executables are invoked, the remote programs obtain the client address and port from the argument list and connect back to the client by direct TCP/IP or Globus-IO for data transmission.",
                "Because the OmniRPC system does not use any fixed service ports, the client program allocates unused ports dynamically to wait for connection from the remote executables.",
                "This avoids possible security problems, and allows the user to install the OmniRPC system without requiring a privileged account.",
                "Herein, a typical grid resource is regarded as a cluster of geographically distributed PC clusters.",
                "For PC clusters on a private network, an OmniRPC agent process on the server host functions as a proxy to relay communications between the client and the remote executables by multiplexing the communications using a single connection.",
                "This feature, called multiplex IO (MXIO), allows a single client to use up to 1,000 remote computing hosts.",
                "When the PC cluster is inside a firewall, the port forwarding of SSH enables the node to communicate to the outside with MXIO.",
                "Figure 4 shows the overview of the OmniRPC system for a remote cluster with a private IP address.",
                "For parallel programming, the programmer can use asynchronous remote procedure calls, allowing the client to issue several requests while continuing with other computations.",
                "The requests are dispatched to different remote hosts to be executed in parallel, and the client waits or polls the completed request.",
                "In such a programming model with asynchronous remote procedure calls, the programmer should handle outstanding requests explicitly.",
                "Because OmniRPC is a thread-safe system, a number of remote procedure calls may be outstanding at any time for multi-threaded programs written in OpenMP. 3.2 OmniRPC persistence model: automatic initializable module OmniRPC efficiently supports typical Master/Worker parallel applications such as parametric execution programs.",
                "For parametric search applications, which often require large amount of identical data for each call, OmniRPC supports a limited persistence model, which is implemented by the automatic initializable module.",
                "The user can define an initialization procedure in the remote executable in order to send and store data automatically in advance of actual remote procedure calls.",
                "Since the remote executable may accept requests for subsequent calls, the data set which has been set by the initialization procedure can be re-used.",
                "As a result, the worker program can execute efficiently and reduce the amount of data transmitted for initialization.",
                "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls.",
                "However, OmniRPC does not guarantee persistence of the remote executable, so that the data set by the previous call cannot be used by subsequent calls.",
                "This is because a remote call by OmniRpcCall may be scheduled to any remote host dynamically, and remote executables may be terminated accidentally due to dynamic re-scheduling or host faults.",
                "However, persistence of the remote executable can be exploited in certain applications.",
                "An example is a parametric search application: in such an application, it would be efficient if a large set of data could be pre-loaded by the first call, and subsequent calls could be performed on the same data, but with different parameters.",
                "This is the case for CONFLEX.",
                "OmniRPC provides a restricted persistence model through the automatic initializable module (AIM) in order to support this type of application.",
                "If the initialization procedure is defined in the module, the module is automatically initialized at invocation by calling the initialization procedure.",
                "When the remote executable is re-scheduled in different hosts, the initialization is called to initialize the newly allocated remote module.",
                "This can eliminate unnecessary communications when RPC calls use the same data.",
                "To reveal more about the difference in progress between the cases with OmniRPC AIM and without OmniRPC AIM, we present two figures.",
                "Figure 5 illustrates the time chart of the progress of a typical OmniRPC application using the OmniRPC AIM facility, and Figure 6 illustrates the time chart of the same application without the OmniRPC AIM facility.",
                "In both figures, the lines between diamonds represent the processes of initialization, and the lines between points represent the calculation.",
                "The bold line indicates the time when the client program sends the data to a worker program.",
                "It is necessary for the application without the OmniRPC AIM facility to initialize at each RPC.",
                "The application using the OmniRPC AIM facility can re-use the initialized data once the data set is initialized.",
                "This can reduce the initialization at each RPC.",
                "The workers of the application with the AIM can calculate efficiently compared to the application without the OmniRPC AIM facility. 3.3 Implementation of CONFLEX-G using OmniRPC Figure 3 shows an overview of the process used in CONFLEXG.",
                "Using RPCs, CONFLEX-G allocates the processes of trial structure optimization, which are performed by the computation nodes of a PC cluster in the MPI version of CONFLEX, to the computational nodes of each cluster in a grid environment.",
                "There are two computations which are performed by the worker programs in CONFLEX-G. One is the initialization of a worker program, and another is the calculation of trial structure optimization.",
                "First, the OmniRPC facility of the AIM is adapted for initialization of a worker program.",
                "This facility automatically calls the initialization function, which is contained in the worker program, once the client program invokes the worker program in a remote node.",
                "It is necessary for the common RPC system including GridRPC to initialize a program for every RPC call, since data persistence of worker programs 157 time Client Program Worker Program 1 Worker Program 2 initialization initialization calculation calculation calculation calculation calculation Parallelized using asynchronous RPCs Figure 5: Time chart of applications using the OmniRPC facility of the automatic initializable module. time Client Program Worker Program 1 Worker Program 2 initialization initializationcalculation calculation calculation calculation initialization initialization initialization Parallelized using asynchronous RPCs calculation Figure 6: Time chart of applications without the OmniRPC facility of the automatic initializable module.",
                "Table 1: Machine configurations in the grid testbed.",
                "Site Cluster Name Machine Network Authentication # of Nodes # of CPUs Univ. of Tsukuba Dennis Dual Xeon 2.4GHz 1Gb Ethernet Globus, SSH 14 28 Alice Dual Athlon 1800+ 100Mb Ethernet Globus, SSH 18 36 TUT Toyo Dual Athlon 2600+ 100Mb Ethernet SSH 8 16 AIST Ume Dual Pentium3 1.4GHz 1Gb Ethernet Globus, SSH 32 64 is not supported.",
                "In OmniRPC, however, when the Initialize remote function is defined in the worker program and a new worker program, corresponding to the other RPC, is assigned to execute, an Initialize function is called automatically.",
                "Therefore, after the Initialize function call to set up common initialization data, a worker program can re-use this data and increase the efficiency of its processes.",
                "Thus, the higher the set-up cost, the greater the potential benefit.",
                "We implemented the worker program of CONFLEX-G to receive data, such as evaluation parameters of energy, from a client program and to be initialized by the Initialize function.",
                "We arranged the client program of CONFLEX-G to transfer the parameter file at the time of worker initialization.",
                "This enables execution to be performed by modify only the client setting if the user wants to run CONFLEX-G with a different data set.",
                "Second, in order to calculate trial structure optimization in a worker program, the worker program must receive the data, such as the atom arrangement of the trial structure and the internal energy state.",
                "The result is returned to the client program after the worker has Optimized the trial structure.",
                "Since the calculation portion of the structure optimization in this worker program can be calculated independently using different parameters, we parallelized this portion using asynchronous RPCs on the client side.",
                "To call the structure optimization function in a worker program from the client program, we use the OmniRpcCallAsync API, which is intended for asynchronous RPC.",
                "In addition, OmniRpcCallWaitAll API which waits until all asynchronous RPCs are used in order to perform synchronization with all of the asynchronous RPCs completed so as to optimize the trial structure.",
                "The client program which assigns trial structure optimization to the calculation node of a PC cluster using RPC is outlined as follows.",
                "OmniRpcInit() OmniRpcModuleInit(conflex_search,...); ... while( <new conformers> ) { foreach( <trial structures> ) OmniRpcCallAsync(conflex_search_worker, ...); OmniRpcWaitAll(); ...",
                "Note that OmniRpcModuleInit API returns only the arguments needed for initialization and will not actually execute the Initialization function.",
                "As described above, the actual Initialization is performed at the first remote call.",
                "Since the OmniRPC system has an easy round-robin scheduler, we do not have to explicitly write the code for load balance.",
                "Therefore, RPCs are allocated automatically to idle workers. 158 Table 2: Network performance between the master node of the Dennis cluster and the master node of each PC cluster.",
                "Round-Trip Throughput Cluster Time (ms) (Mbps) Dennis 0.23 879.31 Alice 0.18 94.12 Toyo 11.27 1.53 Ume 1.07 373.33 4.",
                "PRELIMINARY RESULTS 4.1 Grid Testbed The grid testbed was constructed by computing resources at the University of Tsukuba, the Toyohashi University of Technology (TUT) and the National Institute of Advanced Industrial Science and Technology (AIST).",
                "Table 1 shows the computing resources used for the grid of the present study.",
                "The University of Tsukuba and AIST are connected by a 1-Gbps Tsukuba WAN, and the other PC clusters are connected by SINET, which is wide-area network dedicated to academic research in Japan.",
                "Table 2 shows the performance of the measured network between the master node of the Dennis cluster and the master node of each PC cluster in the grid testbed.",
                "The communication throughput was measured using netperf, and the round-trip time was measured by ping. 4.2 Performance of CONFLEX-G In all of the CONFLEX-G experiments, the client program was executed on the master node of the Dennis cluster at the University of Tsukuba.",
                "The built-in Round-Robin scheduler of OmniRPC was used as a job scheduler.",
                "SSH was used for an authentication system, the OminRPCs MXIO, which relays the I/O communication between client program and worker programs by port forwarding of SSH was, not used.",
                "Note that one worker program is assigned and performed on one CPU of the calculation node in a PC cluster.",
                "That is, the number of workers is equal to the number of CPUs.",
                "These programs were compiled by the Intel Fortran Compiler 7.0 and gcc 2.95.",
                "MPICH, Version 1.2.5, was used to compare the performance between CONFLEX MPI and CONFLEX-G.",
                "In order to demonstrate the usability of the OmniRPC facility of the AIM, we implemented another version of CONFLEX-G which did not utilize the OmniRPC facility.",
                "The worker program in this version of CONFLEXG must be initialized at each RPC because the worker does not hold the previous data set.",
                "In order to examine the performance of CONFLEX-G, we selected two peptides and two small protein as test molecules: • N-acetyl tetra-alanine methylester (AlaX04) • N-acetyl hexdeca-alanine methylester (AlaX16) • TRP-cage miniprotein construct TC5B (1L2Y) • PTH receptor N-terminus fragment (1BL1) Table 3 lists the characteristics of these sample molecules.",
                "The column trial structure / loops in this table shows the Figure 7: Performances of CONFLEX-G, CONFLEX MPI and Original CONFLEX in the Dennis cluster.",
                "Figure 8: Speedup ratio, which is based on the elapsed time of CONFLEX-G using one worker in the Dennis cluster.",
                "Figure 9: Performance of CONFLEX-G with and without the OmniRPC facility of automatic initializable module for AlaX16. 159 Table 3: Characteristics of molecules and data transmission for optimizing trial molecular structures in each molecular code.",
                "Molecular # of # of total trial trial structure Data transfer to Data transfer code atoms structures / loop initialize a worker / trial structure AlaX04 181 360 45 2033KB 17.00KB AlaX16 191 480 160 2063KB 18.14KB 1L2Y 315 331 331 2099KB 29.58KB 1BL1 519 519 519 2150KB 48.67KB Table 4: Elapsed search time for the molecular conformation of AlaX04.",
                "Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (sequential) 1 320.0 1786.21 4.96 1786.21 1.00 Toyo (16) 16 20.0 1497.08 4.16 196.32 9.10 Dennis (28) 28 11.4 1905.51 5.29 97.00 18.41 Alice (36) 36 8.9 2055.25 5.71 87.09 20.51 Ume (56) 56 5.7 2196.77 6.10 120.69 14.80 Dennis (28) + Toyo (16) 44 7.3 1630.09 4.53 162.35 11.00 Alice (36) + Toyo (16) 52 6.2 1774.53 4.93 178.24 10.02 Dennis (28) + Alice (36) 64 5.0 1999.02 5.55 81.52 21.91 Dennis (28) + Ume (56) 84 3.8 2085.84 5.79 92.22 19.37 Alice (36) + Ume (56) 92 3.5 2120.87 5.89 101.25 17.64 Table 5: Elapsed search time for the molecular conformation of AlaX16 Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (1) 1 480.0 74027.80 154.22 74027.80 1.00 Toyo (16) 16 30.0 70414.21 146.70 4699.15 15.75 Dennis (28) 28 17.1 74027.80 154.22 3375.60 21.93 Alice (36) 36 13.3 90047.27 187.60 3260.41 22.71 Ume (56) 56 8.6 123399.38 257.08 2913.63 25.41 Dennis (28) + Toyo (16) 44 10.9 76747.74 159.89 2762.10 26.80 Alice (36) + Toyo (16) 52 9.2 82700.44 172.29 2246.73 32.95 Dennis (28) + Alice (36) 64 7.5 87571.30 182.44 2051.50 36.08 Toyo (16) + Ume (56) 72 6.7 109671.32 228.48 2617.85 28.28 Dennis (28) + Ume (56) 84 5.7 102817.90 214.20 2478.93 29.86 Dennis(28)+Ume(56)+Toyo(16) 100 4.8 98238.07 204.66 2478.93 29.86 Table 6: Elapsed time of the search for the trial structure of 1L2Y.",
                "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 331.0 867 286,967 79.71 1.00 Toyo MPI (16) 16 20.7 867 18,696 5.19 15.34 Dennis (28) 28 11.8 803 14,101 3.91 20.35 Dennis (28) + Ume(56) 84 3.9 1,064 8,316 2.31 34.50 Table 7: Elapsed time of the search for the trial structure of 1BL1.",
                "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 519.0 3,646 1892,210 525.61 1.00 Toyo MPI (16) 16 32.4 3,646 120,028 33.34 15.76 Dennis (28) 28 18.5 3,154 61,803 17.16 30.61 Dennis (28) + Ume (56) 84 6.1 4,497 33,502 9.30 56.48 160 number of trial structures generated in each iteration, indicating the degree of parallelism.",
                "Figure 3 also summarizes the amount of data transmission required for initialization of a worker program and for optimization of each trial structure.",
                "Note that the amount of data transmission, which is required in order to initialize a worker program and optimize a trial structure in the MPI version of CONFLEX, is equal to that of CONFLEX-G. We used an improvement version of MM2 force field to assign a potential energy function to various geometric properties of a group of atoms. 4.2.1 Performance in a Local Cluster We first compared the performance of CONFLEX-G, the MPI version of CONFLEX, and the original sequential version of CONFLEX-G using a local cluster.",
                "We investigated performance by varying the number of workers using the Dennis cluster.",
                "We chose AlaX04 as a test molecule for this experiment.",
                "Figure 7 compares the results for the CONFLEX MPI and CONFLEX-G in a local PC cluster.",
                "The result of this experiment shows that CONFLEX-G can reduce the execution time as the number of workers increases, as in the MPI version of CONFLEX.",
                "We found that CONFLEX-G achieved efficiencies comparable to the MPI version.",
                "With 28 workers, CONFLEX-G achieved an 18.00 times speedup compared to the CONFLEX sequential version.",
                "The performance of CONFLEX-G without the OmniRPC AIM facility is worse than that of CONFLEXG using the facility, based on the increase in the number of workers.",
                "This indicates that the OmniRPC AIM enables the worker to calculate efficiently without other calculations, such initialization or invocation of worker programs.",
                "As the number of workers is increased, the performance of CONFLEX-G is a slightly lower than that of the MPI version.",
                "This performance degradation is caused by differences in the worker initialization processes of CONFLEX-G and CONFLEX MPI.",
                "In the case of CONFLEX MPI, all workers are initialized in advance of the optimization phase.",
                "In the case of OminRPC, the worker is invoked on-demand when the RPC call is actually issued.",
                "Therefore, the initialization incurs this overhead.",
                "Since the objective of CONFLEX-G is to explore the conformations of large bio-molecules, the number of trial structures and the time to optimize the trial structure might be large.",
                "In such cases, the overhead to invoke and initialize the worker program can be small compared to the entire elapsed time. 4.2.2 Performance for Peptides in The Grid Testbed First, the sample molecules (AlaX04 and AlaX16) were used to examine the CONFLEX-G performance in a grid environment.",
                "Figure 8 shows the speedup achieved by using multiple clusters compared to using one worker in the Dennis cluster.",
                "Detailed results are shown in Table 4 and Table 5.",
                "In both cases, the best performance was obtained using 64 workers of the combination of the Dennis and Alice clusters.",
                "CONFLEX-G achieved a maximum speedup of 36.08 times for AlaX04 and a maximum speedup of 21.91 times for AlaX16.",
                "In the case of AlaX04, the performance is improved only when the network performance between clusters is high.",
                "However, even if two or more clusters are used in a wide area network environment, the performance improvement was slight because the optimization time of one trial structure generated from AlaX04, a small molecule, is short.",
                "In addition, the overhead required for invocation of a worker program and network data transmission consume a large portion of the remaining processing time.",
                "In particular, the data transmission required for the initialization of a worker program is 2 MB.",
                "In the case of Toyo cluster, where the network performance between the client program and the worker programs is poor, the time of data transmission to the worker program required approximately 6.7 seconds.",
                "Since this transmission time was longer than the processing time of one structure optimization in CONFLEX-G, most of the time was spent for this data transmission.",
                "Therefore, even if CONFLEX-G uses a large number of calculation nodes in a wide area network environment, the benefit of using a grid resource is not obtained.",
                "In the case of AlaX16, CONFLEX-G achieved a speedup by using two or more PC clusters in our grid testbed.",
                "This was because the calculation time on the worker program was long and the overhead, such as network latency and the invoking of worker programs, became relatively small and could be hidden.",
                "The best performance was obtained using 64 workers in the Dennis and Alice clusters.",
                "In the case of AaX16, the achieved performance was a speedup of 36.08 times.",
                "Figure 9 reveals the effect of using the facility of the OmniRPC AIM on CONFLEX-G performance.",
                "In most cases, CONFLEX-G with the OmniRPC AIM facility archived better performance than CONFLEX-G without the facility.",
                "In particular, the OmniRPC AIM facility was advantageous when using two clusters connected by a low-performance network.",
                "The results indicate that the OmniRPC AIM facility can improve performance in the grid environment. 4.2.3 PerformanceforSmallProteininTheGridTestbed Finally, we explored the molecular conformation using CONFLEX-G for large molecules.",
                "In a grid environment, this experiment was conducted using the Dennis and Ume clusters.",
                "In this experiment, we used two proteins, 1L2Y and 1BL1.",
                "Table 6 and Table 7 show the performance of CONFLEX-G in the grid environment and that of CONFLEX MPI in the Toyo cluster, respectively.",
                "The speedups in these tables were computed respectively based on the performance of one worker and 16 workers of the Toyo cluster using CONFLEX MPI.",
                "CONFLEX-G with 84 workers in Dennis and Ume clusters obtained maximum speedups of 56.5 times for 1L2Y and 34.5 times for 1L2Y.",
                "Since the calculation time for structure optimization required a great deal of time, the ratio of overhead, including tasks such as the invocation of a worker program and data transmission for initialization, became very small, so that the performance of CONFLEX-G was improved.",
                "We found that the load imbalance in the processing time of optimization for each trial structure caused performance degradation.",
                "When we obtained the best performance for 1L2Y using the Dennis and Ume clusters, the time for each structure optimization varied from 190 to 27,887 seconds, and the ratio between the longest and shortest times was 13.4.",
                "For 1BL1, the ratio of minimum time over maximum time was 190.",
                "In addition, in order that the worker program wait until the completion of optimization of all trial structures, all worker programs were found to wait in an idle state for approximately 6 hours.",
                "This has caused the performance degradation of CONFLEX-G. 161 4.3 Discussion In this subsection, we discuss the improvement of the performance reflected in our experiments.",
                "Exploiting parallelism - In order to exploit more computational resources, it is necessary to increase the degree of parallelism.",
                "In this experiment, the degree of parallelism was not so large in the case of the sample molecules.",
                "When using a set of over 500 computing nodes for 1BL1, the number of one trial structures assigned to each worker will be only one or two.",
                "If over 100 trial structures are assigned to each worker program, calculation can be performed more efficiently due to the reduction of the overhead for worker invocation and initialization via the facility of the OmniRPC AIM.",
                "One idea for increasing parallelism is to overlap the execution of two or more sets of trial structures.",
                "In the current algorithm, a set of trial structures is generated from one initial structure and computed until optimizations for all structures in this set are calculated.",
                "Furthermore, this will help to improve load imbalance.",
                "By having other sets of trial structures overlap, even if some optimizations require a long time, the optimization for the structures in other sets can be executed to compensate for the idle workers for other optimizations.",
                "It is however unclear how such modification of the algorithm might affect the quality of the final results in terms of a conformation search.",
                "Improvement in load imbalance when optimizing each trial structure - Table 8 lists the statistics for optimization times of trial structures generated for each sample molecule measured using 28 workers in the Dennis cluster.",
                "When two or more sets of PC clusters are used, the speedup in performance is hampered by the load imbalance of the optimization of the trial structures.",
                "The longest time for optimizing a trial structure was nearly 24 times longer than the shortest time.",
                "Furthermore, other workers must wait until the longest job has Finished, so that the entire execution time cannot be reduced.",
                "When CONFLEX-G searched the conformers of 1BL1 by the Dennis cluster, the longest calculation time of the trial structure optimization made up approximately 80% of the elapsed time.",
                "Therefore, there are two possible solutions for the load Imbalance. • It is necessary to refine the algorithm used to generate the trial structure, which suppresses the time variation for optimizing a trial structure in CONFLEX.",
                "This enables CONFLEX-G to achieve high-throughput by using many computer resources. • One of the solutions is to overlap the executions for two or more sets of trial structures.",
                "In the current algorithms, a set of trial structures is generated from one initial structure and calculation continues until all structures in this set are calculated.",
                "By having other sets of trial structures, even if a structure search takes a long time, a job can be executed in order to compensate the load imbalance by other jobs.",
                "However, how such modification of the algorithms might affect the efficiency is not clear. • In this experiment, we used a simple build-in roundrobbin scheduler of OmniRPC, which is necessary in order to apply the scheduler that allocates structures with long optimization times to a high-performance Table 8: Statistics of elapsed time of trial structure optimization using 28 workers in the Dennis cluster.",
                "Molecular Min Max Average Variance code (s) (s) (s) AlaX04 2.0 11.3 5.3 3 AlaX16 47.6 920.0 154.2 5404 1L2Y 114.2 13331.4 803.2 636782 1BL1 121.0 29641.8 3153.5 2734811 node and structures with short optimization times to low-performance nodes.",
                "In general, however, it might be difficult to predict the time required for trial structure optimization.",
                "Parallelization of the worker program for speedup to optimize a trial structure - In the current implementation, we do not parallelize the worker program.",
                "In order to speed up trial structures, hybrid programming using OmniRPC and OpenMP in an SMP (Symmetric Multiple Processor) machine may be one of the alternative methods by which to improve overall performance. 5.",
                "RELATED WORK Recently, an algorithm has been developed that solves the problems of parallelization and communication in poorly connected processors to be used for simulation.",
                "The Folding@home project[13] simulates timescales thousands to millions of times longer than previously achieved.",
                "This has allowed us to simulate folding for the first time and to directly examine folding related diseases.",
                "SETI@home[14] is a program to search for alien life by analyzing radio telescope signals using Fourier transform radio telescope data from telescopes from different sites.",
                "SETI@home tackles immensely parallel problems, in which calculation can easily be divided among several computers.",
                "Radio telescope data chunks can easily be assigned to different computers.",
                "Most of these efforts explicitly develop a docking application as a parallel application using a special purpose parallel programming language and middleware, such as MPI, which requires development skills and effort.",
                "However, the skills and effort required to develop a grid application may not be required for OmniRPC.",
                "Nimrod/G[15] is a tool for distributed parametric modeling and implements a parallel task farm for simulations that require several varying input parameters.",
                "Nimrod incorporates a distributed scheduling component that can manage the scheduling of individual experiments to idle computers in a local area network.",
                "Nimrod has been applied to applications including bio-informatics, operations research, and molecular modeling for drug design.",
                "NetSolve[8] is an RPC facility similar to OmniRPC and Ninf, providing a similar programming interface and automatic load balancing mechanism.",
                "Ninf-G[7] is a grid-enabled implementation of Ninf and provides a GridRPC[10] system that uses LDAP to manage the database of remote executables, but does not support clusters involving private IP addresses or addresses inside a firewall.",
                "Matsuoka et al. [16] has also discussed several design issues related to grid RPC systems. 162 6.",
                "CONCLUSIONS AND FUTURE WORK We have designed and implemented CONFLEX-G using OmniRPC.",
                "We reported its performance in a grid testbed of several geographically distributed PC clusters.",
                "In order to explore the conformation of large bio-molecules, CONFLEXG was used to generate trial structures of the molecules, and allocate jobs to optimize them by <br>molecular mechanic</br>s in the grid.",
                "OmniRPC provides a restricted persistence model so that the module is automatically initialized at invocation by calling the initialization procedure.",
                "This can eliminate unnecessary communication and the initialization at each call in CONFLEX-G. CONFLEX-G can achieves performance comparable to CONFLEX MPI and exploits more computing resources by allowing the use of multiple PC clusters in the grid.",
                "The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times for the 1BL1 molecule, where the molecule consists of a large number of atoms and each trial structure optimization requires a great deal of time.",
                "The load imbalance of the trial structure optimizations may cause performance degradation.",
                "We need to refine the algorithm used to generate the trial structure in order to improve the load balance optimization for trial structures in CONFLEX.",
                "Future studies will include development of deployment tools and an examination of fault tolerance.",
                "In the current OmniRPC, the registration of an execution program to remote hosts and deployments of worker programs are manually set.",
                "Deployment tools will be required as the number of remote hosts is increased.",
                "In grid environments in which the environment changes dynamically, it is also necessary to support fault tolerance.",
                "This feature is especially important in large-scale applications which require lengthy calculation in a grid environment.",
                "We plan to refine the conformational optimization algorithm in CONFLEX to explore the conformation space search of larger bio-molecules such HIV protease using up to 1000 workers in a grid environment. 7.",
                "ACKNOWLEDGMENTS This research was supported in part by a Grant-in-Aid from the Ministry of Education, Culture, Sports, Science and Technology in Japan, No. 14019011, 2002, and as part of the Program of Research and Development for Applying Advanced Computational Science and Technology by the Japan Science and Technology Corporation (Research on the grid computing platform for drug design).",
                "We would like to thank grid technology research center, AIST, Japan for providing computing resources for our experiment. 8.",
                "REFERENCES [1] H. Goto and E. Osawa.",
                "An efficient algorithm for searching low-energy conformers of cyclic and acyclic molecules.",
                "J. Chem.",
                "Soc., Perkin Trans, 2:187-198, 1993. [2] M. Sato, T. Boku, and D. Takahashi.",
                "OmniRPC: a Grid RPC System for Parallel Programming in Cluster and Grid Environment.",
                "In Proc. of CCGrid2003, pages 219-229, 2003. [3] M. Sato, M. Hirano, Y. Tanaka, and S. Sekiguchi.",
                "OmniRPC: a Grid RPC facility for Cluster and Global Computing in OpenMP.",
                "In Proc. of Workshop on OpenMP Applications and Tools 2001(LNCS 2104 ), pages 130-135, 2001. [4] OmniRPC Project. http://www.omni.hpcc.jp/omnirpc/. [5] M. Sato, H. Nakada, S. Sekiguchi, S. Matsuoka, U. Nagashima, and H. Takagi.",
                "Ninf: A Network Based Information Library for Global World-Wide Computing Infrastructure.",
                "In HPCN Europe, pages 491-502, 1997. [6] Ninf Project. http://ninf.apgrid.org/. [7] Y. Tanaka, H. Nakada, S. Sekiguchi, T. Suzumura, and S. Matsuoka.",
                "Ninf-G: A Reference Implementation of RPC-based Programming Middleware for Grid Computing .",
                "Journal of Grid Computing, 1(1):41-51, 2003. [8] D. Arnold, S. Agrawal, S. Blackford, J. Dongarra, M. Miller, K. Seymour, K. Sagi, Z. Shi, and S. Vadhiyar.",
                "Users Guide to NetSolve V1.4.1.",
                "Innovative Computing Dept.",
                "Technical Report ICL-UT-02-05, University of Tennessee, Knoxville, TN, June 2002. [9] Object management group. http://www.omg.org/. [10] K. Seymour, H. Nakada, S. Matsuoka, J. Dongarra, C. Lee, and H. Casanova.",
                "GridRPC: A Remote Procedure Call API for Grid Computing. [11] H.Goto, T. Takahashi, Y. Takata, K. Ohta, and U Nagashima.",
                "Conflex: Conformational behaviors of polypeptides as predicted by a conformational space search.",
                "In Nanotech2003, volume 1, pages 32-35, 2003. [12] I.",
                "Foster and C. Kesselman.",
                "Globus: A metacomputing infrastructure toolkit.",
                "The International Journal of Supercomputer Applications and High Performanc e Computing, 11(2):115-128, Summer 1997. [13] Stefan M. Larson, Christopher D. Snow, Michael Shirts, and Vijay S. Pande.",
                "Folding@home and genome@home: Using distributed computing to tackle prev iously intractable problems in computational biology.",
                "Computational Genomics, 2002. [14] seti@home project. http://setiathome.ssl.berkeley.edu/. [15] R. Buyya, K. Branson, J. Giddy, and D. Abramson.",
                "The virtual laboratory: a toolset to enable distributed molecular modelling for drug design on the world-wide grid.",
                "Concurrency and Computation: Practice and Experience, 15(1):1-25, January 2003. [16] S. Matsuoka, H. Nakada, M. Sato, and S. Sekiguchi.",
                "Design issues of Network Enabled Server Systems for the Grid.",
                "In Proc. of GRID 2000 (LNCS 1971), pages 4-17, 2000. 163"
            ],
            "original_annotated_samples": [
                "In order to explore many conformation of large bio-molecules, CONFLEX-G generates trial structures of the molecules and allocates jobs to optimize a trial structure with a reliable <br>molecular mechanic</br>s method in the grid.",
                "Since trial structure optimization in CONFLEX is calculated via <br>molecular mechanic</br>s, conformational space search can be performed quickly compared to that using molecular orbital calculation.",
                "In order to explore the conformation of large bio-molecules, CONFLEXG was used to generate trial structures of the molecules, and allocate jobs to optimize them by <br>molecular mechanic</br>s in the grid."
            ],
            "translated_annotated_samples": [
                "Para explorar muchas conformaciones de grandes biomoléculas, CONFLEX-G genera estructuras de prueba de las moléculas y asigna trabajos para optimizar una estructura de prueba con un método confiable de <br>mecánica molecular</br> en la cuadrícula.",
                "Dado que la optimización de la estructura de prueba en CONFLEX se calcula a través de la <br>mecánica molecular</br>, la búsqueda del espacio conformacional se puede realizar rápidamente en comparación con la que utiliza cálculos de orbitales moleculares.",
                "Para explorar la conformación de grandes biomoléculas, se utilizó CONFLEXG para generar estructuras de prueba de las moléculas y asignar trabajos para optimizarlas mediante <br>mecánica molecular</br> en la cuadrícula."
            ],
            "translated_text": "Implementación y Evaluación del Rendimiento de CONFLEX-G: Programa de Búsqueda de Espacio Conformacional Molecular Habilitado para Grid con OmniRPC. Hemos implementado CONFLEX-G utilizando un sistema de RPC en malla llamado OmniRPC. En este artículo, informamos sobre el rendimiento de CONFLEX-G en un banco de pruebas en red de varios clústeres de PC distribuidos geográficamente. Para explorar muchas conformaciones de grandes biomoléculas, CONFLEX-G genera estructuras de prueba de las moléculas y asigna trabajos para optimizar una estructura de prueba con un método confiable de <br>mecánica molecular</br> en la cuadrícula. OmniRPC proporciona un modelo de persistencia restringido para respaldar las aplicaciones de búsqueda paramétrica. En este modelo, cuando el procedimiento de inicialización está definido en el módulo RPC, el módulo se inicializa automáticamente en el momento de la invocación llamando al procedimiento de inicialización. Esto puede eliminar la comunicación y la inicialización innecesarias en cada llamada en CONFLEX-G. CONFLEXG puede lograr un rendimiento comparable al de CONFLEX MPI y puede aprovechar más recursos informáticos al permitir el uso de un clúster de múltiples clústeres en la cuadrícula. El resultado experimental muestra que CONFLEX-G logró una aceleración de 56.5 veces en el caso de la molécula 1BL1, donde la molécula consta de un gran número de átomos y cada optimización de la estructura de prueba requiere un tiempo significativo. El desequilibrio de carga en el tiempo de optimización de la estructura de prueba también puede causar degradación del rendimiento. Categorías y Descriptores de Asignaturas C.2.4 [Organización de Sistemas Informáticos]: RED DE COMUNICACIÓN DE COMPUTADORAS-Sistemas Distribuidos; J.2.4 [Aplicaciones Informáticas]: CIENCIAS FÍSICAS E INGENIERÍA Términos Generales Diseño, Rendimiento 1. INTRODUCCIÓN La elucidación de las conformaciones estables y el proceso de plegamiento de las proteínas es uno de los objetivos más fundamentales y desafiantes en las ciencias de la vida. Si bien algunas de las estructuras secundarias más comunes (por ejemplo, ciertos tipos de hélice, la lámina beta y la hélice) son bien conocidas, se requiere un análisis preciso de los miles de conformaciones químicamente importantes y un análisis de orden de pico-segundo de sus interconversiones conformacionales a través de los estados de transición en la superficie de energía potencial para la investigación de orden de microsegundo del proceso de plegamiento hacia la formación de la estructura terciaria. Recientemente, el concepto de la red computacional ha comenzado a atraer un interés significativo en el campo de la computación de alto rendimiento en red. Los rápidos avances en la tecnología e infraestructura de redes de área amplia han hecho posible construir entornos de computación distribuida a gran escala y alto rendimiento, o redes computacionales, que proporcionan acceso confiable, consistente y generalizado a enormes recursos computacionales. CONFLEX es uno de los programas de búsqueda de espacio conformacional más eficientes y confiables. Hemos aplicado este programa 154 a la paralelización utilizando computación global. El rendimiento del CONFLEX paralelizado permite explorar la región de energía más baja del espacio conformacional de péptidos pequeños en un tiempo transcurrido disponible utilizando un clúster de PC local. Dado que la optimización de la estructura de prueba en CONFLEX se calcula a través de la <br>mecánica molecular</br>, la búsqueda del espacio conformacional se puede realizar rápidamente en comparación con la que utiliza cálculos de orbitales moleculares. Aunque se utilizó la versión paralelizada de CONFLEX para calcular de forma paralela la optimización de la estructura, que representa más del 90% del procesamiento en la búsqueda de conformaciones moleculares, no se pudo lograr una mejora suficiente en la aceleración solo con este método. Por lo tanto, para polímeros de alto peso molecular de organismos vivos, como la proteasa del VIH, el uso de un solo clúster de PC es insuficiente debido a la necesidad de optimizar una gran cantidad de estructuras de prueba. Esto requiere los vastos recursos informáticos de un entorno de computación en malla. En este artículo, describimos CONFLEX-G, un programa de búsqueda conformacional molecular habilitado para grid, utilizando OmniRPC y reportamos su rendimiento en un grid de varios clusters de PC distribuidos geográficamente. El prototipo CONFLEX-G asigna la optimización de las estructuras de cálculo de prueba, que es una tarea muy consumidora de tiempo, a nodos trabajadores en el entorno de la red para obtener un alto rendimiento. Además, comparamos el rendimiento de CONFLEX-G en un clúster de PC local con el de un banco de pruebas en red. OmniRPC[2, 3, 4] es una implementación segura para hilos de Ninf RPC[5, 6], que es una facilidad de RPC de cuadrícula para la computación en entornos de cuadrícula. Varios sistemas adoptan el concepto de la RPC como el modelo básico para la computación en entornos de rejilla, incluyendo Ninf-G[7], NetSolve[8] y CORBA[9]. El sistema RPCstyle proporciona una interfaz de programación fácil de usar e intuitiva, que permite a los usuarios del sistema de cuadrícula crear fácilmente aplicaciones habilitadas para la cuadrícula. Para apoyar la programación paralela, un cliente de RPC puede emitir solicitudes de llamada asincrónicas a un ordenador remoto diferente para aprovechar el paralelismo en toda la red a través de OmniRPC. En este artículo, proponemos el modelo de persistencia OmniRPC para un sistema de RPC de Grid y demostramos su efectividad. Para apoyar una aplicación típica para un entorno de cuadrícula, como una aplicación de búsqueda paramétrica, en la que la misma función se ejecuta con diferentes parámetros de entrada en el mismo conjunto de datos. En el sistema GridRPC actual[10], el conjunto de datos establecido por la llamada anterior no puede ser utilizado por llamadas posteriores. En el sistema OmniRPC, una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado y su estado inicializado para llamadas posteriores a las mismas funciones remotas con el fin de eliminar el costo de invocación de cada llamada. Este documento demuestra que CONFLEX-G es capaz de aprovechar los enormes recursos informáticos de un entorno de grid y buscar conformadores moleculares a gran escala. Demostramos CONFLEX-G en nuestra plataforma de pruebas en red utilizando la proteína real como molécula de muestra. La facilidad OmniRPC del módulo inicializable automático (AIM) permite al sistema calcular eficientemente numerosos conformeros. Además, al utilizar OmniRPC, el usuario puede paralelizar en cuadrícula la aplicación existente y pasar del clúster al entorno de cuadrícula sin modificar el código del programa y compilar el programa. Además, el usuario puede construir fácilmente un entorno de red privada. El resto de este documento está organizado de la siguiente manera. Se presenta una visión general de la Base de Datos de Conformaciones de Estructuras Iniciales, la Perturbación Local, la Optimización de la Geometría, la Comparación y el Registro. Figura 1: Algoritmo de búsqueda de espacio conformacional en el CONFLEX original. El sistema CONFLEX se describe en la Sección 2, y la implementación y diseño de CONFLEX-G se detallan en la Sección 3. Informamos los resultados experimentales obtenidos utilizando CONFLEX-G y discutimos su rendimiento en la Sección 4. En la Sección 6, presentamos conclusiones y discutimos temas para estudios futuros. 2. CONFLEX es un programa eficiente de búsqueda de espacio conformacional, que puede buscar predominantemente y exhaustivamente los conformeros en la región de energía más baja. Las aplicaciones de CONFLEX incluyen la elucidación de la reactividad y selectividad de fármacos y posibles materiales medicinales con respecto a su flexibilidad conformacional. 2.1 Algoritmo de Búsqueda de Espacio Conformacional La estrategia básica de CONFLEX es una búsqueda exhaustiva solo de las regiones de baja energía. El CONFLEX original realiza los siguientes cuatro pasos principales: 1. Selección de una estructura inicial entre los conformeros únicos previamente descubiertos y ordenados en una base de datos conformacional. (Una estructura de entrada se utiliza como la primera estructura inicial al comienzo de una ejecución de búsqueda solamente.) 2. Generación de estructuras de prueba mediante perturbaciones locales a la estructura inicial seleccionada. 3. Optimización de geometría para las nuevas estructuras de prueba generadas. 4. Comparación de las estructuras optimizadas con éxito (ensayo) con los otros conformeros almacenados en una base de datos de conformaciones, y preservación de los conformeros únicos recién descubiertos en la base de datos. La Figura 1 muestra el esquema de CONFLEX, el algoritmo original de búsqueda de espacio conformacional. Estos procedimientos incorporan dos estrategias únicas. La Figura 2 muestra las estrategias para generar perturbaciones locales en CONFLEX. La primera estrategia implica tanto el aleteo de las esquinas como el volteo de los bordes para los átomos del anillo y la rotación paso a paso para las cadenas laterales o cadenas del esqueleto. Estos métodos proporcionan una forma altamente eficiente de producir varias estructuras de prueba buenas. Estas perturbaciones pueden considerarse como una imitación de 155 Rotación Escalonada de Esquina de Solapa de Borde de Giro Figura 2: Estrategias utilizadas para generar las perturbaciones locales, un paso de cruce de barrera en el proceso elemental de la interconversión conformacional térmica. De hecho, las perturbaciones de una estructura inicial corresponden al rendimiento preciso alrededor del espacio de la estructura inicial debido a la localización y debilidad de la perturbación. La regla de selección de la estructura inicial, la regla LowestConformer-First, es la segunda estrategia para dirigir la búsqueda de conformaciones ampliada a las regiones de baja energía. La estructura inicial se selecciona como el conjunto de conformaciones de menor energía almacenadas en la base de datos de conformaciones. Esta regla es efectiva para desplazarse hacia abajo en el espacio de búsqueda hacia regiones de menor energía, como el agua de un arroyo que fluye hacia un embalse vacío, llenando depresiones locales en el camino. Por lo tanto, estos procedimientos tácticos de la búsqueda CONFLEX se conocen como el Algoritmo de Llenado de Reservorio. Para permanecer en la región de baja energía y realizar una búsqueda exhaustiva, el límite de búsqueda (SEL), que determina la energía máxima de las estructuras iniciales, está predefinido. El aumento gradual de SEL permite buscar solo los conformeros de baja energía y evita desviarse hacia regiones de energía innecesariamente alta. 2.2 Paralelización de CONFLEX para clúster Para su aplicación en más de 100 átomos, CONFLEX fue mejorado utilizando técnicas de computación paralela de alto rendimiento. En el algoritmo de búsqueda CONFLEX, los procedimientos de optimización de geometría siempre ocupan el 95% del tiempo transcurrido durante la ejecución de la búsqueda. Por lo tanto, paralelizamos esta optimización utilizando la técnica de paralelización Maestro/Trabajador. Modificamos los procedimientos de búsqueda de la siguiente manera. Después de que se generan las estructuras de prueba (paso 2), se almacenan temporalmente en un grupo de tareas en el nodo maestro. Entonces, cada nodo trabajador recibe dinámicamente una estructura de prueba del nodo maestro. Después de que se complete una optimización en un nodo de trabajador, este recibe inmediatamente otra estructura de prueba. Cuando todas las estructuras de prueba relacionadas con una estructura inicial dada están optimizadas, solo se utiliza el procedimiento principal para la comparación. Al paralelizar CONFLEX, la aceleración de la búsqueda de conformadores moleculares obtenida es la reportada en[11]. 3. CONFLEX-G Originalmente, CONFLEX estaba destinado a ser utilizado para explorar los conformeros de las grandes biomoléculas, como la proteasa del VIH. En tales moléculas, el número de estructuras de prueba aumenta y el tiempo requerido para la optimización de la Selección de RPC de Estructuras Iniciales Conformaciones de la Base de Datos de Perturbación Local Comparación y Registro del Cliente Programa Cliente Grupo de Tareas de Optimización Geométrica RPC Entorno de Rejilla RPC Cluster B Cluster A Cluster C Estructura de prueba Estructura de prueba Estructura de prueba Estructura de prueba Figura 3: Procedimiento de CONFLEX-G. agente rexrex rex Cliente jones.tsukuba.ac.jp hpc-serv.hpcc.jp hpc1 hpc2 hpc3 Invocación del agente Comunicación de la red Figura 4: Visión general del sistema OmniRPC para el clúster remoto con una dirección IP privada. la estructura de prueba se vuelve inmensa. Implementamos la versión paralelizada de CONFLEX, la cual no puede tratar tales moléculas utilizando solo un clúster de PC local. Para aprovechar los vastos recursos informáticos de un entorno de grid, diseñamos e implementamos CONFLEX-G, que es una versión habilitada para grid de CONFLEX, con el sistema OmniRPC. CONFLEX-G asigna trabajos para optimizar una estructura de prueba a los nodos computacionales de cada clúster en el entorno de la red. La Figura 3 muestra el proceso de CONFLEX-G. Los programas de los trabajadores se inicializan mediante el método de inicialización, que es proporcionado por la instalación de OmniRPC AIM en la invocación del trabajador. En cada llamada RPC, el estado inicializado se reutiliza en el host remoto. En otras palabras, el programa cliente puede eliminar la inicialización para cada llamada RPC, y por lo tanto optimizar eficientemente las estructuras de prueba. 3.1 El sistema OmniRPC OmniRPC es un sistema de RPC en malla que permite una programación paralela sin problemas desde un clúster de PC hasta un entorno de malla. OmniRPC hereda su API y arquitectura básica de Ninf. Un cliente y los hosts computacionales remotos que ejecutan los procedimientos remotos pueden estar conectados a través de una red. Las bibliotecas remotas se implementan como un programa ejecutable que contiene una rutina de soporte de red como su rutina principal. Llamamos a este programa ejecutable un programa ejecutable remoto (rex). Cuando el programa cliente OmniRPC se inicia, la función de inicialización del sistema OmniRPC invoca el programa agente OmniRPC omrpc-agent en los hosts remotos listados en el archivo de hosts. Para invocar al agente, el usuario puede utilizar el comando de shell remoto rsh en una red de área local, la API de GRAM (Gestor de Asignación de Recursos Globus) del kit de herramientas Globus 156 en un entorno de grid, o el comando de shell remoto seguro ssh. El usuario puede cambiar las configuraciones solo modificando el archivo de host. OmniRpcCall es una interfaz de programación de cliente simple para llamar a funciones remotas. Cuando OmniRpcCall realiza una llamada a un procedimiento remoto, la llamada se asigna a un host remoto apropiado. Cuando el cliente emite la solicitud de RPC, solicita que el agente en el host seleccionado envíe el trabajo del ejecutable remoto con el programador de trabajos local especificado en el archivo del host. Si no se especifica el programador de tareas, el agente ejecuta el ejecutable remoto en el mismo nodo mediante la llamada al sistema fork. El cliente envía los datos de los argumentos de entrada al ejecutable remoto invocado, y recibe los resultados al regreso de la función remota. Una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado para llamadas RPC posteriores con el fin de eliminar el costo de invocar nuevamente el mismo ejecutable remoto. Cuando el agente y los ejecutables remotos son invocados, los programas remotos obtienen la dirección y el puerto del cliente de la lista de argumentos y se conectan de vuelta al cliente mediante TCP/IP directo o Globus-IO para la transmisión de datos. Debido a que el sistema OmniRPC no utiliza puertos de servicio fijos, el programa cliente asigna puertos no utilizados dinámicamente para esperar la conexión de los ejecutables remotos. Esto evita posibles problemas de seguridad y permite al usuario instalar el sistema OmniRPC sin necesidad de contar con una cuenta privilegiada. Aquí, un recurso de red típico se considera como un grupo de clústeres de PC distribuidos geográficamente. Para los clústeres de PC en una red privada, un proceso agente OmniRPC en el host del servidor funciona como un proxy para relé de comunicaciones entre el cliente y los ejecutables remotos mediante la multiplexación de las comunicaciones utilizando una única conexión. Esta característica, llamada multiplex IO (MXIO), permite a un único cliente utilizar hasta 1,000 hosts de computación remota. Cuando el clúster de PC está dentro de un firewall, el reenvío de puertos de SSH permite que el nodo se comunique con el exterior a través de MXIO. La Figura 4 muestra la descripción general del sistema OmniRPC para un clúster remoto con una dirección IP privada. Para la programación en paralelo, el programador puede utilizar llamadas a procedimientos remotos asíncronos, lo que permite al cliente emitir varias solicitudes mientras continúa con otras computaciones. Las solicitudes se envían a diferentes hosts remotos para ser ejecutadas en paralelo, y el cliente espera o consulta la solicitud completada. En un modelo de programación con llamadas a procedimientos remotos asíncronos, el programador debe manejar las solicitudes pendientes de forma explícita. Debido a que OmniRPC es un sistema seguro para hilos, puede haber varios llamados a procedimientos remotos pendientes en cualquier momento para programas multi-hilo escritos en OpenMP. Modelo de persistencia de OmniRPC 3.2: módulo inicializable automáticamente. OmniRPC soporta eficientemente aplicaciones paralelas típicas de Maestro/Trabajador como programas de ejecución paramétrica. Para aplicaciones de búsqueda paramétrica, que a menudo requieren una gran cantidad de datos idénticos para cada llamada, OmniRPC admite un modelo de persistencia limitado, que está implementado por el módulo inicializable automático. El usuario puede definir un procedimiento de inicialización en el ejecutable remoto para enviar y almacenar datos automáticamente antes de las llamadas reales al procedimiento remoto. Dado que el ejecutable remoto puede aceptar solicitudes para llamadas posteriores, el conjunto de datos que ha sido establecido por el procedimiento de inicialización puede ser reutilizado. Como resultado, el programa del trabajador puede ejecutarse de manera eficiente y reducir la cantidad de datos transmitidos para la inicialización. Una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado para llamadas RPC posteriores. Sin embargo, OmniRPC no garantiza la persistencia del ejecutable remoto, por lo que el conjunto de datos establecido por la llamada anterior no puede ser utilizado por llamadas posteriores. Esto se debe a que una llamada remota realizada por OmniRpcCall puede ser programada en cualquier host remoto de forma dinámica, y los ejecutables remotos pueden ser terminados accidentalmente debido a una reprogramación dinámica o fallos en el host. Sin embargo, la persistencia del ejecutable remoto puede ser explotada en ciertas aplicaciones. Un ejemplo es una aplicación de búsqueda paramétrica: en dicha aplicación, sería eficiente si un gran conjunto de datos pudiera cargarse previamente en la primera llamada, y las llamadas posteriores pudieran realizarse en los mismos datos, pero con diferentes parámetros. Este es el caso para CONFLEX. OmniRPC proporciona un modelo de persistencia restringido a través del módulo inicializable automático (AIM) para apoyar este tipo de aplicación. Si el procedimiento de inicialización está definido en el módulo, el módulo se inicializa automáticamente al invocarlo llamando al procedimiento de inicialización. Cuando el ejecutable remoto se reprograma en diferentes hosts, se llama a la inicialización para inicializar el módulo remoto recién asignado. Esto puede eliminar comunicaciones innecesarias cuando las llamadas RPC utilizan los mismos datos. Para revelar más sobre la diferencia en el progreso entre los casos con OmniRPC AIM y sin OmniRPC AIM, presentamos dos figuras. La Figura 5 ilustra el gráfico de tiempo del progreso de una aplicación típica de OmniRPC utilizando la facilidad OmniRPC AIM, y la Figura 6 ilustra el gráfico de tiempo de la misma aplicación sin la facilidad OmniRPC AIM. En ambas figuras, las líneas entre los diamantes representan los procesos de inicialización, y las líneas entre los puntos representan los cálculos. La línea en negrita indica el momento en que el programa cliente envía los datos al programa trabajador. Es necesario que la aplicación sin la funcionalidad OmniRPC AIM se inicialice en cada RPC. La aplicación que utiliza la funcionalidad OmniRPC AIM puede reutilizar los datos inicializados una vez que el conjunto de datos está inicializado. Esto puede reducir la inicialización en cada RPC. Los trabajadores de la aplicación con AIM pueden calcular de manera eficiente en comparación con la aplicación sin la facilidad de AIM de OmniRPC. 3.3 Implementación de CONFLEX-G utilizando OmniRPC. La Figura 3 muestra una visión general del proceso utilizado en CONFLEX-G. Usando RPCs, CONFLEX-G asigna los procesos de optimización de la estructura de prueba, que son realizados por los nodos de cálculo de un clúster de PC en la versión MPI de CONFLEX, a los nodos computacionales de cada clúster en un entorno de grid. Hay dos cálculos que realizan los programas de trabajador en CONFLEX-G. Uno es la inicialización de un programa de trabajador, y otro es el cálculo de la optimización de la estructura de prueba. Primero, la instalación OmniRPC del AIM se adapta para la inicialización de un programa trabajador. Esta instalación llama automáticamente a la función de inicialización, la cual está contenida en el programa de trabajador, una vez que el programa cliente invoca al programa de trabajador en un nodo remoto. Es necesario que el sistema RPC común, incluido GridRPC, inicialice un programa para cada llamada RPC, ya que la persistencia de datos de los programas trabajadores. Tabla 1: Configuraciones de máquinas en la plataforma de pruebas en red. El nombre del clúster del sitio Máquina Red de Autenticación # de Nodos # de CPUs Univ. de Tsukuba Dennis Dual Xeon 2.4GHz 1Gb Ethernet Globus, SSH 14 28 Alice Dual Athlon 1800+ 100Mb Ethernet Globus, SSH 18 36 TUT Toyo Dual Athlon 2600+ 100Mb Ethernet SSH 8 16 AIST Ume Dual Pentium3 1.4GHz 1Gb Ethernet Globus, SSH 32 64 no es compatible. En OmniRPC, sin embargo, cuando se define la función remota Inicializar en el programa del trabajador y se asigna un nuevo programa de trabajador, correspondiente al otro RPC, para ejecutar, se llama automáticamente a una función Inicializar. Por lo tanto, después de la llamada a la función Initialize para configurar los datos de inicialización comunes, un programa trabajador puede reutilizar estos datos y aumentar la eficiencia de sus procesos. Por lo tanto, cuanto mayor sea el costo de configuración, mayor será el beneficio potencial. Implementamos el programa de trabajador de CONFLEX-G para recibir datos, como parámetros de evaluación de energía, de un programa cliente y para ser inicializado por la función Inicializar. Organizamos el programa del cliente de CONFLEX-G para transferir el archivo de parámetros en el momento de la inicialización del trabajador. Esto permite que la ejecución se realice modificando solo la configuración del cliente si el usuario desea ejecutar CONFLEX-G con un conjunto de datos diferente. Segundo, para calcular la optimización de la estructura de prueba en un programa de trabajador, el programa de trabajador debe recibir los datos, como el arreglo de átomos de la estructura de prueba y el estado de energía interna. El resultado se devuelve al programa cliente después de que el trabajador haya optimizado la estructura de prueba. Dado que la parte de cálculo de la optimización de la estructura en este programa de trabajador puede ser calculada de forma independiente utilizando diferentes parámetros, paralelizamos esta parte utilizando RPC asincrónicos en el lado del cliente. Para llamar a la función de optimización de estructuras en un programa trabajador desde el programa cliente, utilizamos la API OmniRpcCallAsync, la cual está diseñada para RPC asincrónico. Además, la API OmniRpcCallWaitAll espera hasta que se utilicen todas las RPC asíncronas para realizar la sincronización una vez que todas las RPC asíncronas se hayan completado, con el fin de optimizar la estructura de la prueba. El programa cliente que asigna la optimización de la estructura de prueba al nodo de cálculo de un clúster de PC utilizando RPC se describe de la siguiente manera. OmniRpcInit() OmniRpcModuleInit(conflex_search,...); ... mientras( <nuevos conformeros> ) { para cada( <estructuras de prueba> ) OmniRpcCallAsync(conflex_search_worker, ...); OmniRpcWaitAll(); ... Ten en cuenta que la API OmniRpcModuleInit solo devuelve los argumentos necesarios para la inicialización y no ejecutará realmente la función de inicialización. Como se describe arriba, la inicialización real se realiza en la primera llamada remota. Dado que el sistema OmniRPC tiene un programador de round-robin sencillo, no es necesario escribir explícitamente el código para el equilibrio de carga. Por lo tanto, los RPC se asignan automáticamente a los trabajadores inactivos. Tabla 2: Rendimiento de la red entre el nodo maestro del clúster Dennis y el nodo maestro de cada clúster de PC. Rendimiento de ida y vuelta del clúster Tiempo (ms) (Mbps) Dennis 0.23 879.31 Alice 0.18 94.12 Toyo 11.27 1.53 Ume 1.07 373.33 RESULTADOS PRELIMINARES 4.1 Banco de pruebas de la red El banco de pruebas de la red fue construido utilizando recursos informáticos de la Universidad de Tsukuba, la Universidad de Tecnología de Toyohashi (TUT) y el Instituto Nacional de Ciencia y Tecnología Industrial Avanzada (AIST). La Tabla 1 muestra los recursos informáticos utilizados para la red del presente estudio. La Universidad de Tsukuba y AIST están conectadas por una red WAN de 1 Gbps en Tsukuba, y los otros clústeres de PC están conectados por SINET, que es una red de área amplia dedicada a la investigación académica en Japón. La Tabla 2 muestra el rendimiento de la red medida entre el nodo maestro del clúster Dennis y el nodo maestro de cada clúster de PC en el banco de pruebas de la red. El rendimiento de CONFLEX-G En todos los experimentos de CONFLEX-G, el programa cliente se ejecutó en el nodo maestro del clúster Dennis en la Universidad de Tsukuba. El planificador Round-Robin incorporado de OmniRPC se utilizó como planificador de tareas. Se utilizó SSH para un sistema de autenticación, el OminRPCs MXIO, que retransmite la comunicación de E/S entre el programa cliente y los programas trabajadores mediante el reenvío de puertos de SSH, no se utilizó. Se debe tener en cuenta que un programa de trabajador se asigna y se ejecuta en una CPU de un nodo de cálculo en un clúster de PC. Es decir, el número de trabajadores es igual al número de CPUs. Estos programas fueron compilados por el Intel Fortran Compiler 7.0 y gcc 2.95. Se utilizó MPICH, Versión 1.2.5, para comparar el rendimiento entre CONFLEX MPI y CONFLEX-G. Para demostrar la usabilidad de la instalación OmniRPC de AIM, implementamos otra versión de CONFLEX-G que no utilizaba la instalación OmniRPC. El programa del trabajador en esta versión de CONFLEXG debe inicializarse en cada RPC porque el trabajador no conserva el conjunto de datos anterior. Para examinar el rendimiento de CONFLEX-G, seleccionamos dos péptidos y dos proteínas pequeñas como moléculas de prueba: • N-acetil tetra-alanina metilester (AlaX04) • N-acetil hexadeca-alanina metilester (AlaX16) • Construcción de miniproteína TRP-cage TC5B (1L2Y) • Fragmento del extremo N del receptor de PTH (1BL1) La Tabla 3 enumera las características de estas moléculas de muestra. La estructura de prueba de columnas / bucles en esta tabla muestra la Figura 7: Rendimientos de CONFLEX-G, CONFLEX MPI y CONFLEX Original en el clúster Dennis. Figura 8: Proporción de aceleración, que se basa en el tiempo transcurrido de CONFLEX-G utilizando un trabajador en el clúster de Dennis. Figura 9: Rendimiento de CONFLEX-G con y sin la facilidad OmniRPC del módulo inicializable automático para AlaX16. Tabla 3: Características de las moléculas y transmisión de datos para optimizar las estructuras moleculares de prueba en cada código molecular. Tabla 4: Tiempo de búsqueda transcurrido para la conformación molecular de AlaX04. Tabla 6: Tiempo transcurrido de la búsqueda de la estructura de prueba de 1L2Y. Tabla 7: Tiempo transcurrido de la búsqueda de la estructura de prueba de 1BL1. Número total de estructuras del clúster Tiempo de optimización Transcurrido Velocidad transcurrida (# de trabajadores) trabajadores / trabajador / estructura (s) tiempo (s) tiempo (H) hasta Toyo MPI (1) 1 519.0 3,646 189,210 525.61 1.00 Toyo MPI (16) 16 32.4 3,646 120,028 33.34 15.76 Dennis (28) 28 18.5 3,154 61,803 17.16 30.61 Dennis (28) + Ume (56) 84 6.1 4,497 33,502 9.30 56.48 160 número de estructuras de prueba generadas en cada iteración, indicando el grado de paralelismo. La Figura 3 también resume la cantidad de transmisión de datos requerida para la inicialización de un programa de trabajador y para la optimización de cada estructura de prueba. Ten en cuenta que la cantidad de transmisión de datos necesaria para inicializar un programa de trabajador y optimizar una estructura de prueba en la versión MPI de CONFLEX es igual a la de CONFLEX-G. Utilizamos una versión mejorada del campo de fuerza MM2 para asignar una función de energía potencial a varias propiedades geométricas de un grupo de átomos. 4.2.1 Rendimiento en un clúster local. Primero comparamos el rendimiento de CONFLEX-G, la versión MPI de CONFLEX y la versión secuencial original de CONFLEX-G utilizando un clúster local. Investigamos el rendimiento variando el número de trabajadores utilizando el clúster Dennis. Elegimos AlaX04 como molécula de prueba para este experimento. La Figura 7 compara los resultados para el CONFLEX MPI y el CONFLEX-G en un clúster de PC local. El resultado de este experimento muestra que CONFLEX-G puede reducir el tiempo de ejecución a medida que aumenta el número de trabajadores, al igual que en la versión MPI de CONFLEX. Descubrimos que CONFLEX-G logró eficiencias comparables a la versión MPI. Con 28 trabajadores, CONFLEX-G logró una mejora de velocidad de 18.00 veces en comparación con la versión secuencial de CONFLEX. El rendimiento de CONFLEX-G sin la funcionalidad AIM de OmniRPC es peor que el de CONFLEX-G que utiliza la funcionalidad, basado en el aumento en el número de trabajadores. Esto indica que el OmniRPC AIM permite al trabajador calcular de manera eficiente sin necesidad de realizar otros cálculos, como la inicialización o la invocación de programas de trabajador. A medida que se aumenta el número de trabajadores, el rendimiento de CONFLEX-G es ligeramente inferior al de la versión MPI. Esta degradación del rendimiento es causada por diferencias en los procesos de inicialización de los trabajadores de CONFLEX-G y CONFLEX MPI. En el caso de CONFLEX MPI, todos los trabajadores se inicializan antes de la fase de optimización. En el caso de OminRPC, el trabajador es invocado bajo demanda cuando la llamada RPC es emitida realmente. Por lo tanto, la inicialización conlleva este sobrecosto. Dado que el objetivo de CONFLEX-G es explorar las conformaciones de grandes bio-moléculas, el número de estructuras de prueba y el tiempo para optimizar la estructura de prueba podrían ser grandes. En tales casos, el gasto general para invocar e inicializar el programa de trabajador puede ser pequeño en comparación con el tiempo total transcurrido. 4.2.2 Rendimiento para Péptidos en el Banco de Pruebas de la Red En primer lugar, las moléculas de muestra (AlaX04 y AlaX16) se utilizaron para examinar el rendimiento de CONFLEX-G en un entorno de red. La Figura 8 muestra la aceleración lograda al utilizar múltiples clústeres en comparación con el uso de un solo trabajador en el clúster de Dennis. Los resultados detallados se muestran en la Tabla 4 y la Tabla 5. En ambos casos, el mejor rendimiento se obtuvo utilizando 64 trabajadores de la combinación de los clústeres de Dennis y Alice. CONFLEX-G logró una aceleración máxima de 36.08 veces para AlaX04 y una aceleración máxima de 21.91 veces para AlaX16. En el caso de AlaX04, el rendimiento mejora solo cuando el rendimiento de la red entre clústeres es alto. Sin embargo, aunque se utilicen dos o más grupos en un entorno de red de área amplia, la mejora en el rendimiento fue leve debido a que el tiempo de optimización de una estructura de prueba generada a partir de AlaX04, una molécula pequeña, es corto. Además, los gastos generales necesarios para la invocación de un programa de trabajador y la transmisión de datos a través de la red consumen una gran parte del tiempo de procesamiento restante. En particular, la transmisión de datos necesaria para la inicialización de un programa de trabajador es de 2 MB. En el caso del clúster Toyo, donde el rendimiento de la red entre el programa cliente y los programas trabajadores es deficiente, el tiempo de transmisión de datos al programa trabajador requería aproximadamente 6.7 segundos. Dado que el tiempo de transmisión fue más largo que el tiempo de procesamiento de una optimización de estructura en CONFLEX-G, la mayor parte del tiempo se dedicó a esta transmisión de datos. Por lo tanto, incluso si CONFLEX-G utiliza un gran número de nodos de cálculo en un entorno de red de área amplia, no se obtiene el beneficio de utilizar un recurso de cuadrícula. En el caso de AlaX16, CONFLEX-G logró una aceleración al utilizar dos o más clústeres de PC en nuestro banco de pruebas en red. Esto se debió a que el tiempo de cálculo en el programa del trabajador era largo y los costos adicionales, como la latencia de red y la invocación de programas de trabajador, se volvieron relativamente pequeños y pudieron ocultarse. El mejor rendimiento se obtuvo utilizando 64 trabajadores en los clústeres de Dennis y Alice. En el caso de AaX16, el rendimiento logrado fue un aumento de velocidad de 36.08 veces. La Figura 9 revela el efecto de utilizar la facilidad del OmniRPC AIM en el rendimiento de CONFLEX-G. En la mayoría de los casos, CONFLEX-G con la instalación de OmniRPC AIM logró un mejor rendimiento que CONFLEX-G sin la instalación. En particular, la facilidad OmniRPC AIM fue ventajosa al usar dos clústeres conectados por una red de bajo rendimiento. Los resultados indican que la instalación OmniRPC AIM puede mejorar el rendimiento en el entorno de la red. 4.2.3 Rendimiento para proteínas pequeñas en el banco de pruebas de la red. Finalmente, exploramos la conformación molecular utilizando CONFLEX-G para moléculas grandes. En un entorno de cuadrícula, este experimento se llevó a cabo utilizando los clústeres Dennis y Ume. En este experimento, utilizamos dos proteínas, 1L2Y y 1BL1. La Tabla 6 y la Tabla 7 muestran el rendimiento de CONFLEX-G en el entorno de la red y el de CONFLEX MPI en el clúster de Toyo, respectivamente. Los incrementos de velocidad en estas tablas fueron calculados respectivamente basados en el rendimiento de un trabajador y 16 trabajadores del clúster Toyo utilizando CONFLEX MPI. CONFLEX-G con 84 trabajadores en los grupos de Dennis y Ume obtuvo aceleraciones máximas de 56.5 veces para 1L2Y y 34.5 veces para 1L2Y. Dado que el tiempo de cálculo para la optimización de la estructura requería una gran cantidad de tiempo, la proporción de gastos generales, incluidas tareas como la invocación de un programa de trabajador y la transmisión de datos para la inicialización, se volvió muy pequeña, por lo que el rendimiento de CONFLEX-G mejoró. Descubrimos que el desequilibrio de carga en el tiempo de procesamiento de la optimización para cada estructura de prueba causó una degradación del rendimiento. Cuando obtuvimos el mejor rendimiento para 1L2Y utilizando los cúmulos de Dennis y Ume, el tiempo para la optimización de cada estructura varió de 190 a 27,887 segundos, y la proporción entre los tiempos más largos y más cortos fue de 13.4. Para 1BL1, la proporción de tiempo mínimo sobre tiempo máximo fue de 190. Además, para que el programa del trabajador espere hasta que se complete la optimización de todas las estructuras de prueba, se descubrió que todos los programas de trabajador esperaban en un estado inactivo durante aproximadamente 6 horas. Esto ha causado la degradación del rendimiento de CONFLEX-G. 161 4.3 Discusión En esta subsección, discutimos la mejora del rendimiento reflejada en nuestros experimentos. Explotando el paralelismo - Para aprovechar más recursos computacionales, es necesario aumentar el grado de paralelismo. En este experimento, el grado de paralelismo no fue tan grande en el caso de las moléculas de muestra. Al utilizar un conjunto de más de 500 nodos informáticos para 1BL1, el número de estructuras de un solo ensayo asignadas a cada trabajador será solo de uno o dos. Si se asignan más de 100 estructuras de prueba a cada programa de trabajador, el cálculo se puede realizar de manera más eficiente debido a la reducción de la sobrecarga para la invocación y la inicialización de los trabajadores a través de la facilidad de OmniRPC AIM. Una idea para aumentar el paralelismo es superponer la ejecución de dos o más conjuntos de estructuras de prueba. En el algoritmo actual, se genera un conjunto de estructuras de prueba a partir de una estructura inicial y se calculan las optimizaciones para todas las estructuras de este conjunto. Además, esto ayudará a mejorar el desequilibrio de carga. Al hacer que otros conjuntos de estructuras de prueba se superpongan, incluso si algunas optimizaciones requieren mucho tiempo, la optimización de las estructuras en otros conjuntos se puede ejecutar para compensar a los trabajadores inactivos de otras optimizaciones. Sin embargo, no está claro cómo dicha modificación del algoritmo podría afectar la calidad de los resultados finales en términos de una búsqueda de conformación. Mejora en el desequilibrio de carga al optimizar cada estructura de prueba: la Tabla 8 enumera las estadísticas de los tiempos de optimización de las estructuras de prueba generadas para cada molécula de muestra medida utilizando 28 trabajadores en el clúster de Dennis. Cuando se utilizan dos o más conjuntos de grupos de PC, la mejora en el rendimiento se ve obstaculizada por el desequilibrio de carga en la optimización de las estructuras de prueba. El tiempo más largo para optimizar una estructura de prueba fue casi 24 veces más largo que el tiempo más corto. Además, los demás trabajadores deben esperar hasta que el trabajo más largo haya terminado, por lo que el tiempo total de ejecución no se puede reducir. Cuando CONFLEX-G buscó los conformeros de 1BL1 mediante el clúster de Dennis, el tiempo de cálculo más largo de la optimización de la estructura de prueba representó aproximadamente el 80% del tiempo transcurrido. Por lo tanto, hay dos posibles soluciones para el desequilibrio de carga. • Es necesario refinar el algoritmo utilizado para generar la estructura de prueba, que suprime la variación temporal para optimizar una estructura de prueba en CONFLEX. Esto permite que CONFLEX-G logre un alto rendimiento al utilizar muchos recursos informáticos. • Una de las soluciones es superponer las ejecuciones para dos o más conjuntos de estructuras de prueba. En los algoritmos actuales, se genera un conjunto de estructuras de prueba a partir de una estructura inicial y el cálculo continúa hasta que se calculen todas las estructuras de este conjunto. Al tener otros conjuntos de estructuras de prueba, incluso si una búsqueda de estructuras lleva mucho tiempo, un trabajo puede ejecutarse para compensar el desequilibrio de carga causado por otros trabajos. Sin embargo, no está claro cómo tal modificación de los algoritmos podría afectar la eficiencia. En este experimento, utilizamos un programador de round-robin incorporado simple de OmniRPC, que es necesario para aplicar el programador que asigna estructuras con largos tiempos de optimización a una tabla de alto rendimiento. Tabla 8: Estadísticas del tiempo transcurrido de la optimización de la estructura de prueba utilizando 28 trabajadores en el clúster Dennis. Código de Varianza Promedio Mínimo Máximo Molecular (s) (s) (s) AlaX04 2.0 11.3 5.3 3 AlaX16 47.6 920.0 154.2 5404 1L2Y 114.2 13331.4 803.2 636782 1BL1 121.0 29641.8 3153.5 2734811 nodos y estructuras con tiempos de optimización cortos a nodos de bajo rendimiento. En general, sin embargo, podría ser difícil predecir el tiempo necesario para la optimización de la estructura del ensayo. Paralelización del programa del trabajador para acelerar y optimizar una estructura de prueba - En la implementación actual, no paralelizamos el programa del trabajador. Para acelerar las estructuras de prueba, la programación híbrida utilizando OmniRPC y OpenMP en una máquina SMP (Symmetric Multiple Processor) puede ser uno de los métodos alternativos para mejorar el rendimiento general. TRABAJO RELACIONADO Recientemente, se ha desarrollado un algoritmo que resuelve los problemas de paralelización y comunicación en procesadores poco conectados para ser utilizados en simulaciones. El proyecto Folding@home simula escalas de tiempo miles a millones de veces más largas que las logradas previamente. Esto nos ha permitido simular el plegamiento por primera vez y examinar directamente enfermedades relacionadas con el plegamiento. SETI@home es un programa para buscar vida extraterrestre mediante el análisis de señales de radio telescopio utilizando datos de telescopios de diferentes sitios mediante la transformada de Fourier. SETI@home aborda problemas inmensamente paralelos, en los cuales los cálculos pueden dividirse fácilmente entre varios ordenadores. Los fragmentos de datos del radiotelescopio pueden asignarse fácilmente a diferentes computadoras. La mayoría de estos esfuerzos desarrollan explícitamente una aplicación de acoplamiento como una aplicación paralela utilizando un lenguaje de programación paralela de propósito especial y middleware, como MPI, lo cual requiere habilidades y esfuerzo de desarrollo. Sin embargo, las habilidades y esfuerzo necesarios para desarrollar una aplicación de cuadrícula pueden no ser necesarios para OmniRPC. Nimrod/G[15] es una herramienta para modelado paramétrico distribuido e implementa una granja de tareas paralelas para simulaciones que requieren varios parámetros de entrada variables. Nimrod incorpora un componente de programación distribuida que puede gestionar la programación de experimentos individuales en computadoras inactivas en una red de área local. Nimrod se ha aplicado en aplicaciones que incluyen bioinformática, investigación de operaciones y modelado molecular para el diseño de fármacos. NetSolve es una instalación de RPC similar a OmniRPC y Ninf, que proporciona una interfaz de programación similar y un mecanismo de equilibrio de carga automático. Ninf-G[7] es una implementación habilitada para grid de Ninf y proporciona un sistema GridRPC[10] que utiliza LDAP para gestionar la base de datos de ejecutables remotos, pero no admite clústeres que involucren direcciones IP privadas o direcciones dentro de un firewall. Matsuoka et al. [16] también han discutido varios problemas de diseño relacionados con los sistemas de RPC en malla. 162 6. CONCLUSIONES Y TRABAJO FUTURO Hemos diseñado e implementado CONFLEX-G utilizando OmniRPC. Informamos sobre su rendimiento en un banco de pruebas en red de varios clústeres de PC distribuidos geográficamente. Para explorar la conformación de grandes biomoléculas, se utilizó CONFLEXG para generar estructuras de prueba de las moléculas y asignar trabajos para optimizarlas mediante <br>mecánica molecular</br> en la cuadrícula. OmniRPC proporciona un modelo de persistencia restringido para que el módulo se inicialice automáticamente al invocarse llamando al procedimiento de inicialización. Esto puede eliminar la comunicación innecesaria y la inicialización en cada llamada en CONFLEX-G. CONFLEX-G puede lograr un rendimiento comparable al de CONFLEX MPI y aprovecha más recursos informáticos al permitir el uso de múltiples clústeres de PC en la red. El resultado experimental muestra que CONFLEX-G logró una aceleración de 56.5 veces para la molécula 1BL1, donde la molécula consta de un gran número de átomos y cada optimización de la estructura de prueba requiere mucho tiempo. El desequilibrio de carga de las optimizaciones de la estructura de prueba puede causar degradación del rendimiento. Necesitamos refinar el algoritmo utilizado para generar la estructura de prueba con el fin de mejorar la optimización del equilibrio de carga para las estructuras de prueba en CONFLEX. Los estudios futuros incluirán el desarrollo de herramientas de implementación y un examen de la tolerancia a fallos. En el OmniRPC actual, el registro de un programa de ejecución en hosts remotos y despliegues de programas de trabajadores se configuran manualmente. Se requerirán herramientas de implementación a medida que se incremente el número de hosts remotos. En entornos de cuadrícula en los que el entorno cambia dinámicamente, también es necesario contar con soporte para la tolerancia a fallos. Esta característica es especialmente importante en aplicaciones a gran escala que requieren cálculos prolongados en un entorno de cuadrícula. Planeamos refinar el algoritmo de optimización conformacional en CONFLEX para explorar el espacio de búsqueda de conformaciones de moléculas biológicas más grandes como la proteasa del VIH utilizando hasta 1000 trabajadores en un entorno de cuadrícula. AGRADECIMIENTOS Esta investigación fue apoyada en parte por una Subvención de la Secretaría de Educación, Cultura, Deportes, Ciencia y Tecnología de Japón, No. 14019011, 2002, y como parte del Programa de Investigación y Desarrollo para Aplicar la Ciencia y Tecnología Computacional Avanzada por la Corporación de Ciencia y Tecnología de Japón (Investigación en la plataforma de computación en red para el diseño de fármacos). Nos gustaría agradecer al centro de investigación de tecnología de red, AIST, Japón por proporcionar recursos informáticos para nuestro experimento. 8. REFERENCIAS [1] H. Goto y E. Osawa. Un algoritmo eficiente para buscar conformaciones de baja energía de moléculas cíclicas y acíclicas. J. Quím. Soc., Perkin Trans, 2:187-198, 1993. [2] M. Sato, T. Boku, y D. Takahashi. OmniRPC: un sistema de RPC en malla para programación paralela en entornos de clúster y malla. En Proc. de CCGrid2003, páginas 219-229, 2003. [3] M. Sato, M. Hirano, Y. Tanaka y S. Sekiguchi. OmniRPC: una instalación de RPC en Grid para la computación en clúster y global en OpenMP. En Proc. del Taller sobre Aplicaciones y Herramientas OpenMP 2001 (LNCS 2104), páginas 130-135, 2001. [4] Proyecto OmniRPC. http://www.omni.hpcc.jp/omnirpc/. [5] M. Sato, H. Nakada, S. Sekiguchi, S. Matsuoka, U. Nagashima y H. Takagi. Ninf: Una Biblioteca de Información Basada en Red para la Infraestructura de Computación Global en Todo el Mundo. En HPCN Europe, páginas 491-502, 1997. [6] Proyecto Ninf. http://ninf.apgrid.org/. [7] Y. Tanaka, H. Nakada, S. Sekiguchi, T. Suzumura y S. Matsuoka. Ninf-G: Una Implementación de Referencia de Middleware de Programación basado en RPC para la Computación en Grid. Revista de Computación en Red, 1(1):41-51, 2003. [8] D. Arnold, S. Agrawal, S. Blackford, J. Dongarra, M. Miller, K. Seymour, K. Sagi, Z. Shi y S. Vadhiyar. Guía del usuario de NetSolve V1.4.1. Departamento de Computación Innovador. Informe técnico ICL-UT-02-05, Universidad de Tennessee, Knoxville, TN, junio de 2002. [9] Grupo de gestión de objetos. http://www.omg.org/. [10] K. Seymour, H. Nakada, S. Matsuoka, J. Dongarra, C. Lee y H. Casanova. GridRPC: Una API de Llamada a Procedimientos Remotos para la Computación en Grid. [11] H. Goto, T. Takahashi, Y. Takata, K. Ohta y U. Nagashima. Conflex: Comportamientos conformacionales de polipéptidos según lo predicho por una búsqueda en el espacio conformacional. En Nanotech2003, volumen 1, páginas 32-35, 2003. [12] I. Foster y C. Kesselman. Globus: Un conjunto de herramientas de infraestructura de metacomputación. La Revista Internacional de Aplicaciones de Supercomputadoras y Computación de Alto Rendimiento, 11(2):115-128, Verano 1997. [13] Stefan M. Larson, Christopher D. Snow, Michael Shirts y Vijay S. Pande. Folding@home y genome@home: Utilizando computación distribuida para abordar problemas previamente intratables en biología computacional. Genómica Computacional, 2002. Proyecto seti@home. http://setiathome.ssl.berkeley.edu/. R. Buyya, K. Branson, J. Giddy y D. Abramson. El laboratorio virtual: un conjunto de herramientas para habilitar la modelización molecular distribuida para el diseño de fármacos en la red mundial. Concurrencia y Computación: Práctica y Experiencia, 15(1):1-25, enero de 2003. [16] S. Matsuoka, H. Nakada, M. Sato y S. Sekiguchi. Problemas de diseño de sistemas de servidores habilitados para redes para la red. En Proc. de GRID 2000 (LNCS 1971), páginas 4-17, 2000. 163 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "automatic initializable module": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Implementation and Performance Evaluation of CONFLEX-G: Grid-enabled Molecular Conformational Space Search Program with OmniRPC Yoshihiro Nakajima Graduate School of Systems & Information Engineering, University of Tsukuba Tsukuba, 305-8577, Japan yoshihiro@hpcs.is.tsukuba.ac.jp Mitsuhisa Sato Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan msato@is.tsukuba.ac.jp Hitoshi Goto Knowledge-based Information Engineering, Toyohashi University of Technology Toyohashi, 441-8580, Japan gotoh@cochem2.tutkie.tut.ac.jp Taisuke Boku, Daisuke Takahashi Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan {taisuke,daisuke}@hpcs.is.tsukuba.ac.jp ABSTRACT CONFLEX-G is the grid-enabled version of a molecular conformational space search program called CONFLEX.",
                "We have implemented CONFLEX-G using a grid RPC system called OmniRPC.",
                "In this paper, we report the performance of CONFLEX-G in a grid testbed of several geographically distributed PC clusters.",
                "In order to explore many conformation of large bio-molecules, CONFLEX-G generates trial structures of the molecules and allocates jobs to optimize a trial structure with a reliable molecular mechanics method in the grid.",
                "OmniRPC provides a restricted persistence model to support the parametric search applications.",
                "In this model, when the initialization procedure is defined in the RPC module, the module is automatically initialized at the time of invocation by calling the initialization procedure.",
                "This can eliminate unnecessary communication and initialization at each call in CONFLEX-G. CONFLEXG can achieve performance comparable to CONFLEX MPI and can exploit more computing resources by allowing the use of a cluster of multiple clusters in the grid.",
                "The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times in the case of the 1BL1 molecule, where the molecule consists of a large number of atoms, and each trial structure optimization requires significant time.",
                "The load imbalance of the optimization time of the trial structure may also cause performance degradation.",
                "Categories and Subject Descriptors C.2.4 [Computer Systems Organization]: COMPUTERCOMMUNICATION NETWORK-Distributed Systems; J.2.4 [Computer Applications]: PHYSICAL SCIENCES AND ENGINEERING General Terms Design,Performance 1.",
                "INTRODUCTION Elucidation of the stable conformations and the folding process of proteins is one of the most fundamental and challenging goals in life science.",
                "While some of the most common secondary structures (e.g., certain types of helix, the beta-strand, and the coil) are well known, precise analysis of the thousands of chemically important conformers and pico-second-order analysis of their conformational interconversions via the transition states on the potential energy surface are required for the microsecond-order investigation of the folding process toward the tertiary structure formations.",
                "Recently, the concept of the computational grid has begun to attract significant interest in the field of high-performance network computing.",
                "Rapid advances in wide-area networking technology and infrastructure have made it possible to construct large-scale, high-performance distributed computing environments, or computational grids, that provide dependable, consistent and pervasive access to enormous computational resources.",
                "CONFLEX is one of the most efficient and reliable conformational space search programs[1].",
                "We have applied this 154 program to parallelization using global computing.",
                "The performance of the parallelized CONFLEX enables exploration of the lower-energy region of the conformational space of small peptides within an available elapsed time using a local PC cluster.",
                "Since trial structure optimization in CONFLEX is calculated via molecular mechanics, conformational space search can be performed quickly compared to that using molecular orbital calculation.",
                "Although the parallelized version of CONFLEX was used to calculate in parallel the structure optimization, which takes up over 90% of the processing in the molecular conformation search, sufficient improvement in the speedup could not be achieved by this method alone.",
                "Therefore, for high polymers from live organisms, such as HIV protease, the use one PC cluster is insufficient due to the requirement for optimization of a huge number of trial structures.",
                "This requires the vast computer resources of a grid computing environment.",
                "In this paper, we describe CONFLEX-G, a grid-enabled molecular conformational search program, using OmniRPC and report its performance in a grid of several PC clusters which are geographically distributed.",
                "The prototype CONFLEX-G allocates calculation trial structures optimization, which is a very time-consuming task, to worker nodes in the grid environment in order to obtain high throughput.",
                "In addition, we compare the performance of CONFLEX-G in a local PC cluster to that in a grid testbed.",
                "OmniRPC[2, 3, 4] is a thread-safe implementation of Ninf RPC[5, 6] which is a Grid RPC facility for grid environment computing.",
                "Several systems adopt the concept of the RPC as the basic model for grid environment computing, including Ninf-G[7], NetSolve[8] and CORBA[9].",
                "The RPCstyle system provides an easy-to-use, intuitive programming interface, allowing users of the grid system to easily create grid-enabled applications.",
                "In order to support parallel programming, an RPC client can issue asynchronous call requests to a different remote computer to exploit networkwide parallelism via OmniRPC.",
                "In this paper, we propose the OmniRPC persistence model to a Grid RPC system and demonstrate its effectiveness.",
                "In order to support a typical application for a grid environment, such as a parametric search application, in which the same function is executed with different input parameters on the same data set.",
                "In the current GridRPC system[10], the data set by the previous call cannot be used by subsequent calls.",
                "In the OmniRPC system, once a remote executable is invoked, the client attempts to use the invoked remote executable and its initialized state for subsequent RPC calls to the same remote functions in order to eliminate the invocation cost of each call.",
                "This paper demonstrates that CONFLEX-G is able to exploit the huge computer resources of a grid environment and search large-scale molecular conformers.",
                "We demonstrate CONFLEX-G on our grid testbed using the actual protein as a sample molecule.",
                "The OmniRPC facility of the <br>automatic initializable module</br> (AIM) allows the system to efficiently calculate numerous conformers.",
                "Furthermore, by using OmniRPC, the user can grid-parallelize the existing application, and move from the cluster to the grid environment without modifying program code and compiling the program.",
                "In addition, the user can easily build a private grid environment.",
                "The rest of this paper is organized as follows.",
                "An overview Selection of Initial Structure Conformations Database Local Perturbation Geometry Optimization Comparison and Registration Figure 1: Algorithm of conformational space search in the original CONFLEX. of the CONFLEX system is presented in Section2, and the implementation and design of CONFLEX-G are described in Section 3.",
                "We report experimental results obtained using CONFLEX-G and discuss its performance in Section 4.",
                "In Section 6, we present conclusions and discuss subjects for future study. 2.",
                "CONFLEX CONFLEX [1] is an efficient conformational space search program, which can predominately and exhaustively search the conformers in the lower-energy region.",
                "Applications of CONFLEX include the elucidation of the reactivity and selectivity of drugs and possible drug materials with regard to their conformational flexibility. 2.1 Algorithm of ConformationalSpaceSearch The basic strategy of CONFLEX is an exhaustive search of only the low-energy regions.",
                "The original CONFLEX performs the following four major steps: 1.",
                "Selection of an initial structure among the previously discovered unique conformers sorted in a conformational database. (An input structure is used as the first initial structure at the beginning of a search execution only.) 2.",
                "Generation of trial structures by local perturbations to the selected initial structure. 3.",
                "Geometry optimization for the newly generated trial structures. 4.",
                "Comparison of the successfully optimized (trial) structures with the other conformers stored in a conformation database, and preservation of newly discovered unique conformers in the database.",
                "Figure 1 shows the outline of CONFLEX, the original conformational space search algorithm.",
                "These procedures incorporate two unique strategies.",
                "Figure 2 shows the strategies for generating local perturbations in CONFLEX.",
                "The first strategy involves both corner flapping and edge flipping for the ring atoms and stepwise rotation for side-chains or backbone chains.",
                "These methods provide a highly efficient way to produce several good trial structures.",
                "These perturbations can be considered to mimic 155 Stepwise Rotation Corner Flap Edge Flip Figure 2: Strategies used to generate the local perturbations. a barrier-crossing step in the elementary process of the thermal conformational inter-conversion.",
                "Actually, the perturbations of an initial structure correspond to the precise performance around the space of the initial structure because of localization and weakness of the perturbation.",
                "The selection rule of the initial structure, the LowestConformer-First rule, is the second strategy for directing the conformation search expanded to the low-energy regions.",
                "The initial structure is selected as the set of lowest energy conformers stored in the conformation database.",
                "This rule is effective in moving down the search space toward lower energy regions, like water from a stream running into an empty reservoir, while filling local depressions along the way.",
                "Therefore, these tactical procedures of the CONFLEX search are referred to as the Reservoir Filling Algorithm.",
                "In order to remain in the low-energy region and perform an exhaustive search, the search limit (SEL), which determines the maximum energy of the initial structures, is pre-defined.",
                "Gradually increasing SEL allows only the lowenergy conformers to be searched and avoids straying into unnecessarily high-energy regions. 2.2 Parallelization of CONFLEX for Cluster For application to over 100 atoms, CONFLEX was improved using high-performance parallel computing techniques.",
                "In the CONFLEX search algorithm, the geometry optimization procedures always take 95% of the elapsed time of the search execution.",
                "Therefore, we parallelized this optimization using the Master/Worker parallelization technique.",
                "We modified the search procedures as follows.",
                "After trial structures are generated (step 2), they are temporarily stored in a task pool on the master node.",
                "Then, each worker node is dynamically supplied with one trial structure from the master node.",
                "After an optimization on a worker node is finished, the worker is immediately supplied with another trial structure.",
                "When all of the trial structures related to a given initial structure are optimized, only the master procedure is used in comparison.",
                "By parallelizing CONFLEX, the speedup of searching molecular conformers obtained is as reported in[11]. 3.",
                "CONFLEX-G Originally, CONFLEX was intended for use in exploring the conformers of the large bio-molecules, such HIV protease.",
                "In such molecules, the number of trial structures increases and the time required for optimization of RPC Selection of Initial Structure Conformations Database Local Perturbation Comparison and Registration Client program Task Pool of Geometry Optimization RPC RPC Grid environment Cluster B Cluster A Cluster C Trial structureTrial structure Trial structure Trial structure Figure 3: Procedure of CONFLEX-G. agent rexrex rex Client jones.tsukuba.ac.jp hpc-serv.hpcc.jp hpc1 hpc2 hpc3 Agent invocation communicationNetwork Figure 4: Overview of the OmniRPC system for the remote cluster having a private IP address. the trial structure becomes immense.",
                "We implemented the parallelized version of CONFLEX, which cannot treat such molecules using only a local PC cluster.",
                "In order to exploit the vast computing resources of a grid environment, we designed and implemented CONFLEX-G, which is a grid-enabled version of CONFLEX, with the OmniRPC system.",
                "CONFLEX-G allocates jobs to optimize a trial structure to the computational nodes of each cluster in the grid environment.",
                "Figure 3 shows the process of CONFLEX-G.",
                "The worker programs are initialized by the initialize method, which is provided by the OmniRPC AIM facility at worker invocation.",
                "At each RPC call, the initialized state is reused on the remote host.",
                "In other words, the client program can eliminate the initialization for each RPC call, and can therefore optimize trial structures efficiently. 3.1 The OmniRPC system OmniRPC is a Grid RPC system which allows seamless parallel programming from a PC cluster to a grid environment.",
                "OmniRPC inherits its API and basic architecture from Ninf.",
                "A client and the remote computational hosts which execute the remote procedures may be connected via a network.",
                "The remote libraries are implemented as an executable program which contains a network stub routine as its main routine.",
                "We call this executable program a remote executable program (rex).",
                "When the OmniRPC client program starts, the initialization function of OmniRPC system invokes the OmniRPC agent program omrpc-agent in the remote hosts listed in the host file.",
                "To invoke the agent, the user can use the remote shell command rsh in a local-area network, the GRAM (Globus Resource Allocation Manager) API of the Globus 156 toolkit[12] in a grid environment, or the secure remote shell command ssh.",
                "The user can switch the configurations only by changing the host file.",
                "OmniRpcCall is a simple client programming interface for calling remote functions.",
                "When OmniRpcCall makes a remote procedure call, the call is allocated to an appropriate remote host.",
                "When the client issues the RPC request, it requests that the agent in the selected host submit the job of the remote executable with the local job scheduler specified in the host file.",
                "If the job scheduler is not specified, the agent executes the remote executable in the same node by the fork system call.",
                "The client sends the data of the input arguments to the invoked remote executable, and receives the results upon return of the remote function.",
                "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls in order to eliminate the cost of invoking the same remote executable again.",
                "When the agent and the remote executables are invoked, the remote programs obtain the client address and port from the argument list and connect back to the client by direct TCP/IP or Globus-IO for data transmission.",
                "Because the OmniRPC system does not use any fixed service ports, the client program allocates unused ports dynamically to wait for connection from the remote executables.",
                "This avoids possible security problems, and allows the user to install the OmniRPC system without requiring a privileged account.",
                "Herein, a typical grid resource is regarded as a cluster of geographically distributed PC clusters.",
                "For PC clusters on a private network, an OmniRPC agent process on the server host functions as a proxy to relay communications between the client and the remote executables by multiplexing the communications using a single connection.",
                "This feature, called multiplex IO (MXIO), allows a single client to use up to 1,000 remote computing hosts.",
                "When the PC cluster is inside a firewall, the port forwarding of SSH enables the node to communicate to the outside with MXIO.",
                "Figure 4 shows the overview of the OmniRPC system for a remote cluster with a private IP address.",
                "For parallel programming, the programmer can use asynchronous remote procedure calls, allowing the client to issue several requests while continuing with other computations.",
                "The requests are dispatched to different remote hosts to be executed in parallel, and the client waits or polls the completed request.",
                "In such a programming model with asynchronous remote procedure calls, the programmer should handle outstanding requests explicitly.",
                "Because OmniRPC is a thread-safe system, a number of remote procedure calls may be outstanding at any time for multi-threaded programs written in OpenMP. 3.2 OmniRPC persistence model: <br>automatic initializable module</br> OmniRPC efficiently supports typical Master/Worker parallel applications such as parametric execution programs.",
                "For parametric search applications, which often require large amount of identical data for each call, OmniRPC supports a limited persistence model, which is implemented by the <br>automatic initializable module</br>.",
                "The user can define an initialization procedure in the remote executable in order to send and store data automatically in advance of actual remote procedure calls.",
                "Since the remote executable may accept requests for subsequent calls, the data set which has been set by the initialization procedure can be re-used.",
                "As a result, the worker program can execute efficiently and reduce the amount of data transmitted for initialization.",
                "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls.",
                "However, OmniRPC does not guarantee persistence of the remote executable, so that the data set by the previous call cannot be used by subsequent calls.",
                "This is because a remote call by OmniRpcCall may be scheduled to any remote host dynamically, and remote executables may be terminated accidentally due to dynamic re-scheduling or host faults.",
                "However, persistence of the remote executable can be exploited in certain applications.",
                "An example is a parametric search application: in such an application, it would be efficient if a large set of data could be pre-loaded by the first call, and subsequent calls could be performed on the same data, but with different parameters.",
                "This is the case for CONFLEX.",
                "OmniRPC provides a restricted persistence model through the <br>automatic initializable module</br> (AIM) in order to support this type of application.",
                "If the initialization procedure is defined in the module, the module is automatically initialized at invocation by calling the initialization procedure.",
                "When the remote executable is re-scheduled in different hosts, the initialization is called to initialize the newly allocated remote module.",
                "This can eliminate unnecessary communications when RPC calls use the same data.",
                "To reveal more about the difference in progress between the cases with OmniRPC AIM and without OmniRPC AIM, we present two figures.",
                "Figure 5 illustrates the time chart of the progress of a typical OmniRPC application using the OmniRPC AIM facility, and Figure 6 illustrates the time chart of the same application without the OmniRPC AIM facility.",
                "In both figures, the lines between diamonds represent the processes of initialization, and the lines between points represent the calculation.",
                "The bold line indicates the time when the client program sends the data to a worker program.",
                "It is necessary for the application without the OmniRPC AIM facility to initialize at each RPC.",
                "The application using the OmniRPC AIM facility can re-use the initialized data once the data set is initialized.",
                "This can reduce the initialization at each RPC.",
                "The workers of the application with the AIM can calculate efficiently compared to the application without the OmniRPC AIM facility. 3.3 Implementation of CONFLEX-G using OmniRPC Figure 3 shows an overview of the process used in CONFLEXG.",
                "Using RPCs, CONFLEX-G allocates the processes of trial structure optimization, which are performed by the computation nodes of a PC cluster in the MPI version of CONFLEX, to the computational nodes of each cluster in a grid environment.",
                "There are two computations which are performed by the worker programs in CONFLEX-G. One is the initialization of a worker program, and another is the calculation of trial structure optimization.",
                "First, the OmniRPC facility of the AIM is adapted for initialization of a worker program.",
                "This facility automatically calls the initialization function, which is contained in the worker program, once the client program invokes the worker program in a remote node.",
                "It is necessary for the common RPC system including GridRPC to initialize a program for every RPC call, since data persistence of worker programs 157 time Client Program Worker Program 1 Worker Program 2 initialization initialization calculation calculation calculation calculation calculation Parallelized using asynchronous RPCs Figure 5: Time chart of applications using the OmniRPC facility of the <br>automatic initializable module</br>. time Client Program Worker Program 1 Worker Program 2 initialization initializationcalculation calculation calculation calculation initialization initialization initialization Parallelized using asynchronous RPCs calculation Figure 6: Time chart of applications without the OmniRPC facility of the <br>automatic initializable module</br>.",
                "Table 1: Machine configurations in the grid testbed.",
                "Site Cluster Name Machine Network Authentication # of Nodes # of CPUs Univ. of Tsukuba Dennis Dual Xeon 2.4GHz 1Gb Ethernet Globus, SSH 14 28 Alice Dual Athlon 1800+ 100Mb Ethernet Globus, SSH 18 36 TUT Toyo Dual Athlon 2600+ 100Mb Ethernet SSH 8 16 AIST Ume Dual Pentium3 1.4GHz 1Gb Ethernet Globus, SSH 32 64 is not supported.",
                "In OmniRPC, however, when the Initialize remote function is defined in the worker program and a new worker program, corresponding to the other RPC, is assigned to execute, an Initialize function is called automatically.",
                "Therefore, after the Initialize function call to set up common initialization data, a worker program can re-use this data and increase the efficiency of its processes.",
                "Thus, the higher the set-up cost, the greater the potential benefit.",
                "We implemented the worker program of CONFLEX-G to receive data, such as evaluation parameters of energy, from a client program and to be initialized by the Initialize function.",
                "We arranged the client program of CONFLEX-G to transfer the parameter file at the time of worker initialization.",
                "This enables execution to be performed by modify only the client setting if the user wants to run CONFLEX-G with a different data set.",
                "Second, in order to calculate trial structure optimization in a worker program, the worker program must receive the data, such as the atom arrangement of the trial structure and the internal energy state.",
                "The result is returned to the client program after the worker has Optimized the trial structure.",
                "Since the calculation portion of the structure optimization in this worker program can be calculated independently using different parameters, we parallelized this portion using asynchronous RPCs on the client side.",
                "To call the structure optimization function in a worker program from the client program, we use the OmniRpcCallAsync API, which is intended for asynchronous RPC.",
                "In addition, OmniRpcCallWaitAll API which waits until all asynchronous RPCs are used in order to perform synchronization with all of the asynchronous RPCs completed so as to optimize the trial structure.",
                "The client program which assigns trial structure optimization to the calculation node of a PC cluster using RPC is outlined as follows.",
                "OmniRpcInit() OmniRpcModuleInit(conflex_search,...); ... while( <new conformers> ) { foreach( <trial structures> ) OmniRpcCallAsync(conflex_search_worker, ...); OmniRpcWaitAll(); ...",
                "Note that OmniRpcModuleInit API returns only the arguments needed for initialization and will not actually execute the Initialization function.",
                "As described above, the actual Initialization is performed at the first remote call.",
                "Since the OmniRPC system has an easy round-robin scheduler, we do not have to explicitly write the code for load balance.",
                "Therefore, RPCs are allocated automatically to idle workers. 158 Table 2: Network performance between the master node of the Dennis cluster and the master node of each PC cluster.",
                "Round-Trip Throughput Cluster Time (ms) (Mbps) Dennis 0.23 879.31 Alice 0.18 94.12 Toyo 11.27 1.53 Ume 1.07 373.33 4.",
                "PRELIMINARY RESULTS 4.1 Grid Testbed The grid testbed was constructed by computing resources at the University of Tsukuba, the Toyohashi University of Technology (TUT) and the National Institute of Advanced Industrial Science and Technology (AIST).",
                "Table 1 shows the computing resources used for the grid of the present study.",
                "The University of Tsukuba and AIST are connected by a 1-Gbps Tsukuba WAN, and the other PC clusters are connected by SINET, which is wide-area network dedicated to academic research in Japan.",
                "Table 2 shows the performance of the measured network between the master node of the Dennis cluster and the master node of each PC cluster in the grid testbed.",
                "The communication throughput was measured using netperf, and the round-trip time was measured by ping. 4.2 Performance of CONFLEX-G In all of the CONFLEX-G experiments, the client program was executed on the master node of the Dennis cluster at the University of Tsukuba.",
                "The built-in Round-Robin scheduler of OmniRPC was used as a job scheduler.",
                "SSH was used for an authentication system, the OminRPCs MXIO, which relays the I/O communication between client program and worker programs by port forwarding of SSH was, not used.",
                "Note that one worker program is assigned and performed on one CPU of the calculation node in a PC cluster.",
                "That is, the number of workers is equal to the number of CPUs.",
                "These programs were compiled by the Intel Fortran Compiler 7.0 and gcc 2.95.",
                "MPICH, Version 1.2.5, was used to compare the performance between CONFLEX MPI and CONFLEX-G.",
                "In order to demonstrate the usability of the OmniRPC facility of the AIM, we implemented another version of CONFLEX-G which did not utilize the OmniRPC facility.",
                "The worker program in this version of CONFLEXG must be initialized at each RPC because the worker does not hold the previous data set.",
                "In order to examine the performance of CONFLEX-G, we selected two peptides and two small protein as test molecules: • N-acetyl tetra-alanine methylester (AlaX04) • N-acetyl hexdeca-alanine methylester (AlaX16) • TRP-cage miniprotein construct TC5B (1L2Y) • PTH receptor N-terminus fragment (1BL1) Table 3 lists the characteristics of these sample molecules.",
                "The column trial structure / loops in this table shows the Figure 7: Performances of CONFLEX-G, CONFLEX MPI and Original CONFLEX in the Dennis cluster.",
                "Figure 8: Speedup ratio, which is based on the elapsed time of CONFLEX-G using one worker in the Dennis cluster.",
                "Figure 9: Performance of CONFLEX-G with and without the OmniRPC facility of <br>automatic initializable module</br> for AlaX16. 159 Table 3: Characteristics of molecules and data transmission for optimizing trial molecular structures in each molecular code.",
                "Molecular # of # of total trial trial structure Data transfer to Data transfer code atoms structures / loop initialize a worker / trial structure AlaX04 181 360 45 2033KB 17.00KB AlaX16 191 480 160 2063KB 18.14KB 1L2Y 315 331 331 2099KB 29.58KB 1BL1 519 519 519 2150KB 48.67KB Table 4: Elapsed search time for the molecular conformation of AlaX04.",
                "Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (sequential) 1 320.0 1786.21 4.96 1786.21 1.00 Toyo (16) 16 20.0 1497.08 4.16 196.32 9.10 Dennis (28) 28 11.4 1905.51 5.29 97.00 18.41 Alice (36) 36 8.9 2055.25 5.71 87.09 20.51 Ume (56) 56 5.7 2196.77 6.10 120.69 14.80 Dennis (28) + Toyo (16) 44 7.3 1630.09 4.53 162.35 11.00 Alice (36) + Toyo (16) 52 6.2 1774.53 4.93 178.24 10.02 Dennis (28) + Alice (36) 64 5.0 1999.02 5.55 81.52 21.91 Dennis (28) + Ume (56) 84 3.8 2085.84 5.79 92.22 19.37 Alice (36) + Ume (56) 92 3.5 2120.87 5.89 101.25 17.64 Table 5: Elapsed search time for the molecular conformation of AlaX16 Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (1) 1 480.0 74027.80 154.22 74027.80 1.00 Toyo (16) 16 30.0 70414.21 146.70 4699.15 15.75 Dennis (28) 28 17.1 74027.80 154.22 3375.60 21.93 Alice (36) 36 13.3 90047.27 187.60 3260.41 22.71 Ume (56) 56 8.6 123399.38 257.08 2913.63 25.41 Dennis (28) + Toyo (16) 44 10.9 76747.74 159.89 2762.10 26.80 Alice (36) + Toyo (16) 52 9.2 82700.44 172.29 2246.73 32.95 Dennis (28) + Alice (36) 64 7.5 87571.30 182.44 2051.50 36.08 Toyo (16) + Ume (56) 72 6.7 109671.32 228.48 2617.85 28.28 Dennis (28) + Ume (56) 84 5.7 102817.90 214.20 2478.93 29.86 Dennis(28)+Ume(56)+Toyo(16) 100 4.8 98238.07 204.66 2478.93 29.86 Table 6: Elapsed time of the search for the trial structure of 1L2Y.",
                "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 331.0 867 286,967 79.71 1.00 Toyo MPI (16) 16 20.7 867 18,696 5.19 15.34 Dennis (28) 28 11.8 803 14,101 3.91 20.35 Dennis (28) + Ume(56) 84 3.9 1,064 8,316 2.31 34.50 Table 7: Elapsed time of the search for the trial structure of 1BL1.",
                "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 519.0 3,646 1892,210 525.61 1.00 Toyo MPI (16) 16 32.4 3,646 120,028 33.34 15.76 Dennis (28) 28 18.5 3,154 61,803 17.16 30.61 Dennis (28) + Ume (56) 84 6.1 4,497 33,502 9.30 56.48 160 number of trial structures generated in each iteration, indicating the degree of parallelism.",
                "Figure 3 also summarizes the amount of data transmission required for initialization of a worker program and for optimization of each trial structure.",
                "Note that the amount of data transmission, which is required in order to initialize a worker program and optimize a trial structure in the MPI version of CONFLEX, is equal to that of CONFLEX-G. We used an improvement version of MM2 force field to assign a potential energy function to various geometric properties of a group of atoms. 4.2.1 Performance in a Local Cluster We first compared the performance of CONFLEX-G, the MPI version of CONFLEX, and the original sequential version of CONFLEX-G using a local cluster.",
                "We investigated performance by varying the number of workers using the Dennis cluster.",
                "We chose AlaX04 as a test molecule for this experiment.",
                "Figure 7 compares the results for the CONFLEX MPI and CONFLEX-G in a local PC cluster.",
                "The result of this experiment shows that CONFLEX-G can reduce the execution time as the number of workers increases, as in the MPI version of CONFLEX.",
                "We found that CONFLEX-G achieved efficiencies comparable to the MPI version.",
                "With 28 workers, CONFLEX-G achieved an 18.00 times speedup compared to the CONFLEX sequential version.",
                "The performance of CONFLEX-G without the OmniRPC AIM facility is worse than that of CONFLEXG using the facility, based on the increase in the number of workers.",
                "This indicates that the OmniRPC AIM enables the worker to calculate efficiently without other calculations, such initialization or invocation of worker programs.",
                "As the number of workers is increased, the performance of CONFLEX-G is a slightly lower than that of the MPI version.",
                "This performance degradation is caused by differences in the worker initialization processes of CONFLEX-G and CONFLEX MPI.",
                "In the case of CONFLEX MPI, all workers are initialized in advance of the optimization phase.",
                "In the case of OminRPC, the worker is invoked on-demand when the RPC call is actually issued.",
                "Therefore, the initialization incurs this overhead.",
                "Since the objective of CONFLEX-G is to explore the conformations of large bio-molecules, the number of trial structures and the time to optimize the trial structure might be large.",
                "In such cases, the overhead to invoke and initialize the worker program can be small compared to the entire elapsed time. 4.2.2 Performance for Peptides in The Grid Testbed First, the sample molecules (AlaX04 and AlaX16) were used to examine the CONFLEX-G performance in a grid environment.",
                "Figure 8 shows the speedup achieved by using multiple clusters compared to using one worker in the Dennis cluster.",
                "Detailed results are shown in Table 4 and Table 5.",
                "In both cases, the best performance was obtained using 64 workers of the combination of the Dennis and Alice clusters.",
                "CONFLEX-G achieved a maximum speedup of 36.08 times for AlaX04 and a maximum speedup of 21.91 times for AlaX16.",
                "In the case of AlaX04, the performance is improved only when the network performance between clusters is high.",
                "However, even if two or more clusters are used in a wide area network environment, the performance improvement was slight because the optimization time of one trial structure generated from AlaX04, a small molecule, is short.",
                "In addition, the overhead required for invocation of a worker program and network data transmission consume a large portion of the remaining processing time.",
                "In particular, the data transmission required for the initialization of a worker program is 2 MB.",
                "In the case of Toyo cluster, where the network performance between the client program and the worker programs is poor, the time of data transmission to the worker program required approximately 6.7 seconds.",
                "Since this transmission time was longer than the processing time of one structure optimization in CONFLEX-G, most of the time was spent for this data transmission.",
                "Therefore, even if CONFLEX-G uses a large number of calculation nodes in a wide area network environment, the benefit of using a grid resource is not obtained.",
                "In the case of AlaX16, CONFLEX-G achieved a speedup by using two or more PC clusters in our grid testbed.",
                "This was because the calculation time on the worker program was long and the overhead, such as network latency and the invoking of worker programs, became relatively small and could be hidden.",
                "The best performance was obtained using 64 workers in the Dennis and Alice clusters.",
                "In the case of AaX16, the achieved performance was a speedup of 36.08 times.",
                "Figure 9 reveals the effect of using the facility of the OmniRPC AIM on CONFLEX-G performance.",
                "In most cases, CONFLEX-G with the OmniRPC AIM facility archived better performance than CONFLEX-G without the facility.",
                "In particular, the OmniRPC AIM facility was advantageous when using two clusters connected by a low-performance network.",
                "The results indicate that the OmniRPC AIM facility can improve performance in the grid environment. 4.2.3 PerformanceforSmallProteininTheGridTestbed Finally, we explored the molecular conformation using CONFLEX-G for large molecules.",
                "In a grid environment, this experiment was conducted using the Dennis and Ume clusters.",
                "In this experiment, we used two proteins, 1L2Y and 1BL1.",
                "Table 6 and Table 7 show the performance of CONFLEX-G in the grid environment and that of CONFLEX MPI in the Toyo cluster, respectively.",
                "The speedups in these tables were computed respectively based on the performance of one worker and 16 workers of the Toyo cluster using CONFLEX MPI.",
                "CONFLEX-G with 84 workers in Dennis and Ume clusters obtained maximum speedups of 56.5 times for 1L2Y and 34.5 times for 1L2Y.",
                "Since the calculation time for structure optimization required a great deal of time, the ratio of overhead, including tasks such as the invocation of a worker program and data transmission for initialization, became very small, so that the performance of CONFLEX-G was improved.",
                "We found that the load imbalance in the processing time of optimization for each trial structure caused performance degradation.",
                "When we obtained the best performance for 1L2Y using the Dennis and Ume clusters, the time for each structure optimization varied from 190 to 27,887 seconds, and the ratio between the longest and shortest times was 13.4.",
                "For 1BL1, the ratio of minimum time over maximum time was 190.",
                "In addition, in order that the worker program wait until the completion of optimization of all trial structures, all worker programs were found to wait in an idle state for approximately 6 hours.",
                "This has caused the performance degradation of CONFLEX-G. 161 4.3 Discussion In this subsection, we discuss the improvement of the performance reflected in our experiments.",
                "Exploiting parallelism - In order to exploit more computational resources, it is necessary to increase the degree of parallelism.",
                "In this experiment, the degree of parallelism was not so large in the case of the sample molecules.",
                "When using a set of over 500 computing nodes for 1BL1, the number of one trial structures assigned to each worker will be only one or two.",
                "If over 100 trial structures are assigned to each worker program, calculation can be performed more efficiently due to the reduction of the overhead for worker invocation and initialization via the facility of the OmniRPC AIM.",
                "One idea for increasing parallelism is to overlap the execution of two or more sets of trial structures.",
                "In the current algorithm, a set of trial structures is generated from one initial structure and computed until optimizations for all structures in this set are calculated.",
                "Furthermore, this will help to improve load imbalance.",
                "By having other sets of trial structures overlap, even if some optimizations require a long time, the optimization for the structures in other sets can be executed to compensate for the idle workers for other optimizations.",
                "It is however unclear how such modification of the algorithm might affect the quality of the final results in terms of a conformation search.",
                "Improvement in load imbalance when optimizing each trial structure - Table 8 lists the statistics for optimization times of trial structures generated for each sample molecule measured using 28 workers in the Dennis cluster.",
                "When two or more sets of PC clusters are used, the speedup in performance is hampered by the load imbalance of the optimization of the trial structures.",
                "The longest time for optimizing a trial structure was nearly 24 times longer than the shortest time.",
                "Furthermore, other workers must wait until the longest job has Finished, so that the entire execution time cannot be reduced.",
                "When CONFLEX-G searched the conformers of 1BL1 by the Dennis cluster, the longest calculation time of the trial structure optimization made up approximately 80% of the elapsed time.",
                "Therefore, there are two possible solutions for the load Imbalance. • It is necessary to refine the algorithm used to generate the trial structure, which suppresses the time variation for optimizing a trial structure in CONFLEX.",
                "This enables CONFLEX-G to achieve high-throughput by using many computer resources. • One of the solutions is to overlap the executions for two or more sets of trial structures.",
                "In the current algorithms, a set of trial structures is generated from one initial structure and calculation continues until all structures in this set are calculated.",
                "By having other sets of trial structures, even if a structure search takes a long time, a job can be executed in order to compensate the load imbalance by other jobs.",
                "However, how such modification of the algorithms might affect the efficiency is not clear. • In this experiment, we used a simple build-in roundrobbin scheduler of OmniRPC, which is necessary in order to apply the scheduler that allocates structures with long optimization times to a high-performance Table 8: Statistics of elapsed time of trial structure optimization using 28 workers in the Dennis cluster.",
                "Molecular Min Max Average Variance code (s) (s) (s) AlaX04 2.0 11.3 5.3 3 AlaX16 47.6 920.0 154.2 5404 1L2Y 114.2 13331.4 803.2 636782 1BL1 121.0 29641.8 3153.5 2734811 node and structures with short optimization times to low-performance nodes.",
                "In general, however, it might be difficult to predict the time required for trial structure optimization.",
                "Parallelization of the worker program for speedup to optimize a trial structure - In the current implementation, we do not parallelize the worker program.",
                "In order to speed up trial structures, hybrid programming using OmniRPC and OpenMP in an SMP (Symmetric Multiple Processor) machine may be one of the alternative methods by which to improve overall performance. 5.",
                "RELATED WORK Recently, an algorithm has been developed that solves the problems of parallelization and communication in poorly connected processors to be used for simulation.",
                "The Folding@home project[13] simulates timescales thousands to millions of times longer than previously achieved.",
                "This has allowed us to simulate folding for the first time and to directly examine folding related diseases.",
                "SETI@home[14] is a program to search for alien life by analyzing radio telescope signals using Fourier transform radio telescope data from telescopes from different sites.",
                "SETI@home tackles immensely parallel problems, in which calculation can easily be divided among several computers.",
                "Radio telescope data chunks can easily be assigned to different computers.",
                "Most of these efforts explicitly develop a docking application as a parallel application using a special purpose parallel programming language and middleware, such as MPI, which requires development skills and effort.",
                "However, the skills and effort required to develop a grid application may not be required for OmniRPC.",
                "Nimrod/G[15] is a tool for distributed parametric modeling and implements a parallel task farm for simulations that require several varying input parameters.",
                "Nimrod incorporates a distributed scheduling component that can manage the scheduling of individual experiments to idle computers in a local area network.",
                "Nimrod has been applied to applications including bio-informatics, operations research, and molecular modeling for drug design.",
                "NetSolve[8] is an RPC facility similar to OmniRPC and Ninf, providing a similar programming interface and automatic load balancing mechanism.",
                "Ninf-G[7] is a grid-enabled implementation of Ninf and provides a GridRPC[10] system that uses LDAP to manage the database of remote executables, but does not support clusters involving private IP addresses or addresses inside a firewall.",
                "Matsuoka et al. [16] has also discussed several design issues related to grid RPC systems. 162 6.",
                "CONCLUSIONS AND FUTURE WORK We have designed and implemented CONFLEX-G using OmniRPC.",
                "We reported its performance in a grid testbed of several geographically distributed PC clusters.",
                "In order to explore the conformation of large bio-molecules, CONFLEXG was used to generate trial structures of the molecules, and allocate jobs to optimize them by molecular mechanics in the grid.",
                "OmniRPC provides a restricted persistence model so that the module is automatically initialized at invocation by calling the initialization procedure.",
                "This can eliminate unnecessary communication and the initialization at each call in CONFLEX-G. CONFLEX-G can achieves performance comparable to CONFLEX MPI and exploits more computing resources by allowing the use of multiple PC clusters in the grid.",
                "The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times for the 1BL1 molecule, where the molecule consists of a large number of atoms and each trial structure optimization requires a great deal of time.",
                "The load imbalance of the trial structure optimizations may cause performance degradation.",
                "We need to refine the algorithm used to generate the trial structure in order to improve the load balance optimization for trial structures in CONFLEX.",
                "Future studies will include development of deployment tools and an examination of fault tolerance.",
                "In the current OmniRPC, the registration of an execution program to remote hosts and deployments of worker programs are manually set.",
                "Deployment tools will be required as the number of remote hosts is increased.",
                "In grid environments in which the environment changes dynamically, it is also necessary to support fault tolerance.",
                "This feature is especially important in large-scale applications which require lengthy calculation in a grid environment.",
                "We plan to refine the conformational optimization algorithm in CONFLEX to explore the conformation space search of larger bio-molecules such HIV protease using up to 1000 workers in a grid environment. 7.",
                "ACKNOWLEDGMENTS This research was supported in part by a Grant-in-Aid from the Ministry of Education, Culture, Sports, Science and Technology in Japan, No. 14019011, 2002, and as part of the Program of Research and Development for Applying Advanced Computational Science and Technology by the Japan Science and Technology Corporation (Research on the grid computing platform for drug design).",
                "We would like to thank grid technology research center, AIST, Japan for providing computing resources for our experiment. 8.",
                "REFERENCES [1] H. Goto and E. Osawa.",
                "An efficient algorithm for searching low-energy conformers of cyclic and acyclic molecules.",
                "J. Chem.",
                "Soc., Perkin Trans, 2:187-198, 1993. [2] M. Sato, T. Boku, and D. Takahashi.",
                "OmniRPC: a Grid RPC System for Parallel Programming in Cluster and Grid Environment.",
                "In Proc. of CCGrid2003, pages 219-229, 2003. [3] M. Sato, M. Hirano, Y. Tanaka, and S. Sekiguchi.",
                "OmniRPC: a Grid RPC facility for Cluster and Global Computing in OpenMP.",
                "In Proc. of Workshop on OpenMP Applications and Tools 2001(LNCS 2104 ), pages 130-135, 2001. [4] OmniRPC Project. http://www.omni.hpcc.jp/omnirpc/. [5] M. Sato, H. Nakada, S. Sekiguchi, S. Matsuoka, U. Nagashima, and H. Takagi.",
                "Ninf: A Network Based Information Library for Global World-Wide Computing Infrastructure.",
                "In HPCN Europe, pages 491-502, 1997. [6] Ninf Project. http://ninf.apgrid.org/. [7] Y. Tanaka, H. Nakada, S. Sekiguchi, T. Suzumura, and S. Matsuoka.",
                "Ninf-G: A Reference Implementation of RPC-based Programming Middleware for Grid Computing .",
                "Journal of Grid Computing, 1(1):41-51, 2003. [8] D. Arnold, S. Agrawal, S. Blackford, J. Dongarra, M. Miller, K. Seymour, K. Sagi, Z. Shi, and S. Vadhiyar.",
                "Users Guide to NetSolve V1.4.1.",
                "Innovative Computing Dept.",
                "Technical Report ICL-UT-02-05, University of Tennessee, Knoxville, TN, June 2002. [9] Object management group. http://www.omg.org/. [10] K. Seymour, H. Nakada, S. Matsuoka, J. Dongarra, C. Lee, and H. Casanova.",
                "GridRPC: A Remote Procedure Call API for Grid Computing. [11] H.Goto, T. Takahashi, Y. Takata, K. Ohta, and U Nagashima.",
                "Conflex: Conformational behaviors of polypeptides as predicted by a conformational space search.",
                "In Nanotech2003, volume 1, pages 32-35, 2003. [12] I.",
                "Foster and C. Kesselman.",
                "Globus: A metacomputing infrastructure toolkit.",
                "The International Journal of Supercomputer Applications and High Performanc e Computing, 11(2):115-128, Summer 1997. [13] Stefan M. Larson, Christopher D. Snow, Michael Shirts, and Vijay S. Pande.",
                "Folding@home and genome@home: Using distributed computing to tackle prev iously intractable problems in computational biology.",
                "Computational Genomics, 2002. [14] seti@home project. http://setiathome.ssl.berkeley.edu/. [15] R. Buyya, K. Branson, J. Giddy, and D. Abramson.",
                "The virtual laboratory: a toolset to enable distributed molecular modelling for drug design on the world-wide grid.",
                "Concurrency and Computation: Practice and Experience, 15(1):1-25, January 2003. [16] S. Matsuoka, H. Nakada, M. Sato, and S. Sekiguchi.",
                "Design issues of Network Enabled Server Systems for the Grid.",
                "In Proc. of GRID 2000 (LNCS 1971), pages 4-17, 2000. 163"
            ],
            "original_annotated_samples": [
                "The OmniRPC facility of the <br>automatic initializable module</br> (AIM) allows the system to efficiently calculate numerous conformers.",
                "Because OmniRPC is a thread-safe system, a number of remote procedure calls may be outstanding at any time for multi-threaded programs written in OpenMP. 3.2 OmniRPC persistence model: <br>automatic initializable module</br> OmniRPC efficiently supports typical Master/Worker parallel applications such as parametric execution programs.",
                "For parametric search applications, which often require large amount of identical data for each call, OmniRPC supports a limited persistence model, which is implemented by the <br>automatic initializable module</br>.",
                "OmniRPC provides a restricted persistence model through the <br>automatic initializable module</br> (AIM) in order to support this type of application.",
                "It is necessary for the common RPC system including GridRPC to initialize a program for every RPC call, since data persistence of worker programs 157 time Client Program Worker Program 1 Worker Program 2 initialization initialization calculation calculation calculation calculation calculation Parallelized using asynchronous RPCs Figure 5: Time chart of applications using the OmniRPC facility of the <br>automatic initializable module</br>. time Client Program Worker Program 1 Worker Program 2 initialization initializationcalculation calculation calculation calculation initialization initialization initialization Parallelized using asynchronous RPCs calculation Figure 6: Time chart of applications without the OmniRPC facility of the <br>automatic initializable module</br>."
            ],
            "translated_annotated_samples": [
                "La facilidad OmniRPC del <br>módulo inicializable automático</br> (AIM) permite al sistema calcular eficientemente numerosos conformeros.",
                "Debido a que OmniRPC es un sistema seguro para hilos, puede haber varios llamados a procedimientos remotos pendientes en cualquier momento para programas multi-hilo escritos en OpenMP. Modelo de persistencia de OmniRPC 3.2: <br>módulo inicializable automáticamente</br>. OmniRPC soporta eficientemente aplicaciones paralelas típicas de Maestro/Trabajador como programas de ejecución paramétrica.",
                "Para aplicaciones de búsqueda paramétrica, que a menudo requieren una gran cantidad de datos idénticos para cada llamada, OmniRPC admite un modelo de persistencia limitado, que está implementado por el <br>módulo inicializable automático</br>.",
                "OmniRPC proporciona un modelo de persistencia restringido a través del <br>módulo inicializable automático</br> (AIM) para apoyar este tipo de aplicación.",
                "Es necesario que el sistema RPC común, incluido GridRPC, inicialice un programa para cada llamada RPC, ya que la persistencia de datos de los programas trabajadores."
            ],
            "translated_text": "Implementación y Evaluación del Rendimiento de CONFLEX-G: Programa de Búsqueda de Espacio Conformacional Molecular Habilitado para Grid con OmniRPC. Hemos implementado CONFLEX-G utilizando un sistema de RPC en malla llamado OmniRPC. En este artículo, informamos sobre el rendimiento de CONFLEX-G en un banco de pruebas en red de varios clústeres de PC distribuidos geográficamente. Para explorar muchas conformaciones de grandes biomoléculas, CONFLEX-G genera estructuras de prueba de las moléculas y asigna trabajos para optimizar una estructura de prueba con un método confiable de mecánica molecular en la cuadrícula. OmniRPC proporciona un modelo de persistencia restringido para respaldar las aplicaciones de búsqueda paramétrica. En este modelo, cuando el procedimiento de inicialización está definido en el módulo RPC, el módulo se inicializa automáticamente en el momento de la invocación llamando al procedimiento de inicialización. Esto puede eliminar la comunicación y la inicialización innecesarias en cada llamada en CONFLEX-G. CONFLEXG puede lograr un rendimiento comparable al de CONFLEX MPI y puede aprovechar más recursos informáticos al permitir el uso de un clúster de múltiples clústeres en la cuadrícula. El resultado experimental muestra que CONFLEX-G logró una aceleración de 56.5 veces en el caso de la molécula 1BL1, donde la molécula consta de un gran número de átomos y cada optimización de la estructura de prueba requiere un tiempo significativo. El desequilibrio de carga en el tiempo de optimización de la estructura de prueba también puede causar degradación del rendimiento. Categorías y Descriptores de Asignaturas C.2.4 [Organización de Sistemas Informáticos]: RED DE COMUNICACIÓN DE COMPUTADORAS-Sistemas Distribuidos; J.2.4 [Aplicaciones Informáticas]: CIENCIAS FÍSICAS E INGENIERÍA Términos Generales Diseño, Rendimiento 1. INTRODUCCIÓN La elucidación de las conformaciones estables y el proceso de plegamiento de las proteínas es uno de los objetivos más fundamentales y desafiantes en las ciencias de la vida. Si bien algunas de las estructuras secundarias más comunes (por ejemplo, ciertos tipos de hélice, la lámina beta y la hélice) son bien conocidas, se requiere un análisis preciso de los miles de conformaciones químicamente importantes y un análisis de orden de pico-segundo de sus interconversiones conformacionales a través de los estados de transición en la superficie de energía potencial para la investigación de orden de microsegundo del proceso de plegamiento hacia la formación de la estructura terciaria. Recientemente, el concepto de la red computacional ha comenzado a atraer un interés significativo en el campo de la computación de alto rendimiento en red. Los rápidos avances en la tecnología e infraestructura de redes de área amplia han hecho posible construir entornos de computación distribuida a gran escala y alto rendimiento, o redes computacionales, que proporcionan acceso confiable, consistente y generalizado a enormes recursos computacionales. CONFLEX es uno de los programas de búsqueda de espacio conformacional más eficientes y confiables. Hemos aplicado este programa 154 a la paralelización utilizando computación global. El rendimiento del CONFLEX paralelizado permite explorar la región de energía más baja del espacio conformacional de péptidos pequeños en un tiempo transcurrido disponible utilizando un clúster de PC local. Dado que la optimización de la estructura de prueba en CONFLEX se calcula a través de la mecánica molecular, la búsqueda del espacio conformacional se puede realizar rápidamente en comparación con la que utiliza cálculos de orbitales moleculares. Aunque se utilizó la versión paralelizada de CONFLEX para calcular de forma paralela la optimización de la estructura, que representa más del 90% del procesamiento en la búsqueda de conformaciones moleculares, no se pudo lograr una mejora suficiente en la aceleración solo con este método. Por lo tanto, para polímeros de alto peso molecular de organismos vivos, como la proteasa del VIH, el uso de un solo clúster de PC es insuficiente debido a la necesidad de optimizar una gran cantidad de estructuras de prueba. Esto requiere los vastos recursos informáticos de un entorno de computación en malla. En este artículo, describimos CONFLEX-G, un programa de búsqueda conformacional molecular habilitado para grid, utilizando OmniRPC y reportamos su rendimiento en un grid de varios clusters de PC distribuidos geográficamente. El prototipo CONFLEX-G asigna la optimización de las estructuras de cálculo de prueba, que es una tarea muy consumidora de tiempo, a nodos trabajadores en el entorno de la red para obtener un alto rendimiento. Además, comparamos el rendimiento de CONFLEX-G en un clúster de PC local con el de un banco de pruebas en red. OmniRPC[2, 3, 4] es una implementación segura para hilos de Ninf RPC[5, 6], que es una facilidad de RPC de cuadrícula para la computación en entornos de cuadrícula. Varios sistemas adoptan el concepto de la RPC como el modelo básico para la computación en entornos de rejilla, incluyendo Ninf-G[7], NetSolve[8] y CORBA[9]. El sistema RPCstyle proporciona una interfaz de programación fácil de usar e intuitiva, que permite a los usuarios del sistema de cuadrícula crear fácilmente aplicaciones habilitadas para la cuadrícula. Para apoyar la programación paralela, un cliente de RPC puede emitir solicitudes de llamada asincrónicas a un ordenador remoto diferente para aprovechar el paralelismo en toda la red a través de OmniRPC. En este artículo, proponemos el modelo de persistencia OmniRPC para un sistema de RPC de Grid y demostramos su efectividad. Para apoyar una aplicación típica para un entorno de cuadrícula, como una aplicación de búsqueda paramétrica, en la que la misma función se ejecuta con diferentes parámetros de entrada en el mismo conjunto de datos. En el sistema GridRPC actual[10], el conjunto de datos establecido por la llamada anterior no puede ser utilizado por llamadas posteriores. En el sistema OmniRPC, una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado y su estado inicializado para llamadas posteriores a las mismas funciones remotas con el fin de eliminar el costo de invocación de cada llamada. Este documento demuestra que CONFLEX-G es capaz de aprovechar los enormes recursos informáticos de un entorno de grid y buscar conformadores moleculares a gran escala. Demostramos CONFLEX-G en nuestra plataforma de pruebas en red utilizando la proteína real como molécula de muestra. La facilidad OmniRPC del <br>módulo inicializable automático</br> (AIM) permite al sistema calcular eficientemente numerosos conformeros. Además, al utilizar OmniRPC, el usuario puede paralelizar en cuadrícula la aplicación existente y pasar del clúster al entorno de cuadrícula sin modificar el código del programa y compilar el programa. Además, el usuario puede construir fácilmente un entorno de red privada. El resto de este documento está organizado de la siguiente manera. Se presenta una visión general de la Base de Datos de Conformaciones de Estructuras Iniciales, la Perturbación Local, la Optimización de la Geometría, la Comparación y el Registro. Figura 1: Algoritmo de búsqueda de espacio conformacional en el CONFLEX original. El sistema CONFLEX se describe en la Sección 2, y la implementación y diseño de CONFLEX-G se detallan en la Sección 3. Informamos los resultados experimentales obtenidos utilizando CONFLEX-G y discutimos su rendimiento en la Sección 4. En la Sección 6, presentamos conclusiones y discutimos temas para estudios futuros. 2. CONFLEX es un programa eficiente de búsqueda de espacio conformacional, que puede buscar predominantemente y exhaustivamente los conformeros en la región de energía más baja. Las aplicaciones de CONFLEX incluyen la elucidación de la reactividad y selectividad de fármacos y posibles materiales medicinales con respecto a su flexibilidad conformacional. 2.1 Algoritmo de Búsqueda de Espacio Conformacional La estrategia básica de CONFLEX es una búsqueda exhaustiva solo de las regiones de baja energía. El CONFLEX original realiza los siguientes cuatro pasos principales: 1. Selección de una estructura inicial entre los conformeros únicos previamente descubiertos y ordenados en una base de datos conformacional. (Una estructura de entrada se utiliza como la primera estructura inicial al comienzo de una ejecución de búsqueda solamente.) 2. Generación de estructuras de prueba mediante perturbaciones locales a la estructura inicial seleccionada. 3. Optimización de geometría para las nuevas estructuras de prueba generadas. 4. Comparación de las estructuras optimizadas con éxito (ensayo) con los otros conformeros almacenados en una base de datos de conformaciones, y preservación de los conformeros únicos recién descubiertos en la base de datos. La Figura 1 muestra el esquema de CONFLEX, el algoritmo original de búsqueda de espacio conformacional. Estos procedimientos incorporan dos estrategias únicas. La Figura 2 muestra las estrategias para generar perturbaciones locales en CONFLEX. La primera estrategia implica tanto el aleteo de las esquinas como el volteo de los bordes para los átomos del anillo y la rotación paso a paso para las cadenas laterales o cadenas del esqueleto. Estos métodos proporcionan una forma altamente eficiente de producir varias estructuras de prueba buenas. Estas perturbaciones pueden considerarse como una imitación de 155 Rotación Escalonada de Esquina de Solapa de Borde de Giro Figura 2: Estrategias utilizadas para generar las perturbaciones locales, un paso de cruce de barrera en el proceso elemental de la interconversión conformacional térmica. De hecho, las perturbaciones de una estructura inicial corresponden al rendimiento preciso alrededor del espacio de la estructura inicial debido a la localización y debilidad de la perturbación. La regla de selección de la estructura inicial, la regla LowestConformer-First, es la segunda estrategia para dirigir la búsqueda de conformaciones ampliada a las regiones de baja energía. La estructura inicial se selecciona como el conjunto de conformaciones de menor energía almacenadas en la base de datos de conformaciones. Esta regla es efectiva para desplazarse hacia abajo en el espacio de búsqueda hacia regiones de menor energía, como el agua de un arroyo que fluye hacia un embalse vacío, llenando depresiones locales en el camino. Por lo tanto, estos procedimientos tácticos de la búsqueda CONFLEX se conocen como el Algoritmo de Llenado de Reservorio. Para permanecer en la región de baja energía y realizar una búsqueda exhaustiva, el límite de búsqueda (SEL), que determina la energía máxima de las estructuras iniciales, está predefinido. El aumento gradual de SEL permite buscar solo los conformeros de baja energía y evita desviarse hacia regiones de energía innecesariamente alta. 2.2 Paralelización de CONFLEX para clúster Para su aplicación en más de 100 átomos, CONFLEX fue mejorado utilizando técnicas de computación paralela de alto rendimiento. En el algoritmo de búsqueda CONFLEX, los procedimientos de optimización de geometría siempre ocupan el 95% del tiempo transcurrido durante la ejecución de la búsqueda. Por lo tanto, paralelizamos esta optimización utilizando la técnica de paralelización Maestro/Trabajador. Modificamos los procedimientos de búsqueda de la siguiente manera. Después de que se generan las estructuras de prueba (paso 2), se almacenan temporalmente en un grupo de tareas en el nodo maestro. Entonces, cada nodo trabajador recibe dinámicamente una estructura de prueba del nodo maestro. Después de que se complete una optimización en un nodo de trabajador, este recibe inmediatamente otra estructura de prueba. Cuando todas las estructuras de prueba relacionadas con una estructura inicial dada están optimizadas, solo se utiliza el procedimiento principal para la comparación. Al paralelizar CONFLEX, la aceleración de la búsqueda de conformadores moleculares obtenida es la reportada en[11]. 3. CONFLEX-G Originalmente, CONFLEX estaba destinado a ser utilizado para explorar los conformeros de las grandes biomoléculas, como la proteasa del VIH. En tales moléculas, el número de estructuras de prueba aumenta y el tiempo requerido para la optimización de la Selección de RPC de Estructuras Iniciales Conformaciones de la Base de Datos de Perturbación Local Comparación y Registro del Cliente Programa Cliente Grupo de Tareas de Optimización Geométrica RPC Entorno de Rejilla RPC Cluster B Cluster A Cluster C Estructura de prueba Estructura de prueba Estructura de prueba Estructura de prueba Figura 3: Procedimiento de CONFLEX-G. agente rexrex rex Cliente jones.tsukuba.ac.jp hpc-serv.hpcc.jp hpc1 hpc2 hpc3 Invocación del agente Comunicación de la red Figura 4: Visión general del sistema OmniRPC para el clúster remoto con una dirección IP privada. la estructura de prueba se vuelve inmensa. Implementamos la versión paralelizada de CONFLEX, la cual no puede tratar tales moléculas utilizando solo un clúster de PC local. Para aprovechar los vastos recursos informáticos de un entorno de grid, diseñamos e implementamos CONFLEX-G, que es una versión habilitada para grid de CONFLEX, con el sistema OmniRPC. CONFLEX-G asigna trabajos para optimizar una estructura de prueba a los nodos computacionales de cada clúster en el entorno de la red. La Figura 3 muestra el proceso de CONFLEX-G. Los programas de los trabajadores se inicializan mediante el método de inicialización, que es proporcionado por la instalación de OmniRPC AIM en la invocación del trabajador. En cada llamada RPC, el estado inicializado se reutiliza en el host remoto. En otras palabras, el programa cliente puede eliminar la inicialización para cada llamada RPC, y por lo tanto optimizar eficientemente las estructuras de prueba. 3.1 El sistema OmniRPC OmniRPC es un sistema de RPC en malla que permite una programación paralela sin problemas desde un clúster de PC hasta un entorno de malla. OmniRPC hereda su API y arquitectura básica de Ninf. Un cliente y los hosts computacionales remotos que ejecutan los procedimientos remotos pueden estar conectados a través de una red. Las bibliotecas remotas se implementan como un programa ejecutable que contiene una rutina de soporte de red como su rutina principal. Llamamos a este programa ejecutable un programa ejecutable remoto (rex). Cuando el programa cliente OmniRPC se inicia, la función de inicialización del sistema OmniRPC invoca el programa agente OmniRPC omrpc-agent en los hosts remotos listados en el archivo de hosts. Para invocar al agente, el usuario puede utilizar el comando de shell remoto rsh en una red de área local, la API de GRAM (Gestor de Asignación de Recursos Globus) del kit de herramientas Globus 156 en un entorno de grid, o el comando de shell remoto seguro ssh. El usuario puede cambiar las configuraciones solo modificando el archivo de host. OmniRpcCall es una interfaz de programación de cliente simple para llamar a funciones remotas. Cuando OmniRpcCall realiza una llamada a un procedimiento remoto, la llamada se asigna a un host remoto apropiado. Cuando el cliente emite la solicitud de RPC, solicita que el agente en el host seleccionado envíe el trabajo del ejecutable remoto con el programador de trabajos local especificado en el archivo del host. Si no se especifica el programador de tareas, el agente ejecuta el ejecutable remoto en el mismo nodo mediante la llamada al sistema fork. El cliente envía los datos de los argumentos de entrada al ejecutable remoto invocado, y recibe los resultados al regreso de la función remota. Una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado para llamadas RPC posteriores con el fin de eliminar el costo de invocar nuevamente el mismo ejecutable remoto. Cuando el agente y los ejecutables remotos son invocados, los programas remotos obtienen la dirección y el puerto del cliente de la lista de argumentos y se conectan de vuelta al cliente mediante TCP/IP directo o Globus-IO para la transmisión de datos. Debido a que el sistema OmniRPC no utiliza puertos de servicio fijos, el programa cliente asigna puertos no utilizados dinámicamente para esperar la conexión de los ejecutables remotos. Esto evita posibles problemas de seguridad y permite al usuario instalar el sistema OmniRPC sin necesidad de contar con una cuenta privilegiada. Aquí, un recurso de red típico se considera como un grupo de clústeres de PC distribuidos geográficamente. Para los clústeres de PC en una red privada, un proceso agente OmniRPC en el host del servidor funciona como un proxy para relé de comunicaciones entre el cliente y los ejecutables remotos mediante la multiplexación de las comunicaciones utilizando una única conexión. Esta característica, llamada multiplex IO (MXIO), permite a un único cliente utilizar hasta 1,000 hosts de computación remota. Cuando el clúster de PC está dentro de un firewall, el reenvío de puertos de SSH permite que el nodo se comunique con el exterior a través de MXIO. La Figura 4 muestra la descripción general del sistema OmniRPC para un clúster remoto con una dirección IP privada. Para la programación en paralelo, el programador puede utilizar llamadas a procedimientos remotos asíncronos, lo que permite al cliente emitir varias solicitudes mientras continúa con otras computaciones. Las solicitudes se envían a diferentes hosts remotos para ser ejecutadas en paralelo, y el cliente espera o consulta la solicitud completada. En un modelo de programación con llamadas a procedimientos remotos asíncronos, el programador debe manejar las solicitudes pendientes de forma explícita. Debido a que OmniRPC es un sistema seguro para hilos, puede haber varios llamados a procedimientos remotos pendientes en cualquier momento para programas multi-hilo escritos en OpenMP. Modelo de persistencia de OmniRPC 3.2: <br>módulo inicializable automáticamente</br>. OmniRPC soporta eficientemente aplicaciones paralelas típicas de Maestro/Trabajador como programas de ejecución paramétrica. Para aplicaciones de búsqueda paramétrica, que a menudo requieren una gran cantidad de datos idénticos para cada llamada, OmniRPC admite un modelo de persistencia limitado, que está implementado por el <br>módulo inicializable automático</br>. El usuario puede definir un procedimiento de inicialización en el ejecutable remoto para enviar y almacenar datos automáticamente antes de las llamadas reales al procedimiento remoto. Dado que el ejecutable remoto puede aceptar solicitudes para llamadas posteriores, el conjunto de datos que ha sido establecido por el procedimiento de inicialización puede ser reutilizado. Como resultado, el programa del trabajador puede ejecutarse de manera eficiente y reducir la cantidad de datos transmitidos para la inicialización. Una vez que se invoca un ejecutable remoto, el cliente intenta utilizar el ejecutable remoto invocado para llamadas RPC posteriores. Sin embargo, OmniRPC no garantiza la persistencia del ejecutable remoto, por lo que el conjunto de datos establecido por la llamada anterior no puede ser utilizado por llamadas posteriores. Esto se debe a que una llamada remota realizada por OmniRpcCall puede ser programada en cualquier host remoto de forma dinámica, y los ejecutables remotos pueden ser terminados accidentalmente debido a una reprogramación dinámica o fallos en el host. Sin embargo, la persistencia del ejecutable remoto puede ser explotada en ciertas aplicaciones. Un ejemplo es una aplicación de búsqueda paramétrica: en dicha aplicación, sería eficiente si un gran conjunto de datos pudiera cargarse previamente en la primera llamada, y las llamadas posteriores pudieran realizarse en los mismos datos, pero con diferentes parámetros. Este es el caso para CONFLEX. OmniRPC proporciona un modelo de persistencia restringido a través del <br>módulo inicializable automático</br> (AIM) para apoyar este tipo de aplicación. Si el procedimiento de inicialización está definido en el módulo, el módulo se inicializa automáticamente al invocarlo llamando al procedimiento de inicialización. Cuando el ejecutable remoto se reprograma en diferentes hosts, se llama a la inicialización para inicializar el módulo remoto recién asignado. Esto puede eliminar comunicaciones innecesarias cuando las llamadas RPC utilizan los mismos datos. Para revelar más sobre la diferencia en el progreso entre los casos con OmniRPC AIM y sin OmniRPC AIM, presentamos dos figuras. La Figura 5 ilustra el gráfico de tiempo del progreso de una aplicación típica de OmniRPC utilizando la facilidad OmniRPC AIM, y la Figura 6 ilustra el gráfico de tiempo de la misma aplicación sin la facilidad OmniRPC AIM. En ambas figuras, las líneas entre los diamantes representan los procesos de inicialización, y las líneas entre los puntos representan los cálculos. La línea en negrita indica el momento en que el programa cliente envía los datos al programa trabajador. Es necesario que la aplicación sin la funcionalidad OmniRPC AIM se inicialice en cada RPC. La aplicación que utiliza la funcionalidad OmniRPC AIM puede reutilizar los datos inicializados una vez que el conjunto de datos está inicializado. Esto puede reducir la inicialización en cada RPC. Los trabajadores de la aplicación con AIM pueden calcular de manera eficiente en comparación con la aplicación sin la facilidad de AIM de OmniRPC. 3.3 Implementación de CONFLEX-G utilizando OmniRPC. La Figura 3 muestra una visión general del proceso utilizado en CONFLEX-G. Usando RPCs, CONFLEX-G asigna los procesos de optimización de la estructura de prueba, que son realizados por los nodos de cálculo de un clúster de PC en la versión MPI de CONFLEX, a los nodos computacionales de cada clúster en un entorno de grid. Hay dos cálculos que realizan los programas de trabajador en CONFLEX-G. Uno es la inicialización de un programa de trabajador, y otro es el cálculo de la optimización de la estructura de prueba. Primero, la instalación OmniRPC del AIM se adapta para la inicialización de un programa trabajador. Esta instalación llama automáticamente a la función de inicialización, la cual está contenida en el programa de trabajador, una vez que el programa cliente invoca al programa de trabajador en un nodo remoto. Es necesario que el sistema RPC común, incluido GridRPC, inicialice un programa para cada llamada RPC, ya que la persistencia de datos de los programas trabajadores. ",
            "candidates": [],
            "error": [
                [
                    "módulo inicializable automático",
                    "módulo inicializable automáticamente",
                    "módulo inicializable automático",
                    "módulo inicializable automático"
                ]
            ]
        },
        "computational chemistry": {
            "translated_key": "química computacional",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Implementation and Performance Evaluation of CONFLEX-G: Grid-enabled Molecular Conformational Space Search Program with OmniRPC Yoshihiro Nakajima Graduate School of Systems & Information Engineering, University of Tsukuba Tsukuba, 305-8577, Japan yoshihiro@hpcs.is.tsukuba.ac.jp Mitsuhisa Sato Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan msato@is.tsukuba.ac.jp Hitoshi Goto Knowledge-based Information Engineering, Toyohashi University of Technology Toyohashi, 441-8580, Japan gotoh@cochem2.tutkie.tut.ac.jp Taisuke Boku, Daisuke Takahashi Institute of Information Sciences and Electronics, University of Tsukuba Tsukuba, 305-8577, Japan {taisuke,daisuke}@hpcs.is.tsukuba.ac.jp ABSTRACT CONFLEX-G is the grid-enabled version of a molecular conformational space search program called CONFLEX.",
                "We have implemented CONFLEX-G using a grid RPC system called OmniRPC.",
                "In this paper, we report the performance of CONFLEX-G in a grid testbed of several geographically distributed PC clusters.",
                "In order to explore many conformation of large bio-molecules, CONFLEX-G generates trial structures of the molecules and allocates jobs to optimize a trial structure with a reliable molecular mechanics method in the grid.",
                "OmniRPC provides a restricted persistence model to support the parametric search applications.",
                "In this model, when the initialization procedure is defined in the RPC module, the module is automatically initialized at the time of invocation by calling the initialization procedure.",
                "This can eliminate unnecessary communication and initialization at each call in CONFLEX-G. CONFLEXG can achieve performance comparable to CONFLEX MPI and can exploit more computing resources by allowing the use of a cluster of multiple clusters in the grid.",
                "The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times in the case of the 1BL1 molecule, where the molecule consists of a large number of atoms, and each trial structure optimization requires significant time.",
                "The load imbalance of the optimization time of the trial structure may also cause performance degradation.",
                "Categories and Subject Descriptors C.2.4 [Computer Systems Organization]: COMPUTERCOMMUNICATION NETWORK-Distributed Systems; J.2.4 [Computer Applications]: PHYSICAL SCIENCES AND ENGINEERING General Terms Design,Performance 1.",
                "INTRODUCTION Elucidation of the stable conformations and the folding process of proteins is one of the most fundamental and challenging goals in life science.",
                "While some of the most common secondary structures (e.g., certain types of helix, the beta-strand, and the coil) are well known, precise analysis of the thousands of chemically important conformers and pico-second-order analysis of their conformational interconversions via the transition states on the potential energy surface are required for the microsecond-order investigation of the folding process toward the tertiary structure formations.",
                "Recently, the concept of the computational grid has begun to attract significant interest in the field of high-performance network computing.",
                "Rapid advances in wide-area networking technology and infrastructure have made it possible to construct large-scale, high-performance distributed computing environments, or computational grids, that provide dependable, consistent and pervasive access to enormous computational resources.",
                "CONFLEX is one of the most efficient and reliable conformational space search programs[1].",
                "We have applied this 154 program to parallelization using global computing.",
                "The performance of the parallelized CONFLEX enables exploration of the lower-energy region of the conformational space of small peptides within an available elapsed time using a local PC cluster.",
                "Since trial structure optimization in CONFLEX is calculated via molecular mechanics, conformational space search can be performed quickly compared to that using molecular orbital calculation.",
                "Although the parallelized version of CONFLEX was used to calculate in parallel the structure optimization, which takes up over 90% of the processing in the molecular conformation search, sufficient improvement in the speedup could not be achieved by this method alone.",
                "Therefore, for high polymers from live organisms, such as HIV protease, the use one PC cluster is insufficient due to the requirement for optimization of a huge number of trial structures.",
                "This requires the vast computer resources of a grid computing environment.",
                "In this paper, we describe CONFLEX-G, a grid-enabled molecular conformational search program, using OmniRPC and report its performance in a grid of several PC clusters which are geographically distributed.",
                "The prototype CONFLEX-G allocates calculation trial structures optimization, which is a very time-consuming task, to worker nodes in the grid environment in order to obtain high throughput.",
                "In addition, we compare the performance of CONFLEX-G in a local PC cluster to that in a grid testbed.",
                "OmniRPC[2, 3, 4] is a thread-safe implementation of Ninf RPC[5, 6] which is a Grid RPC facility for grid environment computing.",
                "Several systems adopt the concept of the RPC as the basic model for grid environment computing, including Ninf-G[7], NetSolve[8] and CORBA[9].",
                "The RPCstyle system provides an easy-to-use, intuitive programming interface, allowing users of the grid system to easily create grid-enabled applications.",
                "In order to support parallel programming, an RPC client can issue asynchronous call requests to a different remote computer to exploit networkwide parallelism via OmniRPC.",
                "In this paper, we propose the OmniRPC persistence model to a Grid RPC system and demonstrate its effectiveness.",
                "In order to support a typical application for a grid environment, such as a parametric search application, in which the same function is executed with different input parameters on the same data set.",
                "In the current GridRPC system[10], the data set by the previous call cannot be used by subsequent calls.",
                "In the OmniRPC system, once a remote executable is invoked, the client attempts to use the invoked remote executable and its initialized state for subsequent RPC calls to the same remote functions in order to eliminate the invocation cost of each call.",
                "This paper demonstrates that CONFLEX-G is able to exploit the huge computer resources of a grid environment and search large-scale molecular conformers.",
                "We demonstrate CONFLEX-G on our grid testbed using the actual protein as a sample molecule.",
                "The OmniRPC facility of the automatic initializable module (AIM) allows the system to efficiently calculate numerous conformers.",
                "Furthermore, by using OmniRPC, the user can grid-parallelize the existing application, and move from the cluster to the grid environment without modifying program code and compiling the program.",
                "In addition, the user can easily build a private grid environment.",
                "The rest of this paper is organized as follows.",
                "An overview Selection of Initial Structure Conformations Database Local Perturbation Geometry Optimization Comparison and Registration Figure 1: Algorithm of conformational space search in the original CONFLEX. of the CONFLEX system is presented in Section2, and the implementation and design of CONFLEX-G are described in Section 3.",
                "We report experimental results obtained using CONFLEX-G and discuss its performance in Section 4.",
                "In Section 6, we present conclusions and discuss subjects for future study. 2.",
                "CONFLEX CONFLEX [1] is an efficient conformational space search program, which can predominately and exhaustively search the conformers in the lower-energy region.",
                "Applications of CONFLEX include the elucidation of the reactivity and selectivity of drugs and possible drug materials with regard to their conformational flexibility. 2.1 Algorithm of ConformationalSpaceSearch The basic strategy of CONFLEX is an exhaustive search of only the low-energy regions.",
                "The original CONFLEX performs the following four major steps: 1.",
                "Selection of an initial structure among the previously discovered unique conformers sorted in a conformational database. (An input structure is used as the first initial structure at the beginning of a search execution only.) 2.",
                "Generation of trial structures by local perturbations to the selected initial structure. 3.",
                "Geometry optimization for the newly generated trial structures. 4.",
                "Comparison of the successfully optimized (trial) structures with the other conformers stored in a conformation database, and preservation of newly discovered unique conformers in the database.",
                "Figure 1 shows the outline of CONFLEX, the original conformational space search algorithm.",
                "These procedures incorporate two unique strategies.",
                "Figure 2 shows the strategies for generating local perturbations in CONFLEX.",
                "The first strategy involves both corner flapping and edge flipping for the ring atoms and stepwise rotation for side-chains or backbone chains.",
                "These methods provide a highly efficient way to produce several good trial structures.",
                "These perturbations can be considered to mimic 155 Stepwise Rotation Corner Flap Edge Flip Figure 2: Strategies used to generate the local perturbations. a barrier-crossing step in the elementary process of the thermal conformational inter-conversion.",
                "Actually, the perturbations of an initial structure correspond to the precise performance around the space of the initial structure because of localization and weakness of the perturbation.",
                "The selection rule of the initial structure, the LowestConformer-First rule, is the second strategy for directing the conformation search expanded to the low-energy regions.",
                "The initial structure is selected as the set of lowest energy conformers stored in the conformation database.",
                "This rule is effective in moving down the search space toward lower energy regions, like water from a stream running into an empty reservoir, while filling local depressions along the way.",
                "Therefore, these tactical procedures of the CONFLEX search are referred to as the Reservoir Filling Algorithm.",
                "In order to remain in the low-energy region and perform an exhaustive search, the search limit (SEL), which determines the maximum energy of the initial structures, is pre-defined.",
                "Gradually increasing SEL allows only the lowenergy conformers to be searched and avoids straying into unnecessarily high-energy regions. 2.2 Parallelization of CONFLEX for Cluster For application to over 100 atoms, CONFLEX was improved using high-performance parallel computing techniques.",
                "In the CONFLEX search algorithm, the geometry optimization procedures always take 95% of the elapsed time of the search execution.",
                "Therefore, we parallelized this optimization using the Master/Worker parallelization technique.",
                "We modified the search procedures as follows.",
                "After trial structures are generated (step 2), they are temporarily stored in a task pool on the master node.",
                "Then, each worker node is dynamically supplied with one trial structure from the master node.",
                "After an optimization on a worker node is finished, the worker is immediately supplied with another trial structure.",
                "When all of the trial structures related to a given initial structure are optimized, only the master procedure is used in comparison.",
                "By parallelizing CONFLEX, the speedup of searching molecular conformers obtained is as reported in[11]. 3.",
                "CONFLEX-G Originally, CONFLEX was intended for use in exploring the conformers of the large bio-molecules, such HIV protease.",
                "In such molecules, the number of trial structures increases and the time required for optimization of RPC Selection of Initial Structure Conformations Database Local Perturbation Comparison and Registration Client program Task Pool of Geometry Optimization RPC RPC Grid environment Cluster B Cluster A Cluster C Trial structureTrial structure Trial structure Trial structure Figure 3: Procedure of CONFLEX-G. agent rexrex rex Client jones.tsukuba.ac.jp hpc-serv.hpcc.jp hpc1 hpc2 hpc3 Agent invocation communicationNetwork Figure 4: Overview of the OmniRPC system for the remote cluster having a private IP address. the trial structure becomes immense.",
                "We implemented the parallelized version of CONFLEX, which cannot treat such molecules using only a local PC cluster.",
                "In order to exploit the vast computing resources of a grid environment, we designed and implemented CONFLEX-G, which is a grid-enabled version of CONFLEX, with the OmniRPC system.",
                "CONFLEX-G allocates jobs to optimize a trial structure to the computational nodes of each cluster in the grid environment.",
                "Figure 3 shows the process of CONFLEX-G.",
                "The worker programs are initialized by the initialize method, which is provided by the OmniRPC AIM facility at worker invocation.",
                "At each RPC call, the initialized state is reused on the remote host.",
                "In other words, the client program can eliminate the initialization for each RPC call, and can therefore optimize trial structures efficiently. 3.1 The OmniRPC system OmniRPC is a Grid RPC system which allows seamless parallel programming from a PC cluster to a grid environment.",
                "OmniRPC inherits its API and basic architecture from Ninf.",
                "A client and the remote computational hosts which execute the remote procedures may be connected via a network.",
                "The remote libraries are implemented as an executable program which contains a network stub routine as its main routine.",
                "We call this executable program a remote executable program (rex).",
                "When the OmniRPC client program starts, the initialization function of OmniRPC system invokes the OmniRPC agent program omrpc-agent in the remote hosts listed in the host file.",
                "To invoke the agent, the user can use the remote shell command rsh in a local-area network, the GRAM (Globus Resource Allocation Manager) API of the Globus 156 toolkit[12] in a grid environment, or the secure remote shell command ssh.",
                "The user can switch the configurations only by changing the host file.",
                "OmniRpcCall is a simple client programming interface for calling remote functions.",
                "When OmniRpcCall makes a remote procedure call, the call is allocated to an appropriate remote host.",
                "When the client issues the RPC request, it requests that the agent in the selected host submit the job of the remote executable with the local job scheduler specified in the host file.",
                "If the job scheduler is not specified, the agent executes the remote executable in the same node by the fork system call.",
                "The client sends the data of the input arguments to the invoked remote executable, and receives the results upon return of the remote function.",
                "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls in order to eliminate the cost of invoking the same remote executable again.",
                "When the agent and the remote executables are invoked, the remote programs obtain the client address and port from the argument list and connect back to the client by direct TCP/IP or Globus-IO for data transmission.",
                "Because the OmniRPC system does not use any fixed service ports, the client program allocates unused ports dynamically to wait for connection from the remote executables.",
                "This avoids possible security problems, and allows the user to install the OmniRPC system without requiring a privileged account.",
                "Herein, a typical grid resource is regarded as a cluster of geographically distributed PC clusters.",
                "For PC clusters on a private network, an OmniRPC agent process on the server host functions as a proxy to relay communications between the client and the remote executables by multiplexing the communications using a single connection.",
                "This feature, called multiplex IO (MXIO), allows a single client to use up to 1,000 remote computing hosts.",
                "When the PC cluster is inside a firewall, the port forwarding of SSH enables the node to communicate to the outside with MXIO.",
                "Figure 4 shows the overview of the OmniRPC system for a remote cluster with a private IP address.",
                "For parallel programming, the programmer can use asynchronous remote procedure calls, allowing the client to issue several requests while continuing with other computations.",
                "The requests are dispatched to different remote hosts to be executed in parallel, and the client waits or polls the completed request.",
                "In such a programming model with asynchronous remote procedure calls, the programmer should handle outstanding requests explicitly.",
                "Because OmniRPC is a thread-safe system, a number of remote procedure calls may be outstanding at any time for multi-threaded programs written in OpenMP. 3.2 OmniRPC persistence model: automatic initializable module OmniRPC efficiently supports typical Master/Worker parallel applications such as parametric execution programs.",
                "For parametric search applications, which often require large amount of identical data for each call, OmniRPC supports a limited persistence model, which is implemented by the automatic initializable module.",
                "The user can define an initialization procedure in the remote executable in order to send and store data automatically in advance of actual remote procedure calls.",
                "Since the remote executable may accept requests for subsequent calls, the data set which has been set by the initialization procedure can be re-used.",
                "As a result, the worker program can execute efficiently and reduce the amount of data transmitted for initialization.",
                "Once a remote executable is invoked, the client attempts to use the invoked remote executable for subsequent RPC calls.",
                "However, OmniRPC does not guarantee persistence of the remote executable, so that the data set by the previous call cannot be used by subsequent calls.",
                "This is because a remote call by OmniRpcCall may be scheduled to any remote host dynamically, and remote executables may be terminated accidentally due to dynamic re-scheduling or host faults.",
                "However, persistence of the remote executable can be exploited in certain applications.",
                "An example is a parametric search application: in such an application, it would be efficient if a large set of data could be pre-loaded by the first call, and subsequent calls could be performed on the same data, but with different parameters.",
                "This is the case for CONFLEX.",
                "OmniRPC provides a restricted persistence model through the automatic initializable module (AIM) in order to support this type of application.",
                "If the initialization procedure is defined in the module, the module is automatically initialized at invocation by calling the initialization procedure.",
                "When the remote executable is re-scheduled in different hosts, the initialization is called to initialize the newly allocated remote module.",
                "This can eliminate unnecessary communications when RPC calls use the same data.",
                "To reveal more about the difference in progress between the cases with OmniRPC AIM and without OmniRPC AIM, we present two figures.",
                "Figure 5 illustrates the time chart of the progress of a typical OmniRPC application using the OmniRPC AIM facility, and Figure 6 illustrates the time chart of the same application without the OmniRPC AIM facility.",
                "In both figures, the lines between diamonds represent the processes of initialization, and the lines between points represent the calculation.",
                "The bold line indicates the time when the client program sends the data to a worker program.",
                "It is necessary for the application without the OmniRPC AIM facility to initialize at each RPC.",
                "The application using the OmniRPC AIM facility can re-use the initialized data once the data set is initialized.",
                "This can reduce the initialization at each RPC.",
                "The workers of the application with the AIM can calculate efficiently compared to the application without the OmniRPC AIM facility. 3.3 Implementation of CONFLEX-G using OmniRPC Figure 3 shows an overview of the process used in CONFLEXG.",
                "Using RPCs, CONFLEX-G allocates the processes of trial structure optimization, which are performed by the computation nodes of a PC cluster in the MPI version of CONFLEX, to the computational nodes of each cluster in a grid environment.",
                "There are two computations which are performed by the worker programs in CONFLEX-G. One is the initialization of a worker program, and another is the calculation of trial structure optimization.",
                "First, the OmniRPC facility of the AIM is adapted for initialization of a worker program.",
                "This facility automatically calls the initialization function, which is contained in the worker program, once the client program invokes the worker program in a remote node.",
                "It is necessary for the common RPC system including GridRPC to initialize a program for every RPC call, since data persistence of worker programs 157 time Client Program Worker Program 1 Worker Program 2 initialization initialization calculation calculation calculation calculation calculation Parallelized using asynchronous RPCs Figure 5: Time chart of applications using the OmniRPC facility of the automatic initializable module. time Client Program Worker Program 1 Worker Program 2 initialization initializationcalculation calculation calculation calculation initialization initialization initialization Parallelized using asynchronous RPCs calculation Figure 6: Time chart of applications without the OmniRPC facility of the automatic initializable module.",
                "Table 1: Machine configurations in the grid testbed.",
                "Site Cluster Name Machine Network Authentication # of Nodes # of CPUs Univ. of Tsukuba Dennis Dual Xeon 2.4GHz 1Gb Ethernet Globus, SSH 14 28 Alice Dual Athlon 1800+ 100Mb Ethernet Globus, SSH 18 36 TUT Toyo Dual Athlon 2600+ 100Mb Ethernet SSH 8 16 AIST Ume Dual Pentium3 1.4GHz 1Gb Ethernet Globus, SSH 32 64 is not supported.",
                "In OmniRPC, however, when the Initialize remote function is defined in the worker program and a new worker program, corresponding to the other RPC, is assigned to execute, an Initialize function is called automatically.",
                "Therefore, after the Initialize function call to set up common initialization data, a worker program can re-use this data and increase the efficiency of its processes.",
                "Thus, the higher the set-up cost, the greater the potential benefit.",
                "We implemented the worker program of CONFLEX-G to receive data, such as evaluation parameters of energy, from a client program and to be initialized by the Initialize function.",
                "We arranged the client program of CONFLEX-G to transfer the parameter file at the time of worker initialization.",
                "This enables execution to be performed by modify only the client setting if the user wants to run CONFLEX-G with a different data set.",
                "Second, in order to calculate trial structure optimization in a worker program, the worker program must receive the data, such as the atom arrangement of the trial structure and the internal energy state.",
                "The result is returned to the client program after the worker has Optimized the trial structure.",
                "Since the calculation portion of the structure optimization in this worker program can be calculated independently using different parameters, we parallelized this portion using asynchronous RPCs on the client side.",
                "To call the structure optimization function in a worker program from the client program, we use the OmniRpcCallAsync API, which is intended for asynchronous RPC.",
                "In addition, OmniRpcCallWaitAll API which waits until all asynchronous RPCs are used in order to perform synchronization with all of the asynchronous RPCs completed so as to optimize the trial structure.",
                "The client program which assigns trial structure optimization to the calculation node of a PC cluster using RPC is outlined as follows.",
                "OmniRpcInit() OmniRpcModuleInit(conflex_search,...); ... while( <new conformers> ) { foreach( <trial structures> ) OmniRpcCallAsync(conflex_search_worker, ...); OmniRpcWaitAll(); ...",
                "Note that OmniRpcModuleInit API returns only the arguments needed for initialization and will not actually execute the Initialization function.",
                "As described above, the actual Initialization is performed at the first remote call.",
                "Since the OmniRPC system has an easy round-robin scheduler, we do not have to explicitly write the code for load balance.",
                "Therefore, RPCs are allocated automatically to idle workers. 158 Table 2: Network performance between the master node of the Dennis cluster and the master node of each PC cluster.",
                "Round-Trip Throughput Cluster Time (ms) (Mbps) Dennis 0.23 879.31 Alice 0.18 94.12 Toyo 11.27 1.53 Ume 1.07 373.33 4.",
                "PRELIMINARY RESULTS 4.1 Grid Testbed The grid testbed was constructed by computing resources at the University of Tsukuba, the Toyohashi University of Technology (TUT) and the National Institute of Advanced Industrial Science and Technology (AIST).",
                "Table 1 shows the computing resources used for the grid of the present study.",
                "The University of Tsukuba and AIST are connected by a 1-Gbps Tsukuba WAN, and the other PC clusters are connected by SINET, which is wide-area network dedicated to academic research in Japan.",
                "Table 2 shows the performance of the measured network between the master node of the Dennis cluster and the master node of each PC cluster in the grid testbed.",
                "The communication throughput was measured using netperf, and the round-trip time was measured by ping. 4.2 Performance of CONFLEX-G In all of the CONFLEX-G experiments, the client program was executed on the master node of the Dennis cluster at the University of Tsukuba.",
                "The built-in Round-Robin scheduler of OmniRPC was used as a job scheduler.",
                "SSH was used for an authentication system, the OminRPCs MXIO, which relays the I/O communication between client program and worker programs by port forwarding of SSH was, not used.",
                "Note that one worker program is assigned and performed on one CPU of the calculation node in a PC cluster.",
                "That is, the number of workers is equal to the number of CPUs.",
                "These programs were compiled by the Intel Fortran Compiler 7.0 and gcc 2.95.",
                "MPICH, Version 1.2.5, was used to compare the performance between CONFLEX MPI and CONFLEX-G.",
                "In order to demonstrate the usability of the OmniRPC facility of the AIM, we implemented another version of CONFLEX-G which did not utilize the OmniRPC facility.",
                "The worker program in this version of CONFLEXG must be initialized at each RPC because the worker does not hold the previous data set.",
                "In order to examine the performance of CONFLEX-G, we selected two peptides and two small protein as test molecules: • N-acetyl tetra-alanine methylester (AlaX04) • N-acetyl hexdeca-alanine methylester (AlaX16) • TRP-cage miniprotein construct TC5B (1L2Y) • PTH receptor N-terminus fragment (1BL1) Table 3 lists the characteristics of these sample molecules.",
                "The column trial structure / loops in this table shows the Figure 7: Performances of CONFLEX-G, CONFLEX MPI and Original CONFLEX in the Dennis cluster.",
                "Figure 8: Speedup ratio, which is based on the elapsed time of CONFLEX-G using one worker in the Dennis cluster.",
                "Figure 9: Performance of CONFLEX-G with and without the OmniRPC facility of automatic initializable module for AlaX16. 159 Table 3: Characteristics of molecules and data transmission for optimizing trial molecular structures in each molecular code.",
                "Molecular # of # of total trial trial structure Data transfer to Data transfer code atoms structures / loop initialize a worker / trial structure AlaX04 181 360 45 2033KB 17.00KB AlaX16 191 480 160 2063KB 18.14KB 1L2Y 315 331 331 2099KB 29.58KB 1BL1 519 519 519 2150KB 48.67KB Table 4: Elapsed search time for the molecular conformation of AlaX04.",
                "Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (sequential) 1 320.0 1786.21 4.96 1786.21 1.00 Toyo (16) 16 20.0 1497.08 4.16 196.32 9.10 Dennis (28) 28 11.4 1905.51 5.29 97.00 18.41 Alice (36) 36 8.9 2055.25 5.71 87.09 20.51 Ume (56) 56 5.7 2196.77 6.10 120.69 14.80 Dennis (28) + Toyo (16) 44 7.3 1630.09 4.53 162.35 11.00 Alice (36) + Toyo (16) 52 6.2 1774.53 4.93 178.24 10.02 Dennis (28) + Alice (36) 64 5.0 1999.02 5.55 81.52 21.91 Dennis (28) + Ume (56) 84 3.8 2085.84 5.79 92.22 19.37 Alice (36) + Ume (56) 92 3.5 2120.87 5.89 101.25 17.64 Table 5: Elapsed search time for the molecular conformation of AlaX16 Total Total Optimization Cluster # of Structures optimization time Elapsed Speed (# of workers) workers / worker time (s) / structure (s) time (s) up Dennis (1) 1 480.0 74027.80 154.22 74027.80 1.00 Toyo (16) 16 30.0 70414.21 146.70 4699.15 15.75 Dennis (28) 28 17.1 74027.80 154.22 3375.60 21.93 Alice (36) 36 13.3 90047.27 187.60 3260.41 22.71 Ume (56) 56 8.6 123399.38 257.08 2913.63 25.41 Dennis (28) + Toyo (16) 44 10.9 76747.74 159.89 2762.10 26.80 Alice (36) + Toyo (16) 52 9.2 82700.44 172.29 2246.73 32.95 Dennis (28) + Alice (36) 64 7.5 87571.30 182.44 2051.50 36.08 Toyo (16) + Ume (56) 72 6.7 109671.32 228.48 2617.85 28.28 Dennis (28) + Ume (56) 84 5.7 102817.90 214.20 2478.93 29.86 Dennis(28)+Ume(56)+Toyo(16) 100 4.8 98238.07 204.66 2478.93 29.86 Table 6: Elapsed time of the search for the trial structure of 1L2Y.",
                "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 331.0 867 286,967 79.71 1.00 Toyo MPI (16) 16 20.7 867 18,696 5.19 15.34 Dennis (28) 28 11.8 803 14,101 3.91 20.35 Dennis (28) + Ume(56) 84 3.9 1,064 8,316 2.31 34.50 Table 7: Elapsed time of the search for the trial structure of 1BL1.",
                "Cluster Total # of Structures Optimization time Elapsed Elapsed Speed (# of workers) workers / worker / structure (s) time (s) time (H) up Toyo MPI (1) 1 519.0 3,646 1892,210 525.61 1.00 Toyo MPI (16) 16 32.4 3,646 120,028 33.34 15.76 Dennis (28) 28 18.5 3,154 61,803 17.16 30.61 Dennis (28) + Ume (56) 84 6.1 4,497 33,502 9.30 56.48 160 number of trial structures generated in each iteration, indicating the degree of parallelism.",
                "Figure 3 also summarizes the amount of data transmission required for initialization of a worker program and for optimization of each trial structure.",
                "Note that the amount of data transmission, which is required in order to initialize a worker program and optimize a trial structure in the MPI version of CONFLEX, is equal to that of CONFLEX-G. We used an improvement version of MM2 force field to assign a potential energy function to various geometric properties of a group of atoms. 4.2.1 Performance in a Local Cluster We first compared the performance of CONFLEX-G, the MPI version of CONFLEX, and the original sequential version of CONFLEX-G using a local cluster.",
                "We investigated performance by varying the number of workers using the Dennis cluster.",
                "We chose AlaX04 as a test molecule for this experiment.",
                "Figure 7 compares the results for the CONFLEX MPI and CONFLEX-G in a local PC cluster.",
                "The result of this experiment shows that CONFLEX-G can reduce the execution time as the number of workers increases, as in the MPI version of CONFLEX.",
                "We found that CONFLEX-G achieved efficiencies comparable to the MPI version.",
                "With 28 workers, CONFLEX-G achieved an 18.00 times speedup compared to the CONFLEX sequential version.",
                "The performance of CONFLEX-G without the OmniRPC AIM facility is worse than that of CONFLEXG using the facility, based on the increase in the number of workers.",
                "This indicates that the OmniRPC AIM enables the worker to calculate efficiently without other calculations, such initialization or invocation of worker programs.",
                "As the number of workers is increased, the performance of CONFLEX-G is a slightly lower than that of the MPI version.",
                "This performance degradation is caused by differences in the worker initialization processes of CONFLEX-G and CONFLEX MPI.",
                "In the case of CONFLEX MPI, all workers are initialized in advance of the optimization phase.",
                "In the case of OminRPC, the worker is invoked on-demand when the RPC call is actually issued.",
                "Therefore, the initialization incurs this overhead.",
                "Since the objective of CONFLEX-G is to explore the conformations of large bio-molecules, the number of trial structures and the time to optimize the trial structure might be large.",
                "In such cases, the overhead to invoke and initialize the worker program can be small compared to the entire elapsed time. 4.2.2 Performance for Peptides in The Grid Testbed First, the sample molecules (AlaX04 and AlaX16) were used to examine the CONFLEX-G performance in a grid environment.",
                "Figure 8 shows the speedup achieved by using multiple clusters compared to using one worker in the Dennis cluster.",
                "Detailed results are shown in Table 4 and Table 5.",
                "In both cases, the best performance was obtained using 64 workers of the combination of the Dennis and Alice clusters.",
                "CONFLEX-G achieved a maximum speedup of 36.08 times for AlaX04 and a maximum speedup of 21.91 times for AlaX16.",
                "In the case of AlaX04, the performance is improved only when the network performance between clusters is high.",
                "However, even if two or more clusters are used in a wide area network environment, the performance improvement was slight because the optimization time of one trial structure generated from AlaX04, a small molecule, is short.",
                "In addition, the overhead required for invocation of a worker program and network data transmission consume a large portion of the remaining processing time.",
                "In particular, the data transmission required for the initialization of a worker program is 2 MB.",
                "In the case of Toyo cluster, where the network performance between the client program and the worker programs is poor, the time of data transmission to the worker program required approximately 6.7 seconds.",
                "Since this transmission time was longer than the processing time of one structure optimization in CONFLEX-G, most of the time was spent for this data transmission.",
                "Therefore, even if CONFLEX-G uses a large number of calculation nodes in a wide area network environment, the benefit of using a grid resource is not obtained.",
                "In the case of AlaX16, CONFLEX-G achieved a speedup by using two or more PC clusters in our grid testbed.",
                "This was because the calculation time on the worker program was long and the overhead, such as network latency and the invoking of worker programs, became relatively small and could be hidden.",
                "The best performance was obtained using 64 workers in the Dennis and Alice clusters.",
                "In the case of AaX16, the achieved performance was a speedup of 36.08 times.",
                "Figure 9 reveals the effect of using the facility of the OmniRPC AIM on CONFLEX-G performance.",
                "In most cases, CONFLEX-G with the OmniRPC AIM facility archived better performance than CONFLEX-G without the facility.",
                "In particular, the OmniRPC AIM facility was advantageous when using two clusters connected by a low-performance network.",
                "The results indicate that the OmniRPC AIM facility can improve performance in the grid environment. 4.2.3 PerformanceforSmallProteininTheGridTestbed Finally, we explored the molecular conformation using CONFLEX-G for large molecules.",
                "In a grid environment, this experiment was conducted using the Dennis and Ume clusters.",
                "In this experiment, we used two proteins, 1L2Y and 1BL1.",
                "Table 6 and Table 7 show the performance of CONFLEX-G in the grid environment and that of CONFLEX MPI in the Toyo cluster, respectively.",
                "The speedups in these tables were computed respectively based on the performance of one worker and 16 workers of the Toyo cluster using CONFLEX MPI.",
                "CONFLEX-G with 84 workers in Dennis and Ume clusters obtained maximum speedups of 56.5 times for 1L2Y and 34.5 times for 1L2Y.",
                "Since the calculation time for structure optimization required a great deal of time, the ratio of overhead, including tasks such as the invocation of a worker program and data transmission for initialization, became very small, so that the performance of CONFLEX-G was improved.",
                "We found that the load imbalance in the processing time of optimization for each trial structure caused performance degradation.",
                "When we obtained the best performance for 1L2Y using the Dennis and Ume clusters, the time for each structure optimization varied from 190 to 27,887 seconds, and the ratio between the longest and shortest times was 13.4.",
                "For 1BL1, the ratio of minimum time over maximum time was 190.",
                "In addition, in order that the worker program wait until the completion of optimization of all trial structures, all worker programs were found to wait in an idle state for approximately 6 hours.",
                "This has caused the performance degradation of CONFLEX-G. 161 4.3 Discussion In this subsection, we discuss the improvement of the performance reflected in our experiments.",
                "Exploiting parallelism - In order to exploit more computational resources, it is necessary to increase the degree of parallelism.",
                "In this experiment, the degree of parallelism was not so large in the case of the sample molecules.",
                "When using a set of over 500 computing nodes for 1BL1, the number of one trial structures assigned to each worker will be only one or two.",
                "If over 100 trial structures are assigned to each worker program, calculation can be performed more efficiently due to the reduction of the overhead for worker invocation and initialization via the facility of the OmniRPC AIM.",
                "One idea for increasing parallelism is to overlap the execution of two or more sets of trial structures.",
                "In the current algorithm, a set of trial structures is generated from one initial structure and computed until optimizations for all structures in this set are calculated.",
                "Furthermore, this will help to improve load imbalance.",
                "By having other sets of trial structures overlap, even if some optimizations require a long time, the optimization for the structures in other sets can be executed to compensate for the idle workers for other optimizations.",
                "It is however unclear how such modification of the algorithm might affect the quality of the final results in terms of a conformation search.",
                "Improvement in load imbalance when optimizing each trial structure - Table 8 lists the statistics for optimization times of trial structures generated for each sample molecule measured using 28 workers in the Dennis cluster.",
                "When two or more sets of PC clusters are used, the speedup in performance is hampered by the load imbalance of the optimization of the trial structures.",
                "The longest time for optimizing a trial structure was nearly 24 times longer than the shortest time.",
                "Furthermore, other workers must wait until the longest job has Finished, so that the entire execution time cannot be reduced.",
                "When CONFLEX-G searched the conformers of 1BL1 by the Dennis cluster, the longest calculation time of the trial structure optimization made up approximately 80% of the elapsed time.",
                "Therefore, there are two possible solutions for the load Imbalance. • It is necessary to refine the algorithm used to generate the trial structure, which suppresses the time variation for optimizing a trial structure in CONFLEX.",
                "This enables CONFLEX-G to achieve high-throughput by using many computer resources. • One of the solutions is to overlap the executions for two or more sets of trial structures.",
                "In the current algorithms, a set of trial structures is generated from one initial structure and calculation continues until all structures in this set are calculated.",
                "By having other sets of trial structures, even if a structure search takes a long time, a job can be executed in order to compensate the load imbalance by other jobs.",
                "However, how such modification of the algorithms might affect the efficiency is not clear. • In this experiment, we used a simple build-in roundrobbin scheduler of OmniRPC, which is necessary in order to apply the scheduler that allocates structures with long optimization times to a high-performance Table 8: Statistics of elapsed time of trial structure optimization using 28 workers in the Dennis cluster.",
                "Molecular Min Max Average Variance code (s) (s) (s) AlaX04 2.0 11.3 5.3 3 AlaX16 47.6 920.0 154.2 5404 1L2Y 114.2 13331.4 803.2 636782 1BL1 121.0 29641.8 3153.5 2734811 node and structures with short optimization times to low-performance nodes.",
                "In general, however, it might be difficult to predict the time required for trial structure optimization.",
                "Parallelization of the worker program for speedup to optimize a trial structure - In the current implementation, we do not parallelize the worker program.",
                "In order to speed up trial structures, hybrid programming using OmniRPC and OpenMP in an SMP (Symmetric Multiple Processor) machine may be one of the alternative methods by which to improve overall performance. 5.",
                "RELATED WORK Recently, an algorithm has been developed that solves the problems of parallelization and communication in poorly connected processors to be used for simulation.",
                "The Folding@home project[13] simulates timescales thousands to millions of times longer than previously achieved.",
                "This has allowed us to simulate folding for the first time and to directly examine folding related diseases.",
                "SETI@home[14] is a program to search for alien life by analyzing radio telescope signals using Fourier transform radio telescope data from telescopes from different sites.",
                "SETI@home tackles immensely parallel problems, in which calculation can easily be divided among several computers.",
                "Radio telescope data chunks can easily be assigned to different computers.",
                "Most of these efforts explicitly develop a docking application as a parallel application using a special purpose parallel programming language and middleware, such as MPI, which requires development skills and effort.",
                "However, the skills and effort required to develop a grid application may not be required for OmniRPC.",
                "Nimrod/G[15] is a tool for distributed parametric modeling and implements a parallel task farm for simulations that require several varying input parameters.",
                "Nimrod incorporates a distributed scheduling component that can manage the scheduling of individual experiments to idle computers in a local area network.",
                "Nimrod has been applied to applications including bio-informatics, operations research, and molecular modeling for drug design.",
                "NetSolve[8] is an RPC facility similar to OmniRPC and Ninf, providing a similar programming interface and automatic load balancing mechanism.",
                "Ninf-G[7] is a grid-enabled implementation of Ninf and provides a GridRPC[10] system that uses LDAP to manage the database of remote executables, but does not support clusters involving private IP addresses or addresses inside a firewall.",
                "Matsuoka et al. [16] has also discussed several design issues related to grid RPC systems. 162 6.",
                "CONCLUSIONS AND FUTURE WORK We have designed and implemented CONFLEX-G using OmniRPC.",
                "We reported its performance in a grid testbed of several geographically distributed PC clusters.",
                "In order to explore the conformation of large bio-molecules, CONFLEXG was used to generate trial structures of the molecules, and allocate jobs to optimize them by molecular mechanics in the grid.",
                "OmniRPC provides a restricted persistence model so that the module is automatically initialized at invocation by calling the initialization procedure.",
                "This can eliminate unnecessary communication and the initialization at each call in CONFLEX-G. CONFLEX-G can achieves performance comparable to CONFLEX MPI and exploits more computing resources by allowing the use of multiple PC clusters in the grid.",
                "The experimental result shows that CONFLEX-G achieved a speedup of 56.5 times for the 1BL1 molecule, where the molecule consists of a large number of atoms and each trial structure optimization requires a great deal of time.",
                "The load imbalance of the trial structure optimizations may cause performance degradation.",
                "We need to refine the algorithm used to generate the trial structure in order to improve the load balance optimization for trial structures in CONFLEX.",
                "Future studies will include development of deployment tools and an examination of fault tolerance.",
                "In the current OmniRPC, the registration of an execution program to remote hosts and deployments of worker programs are manually set.",
                "Deployment tools will be required as the number of remote hosts is increased.",
                "In grid environments in which the environment changes dynamically, it is also necessary to support fault tolerance.",
                "This feature is especially important in large-scale applications which require lengthy calculation in a grid environment.",
                "We plan to refine the conformational optimization algorithm in CONFLEX to explore the conformation space search of larger bio-molecules such HIV protease using up to 1000 workers in a grid environment. 7.",
                "ACKNOWLEDGMENTS This research was supported in part by a Grant-in-Aid from the Ministry of Education, Culture, Sports, Science and Technology in Japan, No. 14019011, 2002, and as part of the Program of Research and Development for Applying Advanced Computational Science and Technology by the Japan Science and Technology Corporation (Research on the grid computing platform for drug design).",
                "We would like to thank grid technology research center, AIST, Japan for providing computing resources for our experiment. 8.",
                "REFERENCES [1] H. Goto and E. Osawa.",
                "An efficient algorithm for searching low-energy conformers of cyclic and acyclic molecules.",
                "J. Chem.",
                "Soc., Perkin Trans, 2:187-198, 1993. [2] M. Sato, T. Boku, and D. Takahashi.",
                "OmniRPC: a Grid RPC System for Parallel Programming in Cluster and Grid Environment.",
                "In Proc. of CCGrid2003, pages 219-229, 2003. [3] M. Sato, M. Hirano, Y. Tanaka, and S. Sekiguchi.",
                "OmniRPC: a Grid RPC facility for Cluster and Global Computing in OpenMP.",
                "In Proc. of Workshop on OpenMP Applications and Tools 2001(LNCS 2104 ), pages 130-135, 2001. [4] OmniRPC Project. http://www.omni.hpcc.jp/omnirpc/. [5] M. Sato, H. Nakada, S. Sekiguchi, S. Matsuoka, U. Nagashima, and H. Takagi.",
                "Ninf: A Network Based Information Library for Global World-Wide Computing Infrastructure.",
                "In HPCN Europe, pages 491-502, 1997. [6] Ninf Project. http://ninf.apgrid.org/. [7] Y. Tanaka, H. Nakada, S. Sekiguchi, T. Suzumura, and S. Matsuoka.",
                "Ninf-G: A Reference Implementation of RPC-based Programming Middleware for Grid Computing .",
                "Journal of Grid Computing, 1(1):41-51, 2003. [8] D. Arnold, S. Agrawal, S. Blackford, J. Dongarra, M. Miller, K. Seymour, K. Sagi, Z. Shi, and S. Vadhiyar.",
                "Users Guide to NetSolve V1.4.1.",
                "Innovative Computing Dept.",
                "Technical Report ICL-UT-02-05, University of Tennessee, Knoxville, TN, June 2002. [9] Object management group. http://www.omg.org/. [10] K. Seymour, H. Nakada, S. Matsuoka, J. Dongarra, C. Lee, and H. Casanova.",
                "GridRPC: A Remote Procedure Call API for Grid Computing. [11] H.Goto, T. Takahashi, Y. Takata, K. Ohta, and U Nagashima.",
                "Conflex: Conformational behaviors of polypeptides as predicted by a conformational space search.",
                "In Nanotech2003, volume 1, pages 32-35, 2003. [12] I.",
                "Foster and C. Kesselman.",
                "Globus: A metacomputing infrastructure toolkit.",
                "The International Journal of Supercomputer Applications and High Performanc e Computing, 11(2):115-128, Summer 1997. [13] Stefan M. Larson, Christopher D. Snow, Michael Shirts, and Vijay S. Pande.",
                "Folding@home and genome@home: Using distributed computing to tackle prev iously intractable problems in computational biology.",
                "Computational Genomics, 2002. [14] seti@home project. http://setiathome.ssl.berkeley.edu/. [15] R. Buyya, K. Branson, J. Giddy, and D. Abramson.",
                "The virtual laboratory: a toolset to enable distributed molecular modelling for drug design on the world-wide grid.",
                "Concurrency and Computation: Practice and Experience, 15(1):1-25, January 2003. [16] S. Matsuoka, H. Nakada, M. Sato, and S. Sekiguchi.",
                "Design issues of Network Enabled Server Systems for the Grid.",
                "In Proc. of GRID 2000 (LNCS 1971), pages 4-17, 2000. 163"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        }
    }
}