{
    "id": "C-69",
    "original_text": "pTHINC: A Thin-Client Architecture for Mobile Wireless Web Joeng Kim, Ricardo A. Baratto, and Jason Nieh Department of Computer Science Columbia University, New York, NY, USA {jk2438, ricardo, nieh}@cs.columbia.edu ABSTRACT Although web applications are gaining popularity on mobile wireless PDAs, web browsers on these systems can be quite slow and often lack adequate functionality to access many web sites. We have developed pTHINC, a PDA thinclient solution that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide high-fidelity display and seamless mobility across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available screen resolution for application display. We have implemented pTHINC on Windows Mobile and evaluated its performance on mobile wireless devices. Our results compared to local PDA web browsers and other thin-client approaches demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback. Categories and Subject Descriptors: C.2.4 ComputerCommunication-Networks: Distributed Systems - client/ server General Terms: Design, Experimentation, Performance 1. INTRODUCTION The increasing ubiquity of wireless networks and decreasing cost of hardware is fueling a proliferation of mobile wireless handheld devices, both as standalone wireless Personal Digital Assistants (PDA) and popular integrated PDA/cell phone devices. These devices are enabling new forms of mobile computing and communication. Service providers are leveraging these devices to deliver pervasive web access, and mobile web users already often use these devices to access web-enabled information such as news, email, and localized travel guides and maps. It is likely that within a few years, most of the devices accessing the web will be mobile. Users typically access web content by running a web browser and associated helper applications locally on the PDA. Although native web browsers exist for PDAs, they deliver subpar performance and have a much smaller feature set and more limited functionality than their desktop computing counterparts [10]. As a result, PDA web browsers are often not able to display web content from web sites that leverage more advanced web technologies to deliver a richer web experience. This fundamental problem arises for two reasons. First, because PDAs have a completely different hardware/software environment from traditional desktop computers, web applications need to be rewritten and customized for PDAs if at all possible, duplicating development costs. Because the desktop application market is larger and more mature, most development effort generally ends up being spent on desktop applications, resulting in greater functionality and performance than their PDA counterparts. Second, PDAs have a more resource constrained environment than traditional desktop computers to provide a smaller form factor and longer battery life. Desktop web browsers are large, complex applications that are unable to run on a PDA. Instead, developers are forced to significantly strip down these web browsers to provide a usable PDA web browser, thereby crippling PDA browser functionality. Thin-client computing provides an alternative approach for enabling pervasive web access from handheld devices. A thin-client computing system consists of a server and a client that communicate over a network using a remote display protocol. The protocol enables graphical displays to be virtualized and served across a network to a client device, while application logic is executed on the server. Using the remote display protocol, the client transmits user input to the server, and the server returns screen updates of the applications from the server to the client. Using a thin-client model for mobile handheld devices, PDAs can become simple stateless clients that leverage the remote server capabilities to execute web browsers and other helper applications. The thin-client model provides several important benefits for mobile wireless web. First, standard desktop web applications can be used to deliver web content to PDAs without rewriting or adapting applications to execute on a PDA, reducing development costs and leveraging existing software investments. Second, complex web applications can be executed on powerful servers instead of running stripped down versions on more resource constrained PDAs, providing greater functionality and better performance [10]. Third, web applications can take advantage of servers with faster networks and better connectivity, further boosting application performance. Fourth, PDAs can be even simpler devices since they do not need to perform complex application logic, potentially reducing energy consumption and extend143 ing battery life. Finally, PDA thin clients can be essentially stateless appliances that do not need to be backed up or restored, require almost no maintenance or upgrades, and do not store any sensitive data that can be lost or stolen. This model provides a viable avenue for medical organizations to comply with HIPAA regulations [6] while embracing mobile handhelds in their day to day operations. Despite these potential advantages, thin clients have been unable to provide the full range of these benefits in delivering web applications to mobile handheld devices. Existing thin clients were not designed for PDAs and do not account for important usability issues in the context of small form factor devices, resulting in difficulty in navigating displayed web content. Furthermore, existing thin clients are ineffective at providing seamless mobility across the heterogeneous mix of device display sizes and resolutions. While existing thin clients can already provide faster performance than native PDA web browsers in delivering HTML web content, they do not effectively support more display-intensive web helper applications such as multimedia video, which is increasingly an integral part of available web content. To harness the full potential of thin-client computing in providing mobile wireless web on PDAs, we have developed pTHINC (PDA THin-client InterNet Computing). pTHINC builds on our previous work on THINC [1] to provide a thinclient architecture for mobile handheld devices. pTHINC virtualizes and resizes the display on the server to efficiently deliver high-fidelity screen updates to a broad range of different clients, screen sizes, and screen orientations, including both portrait and landscape viewing modes. This enables pTHINC to provide the same persistent web session across different client devices. For example, pTHINC can provide the same web browsing session appropriately scaled for display on a desktop computer and a PDA so that the same cookies, bookmarks, and other meta-data are continuously available on both machines simultaneously. pTHINCs virtual display approach leverages semantic information available in display commands, and client-side video hardware to provide more efficient remote display mechanisms that are crucial for supporting more display-intensive web applications. Given limited display resolution on PDAs, pTHINC maximizes the use of screen real estate for remote display by moving control functionality from the screen to readily available PDA control buttons, improving system usability. We have implemented pTHINC on Windows Mobile and demonstrated that it works transparently with existing applications, window systems, and operating systems, and does not require modifying, recompiling, or relinking existing software. We have quantitatively evaluated pTHINC against local PDA web browsers and other thin-client approaches on Pocket PC devices. Our experimental results demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback. This paper presents the design and implementation of pTHINC. Section 2 describes the overall usage model and usability characteristics of pTHINC. Section 3 presents the design and system architecture of pTHINC. Section 4 presents experimental results measuring the performance of pTHINC on web applications and comparing it against native PDA browsers and other popular PDA thin-client systems. Section 5 discusses related work. Finally, we present some concluding remarks. 2. PTHINC USAGE MODEL pTHINC is a thin-client system that consists of a simple client viewer application that runs on the PDA and a server that runs on a commodity PC. The server leverages more powerful PCs to to run web browsers and other application logic. The client takes user input from the PDA stylus and virtual keyboard and sends them to the server to pass to the applications. Screen updates are then sent back from the server to the client for display to the user. When the pTHINC PDA client is started, the user is presented with a simple graphical interface where information such as server address and port, user authentication information, and session settings can be provided. pTHINC first attempts to connect to the server and perform the necessary handshaking. Once this process has been completed, pTHINC presents the user with the most recent display of his session. If the session does not exist, a new session is created. Existing sessions can be seamlessly continued without changes in the session setting or server configuration. Unlike other thin-client systems, pTHINC provides a user with a persistent web session model in which a user can launch a session running a web browser and associated applications at the server, then disconnect from that session and reconnect to it again anytime. When a user reconnects to the session, all of the applications continue running where the user left off, so that the user can continue working as though he or she never disconnected. The ability to disconnect and reconnect to a session at anytime is an important benefit for mobile wireless PDA users which may have intermittent network connectivity. pTHINCs persistent web session model enables a user to reconnect to a web session from devices other than the one on which the web session was originally initiated. This provides users with seamless mobility across different devices. If a user loses his PDA, he can easily use another PDA to access his web session. Furthermore, pTHINC allows users to use non-PDA devices to access web sessions as well. A user can access the same persistent web session on a desktop PC as on a PDA, enabling a user to use the same web session from any computer. pTHINCs persistent web session model addresses a key problem encountered by mobile web users, the lack of a common web environment across computers. Web browsers often store important information such as bookmarks, cookies, and history, which enable them to function in a much more useful manner. The problem that occurs when a user moves between computers is that this data, which is specific to a web browser installation, cannot move with the user. Furthermore, web browsers often need helper applications to process different media content, and those applications may not be consistently available across all computers. pTHINC addresses this problem by enabling a user to remotely use the exact same web browser environment and helper applications from any computer. As a result, pTHINC can provide a common, consistent web browsing environment for mobile users across different devices without requiring them to attempt to repeatedly synchronize different web browsing environments across multiple machines. To enable a user to access the same web session on different devices, pTHINC must provide mechanisms to support different display sizes and resolutions. Toward this end, pTHINC provides a zoom feature that enables a user to zoom in and out of a display and allows the display of a web 144 Figure 1: pTHINC shortcut keys session to be resized to fit the screen of the device being used. For example, if the server is running a web session at 1024×768 but the client is a PDA with a display resolution of 640×480, pTHINC will resize the desktop display to fit the full display in the smaller screen of the PDA. pTHINC provides the PDA user with the option to increase the size of the display by zooming in to different parts of the display. Users are often familiar with the general layout of commonly visited websites, and are able to leverage this resizing feature to better navigate through web pages. For example, a user can zoom out of the display to view the entire page content and navigate hyperlinks, then zoom in to a region of interest for a better view. To enable a user to access the same web session on different devices, pTHINC must also provide mechanisms to support different display orientations. In a desktop environment, users are typically accustomed to having displays presented in landscape mode where the screen width is larger than its height. However, in a PDA environment, the choice is not always obvious. Some users may prefer having the display in portrait mode, as it is easier to hold the device in their hands, while others may prefer landscape mode in order to minimize the amount of side-scrolling necessary to view a web page. To accommodate PDA user preferences, pTHINC provides an orientation feature that enables it to seamless rotate the display between landscape and portrait mode. The landscape mode is particularly useful for pTHINC users who frequently access their web sessions on both desktop and PDA devices, providing those users with the same familiar landscape setting across different devices. Because screen space is a relatively scarce resource on PDAs, pTHINC runs in fullscreen mode to maximize the screen area available to display the web session. To be able to use all of the screen on the PDA and still allow the user to control and interact with it, pTHINC reuses the typical shortcut buttons found on PDAs to perform all the control functions available to the user. The buttons used by pTHINC do not require any OS environment changes; they are simply intercepted by the pTHINC client application when they are pressed. Figure 1 shows how pTHINC utilizes the shortcut buttons to provide easy navigation and improve the overall user experience. These buttons are not device specific, and the layout shown is common to widelyused PocketPC devices. pTHINC provides six shortcuts to support its usage model: • Rotate Screen: The record button on the left edge is used to rotate the screen between portrait and landscape mode each time the button is pressed. • Zoom Out: The leftmost button on the bottom front is used to zoom out the display of the web session providing a birds eye view of the web session. • Zoom In: The second leftmost button on the bottom front is used to zoom in the display of the web session to more clearly view content of interest. • Directional Scroll: The middle button on the bottom front is used to scroll around the display using a single control button in a way that is already familiar to PDA users. This feature is particularly useful when the user has zoomed in to a region of the display such that only part of the display is visible on the screen. • Show/Hide Keyboard: The second rightmost button on the bottom front is used to bring up a virtual keyboard drawn on the screen for devices which have no physical keyboard. The virtual keyboard uses standard PDA OS mechanisms, providing portability across different PDA environments. • Close Session: The rightmost button on the bottom front is used to disconnect from the pTHINC session. pTHINC uses the PDA touch screen, stylus, and standard user interface mechanisms to provide a user interface pointand-click metaphor similar to that provided by the mouse in a traditional desktop computing environment. pTHINC does not use a cursor since PDA environments do not provide one. Instead, a user can use the stylus to tap on different sections of the touch screen to indicate input focus. A single tap on the touch screen generates a corresponding single click mouse event. A double tap on the touch screen generates a corresponding double click mouse event. pTHINC provides two-button mouse emulation by using the stylus to press down on the screen for one second to generate a right mouse click. All of these actions are identical to the way users already interact with PDA applications in the common PocketPC environment. In web browsing, users can click on hyperlinks and focus on input boxes by simply tapping on the desired screen area of interest. Unlike local PDA web browsers and other PDA applications, pTHINC leverages more powerful desktop user interface metaphors to enable users to manipulate multiple open application windows instead of being limited to a single application window at any given moment. This provides increased browsing flexibility beyond what is currently available on PDA devices. Similar to a desktop environment, browser windows and other application windows can be moved around by pressing down and dragging the stylus similar to a mouse. 3. PTHINC SYSTEM ARCHITECTURE pTHINC builds on the THINC [1] remote display architecture to provide a thin-client system for PDAs. pTHINC virtualizes the display at the server by leveraging the video device abstraction layer, which sits below the window server and above the framebuffer. This is a well-defined, low-level, device-dependent layer that exposes the video hardware to the display system. pTHINC accomplishes this through a simple virtual display driver that intercepts drawing commands, packetizes, and sends them over the network. 145 While other thin-client approaches intercept display commands at other layers of the display subsystem, pTHINCs display virtualization approach provides some key benefits in efficiently supporting PDA clients. For example, intercepting display commands at a higher layer between applications and the window system as is done by X [17] requires replicating and running a great deal of functionality on the PDA that is traditionally provided by the desktop window system. Given both the size and complexity of traditional window systems, attempting to replicate this functionality in the restricted PDA environment would have proven to be a daunting, and perhaps unfeasible task. Furthermore, applications and the window system often require tight synchronization in their operation and imposing a wireless network between them by running the applications on the server and the window system on the client would significantly degrade performance. On the other hand, intercepting at a lower layer by extracting pixels out of the framebuffer as they are rendered provides a simple solution that requires very little functionality on the PDA client, but can also result in degraded performance. The reason is that by the time the remote display server attempts to send screen updates, it has lost all semantic information that may have helped it encode efficiently, and it must resort to using a generic and expensive encoding mechanism on the server, as well as a potentially expensive decoding mechanism on the limited PDA client. In contrast to both the high and low level interception approaches, pTHINCs approach of intercepting at the device driver provides an effective balance between client and server simplicity, and the ability to efficiently encode and decode screen updates. By using a low-level virtual display approach, pTHINC can efficiently encode application display commands using only a small set of low-level commands. In a PDA environment, this set of commands provides a crucial component in maintaining the simplicity of the client in the resourceconstrained PDA environment. The display commands are shown in Table 1, and work as follows. COPY instructs the client to copy a region of the screen from its local framebuffer to another location. This command improves the user experience by accelerating scrolling and opaque window movement without having to resend screen data from the server. SFILL, PFILL, and BITMAP are commands that paint a fixed-size region on the screen. They are useful for accelerating the display of solid window backgrounds, desktop patterns, backgrounds of web pages, text drawing, and certain operations in graphics manipulation programs. SFILL fills a sizable region on the screen with a single color. PFILL replicates a tile over a screen region. BITMAP performs a fill using a bitmap of ones and zeros as a stipple to apply a foreground and background color. Finally, RAW is used to transmit unencoded pixel data to be displayed verbatim on a region of the screen. This command is invoked as a last resort if the server is unable to employ any other command, and it is the only command that may be compressed to mitigate its impact on network bandwidth. pTHINC delivers its commands using a non-blocking, serverpush update mechanism, where as soon as display updates are generated on the server, they are sent to the client. Clients are not required to explicitly request display updates, thus minimizing the impact that the typical varying network latency of wireless links may have on the responsiveness of the system. Keeping in mind that resource Command Description COPY Copy a frame buffer area to specified coordinates SFILL Fill an area with a given pixel color value PFILL Tile an area with a given pixel pattern BITMAP Fill a region using a bit pattern RAW Display raw pixel data at a given location Table 1: pTHINC Protocol Display Commands constrained PDAs and wireless networks may not be able to keep up with a fast server generating a large number of updates, pTHINC is able to coalesce, clip, and discard updates automatically if network loss or congestion occurs, or the client cannot keep up with the rate of updates. This type of behavior proves crucial in a web browsing environment, where for example, a page may be redrawn multiple times as it is rendered on the fly by the browser. In this case, the PDA will only receive and render the final result, which clearly is all the user is interesting in seeing. pTHINC prioritizes the delivery of updates to the PDA using a Shortest-Remaining-Size-First (SRSF) preemptive update scheduler. SRSF is analogous to Shortest-RemainingProcessing-Time scheduling, which is known to be optimal for minimizing mean response time in an interactive system. In a web browsing environment, short jobs are associated with text and basic page layout components such as the pages background, which are critical web content for the user. On the other hand, large jobs are often lower priority beautifying elements, or, even worse, web page banners and advertisements, which are of questionable value to the user as he or she is browsing the page. Using SRSF, pTHINC is able to maximize the utilization of the relatively scarce bandwidth available on the wireless connection between the PDA and the server. 3.1 Display Management To enable users to just as easily access their web browser and helper applications from a desktop computer at home as from a PDA while on the road, pTHINC provides a resize mechanism to zoom in and out of the display of a web session. pTHINC resizing is completely supported by the server, not the client. The server resamples updates to fit within the PDAs viewport before they are transmitted over the network. pTHINC uses Fants resampling algorithm to resize pixel updates. This provides smooth, visually pleasing updates with properly antialiasing and has only modest computational requirements. pTHINCs resizing approach has a number of advantages. First, it allows the PDA to leverage the vastly superior computational power of the server to use high quality resampling algorithms and produce higher quality updates for the PDA to display. Second, resizing the screen does not translate into additional resource requirements for the PDA, since it does not need to perform any additional work. Finally, better utilization of the wireless network is attained since rescaling the updates reduces their bandwidth requirements. To enable users to orient their displays on a PDA to provide a viewing experience that best accommodates user preferences and the layout of web pages or applications, pTHINC provides a display rotation mechanism to switch between landscape and portrait viewing modes. pTHINC display rotation is completely supported by the client, not the server. pTHINC does not explicitly recalculate the ge146 ometry of display updates to perform rotation, which would be computationally expensive. Instead, pTHINC simply changes the way data is copied into the framebuffer to switch between display modes. When in portrait mode, data is copied along the rows of the framebuffer from left to right. When in landscape mode, data is copied along the columns of the framebuffer from top to bottom. These very fast and simple techniques replace one set of copy operations with another and impose no performance overhead. pTHINC provides its own rotation mechanism to support a wide range of devices without imposing additional feature requirements on the PDA. Although some newer PDA devices provide native support for different orientations, this mechanism is not dynamic and requires the user to rotate the PDAs entire user interface before starting the pTHINC client. Windows Mobile provides native API mechanisms for PDA applications to rotate their UI on the fly, but these mechanisms deliver poor performance and display quality as the rotation is performed naively and is not completely accurate. 3.2 Video Playback Video has gradually become an integral part of the World Wide Web, and its presence will only continue to increase. Web sites today not only use animated graphics and flash to deliver web content in an attractive manner, but also utilize streaming video to enrich the web interface. Users are able to view pre-recorded and live newscasts on CNN, watch sports highlights on ESPN, and even search through large collection of videos on Google Video. To allow applications to provide efficient video playback, interfaces have been created in display systems that allow video device drivers to expose their hardware capabilities back to the applications. pTHINC takes advantage of these interfaces and its virtual device driver approach to provide a virtual bridge between the remote client and its hardware and the applications, and transparently support video playback. On top of this architecture, pTHINC uses the YUV colorspace to encode the video content, which provides a number of benefits. First, it has become increasingly common for PDA video hardware to natively support YUV and be able to perform the colorspace conversion and scaling automatically. As a result, pTHINC is able to provide fullscreen video playback without any performance hits. Second, the use of YUV allows for a more efficient representation of RGB data without loss of quality, by taking advantage of the human eyes ability to better distinguish differences in brightness than in color. In particular, pTHINC uses the YV12 format, which allows full color RGB data to be encoded using just 12 bits per pixel. Third, YUV data is produced as one of the last steps of the decoding process of most video codecs, allowing pTHINC to provide video playback in a manner that is format independent. Finally, even if the PDAs video hardware is unable to accelerate playback, the colorspace conversion process is simple enough that it does not impose unreasonable requirements on the PDA. A more concrete example of how pTHINC leverages the PDA video hardware to support video playback can be seen in our prototype implementation on the popular Dell Axim X51v PDA, which is equipped with the Intel 2700G multimedia accelerator. In this case, pTHINC creates an offscreen buffer in video memory and writes and reads from this memory region data on the YV12 format. When a new video frame arrives, video data is copied from the buffer to Figure 2: Experimental Testbed an overlay surface in video memory, which is independent of the normal surface used for traditional drawing. As the YV12 data is put onto the overlay, the Intel accelerator automatically performs both colorspace conversion and scaling. By using the overlay surface, pTHINC has no need to redraw the screen once video playback is over since the overlapped surface is unaffected. In addition, specific overlay regions can be manipulated by leveraging the video hardware, for example to perform hardware linear interpolation to smooth out the frame and display it fullscreen, and to do automatic rotation when the client runs in landscape mode. 4. EXPERIMENTAL RESULTS We have implemented a pTHINC prototype that runs the client on widely-used Windows Mobile-based Pocket PC devices and the server on both Windows and Linux operating systems. To demonstrate its effectiveness in supporting mobile wireless web applications, we have measured its performance on web applications. We present experimental results on different PDA devices for two popular web applications, browsing web pages and playing video content from the web. We compared pTHINC against native web applications running locally on the PDA to demonstrate the improvement that pTHINC can provide over the traditional fat-client approach. We also compared pTHINC against three of the most widely used thin clients that can run on PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] and VNC (Virtual Network Computing) [16]. We follow common practice and refer to Citrix MetaFrameXP and Microsoft Remote Desktop by their respective remote display protocols, ICA (Independent Computing Architecture) and RDP (Remote Desktop Protocol). 4.1 Experimental Testbed We conducted our web experiments using two different wireless Pocket PC PDAs in an isolated Wi-Fi network testbed, as shown in Figure 2. The testbed consisted of two PDA client devices, a packet monitor, a thin-client server, and a web server. Except for the PDAs, all of the other machines were IBM Netfinity 4500R servers with dual 933 MHz Intel PIII CPUs and 512 MB RAM and were connected on a switched 100 Mbps FastEthernet network. The web server used was Apache 1.3.27, the network emulator was NISTNet 2.0.12, and the packet monitor was Ethereal 0.10.9. The PDA clients connected to the testbed through a 802.11b Lucent Orinoco AP-2000 wireless access point. All experiments using the wireless network were conducted within ten feet of the access point, so we considered the amount of packet loss to be negligible in our experiments. Two Pocket PC PDAs were used to provide results across both older, less powerful models and newer higher performance models. The older model was a Dell Axim X5 with 147 Client 1024×768 640×480 Depth Resize Clip RDP no yes 8-bit no yes VNC yes yes 16-bit no no ICA yes yes 16-bit yes no pTHINC yes yes 24-bit yes no Table 2: Thin-client Testbed Configuration Setting a 400 MHz Intel XScale PXA255 CPU and 64 MB RAM running Windows Mobile 2003 and a Dell TrueMobile 1180 2.4Ghz CompactFlash card for wireless networking. The newer model was a Dell Axim X51v with a 624 MHz Intel XScale XPA270 CPU and 64 MB RAM running Windows Mobile 5.0 and integrated 802.11b wireless networking. The X51v has an Intel 2700G multimedia accelerator with 16MB video memory. Both PDAs are capable of 16-bit color but have different screen sizes and display resolutions. The X5 has a 3.5 inch diagonal screen with 240×320 resolution. The X51v has a 3.7 inch diagonal screen with 480×640. The four thin clients that we used support different levels of display quality as summarized in Table 2. The RDP client only supports a fixed 640×480 display resolution on the server with 8-bit color depth, while other platforms provide higher levels of display quality. To provide a fair comparison across all platforms, we conducted our experiments with thin-client sessions configured for two possible resolutions, 1024×768 and 640×480. Both ICA and VNC were configured to use the native PDA resolution of 16-bit color depth. The current pTHINC prototype uses 24-bit color directly and the client downsamples updates to the 16-bit color depth available on the PDA. RDP was configured using only 8-bit color depth since it does not support any better color depth. Since both pTHINC and ICA provide the ability to view the display resized to fit the screen, we measured both clients with and without the display resized to fit the PDA screen. Each thin client was tested using landscape rather than portrait mode when available. All systems run on the X51v could run in landscape mode because the hardware provides a landscape mode feature. However, the X5 does not provide this functionality. Only pTHINC directly supports landscape mode, so it was the only system that could run in landscape mode on both the X5 and X51v. To provide a fair comparison, we also standardized on common hardware and operating systems whenever possible. All of the systems used the Netfinity server as the thin-client server. For the two systems designed for Windows servers, ICA and RDP, we ran Windows 2003 Server on the server. For the other systems which support X-based servers, VNC and pTHINC, we ran the Debian Linux Unstable distribution with the Linux 2.6.10 kernel on the server. We used the latest thin-client server versions available on each platform at the time of our experiments, namely Citrix MetaFrame XP Server for Windows Feature Release 3, Microsoft Remote Desktop built into Windows XP and Windows 2003 using RDP 5.2, and VNC 4.0. 4.2 Application Benchmarks We used two web application benchmarks for our experiments based on two common application scenarios, browsing web pages and playing video content from the web. Since many thin-client systems including two of the ones tested are closed and proprietary, we measured their performance in a noninvasive manner by capturing network traffic with a packet monitor and using a variant of slow-motion benchmarking [13] previously developed to measure thin-client performance in PDA environments [10]. This measurement methodology accounts for both the display decoupling that can occur between client and server in thin-client systems as well as client processing time, which may be significant in the case of PDAs. To measure web browsing performance, we used a web browsing benchmark based on the Web Text Page Load Test from the Ziff-Davis i-Bench benchmark suite [7]. The benchmark consists of JavaScript controlled load of 55 pages from the web server. The pages contain both text and graphics with pages varying in size. The graphics are embedded images in GIF and JPEG formats. The original i-Bench benchmark was modified for slow-motion benchmarking by introducing delays of several seconds between the pages using JavaScript. Then two tests were run, one where delays where added between each page, and one where pages where loaded continuously without waiting for them to be displayed on the client. In the first test, delays were sufficiently adjusted in each case to ensure that each page could be received and displayed on the client completely without temporal overlap in transferring the data belonging to two consecutive pages. We used the packet monitor to record the packet traffic for each run of the benchmark, then used the timestamps of the first and last packet in the trace to obtain our latency measures [10]. The packet monitor also recorded the amount of data transmitted between the client and the server. The ratio between the data traffic in the two tests yields a scale factor. This scale factor shows the loss of data between the server and the client due to inability of the client to process the data quickly enough. The product of the scale factor with the latency measurement produces the true latency accounting for client processing time. To run the web browsing benchmark, we used Mozilla Firefox 1.0.4 running on the thin-client server for the thin clients, and Windows Internet Explorer (IE) Mobile for 2003 and Mobile for 5.0 for the native browsers on the X5 and X51v PDAs, respectively. In all cases, the web browser used was sized to fill the entire display region available. To measure video playback performance, we used a video benchmark that consisted of playing a 34.75s MPEG-1 video clip containing a mix of news and entertainment programming at full-screen resolution. The video clip is 5.11 MB and consists of 834 352x240 pixel frames with an ideal frame rate of 24 frames/sec. We measured video performance using slow-motion benchmarking by monitoring resulting packet traffic at two playback rates, 1 frames/second (fps) and 24 fps, and comparing the results to determine playback delays and frame drops that occur at 24 fps to measure overall video quality [13]. For example, 100% quality means that all video frames were played at real-time speed. On the other hand, 50% quality could mean that half the video data was dropped, or that the clip took twice as long to play even though all of the video data was displayed. To run the video benchmark, we used Windows Media Player 9 for Windows-based thin-client servers, MPlayer 1.0 pre 6 for X-based thin-client servers, and Windows Media Player 9 Mobile and 10 Mobile for the native video players running locally on the X5 and X51v PDAs, respectively. In all cases, the video player used was sized to fill the entire display region available. 4.3 Measurements Figures 3 and 4 show the results of running the web brows148 0 1 10 100 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL Latency(s) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 3: Browsing Benchmark: Average Page Latency ing benchmark. For each platform, we show results for up to four different configurations, two on the X5 and two on the X51v, depending on whether each configuration was supported. However, not all platforms could support all configurations. The local browser only runs at the display resolution of the PDA, 480×680 or less for the X51v and the X5. RDP only runs at 640×480. Neither platform could support 1024×768 display resolution. ICA only ran on the X5 and could not run on the X51v because it did not work on Windows Mobile 5. Figure 3 shows the average latency per web page for each platform. pTHINC provides the lowest average web browsing latency on both PDAs. On the X5, pTHINC performs up to 70 times better than other thin-client systems and 8 times better than the local browser. On the X51v, pTHINC performs up to 80 times better than other thin-client systems and 7 times better than the native browser. In fact, all of the thin clients except VNC outperform the local PDA browser, demonstrating the performance benefits of the thin-client approach. Usability studies have shown that web pages should take less than one second to download for the user to experience an uninterrupted web browsing experience [14]. The measurements show that only the thin clients deliver subsecond web page latencies. In contrast, the local browser requires more than 3 seconds on average per web page. The local browser performs worse since it needs to run a more limited web browser to process the HTML, JavaScript, and do all the rendering using the limited capabilities of the PDA. The thin clients can take advantage of faster server hardware and a highly tuned web browser to process the web content much faster. Figure 3 shows that RDP is the next fastest platform after pTHINC. However, RDP is only able to run at a fixed resolution of 640×480 and 8-bit color depth. Furthermore, RDP also clips the display to the size of the PDA screen so that it does not need to send updates that are not visible on the PDA screen. This provides a performance benefit assuming the remaining web content is not viewed, but degrades performance when a user scrolls around the display to view other web content. RDP achieves its performance with significantly lower display quality compared to the other thin clients and with additional display clipping not used by other systems. As a result, RDP performance alone does not provide a complete comparison with the other platforms. In contrast, pTHINC provides the fastest performance while at the same time providing equal or better display quality than the other systems. 0 1 10 100 1000 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL DataSize(KB) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 4: Browsing Benchmark: Average Page Data Transferred Since VNC and ICA provide similar display quality to pTHINC, these systems provide a more fair comparison of different thin-client approaches. ICA performs worse in part because it uses higher-level display primitives that require additional client processing costs. VNC performs worse in part because it loses display data due to its client-pull delivery mechanism and because of the client processing costs in decompressing raw pixel primitives. In both cases, their performance was limited in part because their PDA clients were unable to keep up with the rate at which web pages were being displayed. Figure 3 also shows measurements for those thin clients that support resizing the display to fit the PDA screen, namely ICA and pTHINC. Resizing requires additional processing, which results in slower average web page latencies. The measurements show that the additional delay incurred by ICA when resizing versus not resizing is much more substantial than for pTHINC. ICA performs resizing on the slower PDA client. In contrast, pTHINC leverage the more powerful server to do resizing, reducing the performance difference between resizing and not resizing. Unlike ICA, pTHINC is able to provide subsecond web page download latencies in both cases. Figure 4 shows the data transferred in KB per page when running the slow-motion version of the tests. All of the platforms have modest data transfer requirements of roughly 100 KB per page or less. This is well within the bandwidth capacity of Wi-Fi networks. The measurements show that the local browser does not transfer the least amount of data. This is surprising as HTML is often considered to be a very compact representation of content. Instead, RDP is the most bandwidth efficient platform, largely as a result of using only 8-bit color depth and screen clipping so that it does not transfer the entire web page to the client. pTHINC overall has the largest data requirements, slightly more than VNC. This is largely a result of the current pTHINC prototypes lack of native support for 16-bit color data in the wire protocol. However, this result also highlights pTHINCs performance as it is faster than all other systems even while transferring more data. Furthermore, as newer PDA models support full 24-bit color, these results indicate that pTHINC will continue to provide good web browsing performance. Since display usability and quality are as important as performance, Figures 5 to 8 compare screenshots of the different thin clients when displaying a web page, in this case from the popular BBC news website. Except for ICA, all of the screenshots were taken on the X51v in landscape mode 149 Figure 5: Browser Screenshot: RDP 640x480 Figure 6: Browser Screenshot: VNC 1024x768 Figure 7: Browser Screenshot: ICA Resized 1024x768 Figure 8: Browser Screenshot: pTHINC Resized 1024x768 using the maximum display resolution settings for each platform given in Table 2. The ICA screenshot was taken on the X5 since ICA does not run on the X51v. While the screenshots lack the visual fidelity of the actual device display, several observations can be made. Figure 5 shows that RDP does not support fullscreen mode and wastes lots of screen space for controls and UI elements, requiring the user to scroll around in order to access the full contents of the web browsing session. Figure 6 shows that VNC makes better use of the screen space and provides better display quality, but still forces the user to scroll around to view the web page due to its lack of resizing support. Figure 7 shows ICAs ability to display the full web page given its resizing support, but that its lack of landscape capability and poorer resize algorithm significantly compromise display quality. In contrast, Figure 8 shows pTHINC using resizing to provide a high quality fullscreen display of the full width of the web page. pTHINC maximizes the entire viewing region by moving all controls to the PDA buttons. In addition, pTHINC leverages the server computational power to use a high quality resizing algorithm to resize the display to fit the PDA screen without significant overhead. Figures 9 and 10 show the results of running the video playback benchmark. For each platform except ICA, we show results for an X5 and X51v configuration. ICA could not run on the X51v as noted earlier. The measurements were done using settings that reflected the environment a user would have to access a web session from both a desktop computer and a PDA. As such, a 1024×768 server display resolution was used whenever possible and the video was shown at fullscreen. RDP was limited to 640×480 display resolution as noted earlier. Since viewing the entire video display is the only really usable option, we resized the display to fit the PDA screen for those platforms that supported this feature, namely ICA and pTHINC. Figure 9 shows the video quality for each platform. pTHINC is the only thin client able to provide perfect video playback quality, similar to the native PDA video player. All of the other thin clients deliver very poor video quality. With the exception of RDP on the X51v which provided unacceptable 35% video quality, none of the other systems were even able to achieve 10% video quality. VNC and ICA have the worst quality at 8% on the X5 device. pTHINCs native video support enables superior video performance, while other thin clients suffer from their inability to distinguish video from normal display updates. They attempt to apply ineffective and expensive compression algorithms on the video data and are unable to keep up with the stream of updates generated, resulting in dropped frames or long playback times. VNC suffers further from its client-pull update model because video frames are generated faster than the rate at which the client can process and send requests to the server to obtain the next display update. Figure 10 shows the total data transferred during 150 0% 20% 40% 60% 80% 100% pTHINCICAVNCRDPLOCAL VideoQuality Platform Axim X5 Axim X51v Figure 9: Video Benchmark: Fullscreen Video Quality 0 1 10 100 pTHINCICAVNCRDPLOCAL VideoDataSize(MB) Platform Axim X5 Axim X51v Figure 10: Video Benchmark: Fullscreen Video Data video playback for each system. The native player is the most bandwidth efficient platform, sending less than 6 MB of data, which corresponds to about 1.2 Mbps of bandwidth. pTHINCs 100% video quality requires about 25 MB of data which corresponds to a bandwidth usage of less than 6 Mbps. While the other thin clients send less data than THINC, they do so because they are dropping video data, resulting in degraded video quality. Figures 11 to 14 compare screenshots of the different thin clients when displaying the video clip. Except for ICA, all of the screenshots were taken on the X51v in landscape mode using the maximum display resolution settings for each platform given in Table 2. The ICA screenshot was taken on the X5 since ICA does not run on the X51v. Figures 11 and 12 show that RDP and VNC are unable to display the entire video frame on the PDA screen. RDP wastes screen space for UI elements and VNC only shows the top corner of the video frame on the screen. Figure 13 shows that ICA provides resizing to display the entire video frame, but did not proportionally resize the video data, resulting in strange display artifacts. In contrast, Figure 14 shows pTHINC using resizing to provide a high quality fullscreen display of the entire video frame. pTHINC provides visually more appealing video display than RDP, VNC, or ICA. 5. RELATED WORK Several studies have examined the web browsing performance of thin-client computing [13, 19, 10]. The ability for thin clients to improve web browsing performance on wireless PDAs was first quantitatively demonstrated in a previous study by one of the authors [10]. This study demonstrated that thin clients can provide both faster web browsing performance and greater web browsing functionality. The study considered a wide range of web content including content from medical information systems. Our work builds on this previous study and consider important issues such as how usable existing thin clients are in PDA environments, the trade-offs between thin-client usability and performance, performance across different PDA devices, and the performance of thin clients on common web-related applications such as video. Many thin clients have been developed and some have PDA clients, including Microsofts Remote Desktop [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5], and Tarantella [18]. These systems were first designed for desktop computing and retrofitted for PDAs. Unlike pTHINC, they do not address key system architecture and usability issues important for PDAs. This limits their display quality, system performance, available screen space, and overall usability on PDAs. pTHINC builds on previous work by two of the authors on THINC [1], extending the server architecture and introducing a client interface and usage model to efficiently support PDA devices for mobile web applications. Other approaches to improve the performance of mobile wireless web browsing have focused on using transcoding and caching proxies in conjunction with the fat client model [11, 9, 4, 8]. They work by pushing functionality to external proxies, and using specialized browsing applications on the PDA device that communicate with the proxy. Our thinclient approach differs fundamentally from these fat-client approaches by pushing all web browser logic to the server, leveraging existing investments in desktop web browsers and helper applications to work seamlessly with production systems without any additional proxy configuration or web browser modifications. With the emergence of web browsing on small display devices, web sites have been redesigned using mechanisms like WAP and specialized native web browsers have been developed to tailor the needs of these devices. Recently, Opera has developed the Opera Mini [15] web browser, which uses an approach similar to the thin-client model to provide access across a number of mobile devices that would normally be incapable of running a web browser. Instead of requiring the device to process web pages, it uses a remote server to pre-process the page before sending it to the phone. 6. CONCLUSIONS We have introduced pTHINC, a thin-client architecture for wireless PDAs. pTHINC provides key architectural and usability mechanisms such as server-side screen resizing, clientside screen rotation using simple copy techniques, YUV video support, and maximizing screen space for display updates and leveraging existing PDA control buttons for UI elements. pTHINC transparently supports traditional desktop browsers and their helper applications on PDA devices and desktop machines, providing mobile users with ubiquitous access to a consistent, personalized, and full-featured web environment across heterogeneous devices. We have implemented pTHINC and measured its performance on web applications compared to existing thin-client systems and native web applications. Our results on multiple mobile wireless devices demonstrate that pTHINC delivers web browsing performance up to 80 times better than existing thin-client systems, and 8 times better than a native PDA browser. In addition, pTHINC is the only PDA thin client 151 Figure 11: Video Screenshot: RDP 640x480 Figure 12: Video Screenshot: VNC 1024x768 Figure 13: Video Screenshot: ICA Resized 1024x768 Figure 14: Video Screenshot: pTHINC Resized 1024x768 that transparently provides full-screen, full frame rate video playback, making web sites with multimedia content accessible to mobile web users. 7. ACKNOWLEDGEMENTS This work was supported in part by NSF ITR grants CCR0219943 and CNS-0426623, and an IBM SUR Award. 8. REFERENCES [1] R. Baratto, L. Kim, and J. Nieh. THINC: A Virtual Display Architecture for Thin-Client Computing. In Proceedings of the 20th ACM Symposium on Operating Systems Principles (SOSP), Oct. 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius, and A. Muir. Microsoft Windows NT Server 4.0, Terminal Server Edition: Technical Reference. Microsoft Press, Redmond, WA, 1999. [4] A. Fox, I. Goldberg, S. D. Gribble, and D. C. Lee. Experience With Top Gun Wingman: A Proxy-Based Graphical Web Browser for the 3Com PalmPilot. In Proceedings of Middleware 98, Lake District, England, September 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Health Insurance Portability and Accountability Act. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench version 1.5. http: //etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi. On proxy agents, mobility, and web access. Mobile Networks and Applications, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon, and A. Ortega. Design and Implementation of a Soft Caching Proxy. Computer Networks and ISDN Systems, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana, and S. Varshneya. Improving Web Browsing on Wireless PDAs Using Thin-Client Computing. In Proceedings of the 13th International World Wide Web Conference (WWW), May 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham, and P. Shenoy. TranSquid: Transcoding and caching proxy for heterogenous ecommerce environments. In Proceedings of the 12th IEEE Workshop on Research Issues in Data Engineering (RIDE 02), Feb. 2002. [12] .NET VNC Viewer for PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang, and N. Novik. Measuring Thin-Client Performance Using Slow-Motion Benchmarking. ACM Trans. Computer Systems, 21(1):87-115, Feb. 2003. [14] J. Nielsen. Designing Web Usability. New Riders Publishing, Indianapolis, IN, 2000. [15] Opera Mini Browser. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood, and A. Hopper. Virtual Network Computing. IEEE Internet Computing, 2(1), Jan./Feb. 1998. [17] R. W. Scheifler and J. Gettys. The X Window System. ACM Trans. Gr., 5(2):79-106, Apr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla, and M. Sajjadpour. Web Browsing Performance of Wireless Thin-Client Computing. In Proceedings of the 12th International World Wide Web Conference (WWW), May 2003. 152",
    "original_translation": "pTHINC: Una arquitectura de cliente ligero para la web inalámbrica móvil Joeng Kim, Ricardo A. Baratto y Jason Nieh Departamento de Ciencias de la Computación Universidad de Columbia, Nueva York, NY, EE. UU. {jk2438, ricardo, nieh}@cs.columbia.edu RESUMEN Aunque las aplicaciones web están ganando popularidad en las PDAs inalámbricas móviles, los navegadores web en estos sistemas pueden ser bastante lentos y a menudo carecen de funcionalidad adecuada para acceder a muchos sitios web. Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y movilidad fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la resolución de pantalla disponible para la visualización de aplicaciones. Hemos implementado pTHINC en Windows Mobile y evaluado su rendimiento en dispositivos móviles inalámbricos. Nuestros resultados comparados con los navegadores web PDA locales y otros enfoques de cliente ligero demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero PDA que soporta de manera efectiva aplicaciones de ayuda del navegador cruciales como la reproducción de video. Categorías y Descriptores de Asunto: C.2.4 Comunicación de Computadoras-Redes: Sistemas Distribuidos - cliente/servidor Términos Generales: Diseño, Experimentación, Rendimiento 1. La creciente ubicuidad de las redes inalámbricas y la disminución del costo del hardware están impulsando una proliferación de dispositivos móviles inalámbricos portátiles, tanto como asistentes digitales personales (PDA) inalámbricos independientes y dispositivos populares integrados de PDA/teléfono celular. Estos dispositivos están permitiendo nuevas formas de computación y comunicación móvil. Los proveedores de servicios están aprovechando estos dispositivos para ofrecer acceso web omnipresente, y los usuarios de la web móvil a menudo ya utilizan estos dispositivos para acceder a información habilitada para la web, como noticias, correo electrónico, guías de viaje localizadas y mapas. Es probable que en unos pocos años, la mayoría de los dispositivos que accedan a la web sean móviles. Los usuarios suelen acceder al contenido web ejecutando un navegador web y aplicaciones auxiliares asociadas localmente en la PDA. Aunque existen navegadores web nativos para PDAs, ofrecen un rendimiento deficiente y tienen un conjunto de funciones mucho más pequeño y una funcionalidad más limitada que sus contrapartes de computadoras de escritorio [10]. Como resultado, los navegadores web de PDA a menudo no pueden mostrar el contenido web de sitios web que utilizan tecnologías web más avanzadas para ofrecer una experiencia web más rica. Este problema fundamental surge por dos razones. Primero, debido a que las PDAs tienen un entorno de hardware/software completamente diferente de las computadoras de escritorio tradicionales, las aplicaciones web necesitan ser reescritas y personalizadas para las PDAs si es posible, duplicando los costos de desarrollo. Debido a que el mercado de aplicaciones de escritorio es más grande y maduro, la mayoría del esfuerzo de desarrollo generalmente se destina a las aplicaciones de escritorio, lo que resulta en una mayor funcionalidad y rendimiento que sus contrapartes de PDA. En segundo lugar, las PDAs tienen un entorno con recursos más limitados que las computadoras de escritorio tradicionales para ofrecer un factor de forma más pequeño y una vida útil de la batería más larga. Los navegadores web de escritorio son aplicaciones grandes y complejas que no pueden ejecutarse en una PDA. En cambio, los desarrolladores se ven obligados a reducir significativamente estas navegadores web para ofrecer un navegador web PDA utilizable, lo que limita la funcionalidad del navegador PDA. La computación de cliente ligero proporciona un enfoque alternativo para habilitar el acceso web ubicuo desde dispositivos móviles. Un sistema informático de cliente ligero consiste en un servidor y un cliente que se comunican a través de una red utilizando un protocolo de visualización remota. El protocolo permite que las pantallas gráficas se virtualicen y se sirvan a través de una red a un dispositivo cliente, mientras que la lógica de la aplicación se ejecuta en el servidor. Usando el protocolo de visualización remota, el cliente transmite la entrada del usuario al servidor, y el servidor devuelve actualizaciones de pantalla de las aplicaciones del servidor al cliente. Utilizando un modelo de cliente ligero para dispositivos móviles de mano, las PDAs pueden convertirse en clientes simples sin estado que aprovechan las capacidades del servidor remoto para ejecutar navegadores web y otras aplicaciones auxiliares. El modelo de cliente ligero proporciona varios beneficios importantes para la web inalámbrica móvil. Primero, las aplicaciones web estándar de escritorio pueden utilizarse para entregar contenido web a PDAs sin necesidad de reescribir o adaptar las aplicaciones para ejecutarse en una PDA, lo que reduce los costos de desarrollo y aprovecha las inversiones existentes en software. Segundo, las aplicaciones web complejas pueden ejecutarse en servidores potentes en lugar de ejecutarse en versiones simplificadas en PDAs con recursos más limitados, lo que proporciona una mayor funcionalidad y un mejor rendimiento [10]. Tercero, las aplicaciones web pueden aprovechar servidores con redes más rápidas y mejor conectividad, lo que mejora aún más el rendimiento de la aplicación. En cuarto lugar, las PDAs pueden ser dispositivos aún más simples ya que no necesitan realizar una lógica de aplicación compleja, lo que potencialmente reduce el consumo de energía y extiende la vida útil de la batería. Finalmente, los clientes ligeros PDA pueden ser dispositivos prácticamente sin estado que no necesitan ser respaldados o restaurados, requieren casi ningún mantenimiento o actualizaciones, y no almacenan datos sensibles que puedan perderse o ser robados. Este modelo proporciona una vía viable para que las organizaciones médicas cumplan con las regulaciones de HIPAA mientras incorporan dispositivos móviles en sus operaciones diarias. A pesar de estas posibles ventajas, los clientes ligeros no han podido ofrecer la gama completa de estos beneficios al entregar aplicaciones web a dispositivos móviles portátiles. Los thin clients existentes no fueron diseñados para PDAs y no tienen en cuenta problemas importantes de usabilidad en el contexto de dispositivos de factor de forma pequeño, lo que resulta en dificultades para navegar por el contenido web mostrado. Además, los clientes ligeros existentes son ineficaces para proporcionar movilidad fluida en la mezcla heterogénea de tamaños de pantalla y resoluciones de dispositivos. Si bien los clientes ligeros existentes ya pueden ofrecer un rendimiento más rápido que los navegadores web nativos de PDA al entregar contenido web HTML, no admiten de manera efectiva aplicaciones web auxiliares más intensivas en visualización, como videos multimedia, que cada vez son una parte integral del contenido web disponible. Para aprovechar todo el potencial de la informática de cliente ligero en la provisión de la web inalámbrica móvil en PDAs, hemos desarrollado pTHINC (PDA THin-client InterNet Computing). pTHINC se basa en nuestro trabajo previo en THINC [1] para proporcionar una arquitectura de cliente ligero para dispositivos móviles de mano. pTHINC virtualiza y redimensiona la pantalla en el servidor para entregar de manera eficiente actualizaciones de pantalla de alta fidelidad a una amplia gama de clientes diferentes, tamaños de pantalla y orientaciones de pantalla, incluidos los modos de visualización en vertical y horizontal. Esto permite a pTHINC proporcionar la misma sesión web persistente en diferentes dispositivos de cliente. Por ejemplo, pTHINC puede proporcionar la misma sesión de navegación web adecuadamente escalada para su visualización en una computadora de escritorio y una PDA, de modo que las mismas cookies, marcadores y otros metadatos estén disponibles continuamente en ambas máquinas simultáneamente. El enfoque de visualización virtual de pTHINC aprovecha la información semántica disponible en los comandos de visualización y el hardware de video del cliente para proporcionar mecanismos de visualización remota más eficientes que son cruciales para admitir aplicaciones web más intensivas en visualización. Dada la limitada resolución de pantalla en las PDA, pTHINC maximiza el uso del espacio de pantalla para la visualización remota al trasladar la funcionalidad de control de la pantalla a los botones de control de PDA fácilmente disponibles, mejorando la usabilidad del sistema. Hemos implementado pTHINC en Windows Mobile y demostrado que funciona de manera transparente con las aplicaciones existentes, sistemas de ventanas y sistemas operativos, y no requiere modificar, recompilar o volver a enlazar el software existente. Hemos evaluado cuantitativamente pTHINC frente a navegadores web PDA locales y otros enfoques de cliente ligero en dispositivos Pocket PC. Nuestros resultados experimentales demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero de PDA que soporta de manera efectiva aplicaciones esenciales de ayuda para el navegador, como la reproducción de video. Este documento presenta el diseño e implementación de pTHINC. La sección 2 describe el modelo de uso general y las características de usabilidad de pTHINC. La sección 3 presenta el diseño y la arquitectura del sistema de pTHINC. La sección 4 presenta resultados experimentales que miden el rendimiento de pTHINC en aplicaciones web y lo comparan con navegadores nativos de PDA y otros sistemas de cliente ligero de PDA populares. La sección 5 discute el trabajo relacionado. Finalmente, presentamos algunas observaciones finales. El MODELO DE USO DE pTHINC pTHINC es un sistema de cliente ligero que consiste en una aplicación de visualización de cliente simple que se ejecuta en la PDA y un servidor que se ejecuta en una PC estándar. El servidor aprovecha PCs más potentes para ejecutar navegadores web y otra lógica de aplicaciones. El cliente recibe la entrada del usuario desde el lápiz óptico y el teclado virtual de la PDA y los envía al servidor para pasarlos a las aplicaciones. Las actualizaciones de la pantalla son luego enviadas desde el servidor al cliente para mostrar al usuario. Cuando se inicia el cliente PDA pTHINC, se presenta al usuario una interfaz gráfica simple donde se pueden proporcionar información como la dirección y el puerto del servidor, la información de autenticación del usuario y la configuración de la sesión. pTHINC primero intenta conectarse al servidor y realizar el saludo necesario. Una vez que este proceso haya sido completado, pTHINC presenta al usuario la visualización más reciente de su sesión. Si la sesión no existe, se crea una nueva sesión. Las sesiones existentes pueden continuar sin problemas sin cambios en la configuración de la sesión o del servidor. A diferencia de otros sistemas de cliente ligero, pTHINC proporciona a un usuario un modelo de sesión web persistente en el que un usuario puede iniciar una sesión ejecutando un navegador web y aplicaciones asociadas en el servidor, luego desconectarse de esa sesión y volver a conectarse en cualquier momento. Cuando un usuario se reconecta a la sesión, todas las aplicaciones siguen funcionando desde donde el usuario las dejó, de modo que el usuario puede seguir trabajando como si nunca se hubiera desconectado. La capacidad de desconectarse y reconectarse a una sesión en cualquier momento es un beneficio importante para los usuarios de PDA inalámbricas móviles que pueden tener conectividad de red intermitente. El modelo de sesión web persistente de pTHINCs permite a un usuario reconectarse a una sesión web desde dispositivos distintos al que se inició originalmente la sesión web. Esto proporciona a los usuarios una movilidad fluida entre diferentes dispositivos. Si un usuario pierde su PDA, puede fácilmente usar otra PDA para acceder a su sesión web. Además, pTHINC permite a los usuarios utilizar dispositivos que no son PDA para acceder a sesiones web también. Un usuario puede acceder a la misma sesión web persistente en una PC de escritorio como en una PDA, lo que le permite al usuario utilizar la misma sesión web desde cualquier computadora. El modelo de sesión web persistente de pTHINCs aborda un problema clave encontrado por los usuarios de la web móvil, la falta de un entorno web común en diferentes computadoras. Los navegadores web a menudo almacenan información importante como marcadores, cookies e historial, lo que les permite funcionar de una manera mucho más útil. El problema que ocurre cuando un usuario se mueve entre computadoras es que estos datos, específicos de una instalación de un navegador web, no pueden moverse con el usuario. Además, los navegadores web a menudo necesitan aplicaciones auxiliares para procesar diferentes contenidos multimedia, y esas aplicaciones pueden no estar disponibles de manera consistente en todas las computadoras. pTHINC aborda este problema al permitir que un usuario utilice de forma remota el mismo entorno de navegador web y aplicaciones auxiliares desde cualquier computadora. Como resultado, pTHINC puede proporcionar un entorno de navegación web común y consistente para usuarios móviles en diferentes dispositivos sin requerirles intentar sincronizar repetidamente diferentes entornos de navegación web en múltiples máquinas. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC debe proporcionar mecanismos para admitir diferentes tamaños de pantalla y resoluciones. Con este fin, pTHINC proporciona una función de zoom que permite a un usuario acercar y alejar una pantalla y permite que la pantalla de una sesión web 144 Figura 1: teclas de acceso rápido de pTHINC se redimensione para adaptarse a la pantalla del dispositivo que se está utilizando. Por ejemplo, si el servidor está ejecutando una sesión web a 1024×768 pero el cliente es una PDA con una resolución de pantalla de 640×480, pTHINC redimensionará la pantalla del escritorio para que se ajuste a la pantalla más pequeña de la PDA. pTHINC proporciona al usuario de la PDA la opción de aumentar el tamaño de la pantalla haciendo zoom en diferentes partes de la pantalla. Los usuarios suelen estar familiarizados con el diseño general de los sitios web que visitan con frecuencia, y pueden aprovechar esta función de redimensionamiento para navegar mejor por las páginas web. Por ejemplo, un usuario puede alejarse de la pantalla para ver todo el contenido de la página y navegar por los hipervínculos, luego acercarse a una región de interés para obtener una mejor vista. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC también debe proporcionar mecanismos para admitir diferentes orientaciones de pantalla. En un entorno de escritorio, los usuarios suelen estar acostumbrados a tener las pantallas presentadas en modo horizontal, donde el ancho de la pantalla es mayor que su altura. Sin embargo, en un entorno de PDA, la elección no siempre es obvia. Algunos usuarios pueden preferir tener la pantalla en modo retrato, ya que es más fácil sostener el dispositivo en sus manos, mientras que otros pueden preferir el modo paisaje para minimizar la cantidad de desplazamiento lateral necesario para ver una página web. Para adaptarse a las preferencias de los usuarios de PDA, pTHINC proporciona una función de orientación que le permite rotar la pantalla de forma fluida entre el modo horizontal y vertical. El modo de paisaje es particularmente útil para los usuarios de pTHINC que acceden con frecuencia a sus sesiones web tanto en dispositivos de escritorio como en PDA, proporcionando a esos usuarios el mismo ajuste de paisaje familiar en diferentes dispositivos. Dado que el espacio de pantalla es un recurso relativamente escaso en las PDAs, pTHINC se ejecuta en modo de pantalla completa para maximizar el área de pantalla disponible para mostrar la sesión web. Para poder utilizar toda la pantalla en la PDA y aún así permitir al usuario controlar e interactuar con ella, pTHINC reutiliza los botones de acceso directo típicos que se encuentran en las PDAs para realizar todas las funciones de control disponibles para el usuario. Los botones utilizados por pTHINC no requieren ningún cambio en el entorno del sistema operativo; simplemente son interceptados por la aplicación cliente de pTHINC cuando se presionan. La Figura 1 muestra cómo pTHINC utiliza los botones de acceso directo para proporcionar una navegación sencilla y mejorar la experiencia del usuario en general. Estos botones no son específicos del dispositivo, y el diseño mostrado es común en dispositivos PocketPC ampliamente utilizados. pTHINC proporciona seis accesos directos para apoyar su modelo de uso: • Rotar pantalla: El botón de grabación en el borde izquierdo se utiliza para rotar la pantalla entre modo retrato y modo paisaje cada vez que se presiona el botón. • Alejar: El botón más a la izquierda en la parte inferior delantera se utiliza para alejar la visualización de la sesión web proporcionando una vista general de la sesión web. • Acercar: El segundo botón más a la izquierda en la parte inferior delantera se utiliza para acercar la visualización de la sesión web para ver más claramente el contenido de interés. • Desplazamiento direccional: El botón central en la parte inferior delantera se utiliza para desplazarse alrededor de la visualización utilizando un solo botón de control de una manera que ya es familiar para los usuarios de PDA. Esta función es particularmente útil cuando el usuario ha ampliado una región de la pantalla de tal manera que solo una parte de la pantalla es visible en la pantalla. • Mostrar/Ocultar Teclado: El segundo botón más a la derecha en la parte inferior frontal se utiliza para mostrar un teclado virtual dibujado en la pantalla para dispositivos que no tienen teclado físico. El teclado virtual utiliza mecanismos estándar del sistema operativo de PDA, proporcionando portabilidad entre diferentes entornos de PDA. • Cerrar sesión: El botón más a la derecha en la parte inferior frontal se utiliza para desconectarse de la sesión de pTHINC. pTHINC utiliza la pantalla táctil de la PDA, el lápiz óptico y mecanismos estándar de interfaz de usuario para proporcionar una metáfora de punto y clic de la interfaz de usuario similar a la proporcionada por el ratón en un entorno de computación de escritorio tradicional. pTHINC no utiliza un cursor ya que los entornos de PDA no lo proporcionan. En cambio, un usuario puede usar el lápiz táctil para tocar diferentes secciones de la pantalla táctil y señalar el enfoque de entrada. Un toque único en la pantalla táctil genera un evento de clic de ratón correspondiente. Un doble toque en la pantalla táctil genera un evento de doble clic del ratón correspondiente. pTHINC proporciona emulación de ratón de dos botones al usar el lápiz óptico para presionar la pantalla durante un segundo y generar un clic derecho del ratón. Todas estas acciones son idénticas a la forma en que los usuarios ya interactúan con las aplicaciones de PDA en el entorno común de PocketPC. En la navegación web, los usuarios pueden hacer clic en hipervínculos y enfocarse en cuadros de entrada simplemente tocando el área de interés deseada en la pantalla. A diferencia de los navegadores web PDA locales y otras aplicaciones PDA, pTHINC aprovecha metáforas de interfaz de usuario de escritorio más potentes para permitir a los usuarios manipular múltiples ventanas de aplicación abiertas en lugar de estar limitados a una sola ventana de aplicación en un momento dado. Esto proporciona una mayor flexibilidad de navegación más allá de lo que está actualmente disponible en los dispositivos PDA. Similar a un entorno de escritorio, las ventanas del navegador y otras ventanas de aplicaciones pueden ser movidas al presionar y arrastrar el lápiz óptico de manera similar a un ratón. 3. La arquitectura del sistema pTHINC se basa en la arquitectura de visualización remota THINC para proporcionar un sistema de cliente ligero para PDAs. pTHINC virtualiza la visualización en el servidor aprovechando la capa de abstracción del dispositivo de video, que se encuentra por debajo del servidor de ventanas y por encima del framebuffer. Este es un nivel de dispositivo bien definido y de bajo nivel que depende del dispositivo y expone el hardware de video al sistema de visualización. pTHINC logra esto a través de un controlador de pantalla virtual simple que intercepta comandos de dibujo, los empaqueta y los envía a través de la red. Mientras que otros enfoques de cliente ligero interceptan comandos de visualización en otras capas del subsistema de visualización, el enfoque de virtualización de pantalla de pTHINC proporciona algunos beneficios clave para admitir eficientemente a los clientes de PDA. Por ejemplo, interceptar comandos de visualización en una capa superior entre aplicaciones y el sistema de ventanas, como se hace en X [17], requiere replicar y ejecutar una gran cantidad de funcionalidades en la PDA que tradicionalmente son proporcionadas por el sistema de ventanas de escritorio. Dada la magnitud y complejidad de los sistemas de ventanas tradicionales, intentar replicar esta funcionalidad en el entorno restringido de una PDA habría resultado ser una tarea desafiante, y quizás inviable. Además, las aplicaciones y el sistema de ventanas a menudo requieren una sincronización precisa en su funcionamiento, y imponer una red inalámbrica entre ellos al ejecutar las aplicaciones en el servidor y el sistema de ventanas en el cliente degradaría significativamente el rendimiento. Por otro lado, interceptar en una capa inferior extrayendo píxeles del framebuffer a medida que se renderizan proporciona una solución simple que requiere muy poca funcionalidad en el cliente de PDA, pero también puede resultar en un rendimiento degradado. La razón es que para cuando el servidor de visualización remota intenta enviar actualizaciones de pantalla, ha perdido toda la información semántica que podría haberle ayudado a codificar de manera eficiente, y debe recurrir a utilizar un mecanismo de codificación genérico y costoso en el servidor, así como un mecanismo de decodificación potencialmente costoso en el cliente de PDA limitado. A diferencia de los enfoques de intercepción de alto y bajo nivel, el enfoque de pTHINCs de interceptar en el controlador del dispositivo proporciona un equilibrio efectivo entre la simplicidad del cliente y del servidor, y la capacidad de codificar y decodificar de manera eficiente las actualizaciones de pantalla. Al utilizar un enfoque de visualización virtual de bajo nivel, pTHINC puede codificar de manera eficiente los comandos de visualización de la aplicación utilizando solo un pequeño conjunto de comandos de bajo nivel. En un entorno de PDA, este conjunto de comandos proporciona un componente crucial para mantener la simplicidad del cliente en el entorno de PDA con recursos limitados. Los comandos de visualización se muestran en la Tabla 1 y funcionan de la siguiente manera. COPY instruye al cliente a copiar una región de la pantalla desde su framebuffer local a otra ubicación. Este comando mejora la experiencia del usuario al acelerar el desplazamiento y el movimiento de ventanas opacas sin necesidad de reenviar datos de pantalla desde el servidor. SFILL, PFILL y BITMAP son comandos que pintan una región de tamaño fijo en la pantalla. Son útiles para acelerar la visualización de fondos de ventanas sólidas, patrones de escritorio, fondos de páginas web, dibujo de texto y ciertas operaciones en programas de manipulación de gráficos. SFILL llena una región considerable en la pantalla con un solo color. PFILL replica una baldosa sobre una región de la pantalla. BITMAP realiza un relleno utilizando un mapa de bits de unos y ceros como un estipulado para aplicar un color de primer plano y de fondo. Finalmente, RAW se utiliza para transmitir datos de píxeles no codificados que se mostrarán textualmente en una región de la pantalla. Este comando se invoca como último recurso si el servidor no puede emplear ningún otro comando, y es el único comando que puede ser comprimido para mitigar su impacto en el ancho de banda de la red. pTHINC entrega sus comandos utilizando un mecanismo de actualización de servidor-push no bloqueante, donde tan pronto como se generan actualizaciones de pantalla en el servidor, se envían al cliente. Los clientes no están obligados a solicitar explícitamente actualizaciones de pantalla, minimizando así el impacto que la típica variabilidad de la latencia de la red inalámbrica puede tener en la capacidad de respuesta del sistema. Teniendo en cuenta que los recursos Descripción de Comando COPY Copiar un área de búfer de fotogramas en coordenadas especificadas SFILL Rellenar un área con un valor de color de píxel dado PFILL Azulejar un área con un patrón de píxeles dado BITMAP Rellenar una región usando un patrón de bits RAW Mostrar datos de píxeles en bruto en una ubicación dada Tabla 1: Comandos de visualización del protocolo pTHINC. Las PDAs y las redes inalámbricas limitadas pueden no ser capaces de mantenerse al día con un servidor rápido que genera una gran cantidad de actualizaciones, pTHINC es capaz de fusionar, recortar y descartar actualizaciones automáticamente si se produce pérdida o congestión de red, o si el cliente no puede mantenerse al día con la velocidad de las actualizaciones. Este tipo de comportamiento resulta crucial en un entorno de navegación web, donde por ejemplo, una página puede ser redibujada varias veces mientras se renderiza al vuelo por el navegador. En este caso, la PDA solo recibirá y mostrará el resultado final, que claramente es todo lo que al usuario le interesa ver. pTHINC prioriza la entrega de actualizaciones a la PDA utilizando un programador de actualizaciones preemptivo de Tamaño Restante Más Corto Primero (SRSF). SRSF es análogo a la programación de Tiempo de Procesamiento Restante más Corto, la cual se sabe que es óptima para minimizar el tiempo medio de respuesta en un sistema interactivo. En un entorno de navegación web, los trabajos cortos están asociados con el texto y los componentes básicos de diseño de página, como el fondo de las páginas, que son contenido web crítico para el usuario. Por otro lado, los trabajos grandes suelen ser elementos de embellecimiento de menor prioridad, o, incluso peor, banners y anuncios de página web, los cuales tienen un valor cuestionable para el usuario mientras navega por la página. Usando SRSF, pTHINC puede maximizar la utilización del ancho de banda relativamente escaso disponible en la conexión inalámbrica entre la PDA y el servidor. 3.1 Gestión de la Pantalla Para permitir a los usuarios acceder con la misma facilidad a su navegador web y aplicaciones auxiliares desde una computadora de escritorio en casa como desde una PDA mientras están en movimiento, pTHINC proporciona un mecanismo de redimensionamiento para hacer zoom dentro y fuera de la pantalla de una sesión web. El redimensionamiento de pTHINC es completamente compatible con el servidor, no con el cliente. El servidor vuelve a muestrear las actualizaciones para que se ajusten al área de visualización de las PDAs antes de ser transmitidas por la red. pTHINC utiliza el algoritmo de remuestreo de Fants para redimensionar las actualizaciones de píxeles. Esto proporciona actualizaciones suaves y visualmente agradables con un antialiasing adecuado y solo requiere modestos recursos computacionales. El enfoque de redimensionamiento de pTHINCs tiene varias ventajas. Primero, permite al PDA aprovechar la vastamente superior potencia computacional del servidor para utilizar algoritmos de re-muestreo de alta calidad y producir actualizaciones de mayor calidad para que el PDA las muestre. Segundo, cambiar el tamaño de la pantalla no se traduce en requisitos adicionales de recursos para la PDA, ya que no necesita realizar ningún trabajo adicional. Finalmente, se logra una mejor utilización de la red inalámbrica ya que al reescalar las actualizaciones se reducen sus requisitos de ancho de banda. Para permitir a los usuarios orientar sus pantallas en una PDA y así proporcionar una experiencia visual que se ajuste mejor a las preferencias del usuario y al diseño de páginas web o aplicaciones, pTHINC proporciona un mecanismo de rotación de pantalla para alternar entre los modos de visualización horizontal y vertical. La rotación de pantalla de pTHINC es completamente compatible con el cliente, no con el servidor. pTHINC no recalcula explícitamente la geometría de las actualizaciones de pantalla para realizar la rotación, lo cual sería computacionalmente costoso. En cambio, pTHINC simplemente cambia la forma en que los datos se copian en el framebuffer para cambiar entre los modos de visualización. Cuando está en modo retrato, los datos se copian a lo largo de las filas del framebuffer de izquierda a derecha. Cuando se encuentra en modo horizontal, los datos se copian a lo largo de las columnas del framebuffer de arriba hacia abajo. Estas técnicas muy rápidas y simples reemplazan un conjunto de operaciones de copia por otro y no imponen ningún sobrecosto de rendimiento. pTHINC proporciona su propio mecanismo de rotación para soportar una amplia gama de dispositivos sin imponer requisitos adicionales de funciones en la PDA. Aunque algunos dispositivos PDA más nuevos ofrecen soporte nativo para diferentes orientaciones, este mecanismo no es dinámico y requiere que el usuario rote toda la interfaz de usuario de la PDA antes de iniciar el cliente pTHINC. Windows Mobile proporciona mecanismos de API nativos para que las aplicaciones de PDA puedan rotar su interfaz de usuario sobre la marcha, pero estos mecanismos ofrecen un rendimiento deficiente y una calidad de visualización baja, ya que la rotación se realiza de manera ingenua y no es completamente precisa. 3.2 Reproducción de video El video se ha convertido gradualmente en una parte integral de la World Wide Web, y su presencia solo seguirá aumentando. Los sitios web de hoy en día no solo utilizan gráficos animados y flash para presentar el contenido web de manera atractiva, sino que también utilizan video en streaming para enriquecer la interfaz web. Los usuarios pueden ver noticias pregrabadas y en vivo en CNN, ver los momentos más destacados deportivos en ESPN e incluso buscar a través de una gran colección de videos en Google Video. Para permitir que las aplicaciones proporcionen una reproducción de video eficiente, se han creado interfaces en los sistemas de visualización que permiten a los controladores de dispositivos de video exponer sus capacidades de hardware a las aplicaciones. pTHINC aprovecha estas interfaces y su enfoque de controlador de dispositivo virtual para proporcionar un puente virtual entre el cliente remoto y su hardware y las aplicaciones, y admitir de manera transparente la reproducción de video. Sobre esta arquitectura, pTHINC utiliza el espacio de color YUV para codificar el contenido de video, lo cual proporciona una serie de beneficios. Primero, se ha vuelto cada vez más común que el hardware de video de las PDA admita nativamente YUV y pueda realizar la conversión del espacio de color y el escalado automáticamente. Como resultado, pTHINC puede proporcionar reproducción de video a pantalla completa sin afectar el rendimiento. Segundo, el uso de YUV permite una representación más eficiente de los datos RGB sin pérdida de calidad, aprovechando la capacidad de los ojos humanos para distinguir mejor las diferencias en brillo que en color. En particular, pTHINC utiliza el formato YV12, que permite codificar datos de color RGB completo utilizando solo 12 bits por píxel. Tercero, los datos YUV se producen como uno de los últimos pasos del proceso de decodificación de la mayoría de los códecs de video, lo que permite a pTHINC proporcionar la reproducción de video de una manera independiente del formato. Finalmente, aunque el hardware de video de las PDAs no pueda acelerar la reproducción, el proceso de conversión de espacio de color es lo suficientemente simple como para no imponer requisitos poco razonables en la PDA. Un ejemplo más concreto de cómo pTHINC aprovecha el hardware de video PDA para admitir la reproducción de video se puede ver en nuestra implementación de prototipo en la popular PDA Dell Axim X51v, que está equipada con el acelerador multimedia Intel 2700G. En este caso, pTHINC crea un búfer fuera de pantalla en la memoria de video y escribe y lee desde esta región de memoria datos en formato YV12. Cuando llega un nuevo fotograma de video, los datos de video se copian desde el búfer a una superficie superpuesta en la memoria de video, que es independiente de la superficie normal utilizada para el dibujo tradicional. A medida que los datos YV12 se colocan en la superposición, el acelerador de Intel realiza automáticamente la conversión de espacio de color y el escalado. Al utilizar la superficie de superposición, pTHINC no necesita volver a dibujar la pantalla una vez que la reproducción de video ha terminado, ya que la superficie superpuesta no se ve afectada. Además, las regiones de superposición específicas pueden ser manipuladas aprovechando el hardware de video, por ejemplo, para realizar interpolación lineal de hardware y suavizar el fotograma para mostrarlo a pantalla completa, y para realizar rotación automática cuando el cliente se ejecuta en modo horizontal. 4. RESULTADOS EXPERIMENTALES Hemos implementado un prototipo de pTHINC que ejecuta el cliente en dispositivos Pocket PC basados en Windows Mobile ampliamente utilizados y el servidor en sistemas operativos tanto Windows como Linux. Para demostrar su eficacia en el soporte de aplicaciones web inalámbricas móviles, hemos medido su rendimiento en aplicaciones web. Presentamos resultados experimentales sobre diferentes dispositivos PDA para dos aplicaciones web populares, navegar por páginas web y reproducir contenido de video desde la web. Comparamos pTHINC con aplicaciones web nativas que se ejecutan localmente en la PDA para demostrar la mejora que pTHINC puede proporcionar sobre el enfoque tradicional de cliente pesado. También comparamos pTHINC con tres de los clientes ligeros más utilizados que pueden ejecutarse en PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] y VNC (Virtual Network Computing) [16]. Seguimos la práctica común y nos referimos a Citrix MetaFrameXP y Microsoft Remote Desktop por sus respectivos protocolos de visualización remota, ICA (Independent Computing Architecture) y RDP (Remote Desktop Protocol). 4.1 Plataforma de Pruebas Experimental Realizamos nuestros experimentos web utilizando dos PDA Pocket PC inalámbricas diferentes en un entorno de prueba de red Wi-Fi aislado, como se muestra en la Figura 2. El banco de pruebas consistía en dos dispositivos cliente PDA, un monitor de paquetes, un servidor de cliente ligero y un servidor web. Excepto por las PDAs, todas las demás máquinas eran servidores IBM Netfinity 4500R con procesadores duales Intel PIII de 933 MHz y 512 MB de RAM, y estaban conectadas en una red FastEthernet de 100 Mbps conmutada. El servidor web utilizado fue Apache 1.3.27, el emulador de red fue NISTNet 2.0.12 y el monitor de paquetes fue Ethereal 0.10.9. Los clientes de PDA se conectaron al banco de pruebas a través de un punto de acceso inalámbrico Lucent Orinoco AP-2000 802.11b. Todos los experimentos utilizando la red inalámbrica se llevaron a cabo a una distancia de diez pies del punto de acceso, por lo que consideramos que la cantidad de pérdida de paquetes era insignificante en nuestros experimentos. Se utilizaron dos PDA Pocket PC para proporcionar resultados en modelos antiguos y menos potentes, así como en modelos más nuevos de mayor rendimiento. El modelo anterior era un Dell Axim X5 con 147 Cliente 1024×768 640×480 Profundidad Cambio de tamaño Clip RDP no sí 8 bits no sí VNC sí sí 16 bits no no ICA sí sí 16 bits sí no pTHINC sí sí 24 bits sí no Tabla 2: Configuración del banco de pruebas de cliente ligero con un CPU Intel XScale PXA255 de 400 MHz y 64 MB de RAM ejecutando Windows Mobile 2003 y una tarjeta Dell TrueMobile 1180 de 2.4 GHz CompactFlash para redes inalámbricas. El modelo más nuevo era un Dell Axim X51v con un procesador Intel XScale XPA270 de 624 MHz y 64 MB de RAM ejecutando Windows Mobile 5.0 y con red inalámbrica 802.11b integrada. El X51v tiene un acelerador multimedia Intel 2700G con 16MB de memoria de video. Ambas PDAs son capaces de mostrar colores de 16 bits pero tienen diferentes tamaños de pantalla y resoluciones de visualización. El X5 tiene una pantalla diagonal de 3.5 pulgadas con una resolución de 240×320. El X51v tiene una pantalla diagonal de 3.7 pulgadas con una resolución de 480×640. Los cuatro clientes ligeros que utilizamos admiten diferentes niveles de calidad de visualización, como se resume en la Tabla 2. El cliente de RDP solo admite una resolución de pantalla fija de 640×480 en el servidor con una profundidad de color de 8 bits, mientras que otras plataformas ofrecen niveles más altos de calidad de visualización. Para proporcionar una comparación justa en todas las plataformas, realizamos nuestros experimentos con sesiones de cliente ligero configuradas para dos posibles resoluciones, 1024×768 y 640×480. Tanto ICA como VNC se configuraron para usar la resolución nativa de PDA con una profundidad de color de 16 bits. El prototipo actual de pTHINC utiliza color de 24 bits directamente y el cliente reduce la resolución de las actualizaciones al nivel de color de 16 bits disponible en la PDA. RDP se configuró utilizando solo una profundidad de color de 8 bits ya que no admite ninguna profundidad de color mejor. Dado que tanto pTHINC como ICA ofrecen la capacidad de ver la pantalla redimensionada para ajustarse a la pantalla, medimos ambos clientes con y sin la pantalla redimensionada para ajustarse a la pantalla del PDA. Cada cliente ligero fue probado utilizando el modo de paisaje en lugar del modo retrato cuando estaba disponible. Todos los sistemas que se ejecutan en el X51v podrían funcionar en modo horizontal porque el hardware proporciona una función de modo horizontal. Sin embargo, el X5 no proporciona esta funcionalidad. Solo pTHINC admite directamente el modo paisaje, por lo que era el único sistema que podía ejecutarse en modo paisaje tanto en el X5 como en el X51v. Para proporcionar una comparación justa, también estandarizamos en hardware y sistemas operativos comunes siempre que sea posible. Todos los sistemas utilizaron el servidor Netfinity como servidor de cliente ligero. Para los dos sistemas diseñados para servidores Windows, ICA y RDP, ejecutamos Windows Server 2003 en el servidor. Para los otros sistemas que admiten servidores basados en X, ejecutamos la distribución Debian Linux Inestable con el kernel Linux 2.6.10 en el servidor. Utilizamos las últimas versiones de servidores de cliente ligero disponibles en cada plataforma en el momento de nuestros experimentos, a saber, Citrix MetaFrame XP Server para Windows Feature Release 3, Microsoft Remote Desktop integrado en Windows XP y Windows 2003 utilizando RDP 5.2, y VNC 4.0.4.2. Para los benchmarks de aplicaciones, utilizamos dos benchmarks de aplicaciones web para nuestros experimentos basados en dos escenarios de aplicación comunes, navegación por páginas web y reproducción de contenido de video desde la web. Dado que muchos sistemas de cliente ligero, incluidos dos de los probados, son cerrados y propietarios, medimos su rendimiento de manera no invasiva capturando el tráfico de red con un monitor de paquetes y utilizando una variante de benchmarking en cámara lenta [13] previamente desarrollada para medir el rendimiento de clientes ligeros en entornos de PDA [10]. Esta metodología de medición tiene en cuenta tanto el desacoplamiento de la visualización que puede ocurrir entre el cliente y el servidor en sistemas de cliente ligero, como el tiempo de procesamiento del cliente, que puede ser significativo en el caso de las PDAs. Para medir el rendimiento de la navegación web, utilizamos un benchmark de navegación web basado en la Prueba de Carga de Páginas de Texto Web del conjunto de benchmarks Ziff-Davis i-Bench [7]. El punto de referencia consiste en la carga controlada de 55 páginas desde el servidor web mediante JavaScript. Las páginas contienen tanto texto como gráficos, con páginas de diferentes tamaños. Los gráficos son imágenes incrustadas en formatos GIF y JPEG. El benchmark original i-Bench fue modificado para pruebas de rendimiento en cámara lenta al introducir retrasos de varios segundos entre las páginas utilizando JavaScript. Luego se realizaron dos pruebas, una en la que se agregaron retrasos entre cada página, y otra en la que las páginas se cargaron continuamente sin esperar a que se mostraran en el cliente. En la primera prueba, los retrasos se ajustaron lo suficiente en cada caso para garantizar que cada página pudiera ser recibida y mostrada en el cliente por completo sin solapamiento temporal en la transferencia de los datos pertenecientes a dos páginas consecutivas. Utilizamos el monitor de paquetes para registrar el tráfico de paquetes para cada ejecución de la prueba de referencia, luego utilizamos las marcas de tiempo del primer y último paquete en la traza para obtener nuestras medidas de latencia [10]. El monitor de paquetes también registró la cantidad de datos transmitidos entre el cliente y el servidor. La proporción entre el tráfico de datos en las dos pruebas produce un factor de escala. Este factor de escala muestra la pérdida de datos entre el servidor y el cliente debido a la incapacidad del cliente para procesar los datos lo suficientemente rápido. El producto del factor de escala con la medición de latencia produce la verdadera latencia teniendo en cuenta el tiempo de procesamiento del cliente. Para ejecutar la prueba de navegación web, utilizamos Mozilla Firefox 1.0.4 en el servidor de cliente ligero para los clientes ligeros, y Windows Internet Explorer (IE) Mobile para 2003 y Mobile para 5.0 para los navegadores nativos en las PDAs X5 y X51v, respectivamente. En todos los casos, el navegador web utilizado se ajustó para ocupar toda la región de visualización disponible. Para medir el rendimiento de reproducción de video, utilizamos un banco de pruebas de video que consistía en reproducir un clip de video MPEG-1 de 34.75 segundos que contenía una mezcla de noticias y programación de entretenimiento a resolución de pantalla completa. El videoclip tiene un tamaño de 5.11 MB y consta de 834 cuadros de píxeles de 352x240 con una velocidad de cuadro ideal de 24 cuadros por segundo. Medimos el rendimiento del video utilizando pruebas de referencia en cámara lenta al monitorear el tráfico de paquetes resultante a dos velocidades de reproducción, 1 cuadro por segundo (fps) y 24 fps, y comparando los resultados para determinar los retrasos en la reproducción y las caídas de cuadros que ocurren a 24 fps para medir la calidad general del video [13]. Por ejemplo, el 100% de calidad significa que todos los fotogramas del video se reprodujeron a velocidad en tiempo real. Por otro lado, una calidad del 50% podría significar que se eliminó la mitad de los datos del video, o que el clip tardó el doble en reproducirse a pesar de que se mostró toda la información del video. Para ejecutar la prueba de rendimiento de video, utilizamos Windows Media Player 9 para servidores de clientes ligeros basados en Windows, MPlayer 1.0 pre 6 para servidores de clientes ligeros basados en X, y Windows Media Player 9 Mobile y 10 Mobile para los reproductores de video nativos que se ejecutan localmente en las PDAs X5 y X51v, respectivamente. En todos los casos, el reproductor de video utilizado se dimensionó para llenar toda la región de visualización disponible. Las Figuras 3 y 4 muestran los resultados de ejecutar la prueba de navegación por la web. Para cada plataforma, mostramos resultados de hasta cuatro configuraciones diferentes, dos en el X5 y dos en el X51v, dependiendo de si cada configuración era compatible. Sin embargo, no todas las plataformas podrían admitir todas las configuraciones. El navegador local solo se ejecuta a la resolución de pantalla de la PDA, 480×680 o menos para el X51v y el X5. RDP solo funciona a 640×480. Ninguna plataforma podía soportar una resolución de pantalla de 1024×768. ICA solo funcionaba en el X5 y no podía ejecutarse en el X51v porque no era compatible con Windows Mobile 5. La Figura 3 muestra la latencia promedio por página web para cada plataforma. pTHINC proporciona la latencia promedio más baja en la navegación web en ambas PDAs. En el X5, pTHINC funciona hasta 70 veces mejor que otros sistemas de cliente ligero y 8 veces mejor que el navegador local. En el X51v, pTHINC funciona hasta 80 veces mejor que otros sistemas de cliente ligero y 7 veces mejor que el navegador nativo. De hecho, todos los clientes ligeros excepto VNC superan al navegador local de PDA, demostrando los beneficios de rendimiento del enfoque de cliente ligero. Los estudios de usabilidad han demostrado que las páginas web deben tardar menos de un segundo en descargarse para que el usuario experimente una navegación web ininterrumpida [14]. Las mediciones muestran que solo los clientes delgados ofrecen latencias de página web de menos de un segundo. Por el contrario, el navegador local requiere más de 3 segundos en promedio por página web. El navegador local funciona peor ya que necesita ejecutar un navegador web más limitado para procesar el HTML, JavaScript y realizar todo el renderizado utilizando las capacidades limitadas de la PDA. Los clientes ligeros pueden aprovecharse de hardware de servidor más rápido y un navegador web altamente optimizado para procesar el contenido web mucho más rápido. La Figura 3 muestra que RDP es la plataforma más rápida después de pTHINC. Sin embargo, RDP solo puede ejecutarse a una resolución fija de 640×480 y una profundidad de color de 8 bits. Además, RDP también recorta la pantalla al tamaño de la pantalla de la PDA para no tener que enviar actualizaciones que no son visibles en la pantalla de la PDA. Esto proporciona un beneficio de rendimiento siempre y cuando el resto del contenido web no se visualice, pero degrada el rendimiento cuando un usuario desplaza la pantalla para ver otro contenido web. RDP logra su rendimiento con una calidad de visualización significativamente inferior en comparación con otros clientes ligeros y con recortes adicionales en la visualización que no son utilizados por otros sistemas. Como resultado, el rendimiento de RDP por sí solo no proporciona una comparación completa con las otras plataformas. Por el contrario, pTHINC ofrece el mejor rendimiento al mismo tiempo que proporciona una calidad de visualización igual o mejor que los otros sistemas. Dado que VNC e ICA ofrecen una calidad de visualización similar a pTHINC, estos sistemas proporcionan una comparación más justa de diferentes enfoques de cliente ligero. ICA funciona peor en parte porque utiliza primitivas de visualización de nivel superior que requieren costos adicionales de procesamiento por parte del cliente. VNC funciona peor en parte porque pierde datos de visualización debido a su mecanismo de entrega de cliente-pull y debido a los costos de procesamiento del cliente en descomprimir primitivas de píxeles crudos. En ambos casos, su rendimiento se vio limitado en parte porque sus clientes de PDA no podían mantenerse al ritmo al que se mostraban las páginas web. La Figura 3 también muestra las medidas para aquellos clientes ligeros que admiten redimensionar la pantalla para ajustarse a la pantalla de la PDA, a saber, ICA y pTHINC. El redimensionamiento requiere un procesamiento adicional, lo que resulta en latencias promedio más lentas de las páginas web. Las mediciones muestran que el retraso adicional incurrido por ICA al cambiar el tamaño es mucho más sustancial que para pTHINC. ICA realiza redimensionamiento en el cliente PDA más lento. Por el contrario, pTHINC aprovecha el servidor más potente para redimensionar, reduciendo la diferencia de rendimiento entre redimensionar y no redimensionar. A diferencia de ICA, pTHINC es capaz de proporcionar latencias de descarga de páginas web en menos de un segundo en ambos casos. La Figura 4 muestra los datos transferidos en KB por página al ejecutar la versión de cámara lenta de las pruebas. Todas las plataformas tienen requisitos modestos de transferencia de datos de aproximadamente 100 KB por página o menos. Esto está bien dentro de la capacidad de ancho de banda de las redes Wi-Fi. Las mediciones muestran que el navegador local no transfiere la menor cantidad de datos. Esto es sorprendente ya que HTML suele considerarse una representación muy compacta del contenido. En cambio, RDP es la plataforma más eficiente en ancho de banda, en gran parte debido a que utiliza solo una profundidad de color de 8 bits y recorte de pantalla para no transferir la página web completa al cliente. En general, pTHINC tiene los mayores requisitos de datos, ligeramente más que VNC. Esto se debe en gran medida a la falta de soporte nativo de los prototipos actuales de pTHINC para datos de color de 16 bits en el protocolo de comunicación. Sin embargo, este resultado también destaca el rendimiento de pTHINCs, ya que es más rápido que todos los demás sistemas incluso al transferir más datos. Además, dado que los modelos más recientes de PDA admiten colores completos de 24 bits, estos resultados indican que pTHINC seguirá proporcionando un buen rendimiento en la navegación web. Dado que la usabilidad y la calidad de la pantalla son tan importantes como el rendimiento, las Figuras 5 a 8 comparan capturas de pantalla de los diferentes clientes ligeros al mostrar una página web, en este caso del popular sitio de noticias de la BBC. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo paisaje. Figura 5: Captura de pantalla del navegador: RDP 640x480. Figura 6: Captura de pantalla del navegador: VNC 1024x768. Figura 7: Captura de pantalla del navegador: ICA redimensionado 1024x768. Figura 8: Captura de pantalla del navegador: pTHINC redimensionado 1024x768 utilizando la configuración de resolución de pantalla máxima para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Si bien las capturas de pantalla carecen de la fidelidad visual de la pantalla real del dispositivo, se pueden hacer varias observaciones. La Figura 5 muestra que RDP no admite el modo de pantalla completa y desperdicia mucho espacio en pantalla para controles y elementos de la interfaz de usuario, lo que obliga al usuario a desplazarse para acceder a todo el contenido de la sesión de navegación web. La Figura 6 muestra que VNC aprovecha mejor el espacio de la pantalla y ofrece una mejor calidad de visualización, pero aún obliga al usuario a desplazarse para ver la página web debido a la falta de soporte para redimensionar. La Figura 7 muestra la capacidad de ICA para mostrar la página web completa dada su soporte de redimensionamiento, pero su falta de capacidad en modo paisaje y su algoritmo de redimensionamiento deficiente comprometen significativamente la calidad de visualización. Por el contrario, la Figura 8 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de pantalla completa de alta calidad del ancho completo de la página web. pTHINC maximiza toda la región de visualización moviendo todos los controles a los botones de la PDA. Además, pTHINC aprovecha la potencia computacional del servidor para utilizar un algoritmo de redimensionamiento de alta calidad y ajustar la pantalla al tamaño de la PDA sin un sobrecoste significativo. Las figuras 9 y 10 muestran los resultados de ejecutar la prueba de reproducción de video. Para cada plataforma excepto ICA, mostramos resultados para una configuración X5 y X51v. ICA no pudo ejecutarse en el X51v como se mencionó anteriormente. Las mediciones se realizaron utilizando configuraciones que reflejaban el entorno desde el cual un usuario tendría que acceder a una sesión web tanto desde una computadora de escritorio como desde una PDA. Por lo tanto, se utilizó una resolución de pantalla del servidor de 1024×768 siempre que fuera posible y el video se mostró a pantalla completa. La resolución de pantalla de RDP se limitaba a 640×480, como se mencionó anteriormente. Dado que ver toda la pantalla del video es la única opción realmente utilizable, redimensionamos la pantalla para que se ajustara a la pantalla de la PDA en aquellas plataformas que admitían esta función, a saber, ICA y pTHINC. La Figura 9 muestra la calidad de video para cada plataforma. pTHINC es el único cliente ligero capaz de proporcionar una calidad de reproducción de video perfecta, similar al reproductor de video nativo de PDA. Todos los demás clientes ligeros ofrecen una calidad de video muy pobre. Con la excepción de RDP en el X51v que proporcionó una calidad de video inaceptable del 35%, ninguno de los otros sistemas pudo siquiera alcanzar el 10% de calidad de video. VNC e ICA tienen la peor calidad al 8% en el dispositivo X5. El soporte de video nativo de pTHINCs permite un rendimiento de video superior, mientras que otros clientes ligeros sufren de su incapacidad para distinguir el video de las actualizaciones normales de la pantalla. Intentan aplicar algoritmos de compresión ineficaces y costosos en los datos de video y no pueden mantenerse al día con la corriente de actualizaciones generadas, lo que resulta en cuadros omitidos o largos tiempos de reproducción. VNC se ve aún más afectado por su modelo de actualización de cliente-pull porque los fotogramas de video se generan más rápido que la velocidad a la que el cliente puede procesar y enviar solicitudes al servidor para obtener la siguiente actualización de pantalla. La Figura 10 muestra los datos totales transferidos durante la reproducción de video a pantalla completa para cada sistema. El reproductor nativo es la plataforma más eficiente en ancho de banda, enviando menos de 6 MB de datos, lo que corresponde a aproximadamente 1.2 Mbps de ancho de banda. La calidad de video al 100% de pTHINCs requiere alrededor de 25 MB de datos, lo que corresponde a un uso de ancho de banda de menos de 6 Mbps. Mientras que los otros clientes ligeros envían menos datos que THINC, lo hacen porque están eliminando datos de video, lo que resulta en una calidad de video degradada. Las figuras 11 a 14 comparan capturas de pantalla de los distintos clientes ligeros al mostrar el videoclip. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo horizontal utilizando la configuración de resolución máxima de pantalla para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Las figuras 11 y 12 muestran que RDP y VNC no pueden mostrar el cuadro completo del video en la pantalla de la PDA. RDP desperdicia espacio en pantalla para los elementos de la interfaz de usuario y VNC solo muestra la esquina superior del marco de video en la pantalla. La Figura 13 muestra que el ICA proporciona redimensionamiento para mostrar todo el fotograma del video, pero no redimensiona proporcionalmente los datos del video, lo que resulta en artefactos de visualización extraños. Por el contrario, la Figura 14 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de alta calidad a pantalla completa de todo el fotograma del video. pTHINC ofrece una visualización de video visualmente más atractiva que RDP, VNC o ICA. 5. TRABAJOS RELACIONADOS Varios estudios han examinado el rendimiento de la navegación web en la computación de cliente ligero [13, 19, 10]. La capacidad de los clientes ligeros para mejorar el rendimiento de la navegación web en PDAs inalámbricas fue demostrada cuantitativamente por primera vez en un estudio previo realizado por uno de los autores [10]. Este estudio demostró que los clientes ligeros pueden ofrecer tanto un rendimiento de navegación web más rápido como una mayor funcionalidad de navegación web. El estudio consideró una amplia gama de contenido web, incluido el contenido de sistemas de información médica. Nuestro trabajo se basa en este estudio previo y considera temas importantes como la usabilidad de los clientes ligeros existentes en entornos de PDA, los compromisos entre la usabilidad y el rendimiento de los clientes ligeros, el rendimiento en diferentes dispositivos de PDA y el rendimiento de los clientes ligeros en aplicaciones web comunes como el video. Se han desarrollado muchos clientes ligeros y algunos tienen clientes de PDA, incluyendo Remote Desktop de Microsoft [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5] y Tarantella [18]. Estos sistemas fueron diseñados inicialmente para computadoras de escritorio y adaptados posteriormente para asistentes digitales personales (PDA). A diferencia de pTHINC, no abordan los problemas clave de arquitectura del sistema y usabilidad importantes para las PDAs. Esto limita la calidad de visualización, el rendimiento del sistema, el espacio de pantalla disponible y la usabilidad general en PDAs. pTHINC se basa en trabajos anteriores de dos de los autores sobre THINC [1], ampliando la arquitectura del servidor e introduciendo una interfaz de cliente y un modelo de uso para admitir eficientemente dispositivos PDA en aplicaciones web móviles. Otros enfoques para mejorar el rendimiento de la navegación web inalámbrica móvil se han centrado en el uso de proxies de transcodificación y almacenamiento en caché en conjunto con el modelo de cliente pesado [11, 9, 4, 8]. Trabajan mediante el envío de funcionalidades a proxies externos y utilizando aplicaciones de navegación especializadas en el dispositivo PDA que se comunican con el proxy. Nuestro enfoque de cliente ligero difiere fundamentalmente de estos enfoques de cliente pesado al trasladar toda la lógica del navegador web al servidor, aprovechando las inversiones existentes en navegadores web de escritorio y aplicaciones auxiliares para funcionar de manera integrada con los sistemas de producción sin necesidad de configuraciones adicionales de proxy o modificaciones en el navegador web. Con la aparición de la navegación web en dispositivos con pantallas pequeñas, los sitios web han sido rediseñados utilizando mecanismos como WAP y se han desarrollado navegadores web nativos especializados para adaptarse a las necesidades de estos dispositivos. Recientemente, Opera ha desarrollado el navegador web Opera Mini [15], que utiliza un enfoque similar al modelo de cliente ligero para proporcionar acceso a través de una serie de dispositivos móviles que normalmente no podrían ejecutar un navegador web. En lugar de requerir que el dispositivo procese las páginas web, utiliza un servidor remoto para preprocesar la página antes de enviarla al teléfono. CONCLUSIONES Hemos introducido pTHINC, una arquitectura de cliente ligero para PDAs inalámbricas. pTHINC proporciona mecanismos arquitectónicos y de usabilidad clave como el redimensionamiento de pantalla en el lado del servidor, rotación de pantalla en el lado del cliente utilizando técnicas simples de copia, soporte de video YUV, y maximización del espacio de pantalla para actualizaciones de visualización y aprovechamiento de los botones de control existentes en las PDAs para elementos de la interfaz de usuario. pTHINC soporta de manera transparente navegadores de escritorio tradicionales y sus aplicaciones auxiliares en dispositivos PDA y computadoras de escritorio, brindando a los usuarios móviles acceso ubicuo a un entorno web consistente, personalizado y completo en dispositivos heterogéneos. Hemos implementado pTHINC y medido su rendimiento en aplicaciones web en comparación con los sistemas de cliente ligero existentes y las aplicaciones web nativas. Nuestros resultados en múltiples dispositivos móviles inalámbricos demuestran que pTHINC ofrece un rendimiento de navegación web hasta 80 veces mejor que los sistemas de cliente ligero existentes, y 8 veces mejor que un navegador PDA nativo. Además, pTHINC es el único cliente ligero de PDA 151 Figura 11: Captura de pantalla de video: RDP 640x480 Figura 12: Captura de pantalla de video: VNC 1024x768 Figura 13: Captura de pantalla de video: ICA redimensionado 1024x768 Figura 14: Captura de pantalla de video: pTHINC redimensionado 1024x768 que proporciona de manera transparente la reproducción de video a pantalla completa y a velocidad de cuadro completa, haciendo que los sitios web con contenido multimedia sean accesibles para los usuarios de la web móvil. 7. AGRADECIMIENTOS Este trabajo fue apoyado en parte por las subvenciones NSF ITR CCR0219943 y CNS-0426623, y un premio IBM SUR. 8. REFERENCIAS [1] R. Baratto, L. Kim y J. Nieh. THINC: Una arquitectura de visualización virtual para la computación de cliente ligero. En Actas del 20º Simposio de Principios de Sistemas Operativos de la ACM (SOSP), octubre de 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius y A. Muir. Microsoft Windows NT Server 4.0, Terminal Server Edition: Referencia Técnica. Microsoft Press, Redmond, WA, 1999. [4] A.\nMicrosoft Press, Redmond, WA, 1999. [4] A. Fox, I. Goldberg, S. D. Gribble y D. C. Lee. Experiencia con Top Gun Wingman: un navegador web gráfico basado en proxy para el 3Com PalmPilot. En Actas de Middleware 98, Lake District, Inglaterra, septiembre de 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Ley de Portabilidad y Responsabilidad del Seguro de Salud. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench versión 1.5. http://etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi. Sobre agentes de proxy, movilidad y acceso web. Redes y aplicaciones móviles, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon y A. Ortega. Diseño e Implementación de un Proxy de Caché Blando. Redes de Computadoras y Sistemas ISDN, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana y S. Varshneya. Mejorando la navegación web en PDAs inalámbricas utilizando computación de cliente ligero. En Actas de la 13ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham y P. Shenoy. TranSquid: Proxy de transcodificación y almacenamiento en caché para entornos de comercio electrónico heterogéneos. En Actas del 12º Taller IEEE sobre Problemas de Investigación en Ingeniería de Datos (RIDE 02), febrero de 2002. [12] Visor VNC .NET para PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang y N. Novik. Midiendo el rendimiento de clientes ligeros utilizando pruebas de referencia en cámara lenta. ACM Trans. Sistemas de Computación, 21(1):87-115, Feb. 2003. [14] J. Nielsen. Diseño de Usabilidad en la Web. New Riders Publishing, Indianápolis, IN, 2000. [15] Navegador Opera Mini. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood y A. Hopper. Computación de Red Virtual. IEEE Internet Computing, 2(1), enero/febrero de 1998. [17] R. W. Scheifler y J. Gettys. El Sistema de Ventanas X. ACM Trans. Gr., 5(2):79-106, Abr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla y M. Sajjadpour. Rendimiento de la navegación web en computación inalámbrica de cliente ligero. En Actas de la 12ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2003. 152",
    "original_sentences": [
        "pTHINC: A Thin-Client Architecture for Mobile Wireless Web Joeng Kim, Ricardo A. Baratto, and Jason Nieh Department of Computer Science Columbia University, New York, NY, USA {jk2438, ricardo, nieh}@cs.columbia.edu ABSTRACT Although web applications are gaining popularity on mobile wireless PDAs, web browsers on these systems can be quite slow and often lack adequate functionality to access many web sites.",
        "We have developed pTHINC, a PDA thinclient solution that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide high-fidelity display and seamless mobility across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available screen resolution for application display.",
        "We have implemented pTHINC on Windows Mobile and evaluated its performance on mobile wireless devices.",
        "Our results compared to local PDA web browsers and other thin-client approaches demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
        "Categories and Subject Descriptors: C.2.4 ComputerCommunication-Networks: Distributed Systems - client/ server General Terms: Design, Experimentation, Performance 1.",
        "INTRODUCTION The increasing ubiquity of wireless networks and decreasing cost of hardware is fueling a proliferation of mobile wireless handheld devices, both as standalone wireless Personal Digital Assistants (PDA) and popular integrated PDA/cell phone devices.",
        "These devices are enabling new forms of mobile computing and communication.",
        "Service providers are leveraging these devices to deliver pervasive web access, and mobile web users already often use these devices to access web-enabled information such as news, email, and localized travel guides and maps.",
        "It is likely that within a few years, most of the devices accessing the web will be mobile.",
        "Users typically access web content by running a web browser and associated helper applications locally on the PDA.",
        "Although native web browsers exist for PDAs, they deliver subpar performance and have a much smaller feature set and more limited functionality than their desktop computing counterparts [10].",
        "As a result, PDA web browsers are often not able to display web content from web sites that leverage more advanced web technologies to deliver a richer web experience.",
        "This fundamental problem arises for two reasons.",
        "First, because PDAs have a completely different hardware/software environment from traditional desktop computers, web applications need to be rewritten and customized for PDAs if at all possible, duplicating development costs.",
        "Because the desktop application market is larger and more mature, most development effort generally ends up being spent on desktop applications, resulting in greater functionality and performance than their PDA counterparts.",
        "Second, PDAs have a more resource constrained environment than traditional desktop computers to provide a smaller form factor and longer battery life.",
        "Desktop web browsers are large, complex applications that are unable to run on a PDA.",
        "Instead, developers are forced to significantly strip down these web browsers to provide a usable PDA web browser, thereby crippling PDA browser functionality.",
        "Thin-client computing provides an alternative approach for enabling pervasive web access from handheld devices.",
        "A thin-client computing system consists of a server and a client that communicate over a network using a remote display protocol.",
        "The protocol enables graphical displays to be virtualized and served across a network to a client device, while application logic is executed on the server.",
        "Using the remote display protocol, the client transmits user input to the server, and the server returns screen updates of the applications from the server to the client.",
        "Using a thin-client model for mobile handheld devices, PDAs can become simple stateless clients that leverage the remote server capabilities to execute web browsers and other helper applications.",
        "The thin-client model provides several important benefits for mobile wireless web.",
        "First, standard desktop web applications can be used to deliver web content to PDAs without rewriting or adapting applications to execute on a PDA, reducing development costs and leveraging existing software investments.",
        "Second, complex web applications can be executed on powerful servers instead of running stripped down versions on more resource constrained PDAs, providing greater functionality and better performance [10].",
        "Third, web applications can take advantage of servers with faster networks and better connectivity, further boosting application performance.",
        "Fourth, PDAs can be even simpler devices since they do not need to perform complex application logic, potentially reducing energy consumption and extend143 ing battery life.",
        "Finally, PDA thin clients can be essentially stateless appliances that do not need to be backed up or restored, require almost no maintenance or upgrades, and do not store any sensitive data that can be lost or stolen.",
        "This model provides a viable avenue for medical organizations to comply with HIPAA regulations [6] while embracing mobile handhelds in their day to day operations.",
        "Despite these potential advantages, thin clients have been unable to provide the full range of these benefits in delivering web applications to mobile handheld devices.",
        "Existing thin clients were not designed for PDAs and do not account for important usability issues in the context of small form factor devices, resulting in difficulty in navigating displayed web content.",
        "Furthermore, existing thin clients are ineffective at providing seamless mobility across the heterogeneous mix of device display sizes and resolutions.",
        "While existing thin clients can already provide faster performance than native PDA web browsers in delivering HTML web content, they do not effectively support more display-intensive web helper applications such as multimedia video, which is increasingly an integral part of available web content.",
        "To harness the full potential of thin-client computing in providing mobile wireless web on PDAs, we have developed pTHINC (PDA THin-client InterNet Computing). pTHINC builds on our previous work on THINC [1] to provide a thinclient architecture for mobile handheld devices. pTHINC virtualizes and resizes the display on the server to efficiently deliver high-fidelity screen updates to a broad range of different clients, screen sizes, and screen orientations, including both portrait and landscape viewing modes.",
        "This enables pTHINC to provide the same persistent web session across different client devices.",
        "For example, pTHINC can provide the same web browsing session appropriately scaled for display on a desktop computer and a PDA so that the same cookies, bookmarks, and other meta-data are continuously available on both machines simultaneously. pTHINCs virtual display approach leverages semantic information available in display commands, and client-side video hardware to provide more efficient remote display mechanisms that are crucial for supporting more display-intensive web applications.",
        "Given limited display resolution on PDAs, pTHINC maximizes the use of screen real estate for remote display by moving control functionality from the screen to readily available PDA control buttons, improving system usability.",
        "We have implemented pTHINC on Windows Mobile and demonstrated that it works transparently with existing applications, window systems, and operating systems, and does not require modifying, recompiling, or relinking existing software.",
        "We have quantitatively evaluated pTHINC against local PDA web browsers and other thin-client approaches on Pocket PC devices.",
        "Our experimental results demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
        "This paper presents the design and implementation of pTHINC.",
        "Section 2 describes the overall usage model and usability characteristics of pTHINC.",
        "Section 3 presents the design and system architecture of pTHINC.",
        "Section 4 presents experimental results measuring the performance of pTHINC on web applications and comparing it against native PDA browsers and other popular PDA thin-client systems.",
        "Section 5 discusses related work.",
        "Finally, we present some concluding remarks. 2.",
        "PTHINC USAGE MODEL pTHINC is a thin-client system that consists of a simple client viewer application that runs on the PDA and a server that runs on a commodity PC.",
        "The server leverages more powerful PCs to to run web browsers and other application logic.",
        "The client takes user input from the PDA stylus and virtual keyboard and sends them to the server to pass to the applications.",
        "Screen updates are then sent back from the server to the client for display to the user.",
        "When the pTHINC PDA client is started, the user is presented with a simple graphical interface where information such as server address and port, user authentication information, and session settings can be provided. pTHINC first attempts to connect to the server and perform the necessary handshaking.",
        "Once this process has been completed, pTHINC presents the user with the most recent display of his session.",
        "If the session does not exist, a new session is created.",
        "Existing sessions can be seamlessly continued without changes in the session setting or server configuration.",
        "Unlike other thin-client systems, pTHINC provides a user with a persistent web session model in which a user can launch a session running a web browser and associated applications at the server, then disconnect from that session and reconnect to it again anytime.",
        "When a user reconnects to the session, all of the applications continue running where the user left off, so that the user can continue working as though he or she never disconnected.",
        "The ability to disconnect and reconnect to a session at anytime is an important benefit for mobile wireless PDA users which may have intermittent network connectivity. pTHINCs persistent web session model enables a user to reconnect to a web session from devices other than the one on which the web session was originally initiated.",
        "This provides users with seamless mobility across different devices.",
        "If a user loses his PDA, he can easily use another PDA to access his web session.",
        "Furthermore, pTHINC allows users to use non-PDA devices to access web sessions as well.",
        "A user can access the same persistent web session on a desktop PC as on a PDA, enabling a user to use the same web session from any computer. pTHINCs persistent web session model addresses a key problem encountered by mobile web users, the lack of a common web environment across computers.",
        "Web browsers often store important information such as bookmarks, cookies, and history, which enable them to function in a much more useful manner.",
        "The problem that occurs when a user moves between computers is that this data, which is specific to a web browser installation, cannot move with the user.",
        "Furthermore, web browsers often need helper applications to process different media content, and those applications may not be consistently available across all computers. pTHINC addresses this problem by enabling a user to remotely use the exact same web browser environment and helper applications from any computer.",
        "As a result, pTHINC can provide a common, consistent web browsing environment for mobile users across different devices without requiring them to attempt to repeatedly synchronize different web browsing environments across multiple machines.",
        "To enable a user to access the same web session on different devices, pTHINC must provide mechanisms to support different display sizes and resolutions.",
        "Toward this end, pTHINC provides a zoom feature that enables a user to zoom in and out of a display and allows the display of a web 144 Figure 1: pTHINC shortcut keys session to be resized to fit the screen of the device being used.",
        "For example, if the server is running a web session at 1024×768 but the client is a PDA with a display resolution of 640×480, pTHINC will resize the desktop display to fit the full display in the smaller screen of the PDA. pTHINC provides the PDA user with the option to increase the size of the display by zooming in to different parts of the display.",
        "Users are often familiar with the general layout of commonly visited websites, and are able to leverage this resizing feature to better navigate through web pages.",
        "For example, a user can zoom out of the display to view the entire page content and navigate hyperlinks, then zoom in to a region of interest for a better view.",
        "To enable a user to access the same web session on different devices, pTHINC must also provide mechanisms to support different display orientations.",
        "In a desktop environment, users are typically accustomed to having displays presented in landscape mode where the screen width is larger than its height.",
        "However, in a PDA environment, the choice is not always obvious.",
        "Some users may prefer having the display in portrait mode, as it is easier to hold the device in their hands, while others may prefer landscape mode in order to minimize the amount of side-scrolling necessary to view a web page.",
        "To accommodate PDA user preferences, pTHINC provides an orientation feature that enables it to seamless rotate the display between landscape and portrait mode.",
        "The landscape mode is particularly useful for pTHINC users who frequently access their web sessions on both desktop and PDA devices, providing those users with the same familiar landscape setting across different devices.",
        "Because screen space is a relatively scarce resource on PDAs, pTHINC runs in fullscreen mode to maximize the screen area available to display the web session.",
        "To be able to use all of the screen on the PDA and still allow the user to control and interact with it, pTHINC reuses the typical shortcut buttons found on PDAs to perform all the control functions available to the user.",
        "The buttons used by pTHINC do not require any OS environment changes; they are simply intercepted by the pTHINC client application when they are pressed.",
        "Figure 1 shows how pTHINC utilizes the shortcut buttons to provide easy navigation and improve the overall user experience.",
        "These buttons are not device specific, and the layout shown is common to widelyused PocketPC devices. pTHINC provides six shortcuts to support its usage model: • Rotate Screen: The record button on the left edge is used to rotate the screen between portrait and landscape mode each time the button is pressed. • Zoom Out: The leftmost button on the bottom front is used to zoom out the display of the web session providing a birds eye view of the web session. • Zoom In: The second leftmost button on the bottom front is used to zoom in the display of the web session to more clearly view content of interest. • Directional Scroll: The middle button on the bottom front is used to scroll around the display using a single control button in a way that is already familiar to PDA users.",
        "This feature is particularly useful when the user has zoomed in to a region of the display such that only part of the display is visible on the screen. • Show/Hide Keyboard: The second rightmost button on the bottom front is used to bring up a virtual keyboard drawn on the screen for devices which have no physical keyboard.",
        "The virtual keyboard uses standard PDA OS mechanisms, providing portability across different PDA environments. • Close Session: The rightmost button on the bottom front is used to disconnect from the pTHINC session. pTHINC uses the PDA touch screen, stylus, and standard user interface mechanisms to provide a user interface pointand-click metaphor similar to that provided by the mouse in a traditional desktop computing environment. pTHINC does not use a cursor since PDA environments do not provide one.",
        "Instead, a user can use the stylus to tap on different sections of the touch screen to indicate input focus.",
        "A single tap on the touch screen generates a corresponding single click mouse event.",
        "A double tap on the touch screen generates a corresponding double click mouse event. pTHINC provides two-button mouse emulation by using the stylus to press down on the screen for one second to generate a right mouse click.",
        "All of these actions are identical to the way users already interact with PDA applications in the common PocketPC environment.",
        "In web browsing, users can click on hyperlinks and focus on input boxes by simply tapping on the desired screen area of interest.",
        "Unlike local PDA web browsers and other PDA applications, pTHINC leverages more powerful desktop user interface metaphors to enable users to manipulate multiple open application windows instead of being limited to a single application window at any given moment.",
        "This provides increased browsing flexibility beyond what is currently available on PDA devices.",
        "Similar to a desktop environment, browser windows and other application windows can be moved around by pressing down and dragging the stylus similar to a mouse. 3.",
        "PTHINC SYSTEM ARCHITECTURE pTHINC builds on the THINC [1] remote display architecture to provide a thin-client system for PDAs. pTHINC virtualizes the display at the server by leveraging the video device abstraction layer, which sits below the window server and above the framebuffer.",
        "This is a well-defined, low-level, device-dependent layer that exposes the video hardware to the display system. pTHINC accomplishes this through a simple virtual display driver that intercepts drawing commands, packetizes, and sends them over the network. 145 While other thin-client approaches intercept display commands at other layers of the display subsystem, pTHINCs display virtualization approach provides some key benefits in efficiently supporting PDA clients.",
        "For example, intercepting display commands at a higher layer between applications and the window system as is done by X [17] requires replicating and running a great deal of functionality on the PDA that is traditionally provided by the desktop window system.",
        "Given both the size and complexity of traditional window systems, attempting to replicate this functionality in the restricted PDA environment would have proven to be a daunting, and perhaps unfeasible task.",
        "Furthermore, applications and the window system often require tight synchronization in their operation and imposing a wireless network between them by running the applications on the server and the window system on the client would significantly degrade performance.",
        "On the other hand, intercepting at a lower layer by extracting pixels out of the framebuffer as they are rendered provides a simple solution that requires very little functionality on the PDA client, but can also result in degraded performance.",
        "The reason is that by the time the remote display server attempts to send screen updates, it has lost all semantic information that may have helped it encode efficiently, and it must resort to using a generic and expensive encoding mechanism on the server, as well as a potentially expensive decoding mechanism on the limited PDA client.",
        "In contrast to both the high and low level interception approaches, pTHINCs approach of intercepting at the device driver provides an effective balance between client and server simplicity, and the ability to efficiently encode and decode screen updates.",
        "By using a low-level virtual display approach, pTHINC can efficiently encode application display commands using only a small set of low-level commands.",
        "In a PDA environment, this set of commands provides a crucial component in maintaining the simplicity of the client in the resourceconstrained PDA environment.",
        "The display commands are shown in Table 1, and work as follows.",
        "COPY instructs the client to copy a region of the screen from its local framebuffer to another location.",
        "This command improves the user experience by accelerating scrolling and opaque window movement without having to resend screen data from the server.",
        "SFILL, PFILL, and BITMAP are commands that paint a fixed-size region on the screen.",
        "They are useful for accelerating the display of solid window backgrounds, desktop patterns, backgrounds of web pages, text drawing, and certain operations in graphics manipulation programs.",
        "SFILL fills a sizable region on the screen with a single color.",
        "PFILL replicates a tile over a screen region.",
        "BITMAP performs a fill using a bitmap of ones and zeros as a stipple to apply a foreground and background color.",
        "Finally, RAW is used to transmit unencoded pixel data to be displayed verbatim on a region of the screen.",
        "This command is invoked as a last resort if the server is unable to employ any other command, and it is the only command that may be compressed to mitigate its impact on network bandwidth. pTHINC delivers its commands using a non-blocking, serverpush update mechanism, where as soon as display updates are generated on the server, they are sent to the client.",
        "Clients are not required to explicitly request display updates, thus minimizing the impact that the typical varying network latency of wireless links may have on the responsiveness of the system.",
        "Keeping in mind that resource Command Description COPY Copy a frame buffer area to specified coordinates SFILL Fill an area with a given pixel color value PFILL Tile an area with a given pixel pattern BITMAP Fill a region using a bit pattern RAW Display raw pixel data at a given location Table 1: pTHINC Protocol Display Commands constrained PDAs and wireless networks may not be able to keep up with a fast server generating a large number of updates, pTHINC is able to coalesce, clip, and discard updates automatically if network loss or congestion occurs, or the client cannot keep up with the rate of updates.",
        "This type of behavior proves crucial in a web browsing environment, where for example, a page may be redrawn multiple times as it is rendered on the fly by the browser.",
        "In this case, the PDA will only receive and render the final result, which clearly is all the user is interesting in seeing. pTHINC prioritizes the delivery of updates to the PDA using a Shortest-Remaining-Size-First (SRSF) preemptive update scheduler.",
        "SRSF is analogous to Shortest-RemainingProcessing-Time scheduling, which is known to be optimal for minimizing mean response time in an interactive system.",
        "In a web browsing environment, short jobs are associated with text and basic page layout components such as the pages background, which are critical web content for the user.",
        "On the other hand, large jobs are often lower priority beautifying elements, or, even worse, web page banners and advertisements, which are of questionable value to the user as he or she is browsing the page.",
        "Using SRSF, pTHINC is able to maximize the utilization of the relatively scarce bandwidth available on the wireless connection between the PDA and the server. 3.1 Display Management To enable users to just as easily access their web browser and helper applications from a desktop computer at home as from a PDA while on the road, pTHINC provides a resize mechanism to zoom in and out of the display of a web session. pTHINC resizing is completely supported by the server, not the client.",
        "The server resamples updates to fit within the PDAs viewport before they are transmitted over the network. pTHINC uses Fants resampling algorithm to resize pixel updates.",
        "This provides smooth, visually pleasing updates with properly antialiasing and has only modest computational requirements. pTHINCs resizing approach has a number of advantages.",
        "First, it allows the PDA to leverage the vastly superior computational power of the server to use high quality resampling algorithms and produce higher quality updates for the PDA to display.",
        "Second, resizing the screen does not translate into additional resource requirements for the PDA, since it does not need to perform any additional work.",
        "Finally, better utilization of the wireless network is attained since rescaling the updates reduces their bandwidth requirements.",
        "To enable users to orient their displays on a PDA to provide a viewing experience that best accommodates user preferences and the layout of web pages or applications, pTHINC provides a display rotation mechanism to switch between landscape and portrait viewing modes. pTHINC display rotation is completely supported by the client, not the server. pTHINC does not explicitly recalculate the ge146 ometry of display updates to perform rotation, which would be computationally expensive.",
        "Instead, pTHINC simply changes the way data is copied into the framebuffer to switch between display modes.",
        "When in portrait mode, data is copied along the rows of the framebuffer from left to right.",
        "When in landscape mode, data is copied along the columns of the framebuffer from top to bottom.",
        "These very fast and simple techniques replace one set of copy operations with another and impose no performance overhead. pTHINC provides its own rotation mechanism to support a wide range of devices without imposing additional feature requirements on the PDA.",
        "Although some newer PDA devices provide native support for different orientations, this mechanism is not dynamic and requires the user to rotate the PDAs entire user interface before starting the pTHINC client.",
        "Windows Mobile provides native API mechanisms for PDA applications to rotate their UI on the fly, but these mechanisms deliver poor performance and display quality as the rotation is performed naively and is not completely accurate. 3.2 Video Playback Video has gradually become an integral part of the World Wide Web, and its presence will only continue to increase.",
        "Web sites today not only use animated graphics and flash to deliver web content in an attractive manner, but also utilize streaming video to enrich the web interface.",
        "Users are able to view pre-recorded and live newscasts on CNN, watch sports highlights on ESPN, and even search through large collection of videos on Google Video.",
        "To allow applications to provide efficient video playback, interfaces have been created in display systems that allow video device drivers to expose their hardware capabilities back to the applications. pTHINC takes advantage of these interfaces and its virtual device driver approach to provide a virtual bridge between the remote client and its hardware and the applications, and transparently support video playback.",
        "On top of this architecture, pTHINC uses the YUV colorspace to encode the video content, which provides a number of benefits.",
        "First, it has become increasingly common for PDA video hardware to natively support YUV and be able to perform the colorspace conversion and scaling automatically.",
        "As a result, pTHINC is able to provide fullscreen video playback without any performance hits.",
        "Second, the use of YUV allows for a more efficient representation of RGB data without loss of quality, by taking advantage of the human eyes ability to better distinguish differences in brightness than in color.",
        "In particular, pTHINC uses the YV12 format, which allows full color RGB data to be encoded using just 12 bits per pixel.",
        "Third, YUV data is produced as one of the last steps of the decoding process of most video codecs, allowing pTHINC to provide video playback in a manner that is format independent.",
        "Finally, even if the PDAs video hardware is unable to accelerate playback, the colorspace conversion process is simple enough that it does not impose unreasonable requirements on the PDA.",
        "A more concrete example of how pTHINC leverages the PDA video hardware to support video playback can be seen in our prototype implementation on the popular Dell Axim X51v PDA, which is equipped with the Intel 2700G multimedia accelerator.",
        "In this case, pTHINC creates an offscreen buffer in video memory and writes and reads from this memory region data on the YV12 format.",
        "When a new video frame arrives, video data is copied from the buffer to Figure 2: Experimental Testbed an overlay surface in video memory, which is independent of the normal surface used for traditional drawing.",
        "As the YV12 data is put onto the overlay, the Intel accelerator automatically performs both colorspace conversion and scaling.",
        "By using the overlay surface, pTHINC has no need to redraw the screen once video playback is over since the overlapped surface is unaffected.",
        "In addition, specific overlay regions can be manipulated by leveraging the video hardware, for example to perform hardware linear interpolation to smooth out the frame and display it fullscreen, and to do automatic rotation when the client runs in landscape mode. 4.",
        "EXPERIMENTAL RESULTS We have implemented a pTHINC prototype that runs the client on widely-used Windows Mobile-based Pocket PC devices and the server on both Windows and Linux operating systems.",
        "To demonstrate its effectiveness in supporting mobile wireless web applications, we have measured its performance on web applications.",
        "We present experimental results on different PDA devices for two popular web applications, browsing web pages and playing video content from the web.",
        "We compared pTHINC against native web applications running locally on the PDA to demonstrate the improvement that pTHINC can provide over the traditional fat-client approach.",
        "We also compared pTHINC against three of the most widely used thin clients that can run on PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] and VNC (Virtual Network Computing) [16].",
        "We follow common practice and refer to Citrix MetaFrameXP and Microsoft Remote Desktop by their respective remote display protocols, ICA (Independent Computing Architecture) and RDP (Remote Desktop Protocol). 4.1 Experimental Testbed We conducted our web experiments using two different wireless Pocket PC PDAs in an isolated Wi-Fi network testbed, as shown in Figure 2.",
        "The testbed consisted of two PDA client devices, a packet monitor, a thin-client server, and a web server.",
        "Except for the PDAs, all of the other machines were IBM Netfinity 4500R servers with dual 933 MHz Intel PIII CPUs and 512 MB RAM and were connected on a switched 100 Mbps FastEthernet network.",
        "The web server used was Apache 1.3.27, the network emulator was NISTNet 2.0.12, and the packet monitor was Ethereal 0.10.9.",
        "The PDA clients connected to the testbed through a 802.11b Lucent Orinoco AP-2000 wireless access point.",
        "All experiments using the wireless network were conducted within ten feet of the access point, so we considered the amount of packet loss to be negligible in our experiments.",
        "Two Pocket PC PDAs were used to provide results across both older, less powerful models and newer higher performance models.",
        "The older model was a Dell Axim X5 with 147 Client 1024×768 640×480 Depth Resize Clip RDP no yes 8-bit no yes VNC yes yes 16-bit no no ICA yes yes 16-bit yes no pTHINC yes yes 24-bit yes no Table 2: Thin-client Testbed Configuration Setting a 400 MHz Intel XScale PXA255 CPU and 64 MB RAM running Windows Mobile 2003 and a Dell TrueMobile 1180 2.4Ghz CompactFlash card for wireless networking.",
        "The newer model was a Dell Axim X51v with a 624 MHz Intel XScale XPA270 CPU and 64 MB RAM running Windows Mobile 5.0 and integrated 802.11b wireless networking.",
        "The X51v has an Intel 2700G multimedia accelerator with 16MB video memory.",
        "Both PDAs are capable of 16-bit color but have different screen sizes and display resolutions.",
        "The X5 has a 3.5 inch diagonal screen with 240×320 resolution.",
        "The X51v has a 3.7 inch diagonal screen with 480×640.",
        "The four thin clients that we used support different levels of display quality as summarized in Table 2.",
        "The RDP client only supports a fixed 640×480 display resolution on the server with 8-bit color depth, while other platforms provide higher levels of display quality.",
        "To provide a fair comparison across all platforms, we conducted our experiments with thin-client sessions configured for two possible resolutions, 1024×768 and 640×480.",
        "Both ICA and VNC were configured to use the native PDA resolution of 16-bit color depth.",
        "The current pTHINC prototype uses 24-bit color directly and the client downsamples updates to the 16-bit color depth available on the PDA.",
        "RDP was configured using only 8-bit color depth since it does not support any better color depth.",
        "Since both pTHINC and ICA provide the ability to view the display resized to fit the screen, we measured both clients with and without the display resized to fit the PDA screen.",
        "Each thin client was tested using landscape rather than portrait mode when available.",
        "All systems run on the X51v could run in landscape mode because the hardware provides a landscape mode feature.",
        "However, the X5 does not provide this functionality.",
        "Only pTHINC directly supports landscape mode, so it was the only system that could run in landscape mode on both the X5 and X51v.",
        "To provide a fair comparison, we also standardized on common hardware and operating systems whenever possible.",
        "All of the systems used the Netfinity server as the thin-client server.",
        "For the two systems designed for Windows servers, ICA and RDP, we ran Windows 2003 Server on the server.",
        "For the other systems which support X-based servers, VNC and pTHINC, we ran the Debian Linux Unstable distribution with the Linux 2.6.10 kernel on the server.",
        "We used the latest thin-client server versions available on each platform at the time of our experiments, namely Citrix MetaFrame XP Server for Windows Feature Release 3, Microsoft Remote Desktop built into Windows XP and Windows 2003 using RDP 5.2, and VNC 4.0. 4.2 Application Benchmarks We used two web application benchmarks for our experiments based on two common application scenarios, browsing web pages and playing video content from the web.",
        "Since many thin-client systems including two of the ones tested are closed and proprietary, we measured their performance in a noninvasive manner by capturing network traffic with a packet monitor and using a variant of slow-motion benchmarking [13] previously developed to measure thin-client performance in PDA environments [10].",
        "This measurement methodology accounts for both the display decoupling that can occur between client and server in thin-client systems as well as client processing time, which may be significant in the case of PDAs.",
        "To measure web browsing performance, we used a web browsing benchmark based on the Web Text Page Load Test from the Ziff-Davis i-Bench benchmark suite [7].",
        "The benchmark consists of JavaScript controlled load of 55 pages from the web server.",
        "The pages contain both text and graphics with pages varying in size.",
        "The graphics are embedded images in GIF and JPEG formats.",
        "The original i-Bench benchmark was modified for slow-motion benchmarking by introducing delays of several seconds between the pages using JavaScript.",
        "Then two tests were run, one where delays where added between each page, and one where pages where loaded continuously without waiting for them to be displayed on the client.",
        "In the first test, delays were sufficiently adjusted in each case to ensure that each page could be received and displayed on the client completely without temporal overlap in transferring the data belonging to two consecutive pages.",
        "We used the packet monitor to record the packet traffic for each run of the benchmark, then used the timestamps of the first and last packet in the trace to obtain our latency measures [10].",
        "The packet monitor also recorded the amount of data transmitted between the client and the server.",
        "The ratio between the data traffic in the two tests yields a scale factor.",
        "This scale factor shows the loss of data between the server and the client due to inability of the client to process the data quickly enough.",
        "The product of the scale factor with the latency measurement produces the true latency accounting for client processing time.",
        "To run the web browsing benchmark, we used Mozilla Firefox 1.0.4 running on the thin-client server for the thin clients, and Windows Internet Explorer (IE) Mobile for 2003 and Mobile for 5.0 for the native browsers on the X5 and X51v PDAs, respectively.",
        "In all cases, the web browser used was sized to fill the entire display region available.",
        "To measure video playback performance, we used a video benchmark that consisted of playing a 34.75s MPEG-1 video clip containing a mix of news and entertainment programming at full-screen resolution.",
        "The video clip is 5.11 MB and consists of 834 352x240 pixel frames with an ideal frame rate of 24 frames/sec.",
        "We measured video performance using slow-motion benchmarking by monitoring resulting packet traffic at two playback rates, 1 frames/second (fps) and 24 fps, and comparing the results to determine playback delays and frame drops that occur at 24 fps to measure overall video quality [13].",
        "For example, 100% quality means that all video frames were played at real-time speed.",
        "On the other hand, 50% quality could mean that half the video data was dropped, or that the clip took twice as long to play even though all of the video data was displayed.",
        "To run the video benchmark, we used Windows Media Player 9 for Windows-based thin-client servers, MPlayer 1.0 pre 6 for X-based thin-client servers, and Windows Media Player 9 Mobile and 10 Mobile for the native video players running locally on the X5 and X51v PDAs, respectively.",
        "In all cases, the video player used was sized to fill the entire display region available. 4.3 Measurements Figures 3 and 4 show the results of running the web brows148 0 1 10 100 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL Latency(s) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 3: Browsing Benchmark: Average Page Latency ing benchmark.",
        "For each platform, we show results for up to four different configurations, two on the X5 and two on the X51v, depending on whether each configuration was supported.",
        "However, not all platforms could support all configurations.",
        "The local browser only runs at the display resolution of the PDA, 480×680 or less for the X51v and the X5.",
        "RDP only runs at 640×480.",
        "Neither platform could support 1024×768 display resolution.",
        "ICA only ran on the X5 and could not run on the X51v because it did not work on Windows Mobile 5.",
        "Figure 3 shows the average latency per web page for each platform. pTHINC provides the lowest average web browsing latency on both PDAs.",
        "On the X5, pTHINC performs up to 70 times better than other thin-client systems and 8 times better than the local browser.",
        "On the X51v, pTHINC performs up to 80 times better than other thin-client systems and 7 times better than the native browser.",
        "In fact, all of the thin clients except VNC outperform the local PDA browser, demonstrating the performance benefits of the thin-client approach.",
        "Usability studies have shown that web pages should take less than one second to download for the user to experience an uninterrupted web browsing experience [14].",
        "The measurements show that only the thin clients deliver subsecond web page latencies.",
        "In contrast, the local browser requires more than 3 seconds on average per web page.",
        "The local browser performs worse since it needs to run a more limited web browser to process the HTML, JavaScript, and do all the rendering using the limited capabilities of the PDA.",
        "The thin clients can take advantage of faster server hardware and a highly tuned web browser to process the web content much faster.",
        "Figure 3 shows that RDP is the next fastest platform after pTHINC.",
        "However, RDP is only able to run at a fixed resolution of 640×480 and 8-bit color depth.",
        "Furthermore, RDP also clips the display to the size of the PDA screen so that it does not need to send updates that are not visible on the PDA screen.",
        "This provides a performance benefit assuming the remaining web content is not viewed, but degrades performance when a user scrolls around the display to view other web content.",
        "RDP achieves its performance with significantly lower display quality compared to the other thin clients and with additional display clipping not used by other systems.",
        "As a result, RDP performance alone does not provide a complete comparison with the other platforms.",
        "In contrast, pTHINC provides the fastest performance while at the same time providing equal or better display quality than the other systems. 0 1 10 100 1000 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL DataSize(KB) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 4: Browsing Benchmark: Average Page Data Transferred Since VNC and ICA provide similar display quality to pTHINC, these systems provide a more fair comparison of different thin-client approaches.",
        "ICA performs worse in part because it uses higher-level display primitives that require additional client processing costs.",
        "VNC performs worse in part because it loses display data due to its client-pull delivery mechanism and because of the client processing costs in decompressing raw pixel primitives.",
        "In both cases, their performance was limited in part because their PDA clients were unable to keep up with the rate at which web pages were being displayed.",
        "Figure 3 also shows measurements for those thin clients that support resizing the display to fit the PDA screen, namely ICA and pTHINC.",
        "Resizing requires additional processing, which results in slower average web page latencies.",
        "The measurements show that the additional delay incurred by ICA when resizing versus not resizing is much more substantial than for pTHINC.",
        "ICA performs resizing on the slower PDA client.",
        "In contrast, pTHINC leverage the more powerful server to do resizing, reducing the performance difference between resizing and not resizing.",
        "Unlike ICA, pTHINC is able to provide subsecond web page download latencies in both cases.",
        "Figure 4 shows the data transferred in KB per page when running the slow-motion version of the tests.",
        "All of the platforms have modest data transfer requirements of roughly 100 KB per page or less.",
        "This is well within the bandwidth capacity of Wi-Fi networks.",
        "The measurements show that the local browser does not transfer the least amount of data.",
        "This is surprising as HTML is often considered to be a very compact representation of content.",
        "Instead, RDP is the most bandwidth efficient platform, largely as a result of using only 8-bit color depth and screen clipping so that it does not transfer the entire web page to the client. pTHINC overall has the largest data requirements, slightly more than VNC.",
        "This is largely a result of the current pTHINC prototypes lack of native support for 16-bit color data in the wire protocol.",
        "However, this result also highlights pTHINCs performance as it is faster than all other systems even while transferring more data.",
        "Furthermore, as newer PDA models support full 24-bit color, these results indicate that pTHINC will continue to provide good web browsing performance.",
        "Since display usability and quality are as important as performance, Figures 5 to 8 compare screenshots of the different thin clients when displaying a web page, in this case from the popular BBC news website.",
        "Except for ICA, all of the screenshots were taken on the X51v in landscape mode 149 Figure 5: Browser Screenshot: RDP 640x480 Figure 6: Browser Screenshot: VNC 1024x768 Figure 7: Browser Screenshot: ICA Resized 1024x768 Figure 8: Browser Screenshot: pTHINC Resized 1024x768 using the maximum display resolution settings for each platform given in Table 2.",
        "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
        "While the screenshots lack the visual fidelity of the actual device display, several observations can be made.",
        "Figure 5 shows that RDP does not support fullscreen mode and wastes lots of screen space for controls and UI elements, requiring the user to scroll around in order to access the full contents of the web browsing session.",
        "Figure 6 shows that VNC makes better use of the screen space and provides better display quality, but still forces the user to scroll around to view the web page due to its lack of resizing support.",
        "Figure 7 shows ICAs ability to display the full web page given its resizing support, but that its lack of landscape capability and poorer resize algorithm significantly compromise display quality.",
        "In contrast, Figure 8 shows pTHINC using resizing to provide a high quality fullscreen display of the full width of the web page. pTHINC maximizes the entire viewing region by moving all controls to the PDA buttons.",
        "In addition, pTHINC leverages the server computational power to use a high quality resizing algorithm to resize the display to fit the PDA screen without significant overhead.",
        "Figures 9 and 10 show the results of running the video playback benchmark.",
        "For each platform except ICA, we show results for an X5 and X51v configuration.",
        "ICA could not run on the X51v as noted earlier.",
        "The measurements were done using settings that reflected the environment a user would have to access a web session from both a desktop computer and a PDA.",
        "As such, a 1024×768 server display resolution was used whenever possible and the video was shown at fullscreen.",
        "RDP was limited to 640×480 display resolution as noted earlier.",
        "Since viewing the entire video display is the only really usable option, we resized the display to fit the PDA screen for those platforms that supported this feature, namely ICA and pTHINC.",
        "Figure 9 shows the video quality for each platform. pTHINC is the only thin client able to provide perfect video playback quality, similar to the native PDA video player.",
        "All of the other thin clients deliver very poor video quality.",
        "With the exception of RDP on the X51v which provided unacceptable 35% video quality, none of the other systems were even able to achieve 10% video quality.",
        "VNC and ICA have the worst quality at 8% on the X5 device. pTHINCs native video support enables superior video performance, while other thin clients suffer from their inability to distinguish video from normal display updates.",
        "They attempt to apply ineffective and expensive compression algorithms on the video data and are unable to keep up with the stream of updates generated, resulting in dropped frames or long playback times.",
        "VNC suffers further from its client-pull update model because video frames are generated faster than the rate at which the client can process and send requests to the server to obtain the next display update.",
        "Figure 10 shows the total data transferred during 150 0% 20% 40% 60% 80% 100% pTHINCICAVNCRDPLOCAL VideoQuality Platform Axim X5 Axim X51v Figure 9: Video Benchmark: Fullscreen Video Quality 0 1 10 100 pTHINCICAVNCRDPLOCAL VideoDataSize(MB) Platform Axim X5 Axim X51v Figure 10: Video Benchmark: Fullscreen Video Data video playback for each system.",
        "The native player is the most bandwidth efficient platform, sending less than 6 MB of data, which corresponds to about 1.2 Mbps of bandwidth. pTHINCs 100% video quality requires about 25 MB of data which corresponds to a bandwidth usage of less than 6 Mbps.",
        "While the other thin clients send less data than THINC, they do so because they are dropping video data, resulting in degraded video quality.",
        "Figures 11 to 14 compare screenshots of the different thin clients when displaying the video clip.",
        "Except for ICA, all of the screenshots were taken on the X51v in landscape mode using the maximum display resolution settings for each platform given in Table 2.",
        "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
        "Figures 11 and 12 show that RDP and VNC are unable to display the entire video frame on the PDA screen.",
        "RDP wastes screen space for UI elements and VNC only shows the top corner of the video frame on the screen.",
        "Figure 13 shows that ICA provides resizing to display the entire video frame, but did not proportionally resize the video data, resulting in strange display artifacts.",
        "In contrast, Figure 14 shows pTHINC using resizing to provide a high quality fullscreen display of the entire video frame. pTHINC provides visually more appealing video display than RDP, VNC, or ICA. 5.",
        "RELATED WORK Several studies have examined the web browsing performance of thin-client computing [13, 19, 10].",
        "The ability for thin clients to improve web browsing performance on wireless PDAs was first quantitatively demonstrated in a previous study by one of the authors [10].",
        "This study demonstrated that thin clients can provide both faster web browsing performance and greater web browsing functionality.",
        "The study considered a wide range of web content including content from medical information systems.",
        "Our work builds on this previous study and consider important issues such as how usable existing thin clients are in PDA environments, the trade-offs between thin-client usability and performance, performance across different PDA devices, and the performance of thin clients on common web-related applications such as video.",
        "Many thin clients have been developed and some have PDA clients, including Microsofts Remote Desktop [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5], and Tarantella [18].",
        "These systems were first designed for desktop computing and retrofitted for PDAs.",
        "Unlike pTHINC, they do not address key system architecture and usability issues important for PDAs.",
        "This limits their display quality, system performance, available screen space, and overall usability on PDAs. pTHINC builds on previous work by two of the authors on THINC [1], extending the server architecture and introducing a client interface and usage model to efficiently support PDA devices for mobile web applications.",
        "Other approaches to improve the performance of mobile wireless web browsing have focused on using transcoding and caching proxies in conjunction with the fat client model [11, 9, 4, 8].",
        "They work by pushing functionality to external proxies, and using specialized browsing applications on the PDA device that communicate with the proxy.",
        "Our thinclient approach differs fundamentally from these fat-client approaches by pushing all web browser logic to the server, leveraging existing investments in desktop web browsers and helper applications to work seamlessly with production systems without any additional proxy configuration or web browser modifications.",
        "With the emergence of web browsing on small display devices, web sites have been redesigned using mechanisms like WAP and specialized native web browsers have been developed to tailor the needs of these devices.",
        "Recently, Opera has developed the Opera Mini [15] web browser, which uses an approach similar to the thin-client model to provide access across a number of mobile devices that would normally be incapable of running a web browser.",
        "Instead of requiring the device to process web pages, it uses a remote server to pre-process the page before sending it to the phone. 6.",
        "CONCLUSIONS We have introduced pTHINC, a thin-client architecture for wireless PDAs. pTHINC provides key architectural and usability mechanisms such as server-side screen resizing, clientside screen rotation using simple copy techniques, YUV video support, and maximizing screen space for display updates and leveraging existing PDA control buttons for UI elements. pTHINC transparently supports traditional desktop browsers and their helper applications on PDA devices and desktop machines, providing mobile users with ubiquitous access to a consistent, personalized, and full-featured web environment across heterogeneous devices.",
        "We have implemented pTHINC and measured its performance on web applications compared to existing thin-client systems and native web applications.",
        "Our results on multiple mobile wireless devices demonstrate that pTHINC delivers web browsing performance up to 80 times better than existing thin-client systems, and 8 times better than a native PDA browser.",
        "In addition, pTHINC is the only PDA thin client 151 Figure 11: Video Screenshot: RDP 640x480 Figure 12: Video Screenshot: VNC 1024x768 Figure 13: Video Screenshot: ICA Resized 1024x768 Figure 14: Video Screenshot: pTHINC Resized 1024x768 that transparently provides full-screen, full frame rate video playback, making web sites with multimedia content accessible to mobile web users. 7.",
        "ACKNOWLEDGEMENTS This work was supported in part by NSF ITR grants CCR0219943 and CNS-0426623, and an IBM SUR Award. 8.",
        "REFERENCES [1] R. Baratto, L. Kim, and J. Nieh.",
        "THINC: A Virtual Display Architecture for Thin-Client Computing.",
        "In Proceedings of the 20th ACM Symposium on Operating Systems Principles (SOSP), Oct. 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius, and A. Muir.",
        "Microsoft Windows NT Server 4.0, Terminal Server Edition: Technical Reference.",
        "Microsoft Press, Redmond, WA, 1999. [4] A.",
        "Fox, I. Goldberg, S. D. Gribble, and D. C. Lee.",
        "Experience With Top Gun Wingman: A Proxy-Based Graphical Web Browser for the 3Com PalmPilot.",
        "In Proceedings of Middleware 98, Lake District, England, September 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Health Insurance Portability and Accountability Act. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench version 1.5. http: //etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi.",
        "On proxy agents, mobility, and web access.",
        "Mobile Networks and Applications, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon, and A. Ortega.",
        "Design and Implementation of a Soft Caching Proxy.",
        "Computer Networks and ISDN Systems, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana, and S. Varshneya.",
        "Improving Web Browsing on Wireless PDAs Using Thin-Client Computing.",
        "In Proceedings of the 13th International World Wide Web Conference (WWW), May 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham, and P. Shenoy.",
        "TranSquid: Transcoding and caching proxy for heterogenous ecommerce environments.",
        "In Proceedings of the 12th IEEE Workshop on Research Issues in Data Engineering (RIDE 02), Feb. 2002. [12] .NET VNC Viewer for PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang, and N. Novik.",
        "Measuring Thin-Client Performance Using Slow-Motion Benchmarking.",
        "ACM Trans.",
        "Computer Systems, 21(1):87-115, Feb. 2003. [14] J. Nielsen.",
        "Designing Web Usability.",
        "New Riders Publishing, Indianapolis, IN, 2000. [15] Opera Mini Browser. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood, and A. Hopper.",
        "Virtual Network Computing.",
        "IEEE Internet Computing, 2(1), Jan./Feb. 1998. [17] R. W. Scheifler and J. Gettys.",
        "The X Window System.",
        "ACM Trans.",
        "Gr., 5(2):79-106, Apr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla, and M. Sajjadpour.",
        "Web Browsing Performance of Wireless Thin-Client Computing.",
        "In Proceedings of the 12th International World Wide Web Conference (WWW), May 2003. 152"
    ],
    "translated_text_sentences": [
        "pTHINC: Una arquitectura de cliente ligero para la web inalámbrica móvil Joeng Kim, Ricardo A. Baratto y Jason Nieh Departamento de Ciencias de la Computación Universidad de Columbia, Nueva York, NY, EE. UU. {jk2438, ricardo, nieh}@cs.columbia.edu RESUMEN Aunque las aplicaciones web están ganando popularidad en las PDAs inalámbricas móviles, los navegadores web en estos sistemas pueden ser bastante lentos y a menudo carecen de funcionalidad adecuada para acceder a muchos sitios web.",
        "Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y movilidad fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la resolución de pantalla disponible para la visualización de aplicaciones.",
        "Hemos implementado pTHINC en Windows Mobile y evaluado su rendimiento en dispositivos móviles inalámbricos.",
        "Nuestros resultados comparados con los navegadores web PDA locales y otros enfoques de cliente ligero demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero PDA que soporta de manera efectiva aplicaciones de ayuda del navegador cruciales como la reproducción de video.",
        "Categorías y Descriptores de Asunto: C.2.4 Comunicación de Computadoras-Redes: Sistemas Distribuidos - cliente/servidor Términos Generales: Diseño, Experimentación, Rendimiento 1.",
        "La creciente ubicuidad de las redes inalámbricas y la disminución del costo del hardware están impulsando una proliferación de dispositivos móviles inalámbricos portátiles, tanto como asistentes digitales personales (PDA) inalámbricos independientes y dispositivos populares integrados de PDA/teléfono celular.",
        "Estos dispositivos están permitiendo nuevas formas de computación y comunicación móvil.",
        "Los proveedores de servicios están aprovechando estos dispositivos para ofrecer acceso web omnipresente, y los usuarios de la web móvil a menudo ya utilizan estos dispositivos para acceder a información habilitada para la web, como noticias, correo electrónico, guías de viaje localizadas y mapas.",
        "Es probable que en unos pocos años, la mayoría de los dispositivos que accedan a la web sean móviles.",
        "Los usuarios suelen acceder al contenido web ejecutando un navegador web y aplicaciones auxiliares asociadas localmente en la PDA.",
        "Aunque existen navegadores web nativos para PDAs, ofrecen un rendimiento deficiente y tienen un conjunto de funciones mucho más pequeño y una funcionalidad más limitada que sus contrapartes de computadoras de escritorio [10].",
        "Como resultado, los navegadores web de PDA a menudo no pueden mostrar el contenido web de sitios web que utilizan tecnologías web más avanzadas para ofrecer una experiencia web más rica.",
        "Este problema fundamental surge por dos razones.",
        "Primero, debido a que las PDAs tienen un entorno de hardware/software completamente diferente de las computadoras de escritorio tradicionales, las aplicaciones web necesitan ser reescritas y personalizadas para las PDAs si es posible, duplicando los costos de desarrollo.",
        "Debido a que el mercado de aplicaciones de escritorio es más grande y maduro, la mayoría del esfuerzo de desarrollo generalmente se destina a las aplicaciones de escritorio, lo que resulta en una mayor funcionalidad y rendimiento que sus contrapartes de PDA.",
        "En segundo lugar, las PDAs tienen un entorno con recursos más limitados que las computadoras de escritorio tradicionales para ofrecer un factor de forma más pequeño y una vida útil de la batería más larga.",
        "Los navegadores web de escritorio son aplicaciones grandes y complejas que no pueden ejecutarse en una PDA.",
        "En cambio, los desarrolladores se ven obligados a reducir significativamente estas navegadores web para ofrecer un navegador web PDA utilizable, lo que limita la funcionalidad del navegador PDA.",
        "La computación de cliente ligero proporciona un enfoque alternativo para habilitar el acceso web ubicuo desde dispositivos móviles.",
        "Un sistema informático de cliente ligero consiste en un servidor y un cliente que se comunican a través de una red utilizando un protocolo de visualización remota.",
        "El protocolo permite que las pantallas gráficas se virtualicen y se sirvan a través de una red a un dispositivo cliente, mientras que la lógica de la aplicación se ejecuta en el servidor.",
        "Usando el protocolo de visualización remota, el cliente transmite la entrada del usuario al servidor, y el servidor devuelve actualizaciones de pantalla de las aplicaciones del servidor al cliente.",
        "Utilizando un modelo de cliente ligero para dispositivos móviles de mano, las PDAs pueden convertirse en clientes simples sin estado que aprovechan las capacidades del servidor remoto para ejecutar navegadores web y otras aplicaciones auxiliares.",
        "El modelo de cliente ligero proporciona varios beneficios importantes para la web inalámbrica móvil.",
        "Primero, las aplicaciones web estándar de escritorio pueden utilizarse para entregar contenido web a PDAs sin necesidad de reescribir o adaptar las aplicaciones para ejecutarse en una PDA, lo que reduce los costos de desarrollo y aprovecha las inversiones existentes en software.",
        "Segundo, las aplicaciones web complejas pueden ejecutarse en servidores potentes en lugar de ejecutarse en versiones simplificadas en PDAs con recursos más limitados, lo que proporciona una mayor funcionalidad y un mejor rendimiento [10].",
        "Tercero, las aplicaciones web pueden aprovechar servidores con redes más rápidas y mejor conectividad, lo que mejora aún más el rendimiento de la aplicación.",
        "En cuarto lugar, las PDAs pueden ser dispositivos aún más simples ya que no necesitan realizar una lógica de aplicación compleja, lo que potencialmente reduce el consumo de energía y extiende la vida útil de la batería.",
        "Finalmente, los clientes ligeros PDA pueden ser dispositivos prácticamente sin estado que no necesitan ser respaldados o restaurados, requieren casi ningún mantenimiento o actualizaciones, y no almacenan datos sensibles que puedan perderse o ser robados.",
        "Este modelo proporciona una vía viable para que las organizaciones médicas cumplan con las regulaciones de HIPAA mientras incorporan dispositivos móviles en sus operaciones diarias.",
        "A pesar de estas posibles ventajas, los clientes ligeros no han podido ofrecer la gama completa de estos beneficios al entregar aplicaciones web a dispositivos móviles portátiles.",
        "Los thin clients existentes no fueron diseñados para PDAs y no tienen en cuenta problemas importantes de usabilidad en el contexto de dispositivos de factor de forma pequeño, lo que resulta en dificultades para navegar por el contenido web mostrado.",
        "Además, los clientes ligeros existentes son ineficaces para proporcionar movilidad fluida en la mezcla heterogénea de tamaños de pantalla y resoluciones de dispositivos.",
        "Si bien los clientes ligeros existentes ya pueden ofrecer un rendimiento más rápido que los navegadores web nativos de PDA al entregar contenido web HTML, no admiten de manera efectiva aplicaciones web auxiliares más intensivas en visualización, como videos multimedia, que cada vez son una parte integral del contenido web disponible.",
        "Para aprovechar todo el potencial de la informática de cliente ligero en la provisión de la web inalámbrica móvil en PDAs, hemos desarrollado pTHINC (PDA THin-client InterNet Computing). pTHINC se basa en nuestro trabajo previo en THINC [1] para proporcionar una arquitectura de cliente ligero para dispositivos móviles de mano. pTHINC virtualiza y redimensiona la pantalla en el servidor para entregar de manera eficiente actualizaciones de pantalla de alta fidelidad a una amplia gama de clientes diferentes, tamaños de pantalla y orientaciones de pantalla, incluidos los modos de visualización en vertical y horizontal.",
        "Esto permite a pTHINC proporcionar la misma sesión web persistente en diferentes dispositivos de cliente.",
        "Por ejemplo, pTHINC puede proporcionar la misma sesión de navegación web adecuadamente escalada para su visualización en una computadora de escritorio y una PDA, de modo que las mismas cookies, marcadores y otros metadatos estén disponibles continuamente en ambas máquinas simultáneamente. El enfoque de visualización virtual de pTHINC aprovecha la información semántica disponible en los comandos de visualización y el hardware de video del cliente para proporcionar mecanismos de visualización remota más eficientes que son cruciales para admitir aplicaciones web más intensivas en visualización.",
        "Dada la limitada resolución de pantalla en las PDA, pTHINC maximiza el uso del espacio de pantalla para la visualización remota al trasladar la funcionalidad de control de la pantalla a los botones de control de PDA fácilmente disponibles, mejorando la usabilidad del sistema.",
        "Hemos implementado pTHINC en Windows Mobile y demostrado que funciona de manera transparente con las aplicaciones existentes, sistemas de ventanas y sistemas operativos, y no requiere modificar, recompilar o volver a enlazar el software existente.",
        "Hemos evaluado cuantitativamente pTHINC frente a navegadores web PDA locales y otros enfoques de cliente ligero en dispositivos Pocket PC.",
        "Nuestros resultados experimentales demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero de PDA que soporta de manera efectiva aplicaciones esenciales de ayuda para el navegador, como la reproducción de video.",
        "Este documento presenta el diseño e implementación de pTHINC.",
        "La sección 2 describe el modelo de uso general y las características de usabilidad de pTHINC.",
        "La sección 3 presenta el diseño y la arquitectura del sistema de pTHINC.",
        "La sección 4 presenta resultados experimentales que miden el rendimiento de pTHINC en aplicaciones web y lo comparan con navegadores nativos de PDA y otros sistemas de cliente ligero de PDA populares.",
        "La sección 5 discute el trabajo relacionado.",
        "Finalmente, presentamos algunas observaciones finales.",
        "El MODELO DE USO DE pTHINC pTHINC es un sistema de cliente ligero que consiste en una aplicación de visualización de cliente simple que se ejecuta en la PDA y un servidor que se ejecuta en una PC estándar.",
        "El servidor aprovecha PCs más potentes para ejecutar navegadores web y otra lógica de aplicaciones.",
        "El cliente recibe la entrada del usuario desde el lápiz óptico y el teclado virtual de la PDA y los envía al servidor para pasarlos a las aplicaciones.",
        "Las actualizaciones de la pantalla son luego enviadas desde el servidor al cliente para mostrar al usuario.",
        "Cuando se inicia el cliente PDA pTHINC, se presenta al usuario una interfaz gráfica simple donde se pueden proporcionar información como la dirección y el puerto del servidor, la información de autenticación del usuario y la configuración de la sesión. pTHINC primero intenta conectarse al servidor y realizar el saludo necesario.",
        "Una vez que este proceso haya sido completado, pTHINC presenta al usuario la visualización más reciente de su sesión.",
        "Si la sesión no existe, se crea una nueva sesión.",
        "Las sesiones existentes pueden continuar sin problemas sin cambios en la configuración de la sesión o del servidor.",
        "A diferencia de otros sistemas de cliente ligero, pTHINC proporciona a un usuario un modelo de sesión web persistente en el que un usuario puede iniciar una sesión ejecutando un navegador web y aplicaciones asociadas en el servidor, luego desconectarse de esa sesión y volver a conectarse en cualquier momento.",
        "Cuando un usuario se reconecta a la sesión, todas las aplicaciones siguen funcionando desde donde el usuario las dejó, de modo que el usuario puede seguir trabajando como si nunca se hubiera desconectado.",
        "La capacidad de desconectarse y reconectarse a una sesión en cualquier momento es un beneficio importante para los usuarios de PDA inalámbricas móviles que pueden tener conectividad de red intermitente. El modelo de sesión web persistente de pTHINCs permite a un usuario reconectarse a una sesión web desde dispositivos distintos al que se inició originalmente la sesión web.",
        "Esto proporciona a los usuarios una movilidad fluida entre diferentes dispositivos.",
        "Si un usuario pierde su PDA, puede fácilmente usar otra PDA para acceder a su sesión web.",
        "Además, pTHINC permite a los usuarios utilizar dispositivos que no son PDA para acceder a sesiones web también.",
        "Un usuario puede acceder a la misma sesión web persistente en una PC de escritorio como en una PDA, lo que le permite al usuario utilizar la misma sesión web desde cualquier computadora. El modelo de sesión web persistente de pTHINCs aborda un problema clave encontrado por los usuarios de la web móvil, la falta de un entorno web común en diferentes computadoras.",
        "Los navegadores web a menudo almacenan información importante como marcadores, cookies e historial, lo que les permite funcionar de una manera mucho más útil.",
        "El problema que ocurre cuando un usuario se mueve entre computadoras es que estos datos, específicos de una instalación de un navegador web, no pueden moverse con el usuario.",
        "Además, los navegadores web a menudo necesitan aplicaciones auxiliares para procesar diferentes contenidos multimedia, y esas aplicaciones pueden no estar disponibles de manera consistente en todas las computadoras. pTHINC aborda este problema al permitir que un usuario utilice de forma remota el mismo entorno de navegador web y aplicaciones auxiliares desde cualquier computadora.",
        "Como resultado, pTHINC puede proporcionar un entorno de navegación web común y consistente para usuarios móviles en diferentes dispositivos sin requerirles intentar sincronizar repetidamente diferentes entornos de navegación web en múltiples máquinas.",
        "Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC debe proporcionar mecanismos para admitir diferentes tamaños de pantalla y resoluciones.",
        "Con este fin, pTHINC proporciona una función de zoom que permite a un usuario acercar y alejar una pantalla y permite que la pantalla de una sesión web 144 Figura 1: teclas de acceso rápido de pTHINC se redimensione para adaptarse a la pantalla del dispositivo que se está utilizando.",
        "Por ejemplo, si el servidor está ejecutando una sesión web a 1024×768 pero el cliente es una PDA con una resolución de pantalla de 640×480, pTHINC redimensionará la pantalla del escritorio para que se ajuste a la pantalla más pequeña de la PDA. pTHINC proporciona al usuario de la PDA la opción de aumentar el tamaño de la pantalla haciendo zoom en diferentes partes de la pantalla.",
        "Los usuarios suelen estar familiarizados con el diseño general de los sitios web que visitan con frecuencia, y pueden aprovechar esta función de redimensionamiento para navegar mejor por las páginas web.",
        "Por ejemplo, un usuario puede alejarse de la pantalla para ver todo el contenido de la página y navegar por los hipervínculos, luego acercarse a una región de interés para obtener una mejor vista.",
        "Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC también debe proporcionar mecanismos para admitir diferentes orientaciones de pantalla.",
        "En un entorno de escritorio, los usuarios suelen estar acostumbrados a tener las pantallas presentadas en modo horizontal, donde el ancho de la pantalla es mayor que su altura.",
        "Sin embargo, en un entorno de PDA, la elección no siempre es obvia.",
        "Algunos usuarios pueden preferir tener la pantalla en modo retrato, ya que es más fácil sostener el dispositivo en sus manos, mientras que otros pueden preferir el modo paisaje para minimizar la cantidad de desplazamiento lateral necesario para ver una página web.",
        "Para adaptarse a las preferencias de los usuarios de PDA, pTHINC proporciona una función de orientación que le permite rotar la pantalla de forma fluida entre el modo horizontal y vertical.",
        "El modo de paisaje es particularmente útil para los usuarios de pTHINC que acceden con frecuencia a sus sesiones web tanto en dispositivos de escritorio como en PDA, proporcionando a esos usuarios el mismo ajuste de paisaje familiar en diferentes dispositivos.",
        "Dado que el espacio de pantalla es un recurso relativamente escaso en las PDAs, pTHINC se ejecuta en modo de pantalla completa para maximizar el área de pantalla disponible para mostrar la sesión web.",
        "Para poder utilizar toda la pantalla en la PDA y aún así permitir al usuario controlar e interactuar con ella, pTHINC reutiliza los botones de acceso directo típicos que se encuentran en las PDAs para realizar todas las funciones de control disponibles para el usuario.",
        "Los botones utilizados por pTHINC no requieren ningún cambio en el entorno del sistema operativo; simplemente son interceptados por la aplicación cliente de pTHINC cuando se presionan.",
        "La Figura 1 muestra cómo pTHINC utiliza los botones de acceso directo para proporcionar una navegación sencilla y mejorar la experiencia del usuario en general.",
        "Estos botones no son específicos del dispositivo, y el diseño mostrado es común en dispositivos PocketPC ampliamente utilizados. pTHINC proporciona seis accesos directos para apoyar su modelo de uso: • Rotar pantalla: El botón de grabación en el borde izquierdo se utiliza para rotar la pantalla entre modo retrato y modo paisaje cada vez que se presiona el botón. • Alejar: El botón más a la izquierda en la parte inferior delantera se utiliza para alejar la visualización de la sesión web proporcionando una vista general de la sesión web. • Acercar: El segundo botón más a la izquierda en la parte inferior delantera se utiliza para acercar la visualización de la sesión web para ver más claramente el contenido de interés. • Desplazamiento direccional: El botón central en la parte inferior delantera se utiliza para desplazarse alrededor de la visualización utilizando un solo botón de control de una manera que ya es familiar para los usuarios de PDA.",
        "Esta función es particularmente útil cuando el usuario ha ampliado una región de la pantalla de tal manera que solo una parte de la pantalla es visible en la pantalla. • Mostrar/Ocultar Teclado: El segundo botón más a la derecha en la parte inferior frontal se utiliza para mostrar un teclado virtual dibujado en la pantalla para dispositivos que no tienen teclado físico.",
        "El teclado virtual utiliza mecanismos estándar del sistema operativo de PDA, proporcionando portabilidad entre diferentes entornos de PDA. • Cerrar sesión: El botón más a la derecha en la parte inferior frontal se utiliza para desconectarse de la sesión de pTHINC. pTHINC utiliza la pantalla táctil de la PDA, el lápiz óptico y mecanismos estándar de interfaz de usuario para proporcionar una metáfora de punto y clic de la interfaz de usuario similar a la proporcionada por el ratón en un entorno de computación de escritorio tradicional. pTHINC no utiliza un cursor ya que los entornos de PDA no lo proporcionan.",
        "En cambio, un usuario puede usar el lápiz táctil para tocar diferentes secciones de la pantalla táctil y señalar el enfoque de entrada.",
        "Un toque único en la pantalla táctil genera un evento de clic de ratón correspondiente.",
        "Un doble toque en la pantalla táctil genera un evento de doble clic del ratón correspondiente. pTHINC proporciona emulación de ratón de dos botones al usar el lápiz óptico para presionar la pantalla durante un segundo y generar un clic derecho del ratón.",
        "Todas estas acciones son idénticas a la forma en que los usuarios ya interactúan con las aplicaciones de PDA en el entorno común de PocketPC.",
        "En la navegación web, los usuarios pueden hacer clic en hipervínculos y enfocarse en cuadros de entrada simplemente tocando el área de interés deseada en la pantalla.",
        "A diferencia de los navegadores web PDA locales y otras aplicaciones PDA, pTHINC aprovecha metáforas de interfaz de usuario de escritorio más potentes para permitir a los usuarios manipular múltiples ventanas de aplicación abiertas en lugar de estar limitados a una sola ventana de aplicación en un momento dado.",
        "Esto proporciona una mayor flexibilidad de navegación más allá de lo que está actualmente disponible en los dispositivos PDA.",
        "Similar a un entorno de escritorio, las ventanas del navegador y otras ventanas de aplicaciones pueden ser movidas al presionar y arrastrar el lápiz óptico de manera similar a un ratón. 3.",
        "La arquitectura del sistema pTHINC se basa en la arquitectura de visualización remota THINC para proporcionar un sistema de cliente ligero para PDAs. pTHINC virtualiza la visualización en el servidor aprovechando la capa de abstracción del dispositivo de video, que se encuentra por debajo del servidor de ventanas y por encima del framebuffer.",
        "Este es un nivel de dispositivo bien definido y de bajo nivel que depende del dispositivo y expone el hardware de video al sistema de visualización. pTHINC logra esto a través de un controlador de pantalla virtual simple que intercepta comandos de dibujo, los empaqueta y los envía a través de la red. Mientras que otros enfoques de cliente ligero interceptan comandos de visualización en otras capas del subsistema de visualización, el enfoque de virtualización de pantalla de pTHINC proporciona algunos beneficios clave para admitir eficientemente a los clientes de PDA.",
        "Por ejemplo, interceptar comandos de visualización en una capa superior entre aplicaciones y el sistema de ventanas, como se hace en X [17], requiere replicar y ejecutar una gran cantidad de funcionalidades en la PDA que tradicionalmente son proporcionadas por el sistema de ventanas de escritorio.",
        "Dada la magnitud y complejidad de los sistemas de ventanas tradicionales, intentar replicar esta funcionalidad en el entorno restringido de una PDA habría resultado ser una tarea desafiante, y quizás inviable.",
        "Además, las aplicaciones y el sistema de ventanas a menudo requieren una sincronización precisa en su funcionamiento, y imponer una red inalámbrica entre ellos al ejecutar las aplicaciones en el servidor y el sistema de ventanas en el cliente degradaría significativamente el rendimiento.",
        "Por otro lado, interceptar en una capa inferior extrayendo píxeles del framebuffer a medida que se renderizan proporciona una solución simple que requiere muy poca funcionalidad en el cliente de PDA, pero también puede resultar en un rendimiento degradado.",
        "La razón es que para cuando el servidor de visualización remota intenta enviar actualizaciones de pantalla, ha perdido toda la información semántica que podría haberle ayudado a codificar de manera eficiente, y debe recurrir a utilizar un mecanismo de codificación genérico y costoso en el servidor, así como un mecanismo de decodificación potencialmente costoso en el cliente de PDA limitado.",
        "A diferencia de los enfoques de intercepción de alto y bajo nivel, el enfoque de pTHINCs de interceptar en el controlador del dispositivo proporciona un equilibrio efectivo entre la simplicidad del cliente y del servidor, y la capacidad de codificar y decodificar de manera eficiente las actualizaciones de pantalla.",
        "Al utilizar un enfoque de visualización virtual de bajo nivel, pTHINC puede codificar de manera eficiente los comandos de visualización de la aplicación utilizando solo un pequeño conjunto de comandos de bajo nivel.",
        "En un entorno de PDA, este conjunto de comandos proporciona un componente crucial para mantener la simplicidad del cliente en el entorno de PDA con recursos limitados.",
        "Los comandos de visualización se muestran en la Tabla 1 y funcionan de la siguiente manera.",
        "COPY instruye al cliente a copiar una región de la pantalla desde su framebuffer local a otra ubicación.",
        "Este comando mejora la experiencia del usuario al acelerar el desplazamiento y el movimiento de ventanas opacas sin necesidad de reenviar datos de pantalla desde el servidor.",
        "SFILL, PFILL y BITMAP son comandos que pintan una región de tamaño fijo en la pantalla.",
        "Son útiles para acelerar la visualización de fondos de ventanas sólidas, patrones de escritorio, fondos de páginas web, dibujo de texto y ciertas operaciones en programas de manipulación de gráficos.",
        "SFILL llena una región considerable en la pantalla con un solo color.",
        "PFILL replica una baldosa sobre una región de la pantalla.",
        "BITMAP realiza un relleno utilizando un mapa de bits de unos y ceros como un estipulado para aplicar un color de primer plano y de fondo.",
        "Finalmente, RAW se utiliza para transmitir datos de píxeles no codificados que se mostrarán textualmente en una región de la pantalla.",
        "Este comando se invoca como último recurso si el servidor no puede emplear ningún otro comando, y es el único comando que puede ser comprimido para mitigar su impacto en el ancho de banda de la red. pTHINC entrega sus comandos utilizando un mecanismo de actualización de servidor-push no bloqueante, donde tan pronto como se generan actualizaciones de pantalla en el servidor, se envían al cliente.",
        "Los clientes no están obligados a solicitar explícitamente actualizaciones de pantalla, minimizando así el impacto que la típica variabilidad de la latencia de la red inalámbrica puede tener en la capacidad de respuesta del sistema.",
        "Teniendo en cuenta que los recursos Descripción de Comando COPY Copiar un área de búfer de fotogramas en coordenadas especificadas SFILL Rellenar un área con un valor de color de píxel dado PFILL Azulejar un área con un patrón de píxeles dado BITMAP Rellenar una región usando un patrón de bits RAW Mostrar datos de píxeles en bruto en una ubicación dada Tabla 1: Comandos de visualización del protocolo pTHINC. Las PDAs y las redes inalámbricas limitadas pueden no ser capaces de mantenerse al día con un servidor rápido que genera una gran cantidad de actualizaciones, pTHINC es capaz de fusionar, recortar y descartar actualizaciones automáticamente si se produce pérdida o congestión de red, o si el cliente no puede mantenerse al día con la velocidad de las actualizaciones.",
        "Este tipo de comportamiento resulta crucial en un entorno de navegación web, donde por ejemplo, una página puede ser redibujada varias veces mientras se renderiza al vuelo por el navegador.",
        "En este caso, la PDA solo recibirá y mostrará el resultado final, que claramente es todo lo que al usuario le interesa ver. pTHINC prioriza la entrega de actualizaciones a la PDA utilizando un programador de actualizaciones preemptivo de Tamaño Restante Más Corto Primero (SRSF).",
        "SRSF es análogo a la programación de Tiempo de Procesamiento Restante más Corto, la cual se sabe que es óptima para minimizar el tiempo medio de respuesta en un sistema interactivo.",
        "En un entorno de navegación web, los trabajos cortos están asociados con el texto y los componentes básicos de diseño de página, como el fondo de las páginas, que son contenido web crítico para el usuario.",
        "Por otro lado, los trabajos grandes suelen ser elementos de embellecimiento de menor prioridad, o, incluso peor, banners y anuncios de página web, los cuales tienen un valor cuestionable para el usuario mientras navega por la página.",
        "Usando SRSF, pTHINC puede maximizar la utilización del ancho de banda relativamente escaso disponible en la conexión inalámbrica entre la PDA y el servidor. 3.1 Gestión de la Pantalla Para permitir a los usuarios acceder con la misma facilidad a su navegador web y aplicaciones auxiliares desde una computadora de escritorio en casa como desde una PDA mientras están en movimiento, pTHINC proporciona un mecanismo de redimensionamiento para hacer zoom dentro y fuera de la pantalla de una sesión web. El redimensionamiento de pTHINC es completamente compatible con el servidor, no con el cliente.",
        "El servidor vuelve a muestrear las actualizaciones para que se ajusten al área de visualización de las PDAs antes de ser transmitidas por la red. pTHINC utiliza el algoritmo de remuestreo de Fants para redimensionar las actualizaciones de píxeles.",
        "Esto proporciona actualizaciones suaves y visualmente agradables con un antialiasing adecuado y solo requiere modestos recursos computacionales. El enfoque de redimensionamiento de pTHINCs tiene varias ventajas.",
        "Primero, permite al PDA aprovechar la vastamente superior potencia computacional del servidor para utilizar algoritmos de re-muestreo de alta calidad y producir actualizaciones de mayor calidad para que el PDA las muestre.",
        "Segundo, cambiar el tamaño de la pantalla no se traduce en requisitos adicionales de recursos para la PDA, ya que no necesita realizar ningún trabajo adicional.",
        "Finalmente, se logra una mejor utilización de la red inalámbrica ya que al reescalar las actualizaciones se reducen sus requisitos de ancho de banda.",
        "Para permitir a los usuarios orientar sus pantallas en una PDA y así proporcionar una experiencia visual que se ajuste mejor a las preferencias del usuario y al diseño de páginas web o aplicaciones, pTHINC proporciona un mecanismo de rotación de pantalla para alternar entre los modos de visualización horizontal y vertical. La rotación de pantalla de pTHINC es completamente compatible con el cliente, no con el servidor. pTHINC no recalcula explícitamente la geometría de las actualizaciones de pantalla para realizar la rotación, lo cual sería computacionalmente costoso.",
        "En cambio, pTHINC simplemente cambia la forma en que los datos se copian en el framebuffer para cambiar entre los modos de visualización.",
        "Cuando está en modo retrato, los datos se copian a lo largo de las filas del framebuffer de izquierda a derecha.",
        "Cuando se encuentra en modo horizontal, los datos se copian a lo largo de las columnas del framebuffer de arriba hacia abajo.",
        "Estas técnicas muy rápidas y simples reemplazan un conjunto de operaciones de copia por otro y no imponen ningún sobrecosto de rendimiento. pTHINC proporciona su propio mecanismo de rotación para soportar una amplia gama de dispositivos sin imponer requisitos adicionales de funciones en la PDA.",
        "Aunque algunos dispositivos PDA más nuevos ofrecen soporte nativo para diferentes orientaciones, este mecanismo no es dinámico y requiere que el usuario rote toda la interfaz de usuario de la PDA antes de iniciar el cliente pTHINC.",
        "Windows Mobile proporciona mecanismos de API nativos para que las aplicaciones de PDA puedan rotar su interfaz de usuario sobre la marcha, pero estos mecanismos ofrecen un rendimiento deficiente y una calidad de visualización baja, ya que la rotación se realiza de manera ingenua y no es completamente precisa. 3.2 Reproducción de video El video se ha convertido gradualmente en una parte integral de la World Wide Web, y su presencia solo seguirá aumentando.",
        "Los sitios web de hoy en día no solo utilizan gráficos animados y flash para presentar el contenido web de manera atractiva, sino que también utilizan video en streaming para enriquecer la interfaz web.",
        "Los usuarios pueden ver noticias pregrabadas y en vivo en CNN, ver los momentos más destacados deportivos en ESPN e incluso buscar a través de una gran colección de videos en Google Video.",
        "Para permitir que las aplicaciones proporcionen una reproducción de video eficiente, se han creado interfaces en los sistemas de visualización que permiten a los controladores de dispositivos de video exponer sus capacidades de hardware a las aplicaciones. pTHINC aprovecha estas interfaces y su enfoque de controlador de dispositivo virtual para proporcionar un puente virtual entre el cliente remoto y su hardware y las aplicaciones, y admitir de manera transparente la reproducción de video.",
        "Sobre esta arquitectura, pTHINC utiliza el espacio de color YUV para codificar el contenido de video, lo cual proporciona una serie de beneficios.",
        "Primero, se ha vuelto cada vez más común que el hardware de video de las PDA admita nativamente YUV y pueda realizar la conversión del espacio de color y el escalado automáticamente.",
        "Como resultado, pTHINC puede proporcionar reproducción de video a pantalla completa sin afectar el rendimiento.",
        "Segundo, el uso de YUV permite una representación más eficiente de los datos RGB sin pérdida de calidad, aprovechando la capacidad de los ojos humanos para distinguir mejor las diferencias en brillo que en color.",
        "En particular, pTHINC utiliza el formato YV12, que permite codificar datos de color RGB completo utilizando solo 12 bits por píxel.",
        "Tercero, los datos YUV se producen como uno de los últimos pasos del proceso de decodificación de la mayoría de los códecs de video, lo que permite a pTHINC proporcionar la reproducción de video de una manera independiente del formato.",
        "Finalmente, aunque el hardware de video de las PDAs no pueda acelerar la reproducción, el proceso de conversión de espacio de color es lo suficientemente simple como para no imponer requisitos poco razonables en la PDA.",
        "Un ejemplo más concreto de cómo pTHINC aprovecha el hardware de video PDA para admitir la reproducción de video se puede ver en nuestra implementación de prototipo en la popular PDA Dell Axim X51v, que está equipada con el acelerador multimedia Intel 2700G.",
        "En este caso, pTHINC crea un búfer fuera de pantalla en la memoria de video y escribe y lee desde esta región de memoria datos en formato YV12.",
        "Cuando llega un nuevo fotograma de video, los datos de video se copian desde el búfer a una superficie superpuesta en la memoria de video, que es independiente de la superficie normal utilizada para el dibujo tradicional.",
        "A medida que los datos YV12 se colocan en la superposición, el acelerador de Intel realiza automáticamente la conversión de espacio de color y el escalado.",
        "Al utilizar la superficie de superposición, pTHINC no necesita volver a dibujar la pantalla una vez que la reproducción de video ha terminado, ya que la superficie superpuesta no se ve afectada.",
        "Además, las regiones de superposición específicas pueden ser manipuladas aprovechando el hardware de video, por ejemplo, para realizar interpolación lineal de hardware y suavizar el fotograma para mostrarlo a pantalla completa, y para realizar rotación automática cuando el cliente se ejecuta en modo horizontal. 4.",
        "RESULTADOS EXPERIMENTALES Hemos implementado un prototipo de pTHINC que ejecuta el cliente en dispositivos Pocket PC basados en Windows Mobile ampliamente utilizados y el servidor en sistemas operativos tanto Windows como Linux.",
        "Para demostrar su eficacia en el soporte de aplicaciones web inalámbricas móviles, hemos medido su rendimiento en aplicaciones web.",
        "Presentamos resultados experimentales sobre diferentes dispositivos PDA para dos aplicaciones web populares, navegar por páginas web y reproducir contenido de video desde la web.",
        "Comparamos pTHINC con aplicaciones web nativas que se ejecutan localmente en la PDA para demostrar la mejora que pTHINC puede proporcionar sobre el enfoque tradicional de cliente pesado.",
        "También comparamos pTHINC con tres de los clientes ligeros más utilizados que pueden ejecutarse en PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] y VNC (Virtual Network Computing) [16].",
        "Seguimos la práctica común y nos referimos a Citrix MetaFrameXP y Microsoft Remote Desktop por sus respectivos protocolos de visualización remota, ICA (Independent Computing Architecture) y RDP (Remote Desktop Protocol). 4.1 Plataforma de Pruebas Experimental Realizamos nuestros experimentos web utilizando dos PDA Pocket PC inalámbricas diferentes en un entorno de prueba de red Wi-Fi aislado, como se muestra en la Figura 2.",
        "El banco de pruebas consistía en dos dispositivos cliente PDA, un monitor de paquetes, un servidor de cliente ligero y un servidor web.",
        "Excepto por las PDAs, todas las demás máquinas eran servidores IBM Netfinity 4500R con procesadores duales Intel PIII de 933 MHz y 512 MB de RAM, y estaban conectadas en una red FastEthernet de 100 Mbps conmutada.",
        "El servidor web utilizado fue Apache 1.3.27, el emulador de red fue NISTNet 2.0.12 y el monitor de paquetes fue Ethereal 0.10.9.",
        "Los clientes de PDA se conectaron al banco de pruebas a través de un punto de acceso inalámbrico Lucent Orinoco AP-2000 802.11b.",
        "Todos los experimentos utilizando la red inalámbrica se llevaron a cabo a una distancia de diez pies del punto de acceso, por lo que consideramos que la cantidad de pérdida de paquetes era insignificante en nuestros experimentos.",
        "Se utilizaron dos PDA Pocket PC para proporcionar resultados en modelos antiguos y menos potentes, así como en modelos más nuevos de mayor rendimiento.",
        "El modelo anterior era un Dell Axim X5 con 147 Cliente 1024×768 640×480 Profundidad Cambio de tamaño Clip RDP no sí 8 bits no sí VNC sí sí 16 bits no no ICA sí sí 16 bits sí no pTHINC sí sí 24 bits sí no Tabla 2: Configuración del banco de pruebas de cliente ligero con un CPU Intel XScale PXA255 de 400 MHz y 64 MB de RAM ejecutando Windows Mobile 2003 y una tarjeta Dell TrueMobile 1180 de 2.4 GHz CompactFlash para redes inalámbricas.",
        "El modelo más nuevo era un Dell Axim X51v con un procesador Intel XScale XPA270 de 624 MHz y 64 MB de RAM ejecutando Windows Mobile 5.0 y con red inalámbrica 802.11b integrada.",
        "El X51v tiene un acelerador multimedia Intel 2700G con 16MB de memoria de video.",
        "Ambas PDAs son capaces de mostrar colores de 16 bits pero tienen diferentes tamaños de pantalla y resoluciones de visualización.",
        "El X5 tiene una pantalla diagonal de 3.5 pulgadas con una resolución de 240×320.",
        "El X51v tiene una pantalla diagonal de 3.7 pulgadas con una resolución de 480×640.",
        "Los cuatro clientes ligeros que utilizamos admiten diferentes niveles de calidad de visualización, como se resume en la Tabla 2.",
        "El cliente de RDP solo admite una resolución de pantalla fija de 640×480 en el servidor con una profundidad de color de 8 bits, mientras que otras plataformas ofrecen niveles más altos de calidad de visualización.",
        "Para proporcionar una comparación justa en todas las plataformas, realizamos nuestros experimentos con sesiones de cliente ligero configuradas para dos posibles resoluciones, 1024×768 y 640×480.",
        "Tanto ICA como VNC se configuraron para usar la resolución nativa de PDA con una profundidad de color de 16 bits.",
        "El prototipo actual de pTHINC utiliza color de 24 bits directamente y el cliente reduce la resolución de las actualizaciones al nivel de color de 16 bits disponible en la PDA.",
        "RDP se configuró utilizando solo una profundidad de color de 8 bits ya que no admite ninguna profundidad de color mejor.",
        "Dado que tanto pTHINC como ICA ofrecen la capacidad de ver la pantalla redimensionada para ajustarse a la pantalla, medimos ambos clientes con y sin la pantalla redimensionada para ajustarse a la pantalla del PDA.",
        "Cada cliente ligero fue probado utilizando el modo de paisaje en lugar del modo retrato cuando estaba disponible.",
        "Todos los sistemas que se ejecutan en el X51v podrían funcionar en modo horizontal porque el hardware proporciona una función de modo horizontal.",
        "Sin embargo, el X5 no proporciona esta funcionalidad.",
        "Solo pTHINC admite directamente el modo paisaje, por lo que era el único sistema que podía ejecutarse en modo paisaje tanto en el X5 como en el X51v.",
        "Para proporcionar una comparación justa, también estandarizamos en hardware y sistemas operativos comunes siempre que sea posible.",
        "Todos los sistemas utilizaron el servidor Netfinity como servidor de cliente ligero.",
        "Para los dos sistemas diseñados para servidores Windows, ICA y RDP, ejecutamos Windows Server 2003 en el servidor.",
        "Para los otros sistemas que admiten servidores basados en X, ejecutamos la distribución Debian Linux Inestable con el kernel Linux 2.6.10 en el servidor.",
        "Utilizamos las últimas versiones de servidores de cliente ligero disponibles en cada plataforma en el momento de nuestros experimentos, a saber, Citrix MetaFrame XP Server para Windows Feature Release 3, Microsoft Remote Desktop integrado en Windows XP y Windows 2003 utilizando RDP 5.2, y VNC 4.0.4.2. Para los benchmarks de aplicaciones, utilizamos dos benchmarks de aplicaciones web para nuestros experimentos basados en dos escenarios de aplicación comunes, navegación por páginas web y reproducción de contenido de video desde la web.",
        "Dado que muchos sistemas de cliente ligero, incluidos dos de los probados, son cerrados y propietarios, medimos su rendimiento de manera no invasiva capturando el tráfico de red con un monitor de paquetes y utilizando una variante de benchmarking en cámara lenta [13] previamente desarrollada para medir el rendimiento de clientes ligeros en entornos de PDA [10].",
        "Esta metodología de medición tiene en cuenta tanto el desacoplamiento de la visualización que puede ocurrir entre el cliente y el servidor en sistemas de cliente ligero, como el tiempo de procesamiento del cliente, que puede ser significativo en el caso de las PDAs.",
        "Para medir el rendimiento de la navegación web, utilizamos un benchmark de navegación web basado en la Prueba de Carga de Páginas de Texto Web del conjunto de benchmarks Ziff-Davis i-Bench [7].",
        "El punto de referencia consiste en la carga controlada de 55 páginas desde el servidor web mediante JavaScript.",
        "Las páginas contienen tanto texto como gráficos, con páginas de diferentes tamaños.",
        "Los gráficos son imágenes incrustadas en formatos GIF y JPEG.",
        "El benchmark original i-Bench fue modificado para pruebas de rendimiento en cámara lenta al introducir retrasos de varios segundos entre las páginas utilizando JavaScript.",
        "Luego se realizaron dos pruebas, una en la que se agregaron retrasos entre cada página, y otra en la que las páginas se cargaron continuamente sin esperar a que se mostraran en el cliente.",
        "En la primera prueba, los retrasos se ajustaron lo suficiente en cada caso para garantizar que cada página pudiera ser recibida y mostrada en el cliente por completo sin solapamiento temporal en la transferencia de los datos pertenecientes a dos páginas consecutivas.",
        "Utilizamos el monitor de paquetes para registrar el tráfico de paquetes para cada ejecución de la prueba de referencia, luego utilizamos las marcas de tiempo del primer y último paquete en la traza para obtener nuestras medidas de latencia [10].",
        "El monitor de paquetes también registró la cantidad de datos transmitidos entre el cliente y el servidor.",
        "La proporción entre el tráfico de datos en las dos pruebas produce un factor de escala.",
        "Este factor de escala muestra la pérdida de datos entre el servidor y el cliente debido a la incapacidad del cliente para procesar los datos lo suficientemente rápido.",
        "El producto del factor de escala con la medición de latencia produce la verdadera latencia teniendo en cuenta el tiempo de procesamiento del cliente.",
        "Para ejecutar la prueba de navegación web, utilizamos Mozilla Firefox 1.0.4 en el servidor de cliente ligero para los clientes ligeros, y Windows Internet Explorer (IE) Mobile para 2003 y Mobile para 5.0 para los navegadores nativos en las PDAs X5 y X51v, respectivamente.",
        "En todos los casos, el navegador web utilizado se ajustó para ocupar toda la región de visualización disponible.",
        "Para medir el rendimiento de reproducción de video, utilizamos un banco de pruebas de video que consistía en reproducir un clip de video MPEG-1 de 34.75 segundos que contenía una mezcla de noticias y programación de entretenimiento a resolución de pantalla completa.",
        "El videoclip tiene un tamaño de 5.11 MB y consta de 834 cuadros de píxeles de 352x240 con una velocidad de cuadro ideal de 24 cuadros por segundo.",
        "Medimos el rendimiento del video utilizando pruebas de referencia en cámara lenta al monitorear el tráfico de paquetes resultante a dos velocidades de reproducción, 1 cuadro por segundo (fps) y 24 fps, y comparando los resultados para determinar los retrasos en la reproducción y las caídas de cuadros que ocurren a 24 fps para medir la calidad general del video [13].",
        "Por ejemplo, el 100% de calidad significa que todos los fotogramas del video se reprodujeron a velocidad en tiempo real.",
        "Por otro lado, una calidad del 50% podría significar que se eliminó la mitad de los datos del video, o que el clip tardó el doble en reproducirse a pesar de que se mostró toda la información del video.",
        "Para ejecutar la prueba de rendimiento de video, utilizamos Windows Media Player 9 para servidores de clientes ligeros basados en Windows, MPlayer 1.0 pre 6 para servidores de clientes ligeros basados en X, y Windows Media Player 9 Mobile y 10 Mobile para los reproductores de video nativos que se ejecutan localmente en las PDAs X5 y X51v, respectivamente.",
        "En todos los casos, el reproductor de video utilizado se dimensionó para llenar toda la región de visualización disponible. Las Figuras 3 y 4 muestran los resultados de ejecutar la prueba de navegación por la web.",
        "Para cada plataforma, mostramos resultados de hasta cuatro configuraciones diferentes, dos en el X5 y dos en el X51v, dependiendo de si cada configuración era compatible.",
        "Sin embargo, no todas las plataformas podrían admitir todas las configuraciones.",
        "El navegador local solo se ejecuta a la resolución de pantalla de la PDA, 480×680 o menos para el X51v y el X5.",
        "RDP solo funciona a 640×480.",
        "Ninguna plataforma podía soportar una resolución de pantalla de 1024×768.",
        "ICA solo funcionaba en el X5 y no podía ejecutarse en el X51v porque no era compatible con Windows Mobile 5.",
        "La Figura 3 muestra la latencia promedio por página web para cada plataforma. pTHINC proporciona la latencia promedio más baja en la navegación web en ambas PDAs.",
        "En el X5, pTHINC funciona hasta 70 veces mejor que otros sistemas de cliente ligero y 8 veces mejor que el navegador local.",
        "En el X51v, pTHINC funciona hasta 80 veces mejor que otros sistemas de cliente ligero y 7 veces mejor que el navegador nativo.",
        "De hecho, todos los clientes ligeros excepto VNC superan al navegador local de PDA, demostrando los beneficios de rendimiento del enfoque de cliente ligero.",
        "Los estudios de usabilidad han demostrado que las páginas web deben tardar menos de un segundo en descargarse para que el usuario experimente una navegación web ininterrumpida [14].",
        "Las mediciones muestran que solo los clientes delgados ofrecen latencias de página web de menos de un segundo.",
        "Por el contrario, el navegador local requiere más de 3 segundos en promedio por página web.",
        "El navegador local funciona peor ya que necesita ejecutar un navegador web más limitado para procesar el HTML, JavaScript y realizar todo el renderizado utilizando las capacidades limitadas de la PDA.",
        "Los clientes ligeros pueden aprovecharse de hardware de servidor más rápido y un navegador web altamente optimizado para procesar el contenido web mucho más rápido.",
        "La Figura 3 muestra que RDP es la plataforma más rápida después de pTHINC.",
        "Sin embargo, RDP solo puede ejecutarse a una resolución fija de 640×480 y una profundidad de color de 8 bits.",
        "Además, RDP también recorta la pantalla al tamaño de la pantalla de la PDA para no tener que enviar actualizaciones que no son visibles en la pantalla de la PDA.",
        "Esto proporciona un beneficio de rendimiento siempre y cuando el resto del contenido web no se visualice, pero degrada el rendimiento cuando un usuario desplaza la pantalla para ver otro contenido web.",
        "RDP logra su rendimiento con una calidad de visualización significativamente inferior en comparación con otros clientes ligeros y con recortes adicionales en la visualización que no son utilizados por otros sistemas.",
        "Como resultado, el rendimiento de RDP por sí solo no proporciona una comparación completa con las otras plataformas.",
        "Por el contrario, pTHINC ofrece el mejor rendimiento al mismo tiempo que proporciona una calidad de visualización igual o mejor que los otros sistemas. Dado que VNC e ICA ofrecen una calidad de visualización similar a pTHINC, estos sistemas proporcionan una comparación más justa de diferentes enfoques de cliente ligero.",
        "ICA funciona peor en parte porque utiliza primitivas de visualización de nivel superior que requieren costos adicionales de procesamiento por parte del cliente.",
        "VNC funciona peor en parte porque pierde datos de visualización debido a su mecanismo de entrega de cliente-pull y debido a los costos de procesamiento del cliente en descomprimir primitivas de píxeles crudos.",
        "En ambos casos, su rendimiento se vio limitado en parte porque sus clientes de PDA no podían mantenerse al ritmo al que se mostraban las páginas web.",
        "La Figura 3 también muestra las medidas para aquellos clientes ligeros que admiten redimensionar la pantalla para ajustarse a la pantalla de la PDA, a saber, ICA y pTHINC.",
        "El redimensionamiento requiere un procesamiento adicional, lo que resulta en latencias promedio más lentas de las páginas web.",
        "Las mediciones muestran que el retraso adicional incurrido por ICA al cambiar el tamaño es mucho más sustancial que para pTHINC.",
        "ICA realiza redimensionamiento en el cliente PDA más lento.",
        "Por el contrario, pTHINC aprovecha el servidor más potente para redimensionar, reduciendo la diferencia de rendimiento entre redimensionar y no redimensionar.",
        "A diferencia de ICA, pTHINC es capaz de proporcionar latencias de descarga de páginas web en menos de un segundo en ambos casos.",
        "La Figura 4 muestra los datos transferidos en KB por página al ejecutar la versión de cámara lenta de las pruebas.",
        "Todas las plataformas tienen requisitos modestos de transferencia de datos de aproximadamente 100 KB por página o menos.",
        "Esto está bien dentro de la capacidad de ancho de banda de las redes Wi-Fi.",
        "Las mediciones muestran que el navegador local no transfiere la menor cantidad de datos.",
        "Esto es sorprendente ya que HTML suele considerarse una representación muy compacta del contenido.",
        "En cambio, RDP es la plataforma más eficiente en ancho de banda, en gran parte debido a que utiliza solo una profundidad de color de 8 bits y recorte de pantalla para no transferir la página web completa al cliente. En general, pTHINC tiene los mayores requisitos de datos, ligeramente más que VNC.",
        "Esto se debe en gran medida a la falta de soporte nativo de los prototipos actuales de pTHINC para datos de color de 16 bits en el protocolo de comunicación.",
        "Sin embargo, este resultado también destaca el rendimiento de pTHINCs, ya que es más rápido que todos los demás sistemas incluso al transferir más datos.",
        "Además, dado que los modelos más recientes de PDA admiten colores completos de 24 bits, estos resultados indican que pTHINC seguirá proporcionando un buen rendimiento en la navegación web.",
        "Dado que la usabilidad y la calidad de la pantalla son tan importantes como el rendimiento, las Figuras 5 a 8 comparan capturas de pantalla de los diferentes clientes ligeros al mostrar una página web, en este caso del popular sitio de noticias de la BBC.",
        "Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo paisaje. Figura 5: Captura de pantalla del navegador: RDP 640x480. Figura 6: Captura de pantalla del navegador: VNC 1024x768. Figura 7: Captura de pantalla del navegador: ICA redimensionado 1024x768. Figura 8: Captura de pantalla del navegador: pTHINC redimensionado 1024x768 utilizando la configuración de resolución de pantalla máxima para cada plataforma dada en la Tabla 2.",
        "La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v.",
        "Si bien las capturas de pantalla carecen de la fidelidad visual de la pantalla real del dispositivo, se pueden hacer varias observaciones.",
        "La Figura 5 muestra que RDP no admite el modo de pantalla completa y desperdicia mucho espacio en pantalla para controles y elementos de la interfaz de usuario, lo que obliga al usuario a desplazarse para acceder a todo el contenido de la sesión de navegación web.",
        "La Figura 6 muestra que VNC aprovecha mejor el espacio de la pantalla y ofrece una mejor calidad de visualización, pero aún obliga al usuario a desplazarse para ver la página web debido a la falta de soporte para redimensionar.",
        "La Figura 7 muestra la capacidad de ICA para mostrar la página web completa dada su soporte de redimensionamiento, pero su falta de capacidad en modo paisaje y su algoritmo de redimensionamiento deficiente comprometen significativamente la calidad de visualización.",
        "Por el contrario, la Figura 8 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de pantalla completa de alta calidad del ancho completo de la página web. pTHINC maximiza toda la región de visualización moviendo todos los controles a los botones de la PDA.",
        "Además, pTHINC aprovecha la potencia computacional del servidor para utilizar un algoritmo de redimensionamiento de alta calidad y ajustar la pantalla al tamaño de la PDA sin un sobrecoste significativo.",
        "Las figuras 9 y 10 muestran los resultados de ejecutar la prueba de reproducción de video.",
        "Para cada plataforma excepto ICA, mostramos resultados para una configuración X5 y X51v.",
        "ICA no pudo ejecutarse en el X51v como se mencionó anteriormente.",
        "Las mediciones se realizaron utilizando configuraciones que reflejaban el entorno desde el cual un usuario tendría que acceder a una sesión web tanto desde una computadora de escritorio como desde una PDA.",
        "Por lo tanto, se utilizó una resolución de pantalla del servidor de 1024×768 siempre que fuera posible y el video se mostró a pantalla completa.",
        "La resolución de pantalla de RDP se limitaba a 640×480, como se mencionó anteriormente.",
        "Dado que ver toda la pantalla del video es la única opción realmente utilizable, redimensionamos la pantalla para que se ajustara a la pantalla de la PDA en aquellas plataformas que admitían esta función, a saber, ICA y pTHINC.",
        "La Figura 9 muestra la calidad de video para cada plataforma. pTHINC es el único cliente ligero capaz de proporcionar una calidad de reproducción de video perfecta, similar al reproductor de video nativo de PDA.",
        "Todos los demás clientes ligeros ofrecen una calidad de video muy pobre.",
        "Con la excepción de RDP en el X51v que proporcionó una calidad de video inaceptable del 35%, ninguno de los otros sistemas pudo siquiera alcanzar el 10% de calidad de video.",
        "VNC e ICA tienen la peor calidad al 8% en el dispositivo X5. El soporte de video nativo de pTHINCs permite un rendimiento de video superior, mientras que otros clientes ligeros sufren de su incapacidad para distinguir el video de las actualizaciones normales de la pantalla.",
        "Intentan aplicar algoritmos de compresión ineficaces y costosos en los datos de video y no pueden mantenerse al día con la corriente de actualizaciones generadas, lo que resulta en cuadros omitidos o largos tiempos de reproducción.",
        "VNC se ve aún más afectado por su modelo de actualización de cliente-pull porque los fotogramas de video se generan más rápido que la velocidad a la que el cliente puede procesar y enviar solicitudes al servidor para obtener la siguiente actualización de pantalla.",
        "La Figura 10 muestra los datos totales transferidos durante la reproducción de video a pantalla completa para cada sistema.",
        "El reproductor nativo es la plataforma más eficiente en ancho de banda, enviando menos de 6 MB de datos, lo que corresponde a aproximadamente 1.2 Mbps de ancho de banda. La calidad de video al 100% de pTHINCs requiere alrededor de 25 MB de datos, lo que corresponde a un uso de ancho de banda de menos de 6 Mbps.",
        "Mientras que los otros clientes ligeros envían menos datos que THINC, lo hacen porque están eliminando datos de video, lo que resulta en una calidad de video degradada.",
        "Las figuras 11 a 14 comparan capturas de pantalla de los distintos clientes ligeros al mostrar el videoclip.",
        "Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo horizontal utilizando la configuración de resolución máxima de pantalla para cada plataforma dada en la Tabla 2.",
        "La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v.",
        "Las figuras 11 y 12 muestran que RDP y VNC no pueden mostrar el cuadro completo del video en la pantalla de la PDA.",
        "RDP desperdicia espacio en pantalla para los elementos de la interfaz de usuario y VNC solo muestra la esquina superior del marco de video en la pantalla.",
        "La Figura 13 muestra que el ICA proporciona redimensionamiento para mostrar todo el fotograma del video, pero no redimensiona proporcionalmente los datos del video, lo que resulta en artefactos de visualización extraños.",
        "Por el contrario, la Figura 14 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de alta calidad a pantalla completa de todo el fotograma del video. pTHINC ofrece una visualización de video visualmente más atractiva que RDP, VNC o ICA. 5.",
        "TRABAJOS RELACIONADOS Varios estudios han examinado el rendimiento de la navegación web en la computación de cliente ligero [13, 19, 10].",
        "La capacidad de los clientes ligeros para mejorar el rendimiento de la navegación web en PDAs inalámbricas fue demostrada cuantitativamente por primera vez en un estudio previo realizado por uno de los autores [10].",
        "Este estudio demostró que los clientes ligeros pueden ofrecer tanto un rendimiento de navegación web más rápido como una mayor funcionalidad de navegación web.",
        "El estudio consideró una amplia gama de contenido web, incluido el contenido de sistemas de información médica.",
        "Nuestro trabajo se basa en este estudio previo y considera temas importantes como la usabilidad de los clientes ligeros existentes en entornos de PDA, los compromisos entre la usabilidad y el rendimiento de los clientes ligeros, el rendimiento en diferentes dispositivos de PDA y el rendimiento de los clientes ligeros en aplicaciones web comunes como el video.",
        "Se han desarrollado muchos clientes ligeros y algunos tienen clientes de PDA, incluyendo Remote Desktop de Microsoft [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5] y Tarantella [18].",
        "Estos sistemas fueron diseñados inicialmente para computadoras de escritorio y adaptados posteriormente para asistentes digitales personales (PDA).",
        "A diferencia de pTHINC, no abordan los problemas clave de arquitectura del sistema y usabilidad importantes para las PDAs.",
        "Esto limita la calidad de visualización, el rendimiento del sistema, el espacio de pantalla disponible y la usabilidad general en PDAs. pTHINC se basa en trabajos anteriores de dos de los autores sobre THINC [1], ampliando la arquitectura del servidor e introduciendo una interfaz de cliente y un modelo de uso para admitir eficientemente dispositivos PDA en aplicaciones web móviles.",
        "Otros enfoques para mejorar el rendimiento de la navegación web inalámbrica móvil se han centrado en el uso de proxies de transcodificación y almacenamiento en caché en conjunto con el modelo de cliente pesado [11, 9, 4, 8].",
        "Trabajan mediante el envío de funcionalidades a proxies externos y utilizando aplicaciones de navegación especializadas en el dispositivo PDA que se comunican con el proxy.",
        "Nuestro enfoque de cliente ligero difiere fundamentalmente de estos enfoques de cliente pesado al trasladar toda la lógica del navegador web al servidor, aprovechando las inversiones existentes en navegadores web de escritorio y aplicaciones auxiliares para funcionar de manera integrada con los sistemas de producción sin necesidad de configuraciones adicionales de proxy o modificaciones en el navegador web.",
        "Con la aparición de la navegación web en dispositivos con pantallas pequeñas, los sitios web han sido rediseñados utilizando mecanismos como WAP y se han desarrollado navegadores web nativos especializados para adaptarse a las necesidades de estos dispositivos.",
        "Recientemente, Opera ha desarrollado el navegador web Opera Mini [15], que utiliza un enfoque similar al modelo de cliente ligero para proporcionar acceso a través de una serie de dispositivos móviles que normalmente no podrían ejecutar un navegador web.",
        "En lugar de requerir que el dispositivo procese las páginas web, utiliza un servidor remoto para preprocesar la página antes de enviarla al teléfono.",
        "CONCLUSIONES Hemos introducido pTHINC, una arquitectura de cliente ligero para PDAs inalámbricas. pTHINC proporciona mecanismos arquitectónicos y de usabilidad clave como el redimensionamiento de pantalla en el lado del servidor, rotación de pantalla en el lado del cliente utilizando técnicas simples de copia, soporte de video YUV, y maximización del espacio de pantalla para actualizaciones de visualización y aprovechamiento de los botones de control existentes en las PDAs para elementos de la interfaz de usuario. pTHINC soporta de manera transparente navegadores de escritorio tradicionales y sus aplicaciones auxiliares en dispositivos PDA y computadoras de escritorio, brindando a los usuarios móviles acceso ubicuo a un entorno web consistente, personalizado y completo en dispositivos heterogéneos.",
        "Hemos implementado pTHINC y medido su rendimiento en aplicaciones web en comparación con los sistemas de cliente ligero existentes y las aplicaciones web nativas.",
        "Nuestros resultados en múltiples dispositivos móviles inalámbricos demuestran que pTHINC ofrece un rendimiento de navegación web hasta 80 veces mejor que los sistemas de cliente ligero existentes, y 8 veces mejor que un navegador PDA nativo.",
        "Además, pTHINC es el único cliente ligero de PDA 151 Figura 11: Captura de pantalla de video: RDP 640x480 Figura 12: Captura de pantalla de video: VNC 1024x768 Figura 13: Captura de pantalla de video: ICA redimensionado 1024x768 Figura 14: Captura de pantalla de video: pTHINC redimensionado 1024x768 que proporciona de manera transparente la reproducción de video a pantalla completa y a velocidad de cuadro completa, haciendo que los sitios web con contenido multimedia sean accesibles para los usuarios de la web móvil. 7.",
        "AGRADECIMIENTOS Este trabajo fue apoyado en parte por las subvenciones NSF ITR CCR0219943 y CNS-0426623, y un premio IBM SUR. 8.",
        "REFERENCIAS [1] R. Baratto, L. Kim y J. Nieh.",
        "THINC: Una arquitectura de visualización virtual para la computación de cliente ligero.",
        "En Actas del 20º Simposio de Principios de Sistemas Operativos de la ACM (SOSP), octubre de 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius y A. Muir.",
        "Microsoft Windows NT Server 4.0, Terminal Server Edition: Referencia Técnica.",
        "Microsoft Press, Redmond, WA, 1999. [4] A.\nMicrosoft Press, Redmond, WA, 1999. [4] A.",
        "Fox, I. Goldberg, S. D. Gribble y D. C. Lee.",
        "Experiencia con Top Gun Wingman: un navegador web gráfico basado en proxy para el 3Com PalmPilot.",
        "En Actas de Middleware 98, Lake District, Inglaterra, septiembre de 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Ley de Portabilidad y Responsabilidad del Seguro de Salud. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench versión 1.5. http://etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi.",
        "Sobre agentes de proxy, movilidad y acceso web.",
        "Redes y aplicaciones móviles, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon y A. Ortega.",
        "Diseño e Implementación de un Proxy de Caché Blando.",
        "Redes de Computadoras y Sistemas ISDN, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana y S. Varshneya.",
        "Mejorando la navegación web en PDAs inalámbricas utilizando computación de cliente ligero.",
        "En Actas de la 13ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham y P. Shenoy.",
        "TranSquid: Proxy de transcodificación y almacenamiento en caché para entornos de comercio electrónico heterogéneos.",
        "En Actas del 12º Taller IEEE sobre Problemas de Investigación en Ingeniería de Datos (RIDE 02), febrero de 2002. [12] Visor VNC .NET para PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang y N. Novik.",
        "Midiendo el rendimiento de clientes ligeros utilizando pruebas de referencia en cámara lenta.",
        "ACM Trans.",
        "Sistemas de Computación, 21(1):87-115, Feb. 2003. [14] J. Nielsen.",
        "Diseño de Usabilidad en la Web.",
        "New Riders Publishing, Indianápolis, IN, 2000. [15] Navegador Opera Mini. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood y A. Hopper.",
        "Computación de Red Virtual.",
        "IEEE Internet Computing, 2(1), enero/febrero de 1998. [17] R. W. Scheifler y J. Gettys.",
        "El Sistema de Ventanas X.",
        "ACM Trans.",
        "Gr., 5(2):79-106, Abr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla y M. Sajjadpour.",
        "Rendimiento de la navegación web en computación inalámbrica de cliente ligero.",
        "En Actas de la 12ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2003. 152"
    ],
    "error_count": 1,
    "keys": {
        "web application": {
            "translated_key": "aplicaciones web",
            "is_in_text": true,
            "original_annotated_sentences": [
                "pTHINC: A Thin-Client Architecture for Mobile Wireless Web Joeng Kim, Ricardo A. Baratto, and Jason Nieh Department of Computer Science Columbia University, New York, NY, USA {jk2438, ricardo, nieh}@cs.columbia.edu ABSTRACT Although web applications are gaining popularity on mobile wireless PDAs, web browsers on these systems can be quite slow and often lack adequate functionality to access many web sites.",
                "We have developed pTHINC, a PDA thinclient solution that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide high-fidelity display and seamless mobility across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available screen resolution for application display.",
                "We have implemented pTHINC on Windows Mobile and evaluated its performance on mobile wireless devices.",
                "Our results compared to local PDA web browsers and other thin-client approaches demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "Categories and Subject Descriptors: C.2.4 ComputerCommunication-Networks: Distributed Systems - client/ server General Terms: Design, Experimentation, Performance 1.",
                "INTRODUCTION The increasing ubiquity of wireless networks and decreasing cost of hardware is fueling a proliferation of mobile wireless handheld devices, both as standalone wireless Personal Digital Assistants (PDA) and popular integrated PDA/cell phone devices.",
                "These devices are enabling new forms of mobile computing and communication.",
                "Service providers are leveraging these devices to deliver pervasive web access, and mobile web users already often use these devices to access web-enabled information such as news, email, and localized travel guides and maps.",
                "It is likely that within a few years, most of the devices accessing the web will be mobile.",
                "Users typically access web content by running a web browser and associated helper applications locally on the PDA.",
                "Although native web browsers exist for PDAs, they deliver subpar performance and have a much smaller feature set and more limited functionality than their desktop computing counterparts [10].",
                "As a result, PDA web browsers are often not able to display web content from web sites that leverage more advanced web technologies to deliver a richer web experience.",
                "This fundamental problem arises for two reasons.",
                "First, because PDAs have a completely different hardware/software environment from traditional desktop computers, web applications need to be rewritten and customized for PDAs if at all possible, duplicating development costs.",
                "Because the desktop application market is larger and more mature, most development effort generally ends up being spent on desktop applications, resulting in greater functionality and performance than their PDA counterparts.",
                "Second, PDAs have a more resource constrained environment than traditional desktop computers to provide a smaller form factor and longer battery life.",
                "Desktop web browsers are large, complex applications that are unable to run on a PDA.",
                "Instead, developers are forced to significantly strip down these web browsers to provide a usable PDA web browser, thereby crippling PDA browser functionality.",
                "Thin-client computing provides an alternative approach for enabling pervasive web access from handheld devices.",
                "A thin-client computing system consists of a server and a client that communicate over a network using a remote display protocol.",
                "The protocol enables graphical displays to be virtualized and served across a network to a client device, while application logic is executed on the server.",
                "Using the remote display protocol, the client transmits user input to the server, and the server returns screen updates of the applications from the server to the client.",
                "Using a thin-client model for mobile handheld devices, PDAs can become simple stateless clients that leverage the remote server capabilities to execute web browsers and other helper applications.",
                "The thin-client model provides several important benefits for mobile wireless web.",
                "First, standard desktop web applications can be used to deliver web content to PDAs without rewriting or adapting applications to execute on a PDA, reducing development costs and leveraging existing software investments.",
                "Second, complex web applications can be executed on powerful servers instead of running stripped down versions on more resource constrained PDAs, providing greater functionality and better performance [10].",
                "Third, web applications can take advantage of servers with faster networks and better connectivity, further boosting application performance.",
                "Fourth, PDAs can be even simpler devices since they do not need to perform complex application logic, potentially reducing energy consumption and extend143 ing battery life.",
                "Finally, PDA thin clients can be essentially stateless appliances that do not need to be backed up or restored, require almost no maintenance or upgrades, and do not store any sensitive data that can be lost or stolen.",
                "This model provides a viable avenue for medical organizations to comply with HIPAA regulations [6] while embracing mobile handhelds in their day to day operations.",
                "Despite these potential advantages, thin clients have been unable to provide the full range of these benefits in delivering web applications to mobile handheld devices.",
                "Existing thin clients were not designed for PDAs and do not account for important usability issues in the context of small form factor devices, resulting in difficulty in navigating displayed web content.",
                "Furthermore, existing thin clients are ineffective at providing seamless mobility across the heterogeneous mix of device display sizes and resolutions.",
                "While existing thin clients can already provide faster performance than native PDA web browsers in delivering HTML web content, they do not effectively support more display-intensive web helper applications such as multimedia video, which is increasingly an integral part of available web content.",
                "To harness the full potential of thin-client computing in providing mobile wireless web on PDAs, we have developed pTHINC (PDA THin-client InterNet Computing). pTHINC builds on our previous work on THINC [1] to provide a thinclient architecture for mobile handheld devices. pTHINC virtualizes and resizes the display on the server to efficiently deliver high-fidelity screen updates to a broad range of different clients, screen sizes, and screen orientations, including both portrait and landscape viewing modes.",
                "This enables pTHINC to provide the same persistent web session across different client devices.",
                "For example, pTHINC can provide the same web browsing session appropriately scaled for display on a desktop computer and a PDA so that the same cookies, bookmarks, and other meta-data are continuously available on both machines simultaneously. pTHINCs virtual display approach leverages semantic information available in display commands, and client-side video hardware to provide more efficient remote display mechanisms that are crucial for supporting more display-intensive web applications.",
                "Given limited display resolution on PDAs, pTHINC maximizes the use of screen real estate for remote display by moving control functionality from the screen to readily available PDA control buttons, improving system usability.",
                "We have implemented pTHINC on Windows Mobile and demonstrated that it works transparently with existing applications, window systems, and operating systems, and does not require modifying, recompiling, or relinking existing software.",
                "We have quantitatively evaluated pTHINC against local PDA web browsers and other thin-client approaches on Pocket PC devices.",
                "Our experimental results demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "This paper presents the design and implementation of pTHINC.",
                "Section 2 describes the overall usage model and usability characteristics of pTHINC.",
                "Section 3 presents the design and system architecture of pTHINC.",
                "Section 4 presents experimental results measuring the performance of pTHINC on web applications and comparing it against native PDA browsers and other popular PDA thin-client systems.",
                "Section 5 discusses related work.",
                "Finally, we present some concluding remarks. 2.",
                "PTHINC USAGE MODEL pTHINC is a thin-client system that consists of a simple client viewer application that runs on the PDA and a server that runs on a commodity PC.",
                "The server leverages more powerful PCs to to run web browsers and other application logic.",
                "The client takes user input from the PDA stylus and virtual keyboard and sends them to the server to pass to the applications.",
                "Screen updates are then sent back from the server to the client for display to the user.",
                "When the pTHINC PDA client is started, the user is presented with a simple graphical interface where information such as server address and port, user authentication information, and session settings can be provided. pTHINC first attempts to connect to the server and perform the necessary handshaking.",
                "Once this process has been completed, pTHINC presents the user with the most recent display of his session.",
                "If the session does not exist, a new session is created.",
                "Existing sessions can be seamlessly continued without changes in the session setting or server configuration.",
                "Unlike other thin-client systems, pTHINC provides a user with a persistent web session model in which a user can launch a session running a web browser and associated applications at the server, then disconnect from that session and reconnect to it again anytime.",
                "When a user reconnects to the session, all of the applications continue running where the user left off, so that the user can continue working as though he or she never disconnected.",
                "The ability to disconnect and reconnect to a session at anytime is an important benefit for mobile wireless PDA users which may have intermittent network connectivity. pTHINCs persistent web session model enables a user to reconnect to a web session from devices other than the one on which the web session was originally initiated.",
                "This provides users with seamless mobility across different devices.",
                "If a user loses his PDA, he can easily use another PDA to access his web session.",
                "Furthermore, pTHINC allows users to use non-PDA devices to access web sessions as well.",
                "A user can access the same persistent web session on a desktop PC as on a PDA, enabling a user to use the same web session from any computer. pTHINCs persistent web session model addresses a key problem encountered by mobile web users, the lack of a common web environment across computers.",
                "Web browsers often store important information such as bookmarks, cookies, and history, which enable them to function in a much more useful manner.",
                "The problem that occurs when a user moves between computers is that this data, which is specific to a web browser installation, cannot move with the user.",
                "Furthermore, web browsers often need helper applications to process different media content, and those applications may not be consistently available across all computers. pTHINC addresses this problem by enabling a user to remotely use the exact same web browser environment and helper applications from any computer.",
                "As a result, pTHINC can provide a common, consistent web browsing environment for mobile users across different devices without requiring them to attempt to repeatedly synchronize different web browsing environments across multiple machines.",
                "To enable a user to access the same web session on different devices, pTHINC must provide mechanisms to support different display sizes and resolutions.",
                "Toward this end, pTHINC provides a zoom feature that enables a user to zoom in and out of a display and allows the display of a web 144 Figure 1: pTHINC shortcut keys session to be resized to fit the screen of the device being used.",
                "For example, if the server is running a web session at 1024×768 but the client is a PDA with a display resolution of 640×480, pTHINC will resize the desktop display to fit the full display in the smaller screen of the PDA. pTHINC provides the PDA user with the option to increase the size of the display by zooming in to different parts of the display.",
                "Users are often familiar with the general layout of commonly visited websites, and are able to leverage this resizing feature to better navigate through web pages.",
                "For example, a user can zoom out of the display to view the entire page content and navigate hyperlinks, then zoom in to a region of interest for a better view.",
                "To enable a user to access the same web session on different devices, pTHINC must also provide mechanisms to support different display orientations.",
                "In a desktop environment, users are typically accustomed to having displays presented in landscape mode where the screen width is larger than its height.",
                "However, in a PDA environment, the choice is not always obvious.",
                "Some users may prefer having the display in portrait mode, as it is easier to hold the device in their hands, while others may prefer landscape mode in order to minimize the amount of side-scrolling necessary to view a web page.",
                "To accommodate PDA user preferences, pTHINC provides an orientation feature that enables it to seamless rotate the display between landscape and portrait mode.",
                "The landscape mode is particularly useful for pTHINC users who frequently access their web sessions on both desktop and PDA devices, providing those users with the same familiar landscape setting across different devices.",
                "Because screen space is a relatively scarce resource on PDAs, pTHINC runs in fullscreen mode to maximize the screen area available to display the web session.",
                "To be able to use all of the screen on the PDA and still allow the user to control and interact with it, pTHINC reuses the typical shortcut buttons found on PDAs to perform all the control functions available to the user.",
                "The buttons used by pTHINC do not require any OS environment changes; they are simply intercepted by the pTHINC client application when they are pressed.",
                "Figure 1 shows how pTHINC utilizes the shortcut buttons to provide easy navigation and improve the overall user experience.",
                "These buttons are not device specific, and the layout shown is common to widelyused PocketPC devices. pTHINC provides six shortcuts to support its usage model: • Rotate Screen: The record button on the left edge is used to rotate the screen between portrait and landscape mode each time the button is pressed. • Zoom Out: The leftmost button on the bottom front is used to zoom out the display of the web session providing a birds eye view of the web session. • Zoom In: The second leftmost button on the bottom front is used to zoom in the display of the web session to more clearly view content of interest. • Directional Scroll: The middle button on the bottom front is used to scroll around the display using a single control button in a way that is already familiar to PDA users.",
                "This feature is particularly useful when the user has zoomed in to a region of the display such that only part of the display is visible on the screen. • Show/Hide Keyboard: The second rightmost button on the bottom front is used to bring up a virtual keyboard drawn on the screen for devices which have no physical keyboard.",
                "The virtual keyboard uses standard PDA OS mechanisms, providing portability across different PDA environments. • Close Session: The rightmost button on the bottom front is used to disconnect from the pTHINC session. pTHINC uses the PDA touch screen, stylus, and standard user interface mechanisms to provide a user interface pointand-click metaphor similar to that provided by the mouse in a traditional desktop computing environment. pTHINC does not use a cursor since PDA environments do not provide one.",
                "Instead, a user can use the stylus to tap on different sections of the touch screen to indicate input focus.",
                "A single tap on the touch screen generates a corresponding single click mouse event.",
                "A double tap on the touch screen generates a corresponding double click mouse event. pTHINC provides two-button mouse emulation by using the stylus to press down on the screen for one second to generate a right mouse click.",
                "All of these actions are identical to the way users already interact with PDA applications in the common PocketPC environment.",
                "In web browsing, users can click on hyperlinks and focus on input boxes by simply tapping on the desired screen area of interest.",
                "Unlike local PDA web browsers and other PDA applications, pTHINC leverages more powerful desktop user interface metaphors to enable users to manipulate multiple open application windows instead of being limited to a single application window at any given moment.",
                "This provides increased browsing flexibility beyond what is currently available on PDA devices.",
                "Similar to a desktop environment, browser windows and other application windows can be moved around by pressing down and dragging the stylus similar to a mouse. 3.",
                "PTHINC SYSTEM ARCHITECTURE pTHINC builds on the THINC [1] remote display architecture to provide a thin-client system for PDAs. pTHINC virtualizes the display at the server by leveraging the video device abstraction layer, which sits below the window server and above the framebuffer.",
                "This is a well-defined, low-level, device-dependent layer that exposes the video hardware to the display system. pTHINC accomplishes this through a simple virtual display driver that intercepts drawing commands, packetizes, and sends them over the network. 145 While other thin-client approaches intercept display commands at other layers of the display subsystem, pTHINCs display virtualization approach provides some key benefits in efficiently supporting PDA clients.",
                "For example, intercepting display commands at a higher layer between applications and the window system as is done by X [17] requires replicating and running a great deal of functionality on the PDA that is traditionally provided by the desktop window system.",
                "Given both the size and complexity of traditional window systems, attempting to replicate this functionality in the restricted PDA environment would have proven to be a daunting, and perhaps unfeasible task.",
                "Furthermore, applications and the window system often require tight synchronization in their operation and imposing a wireless network between them by running the applications on the server and the window system on the client would significantly degrade performance.",
                "On the other hand, intercepting at a lower layer by extracting pixels out of the framebuffer as they are rendered provides a simple solution that requires very little functionality on the PDA client, but can also result in degraded performance.",
                "The reason is that by the time the remote display server attempts to send screen updates, it has lost all semantic information that may have helped it encode efficiently, and it must resort to using a generic and expensive encoding mechanism on the server, as well as a potentially expensive decoding mechanism on the limited PDA client.",
                "In contrast to both the high and low level interception approaches, pTHINCs approach of intercepting at the device driver provides an effective balance between client and server simplicity, and the ability to efficiently encode and decode screen updates.",
                "By using a low-level virtual display approach, pTHINC can efficiently encode application display commands using only a small set of low-level commands.",
                "In a PDA environment, this set of commands provides a crucial component in maintaining the simplicity of the client in the resourceconstrained PDA environment.",
                "The display commands are shown in Table 1, and work as follows.",
                "COPY instructs the client to copy a region of the screen from its local framebuffer to another location.",
                "This command improves the user experience by accelerating scrolling and opaque window movement without having to resend screen data from the server.",
                "SFILL, PFILL, and BITMAP are commands that paint a fixed-size region on the screen.",
                "They are useful for accelerating the display of solid window backgrounds, desktop patterns, backgrounds of web pages, text drawing, and certain operations in graphics manipulation programs.",
                "SFILL fills a sizable region on the screen with a single color.",
                "PFILL replicates a tile over a screen region.",
                "BITMAP performs a fill using a bitmap of ones and zeros as a stipple to apply a foreground and background color.",
                "Finally, RAW is used to transmit unencoded pixel data to be displayed verbatim on a region of the screen.",
                "This command is invoked as a last resort if the server is unable to employ any other command, and it is the only command that may be compressed to mitigate its impact on network bandwidth. pTHINC delivers its commands using a non-blocking, serverpush update mechanism, where as soon as display updates are generated on the server, they are sent to the client.",
                "Clients are not required to explicitly request display updates, thus minimizing the impact that the typical varying network latency of wireless links may have on the responsiveness of the system.",
                "Keeping in mind that resource Command Description COPY Copy a frame buffer area to specified coordinates SFILL Fill an area with a given pixel color value PFILL Tile an area with a given pixel pattern BITMAP Fill a region using a bit pattern RAW Display raw pixel data at a given location Table 1: pTHINC Protocol Display Commands constrained PDAs and wireless networks may not be able to keep up with a fast server generating a large number of updates, pTHINC is able to coalesce, clip, and discard updates automatically if network loss or congestion occurs, or the client cannot keep up with the rate of updates.",
                "This type of behavior proves crucial in a web browsing environment, where for example, a page may be redrawn multiple times as it is rendered on the fly by the browser.",
                "In this case, the PDA will only receive and render the final result, which clearly is all the user is interesting in seeing. pTHINC prioritizes the delivery of updates to the PDA using a Shortest-Remaining-Size-First (SRSF) preemptive update scheduler.",
                "SRSF is analogous to Shortest-RemainingProcessing-Time scheduling, which is known to be optimal for minimizing mean response time in an interactive system.",
                "In a web browsing environment, short jobs are associated with text and basic page layout components such as the pages background, which are critical web content for the user.",
                "On the other hand, large jobs are often lower priority beautifying elements, or, even worse, web page banners and advertisements, which are of questionable value to the user as he or she is browsing the page.",
                "Using SRSF, pTHINC is able to maximize the utilization of the relatively scarce bandwidth available on the wireless connection between the PDA and the server. 3.1 Display Management To enable users to just as easily access their web browser and helper applications from a desktop computer at home as from a PDA while on the road, pTHINC provides a resize mechanism to zoom in and out of the display of a web session. pTHINC resizing is completely supported by the server, not the client.",
                "The server resamples updates to fit within the PDAs viewport before they are transmitted over the network. pTHINC uses Fants resampling algorithm to resize pixel updates.",
                "This provides smooth, visually pleasing updates with properly antialiasing and has only modest computational requirements. pTHINCs resizing approach has a number of advantages.",
                "First, it allows the PDA to leverage the vastly superior computational power of the server to use high quality resampling algorithms and produce higher quality updates for the PDA to display.",
                "Second, resizing the screen does not translate into additional resource requirements for the PDA, since it does not need to perform any additional work.",
                "Finally, better utilization of the wireless network is attained since rescaling the updates reduces their bandwidth requirements.",
                "To enable users to orient their displays on a PDA to provide a viewing experience that best accommodates user preferences and the layout of web pages or applications, pTHINC provides a display rotation mechanism to switch between landscape and portrait viewing modes. pTHINC display rotation is completely supported by the client, not the server. pTHINC does not explicitly recalculate the ge146 ometry of display updates to perform rotation, which would be computationally expensive.",
                "Instead, pTHINC simply changes the way data is copied into the framebuffer to switch between display modes.",
                "When in portrait mode, data is copied along the rows of the framebuffer from left to right.",
                "When in landscape mode, data is copied along the columns of the framebuffer from top to bottom.",
                "These very fast and simple techniques replace one set of copy operations with another and impose no performance overhead. pTHINC provides its own rotation mechanism to support a wide range of devices without imposing additional feature requirements on the PDA.",
                "Although some newer PDA devices provide native support for different orientations, this mechanism is not dynamic and requires the user to rotate the PDAs entire user interface before starting the pTHINC client.",
                "Windows Mobile provides native API mechanisms for PDA applications to rotate their UI on the fly, but these mechanisms deliver poor performance and display quality as the rotation is performed naively and is not completely accurate. 3.2 Video Playback Video has gradually become an integral part of the World Wide Web, and its presence will only continue to increase.",
                "Web sites today not only use animated graphics and flash to deliver web content in an attractive manner, but also utilize streaming video to enrich the web interface.",
                "Users are able to view pre-recorded and live newscasts on CNN, watch sports highlights on ESPN, and even search through large collection of videos on Google Video.",
                "To allow applications to provide efficient video playback, interfaces have been created in display systems that allow video device drivers to expose their hardware capabilities back to the applications. pTHINC takes advantage of these interfaces and its virtual device driver approach to provide a virtual bridge between the remote client and its hardware and the applications, and transparently support video playback.",
                "On top of this architecture, pTHINC uses the YUV colorspace to encode the video content, which provides a number of benefits.",
                "First, it has become increasingly common for PDA video hardware to natively support YUV and be able to perform the colorspace conversion and scaling automatically.",
                "As a result, pTHINC is able to provide fullscreen video playback without any performance hits.",
                "Second, the use of YUV allows for a more efficient representation of RGB data without loss of quality, by taking advantage of the human eyes ability to better distinguish differences in brightness than in color.",
                "In particular, pTHINC uses the YV12 format, which allows full color RGB data to be encoded using just 12 bits per pixel.",
                "Third, YUV data is produced as one of the last steps of the decoding process of most video codecs, allowing pTHINC to provide video playback in a manner that is format independent.",
                "Finally, even if the PDAs video hardware is unable to accelerate playback, the colorspace conversion process is simple enough that it does not impose unreasonable requirements on the PDA.",
                "A more concrete example of how pTHINC leverages the PDA video hardware to support video playback can be seen in our prototype implementation on the popular Dell Axim X51v PDA, which is equipped with the Intel 2700G multimedia accelerator.",
                "In this case, pTHINC creates an offscreen buffer in video memory and writes and reads from this memory region data on the YV12 format.",
                "When a new video frame arrives, video data is copied from the buffer to Figure 2: Experimental Testbed an overlay surface in video memory, which is independent of the normal surface used for traditional drawing.",
                "As the YV12 data is put onto the overlay, the Intel accelerator automatically performs both colorspace conversion and scaling.",
                "By using the overlay surface, pTHINC has no need to redraw the screen once video playback is over since the overlapped surface is unaffected.",
                "In addition, specific overlay regions can be manipulated by leveraging the video hardware, for example to perform hardware linear interpolation to smooth out the frame and display it fullscreen, and to do automatic rotation when the client runs in landscape mode. 4.",
                "EXPERIMENTAL RESULTS We have implemented a pTHINC prototype that runs the client on widely-used Windows Mobile-based Pocket PC devices and the server on both Windows and Linux operating systems.",
                "To demonstrate its effectiveness in supporting mobile wireless web applications, we have measured its performance on web applications.",
                "We present experimental results on different PDA devices for two popular web applications, browsing web pages and playing video content from the web.",
                "We compared pTHINC against native web applications running locally on the PDA to demonstrate the improvement that pTHINC can provide over the traditional fat-client approach.",
                "We also compared pTHINC against three of the most widely used thin clients that can run on PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] and VNC (Virtual Network Computing) [16].",
                "We follow common practice and refer to Citrix MetaFrameXP and Microsoft Remote Desktop by their respective remote display protocols, ICA (Independent Computing Architecture) and RDP (Remote Desktop Protocol). 4.1 Experimental Testbed We conducted our web experiments using two different wireless Pocket PC PDAs in an isolated Wi-Fi network testbed, as shown in Figure 2.",
                "The testbed consisted of two PDA client devices, a packet monitor, a thin-client server, and a web server.",
                "Except for the PDAs, all of the other machines were IBM Netfinity 4500R servers with dual 933 MHz Intel PIII CPUs and 512 MB RAM and were connected on a switched 100 Mbps FastEthernet network.",
                "The web server used was Apache 1.3.27, the network emulator was NISTNet 2.0.12, and the packet monitor was Ethereal 0.10.9.",
                "The PDA clients connected to the testbed through a 802.11b Lucent Orinoco AP-2000 wireless access point.",
                "All experiments using the wireless network were conducted within ten feet of the access point, so we considered the amount of packet loss to be negligible in our experiments.",
                "Two Pocket PC PDAs were used to provide results across both older, less powerful models and newer higher performance models.",
                "The older model was a Dell Axim X5 with 147 Client 1024×768 640×480 Depth Resize Clip RDP no yes 8-bit no yes VNC yes yes 16-bit no no ICA yes yes 16-bit yes no pTHINC yes yes 24-bit yes no Table 2: Thin-client Testbed Configuration Setting a 400 MHz Intel XScale PXA255 CPU and 64 MB RAM running Windows Mobile 2003 and a Dell TrueMobile 1180 2.4Ghz CompactFlash card for wireless networking.",
                "The newer model was a Dell Axim X51v with a 624 MHz Intel XScale XPA270 CPU and 64 MB RAM running Windows Mobile 5.0 and integrated 802.11b wireless networking.",
                "The X51v has an Intel 2700G multimedia accelerator with 16MB video memory.",
                "Both PDAs are capable of 16-bit color but have different screen sizes and display resolutions.",
                "The X5 has a 3.5 inch diagonal screen with 240×320 resolution.",
                "The X51v has a 3.7 inch diagonal screen with 480×640.",
                "The four thin clients that we used support different levels of display quality as summarized in Table 2.",
                "The RDP client only supports a fixed 640×480 display resolution on the server with 8-bit color depth, while other platforms provide higher levels of display quality.",
                "To provide a fair comparison across all platforms, we conducted our experiments with thin-client sessions configured for two possible resolutions, 1024×768 and 640×480.",
                "Both ICA and VNC were configured to use the native PDA resolution of 16-bit color depth.",
                "The current pTHINC prototype uses 24-bit color directly and the client downsamples updates to the 16-bit color depth available on the PDA.",
                "RDP was configured using only 8-bit color depth since it does not support any better color depth.",
                "Since both pTHINC and ICA provide the ability to view the display resized to fit the screen, we measured both clients with and without the display resized to fit the PDA screen.",
                "Each thin client was tested using landscape rather than portrait mode when available.",
                "All systems run on the X51v could run in landscape mode because the hardware provides a landscape mode feature.",
                "However, the X5 does not provide this functionality.",
                "Only pTHINC directly supports landscape mode, so it was the only system that could run in landscape mode on both the X5 and X51v.",
                "To provide a fair comparison, we also standardized on common hardware and operating systems whenever possible.",
                "All of the systems used the Netfinity server as the thin-client server.",
                "For the two systems designed for Windows servers, ICA and RDP, we ran Windows 2003 Server on the server.",
                "For the other systems which support X-based servers, VNC and pTHINC, we ran the Debian Linux Unstable distribution with the Linux 2.6.10 kernel on the server.",
                "We used the latest thin-client server versions available on each platform at the time of our experiments, namely Citrix MetaFrame XP Server for Windows Feature Release 3, Microsoft Remote Desktop built into Windows XP and Windows 2003 using RDP 5.2, and VNC 4.0. 4.2 Application Benchmarks We used two <br>web application</br> benchmarks for our experiments based on two common application scenarios, browsing web pages and playing video content from the web.",
                "Since many thin-client systems including two of the ones tested are closed and proprietary, we measured their performance in a noninvasive manner by capturing network traffic with a packet monitor and using a variant of slow-motion benchmarking [13] previously developed to measure thin-client performance in PDA environments [10].",
                "This measurement methodology accounts for both the display decoupling that can occur between client and server in thin-client systems as well as client processing time, which may be significant in the case of PDAs.",
                "To measure web browsing performance, we used a web browsing benchmark based on the Web Text Page Load Test from the Ziff-Davis i-Bench benchmark suite [7].",
                "The benchmark consists of JavaScript controlled load of 55 pages from the web server.",
                "The pages contain both text and graphics with pages varying in size.",
                "The graphics are embedded images in GIF and JPEG formats.",
                "The original i-Bench benchmark was modified for slow-motion benchmarking by introducing delays of several seconds between the pages using JavaScript.",
                "Then two tests were run, one where delays where added between each page, and one where pages where loaded continuously without waiting for them to be displayed on the client.",
                "In the first test, delays were sufficiently adjusted in each case to ensure that each page could be received and displayed on the client completely without temporal overlap in transferring the data belonging to two consecutive pages.",
                "We used the packet monitor to record the packet traffic for each run of the benchmark, then used the timestamps of the first and last packet in the trace to obtain our latency measures [10].",
                "The packet monitor also recorded the amount of data transmitted between the client and the server.",
                "The ratio between the data traffic in the two tests yields a scale factor.",
                "This scale factor shows the loss of data between the server and the client due to inability of the client to process the data quickly enough.",
                "The product of the scale factor with the latency measurement produces the true latency accounting for client processing time.",
                "To run the web browsing benchmark, we used Mozilla Firefox 1.0.4 running on the thin-client server for the thin clients, and Windows Internet Explorer (IE) Mobile for 2003 and Mobile for 5.0 for the native browsers on the X5 and X51v PDAs, respectively.",
                "In all cases, the web browser used was sized to fill the entire display region available.",
                "To measure video playback performance, we used a video benchmark that consisted of playing a 34.75s MPEG-1 video clip containing a mix of news and entertainment programming at full-screen resolution.",
                "The video clip is 5.11 MB and consists of 834 352x240 pixel frames with an ideal frame rate of 24 frames/sec.",
                "We measured video performance using slow-motion benchmarking by monitoring resulting packet traffic at two playback rates, 1 frames/second (fps) and 24 fps, and comparing the results to determine playback delays and frame drops that occur at 24 fps to measure overall video quality [13].",
                "For example, 100% quality means that all video frames were played at real-time speed.",
                "On the other hand, 50% quality could mean that half the video data was dropped, or that the clip took twice as long to play even though all of the video data was displayed.",
                "To run the video benchmark, we used Windows Media Player 9 for Windows-based thin-client servers, MPlayer 1.0 pre 6 for X-based thin-client servers, and Windows Media Player 9 Mobile and 10 Mobile for the native video players running locally on the X5 and X51v PDAs, respectively.",
                "In all cases, the video player used was sized to fill the entire display region available. 4.3 Measurements Figures 3 and 4 show the results of running the web brows148 0 1 10 100 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL Latency(s) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 3: Browsing Benchmark: Average Page Latency ing benchmark.",
                "For each platform, we show results for up to four different configurations, two on the X5 and two on the X51v, depending on whether each configuration was supported.",
                "However, not all platforms could support all configurations.",
                "The local browser only runs at the display resolution of the PDA, 480×680 or less for the X51v and the X5.",
                "RDP only runs at 640×480.",
                "Neither platform could support 1024×768 display resolution.",
                "ICA only ran on the X5 and could not run on the X51v because it did not work on Windows Mobile 5.",
                "Figure 3 shows the average latency per web page for each platform. pTHINC provides the lowest average web browsing latency on both PDAs.",
                "On the X5, pTHINC performs up to 70 times better than other thin-client systems and 8 times better than the local browser.",
                "On the X51v, pTHINC performs up to 80 times better than other thin-client systems and 7 times better than the native browser.",
                "In fact, all of the thin clients except VNC outperform the local PDA browser, demonstrating the performance benefits of the thin-client approach.",
                "Usability studies have shown that web pages should take less than one second to download for the user to experience an uninterrupted web browsing experience [14].",
                "The measurements show that only the thin clients deliver subsecond web page latencies.",
                "In contrast, the local browser requires more than 3 seconds on average per web page.",
                "The local browser performs worse since it needs to run a more limited web browser to process the HTML, JavaScript, and do all the rendering using the limited capabilities of the PDA.",
                "The thin clients can take advantage of faster server hardware and a highly tuned web browser to process the web content much faster.",
                "Figure 3 shows that RDP is the next fastest platform after pTHINC.",
                "However, RDP is only able to run at a fixed resolution of 640×480 and 8-bit color depth.",
                "Furthermore, RDP also clips the display to the size of the PDA screen so that it does not need to send updates that are not visible on the PDA screen.",
                "This provides a performance benefit assuming the remaining web content is not viewed, but degrades performance when a user scrolls around the display to view other web content.",
                "RDP achieves its performance with significantly lower display quality compared to the other thin clients and with additional display clipping not used by other systems.",
                "As a result, RDP performance alone does not provide a complete comparison with the other platforms.",
                "In contrast, pTHINC provides the fastest performance while at the same time providing equal or better display quality than the other systems. 0 1 10 100 1000 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL DataSize(KB) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 4: Browsing Benchmark: Average Page Data Transferred Since VNC and ICA provide similar display quality to pTHINC, these systems provide a more fair comparison of different thin-client approaches.",
                "ICA performs worse in part because it uses higher-level display primitives that require additional client processing costs.",
                "VNC performs worse in part because it loses display data due to its client-pull delivery mechanism and because of the client processing costs in decompressing raw pixel primitives.",
                "In both cases, their performance was limited in part because their PDA clients were unable to keep up with the rate at which web pages were being displayed.",
                "Figure 3 also shows measurements for those thin clients that support resizing the display to fit the PDA screen, namely ICA and pTHINC.",
                "Resizing requires additional processing, which results in slower average web page latencies.",
                "The measurements show that the additional delay incurred by ICA when resizing versus not resizing is much more substantial than for pTHINC.",
                "ICA performs resizing on the slower PDA client.",
                "In contrast, pTHINC leverage the more powerful server to do resizing, reducing the performance difference between resizing and not resizing.",
                "Unlike ICA, pTHINC is able to provide subsecond web page download latencies in both cases.",
                "Figure 4 shows the data transferred in KB per page when running the slow-motion version of the tests.",
                "All of the platforms have modest data transfer requirements of roughly 100 KB per page or less.",
                "This is well within the bandwidth capacity of Wi-Fi networks.",
                "The measurements show that the local browser does not transfer the least amount of data.",
                "This is surprising as HTML is often considered to be a very compact representation of content.",
                "Instead, RDP is the most bandwidth efficient platform, largely as a result of using only 8-bit color depth and screen clipping so that it does not transfer the entire web page to the client. pTHINC overall has the largest data requirements, slightly more than VNC.",
                "This is largely a result of the current pTHINC prototypes lack of native support for 16-bit color data in the wire protocol.",
                "However, this result also highlights pTHINCs performance as it is faster than all other systems even while transferring more data.",
                "Furthermore, as newer PDA models support full 24-bit color, these results indicate that pTHINC will continue to provide good web browsing performance.",
                "Since display usability and quality are as important as performance, Figures 5 to 8 compare screenshots of the different thin clients when displaying a web page, in this case from the popular BBC news website.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode 149 Figure 5: Browser Screenshot: RDP 640x480 Figure 6: Browser Screenshot: VNC 1024x768 Figure 7: Browser Screenshot: ICA Resized 1024x768 Figure 8: Browser Screenshot: pTHINC Resized 1024x768 using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "While the screenshots lack the visual fidelity of the actual device display, several observations can be made.",
                "Figure 5 shows that RDP does not support fullscreen mode and wastes lots of screen space for controls and UI elements, requiring the user to scroll around in order to access the full contents of the web browsing session.",
                "Figure 6 shows that VNC makes better use of the screen space and provides better display quality, but still forces the user to scroll around to view the web page due to its lack of resizing support.",
                "Figure 7 shows ICAs ability to display the full web page given its resizing support, but that its lack of landscape capability and poorer resize algorithm significantly compromise display quality.",
                "In contrast, Figure 8 shows pTHINC using resizing to provide a high quality fullscreen display of the full width of the web page. pTHINC maximizes the entire viewing region by moving all controls to the PDA buttons.",
                "In addition, pTHINC leverages the server computational power to use a high quality resizing algorithm to resize the display to fit the PDA screen without significant overhead.",
                "Figures 9 and 10 show the results of running the video playback benchmark.",
                "For each platform except ICA, we show results for an X5 and X51v configuration.",
                "ICA could not run on the X51v as noted earlier.",
                "The measurements were done using settings that reflected the environment a user would have to access a web session from both a desktop computer and a PDA.",
                "As such, a 1024×768 server display resolution was used whenever possible and the video was shown at fullscreen.",
                "RDP was limited to 640×480 display resolution as noted earlier.",
                "Since viewing the entire video display is the only really usable option, we resized the display to fit the PDA screen for those platforms that supported this feature, namely ICA and pTHINC.",
                "Figure 9 shows the video quality for each platform. pTHINC is the only thin client able to provide perfect video playback quality, similar to the native PDA video player.",
                "All of the other thin clients deliver very poor video quality.",
                "With the exception of RDP on the X51v which provided unacceptable 35% video quality, none of the other systems were even able to achieve 10% video quality.",
                "VNC and ICA have the worst quality at 8% on the X5 device. pTHINCs native video support enables superior video performance, while other thin clients suffer from their inability to distinguish video from normal display updates.",
                "They attempt to apply ineffective and expensive compression algorithms on the video data and are unable to keep up with the stream of updates generated, resulting in dropped frames or long playback times.",
                "VNC suffers further from its client-pull update model because video frames are generated faster than the rate at which the client can process and send requests to the server to obtain the next display update.",
                "Figure 10 shows the total data transferred during 150 0% 20% 40% 60% 80% 100% pTHINCICAVNCRDPLOCAL VideoQuality Platform Axim X5 Axim X51v Figure 9: Video Benchmark: Fullscreen Video Quality 0 1 10 100 pTHINCICAVNCRDPLOCAL VideoDataSize(MB) Platform Axim X5 Axim X51v Figure 10: Video Benchmark: Fullscreen Video Data video playback for each system.",
                "The native player is the most bandwidth efficient platform, sending less than 6 MB of data, which corresponds to about 1.2 Mbps of bandwidth. pTHINCs 100% video quality requires about 25 MB of data which corresponds to a bandwidth usage of less than 6 Mbps.",
                "While the other thin clients send less data than THINC, they do so because they are dropping video data, resulting in degraded video quality.",
                "Figures 11 to 14 compare screenshots of the different thin clients when displaying the video clip.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "Figures 11 and 12 show that RDP and VNC are unable to display the entire video frame on the PDA screen.",
                "RDP wastes screen space for UI elements and VNC only shows the top corner of the video frame on the screen.",
                "Figure 13 shows that ICA provides resizing to display the entire video frame, but did not proportionally resize the video data, resulting in strange display artifacts.",
                "In contrast, Figure 14 shows pTHINC using resizing to provide a high quality fullscreen display of the entire video frame. pTHINC provides visually more appealing video display than RDP, VNC, or ICA. 5.",
                "RELATED WORK Several studies have examined the web browsing performance of thin-client computing [13, 19, 10].",
                "The ability for thin clients to improve web browsing performance on wireless PDAs was first quantitatively demonstrated in a previous study by one of the authors [10].",
                "This study demonstrated that thin clients can provide both faster web browsing performance and greater web browsing functionality.",
                "The study considered a wide range of web content including content from medical information systems.",
                "Our work builds on this previous study and consider important issues such as how usable existing thin clients are in PDA environments, the trade-offs between thin-client usability and performance, performance across different PDA devices, and the performance of thin clients on common web-related applications such as video.",
                "Many thin clients have been developed and some have PDA clients, including Microsofts Remote Desktop [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5], and Tarantella [18].",
                "These systems were first designed for desktop computing and retrofitted for PDAs.",
                "Unlike pTHINC, they do not address key system architecture and usability issues important for PDAs.",
                "This limits their display quality, system performance, available screen space, and overall usability on PDAs. pTHINC builds on previous work by two of the authors on THINC [1], extending the server architecture and introducing a client interface and usage model to efficiently support PDA devices for mobile web applications.",
                "Other approaches to improve the performance of mobile wireless web browsing have focused on using transcoding and caching proxies in conjunction with the fat client model [11, 9, 4, 8].",
                "They work by pushing functionality to external proxies, and using specialized browsing applications on the PDA device that communicate with the proxy.",
                "Our thinclient approach differs fundamentally from these fat-client approaches by pushing all web browser logic to the server, leveraging existing investments in desktop web browsers and helper applications to work seamlessly with production systems without any additional proxy configuration or web browser modifications.",
                "With the emergence of web browsing on small display devices, web sites have been redesigned using mechanisms like WAP and specialized native web browsers have been developed to tailor the needs of these devices.",
                "Recently, Opera has developed the Opera Mini [15] web browser, which uses an approach similar to the thin-client model to provide access across a number of mobile devices that would normally be incapable of running a web browser.",
                "Instead of requiring the device to process web pages, it uses a remote server to pre-process the page before sending it to the phone. 6.",
                "CONCLUSIONS We have introduced pTHINC, a thin-client architecture for wireless PDAs. pTHINC provides key architectural and usability mechanisms such as server-side screen resizing, clientside screen rotation using simple copy techniques, YUV video support, and maximizing screen space for display updates and leveraging existing PDA control buttons for UI elements. pTHINC transparently supports traditional desktop browsers and their helper applications on PDA devices and desktop machines, providing mobile users with ubiquitous access to a consistent, personalized, and full-featured web environment across heterogeneous devices.",
                "We have implemented pTHINC and measured its performance on web applications compared to existing thin-client systems and native web applications.",
                "Our results on multiple mobile wireless devices demonstrate that pTHINC delivers web browsing performance up to 80 times better than existing thin-client systems, and 8 times better than a native PDA browser.",
                "In addition, pTHINC is the only PDA thin client 151 Figure 11: Video Screenshot: RDP 640x480 Figure 12: Video Screenshot: VNC 1024x768 Figure 13: Video Screenshot: ICA Resized 1024x768 Figure 14: Video Screenshot: pTHINC Resized 1024x768 that transparently provides full-screen, full frame rate video playback, making web sites with multimedia content accessible to mobile web users. 7.",
                "ACKNOWLEDGEMENTS This work was supported in part by NSF ITR grants CCR0219943 and CNS-0426623, and an IBM SUR Award. 8.",
                "REFERENCES [1] R. Baratto, L. Kim, and J. Nieh.",
                "THINC: A Virtual Display Architecture for Thin-Client Computing.",
                "In Proceedings of the 20th ACM Symposium on Operating Systems Principles (SOSP), Oct. 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius, and A. Muir.",
                "Microsoft Windows NT Server 4.0, Terminal Server Edition: Technical Reference.",
                "Microsoft Press, Redmond, WA, 1999. [4] A.",
                "Fox, I. Goldberg, S. D. Gribble, and D. C. Lee.",
                "Experience With Top Gun Wingman: A Proxy-Based Graphical Web Browser for the 3Com PalmPilot.",
                "In Proceedings of Middleware 98, Lake District, England, September 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Health Insurance Portability and Accountability Act. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench version 1.5. http: //etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi.",
                "On proxy agents, mobility, and web access.",
                "Mobile Networks and Applications, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon, and A. Ortega.",
                "Design and Implementation of a Soft Caching Proxy.",
                "Computer Networks and ISDN Systems, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana, and S. Varshneya.",
                "Improving Web Browsing on Wireless PDAs Using Thin-Client Computing.",
                "In Proceedings of the 13th International World Wide Web Conference (WWW), May 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham, and P. Shenoy.",
                "TranSquid: Transcoding and caching proxy for heterogenous ecommerce environments.",
                "In Proceedings of the 12th IEEE Workshop on Research Issues in Data Engineering (RIDE 02), Feb. 2002. [12] .NET VNC Viewer for PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang, and N. Novik.",
                "Measuring Thin-Client Performance Using Slow-Motion Benchmarking.",
                "ACM Trans.",
                "Computer Systems, 21(1):87-115, Feb. 2003. [14] J. Nielsen.",
                "Designing Web Usability.",
                "New Riders Publishing, Indianapolis, IN, 2000. [15] Opera Mini Browser. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood, and A. Hopper.",
                "Virtual Network Computing.",
                "IEEE Internet Computing, 2(1), Jan./Feb. 1998. [17] R. W. Scheifler and J. Gettys.",
                "The X Window System.",
                "ACM Trans.",
                "Gr., 5(2):79-106, Apr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla, and M. Sajjadpour.",
                "Web Browsing Performance of Wireless Thin-Client Computing.",
                "In Proceedings of the 12th International World Wide Web Conference (WWW), May 2003. 152"
            ],
            "original_annotated_samples": [
                "We used the latest thin-client server versions available on each platform at the time of our experiments, namely Citrix MetaFrame XP Server for Windows Feature Release 3, Microsoft Remote Desktop built into Windows XP and Windows 2003 using RDP 5.2, and VNC 4.0. 4.2 Application Benchmarks We used two <br>web application</br> benchmarks for our experiments based on two common application scenarios, browsing web pages and playing video content from the web."
            ],
            "translated_annotated_samples": [
                "Utilizamos las últimas versiones de servidores de cliente ligero disponibles en cada plataforma en el momento de nuestros experimentos, a saber, Citrix MetaFrame XP Server para Windows Feature Release 3, Microsoft Remote Desktop integrado en Windows XP y Windows 2003 utilizando RDP 5.2, y VNC 4.0.4.2. Para los benchmarks de aplicaciones, utilizamos dos benchmarks de <br>aplicaciones web</br> para nuestros experimentos basados en dos escenarios de aplicación comunes, navegación por páginas web y reproducción de contenido de video desde la web."
            ],
            "translated_text": "pTHINC: Una arquitectura de cliente ligero para la web inalámbrica móvil Joeng Kim, Ricardo A. Baratto y Jason Nieh Departamento de Ciencias de la Computación Universidad de Columbia, Nueva York, NY, EE. UU. {jk2438, ricardo, nieh}@cs.columbia.edu RESUMEN Aunque las aplicaciones web están ganando popularidad en las PDAs inalámbricas móviles, los navegadores web en estos sistemas pueden ser bastante lentos y a menudo carecen de funcionalidad adecuada para acceder a muchos sitios web. Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y movilidad fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la resolución de pantalla disponible para la visualización de aplicaciones. Hemos implementado pTHINC en Windows Mobile y evaluado su rendimiento en dispositivos móviles inalámbricos. Nuestros resultados comparados con los navegadores web PDA locales y otros enfoques de cliente ligero demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero PDA que soporta de manera efectiva aplicaciones de ayuda del navegador cruciales como la reproducción de video. Categorías y Descriptores de Asunto: C.2.4 Comunicación de Computadoras-Redes: Sistemas Distribuidos - cliente/servidor Términos Generales: Diseño, Experimentación, Rendimiento 1. La creciente ubicuidad de las redes inalámbricas y la disminución del costo del hardware están impulsando una proliferación de dispositivos móviles inalámbricos portátiles, tanto como asistentes digitales personales (PDA) inalámbricos independientes y dispositivos populares integrados de PDA/teléfono celular. Estos dispositivos están permitiendo nuevas formas de computación y comunicación móvil. Los proveedores de servicios están aprovechando estos dispositivos para ofrecer acceso web omnipresente, y los usuarios de la web móvil a menudo ya utilizan estos dispositivos para acceder a información habilitada para la web, como noticias, correo electrónico, guías de viaje localizadas y mapas. Es probable que en unos pocos años, la mayoría de los dispositivos que accedan a la web sean móviles. Los usuarios suelen acceder al contenido web ejecutando un navegador web y aplicaciones auxiliares asociadas localmente en la PDA. Aunque existen navegadores web nativos para PDAs, ofrecen un rendimiento deficiente y tienen un conjunto de funciones mucho más pequeño y una funcionalidad más limitada que sus contrapartes de computadoras de escritorio [10]. Como resultado, los navegadores web de PDA a menudo no pueden mostrar el contenido web de sitios web que utilizan tecnologías web más avanzadas para ofrecer una experiencia web más rica. Este problema fundamental surge por dos razones. Primero, debido a que las PDAs tienen un entorno de hardware/software completamente diferente de las computadoras de escritorio tradicionales, las aplicaciones web necesitan ser reescritas y personalizadas para las PDAs si es posible, duplicando los costos de desarrollo. Debido a que el mercado de aplicaciones de escritorio es más grande y maduro, la mayoría del esfuerzo de desarrollo generalmente se destina a las aplicaciones de escritorio, lo que resulta en una mayor funcionalidad y rendimiento que sus contrapartes de PDA. En segundo lugar, las PDAs tienen un entorno con recursos más limitados que las computadoras de escritorio tradicionales para ofrecer un factor de forma más pequeño y una vida útil de la batería más larga. Los navegadores web de escritorio son aplicaciones grandes y complejas que no pueden ejecutarse en una PDA. En cambio, los desarrolladores se ven obligados a reducir significativamente estas navegadores web para ofrecer un navegador web PDA utilizable, lo que limita la funcionalidad del navegador PDA. La computación de cliente ligero proporciona un enfoque alternativo para habilitar el acceso web ubicuo desde dispositivos móviles. Un sistema informático de cliente ligero consiste en un servidor y un cliente que se comunican a través de una red utilizando un protocolo de visualización remota. El protocolo permite que las pantallas gráficas se virtualicen y se sirvan a través de una red a un dispositivo cliente, mientras que la lógica de la aplicación se ejecuta en el servidor. Usando el protocolo de visualización remota, el cliente transmite la entrada del usuario al servidor, y el servidor devuelve actualizaciones de pantalla de las aplicaciones del servidor al cliente. Utilizando un modelo de cliente ligero para dispositivos móviles de mano, las PDAs pueden convertirse en clientes simples sin estado que aprovechan las capacidades del servidor remoto para ejecutar navegadores web y otras aplicaciones auxiliares. El modelo de cliente ligero proporciona varios beneficios importantes para la web inalámbrica móvil. Primero, las aplicaciones web estándar de escritorio pueden utilizarse para entregar contenido web a PDAs sin necesidad de reescribir o adaptar las aplicaciones para ejecutarse en una PDA, lo que reduce los costos de desarrollo y aprovecha las inversiones existentes en software. Segundo, las aplicaciones web complejas pueden ejecutarse en servidores potentes en lugar de ejecutarse en versiones simplificadas en PDAs con recursos más limitados, lo que proporciona una mayor funcionalidad y un mejor rendimiento [10]. Tercero, las aplicaciones web pueden aprovechar servidores con redes más rápidas y mejor conectividad, lo que mejora aún más el rendimiento de la aplicación. En cuarto lugar, las PDAs pueden ser dispositivos aún más simples ya que no necesitan realizar una lógica de aplicación compleja, lo que potencialmente reduce el consumo de energía y extiende la vida útil de la batería. Finalmente, los clientes ligeros PDA pueden ser dispositivos prácticamente sin estado que no necesitan ser respaldados o restaurados, requieren casi ningún mantenimiento o actualizaciones, y no almacenan datos sensibles que puedan perderse o ser robados. Este modelo proporciona una vía viable para que las organizaciones médicas cumplan con las regulaciones de HIPAA mientras incorporan dispositivos móviles en sus operaciones diarias. A pesar de estas posibles ventajas, los clientes ligeros no han podido ofrecer la gama completa de estos beneficios al entregar aplicaciones web a dispositivos móviles portátiles. Los thin clients existentes no fueron diseñados para PDAs y no tienen en cuenta problemas importantes de usabilidad en el contexto de dispositivos de factor de forma pequeño, lo que resulta en dificultades para navegar por el contenido web mostrado. Además, los clientes ligeros existentes son ineficaces para proporcionar movilidad fluida en la mezcla heterogénea de tamaños de pantalla y resoluciones de dispositivos. Si bien los clientes ligeros existentes ya pueden ofrecer un rendimiento más rápido que los navegadores web nativos de PDA al entregar contenido web HTML, no admiten de manera efectiva aplicaciones web auxiliares más intensivas en visualización, como videos multimedia, que cada vez son una parte integral del contenido web disponible. Para aprovechar todo el potencial de la informática de cliente ligero en la provisión de la web inalámbrica móvil en PDAs, hemos desarrollado pTHINC (PDA THin-client InterNet Computing). pTHINC se basa en nuestro trabajo previo en THINC [1] para proporcionar una arquitectura de cliente ligero para dispositivos móviles de mano. pTHINC virtualiza y redimensiona la pantalla en el servidor para entregar de manera eficiente actualizaciones de pantalla de alta fidelidad a una amplia gama de clientes diferentes, tamaños de pantalla y orientaciones de pantalla, incluidos los modos de visualización en vertical y horizontal. Esto permite a pTHINC proporcionar la misma sesión web persistente en diferentes dispositivos de cliente. Por ejemplo, pTHINC puede proporcionar la misma sesión de navegación web adecuadamente escalada para su visualización en una computadora de escritorio y una PDA, de modo que las mismas cookies, marcadores y otros metadatos estén disponibles continuamente en ambas máquinas simultáneamente. El enfoque de visualización virtual de pTHINC aprovecha la información semántica disponible en los comandos de visualización y el hardware de video del cliente para proporcionar mecanismos de visualización remota más eficientes que son cruciales para admitir aplicaciones web más intensivas en visualización. Dada la limitada resolución de pantalla en las PDA, pTHINC maximiza el uso del espacio de pantalla para la visualización remota al trasladar la funcionalidad de control de la pantalla a los botones de control de PDA fácilmente disponibles, mejorando la usabilidad del sistema. Hemos implementado pTHINC en Windows Mobile y demostrado que funciona de manera transparente con las aplicaciones existentes, sistemas de ventanas y sistemas operativos, y no requiere modificar, recompilar o volver a enlazar el software existente. Hemos evaluado cuantitativamente pTHINC frente a navegadores web PDA locales y otros enfoques de cliente ligero en dispositivos Pocket PC. Nuestros resultados experimentales demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero de PDA que soporta de manera efectiva aplicaciones esenciales de ayuda para el navegador, como la reproducción de video. Este documento presenta el diseño e implementación de pTHINC. La sección 2 describe el modelo de uso general y las características de usabilidad de pTHINC. La sección 3 presenta el diseño y la arquitectura del sistema de pTHINC. La sección 4 presenta resultados experimentales que miden el rendimiento de pTHINC en aplicaciones web y lo comparan con navegadores nativos de PDA y otros sistemas de cliente ligero de PDA populares. La sección 5 discute el trabajo relacionado. Finalmente, presentamos algunas observaciones finales. El MODELO DE USO DE pTHINC pTHINC es un sistema de cliente ligero que consiste en una aplicación de visualización de cliente simple que se ejecuta en la PDA y un servidor que se ejecuta en una PC estándar. El servidor aprovecha PCs más potentes para ejecutar navegadores web y otra lógica de aplicaciones. El cliente recibe la entrada del usuario desde el lápiz óptico y el teclado virtual de la PDA y los envía al servidor para pasarlos a las aplicaciones. Las actualizaciones de la pantalla son luego enviadas desde el servidor al cliente para mostrar al usuario. Cuando se inicia el cliente PDA pTHINC, se presenta al usuario una interfaz gráfica simple donde se pueden proporcionar información como la dirección y el puerto del servidor, la información de autenticación del usuario y la configuración de la sesión. pTHINC primero intenta conectarse al servidor y realizar el saludo necesario. Una vez que este proceso haya sido completado, pTHINC presenta al usuario la visualización más reciente de su sesión. Si la sesión no existe, se crea una nueva sesión. Las sesiones existentes pueden continuar sin problemas sin cambios en la configuración de la sesión o del servidor. A diferencia de otros sistemas de cliente ligero, pTHINC proporciona a un usuario un modelo de sesión web persistente en el que un usuario puede iniciar una sesión ejecutando un navegador web y aplicaciones asociadas en el servidor, luego desconectarse de esa sesión y volver a conectarse en cualquier momento. Cuando un usuario se reconecta a la sesión, todas las aplicaciones siguen funcionando desde donde el usuario las dejó, de modo que el usuario puede seguir trabajando como si nunca se hubiera desconectado. La capacidad de desconectarse y reconectarse a una sesión en cualquier momento es un beneficio importante para los usuarios de PDA inalámbricas móviles que pueden tener conectividad de red intermitente. El modelo de sesión web persistente de pTHINCs permite a un usuario reconectarse a una sesión web desde dispositivos distintos al que se inició originalmente la sesión web. Esto proporciona a los usuarios una movilidad fluida entre diferentes dispositivos. Si un usuario pierde su PDA, puede fácilmente usar otra PDA para acceder a su sesión web. Además, pTHINC permite a los usuarios utilizar dispositivos que no son PDA para acceder a sesiones web también. Un usuario puede acceder a la misma sesión web persistente en una PC de escritorio como en una PDA, lo que le permite al usuario utilizar la misma sesión web desde cualquier computadora. El modelo de sesión web persistente de pTHINCs aborda un problema clave encontrado por los usuarios de la web móvil, la falta de un entorno web común en diferentes computadoras. Los navegadores web a menudo almacenan información importante como marcadores, cookies e historial, lo que les permite funcionar de una manera mucho más útil. El problema que ocurre cuando un usuario se mueve entre computadoras es que estos datos, específicos de una instalación de un navegador web, no pueden moverse con el usuario. Además, los navegadores web a menudo necesitan aplicaciones auxiliares para procesar diferentes contenidos multimedia, y esas aplicaciones pueden no estar disponibles de manera consistente en todas las computadoras. pTHINC aborda este problema al permitir que un usuario utilice de forma remota el mismo entorno de navegador web y aplicaciones auxiliares desde cualquier computadora. Como resultado, pTHINC puede proporcionar un entorno de navegación web común y consistente para usuarios móviles en diferentes dispositivos sin requerirles intentar sincronizar repetidamente diferentes entornos de navegación web en múltiples máquinas. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC debe proporcionar mecanismos para admitir diferentes tamaños de pantalla y resoluciones. Con este fin, pTHINC proporciona una función de zoom que permite a un usuario acercar y alejar una pantalla y permite que la pantalla de una sesión web 144 Figura 1: teclas de acceso rápido de pTHINC se redimensione para adaptarse a la pantalla del dispositivo que se está utilizando. Por ejemplo, si el servidor está ejecutando una sesión web a 1024×768 pero el cliente es una PDA con una resolución de pantalla de 640×480, pTHINC redimensionará la pantalla del escritorio para que se ajuste a la pantalla más pequeña de la PDA. pTHINC proporciona al usuario de la PDA la opción de aumentar el tamaño de la pantalla haciendo zoom en diferentes partes de la pantalla. Los usuarios suelen estar familiarizados con el diseño general de los sitios web que visitan con frecuencia, y pueden aprovechar esta función de redimensionamiento para navegar mejor por las páginas web. Por ejemplo, un usuario puede alejarse de la pantalla para ver todo el contenido de la página y navegar por los hipervínculos, luego acercarse a una región de interés para obtener una mejor vista. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC también debe proporcionar mecanismos para admitir diferentes orientaciones de pantalla. En un entorno de escritorio, los usuarios suelen estar acostumbrados a tener las pantallas presentadas en modo horizontal, donde el ancho de la pantalla es mayor que su altura. Sin embargo, en un entorno de PDA, la elección no siempre es obvia. Algunos usuarios pueden preferir tener la pantalla en modo retrato, ya que es más fácil sostener el dispositivo en sus manos, mientras que otros pueden preferir el modo paisaje para minimizar la cantidad de desplazamiento lateral necesario para ver una página web. Para adaptarse a las preferencias de los usuarios de PDA, pTHINC proporciona una función de orientación que le permite rotar la pantalla de forma fluida entre el modo horizontal y vertical. El modo de paisaje es particularmente útil para los usuarios de pTHINC que acceden con frecuencia a sus sesiones web tanto en dispositivos de escritorio como en PDA, proporcionando a esos usuarios el mismo ajuste de paisaje familiar en diferentes dispositivos. Dado que el espacio de pantalla es un recurso relativamente escaso en las PDAs, pTHINC se ejecuta en modo de pantalla completa para maximizar el área de pantalla disponible para mostrar la sesión web. Para poder utilizar toda la pantalla en la PDA y aún así permitir al usuario controlar e interactuar con ella, pTHINC reutiliza los botones de acceso directo típicos que se encuentran en las PDAs para realizar todas las funciones de control disponibles para el usuario. Los botones utilizados por pTHINC no requieren ningún cambio en el entorno del sistema operativo; simplemente son interceptados por la aplicación cliente de pTHINC cuando se presionan. La Figura 1 muestra cómo pTHINC utiliza los botones de acceso directo para proporcionar una navegación sencilla y mejorar la experiencia del usuario en general. Estos botones no son específicos del dispositivo, y el diseño mostrado es común en dispositivos PocketPC ampliamente utilizados. pTHINC proporciona seis accesos directos para apoyar su modelo de uso: • Rotar pantalla: El botón de grabación en el borde izquierdo se utiliza para rotar la pantalla entre modo retrato y modo paisaje cada vez que se presiona el botón. • Alejar: El botón más a la izquierda en la parte inferior delantera se utiliza para alejar la visualización de la sesión web proporcionando una vista general de la sesión web. • Acercar: El segundo botón más a la izquierda en la parte inferior delantera se utiliza para acercar la visualización de la sesión web para ver más claramente el contenido de interés. • Desplazamiento direccional: El botón central en la parte inferior delantera se utiliza para desplazarse alrededor de la visualización utilizando un solo botón de control de una manera que ya es familiar para los usuarios de PDA. Esta función es particularmente útil cuando el usuario ha ampliado una región de la pantalla de tal manera que solo una parte de la pantalla es visible en la pantalla. • Mostrar/Ocultar Teclado: El segundo botón más a la derecha en la parte inferior frontal se utiliza para mostrar un teclado virtual dibujado en la pantalla para dispositivos que no tienen teclado físico. El teclado virtual utiliza mecanismos estándar del sistema operativo de PDA, proporcionando portabilidad entre diferentes entornos de PDA. • Cerrar sesión: El botón más a la derecha en la parte inferior frontal se utiliza para desconectarse de la sesión de pTHINC. pTHINC utiliza la pantalla táctil de la PDA, el lápiz óptico y mecanismos estándar de interfaz de usuario para proporcionar una metáfora de punto y clic de la interfaz de usuario similar a la proporcionada por el ratón en un entorno de computación de escritorio tradicional. pTHINC no utiliza un cursor ya que los entornos de PDA no lo proporcionan. En cambio, un usuario puede usar el lápiz táctil para tocar diferentes secciones de la pantalla táctil y señalar el enfoque de entrada. Un toque único en la pantalla táctil genera un evento de clic de ratón correspondiente. Un doble toque en la pantalla táctil genera un evento de doble clic del ratón correspondiente. pTHINC proporciona emulación de ratón de dos botones al usar el lápiz óptico para presionar la pantalla durante un segundo y generar un clic derecho del ratón. Todas estas acciones son idénticas a la forma en que los usuarios ya interactúan con las aplicaciones de PDA en el entorno común de PocketPC. En la navegación web, los usuarios pueden hacer clic en hipervínculos y enfocarse en cuadros de entrada simplemente tocando el área de interés deseada en la pantalla. A diferencia de los navegadores web PDA locales y otras aplicaciones PDA, pTHINC aprovecha metáforas de interfaz de usuario de escritorio más potentes para permitir a los usuarios manipular múltiples ventanas de aplicación abiertas en lugar de estar limitados a una sola ventana de aplicación en un momento dado. Esto proporciona una mayor flexibilidad de navegación más allá de lo que está actualmente disponible en los dispositivos PDA. Similar a un entorno de escritorio, las ventanas del navegador y otras ventanas de aplicaciones pueden ser movidas al presionar y arrastrar el lápiz óptico de manera similar a un ratón. 3. La arquitectura del sistema pTHINC se basa en la arquitectura de visualización remota THINC para proporcionar un sistema de cliente ligero para PDAs. pTHINC virtualiza la visualización en el servidor aprovechando la capa de abstracción del dispositivo de video, que se encuentra por debajo del servidor de ventanas y por encima del framebuffer. Este es un nivel de dispositivo bien definido y de bajo nivel que depende del dispositivo y expone el hardware de video al sistema de visualización. pTHINC logra esto a través de un controlador de pantalla virtual simple que intercepta comandos de dibujo, los empaqueta y los envía a través de la red. Mientras que otros enfoques de cliente ligero interceptan comandos de visualización en otras capas del subsistema de visualización, el enfoque de virtualización de pantalla de pTHINC proporciona algunos beneficios clave para admitir eficientemente a los clientes de PDA. Por ejemplo, interceptar comandos de visualización en una capa superior entre aplicaciones y el sistema de ventanas, como se hace en X [17], requiere replicar y ejecutar una gran cantidad de funcionalidades en la PDA que tradicionalmente son proporcionadas por el sistema de ventanas de escritorio. Dada la magnitud y complejidad de los sistemas de ventanas tradicionales, intentar replicar esta funcionalidad en el entorno restringido de una PDA habría resultado ser una tarea desafiante, y quizás inviable. Además, las aplicaciones y el sistema de ventanas a menudo requieren una sincronización precisa en su funcionamiento, y imponer una red inalámbrica entre ellos al ejecutar las aplicaciones en el servidor y el sistema de ventanas en el cliente degradaría significativamente el rendimiento. Por otro lado, interceptar en una capa inferior extrayendo píxeles del framebuffer a medida que se renderizan proporciona una solución simple que requiere muy poca funcionalidad en el cliente de PDA, pero también puede resultar en un rendimiento degradado. La razón es que para cuando el servidor de visualización remota intenta enviar actualizaciones de pantalla, ha perdido toda la información semántica que podría haberle ayudado a codificar de manera eficiente, y debe recurrir a utilizar un mecanismo de codificación genérico y costoso en el servidor, así como un mecanismo de decodificación potencialmente costoso en el cliente de PDA limitado. A diferencia de los enfoques de intercepción de alto y bajo nivel, el enfoque de pTHINCs de interceptar en el controlador del dispositivo proporciona un equilibrio efectivo entre la simplicidad del cliente y del servidor, y la capacidad de codificar y decodificar de manera eficiente las actualizaciones de pantalla. Al utilizar un enfoque de visualización virtual de bajo nivel, pTHINC puede codificar de manera eficiente los comandos de visualización de la aplicación utilizando solo un pequeño conjunto de comandos de bajo nivel. En un entorno de PDA, este conjunto de comandos proporciona un componente crucial para mantener la simplicidad del cliente en el entorno de PDA con recursos limitados. Los comandos de visualización se muestran en la Tabla 1 y funcionan de la siguiente manera. COPY instruye al cliente a copiar una región de la pantalla desde su framebuffer local a otra ubicación. Este comando mejora la experiencia del usuario al acelerar el desplazamiento y el movimiento de ventanas opacas sin necesidad de reenviar datos de pantalla desde el servidor. SFILL, PFILL y BITMAP son comandos que pintan una región de tamaño fijo en la pantalla. Son útiles para acelerar la visualización de fondos de ventanas sólidas, patrones de escritorio, fondos de páginas web, dibujo de texto y ciertas operaciones en programas de manipulación de gráficos. SFILL llena una región considerable en la pantalla con un solo color. PFILL replica una baldosa sobre una región de la pantalla. BITMAP realiza un relleno utilizando un mapa de bits de unos y ceros como un estipulado para aplicar un color de primer plano y de fondo. Finalmente, RAW se utiliza para transmitir datos de píxeles no codificados que se mostrarán textualmente en una región de la pantalla. Este comando se invoca como último recurso si el servidor no puede emplear ningún otro comando, y es el único comando que puede ser comprimido para mitigar su impacto en el ancho de banda de la red. pTHINC entrega sus comandos utilizando un mecanismo de actualización de servidor-push no bloqueante, donde tan pronto como se generan actualizaciones de pantalla en el servidor, se envían al cliente. Los clientes no están obligados a solicitar explícitamente actualizaciones de pantalla, minimizando así el impacto que la típica variabilidad de la latencia de la red inalámbrica puede tener en la capacidad de respuesta del sistema. Teniendo en cuenta que los recursos Descripción de Comando COPY Copiar un área de búfer de fotogramas en coordenadas especificadas SFILL Rellenar un área con un valor de color de píxel dado PFILL Azulejar un área con un patrón de píxeles dado BITMAP Rellenar una región usando un patrón de bits RAW Mostrar datos de píxeles en bruto en una ubicación dada Tabla 1: Comandos de visualización del protocolo pTHINC. Las PDAs y las redes inalámbricas limitadas pueden no ser capaces de mantenerse al día con un servidor rápido que genera una gran cantidad de actualizaciones, pTHINC es capaz de fusionar, recortar y descartar actualizaciones automáticamente si se produce pérdida o congestión de red, o si el cliente no puede mantenerse al día con la velocidad de las actualizaciones. Este tipo de comportamiento resulta crucial en un entorno de navegación web, donde por ejemplo, una página puede ser redibujada varias veces mientras se renderiza al vuelo por el navegador. En este caso, la PDA solo recibirá y mostrará el resultado final, que claramente es todo lo que al usuario le interesa ver. pTHINC prioriza la entrega de actualizaciones a la PDA utilizando un programador de actualizaciones preemptivo de Tamaño Restante Más Corto Primero (SRSF). SRSF es análogo a la programación de Tiempo de Procesamiento Restante más Corto, la cual se sabe que es óptima para minimizar el tiempo medio de respuesta en un sistema interactivo. En un entorno de navegación web, los trabajos cortos están asociados con el texto y los componentes básicos de diseño de página, como el fondo de las páginas, que son contenido web crítico para el usuario. Por otro lado, los trabajos grandes suelen ser elementos de embellecimiento de menor prioridad, o, incluso peor, banners y anuncios de página web, los cuales tienen un valor cuestionable para el usuario mientras navega por la página. Usando SRSF, pTHINC puede maximizar la utilización del ancho de banda relativamente escaso disponible en la conexión inalámbrica entre la PDA y el servidor. 3.1 Gestión de la Pantalla Para permitir a los usuarios acceder con la misma facilidad a su navegador web y aplicaciones auxiliares desde una computadora de escritorio en casa como desde una PDA mientras están en movimiento, pTHINC proporciona un mecanismo de redimensionamiento para hacer zoom dentro y fuera de la pantalla de una sesión web. El redimensionamiento de pTHINC es completamente compatible con el servidor, no con el cliente. El servidor vuelve a muestrear las actualizaciones para que se ajusten al área de visualización de las PDAs antes de ser transmitidas por la red. pTHINC utiliza el algoritmo de remuestreo de Fants para redimensionar las actualizaciones de píxeles. Esto proporciona actualizaciones suaves y visualmente agradables con un antialiasing adecuado y solo requiere modestos recursos computacionales. El enfoque de redimensionamiento de pTHINCs tiene varias ventajas. Primero, permite al PDA aprovechar la vastamente superior potencia computacional del servidor para utilizar algoritmos de re-muestreo de alta calidad y producir actualizaciones de mayor calidad para que el PDA las muestre. Segundo, cambiar el tamaño de la pantalla no se traduce en requisitos adicionales de recursos para la PDA, ya que no necesita realizar ningún trabajo adicional. Finalmente, se logra una mejor utilización de la red inalámbrica ya que al reescalar las actualizaciones se reducen sus requisitos de ancho de banda. Para permitir a los usuarios orientar sus pantallas en una PDA y así proporcionar una experiencia visual que se ajuste mejor a las preferencias del usuario y al diseño de páginas web o aplicaciones, pTHINC proporciona un mecanismo de rotación de pantalla para alternar entre los modos de visualización horizontal y vertical. La rotación de pantalla de pTHINC es completamente compatible con el cliente, no con el servidor. pTHINC no recalcula explícitamente la geometría de las actualizaciones de pantalla para realizar la rotación, lo cual sería computacionalmente costoso. En cambio, pTHINC simplemente cambia la forma en que los datos se copian en el framebuffer para cambiar entre los modos de visualización. Cuando está en modo retrato, los datos se copian a lo largo de las filas del framebuffer de izquierda a derecha. Cuando se encuentra en modo horizontal, los datos se copian a lo largo de las columnas del framebuffer de arriba hacia abajo. Estas técnicas muy rápidas y simples reemplazan un conjunto de operaciones de copia por otro y no imponen ningún sobrecosto de rendimiento. pTHINC proporciona su propio mecanismo de rotación para soportar una amplia gama de dispositivos sin imponer requisitos adicionales de funciones en la PDA. Aunque algunos dispositivos PDA más nuevos ofrecen soporte nativo para diferentes orientaciones, este mecanismo no es dinámico y requiere que el usuario rote toda la interfaz de usuario de la PDA antes de iniciar el cliente pTHINC. Windows Mobile proporciona mecanismos de API nativos para que las aplicaciones de PDA puedan rotar su interfaz de usuario sobre la marcha, pero estos mecanismos ofrecen un rendimiento deficiente y una calidad de visualización baja, ya que la rotación se realiza de manera ingenua y no es completamente precisa. 3.2 Reproducción de video El video se ha convertido gradualmente en una parte integral de la World Wide Web, y su presencia solo seguirá aumentando. Los sitios web de hoy en día no solo utilizan gráficos animados y flash para presentar el contenido web de manera atractiva, sino que también utilizan video en streaming para enriquecer la interfaz web. Los usuarios pueden ver noticias pregrabadas y en vivo en CNN, ver los momentos más destacados deportivos en ESPN e incluso buscar a través de una gran colección de videos en Google Video. Para permitir que las aplicaciones proporcionen una reproducción de video eficiente, se han creado interfaces en los sistemas de visualización que permiten a los controladores de dispositivos de video exponer sus capacidades de hardware a las aplicaciones. pTHINC aprovecha estas interfaces y su enfoque de controlador de dispositivo virtual para proporcionar un puente virtual entre el cliente remoto y su hardware y las aplicaciones, y admitir de manera transparente la reproducción de video. Sobre esta arquitectura, pTHINC utiliza el espacio de color YUV para codificar el contenido de video, lo cual proporciona una serie de beneficios. Primero, se ha vuelto cada vez más común que el hardware de video de las PDA admita nativamente YUV y pueda realizar la conversión del espacio de color y el escalado automáticamente. Como resultado, pTHINC puede proporcionar reproducción de video a pantalla completa sin afectar el rendimiento. Segundo, el uso de YUV permite una representación más eficiente de los datos RGB sin pérdida de calidad, aprovechando la capacidad de los ojos humanos para distinguir mejor las diferencias en brillo que en color. En particular, pTHINC utiliza el formato YV12, que permite codificar datos de color RGB completo utilizando solo 12 bits por píxel. Tercero, los datos YUV se producen como uno de los últimos pasos del proceso de decodificación de la mayoría de los códecs de video, lo que permite a pTHINC proporcionar la reproducción de video de una manera independiente del formato. Finalmente, aunque el hardware de video de las PDAs no pueda acelerar la reproducción, el proceso de conversión de espacio de color es lo suficientemente simple como para no imponer requisitos poco razonables en la PDA. Un ejemplo más concreto de cómo pTHINC aprovecha el hardware de video PDA para admitir la reproducción de video se puede ver en nuestra implementación de prototipo en la popular PDA Dell Axim X51v, que está equipada con el acelerador multimedia Intel 2700G. En este caso, pTHINC crea un búfer fuera de pantalla en la memoria de video y escribe y lee desde esta región de memoria datos en formato YV12. Cuando llega un nuevo fotograma de video, los datos de video se copian desde el búfer a una superficie superpuesta en la memoria de video, que es independiente de la superficie normal utilizada para el dibujo tradicional. A medida que los datos YV12 se colocan en la superposición, el acelerador de Intel realiza automáticamente la conversión de espacio de color y el escalado. Al utilizar la superficie de superposición, pTHINC no necesita volver a dibujar la pantalla una vez que la reproducción de video ha terminado, ya que la superficie superpuesta no se ve afectada. Además, las regiones de superposición específicas pueden ser manipuladas aprovechando el hardware de video, por ejemplo, para realizar interpolación lineal de hardware y suavizar el fotograma para mostrarlo a pantalla completa, y para realizar rotación automática cuando el cliente se ejecuta en modo horizontal. 4. RESULTADOS EXPERIMENTALES Hemos implementado un prototipo de pTHINC que ejecuta el cliente en dispositivos Pocket PC basados en Windows Mobile ampliamente utilizados y el servidor en sistemas operativos tanto Windows como Linux. Para demostrar su eficacia en el soporte de aplicaciones web inalámbricas móviles, hemos medido su rendimiento en aplicaciones web. Presentamos resultados experimentales sobre diferentes dispositivos PDA para dos aplicaciones web populares, navegar por páginas web y reproducir contenido de video desde la web. Comparamos pTHINC con aplicaciones web nativas que se ejecutan localmente en la PDA para demostrar la mejora que pTHINC puede proporcionar sobre el enfoque tradicional de cliente pesado. También comparamos pTHINC con tres de los clientes ligeros más utilizados que pueden ejecutarse en PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] y VNC (Virtual Network Computing) [16]. Seguimos la práctica común y nos referimos a Citrix MetaFrameXP y Microsoft Remote Desktop por sus respectivos protocolos de visualización remota, ICA (Independent Computing Architecture) y RDP (Remote Desktop Protocol). 4.1 Plataforma de Pruebas Experimental Realizamos nuestros experimentos web utilizando dos PDA Pocket PC inalámbricas diferentes en un entorno de prueba de red Wi-Fi aislado, como se muestra en la Figura 2. El banco de pruebas consistía en dos dispositivos cliente PDA, un monitor de paquetes, un servidor de cliente ligero y un servidor web. Excepto por las PDAs, todas las demás máquinas eran servidores IBM Netfinity 4500R con procesadores duales Intel PIII de 933 MHz y 512 MB de RAM, y estaban conectadas en una red FastEthernet de 100 Mbps conmutada. El servidor web utilizado fue Apache 1.3.27, el emulador de red fue NISTNet 2.0.12 y el monitor de paquetes fue Ethereal 0.10.9. Los clientes de PDA se conectaron al banco de pruebas a través de un punto de acceso inalámbrico Lucent Orinoco AP-2000 802.11b. Todos los experimentos utilizando la red inalámbrica se llevaron a cabo a una distancia de diez pies del punto de acceso, por lo que consideramos que la cantidad de pérdida de paquetes era insignificante en nuestros experimentos. Se utilizaron dos PDA Pocket PC para proporcionar resultados en modelos antiguos y menos potentes, así como en modelos más nuevos de mayor rendimiento. El modelo anterior era un Dell Axim X5 con 147 Cliente 1024×768 640×480 Profundidad Cambio de tamaño Clip RDP no sí 8 bits no sí VNC sí sí 16 bits no no ICA sí sí 16 bits sí no pTHINC sí sí 24 bits sí no Tabla 2: Configuración del banco de pruebas de cliente ligero con un CPU Intel XScale PXA255 de 400 MHz y 64 MB de RAM ejecutando Windows Mobile 2003 y una tarjeta Dell TrueMobile 1180 de 2.4 GHz CompactFlash para redes inalámbricas. El modelo más nuevo era un Dell Axim X51v con un procesador Intel XScale XPA270 de 624 MHz y 64 MB de RAM ejecutando Windows Mobile 5.0 y con red inalámbrica 802.11b integrada. El X51v tiene un acelerador multimedia Intel 2700G con 16MB de memoria de video. Ambas PDAs son capaces de mostrar colores de 16 bits pero tienen diferentes tamaños de pantalla y resoluciones de visualización. El X5 tiene una pantalla diagonal de 3.5 pulgadas con una resolución de 240×320. El X51v tiene una pantalla diagonal de 3.7 pulgadas con una resolución de 480×640. Los cuatro clientes ligeros que utilizamos admiten diferentes niveles de calidad de visualización, como se resume en la Tabla 2. El cliente de RDP solo admite una resolución de pantalla fija de 640×480 en el servidor con una profundidad de color de 8 bits, mientras que otras plataformas ofrecen niveles más altos de calidad de visualización. Para proporcionar una comparación justa en todas las plataformas, realizamos nuestros experimentos con sesiones de cliente ligero configuradas para dos posibles resoluciones, 1024×768 y 640×480. Tanto ICA como VNC se configuraron para usar la resolución nativa de PDA con una profundidad de color de 16 bits. El prototipo actual de pTHINC utiliza color de 24 bits directamente y el cliente reduce la resolución de las actualizaciones al nivel de color de 16 bits disponible en la PDA. RDP se configuró utilizando solo una profundidad de color de 8 bits ya que no admite ninguna profundidad de color mejor. Dado que tanto pTHINC como ICA ofrecen la capacidad de ver la pantalla redimensionada para ajustarse a la pantalla, medimos ambos clientes con y sin la pantalla redimensionada para ajustarse a la pantalla del PDA. Cada cliente ligero fue probado utilizando el modo de paisaje en lugar del modo retrato cuando estaba disponible. Todos los sistemas que se ejecutan en el X51v podrían funcionar en modo horizontal porque el hardware proporciona una función de modo horizontal. Sin embargo, el X5 no proporciona esta funcionalidad. Solo pTHINC admite directamente el modo paisaje, por lo que era el único sistema que podía ejecutarse en modo paisaje tanto en el X5 como en el X51v. Para proporcionar una comparación justa, también estandarizamos en hardware y sistemas operativos comunes siempre que sea posible. Todos los sistemas utilizaron el servidor Netfinity como servidor de cliente ligero. Para los dos sistemas diseñados para servidores Windows, ICA y RDP, ejecutamos Windows Server 2003 en el servidor. Para los otros sistemas que admiten servidores basados en X, ejecutamos la distribución Debian Linux Inestable con el kernel Linux 2.6.10 en el servidor. Utilizamos las últimas versiones de servidores de cliente ligero disponibles en cada plataforma en el momento de nuestros experimentos, a saber, Citrix MetaFrame XP Server para Windows Feature Release 3, Microsoft Remote Desktop integrado en Windows XP y Windows 2003 utilizando RDP 5.2, y VNC 4.0.4.2. Para los benchmarks de aplicaciones, utilizamos dos benchmarks de <br>aplicaciones web</br> para nuestros experimentos basados en dos escenarios de aplicación comunes, navegación por páginas web y reproducción de contenido de video desde la web. Dado que muchos sistemas de cliente ligero, incluidos dos de los probados, son cerrados y propietarios, medimos su rendimiento de manera no invasiva capturando el tráfico de red con un monitor de paquetes y utilizando una variante de benchmarking en cámara lenta [13] previamente desarrollada para medir el rendimiento de clientes ligeros en entornos de PDA [10]. Esta metodología de medición tiene en cuenta tanto el desacoplamiento de la visualización que puede ocurrir entre el cliente y el servidor en sistemas de cliente ligero, como el tiempo de procesamiento del cliente, que puede ser significativo en el caso de las PDAs. Para medir el rendimiento de la navegación web, utilizamos un benchmark de navegación web basado en la Prueba de Carga de Páginas de Texto Web del conjunto de benchmarks Ziff-Davis i-Bench [7]. El punto de referencia consiste en la carga controlada de 55 páginas desde el servidor web mediante JavaScript. Las páginas contienen tanto texto como gráficos, con páginas de diferentes tamaños. Los gráficos son imágenes incrustadas en formatos GIF y JPEG. El benchmark original i-Bench fue modificado para pruebas de rendimiento en cámara lenta al introducir retrasos de varios segundos entre las páginas utilizando JavaScript. Luego se realizaron dos pruebas, una en la que se agregaron retrasos entre cada página, y otra en la que las páginas se cargaron continuamente sin esperar a que se mostraran en el cliente. En la primera prueba, los retrasos se ajustaron lo suficiente en cada caso para garantizar que cada página pudiera ser recibida y mostrada en el cliente por completo sin solapamiento temporal en la transferencia de los datos pertenecientes a dos páginas consecutivas. Utilizamos el monitor de paquetes para registrar el tráfico de paquetes para cada ejecución de la prueba de referencia, luego utilizamos las marcas de tiempo del primer y último paquete en la traza para obtener nuestras medidas de latencia [10]. El monitor de paquetes también registró la cantidad de datos transmitidos entre el cliente y el servidor. La proporción entre el tráfico de datos en las dos pruebas produce un factor de escala. Este factor de escala muestra la pérdida de datos entre el servidor y el cliente debido a la incapacidad del cliente para procesar los datos lo suficientemente rápido. El producto del factor de escala con la medición de latencia produce la verdadera latencia teniendo en cuenta el tiempo de procesamiento del cliente. Para ejecutar la prueba de navegación web, utilizamos Mozilla Firefox 1.0.4 en el servidor de cliente ligero para los clientes ligeros, y Windows Internet Explorer (IE) Mobile para 2003 y Mobile para 5.0 para los navegadores nativos en las PDAs X5 y X51v, respectivamente. En todos los casos, el navegador web utilizado se ajustó para ocupar toda la región de visualización disponible. Para medir el rendimiento de reproducción de video, utilizamos un banco de pruebas de video que consistía en reproducir un clip de video MPEG-1 de 34.75 segundos que contenía una mezcla de noticias y programación de entretenimiento a resolución de pantalla completa. El videoclip tiene un tamaño de 5.11 MB y consta de 834 cuadros de píxeles de 352x240 con una velocidad de cuadro ideal de 24 cuadros por segundo. Medimos el rendimiento del video utilizando pruebas de referencia en cámara lenta al monitorear el tráfico de paquetes resultante a dos velocidades de reproducción, 1 cuadro por segundo (fps) y 24 fps, y comparando los resultados para determinar los retrasos en la reproducción y las caídas de cuadros que ocurren a 24 fps para medir la calidad general del video [13]. Por ejemplo, el 100% de calidad significa que todos los fotogramas del video se reprodujeron a velocidad en tiempo real. Por otro lado, una calidad del 50% podría significar que se eliminó la mitad de los datos del video, o que el clip tardó el doble en reproducirse a pesar de que se mostró toda la información del video. Para ejecutar la prueba de rendimiento de video, utilizamos Windows Media Player 9 para servidores de clientes ligeros basados en Windows, MPlayer 1.0 pre 6 para servidores de clientes ligeros basados en X, y Windows Media Player 9 Mobile y 10 Mobile para los reproductores de video nativos que se ejecutan localmente en las PDAs X5 y X51v, respectivamente. En todos los casos, el reproductor de video utilizado se dimensionó para llenar toda la región de visualización disponible. Las Figuras 3 y 4 muestran los resultados de ejecutar la prueba de navegación por la web. Para cada plataforma, mostramos resultados de hasta cuatro configuraciones diferentes, dos en el X5 y dos en el X51v, dependiendo de si cada configuración era compatible. Sin embargo, no todas las plataformas podrían admitir todas las configuraciones. El navegador local solo se ejecuta a la resolución de pantalla de la PDA, 480×680 o menos para el X51v y el X5. RDP solo funciona a 640×480. Ninguna plataforma podía soportar una resolución de pantalla de 1024×768. ICA solo funcionaba en el X5 y no podía ejecutarse en el X51v porque no era compatible con Windows Mobile 5. La Figura 3 muestra la latencia promedio por página web para cada plataforma. pTHINC proporciona la latencia promedio más baja en la navegación web en ambas PDAs. En el X5, pTHINC funciona hasta 70 veces mejor que otros sistemas de cliente ligero y 8 veces mejor que el navegador local. En el X51v, pTHINC funciona hasta 80 veces mejor que otros sistemas de cliente ligero y 7 veces mejor que el navegador nativo. De hecho, todos los clientes ligeros excepto VNC superan al navegador local de PDA, demostrando los beneficios de rendimiento del enfoque de cliente ligero. Los estudios de usabilidad han demostrado que las páginas web deben tardar menos de un segundo en descargarse para que el usuario experimente una navegación web ininterrumpida [14]. Las mediciones muestran que solo los clientes delgados ofrecen latencias de página web de menos de un segundo. Por el contrario, el navegador local requiere más de 3 segundos en promedio por página web. El navegador local funciona peor ya que necesita ejecutar un navegador web más limitado para procesar el HTML, JavaScript y realizar todo el renderizado utilizando las capacidades limitadas de la PDA. Los clientes ligeros pueden aprovecharse de hardware de servidor más rápido y un navegador web altamente optimizado para procesar el contenido web mucho más rápido. La Figura 3 muestra que RDP es la plataforma más rápida después de pTHINC. Sin embargo, RDP solo puede ejecutarse a una resolución fija de 640×480 y una profundidad de color de 8 bits. Además, RDP también recorta la pantalla al tamaño de la pantalla de la PDA para no tener que enviar actualizaciones que no son visibles en la pantalla de la PDA. Esto proporciona un beneficio de rendimiento siempre y cuando el resto del contenido web no se visualice, pero degrada el rendimiento cuando un usuario desplaza la pantalla para ver otro contenido web. RDP logra su rendimiento con una calidad de visualización significativamente inferior en comparación con otros clientes ligeros y con recortes adicionales en la visualización que no son utilizados por otros sistemas. Como resultado, el rendimiento de RDP por sí solo no proporciona una comparación completa con las otras plataformas. Por el contrario, pTHINC ofrece el mejor rendimiento al mismo tiempo que proporciona una calidad de visualización igual o mejor que los otros sistemas. Dado que VNC e ICA ofrecen una calidad de visualización similar a pTHINC, estos sistemas proporcionan una comparación más justa de diferentes enfoques de cliente ligero. ICA funciona peor en parte porque utiliza primitivas de visualización de nivel superior que requieren costos adicionales de procesamiento por parte del cliente. VNC funciona peor en parte porque pierde datos de visualización debido a su mecanismo de entrega de cliente-pull y debido a los costos de procesamiento del cliente en descomprimir primitivas de píxeles crudos. En ambos casos, su rendimiento se vio limitado en parte porque sus clientes de PDA no podían mantenerse al ritmo al que se mostraban las páginas web. La Figura 3 también muestra las medidas para aquellos clientes ligeros que admiten redimensionar la pantalla para ajustarse a la pantalla de la PDA, a saber, ICA y pTHINC. El redimensionamiento requiere un procesamiento adicional, lo que resulta en latencias promedio más lentas de las páginas web. Las mediciones muestran que el retraso adicional incurrido por ICA al cambiar el tamaño es mucho más sustancial que para pTHINC. ICA realiza redimensionamiento en el cliente PDA más lento. Por el contrario, pTHINC aprovecha el servidor más potente para redimensionar, reduciendo la diferencia de rendimiento entre redimensionar y no redimensionar. A diferencia de ICA, pTHINC es capaz de proporcionar latencias de descarga de páginas web en menos de un segundo en ambos casos. La Figura 4 muestra los datos transferidos en KB por página al ejecutar la versión de cámara lenta de las pruebas. Todas las plataformas tienen requisitos modestos de transferencia de datos de aproximadamente 100 KB por página o menos. Esto está bien dentro de la capacidad de ancho de banda de las redes Wi-Fi. Las mediciones muestran que el navegador local no transfiere la menor cantidad de datos. Esto es sorprendente ya que HTML suele considerarse una representación muy compacta del contenido. En cambio, RDP es la plataforma más eficiente en ancho de banda, en gran parte debido a que utiliza solo una profundidad de color de 8 bits y recorte de pantalla para no transferir la página web completa al cliente. En general, pTHINC tiene los mayores requisitos de datos, ligeramente más que VNC. Esto se debe en gran medida a la falta de soporte nativo de los prototipos actuales de pTHINC para datos de color de 16 bits en el protocolo de comunicación. Sin embargo, este resultado también destaca el rendimiento de pTHINCs, ya que es más rápido que todos los demás sistemas incluso al transferir más datos. Además, dado que los modelos más recientes de PDA admiten colores completos de 24 bits, estos resultados indican que pTHINC seguirá proporcionando un buen rendimiento en la navegación web. Dado que la usabilidad y la calidad de la pantalla son tan importantes como el rendimiento, las Figuras 5 a 8 comparan capturas de pantalla de los diferentes clientes ligeros al mostrar una página web, en este caso del popular sitio de noticias de la BBC. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo paisaje. Figura 5: Captura de pantalla del navegador: RDP 640x480. Figura 6: Captura de pantalla del navegador: VNC 1024x768. Figura 7: Captura de pantalla del navegador: ICA redimensionado 1024x768. Figura 8: Captura de pantalla del navegador: pTHINC redimensionado 1024x768 utilizando la configuración de resolución de pantalla máxima para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Si bien las capturas de pantalla carecen de la fidelidad visual de la pantalla real del dispositivo, se pueden hacer varias observaciones. La Figura 5 muestra que RDP no admite el modo de pantalla completa y desperdicia mucho espacio en pantalla para controles y elementos de la interfaz de usuario, lo que obliga al usuario a desplazarse para acceder a todo el contenido de la sesión de navegación web. La Figura 6 muestra que VNC aprovecha mejor el espacio de la pantalla y ofrece una mejor calidad de visualización, pero aún obliga al usuario a desplazarse para ver la página web debido a la falta de soporte para redimensionar. La Figura 7 muestra la capacidad de ICA para mostrar la página web completa dada su soporte de redimensionamiento, pero su falta de capacidad en modo paisaje y su algoritmo de redimensionamiento deficiente comprometen significativamente la calidad de visualización. Por el contrario, la Figura 8 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de pantalla completa de alta calidad del ancho completo de la página web. pTHINC maximiza toda la región de visualización moviendo todos los controles a los botones de la PDA. Además, pTHINC aprovecha la potencia computacional del servidor para utilizar un algoritmo de redimensionamiento de alta calidad y ajustar la pantalla al tamaño de la PDA sin un sobrecoste significativo. Las figuras 9 y 10 muestran los resultados de ejecutar la prueba de reproducción de video. Para cada plataforma excepto ICA, mostramos resultados para una configuración X5 y X51v. ICA no pudo ejecutarse en el X51v como se mencionó anteriormente. Las mediciones se realizaron utilizando configuraciones que reflejaban el entorno desde el cual un usuario tendría que acceder a una sesión web tanto desde una computadora de escritorio como desde una PDA. Por lo tanto, se utilizó una resolución de pantalla del servidor de 1024×768 siempre que fuera posible y el video se mostró a pantalla completa. La resolución de pantalla de RDP se limitaba a 640×480, como se mencionó anteriormente. Dado que ver toda la pantalla del video es la única opción realmente utilizable, redimensionamos la pantalla para que se ajustara a la pantalla de la PDA en aquellas plataformas que admitían esta función, a saber, ICA y pTHINC. La Figura 9 muestra la calidad de video para cada plataforma. pTHINC es el único cliente ligero capaz de proporcionar una calidad de reproducción de video perfecta, similar al reproductor de video nativo de PDA. Todos los demás clientes ligeros ofrecen una calidad de video muy pobre. Con la excepción de RDP en el X51v que proporcionó una calidad de video inaceptable del 35%, ninguno de los otros sistemas pudo siquiera alcanzar el 10% de calidad de video. VNC e ICA tienen la peor calidad al 8% en el dispositivo X5. El soporte de video nativo de pTHINCs permite un rendimiento de video superior, mientras que otros clientes ligeros sufren de su incapacidad para distinguir el video de las actualizaciones normales de la pantalla. Intentan aplicar algoritmos de compresión ineficaces y costosos en los datos de video y no pueden mantenerse al día con la corriente de actualizaciones generadas, lo que resulta en cuadros omitidos o largos tiempos de reproducción. VNC se ve aún más afectado por su modelo de actualización de cliente-pull porque los fotogramas de video se generan más rápido que la velocidad a la que el cliente puede procesar y enviar solicitudes al servidor para obtener la siguiente actualización de pantalla. La Figura 10 muestra los datos totales transferidos durante la reproducción de video a pantalla completa para cada sistema. El reproductor nativo es la plataforma más eficiente en ancho de banda, enviando menos de 6 MB de datos, lo que corresponde a aproximadamente 1.2 Mbps de ancho de banda. La calidad de video al 100% de pTHINCs requiere alrededor de 25 MB de datos, lo que corresponde a un uso de ancho de banda de menos de 6 Mbps. Mientras que los otros clientes ligeros envían menos datos que THINC, lo hacen porque están eliminando datos de video, lo que resulta en una calidad de video degradada. Las figuras 11 a 14 comparan capturas de pantalla de los distintos clientes ligeros al mostrar el videoclip. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo horizontal utilizando la configuración de resolución máxima de pantalla para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Las figuras 11 y 12 muestran que RDP y VNC no pueden mostrar el cuadro completo del video en la pantalla de la PDA. RDP desperdicia espacio en pantalla para los elementos de la interfaz de usuario y VNC solo muestra la esquina superior del marco de video en la pantalla. La Figura 13 muestra que el ICA proporciona redimensionamiento para mostrar todo el fotograma del video, pero no redimensiona proporcionalmente los datos del video, lo que resulta en artefactos de visualización extraños. Por el contrario, la Figura 14 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de alta calidad a pantalla completa de todo el fotograma del video. pTHINC ofrece una visualización de video visualmente más atractiva que RDP, VNC o ICA. 5. TRABAJOS RELACIONADOS Varios estudios han examinado el rendimiento de la navegación web en la computación de cliente ligero [13, 19, 10]. La capacidad de los clientes ligeros para mejorar el rendimiento de la navegación web en PDAs inalámbricas fue demostrada cuantitativamente por primera vez en un estudio previo realizado por uno de los autores [10]. Este estudio demostró que los clientes ligeros pueden ofrecer tanto un rendimiento de navegación web más rápido como una mayor funcionalidad de navegación web. El estudio consideró una amplia gama de contenido web, incluido el contenido de sistemas de información médica. Nuestro trabajo se basa en este estudio previo y considera temas importantes como la usabilidad de los clientes ligeros existentes en entornos de PDA, los compromisos entre la usabilidad y el rendimiento de los clientes ligeros, el rendimiento en diferentes dispositivos de PDA y el rendimiento de los clientes ligeros en aplicaciones web comunes como el video. Se han desarrollado muchos clientes ligeros y algunos tienen clientes de PDA, incluyendo Remote Desktop de Microsoft [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5] y Tarantella [18]. Estos sistemas fueron diseñados inicialmente para computadoras de escritorio y adaptados posteriormente para asistentes digitales personales (PDA). A diferencia de pTHINC, no abordan los problemas clave de arquitectura del sistema y usabilidad importantes para las PDAs. Esto limita la calidad de visualización, el rendimiento del sistema, el espacio de pantalla disponible y la usabilidad general en PDAs. pTHINC se basa en trabajos anteriores de dos de los autores sobre THINC [1], ampliando la arquitectura del servidor e introduciendo una interfaz de cliente y un modelo de uso para admitir eficientemente dispositivos PDA en aplicaciones web móviles. Otros enfoques para mejorar el rendimiento de la navegación web inalámbrica móvil se han centrado en el uso de proxies de transcodificación y almacenamiento en caché en conjunto con el modelo de cliente pesado [11, 9, 4, 8]. Trabajan mediante el envío de funcionalidades a proxies externos y utilizando aplicaciones de navegación especializadas en el dispositivo PDA que se comunican con el proxy. Nuestro enfoque de cliente ligero difiere fundamentalmente de estos enfoques de cliente pesado al trasladar toda la lógica del navegador web al servidor, aprovechando las inversiones existentes en navegadores web de escritorio y aplicaciones auxiliares para funcionar de manera integrada con los sistemas de producción sin necesidad de configuraciones adicionales de proxy o modificaciones en el navegador web. Con la aparición de la navegación web en dispositivos con pantallas pequeñas, los sitios web han sido rediseñados utilizando mecanismos como WAP y se han desarrollado navegadores web nativos especializados para adaptarse a las necesidades de estos dispositivos. Recientemente, Opera ha desarrollado el navegador web Opera Mini [15], que utiliza un enfoque similar al modelo de cliente ligero para proporcionar acceso a través de una serie de dispositivos móviles que normalmente no podrían ejecutar un navegador web. En lugar de requerir que el dispositivo procese las páginas web, utiliza un servidor remoto para preprocesar la página antes de enviarla al teléfono. CONCLUSIONES Hemos introducido pTHINC, una arquitectura de cliente ligero para PDAs inalámbricas. pTHINC proporciona mecanismos arquitectónicos y de usabilidad clave como el redimensionamiento de pantalla en el lado del servidor, rotación de pantalla en el lado del cliente utilizando técnicas simples de copia, soporte de video YUV, y maximización del espacio de pantalla para actualizaciones de visualización y aprovechamiento de los botones de control existentes en las PDAs para elementos de la interfaz de usuario. pTHINC soporta de manera transparente navegadores de escritorio tradicionales y sus aplicaciones auxiliares en dispositivos PDA y computadoras de escritorio, brindando a los usuarios móviles acceso ubicuo a un entorno web consistente, personalizado y completo en dispositivos heterogéneos. Hemos implementado pTHINC y medido su rendimiento en aplicaciones web en comparación con los sistemas de cliente ligero existentes y las aplicaciones web nativas. Nuestros resultados en múltiples dispositivos móviles inalámbricos demuestran que pTHINC ofrece un rendimiento de navegación web hasta 80 veces mejor que los sistemas de cliente ligero existentes, y 8 veces mejor que un navegador PDA nativo. Además, pTHINC es el único cliente ligero de PDA 151 Figura 11: Captura de pantalla de video: RDP 640x480 Figura 12: Captura de pantalla de video: VNC 1024x768 Figura 13: Captura de pantalla de video: ICA redimensionado 1024x768 Figura 14: Captura de pantalla de video: pTHINC redimensionado 1024x768 que proporciona de manera transparente la reproducción de video a pantalla completa y a velocidad de cuadro completa, haciendo que los sitios web con contenido multimedia sean accesibles para los usuarios de la web móvil. 7. AGRADECIMIENTOS Este trabajo fue apoyado en parte por las subvenciones NSF ITR CCR0219943 y CNS-0426623, y un premio IBM SUR. 8. REFERENCIAS [1] R. Baratto, L. Kim y J. Nieh. THINC: Una arquitectura de visualización virtual para la computación de cliente ligero. En Actas del 20º Simposio de Principios de Sistemas Operativos de la ACM (SOSP), octubre de 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius y A. Muir. Microsoft Windows NT Server 4.0, Terminal Server Edition: Referencia Técnica. Microsoft Press, Redmond, WA, 1999. [4] A.\nMicrosoft Press, Redmond, WA, 1999. [4] A. Fox, I. Goldberg, S. D. Gribble y D. C. Lee. Experiencia con Top Gun Wingman: un navegador web gráfico basado en proxy para el 3Com PalmPilot. En Actas de Middleware 98, Lake District, Inglaterra, septiembre de 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Ley de Portabilidad y Responsabilidad del Seguro de Salud. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench versión 1.5. http://etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi. Sobre agentes de proxy, movilidad y acceso web. Redes y aplicaciones móviles, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon y A. Ortega. Diseño e Implementación de un Proxy de Caché Blando. Redes de Computadoras y Sistemas ISDN, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana y S. Varshneya. Mejorando la navegación web en PDAs inalámbricas utilizando computación de cliente ligero. En Actas de la 13ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham y P. Shenoy. TranSquid: Proxy de transcodificación y almacenamiento en caché para entornos de comercio electrónico heterogéneos. En Actas del 12º Taller IEEE sobre Problemas de Investigación en Ingeniería de Datos (RIDE 02), febrero de 2002. [12] Visor VNC .NET para PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang y N. Novik. Midiendo el rendimiento de clientes ligeros utilizando pruebas de referencia en cámara lenta. ACM Trans. Sistemas de Computación, 21(1):87-115, Feb. 2003. [14] J. Nielsen. Diseño de Usabilidad en la Web. New Riders Publishing, Indianápolis, IN, 2000. [15] Navegador Opera Mini. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood y A. Hopper. Computación de Red Virtual. IEEE Internet Computing, 2(1), enero/febrero de 1998. [17] R. W. Scheifler y J. Gettys. El Sistema de Ventanas X. ACM Trans. Gr., 5(2):79-106, Abr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla y M. Sajjadpour. Rendimiento de la navegación web en computación inalámbrica de cliente ligero. En Actas de la 12ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2003. 152 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "mobile wireless pda": {
            "translated_key": "PDA inalámbricas móviles",
            "is_in_text": true,
            "original_annotated_sentences": [
                "pTHINC: A Thin-Client Architecture for Mobile Wireless Web Joeng Kim, Ricardo A. Baratto, and Jason Nieh Department of Computer Science Columbia University, New York, NY, USA {jk2438, ricardo, nieh}@cs.columbia.edu ABSTRACT Although web applications are gaining popularity on mobile wireless PDAs, web browsers on these systems can be quite slow and often lack adequate functionality to access many web sites.",
                "We have developed pTHINC, a PDA thinclient solution that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide high-fidelity display and seamless mobility across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available screen resolution for application display.",
                "We have implemented pTHINC on Windows Mobile and evaluated its performance on mobile wireless devices.",
                "Our results compared to local PDA web browsers and other thin-client approaches demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "Categories and Subject Descriptors: C.2.4 ComputerCommunication-Networks: Distributed Systems - client/ server General Terms: Design, Experimentation, Performance 1.",
                "INTRODUCTION The increasing ubiquity of wireless networks and decreasing cost of hardware is fueling a proliferation of mobile wireless handheld devices, both as standalone wireless Personal Digital Assistants (PDA) and popular integrated PDA/cell phone devices.",
                "These devices are enabling new forms of mobile computing and communication.",
                "Service providers are leveraging these devices to deliver pervasive web access, and mobile web users already often use these devices to access web-enabled information such as news, email, and localized travel guides and maps.",
                "It is likely that within a few years, most of the devices accessing the web will be mobile.",
                "Users typically access web content by running a web browser and associated helper applications locally on the PDA.",
                "Although native web browsers exist for PDAs, they deliver subpar performance and have a much smaller feature set and more limited functionality than their desktop computing counterparts [10].",
                "As a result, PDA web browsers are often not able to display web content from web sites that leverage more advanced web technologies to deliver a richer web experience.",
                "This fundamental problem arises for two reasons.",
                "First, because PDAs have a completely different hardware/software environment from traditional desktop computers, web applications need to be rewritten and customized for PDAs if at all possible, duplicating development costs.",
                "Because the desktop application market is larger and more mature, most development effort generally ends up being spent on desktop applications, resulting in greater functionality and performance than their PDA counterparts.",
                "Second, PDAs have a more resource constrained environment than traditional desktop computers to provide a smaller form factor and longer battery life.",
                "Desktop web browsers are large, complex applications that are unable to run on a PDA.",
                "Instead, developers are forced to significantly strip down these web browsers to provide a usable PDA web browser, thereby crippling PDA browser functionality.",
                "Thin-client computing provides an alternative approach for enabling pervasive web access from handheld devices.",
                "A thin-client computing system consists of a server and a client that communicate over a network using a remote display protocol.",
                "The protocol enables graphical displays to be virtualized and served across a network to a client device, while application logic is executed on the server.",
                "Using the remote display protocol, the client transmits user input to the server, and the server returns screen updates of the applications from the server to the client.",
                "Using a thin-client model for mobile handheld devices, PDAs can become simple stateless clients that leverage the remote server capabilities to execute web browsers and other helper applications.",
                "The thin-client model provides several important benefits for mobile wireless web.",
                "First, standard desktop web applications can be used to deliver web content to PDAs without rewriting or adapting applications to execute on a PDA, reducing development costs and leveraging existing software investments.",
                "Second, complex web applications can be executed on powerful servers instead of running stripped down versions on more resource constrained PDAs, providing greater functionality and better performance [10].",
                "Third, web applications can take advantage of servers with faster networks and better connectivity, further boosting application performance.",
                "Fourth, PDAs can be even simpler devices since they do not need to perform complex application logic, potentially reducing energy consumption and extend143 ing battery life.",
                "Finally, PDA thin clients can be essentially stateless appliances that do not need to be backed up or restored, require almost no maintenance or upgrades, and do not store any sensitive data that can be lost or stolen.",
                "This model provides a viable avenue for medical organizations to comply with HIPAA regulations [6] while embracing mobile handhelds in their day to day operations.",
                "Despite these potential advantages, thin clients have been unable to provide the full range of these benefits in delivering web applications to mobile handheld devices.",
                "Existing thin clients were not designed for PDAs and do not account for important usability issues in the context of small form factor devices, resulting in difficulty in navigating displayed web content.",
                "Furthermore, existing thin clients are ineffective at providing seamless mobility across the heterogeneous mix of device display sizes and resolutions.",
                "While existing thin clients can already provide faster performance than native PDA web browsers in delivering HTML web content, they do not effectively support more display-intensive web helper applications such as multimedia video, which is increasingly an integral part of available web content.",
                "To harness the full potential of thin-client computing in providing mobile wireless web on PDAs, we have developed pTHINC (PDA THin-client InterNet Computing). pTHINC builds on our previous work on THINC [1] to provide a thinclient architecture for mobile handheld devices. pTHINC virtualizes and resizes the display on the server to efficiently deliver high-fidelity screen updates to a broad range of different clients, screen sizes, and screen orientations, including both portrait and landscape viewing modes.",
                "This enables pTHINC to provide the same persistent web session across different client devices.",
                "For example, pTHINC can provide the same web browsing session appropriately scaled for display on a desktop computer and a PDA so that the same cookies, bookmarks, and other meta-data are continuously available on both machines simultaneously. pTHINCs virtual display approach leverages semantic information available in display commands, and client-side video hardware to provide more efficient remote display mechanisms that are crucial for supporting more display-intensive web applications.",
                "Given limited display resolution on PDAs, pTHINC maximizes the use of screen real estate for remote display by moving control functionality from the screen to readily available PDA control buttons, improving system usability.",
                "We have implemented pTHINC on Windows Mobile and demonstrated that it works transparently with existing applications, window systems, and operating systems, and does not require modifying, recompiling, or relinking existing software.",
                "We have quantitatively evaluated pTHINC against local PDA web browsers and other thin-client approaches on Pocket PC devices.",
                "Our experimental results demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "This paper presents the design and implementation of pTHINC.",
                "Section 2 describes the overall usage model and usability characteristics of pTHINC.",
                "Section 3 presents the design and system architecture of pTHINC.",
                "Section 4 presents experimental results measuring the performance of pTHINC on web applications and comparing it against native PDA browsers and other popular PDA thin-client systems.",
                "Section 5 discusses related work.",
                "Finally, we present some concluding remarks. 2.",
                "PTHINC USAGE MODEL pTHINC is a thin-client system that consists of a simple client viewer application that runs on the PDA and a server that runs on a commodity PC.",
                "The server leverages more powerful PCs to to run web browsers and other application logic.",
                "The client takes user input from the PDA stylus and virtual keyboard and sends them to the server to pass to the applications.",
                "Screen updates are then sent back from the server to the client for display to the user.",
                "When the pTHINC PDA client is started, the user is presented with a simple graphical interface where information such as server address and port, user authentication information, and session settings can be provided. pTHINC first attempts to connect to the server and perform the necessary handshaking.",
                "Once this process has been completed, pTHINC presents the user with the most recent display of his session.",
                "If the session does not exist, a new session is created.",
                "Existing sessions can be seamlessly continued without changes in the session setting or server configuration.",
                "Unlike other thin-client systems, pTHINC provides a user with a persistent web session model in which a user can launch a session running a web browser and associated applications at the server, then disconnect from that session and reconnect to it again anytime.",
                "When a user reconnects to the session, all of the applications continue running where the user left off, so that the user can continue working as though he or she never disconnected.",
                "The ability to disconnect and reconnect to a session at anytime is an important benefit for <br>mobile wireless pda</br> users which may have intermittent network connectivity. pTHINCs persistent web session model enables a user to reconnect to a web session from devices other than the one on which the web session was originally initiated.",
                "This provides users with seamless mobility across different devices.",
                "If a user loses his PDA, he can easily use another PDA to access his web session.",
                "Furthermore, pTHINC allows users to use non-PDA devices to access web sessions as well.",
                "A user can access the same persistent web session on a desktop PC as on a PDA, enabling a user to use the same web session from any computer. pTHINCs persistent web session model addresses a key problem encountered by mobile web users, the lack of a common web environment across computers.",
                "Web browsers often store important information such as bookmarks, cookies, and history, which enable them to function in a much more useful manner.",
                "The problem that occurs when a user moves between computers is that this data, which is specific to a web browser installation, cannot move with the user.",
                "Furthermore, web browsers often need helper applications to process different media content, and those applications may not be consistently available across all computers. pTHINC addresses this problem by enabling a user to remotely use the exact same web browser environment and helper applications from any computer.",
                "As a result, pTHINC can provide a common, consistent web browsing environment for mobile users across different devices without requiring them to attempt to repeatedly synchronize different web browsing environments across multiple machines.",
                "To enable a user to access the same web session on different devices, pTHINC must provide mechanisms to support different display sizes and resolutions.",
                "Toward this end, pTHINC provides a zoom feature that enables a user to zoom in and out of a display and allows the display of a web 144 Figure 1: pTHINC shortcut keys session to be resized to fit the screen of the device being used.",
                "For example, if the server is running a web session at 1024×768 but the client is a PDA with a display resolution of 640×480, pTHINC will resize the desktop display to fit the full display in the smaller screen of the PDA. pTHINC provides the PDA user with the option to increase the size of the display by zooming in to different parts of the display.",
                "Users are often familiar with the general layout of commonly visited websites, and are able to leverage this resizing feature to better navigate through web pages.",
                "For example, a user can zoom out of the display to view the entire page content and navigate hyperlinks, then zoom in to a region of interest for a better view.",
                "To enable a user to access the same web session on different devices, pTHINC must also provide mechanisms to support different display orientations.",
                "In a desktop environment, users are typically accustomed to having displays presented in landscape mode where the screen width is larger than its height.",
                "However, in a PDA environment, the choice is not always obvious.",
                "Some users may prefer having the display in portrait mode, as it is easier to hold the device in their hands, while others may prefer landscape mode in order to minimize the amount of side-scrolling necessary to view a web page.",
                "To accommodate PDA user preferences, pTHINC provides an orientation feature that enables it to seamless rotate the display between landscape and portrait mode.",
                "The landscape mode is particularly useful for pTHINC users who frequently access their web sessions on both desktop and PDA devices, providing those users with the same familiar landscape setting across different devices.",
                "Because screen space is a relatively scarce resource on PDAs, pTHINC runs in fullscreen mode to maximize the screen area available to display the web session.",
                "To be able to use all of the screen on the PDA and still allow the user to control and interact with it, pTHINC reuses the typical shortcut buttons found on PDAs to perform all the control functions available to the user.",
                "The buttons used by pTHINC do not require any OS environment changes; they are simply intercepted by the pTHINC client application when they are pressed.",
                "Figure 1 shows how pTHINC utilizes the shortcut buttons to provide easy navigation and improve the overall user experience.",
                "These buttons are not device specific, and the layout shown is common to widelyused PocketPC devices. pTHINC provides six shortcuts to support its usage model: • Rotate Screen: The record button on the left edge is used to rotate the screen between portrait and landscape mode each time the button is pressed. • Zoom Out: The leftmost button on the bottom front is used to zoom out the display of the web session providing a birds eye view of the web session. • Zoom In: The second leftmost button on the bottom front is used to zoom in the display of the web session to more clearly view content of interest. • Directional Scroll: The middle button on the bottom front is used to scroll around the display using a single control button in a way that is already familiar to PDA users.",
                "This feature is particularly useful when the user has zoomed in to a region of the display such that only part of the display is visible on the screen. • Show/Hide Keyboard: The second rightmost button on the bottom front is used to bring up a virtual keyboard drawn on the screen for devices which have no physical keyboard.",
                "The virtual keyboard uses standard PDA OS mechanisms, providing portability across different PDA environments. • Close Session: The rightmost button on the bottom front is used to disconnect from the pTHINC session. pTHINC uses the PDA touch screen, stylus, and standard user interface mechanisms to provide a user interface pointand-click metaphor similar to that provided by the mouse in a traditional desktop computing environment. pTHINC does not use a cursor since PDA environments do not provide one.",
                "Instead, a user can use the stylus to tap on different sections of the touch screen to indicate input focus.",
                "A single tap on the touch screen generates a corresponding single click mouse event.",
                "A double tap on the touch screen generates a corresponding double click mouse event. pTHINC provides two-button mouse emulation by using the stylus to press down on the screen for one second to generate a right mouse click.",
                "All of these actions are identical to the way users already interact with PDA applications in the common PocketPC environment.",
                "In web browsing, users can click on hyperlinks and focus on input boxes by simply tapping on the desired screen area of interest.",
                "Unlike local PDA web browsers and other PDA applications, pTHINC leverages more powerful desktop user interface metaphors to enable users to manipulate multiple open application windows instead of being limited to a single application window at any given moment.",
                "This provides increased browsing flexibility beyond what is currently available on PDA devices.",
                "Similar to a desktop environment, browser windows and other application windows can be moved around by pressing down and dragging the stylus similar to a mouse. 3.",
                "PTHINC SYSTEM ARCHITECTURE pTHINC builds on the THINC [1] remote display architecture to provide a thin-client system for PDAs. pTHINC virtualizes the display at the server by leveraging the video device abstraction layer, which sits below the window server and above the framebuffer.",
                "This is a well-defined, low-level, device-dependent layer that exposes the video hardware to the display system. pTHINC accomplishes this through a simple virtual display driver that intercepts drawing commands, packetizes, and sends them over the network. 145 While other thin-client approaches intercept display commands at other layers of the display subsystem, pTHINCs display virtualization approach provides some key benefits in efficiently supporting PDA clients.",
                "For example, intercepting display commands at a higher layer between applications and the window system as is done by X [17] requires replicating and running a great deal of functionality on the PDA that is traditionally provided by the desktop window system.",
                "Given both the size and complexity of traditional window systems, attempting to replicate this functionality in the restricted PDA environment would have proven to be a daunting, and perhaps unfeasible task.",
                "Furthermore, applications and the window system often require tight synchronization in their operation and imposing a wireless network between them by running the applications on the server and the window system on the client would significantly degrade performance.",
                "On the other hand, intercepting at a lower layer by extracting pixels out of the framebuffer as they are rendered provides a simple solution that requires very little functionality on the PDA client, but can also result in degraded performance.",
                "The reason is that by the time the remote display server attempts to send screen updates, it has lost all semantic information that may have helped it encode efficiently, and it must resort to using a generic and expensive encoding mechanism on the server, as well as a potentially expensive decoding mechanism on the limited PDA client.",
                "In contrast to both the high and low level interception approaches, pTHINCs approach of intercepting at the device driver provides an effective balance between client and server simplicity, and the ability to efficiently encode and decode screen updates.",
                "By using a low-level virtual display approach, pTHINC can efficiently encode application display commands using only a small set of low-level commands.",
                "In a PDA environment, this set of commands provides a crucial component in maintaining the simplicity of the client in the resourceconstrained PDA environment.",
                "The display commands are shown in Table 1, and work as follows.",
                "COPY instructs the client to copy a region of the screen from its local framebuffer to another location.",
                "This command improves the user experience by accelerating scrolling and opaque window movement without having to resend screen data from the server.",
                "SFILL, PFILL, and BITMAP are commands that paint a fixed-size region on the screen.",
                "They are useful for accelerating the display of solid window backgrounds, desktop patterns, backgrounds of web pages, text drawing, and certain operations in graphics manipulation programs.",
                "SFILL fills a sizable region on the screen with a single color.",
                "PFILL replicates a tile over a screen region.",
                "BITMAP performs a fill using a bitmap of ones and zeros as a stipple to apply a foreground and background color.",
                "Finally, RAW is used to transmit unencoded pixel data to be displayed verbatim on a region of the screen.",
                "This command is invoked as a last resort if the server is unable to employ any other command, and it is the only command that may be compressed to mitigate its impact on network bandwidth. pTHINC delivers its commands using a non-blocking, serverpush update mechanism, where as soon as display updates are generated on the server, they are sent to the client.",
                "Clients are not required to explicitly request display updates, thus minimizing the impact that the typical varying network latency of wireless links may have on the responsiveness of the system.",
                "Keeping in mind that resource Command Description COPY Copy a frame buffer area to specified coordinates SFILL Fill an area with a given pixel color value PFILL Tile an area with a given pixel pattern BITMAP Fill a region using a bit pattern RAW Display raw pixel data at a given location Table 1: pTHINC Protocol Display Commands constrained PDAs and wireless networks may not be able to keep up with a fast server generating a large number of updates, pTHINC is able to coalesce, clip, and discard updates automatically if network loss or congestion occurs, or the client cannot keep up with the rate of updates.",
                "This type of behavior proves crucial in a web browsing environment, where for example, a page may be redrawn multiple times as it is rendered on the fly by the browser.",
                "In this case, the PDA will only receive and render the final result, which clearly is all the user is interesting in seeing. pTHINC prioritizes the delivery of updates to the PDA using a Shortest-Remaining-Size-First (SRSF) preemptive update scheduler.",
                "SRSF is analogous to Shortest-RemainingProcessing-Time scheduling, which is known to be optimal for minimizing mean response time in an interactive system.",
                "In a web browsing environment, short jobs are associated with text and basic page layout components such as the pages background, which are critical web content for the user.",
                "On the other hand, large jobs are often lower priority beautifying elements, or, even worse, web page banners and advertisements, which are of questionable value to the user as he or she is browsing the page.",
                "Using SRSF, pTHINC is able to maximize the utilization of the relatively scarce bandwidth available on the wireless connection between the PDA and the server. 3.1 Display Management To enable users to just as easily access their web browser and helper applications from a desktop computer at home as from a PDA while on the road, pTHINC provides a resize mechanism to zoom in and out of the display of a web session. pTHINC resizing is completely supported by the server, not the client.",
                "The server resamples updates to fit within the PDAs viewport before they are transmitted over the network. pTHINC uses Fants resampling algorithm to resize pixel updates.",
                "This provides smooth, visually pleasing updates with properly antialiasing and has only modest computational requirements. pTHINCs resizing approach has a number of advantages.",
                "First, it allows the PDA to leverage the vastly superior computational power of the server to use high quality resampling algorithms and produce higher quality updates for the PDA to display.",
                "Second, resizing the screen does not translate into additional resource requirements for the PDA, since it does not need to perform any additional work.",
                "Finally, better utilization of the wireless network is attained since rescaling the updates reduces their bandwidth requirements.",
                "To enable users to orient their displays on a PDA to provide a viewing experience that best accommodates user preferences and the layout of web pages or applications, pTHINC provides a display rotation mechanism to switch between landscape and portrait viewing modes. pTHINC display rotation is completely supported by the client, not the server. pTHINC does not explicitly recalculate the ge146 ometry of display updates to perform rotation, which would be computationally expensive.",
                "Instead, pTHINC simply changes the way data is copied into the framebuffer to switch between display modes.",
                "When in portrait mode, data is copied along the rows of the framebuffer from left to right.",
                "When in landscape mode, data is copied along the columns of the framebuffer from top to bottom.",
                "These very fast and simple techniques replace one set of copy operations with another and impose no performance overhead. pTHINC provides its own rotation mechanism to support a wide range of devices without imposing additional feature requirements on the PDA.",
                "Although some newer PDA devices provide native support for different orientations, this mechanism is not dynamic and requires the user to rotate the PDAs entire user interface before starting the pTHINC client.",
                "Windows Mobile provides native API mechanisms for PDA applications to rotate their UI on the fly, but these mechanisms deliver poor performance and display quality as the rotation is performed naively and is not completely accurate. 3.2 Video Playback Video has gradually become an integral part of the World Wide Web, and its presence will only continue to increase.",
                "Web sites today not only use animated graphics and flash to deliver web content in an attractive manner, but also utilize streaming video to enrich the web interface.",
                "Users are able to view pre-recorded and live newscasts on CNN, watch sports highlights on ESPN, and even search through large collection of videos on Google Video.",
                "To allow applications to provide efficient video playback, interfaces have been created in display systems that allow video device drivers to expose their hardware capabilities back to the applications. pTHINC takes advantage of these interfaces and its virtual device driver approach to provide a virtual bridge between the remote client and its hardware and the applications, and transparently support video playback.",
                "On top of this architecture, pTHINC uses the YUV colorspace to encode the video content, which provides a number of benefits.",
                "First, it has become increasingly common for PDA video hardware to natively support YUV and be able to perform the colorspace conversion and scaling automatically.",
                "As a result, pTHINC is able to provide fullscreen video playback without any performance hits.",
                "Second, the use of YUV allows for a more efficient representation of RGB data without loss of quality, by taking advantage of the human eyes ability to better distinguish differences in brightness than in color.",
                "In particular, pTHINC uses the YV12 format, which allows full color RGB data to be encoded using just 12 bits per pixel.",
                "Third, YUV data is produced as one of the last steps of the decoding process of most video codecs, allowing pTHINC to provide video playback in a manner that is format independent.",
                "Finally, even if the PDAs video hardware is unable to accelerate playback, the colorspace conversion process is simple enough that it does not impose unreasonable requirements on the PDA.",
                "A more concrete example of how pTHINC leverages the PDA video hardware to support video playback can be seen in our prototype implementation on the popular Dell Axim X51v PDA, which is equipped with the Intel 2700G multimedia accelerator.",
                "In this case, pTHINC creates an offscreen buffer in video memory and writes and reads from this memory region data on the YV12 format.",
                "When a new video frame arrives, video data is copied from the buffer to Figure 2: Experimental Testbed an overlay surface in video memory, which is independent of the normal surface used for traditional drawing.",
                "As the YV12 data is put onto the overlay, the Intel accelerator automatically performs both colorspace conversion and scaling.",
                "By using the overlay surface, pTHINC has no need to redraw the screen once video playback is over since the overlapped surface is unaffected.",
                "In addition, specific overlay regions can be manipulated by leveraging the video hardware, for example to perform hardware linear interpolation to smooth out the frame and display it fullscreen, and to do automatic rotation when the client runs in landscape mode. 4.",
                "EXPERIMENTAL RESULTS We have implemented a pTHINC prototype that runs the client on widely-used Windows Mobile-based Pocket PC devices and the server on both Windows and Linux operating systems.",
                "To demonstrate its effectiveness in supporting mobile wireless web applications, we have measured its performance on web applications.",
                "We present experimental results on different PDA devices for two popular web applications, browsing web pages and playing video content from the web.",
                "We compared pTHINC against native web applications running locally on the PDA to demonstrate the improvement that pTHINC can provide over the traditional fat-client approach.",
                "We also compared pTHINC against three of the most widely used thin clients that can run on PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] and VNC (Virtual Network Computing) [16].",
                "We follow common practice and refer to Citrix MetaFrameXP and Microsoft Remote Desktop by their respective remote display protocols, ICA (Independent Computing Architecture) and RDP (Remote Desktop Protocol). 4.1 Experimental Testbed We conducted our web experiments using two different wireless Pocket PC PDAs in an isolated Wi-Fi network testbed, as shown in Figure 2.",
                "The testbed consisted of two PDA client devices, a packet monitor, a thin-client server, and a web server.",
                "Except for the PDAs, all of the other machines were IBM Netfinity 4500R servers with dual 933 MHz Intel PIII CPUs and 512 MB RAM and were connected on a switched 100 Mbps FastEthernet network.",
                "The web server used was Apache 1.3.27, the network emulator was NISTNet 2.0.12, and the packet monitor was Ethereal 0.10.9.",
                "The PDA clients connected to the testbed through a 802.11b Lucent Orinoco AP-2000 wireless access point.",
                "All experiments using the wireless network were conducted within ten feet of the access point, so we considered the amount of packet loss to be negligible in our experiments.",
                "Two Pocket PC PDAs were used to provide results across both older, less powerful models and newer higher performance models.",
                "The older model was a Dell Axim X5 with 147 Client 1024×768 640×480 Depth Resize Clip RDP no yes 8-bit no yes VNC yes yes 16-bit no no ICA yes yes 16-bit yes no pTHINC yes yes 24-bit yes no Table 2: Thin-client Testbed Configuration Setting a 400 MHz Intel XScale PXA255 CPU and 64 MB RAM running Windows Mobile 2003 and a Dell TrueMobile 1180 2.4Ghz CompactFlash card for wireless networking.",
                "The newer model was a Dell Axim X51v with a 624 MHz Intel XScale XPA270 CPU and 64 MB RAM running Windows Mobile 5.0 and integrated 802.11b wireless networking.",
                "The X51v has an Intel 2700G multimedia accelerator with 16MB video memory.",
                "Both PDAs are capable of 16-bit color but have different screen sizes and display resolutions.",
                "The X5 has a 3.5 inch diagonal screen with 240×320 resolution.",
                "The X51v has a 3.7 inch diagonal screen with 480×640.",
                "The four thin clients that we used support different levels of display quality as summarized in Table 2.",
                "The RDP client only supports a fixed 640×480 display resolution on the server with 8-bit color depth, while other platforms provide higher levels of display quality.",
                "To provide a fair comparison across all platforms, we conducted our experiments with thin-client sessions configured for two possible resolutions, 1024×768 and 640×480.",
                "Both ICA and VNC were configured to use the native PDA resolution of 16-bit color depth.",
                "The current pTHINC prototype uses 24-bit color directly and the client downsamples updates to the 16-bit color depth available on the PDA.",
                "RDP was configured using only 8-bit color depth since it does not support any better color depth.",
                "Since both pTHINC and ICA provide the ability to view the display resized to fit the screen, we measured both clients with and without the display resized to fit the PDA screen.",
                "Each thin client was tested using landscape rather than portrait mode when available.",
                "All systems run on the X51v could run in landscape mode because the hardware provides a landscape mode feature.",
                "However, the X5 does not provide this functionality.",
                "Only pTHINC directly supports landscape mode, so it was the only system that could run in landscape mode on both the X5 and X51v.",
                "To provide a fair comparison, we also standardized on common hardware and operating systems whenever possible.",
                "All of the systems used the Netfinity server as the thin-client server.",
                "For the two systems designed for Windows servers, ICA and RDP, we ran Windows 2003 Server on the server.",
                "For the other systems which support X-based servers, VNC and pTHINC, we ran the Debian Linux Unstable distribution with the Linux 2.6.10 kernel on the server.",
                "We used the latest thin-client server versions available on each platform at the time of our experiments, namely Citrix MetaFrame XP Server for Windows Feature Release 3, Microsoft Remote Desktop built into Windows XP and Windows 2003 using RDP 5.2, and VNC 4.0. 4.2 Application Benchmarks We used two web application benchmarks for our experiments based on two common application scenarios, browsing web pages and playing video content from the web.",
                "Since many thin-client systems including two of the ones tested are closed and proprietary, we measured their performance in a noninvasive manner by capturing network traffic with a packet monitor and using a variant of slow-motion benchmarking [13] previously developed to measure thin-client performance in PDA environments [10].",
                "This measurement methodology accounts for both the display decoupling that can occur between client and server in thin-client systems as well as client processing time, which may be significant in the case of PDAs.",
                "To measure web browsing performance, we used a web browsing benchmark based on the Web Text Page Load Test from the Ziff-Davis i-Bench benchmark suite [7].",
                "The benchmark consists of JavaScript controlled load of 55 pages from the web server.",
                "The pages contain both text and graphics with pages varying in size.",
                "The graphics are embedded images in GIF and JPEG formats.",
                "The original i-Bench benchmark was modified for slow-motion benchmarking by introducing delays of several seconds between the pages using JavaScript.",
                "Then two tests were run, one where delays where added between each page, and one where pages where loaded continuously without waiting for them to be displayed on the client.",
                "In the first test, delays were sufficiently adjusted in each case to ensure that each page could be received and displayed on the client completely without temporal overlap in transferring the data belonging to two consecutive pages.",
                "We used the packet monitor to record the packet traffic for each run of the benchmark, then used the timestamps of the first and last packet in the trace to obtain our latency measures [10].",
                "The packet monitor also recorded the amount of data transmitted between the client and the server.",
                "The ratio between the data traffic in the two tests yields a scale factor.",
                "This scale factor shows the loss of data between the server and the client due to inability of the client to process the data quickly enough.",
                "The product of the scale factor with the latency measurement produces the true latency accounting for client processing time.",
                "To run the web browsing benchmark, we used Mozilla Firefox 1.0.4 running on the thin-client server for the thin clients, and Windows Internet Explorer (IE) Mobile for 2003 and Mobile for 5.0 for the native browsers on the X5 and X51v PDAs, respectively.",
                "In all cases, the web browser used was sized to fill the entire display region available.",
                "To measure video playback performance, we used a video benchmark that consisted of playing a 34.75s MPEG-1 video clip containing a mix of news and entertainment programming at full-screen resolution.",
                "The video clip is 5.11 MB and consists of 834 352x240 pixel frames with an ideal frame rate of 24 frames/sec.",
                "We measured video performance using slow-motion benchmarking by monitoring resulting packet traffic at two playback rates, 1 frames/second (fps) and 24 fps, and comparing the results to determine playback delays and frame drops that occur at 24 fps to measure overall video quality [13].",
                "For example, 100% quality means that all video frames were played at real-time speed.",
                "On the other hand, 50% quality could mean that half the video data was dropped, or that the clip took twice as long to play even though all of the video data was displayed.",
                "To run the video benchmark, we used Windows Media Player 9 for Windows-based thin-client servers, MPlayer 1.0 pre 6 for X-based thin-client servers, and Windows Media Player 9 Mobile and 10 Mobile for the native video players running locally on the X5 and X51v PDAs, respectively.",
                "In all cases, the video player used was sized to fill the entire display region available. 4.3 Measurements Figures 3 and 4 show the results of running the web brows148 0 1 10 100 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL Latency(s) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 3: Browsing Benchmark: Average Page Latency ing benchmark.",
                "For each platform, we show results for up to four different configurations, two on the X5 and two on the X51v, depending on whether each configuration was supported.",
                "However, not all platforms could support all configurations.",
                "The local browser only runs at the display resolution of the PDA, 480×680 or less for the X51v and the X5.",
                "RDP only runs at 640×480.",
                "Neither platform could support 1024×768 display resolution.",
                "ICA only ran on the X5 and could not run on the X51v because it did not work on Windows Mobile 5.",
                "Figure 3 shows the average latency per web page for each platform. pTHINC provides the lowest average web browsing latency on both PDAs.",
                "On the X5, pTHINC performs up to 70 times better than other thin-client systems and 8 times better than the local browser.",
                "On the X51v, pTHINC performs up to 80 times better than other thin-client systems and 7 times better than the native browser.",
                "In fact, all of the thin clients except VNC outperform the local PDA browser, demonstrating the performance benefits of the thin-client approach.",
                "Usability studies have shown that web pages should take less than one second to download for the user to experience an uninterrupted web browsing experience [14].",
                "The measurements show that only the thin clients deliver subsecond web page latencies.",
                "In contrast, the local browser requires more than 3 seconds on average per web page.",
                "The local browser performs worse since it needs to run a more limited web browser to process the HTML, JavaScript, and do all the rendering using the limited capabilities of the PDA.",
                "The thin clients can take advantage of faster server hardware and a highly tuned web browser to process the web content much faster.",
                "Figure 3 shows that RDP is the next fastest platform after pTHINC.",
                "However, RDP is only able to run at a fixed resolution of 640×480 and 8-bit color depth.",
                "Furthermore, RDP also clips the display to the size of the PDA screen so that it does not need to send updates that are not visible on the PDA screen.",
                "This provides a performance benefit assuming the remaining web content is not viewed, but degrades performance when a user scrolls around the display to view other web content.",
                "RDP achieves its performance with significantly lower display quality compared to the other thin clients and with additional display clipping not used by other systems.",
                "As a result, RDP performance alone does not provide a complete comparison with the other platforms.",
                "In contrast, pTHINC provides the fastest performance while at the same time providing equal or better display quality than the other systems. 0 1 10 100 1000 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL DataSize(KB) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 4: Browsing Benchmark: Average Page Data Transferred Since VNC and ICA provide similar display quality to pTHINC, these systems provide a more fair comparison of different thin-client approaches.",
                "ICA performs worse in part because it uses higher-level display primitives that require additional client processing costs.",
                "VNC performs worse in part because it loses display data due to its client-pull delivery mechanism and because of the client processing costs in decompressing raw pixel primitives.",
                "In both cases, their performance was limited in part because their PDA clients were unable to keep up with the rate at which web pages were being displayed.",
                "Figure 3 also shows measurements for those thin clients that support resizing the display to fit the PDA screen, namely ICA and pTHINC.",
                "Resizing requires additional processing, which results in slower average web page latencies.",
                "The measurements show that the additional delay incurred by ICA when resizing versus not resizing is much more substantial than for pTHINC.",
                "ICA performs resizing on the slower PDA client.",
                "In contrast, pTHINC leverage the more powerful server to do resizing, reducing the performance difference between resizing and not resizing.",
                "Unlike ICA, pTHINC is able to provide subsecond web page download latencies in both cases.",
                "Figure 4 shows the data transferred in KB per page when running the slow-motion version of the tests.",
                "All of the platforms have modest data transfer requirements of roughly 100 KB per page or less.",
                "This is well within the bandwidth capacity of Wi-Fi networks.",
                "The measurements show that the local browser does not transfer the least amount of data.",
                "This is surprising as HTML is often considered to be a very compact representation of content.",
                "Instead, RDP is the most bandwidth efficient platform, largely as a result of using only 8-bit color depth and screen clipping so that it does not transfer the entire web page to the client. pTHINC overall has the largest data requirements, slightly more than VNC.",
                "This is largely a result of the current pTHINC prototypes lack of native support for 16-bit color data in the wire protocol.",
                "However, this result also highlights pTHINCs performance as it is faster than all other systems even while transferring more data.",
                "Furthermore, as newer PDA models support full 24-bit color, these results indicate that pTHINC will continue to provide good web browsing performance.",
                "Since display usability and quality are as important as performance, Figures 5 to 8 compare screenshots of the different thin clients when displaying a web page, in this case from the popular BBC news website.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode 149 Figure 5: Browser Screenshot: RDP 640x480 Figure 6: Browser Screenshot: VNC 1024x768 Figure 7: Browser Screenshot: ICA Resized 1024x768 Figure 8: Browser Screenshot: pTHINC Resized 1024x768 using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "While the screenshots lack the visual fidelity of the actual device display, several observations can be made.",
                "Figure 5 shows that RDP does not support fullscreen mode and wastes lots of screen space for controls and UI elements, requiring the user to scroll around in order to access the full contents of the web browsing session.",
                "Figure 6 shows that VNC makes better use of the screen space and provides better display quality, but still forces the user to scroll around to view the web page due to its lack of resizing support.",
                "Figure 7 shows ICAs ability to display the full web page given its resizing support, but that its lack of landscape capability and poorer resize algorithm significantly compromise display quality.",
                "In contrast, Figure 8 shows pTHINC using resizing to provide a high quality fullscreen display of the full width of the web page. pTHINC maximizes the entire viewing region by moving all controls to the PDA buttons.",
                "In addition, pTHINC leverages the server computational power to use a high quality resizing algorithm to resize the display to fit the PDA screen without significant overhead.",
                "Figures 9 and 10 show the results of running the video playback benchmark.",
                "For each platform except ICA, we show results for an X5 and X51v configuration.",
                "ICA could not run on the X51v as noted earlier.",
                "The measurements were done using settings that reflected the environment a user would have to access a web session from both a desktop computer and a PDA.",
                "As such, a 1024×768 server display resolution was used whenever possible and the video was shown at fullscreen.",
                "RDP was limited to 640×480 display resolution as noted earlier.",
                "Since viewing the entire video display is the only really usable option, we resized the display to fit the PDA screen for those platforms that supported this feature, namely ICA and pTHINC.",
                "Figure 9 shows the video quality for each platform. pTHINC is the only thin client able to provide perfect video playback quality, similar to the native PDA video player.",
                "All of the other thin clients deliver very poor video quality.",
                "With the exception of RDP on the X51v which provided unacceptable 35% video quality, none of the other systems were even able to achieve 10% video quality.",
                "VNC and ICA have the worst quality at 8% on the X5 device. pTHINCs native video support enables superior video performance, while other thin clients suffer from their inability to distinguish video from normal display updates.",
                "They attempt to apply ineffective and expensive compression algorithms on the video data and are unable to keep up with the stream of updates generated, resulting in dropped frames or long playback times.",
                "VNC suffers further from its client-pull update model because video frames are generated faster than the rate at which the client can process and send requests to the server to obtain the next display update.",
                "Figure 10 shows the total data transferred during 150 0% 20% 40% 60% 80% 100% pTHINCICAVNCRDPLOCAL VideoQuality Platform Axim X5 Axim X51v Figure 9: Video Benchmark: Fullscreen Video Quality 0 1 10 100 pTHINCICAVNCRDPLOCAL VideoDataSize(MB) Platform Axim X5 Axim X51v Figure 10: Video Benchmark: Fullscreen Video Data video playback for each system.",
                "The native player is the most bandwidth efficient platform, sending less than 6 MB of data, which corresponds to about 1.2 Mbps of bandwidth. pTHINCs 100% video quality requires about 25 MB of data which corresponds to a bandwidth usage of less than 6 Mbps.",
                "While the other thin clients send less data than THINC, they do so because they are dropping video data, resulting in degraded video quality.",
                "Figures 11 to 14 compare screenshots of the different thin clients when displaying the video clip.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "Figures 11 and 12 show that RDP and VNC are unable to display the entire video frame on the PDA screen.",
                "RDP wastes screen space for UI elements and VNC only shows the top corner of the video frame on the screen.",
                "Figure 13 shows that ICA provides resizing to display the entire video frame, but did not proportionally resize the video data, resulting in strange display artifacts.",
                "In contrast, Figure 14 shows pTHINC using resizing to provide a high quality fullscreen display of the entire video frame. pTHINC provides visually more appealing video display than RDP, VNC, or ICA. 5.",
                "RELATED WORK Several studies have examined the web browsing performance of thin-client computing [13, 19, 10].",
                "The ability for thin clients to improve web browsing performance on wireless PDAs was first quantitatively demonstrated in a previous study by one of the authors [10].",
                "This study demonstrated that thin clients can provide both faster web browsing performance and greater web browsing functionality.",
                "The study considered a wide range of web content including content from medical information systems.",
                "Our work builds on this previous study and consider important issues such as how usable existing thin clients are in PDA environments, the trade-offs between thin-client usability and performance, performance across different PDA devices, and the performance of thin clients on common web-related applications such as video.",
                "Many thin clients have been developed and some have PDA clients, including Microsofts Remote Desktop [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5], and Tarantella [18].",
                "These systems were first designed for desktop computing and retrofitted for PDAs.",
                "Unlike pTHINC, they do not address key system architecture and usability issues important for PDAs.",
                "This limits their display quality, system performance, available screen space, and overall usability on PDAs. pTHINC builds on previous work by two of the authors on THINC [1], extending the server architecture and introducing a client interface and usage model to efficiently support PDA devices for mobile web applications.",
                "Other approaches to improve the performance of mobile wireless web browsing have focused on using transcoding and caching proxies in conjunction with the fat client model [11, 9, 4, 8].",
                "They work by pushing functionality to external proxies, and using specialized browsing applications on the PDA device that communicate with the proxy.",
                "Our thinclient approach differs fundamentally from these fat-client approaches by pushing all web browser logic to the server, leveraging existing investments in desktop web browsers and helper applications to work seamlessly with production systems without any additional proxy configuration or web browser modifications.",
                "With the emergence of web browsing on small display devices, web sites have been redesigned using mechanisms like WAP and specialized native web browsers have been developed to tailor the needs of these devices.",
                "Recently, Opera has developed the Opera Mini [15] web browser, which uses an approach similar to the thin-client model to provide access across a number of mobile devices that would normally be incapable of running a web browser.",
                "Instead of requiring the device to process web pages, it uses a remote server to pre-process the page before sending it to the phone. 6.",
                "CONCLUSIONS We have introduced pTHINC, a thin-client architecture for wireless PDAs. pTHINC provides key architectural and usability mechanisms such as server-side screen resizing, clientside screen rotation using simple copy techniques, YUV video support, and maximizing screen space for display updates and leveraging existing PDA control buttons for UI elements. pTHINC transparently supports traditional desktop browsers and their helper applications on PDA devices and desktop machines, providing mobile users with ubiquitous access to a consistent, personalized, and full-featured web environment across heterogeneous devices.",
                "We have implemented pTHINC and measured its performance on web applications compared to existing thin-client systems and native web applications.",
                "Our results on multiple mobile wireless devices demonstrate that pTHINC delivers web browsing performance up to 80 times better than existing thin-client systems, and 8 times better than a native PDA browser.",
                "In addition, pTHINC is the only PDA thin client 151 Figure 11: Video Screenshot: RDP 640x480 Figure 12: Video Screenshot: VNC 1024x768 Figure 13: Video Screenshot: ICA Resized 1024x768 Figure 14: Video Screenshot: pTHINC Resized 1024x768 that transparently provides full-screen, full frame rate video playback, making web sites with multimedia content accessible to mobile web users. 7.",
                "ACKNOWLEDGEMENTS This work was supported in part by NSF ITR grants CCR0219943 and CNS-0426623, and an IBM SUR Award. 8.",
                "REFERENCES [1] R. Baratto, L. Kim, and J. Nieh.",
                "THINC: A Virtual Display Architecture for Thin-Client Computing.",
                "In Proceedings of the 20th ACM Symposium on Operating Systems Principles (SOSP), Oct. 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius, and A. Muir.",
                "Microsoft Windows NT Server 4.0, Terminal Server Edition: Technical Reference.",
                "Microsoft Press, Redmond, WA, 1999. [4] A.",
                "Fox, I. Goldberg, S. D. Gribble, and D. C. Lee.",
                "Experience With Top Gun Wingman: A Proxy-Based Graphical Web Browser for the 3Com PalmPilot.",
                "In Proceedings of Middleware 98, Lake District, England, September 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Health Insurance Portability and Accountability Act. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench version 1.5. http: //etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi.",
                "On proxy agents, mobility, and web access.",
                "Mobile Networks and Applications, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon, and A. Ortega.",
                "Design and Implementation of a Soft Caching Proxy.",
                "Computer Networks and ISDN Systems, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana, and S. Varshneya.",
                "Improving Web Browsing on Wireless PDAs Using Thin-Client Computing.",
                "In Proceedings of the 13th International World Wide Web Conference (WWW), May 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham, and P. Shenoy.",
                "TranSquid: Transcoding and caching proxy for heterogenous ecommerce environments.",
                "In Proceedings of the 12th IEEE Workshop on Research Issues in Data Engineering (RIDE 02), Feb. 2002. [12] .NET VNC Viewer for PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang, and N. Novik.",
                "Measuring Thin-Client Performance Using Slow-Motion Benchmarking.",
                "ACM Trans.",
                "Computer Systems, 21(1):87-115, Feb. 2003. [14] J. Nielsen.",
                "Designing Web Usability.",
                "New Riders Publishing, Indianapolis, IN, 2000. [15] Opera Mini Browser. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood, and A. Hopper.",
                "Virtual Network Computing.",
                "IEEE Internet Computing, 2(1), Jan./Feb. 1998. [17] R. W. Scheifler and J. Gettys.",
                "The X Window System.",
                "ACM Trans.",
                "Gr., 5(2):79-106, Apr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla, and M. Sajjadpour.",
                "Web Browsing Performance of Wireless Thin-Client Computing.",
                "In Proceedings of the 12th International World Wide Web Conference (WWW), May 2003. 152"
            ],
            "original_annotated_samples": [
                "The ability to disconnect and reconnect to a session at anytime is an important benefit for <br>mobile wireless pda</br> users which may have intermittent network connectivity. pTHINCs persistent web session model enables a user to reconnect to a web session from devices other than the one on which the web session was originally initiated."
            ],
            "translated_annotated_samples": [
                "La capacidad de desconectarse y reconectarse a una sesión en cualquier momento es un beneficio importante para los usuarios de <br>PDA inalámbricas móviles</br> que pueden tener conectividad de red intermitente. El modelo de sesión web persistente de pTHINCs permite a un usuario reconectarse a una sesión web desde dispositivos distintos al que se inició originalmente la sesión web."
            ],
            "translated_text": "pTHINC: Una arquitectura de cliente ligero para la web inalámbrica móvil Joeng Kim, Ricardo A. Baratto y Jason Nieh Departamento de Ciencias de la Computación Universidad de Columbia, Nueva York, NY, EE. UU. {jk2438, ricardo, nieh}@cs.columbia.edu RESUMEN Aunque las aplicaciones web están ganando popularidad en las PDAs inalámbricas móviles, los navegadores web en estos sistemas pueden ser bastante lentos y a menudo carecen de funcionalidad adecuada para acceder a muchos sitios web. Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y movilidad fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la resolución de pantalla disponible para la visualización de aplicaciones. Hemos implementado pTHINC en Windows Mobile y evaluado su rendimiento en dispositivos móviles inalámbricos. Nuestros resultados comparados con los navegadores web PDA locales y otros enfoques de cliente ligero demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero PDA que soporta de manera efectiva aplicaciones de ayuda del navegador cruciales como la reproducción de video. Categorías y Descriptores de Asunto: C.2.4 Comunicación de Computadoras-Redes: Sistemas Distribuidos - cliente/servidor Términos Generales: Diseño, Experimentación, Rendimiento 1. La creciente ubicuidad de las redes inalámbricas y la disminución del costo del hardware están impulsando una proliferación de dispositivos móviles inalámbricos portátiles, tanto como asistentes digitales personales (PDA) inalámbricos independientes y dispositivos populares integrados de PDA/teléfono celular. Estos dispositivos están permitiendo nuevas formas de computación y comunicación móvil. Los proveedores de servicios están aprovechando estos dispositivos para ofrecer acceso web omnipresente, y los usuarios de la web móvil a menudo ya utilizan estos dispositivos para acceder a información habilitada para la web, como noticias, correo electrónico, guías de viaje localizadas y mapas. Es probable que en unos pocos años, la mayoría de los dispositivos que accedan a la web sean móviles. Los usuarios suelen acceder al contenido web ejecutando un navegador web y aplicaciones auxiliares asociadas localmente en la PDA. Aunque existen navegadores web nativos para PDAs, ofrecen un rendimiento deficiente y tienen un conjunto de funciones mucho más pequeño y una funcionalidad más limitada que sus contrapartes de computadoras de escritorio [10]. Como resultado, los navegadores web de PDA a menudo no pueden mostrar el contenido web de sitios web que utilizan tecnologías web más avanzadas para ofrecer una experiencia web más rica. Este problema fundamental surge por dos razones. Primero, debido a que las PDAs tienen un entorno de hardware/software completamente diferente de las computadoras de escritorio tradicionales, las aplicaciones web necesitan ser reescritas y personalizadas para las PDAs si es posible, duplicando los costos de desarrollo. Debido a que el mercado de aplicaciones de escritorio es más grande y maduro, la mayoría del esfuerzo de desarrollo generalmente se destina a las aplicaciones de escritorio, lo que resulta en una mayor funcionalidad y rendimiento que sus contrapartes de PDA. En segundo lugar, las PDAs tienen un entorno con recursos más limitados que las computadoras de escritorio tradicionales para ofrecer un factor de forma más pequeño y una vida útil de la batería más larga. Los navegadores web de escritorio son aplicaciones grandes y complejas que no pueden ejecutarse en una PDA. En cambio, los desarrolladores se ven obligados a reducir significativamente estas navegadores web para ofrecer un navegador web PDA utilizable, lo que limita la funcionalidad del navegador PDA. La computación de cliente ligero proporciona un enfoque alternativo para habilitar el acceso web ubicuo desde dispositivos móviles. Un sistema informático de cliente ligero consiste en un servidor y un cliente que se comunican a través de una red utilizando un protocolo de visualización remota. El protocolo permite que las pantallas gráficas se virtualicen y se sirvan a través de una red a un dispositivo cliente, mientras que la lógica de la aplicación se ejecuta en el servidor. Usando el protocolo de visualización remota, el cliente transmite la entrada del usuario al servidor, y el servidor devuelve actualizaciones de pantalla de las aplicaciones del servidor al cliente. Utilizando un modelo de cliente ligero para dispositivos móviles de mano, las PDAs pueden convertirse en clientes simples sin estado que aprovechan las capacidades del servidor remoto para ejecutar navegadores web y otras aplicaciones auxiliares. El modelo de cliente ligero proporciona varios beneficios importantes para la web inalámbrica móvil. Primero, las aplicaciones web estándar de escritorio pueden utilizarse para entregar contenido web a PDAs sin necesidad de reescribir o adaptar las aplicaciones para ejecutarse en una PDA, lo que reduce los costos de desarrollo y aprovecha las inversiones existentes en software. Segundo, las aplicaciones web complejas pueden ejecutarse en servidores potentes en lugar de ejecutarse en versiones simplificadas en PDAs con recursos más limitados, lo que proporciona una mayor funcionalidad y un mejor rendimiento [10]. Tercero, las aplicaciones web pueden aprovechar servidores con redes más rápidas y mejor conectividad, lo que mejora aún más el rendimiento de la aplicación. En cuarto lugar, las PDAs pueden ser dispositivos aún más simples ya que no necesitan realizar una lógica de aplicación compleja, lo que potencialmente reduce el consumo de energía y extiende la vida útil de la batería. Finalmente, los clientes ligeros PDA pueden ser dispositivos prácticamente sin estado que no necesitan ser respaldados o restaurados, requieren casi ningún mantenimiento o actualizaciones, y no almacenan datos sensibles que puedan perderse o ser robados. Este modelo proporciona una vía viable para que las organizaciones médicas cumplan con las regulaciones de HIPAA mientras incorporan dispositivos móviles en sus operaciones diarias. A pesar de estas posibles ventajas, los clientes ligeros no han podido ofrecer la gama completa de estos beneficios al entregar aplicaciones web a dispositivos móviles portátiles. Los thin clients existentes no fueron diseñados para PDAs y no tienen en cuenta problemas importantes de usabilidad en el contexto de dispositivos de factor de forma pequeño, lo que resulta en dificultades para navegar por el contenido web mostrado. Además, los clientes ligeros existentes son ineficaces para proporcionar movilidad fluida en la mezcla heterogénea de tamaños de pantalla y resoluciones de dispositivos. Si bien los clientes ligeros existentes ya pueden ofrecer un rendimiento más rápido que los navegadores web nativos de PDA al entregar contenido web HTML, no admiten de manera efectiva aplicaciones web auxiliares más intensivas en visualización, como videos multimedia, que cada vez son una parte integral del contenido web disponible. Para aprovechar todo el potencial de la informática de cliente ligero en la provisión de la web inalámbrica móvil en PDAs, hemos desarrollado pTHINC (PDA THin-client InterNet Computing). pTHINC se basa en nuestro trabajo previo en THINC [1] para proporcionar una arquitectura de cliente ligero para dispositivos móviles de mano. pTHINC virtualiza y redimensiona la pantalla en el servidor para entregar de manera eficiente actualizaciones de pantalla de alta fidelidad a una amplia gama de clientes diferentes, tamaños de pantalla y orientaciones de pantalla, incluidos los modos de visualización en vertical y horizontal. Esto permite a pTHINC proporcionar la misma sesión web persistente en diferentes dispositivos de cliente. Por ejemplo, pTHINC puede proporcionar la misma sesión de navegación web adecuadamente escalada para su visualización en una computadora de escritorio y una PDA, de modo que las mismas cookies, marcadores y otros metadatos estén disponibles continuamente en ambas máquinas simultáneamente. El enfoque de visualización virtual de pTHINC aprovecha la información semántica disponible en los comandos de visualización y el hardware de video del cliente para proporcionar mecanismos de visualización remota más eficientes que son cruciales para admitir aplicaciones web más intensivas en visualización. Dada la limitada resolución de pantalla en las PDA, pTHINC maximiza el uso del espacio de pantalla para la visualización remota al trasladar la funcionalidad de control de la pantalla a los botones de control de PDA fácilmente disponibles, mejorando la usabilidad del sistema. Hemos implementado pTHINC en Windows Mobile y demostrado que funciona de manera transparente con las aplicaciones existentes, sistemas de ventanas y sistemas operativos, y no requiere modificar, recompilar o volver a enlazar el software existente. Hemos evaluado cuantitativamente pTHINC frente a navegadores web PDA locales y otros enfoques de cliente ligero en dispositivos Pocket PC. Nuestros resultados experimentales demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero de PDA que soporta de manera efectiva aplicaciones esenciales de ayuda para el navegador, como la reproducción de video. Este documento presenta el diseño e implementación de pTHINC. La sección 2 describe el modelo de uso general y las características de usabilidad de pTHINC. La sección 3 presenta el diseño y la arquitectura del sistema de pTHINC. La sección 4 presenta resultados experimentales que miden el rendimiento de pTHINC en aplicaciones web y lo comparan con navegadores nativos de PDA y otros sistemas de cliente ligero de PDA populares. La sección 5 discute el trabajo relacionado. Finalmente, presentamos algunas observaciones finales. El MODELO DE USO DE pTHINC pTHINC es un sistema de cliente ligero que consiste en una aplicación de visualización de cliente simple que se ejecuta en la PDA y un servidor que se ejecuta en una PC estándar. El servidor aprovecha PCs más potentes para ejecutar navegadores web y otra lógica de aplicaciones. El cliente recibe la entrada del usuario desde el lápiz óptico y el teclado virtual de la PDA y los envía al servidor para pasarlos a las aplicaciones. Las actualizaciones de la pantalla son luego enviadas desde el servidor al cliente para mostrar al usuario. Cuando se inicia el cliente PDA pTHINC, se presenta al usuario una interfaz gráfica simple donde se pueden proporcionar información como la dirección y el puerto del servidor, la información de autenticación del usuario y la configuración de la sesión. pTHINC primero intenta conectarse al servidor y realizar el saludo necesario. Una vez que este proceso haya sido completado, pTHINC presenta al usuario la visualización más reciente de su sesión. Si la sesión no existe, se crea una nueva sesión. Las sesiones existentes pueden continuar sin problemas sin cambios en la configuración de la sesión o del servidor. A diferencia de otros sistemas de cliente ligero, pTHINC proporciona a un usuario un modelo de sesión web persistente en el que un usuario puede iniciar una sesión ejecutando un navegador web y aplicaciones asociadas en el servidor, luego desconectarse de esa sesión y volver a conectarse en cualquier momento. Cuando un usuario se reconecta a la sesión, todas las aplicaciones siguen funcionando desde donde el usuario las dejó, de modo que el usuario puede seguir trabajando como si nunca se hubiera desconectado. La capacidad de desconectarse y reconectarse a una sesión en cualquier momento es un beneficio importante para los usuarios de <br>PDA inalámbricas móviles</br> que pueden tener conectividad de red intermitente. El modelo de sesión web persistente de pTHINCs permite a un usuario reconectarse a una sesión web desde dispositivos distintos al que se inició originalmente la sesión web. Esto proporciona a los usuarios una movilidad fluida entre diferentes dispositivos. Si un usuario pierde su PDA, puede fácilmente usar otra PDA para acceder a su sesión web. Además, pTHINC permite a los usuarios utilizar dispositivos que no son PDA para acceder a sesiones web también. Un usuario puede acceder a la misma sesión web persistente en una PC de escritorio como en una PDA, lo que le permite al usuario utilizar la misma sesión web desde cualquier computadora. El modelo de sesión web persistente de pTHINCs aborda un problema clave encontrado por los usuarios de la web móvil, la falta de un entorno web común en diferentes computadoras. Los navegadores web a menudo almacenan información importante como marcadores, cookies e historial, lo que les permite funcionar de una manera mucho más útil. El problema que ocurre cuando un usuario se mueve entre computadoras es que estos datos, específicos de una instalación de un navegador web, no pueden moverse con el usuario. Además, los navegadores web a menudo necesitan aplicaciones auxiliares para procesar diferentes contenidos multimedia, y esas aplicaciones pueden no estar disponibles de manera consistente en todas las computadoras. pTHINC aborda este problema al permitir que un usuario utilice de forma remota el mismo entorno de navegador web y aplicaciones auxiliares desde cualquier computadora. Como resultado, pTHINC puede proporcionar un entorno de navegación web común y consistente para usuarios móviles en diferentes dispositivos sin requerirles intentar sincronizar repetidamente diferentes entornos de navegación web en múltiples máquinas. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC debe proporcionar mecanismos para admitir diferentes tamaños de pantalla y resoluciones. Con este fin, pTHINC proporciona una función de zoom que permite a un usuario acercar y alejar una pantalla y permite que la pantalla de una sesión web 144 Figura 1: teclas de acceso rápido de pTHINC se redimensione para adaptarse a la pantalla del dispositivo que se está utilizando. Por ejemplo, si el servidor está ejecutando una sesión web a 1024×768 pero el cliente es una PDA con una resolución de pantalla de 640×480, pTHINC redimensionará la pantalla del escritorio para que se ajuste a la pantalla más pequeña de la PDA. pTHINC proporciona al usuario de la PDA la opción de aumentar el tamaño de la pantalla haciendo zoom en diferentes partes de la pantalla. Los usuarios suelen estar familiarizados con el diseño general de los sitios web que visitan con frecuencia, y pueden aprovechar esta función de redimensionamiento para navegar mejor por las páginas web. Por ejemplo, un usuario puede alejarse de la pantalla para ver todo el contenido de la página y navegar por los hipervínculos, luego acercarse a una región de interés para obtener una mejor vista. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC también debe proporcionar mecanismos para admitir diferentes orientaciones de pantalla. En un entorno de escritorio, los usuarios suelen estar acostumbrados a tener las pantallas presentadas en modo horizontal, donde el ancho de la pantalla es mayor que su altura. Sin embargo, en un entorno de PDA, la elección no siempre es obvia. Algunos usuarios pueden preferir tener la pantalla en modo retrato, ya que es más fácil sostener el dispositivo en sus manos, mientras que otros pueden preferir el modo paisaje para minimizar la cantidad de desplazamiento lateral necesario para ver una página web. Para adaptarse a las preferencias de los usuarios de PDA, pTHINC proporciona una función de orientación que le permite rotar la pantalla de forma fluida entre el modo horizontal y vertical. El modo de paisaje es particularmente útil para los usuarios de pTHINC que acceden con frecuencia a sus sesiones web tanto en dispositivos de escritorio como en PDA, proporcionando a esos usuarios el mismo ajuste de paisaje familiar en diferentes dispositivos. Dado que el espacio de pantalla es un recurso relativamente escaso en las PDAs, pTHINC se ejecuta en modo de pantalla completa para maximizar el área de pantalla disponible para mostrar la sesión web. Para poder utilizar toda la pantalla en la PDA y aún así permitir al usuario controlar e interactuar con ella, pTHINC reutiliza los botones de acceso directo típicos que se encuentran en las PDAs para realizar todas las funciones de control disponibles para el usuario. Los botones utilizados por pTHINC no requieren ningún cambio en el entorno del sistema operativo; simplemente son interceptados por la aplicación cliente de pTHINC cuando se presionan. La Figura 1 muestra cómo pTHINC utiliza los botones de acceso directo para proporcionar una navegación sencilla y mejorar la experiencia del usuario en general. Estos botones no son específicos del dispositivo, y el diseño mostrado es común en dispositivos PocketPC ampliamente utilizados. pTHINC proporciona seis accesos directos para apoyar su modelo de uso: • Rotar pantalla: El botón de grabación en el borde izquierdo se utiliza para rotar la pantalla entre modo retrato y modo paisaje cada vez que se presiona el botón. • Alejar: El botón más a la izquierda en la parte inferior delantera se utiliza para alejar la visualización de la sesión web proporcionando una vista general de la sesión web. • Acercar: El segundo botón más a la izquierda en la parte inferior delantera se utiliza para acercar la visualización de la sesión web para ver más claramente el contenido de interés. • Desplazamiento direccional: El botón central en la parte inferior delantera se utiliza para desplazarse alrededor de la visualización utilizando un solo botón de control de una manera que ya es familiar para los usuarios de PDA. Esta función es particularmente útil cuando el usuario ha ampliado una región de la pantalla de tal manera que solo una parte de la pantalla es visible en la pantalla. • Mostrar/Ocultar Teclado: El segundo botón más a la derecha en la parte inferior frontal se utiliza para mostrar un teclado virtual dibujado en la pantalla para dispositivos que no tienen teclado físico. El teclado virtual utiliza mecanismos estándar del sistema operativo de PDA, proporcionando portabilidad entre diferentes entornos de PDA. • Cerrar sesión: El botón más a la derecha en la parte inferior frontal se utiliza para desconectarse de la sesión de pTHINC. pTHINC utiliza la pantalla táctil de la PDA, el lápiz óptico y mecanismos estándar de interfaz de usuario para proporcionar una metáfora de punto y clic de la interfaz de usuario similar a la proporcionada por el ratón en un entorno de computación de escritorio tradicional. pTHINC no utiliza un cursor ya que los entornos de PDA no lo proporcionan. En cambio, un usuario puede usar el lápiz táctil para tocar diferentes secciones de la pantalla táctil y señalar el enfoque de entrada. Un toque único en la pantalla táctil genera un evento de clic de ratón correspondiente. Un doble toque en la pantalla táctil genera un evento de doble clic del ratón correspondiente. pTHINC proporciona emulación de ratón de dos botones al usar el lápiz óptico para presionar la pantalla durante un segundo y generar un clic derecho del ratón. Todas estas acciones son idénticas a la forma en que los usuarios ya interactúan con las aplicaciones de PDA en el entorno común de PocketPC. En la navegación web, los usuarios pueden hacer clic en hipervínculos y enfocarse en cuadros de entrada simplemente tocando el área de interés deseada en la pantalla. A diferencia de los navegadores web PDA locales y otras aplicaciones PDA, pTHINC aprovecha metáforas de interfaz de usuario de escritorio más potentes para permitir a los usuarios manipular múltiples ventanas de aplicación abiertas en lugar de estar limitados a una sola ventana de aplicación en un momento dado. Esto proporciona una mayor flexibilidad de navegación más allá de lo que está actualmente disponible en los dispositivos PDA. Similar a un entorno de escritorio, las ventanas del navegador y otras ventanas de aplicaciones pueden ser movidas al presionar y arrastrar el lápiz óptico de manera similar a un ratón. 3. La arquitectura del sistema pTHINC se basa en la arquitectura de visualización remota THINC para proporcionar un sistema de cliente ligero para PDAs. pTHINC virtualiza la visualización en el servidor aprovechando la capa de abstracción del dispositivo de video, que se encuentra por debajo del servidor de ventanas y por encima del framebuffer. Este es un nivel de dispositivo bien definido y de bajo nivel que depende del dispositivo y expone el hardware de video al sistema de visualización. pTHINC logra esto a través de un controlador de pantalla virtual simple que intercepta comandos de dibujo, los empaqueta y los envía a través de la red. Mientras que otros enfoques de cliente ligero interceptan comandos de visualización en otras capas del subsistema de visualización, el enfoque de virtualización de pantalla de pTHINC proporciona algunos beneficios clave para admitir eficientemente a los clientes de PDA. Por ejemplo, interceptar comandos de visualización en una capa superior entre aplicaciones y el sistema de ventanas, como se hace en X [17], requiere replicar y ejecutar una gran cantidad de funcionalidades en la PDA que tradicionalmente son proporcionadas por el sistema de ventanas de escritorio. Dada la magnitud y complejidad de los sistemas de ventanas tradicionales, intentar replicar esta funcionalidad en el entorno restringido de una PDA habría resultado ser una tarea desafiante, y quizás inviable. Además, las aplicaciones y el sistema de ventanas a menudo requieren una sincronización precisa en su funcionamiento, y imponer una red inalámbrica entre ellos al ejecutar las aplicaciones en el servidor y el sistema de ventanas en el cliente degradaría significativamente el rendimiento. Por otro lado, interceptar en una capa inferior extrayendo píxeles del framebuffer a medida que se renderizan proporciona una solución simple que requiere muy poca funcionalidad en el cliente de PDA, pero también puede resultar en un rendimiento degradado. La razón es que para cuando el servidor de visualización remota intenta enviar actualizaciones de pantalla, ha perdido toda la información semántica que podría haberle ayudado a codificar de manera eficiente, y debe recurrir a utilizar un mecanismo de codificación genérico y costoso en el servidor, así como un mecanismo de decodificación potencialmente costoso en el cliente de PDA limitado. A diferencia de los enfoques de intercepción de alto y bajo nivel, el enfoque de pTHINCs de interceptar en el controlador del dispositivo proporciona un equilibrio efectivo entre la simplicidad del cliente y del servidor, y la capacidad de codificar y decodificar de manera eficiente las actualizaciones de pantalla. Al utilizar un enfoque de visualización virtual de bajo nivel, pTHINC puede codificar de manera eficiente los comandos de visualización de la aplicación utilizando solo un pequeño conjunto de comandos de bajo nivel. En un entorno de PDA, este conjunto de comandos proporciona un componente crucial para mantener la simplicidad del cliente en el entorno de PDA con recursos limitados. Los comandos de visualización se muestran en la Tabla 1 y funcionan de la siguiente manera. COPY instruye al cliente a copiar una región de la pantalla desde su framebuffer local a otra ubicación. Este comando mejora la experiencia del usuario al acelerar el desplazamiento y el movimiento de ventanas opacas sin necesidad de reenviar datos de pantalla desde el servidor. SFILL, PFILL y BITMAP son comandos que pintan una región de tamaño fijo en la pantalla. Son útiles para acelerar la visualización de fondos de ventanas sólidas, patrones de escritorio, fondos de páginas web, dibujo de texto y ciertas operaciones en programas de manipulación de gráficos. SFILL llena una región considerable en la pantalla con un solo color. PFILL replica una baldosa sobre una región de la pantalla. BITMAP realiza un relleno utilizando un mapa de bits de unos y ceros como un estipulado para aplicar un color de primer plano y de fondo. Finalmente, RAW se utiliza para transmitir datos de píxeles no codificados que se mostrarán textualmente en una región de la pantalla. Este comando se invoca como último recurso si el servidor no puede emplear ningún otro comando, y es el único comando que puede ser comprimido para mitigar su impacto en el ancho de banda de la red. pTHINC entrega sus comandos utilizando un mecanismo de actualización de servidor-push no bloqueante, donde tan pronto como se generan actualizaciones de pantalla en el servidor, se envían al cliente. Los clientes no están obligados a solicitar explícitamente actualizaciones de pantalla, minimizando así el impacto que la típica variabilidad de la latencia de la red inalámbrica puede tener en la capacidad de respuesta del sistema. Teniendo en cuenta que los recursos Descripción de Comando COPY Copiar un área de búfer de fotogramas en coordenadas especificadas SFILL Rellenar un área con un valor de color de píxel dado PFILL Azulejar un área con un patrón de píxeles dado BITMAP Rellenar una región usando un patrón de bits RAW Mostrar datos de píxeles en bruto en una ubicación dada Tabla 1: Comandos de visualización del protocolo pTHINC. Las PDAs y las redes inalámbricas limitadas pueden no ser capaces de mantenerse al día con un servidor rápido que genera una gran cantidad de actualizaciones, pTHINC es capaz de fusionar, recortar y descartar actualizaciones automáticamente si se produce pérdida o congestión de red, o si el cliente no puede mantenerse al día con la velocidad de las actualizaciones. Este tipo de comportamiento resulta crucial en un entorno de navegación web, donde por ejemplo, una página puede ser redibujada varias veces mientras se renderiza al vuelo por el navegador. En este caso, la PDA solo recibirá y mostrará el resultado final, que claramente es todo lo que al usuario le interesa ver. pTHINC prioriza la entrega de actualizaciones a la PDA utilizando un programador de actualizaciones preemptivo de Tamaño Restante Más Corto Primero (SRSF). SRSF es análogo a la programación de Tiempo de Procesamiento Restante más Corto, la cual se sabe que es óptima para minimizar el tiempo medio de respuesta en un sistema interactivo. En un entorno de navegación web, los trabajos cortos están asociados con el texto y los componentes básicos de diseño de página, como el fondo de las páginas, que son contenido web crítico para el usuario. Por otro lado, los trabajos grandes suelen ser elementos de embellecimiento de menor prioridad, o, incluso peor, banners y anuncios de página web, los cuales tienen un valor cuestionable para el usuario mientras navega por la página. Usando SRSF, pTHINC puede maximizar la utilización del ancho de banda relativamente escaso disponible en la conexión inalámbrica entre la PDA y el servidor. 3.1 Gestión de la Pantalla Para permitir a los usuarios acceder con la misma facilidad a su navegador web y aplicaciones auxiliares desde una computadora de escritorio en casa como desde una PDA mientras están en movimiento, pTHINC proporciona un mecanismo de redimensionamiento para hacer zoom dentro y fuera de la pantalla de una sesión web. El redimensionamiento de pTHINC es completamente compatible con el servidor, no con el cliente. El servidor vuelve a muestrear las actualizaciones para que se ajusten al área de visualización de las PDAs antes de ser transmitidas por la red. pTHINC utiliza el algoritmo de remuestreo de Fants para redimensionar las actualizaciones de píxeles. Esto proporciona actualizaciones suaves y visualmente agradables con un antialiasing adecuado y solo requiere modestos recursos computacionales. El enfoque de redimensionamiento de pTHINCs tiene varias ventajas. Primero, permite al PDA aprovechar la vastamente superior potencia computacional del servidor para utilizar algoritmos de re-muestreo de alta calidad y producir actualizaciones de mayor calidad para que el PDA las muestre. Segundo, cambiar el tamaño de la pantalla no se traduce en requisitos adicionales de recursos para la PDA, ya que no necesita realizar ningún trabajo adicional. Finalmente, se logra una mejor utilización de la red inalámbrica ya que al reescalar las actualizaciones se reducen sus requisitos de ancho de banda. Para permitir a los usuarios orientar sus pantallas en una PDA y así proporcionar una experiencia visual que se ajuste mejor a las preferencias del usuario y al diseño de páginas web o aplicaciones, pTHINC proporciona un mecanismo de rotación de pantalla para alternar entre los modos de visualización horizontal y vertical. La rotación de pantalla de pTHINC es completamente compatible con el cliente, no con el servidor. pTHINC no recalcula explícitamente la geometría de las actualizaciones de pantalla para realizar la rotación, lo cual sería computacionalmente costoso. En cambio, pTHINC simplemente cambia la forma en que los datos se copian en el framebuffer para cambiar entre los modos de visualización. Cuando está en modo retrato, los datos se copian a lo largo de las filas del framebuffer de izquierda a derecha. Cuando se encuentra en modo horizontal, los datos se copian a lo largo de las columnas del framebuffer de arriba hacia abajo. Estas técnicas muy rápidas y simples reemplazan un conjunto de operaciones de copia por otro y no imponen ningún sobrecosto de rendimiento. pTHINC proporciona su propio mecanismo de rotación para soportar una amplia gama de dispositivos sin imponer requisitos adicionales de funciones en la PDA. Aunque algunos dispositivos PDA más nuevos ofrecen soporte nativo para diferentes orientaciones, este mecanismo no es dinámico y requiere que el usuario rote toda la interfaz de usuario de la PDA antes de iniciar el cliente pTHINC. Windows Mobile proporciona mecanismos de API nativos para que las aplicaciones de PDA puedan rotar su interfaz de usuario sobre la marcha, pero estos mecanismos ofrecen un rendimiento deficiente y una calidad de visualización baja, ya que la rotación se realiza de manera ingenua y no es completamente precisa. 3.2 Reproducción de video El video se ha convertido gradualmente en una parte integral de la World Wide Web, y su presencia solo seguirá aumentando. Los sitios web de hoy en día no solo utilizan gráficos animados y flash para presentar el contenido web de manera atractiva, sino que también utilizan video en streaming para enriquecer la interfaz web. Los usuarios pueden ver noticias pregrabadas y en vivo en CNN, ver los momentos más destacados deportivos en ESPN e incluso buscar a través de una gran colección de videos en Google Video. Para permitir que las aplicaciones proporcionen una reproducción de video eficiente, se han creado interfaces en los sistemas de visualización que permiten a los controladores de dispositivos de video exponer sus capacidades de hardware a las aplicaciones. pTHINC aprovecha estas interfaces y su enfoque de controlador de dispositivo virtual para proporcionar un puente virtual entre el cliente remoto y su hardware y las aplicaciones, y admitir de manera transparente la reproducción de video. Sobre esta arquitectura, pTHINC utiliza el espacio de color YUV para codificar el contenido de video, lo cual proporciona una serie de beneficios. Primero, se ha vuelto cada vez más común que el hardware de video de las PDA admita nativamente YUV y pueda realizar la conversión del espacio de color y el escalado automáticamente. Como resultado, pTHINC puede proporcionar reproducción de video a pantalla completa sin afectar el rendimiento. Segundo, el uso de YUV permite una representación más eficiente de los datos RGB sin pérdida de calidad, aprovechando la capacidad de los ojos humanos para distinguir mejor las diferencias en brillo que en color. En particular, pTHINC utiliza el formato YV12, que permite codificar datos de color RGB completo utilizando solo 12 bits por píxel. Tercero, los datos YUV se producen como uno de los últimos pasos del proceso de decodificación de la mayoría de los códecs de video, lo que permite a pTHINC proporcionar la reproducción de video de una manera independiente del formato. Finalmente, aunque el hardware de video de las PDAs no pueda acelerar la reproducción, el proceso de conversión de espacio de color es lo suficientemente simple como para no imponer requisitos poco razonables en la PDA. Un ejemplo más concreto de cómo pTHINC aprovecha el hardware de video PDA para admitir la reproducción de video se puede ver en nuestra implementación de prototipo en la popular PDA Dell Axim X51v, que está equipada con el acelerador multimedia Intel 2700G. En este caso, pTHINC crea un búfer fuera de pantalla en la memoria de video y escribe y lee desde esta región de memoria datos en formato YV12. Cuando llega un nuevo fotograma de video, los datos de video se copian desde el búfer a una superficie superpuesta en la memoria de video, que es independiente de la superficie normal utilizada para el dibujo tradicional. A medida que los datos YV12 se colocan en la superposición, el acelerador de Intel realiza automáticamente la conversión de espacio de color y el escalado. Al utilizar la superficie de superposición, pTHINC no necesita volver a dibujar la pantalla una vez que la reproducción de video ha terminado, ya que la superficie superpuesta no se ve afectada. Además, las regiones de superposición específicas pueden ser manipuladas aprovechando el hardware de video, por ejemplo, para realizar interpolación lineal de hardware y suavizar el fotograma para mostrarlo a pantalla completa, y para realizar rotación automática cuando el cliente se ejecuta en modo horizontal. 4. RESULTADOS EXPERIMENTALES Hemos implementado un prototipo de pTHINC que ejecuta el cliente en dispositivos Pocket PC basados en Windows Mobile ampliamente utilizados y el servidor en sistemas operativos tanto Windows como Linux. Para demostrar su eficacia en el soporte de aplicaciones web inalámbricas móviles, hemos medido su rendimiento en aplicaciones web. Presentamos resultados experimentales sobre diferentes dispositivos PDA para dos aplicaciones web populares, navegar por páginas web y reproducir contenido de video desde la web. Comparamos pTHINC con aplicaciones web nativas que se ejecutan localmente en la PDA para demostrar la mejora que pTHINC puede proporcionar sobre el enfoque tradicional de cliente pesado. También comparamos pTHINC con tres de los clientes ligeros más utilizados que pueden ejecutarse en PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] y VNC (Virtual Network Computing) [16]. Seguimos la práctica común y nos referimos a Citrix MetaFrameXP y Microsoft Remote Desktop por sus respectivos protocolos de visualización remota, ICA (Independent Computing Architecture) y RDP (Remote Desktop Protocol). 4.1 Plataforma de Pruebas Experimental Realizamos nuestros experimentos web utilizando dos PDA Pocket PC inalámbricas diferentes en un entorno de prueba de red Wi-Fi aislado, como se muestra en la Figura 2. El banco de pruebas consistía en dos dispositivos cliente PDA, un monitor de paquetes, un servidor de cliente ligero y un servidor web. Excepto por las PDAs, todas las demás máquinas eran servidores IBM Netfinity 4500R con procesadores duales Intel PIII de 933 MHz y 512 MB de RAM, y estaban conectadas en una red FastEthernet de 100 Mbps conmutada. El servidor web utilizado fue Apache 1.3.27, el emulador de red fue NISTNet 2.0.12 y el monitor de paquetes fue Ethereal 0.10.9. Los clientes de PDA se conectaron al banco de pruebas a través de un punto de acceso inalámbrico Lucent Orinoco AP-2000 802.11b. Todos los experimentos utilizando la red inalámbrica se llevaron a cabo a una distancia de diez pies del punto de acceso, por lo que consideramos que la cantidad de pérdida de paquetes era insignificante en nuestros experimentos. Se utilizaron dos PDA Pocket PC para proporcionar resultados en modelos antiguos y menos potentes, así como en modelos más nuevos de mayor rendimiento. El modelo anterior era un Dell Axim X5 con 147 Cliente 1024×768 640×480 Profundidad Cambio de tamaño Clip RDP no sí 8 bits no sí VNC sí sí 16 bits no no ICA sí sí 16 bits sí no pTHINC sí sí 24 bits sí no Tabla 2: Configuración del banco de pruebas de cliente ligero con un CPU Intel XScale PXA255 de 400 MHz y 64 MB de RAM ejecutando Windows Mobile 2003 y una tarjeta Dell TrueMobile 1180 de 2.4 GHz CompactFlash para redes inalámbricas. El modelo más nuevo era un Dell Axim X51v con un procesador Intel XScale XPA270 de 624 MHz y 64 MB de RAM ejecutando Windows Mobile 5.0 y con red inalámbrica 802.11b integrada. El X51v tiene un acelerador multimedia Intel 2700G con 16MB de memoria de video. Ambas PDAs son capaces de mostrar colores de 16 bits pero tienen diferentes tamaños de pantalla y resoluciones de visualización. El X5 tiene una pantalla diagonal de 3.5 pulgadas con una resolución de 240×320. El X51v tiene una pantalla diagonal de 3.7 pulgadas con una resolución de 480×640. Los cuatro clientes ligeros que utilizamos admiten diferentes niveles de calidad de visualización, como se resume en la Tabla 2. El cliente de RDP solo admite una resolución de pantalla fija de 640×480 en el servidor con una profundidad de color de 8 bits, mientras que otras plataformas ofrecen niveles más altos de calidad de visualización. Para proporcionar una comparación justa en todas las plataformas, realizamos nuestros experimentos con sesiones de cliente ligero configuradas para dos posibles resoluciones, 1024×768 y 640×480. Tanto ICA como VNC se configuraron para usar la resolución nativa de PDA con una profundidad de color de 16 bits. El prototipo actual de pTHINC utiliza color de 24 bits directamente y el cliente reduce la resolución de las actualizaciones al nivel de color de 16 bits disponible en la PDA. RDP se configuró utilizando solo una profundidad de color de 8 bits ya que no admite ninguna profundidad de color mejor. Dado que tanto pTHINC como ICA ofrecen la capacidad de ver la pantalla redimensionada para ajustarse a la pantalla, medimos ambos clientes con y sin la pantalla redimensionada para ajustarse a la pantalla del PDA. Cada cliente ligero fue probado utilizando el modo de paisaje en lugar del modo retrato cuando estaba disponible. Todos los sistemas que se ejecutan en el X51v podrían funcionar en modo horizontal porque el hardware proporciona una función de modo horizontal. Sin embargo, el X5 no proporciona esta funcionalidad. Solo pTHINC admite directamente el modo paisaje, por lo que era el único sistema que podía ejecutarse en modo paisaje tanto en el X5 como en el X51v. Para proporcionar una comparación justa, también estandarizamos en hardware y sistemas operativos comunes siempre que sea posible. Todos los sistemas utilizaron el servidor Netfinity como servidor de cliente ligero. Para los dos sistemas diseñados para servidores Windows, ICA y RDP, ejecutamos Windows Server 2003 en el servidor. Para los otros sistemas que admiten servidores basados en X, ejecutamos la distribución Debian Linux Inestable con el kernel Linux 2.6.10 en el servidor. Utilizamos las últimas versiones de servidores de cliente ligero disponibles en cada plataforma en el momento de nuestros experimentos, a saber, Citrix MetaFrame XP Server para Windows Feature Release 3, Microsoft Remote Desktop integrado en Windows XP y Windows 2003 utilizando RDP 5.2, y VNC 4.0.4.2. Para los benchmarks de aplicaciones, utilizamos dos benchmarks de aplicaciones web para nuestros experimentos basados en dos escenarios de aplicación comunes, navegación por páginas web y reproducción de contenido de video desde la web. Dado que muchos sistemas de cliente ligero, incluidos dos de los probados, son cerrados y propietarios, medimos su rendimiento de manera no invasiva capturando el tráfico de red con un monitor de paquetes y utilizando una variante de benchmarking en cámara lenta [13] previamente desarrollada para medir el rendimiento de clientes ligeros en entornos de PDA [10]. Esta metodología de medición tiene en cuenta tanto el desacoplamiento de la visualización que puede ocurrir entre el cliente y el servidor en sistemas de cliente ligero, como el tiempo de procesamiento del cliente, que puede ser significativo en el caso de las PDAs. Para medir el rendimiento de la navegación web, utilizamos un benchmark de navegación web basado en la Prueba de Carga de Páginas de Texto Web del conjunto de benchmarks Ziff-Davis i-Bench [7]. El punto de referencia consiste en la carga controlada de 55 páginas desde el servidor web mediante JavaScript. Las páginas contienen tanto texto como gráficos, con páginas de diferentes tamaños. Los gráficos son imágenes incrustadas en formatos GIF y JPEG. El benchmark original i-Bench fue modificado para pruebas de rendimiento en cámara lenta al introducir retrasos de varios segundos entre las páginas utilizando JavaScript. Luego se realizaron dos pruebas, una en la que se agregaron retrasos entre cada página, y otra en la que las páginas se cargaron continuamente sin esperar a que se mostraran en el cliente. En la primera prueba, los retrasos se ajustaron lo suficiente en cada caso para garantizar que cada página pudiera ser recibida y mostrada en el cliente por completo sin solapamiento temporal en la transferencia de los datos pertenecientes a dos páginas consecutivas. Utilizamos el monitor de paquetes para registrar el tráfico de paquetes para cada ejecución de la prueba de referencia, luego utilizamos las marcas de tiempo del primer y último paquete en la traza para obtener nuestras medidas de latencia [10]. El monitor de paquetes también registró la cantidad de datos transmitidos entre el cliente y el servidor. La proporción entre el tráfico de datos en las dos pruebas produce un factor de escala. Este factor de escala muestra la pérdida de datos entre el servidor y el cliente debido a la incapacidad del cliente para procesar los datos lo suficientemente rápido. El producto del factor de escala con la medición de latencia produce la verdadera latencia teniendo en cuenta el tiempo de procesamiento del cliente. Para ejecutar la prueba de navegación web, utilizamos Mozilla Firefox 1.0.4 en el servidor de cliente ligero para los clientes ligeros, y Windows Internet Explorer (IE) Mobile para 2003 y Mobile para 5.0 para los navegadores nativos en las PDAs X5 y X51v, respectivamente. En todos los casos, el navegador web utilizado se ajustó para ocupar toda la región de visualización disponible. Para medir el rendimiento de reproducción de video, utilizamos un banco de pruebas de video que consistía en reproducir un clip de video MPEG-1 de 34.75 segundos que contenía una mezcla de noticias y programación de entretenimiento a resolución de pantalla completa. El videoclip tiene un tamaño de 5.11 MB y consta de 834 cuadros de píxeles de 352x240 con una velocidad de cuadro ideal de 24 cuadros por segundo. Medimos el rendimiento del video utilizando pruebas de referencia en cámara lenta al monitorear el tráfico de paquetes resultante a dos velocidades de reproducción, 1 cuadro por segundo (fps) y 24 fps, y comparando los resultados para determinar los retrasos en la reproducción y las caídas de cuadros que ocurren a 24 fps para medir la calidad general del video [13]. Por ejemplo, el 100% de calidad significa que todos los fotogramas del video se reprodujeron a velocidad en tiempo real. Por otro lado, una calidad del 50% podría significar que se eliminó la mitad de los datos del video, o que el clip tardó el doble en reproducirse a pesar de que se mostró toda la información del video. Para ejecutar la prueba de rendimiento de video, utilizamos Windows Media Player 9 para servidores de clientes ligeros basados en Windows, MPlayer 1.0 pre 6 para servidores de clientes ligeros basados en X, y Windows Media Player 9 Mobile y 10 Mobile para los reproductores de video nativos que se ejecutan localmente en las PDAs X5 y X51v, respectivamente. En todos los casos, el reproductor de video utilizado se dimensionó para llenar toda la región de visualización disponible. Las Figuras 3 y 4 muestran los resultados de ejecutar la prueba de navegación por la web. Para cada plataforma, mostramos resultados de hasta cuatro configuraciones diferentes, dos en el X5 y dos en el X51v, dependiendo de si cada configuración era compatible. Sin embargo, no todas las plataformas podrían admitir todas las configuraciones. El navegador local solo se ejecuta a la resolución de pantalla de la PDA, 480×680 o menos para el X51v y el X5. RDP solo funciona a 640×480. Ninguna plataforma podía soportar una resolución de pantalla de 1024×768. ICA solo funcionaba en el X5 y no podía ejecutarse en el X51v porque no era compatible con Windows Mobile 5. La Figura 3 muestra la latencia promedio por página web para cada plataforma. pTHINC proporciona la latencia promedio más baja en la navegación web en ambas PDAs. En el X5, pTHINC funciona hasta 70 veces mejor que otros sistemas de cliente ligero y 8 veces mejor que el navegador local. En el X51v, pTHINC funciona hasta 80 veces mejor que otros sistemas de cliente ligero y 7 veces mejor que el navegador nativo. De hecho, todos los clientes ligeros excepto VNC superan al navegador local de PDA, demostrando los beneficios de rendimiento del enfoque de cliente ligero. Los estudios de usabilidad han demostrado que las páginas web deben tardar menos de un segundo en descargarse para que el usuario experimente una navegación web ininterrumpida [14]. Las mediciones muestran que solo los clientes delgados ofrecen latencias de página web de menos de un segundo. Por el contrario, el navegador local requiere más de 3 segundos en promedio por página web. El navegador local funciona peor ya que necesita ejecutar un navegador web más limitado para procesar el HTML, JavaScript y realizar todo el renderizado utilizando las capacidades limitadas de la PDA. Los clientes ligeros pueden aprovecharse de hardware de servidor más rápido y un navegador web altamente optimizado para procesar el contenido web mucho más rápido. La Figura 3 muestra que RDP es la plataforma más rápida después de pTHINC. Sin embargo, RDP solo puede ejecutarse a una resolución fija de 640×480 y una profundidad de color de 8 bits. Además, RDP también recorta la pantalla al tamaño de la pantalla de la PDA para no tener que enviar actualizaciones que no son visibles en la pantalla de la PDA. Esto proporciona un beneficio de rendimiento siempre y cuando el resto del contenido web no se visualice, pero degrada el rendimiento cuando un usuario desplaza la pantalla para ver otro contenido web. RDP logra su rendimiento con una calidad de visualización significativamente inferior en comparación con otros clientes ligeros y con recortes adicionales en la visualización que no son utilizados por otros sistemas. Como resultado, el rendimiento de RDP por sí solo no proporciona una comparación completa con las otras plataformas. Por el contrario, pTHINC ofrece el mejor rendimiento al mismo tiempo que proporciona una calidad de visualización igual o mejor que los otros sistemas. Dado que VNC e ICA ofrecen una calidad de visualización similar a pTHINC, estos sistemas proporcionan una comparación más justa de diferentes enfoques de cliente ligero. ICA funciona peor en parte porque utiliza primitivas de visualización de nivel superior que requieren costos adicionales de procesamiento por parte del cliente. VNC funciona peor en parte porque pierde datos de visualización debido a su mecanismo de entrega de cliente-pull y debido a los costos de procesamiento del cliente en descomprimir primitivas de píxeles crudos. En ambos casos, su rendimiento se vio limitado en parte porque sus clientes de PDA no podían mantenerse al ritmo al que se mostraban las páginas web. La Figura 3 también muestra las medidas para aquellos clientes ligeros que admiten redimensionar la pantalla para ajustarse a la pantalla de la PDA, a saber, ICA y pTHINC. El redimensionamiento requiere un procesamiento adicional, lo que resulta en latencias promedio más lentas de las páginas web. Las mediciones muestran que el retraso adicional incurrido por ICA al cambiar el tamaño es mucho más sustancial que para pTHINC. ICA realiza redimensionamiento en el cliente PDA más lento. Por el contrario, pTHINC aprovecha el servidor más potente para redimensionar, reduciendo la diferencia de rendimiento entre redimensionar y no redimensionar. A diferencia de ICA, pTHINC es capaz de proporcionar latencias de descarga de páginas web en menos de un segundo en ambos casos. La Figura 4 muestra los datos transferidos en KB por página al ejecutar la versión de cámara lenta de las pruebas. Todas las plataformas tienen requisitos modestos de transferencia de datos de aproximadamente 100 KB por página o menos. Esto está bien dentro de la capacidad de ancho de banda de las redes Wi-Fi. Las mediciones muestran que el navegador local no transfiere la menor cantidad de datos. Esto es sorprendente ya que HTML suele considerarse una representación muy compacta del contenido. En cambio, RDP es la plataforma más eficiente en ancho de banda, en gran parte debido a que utiliza solo una profundidad de color de 8 bits y recorte de pantalla para no transferir la página web completa al cliente. En general, pTHINC tiene los mayores requisitos de datos, ligeramente más que VNC. Esto se debe en gran medida a la falta de soporte nativo de los prototipos actuales de pTHINC para datos de color de 16 bits en el protocolo de comunicación. Sin embargo, este resultado también destaca el rendimiento de pTHINCs, ya que es más rápido que todos los demás sistemas incluso al transferir más datos. Además, dado que los modelos más recientes de PDA admiten colores completos de 24 bits, estos resultados indican que pTHINC seguirá proporcionando un buen rendimiento en la navegación web. Dado que la usabilidad y la calidad de la pantalla son tan importantes como el rendimiento, las Figuras 5 a 8 comparan capturas de pantalla de los diferentes clientes ligeros al mostrar una página web, en este caso del popular sitio de noticias de la BBC. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo paisaje. Figura 5: Captura de pantalla del navegador: RDP 640x480. Figura 6: Captura de pantalla del navegador: VNC 1024x768. Figura 7: Captura de pantalla del navegador: ICA redimensionado 1024x768. Figura 8: Captura de pantalla del navegador: pTHINC redimensionado 1024x768 utilizando la configuración de resolución de pantalla máxima para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Si bien las capturas de pantalla carecen de la fidelidad visual de la pantalla real del dispositivo, se pueden hacer varias observaciones. La Figura 5 muestra que RDP no admite el modo de pantalla completa y desperdicia mucho espacio en pantalla para controles y elementos de la interfaz de usuario, lo que obliga al usuario a desplazarse para acceder a todo el contenido de la sesión de navegación web. La Figura 6 muestra que VNC aprovecha mejor el espacio de la pantalla y ofrece una mejor calidad de visualización, pero aún obliga al usuario a desplazarse para ver la página web debido a la falta de soporte para redimensionar. La Figura 7 muestra la capacidad de ICA para mostrar la página web completa dada su soporte de redimensionamiento, pero su falta de capacidad en modo paisaje y su algoritmo de redimensionamiento deficiente comprometen significativamente la calidad de visualización. Por el contrario, la Figura 8 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de pantalla completa de alta calidad del ancho completo de la página web. pTHINC maximiza toda la región de visualización moviendo todos los controles a los botones de la PDA. Además, pTHINC aprovecha la potencia computacional del servidor para utilizar un algoritmo de redimensionamiento de alta calidad y ajustar la pantalla al tamaño de la PDA sin un sobrecoste significativo. Las figuras 9 y 10 muestran los resultados de ejecutar la prueba de reproducción de video. Para cada plataforma excepto ICA, mostramos resultados para una configuración X5 y X51v. ICA no pudo ejecutarse en el X51v como se mencionó anteriormente. Las mediciones se realizaron utilizando configuraciones que reflejaban el entorno desde el cual un usuario tendría que acceder a una sesión web tanto desde una computadora de escritorio como desde una PDA. Por lo tanto, se utilizó una resolución de pantalla del servidor de 1024×768 siempre que fuera posible y el video se mostró a pantalla completa. La resolución de pantalla de RDP se limitaba a 640×480, como se mencionó anteriormente. Dado que ver toda la pantalla del video es la única opción realmente utilizable, redimensionamos la pantalla para que se ajustara a la pantalla de la PDA en aquellas plataformas que admitían esta función, a saber, ICA y pTHINC. La Figura 9 muestra la calidad de video para cada plataforma. pTHINC es el único cliente ligero capaz de proporcionar una calidad de reproducción de video perfecta, similar al reproductor de video nativo de PDA. Todos los demás clientes ligeros ofrecen una calidad de video muy pobre. Con la excepción de RDP en el X51v que proporcionó una calidad de video inaceptable del 35%, ninguno de los otros sistemas pudo siquiera alcanzar el 10% de calidad de video. VNC e ICA tienen la peor calidad al 8% en el dispositivo X5. El soporte de video nativo de pTHINCs permite un rendimiento de video superior, mientras que otros clientes ligeros sufren de su incapacidad para distinguir el video de las actualizaciones normales de la pantalla. Intentan aplicar algoritmos de compresión ineficaces y costosos en los datos de video y no pueden mantenerse al día con la corriente de actualizaciones generadas, lo que resulta en cuadros omitidos o largos tiempos de reproducción. VNC se ve aún más afectado por su modelo de actualización de cliente-pull porque los fotogramas de video se generan más rápido que la velocidad a la que el cliente puede procesar y enviar solicitudes al servidor para obtener la siguiente actualización de pantalla. La Figura 10 muestra los datos totales transferidos durante la reproducción de video a pantalla completa para cada sistema. El reproductor nativo es la plataforma más eficiente en ancho de banda, enviando menos de 6 MB de datos, lo que corresponde a aproximadamente 1.2 Mbps de ancho de banda. La calidad de video al 100% de pTHINCs requiere alrededor de 25 MB de datos, lo que corresponde a un uso de ancho de banda de menos de 6 Mbps. Mientras que los otros clientes ligeros envían menos datos que THINC, lo hacen porque están eliminando datos de video, lo que resulta en una calidad de video degradada. Las figuras 11 a 14 comparan capturas de pantalla de los distintos clientes ligeros al mostrar el videoclip. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo horizontal utilizando la configuración de resolución máxima de pantalla para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Las figuras 11 y 12 muestran que RDP y VNC no pueden mostrar el cuadro completo del video en la pantalla de la PDA. RDP desperdicia espacio en pantalla para los elementos de la interfaz de usuario y VNC solo muestra la esquina superior del marco de video en la pantalla. La Figura 13 muestra que el ICA proporciona redimensionamiento para mostrar todo el fotograma del video, pero no redimensiona proporcionalmente los datos del video, lo que resulta en artefactos de visualización extraños. Por el contrario, la Figura 14 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de alta calidad a pantalla completa de todo el fotograma del video. pTHINC ofrece una visualización de video visualmente más atractiva que RDP, VNC o ICA. 5. TRABAJOS RELACIONADOS Varios estudios han examinado el rendimiento de la navegación web en la computación de cliente ligero [13, 19, 10]. La capacidad de los clientes ligeros para mejorar el rendimiento de la navegación web en PDAs inalámbricas fue demostrada cuantitativamente por primera vez en un estudio previo realizado por uno de los autores [10]. Este estudio demostró que los clientes ligeros pueden ofrecer tanto un rendimiento de navegación web más rápido como una mayor funcionalidad de navegación web. El estudio consideró una amplia gama de contenido web, incluido el contenido de sistemas de información médica. Nuestro trabajo se basa en este estudio previo y considera temas importantes como la usabilidad de los clientes ligeros existentes en entornos de PDA, los compromisos entre la usabilidad y el rendimiento de los clientes ligeros, el rendimiento en diferentes dispositivos de PDA y el rendimiento de los clientes ligeros en aplicaciones web comunes como el video. Se han desarrollado muchos clientes ligeros y algunos tienen clientes de PDA, incluyendo Remote Desktop de Microsoft [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5] y Tarantella [18]. Estos sistemas fueron diseñados inicialmente para computadoras de escritorio y adaptados posteriormente para asistentes digitales personales (PDA). A diferencia de pTHINC, no abordan los problemas clave de arquitectura del sistema y usabilidad importantes para las PDAs. Esto limita la calidad de visualización, el rendimiento del sistema, el espacio de pantalla disponible y la usabilidad general en PDAs. pTHINC se basa en trabajos anteriores de dos de los autores sobre THINC [1], ampliando la arquitectura del servidor e introduciendo una interfaz de cliente y un modelo de uso para admitir eficientemente dispositivos PDA en aplicaciones web móviles. Otros enfoques para mejorar el rendimiento de la navegación web inalámbrica móvil se han centrado en el uso de proxies de transcodificación y almacenamiento en caché en conjunto con el modelo de cliente pesado [11, 9, 4, 8]. Trabajan mediante el envío de funcionalidades a proxies externos y utilizando aplicaciones de navegación especializadas en el dispositivo PDA que se comunican con el proxy. Nuestro enfoque de cliente ligero difiere fundamentalmente de estos enfoques de cliente pesado al trasladar toda la lógica del navegador web al servidor, aprovechando las inversiones existentes en navegadores web de escritorio y aplicaciones auxiliares para funcionar de manera integrada con los sistemas de producción sin necesidad de configuraciones adicionales de proxy o modificaciones en el navegador web. Con la aparición de la navegación web en dispositivos con pantallas pequeñas, los sitios web han sido rediseñados utilizando mecanismos como WAP y se han desarrollado navegadores web nativos especializados para adaptarse a las necesidades de estos dispositivos. Recientemente, Opera ha desarrollado el navegador web Opera Mini [15], que utiliza un enfoque similar al modelo de cliente ligero para proporcionar acceso a través de una serie de dispositivos móviles que normalmente no podrían ejecutar un navegador web. En lugar de requerir que el dispositivo procese las páginas web, utiliza un servidor remoto para preprocesar la página antes de enviarla al teléfono. CONCLUSIONES Hemos introducido pTHINC, una arquitectura de cliente ligero para PDAs inalámbricas. pTHINC proporciona mecanismos arquitectónicos y de usabilidad clave como el redimensionamiento de pantalla en el lado del servidor, rotación de pantalla en el lado del cliente utilizando técnicas simples de copia, soporte de video YUV, y maximización del espacio de pantalla para actualizaciones de visualización y aprovechamiento de los botones de control existentes en las PDAs para elementos de la interfaz de usuario. pTHINC soporta de manera transparente navegadores de escritorio tradicionales y sus aplicaciones auxiliares en dispositivos PDA y computadoras de escritorio, brindando a los usuarios móviles acceso ubicuo a un entorno web consistente, personalizado y completo en dispositivos heterogéneos. Hemos implementado pTHINC y medido su rendimiento en aplicaciones web en comparación con los sistemas de cliente ligero existentes y las aplicaciones web nativas. Nuestros resultados en múltiples dispositivos móviles inalámbricos demuestran que pTHINC ofrece un rendimiento de navegación web hasta 80 veces mejor que los sistemas de cliente ligero existentes, y 8 veces mejor que un navegador PDA nativo. Además, pTHINC es el único cliente ligero de PDA 151 Figura 11: Captura de pantalla de video: RDP 640x480 Figura 12: Captura de pantalla de video: VNC 1024x768 Figura 13: Captura de pantalla de video: ICA redimensionado 1024x768 Figura 14: Captura de pantalla de video: pTHINC redimensionado 1024x768 que proporciona de manera transparente la reproducción de video a pantalla completa y a velocidad de cuadro completa, haciendo que los sitios web con contenido multimedia sean accesibles para los usuarios de la web móvil. 7. AGRADECIMIENTOS Este trabajo fue apoyado en parte por las subvenciones NSF ITR CCR0219943 y CNS-0426623, y un premio IBM SUR. 8. REFERENCIAS [1] R. Baratto, L. Kim y J. Nieh. THINC: Una arquitectura de visualización virtual para la computación de cliente ligero. En Actas del 20º Simposio de Principios de Sistemas Operativos de la ACM (SOSP), octubre de 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius y A. Muir. Microsoft Windows NT Server 4.0, Terminal Server Edition: Referencia Técnica. Microsoft Press, Redmond, WA, 1999. [4] A.\nMicrosoft Press, Redmond, WA, 1999. [4] A. Fox, I. Goldberg, S. D. Gribble y D. C. Lee. Experiencia con Top Gun Wingman: un navegador web gráfico basado en proxy para el 3Com PalmPilot. En Actas de Middleware 98, Lake District, Inglaterra, septiembre de 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Ley de Portabilidad y Responsabilidad del Seguro de Salud. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench versión 1.5. http://etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi. Sobre agentes de proxy, movilidad y acceso web. Redes y aplicaciones móviles, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon y A. Ortega. Diseño e Implementación de un Proxy de Caché Blando. Redes de Computadoras y Sistemas ISDN, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana y S. Varshneya. Mejorando la navegación web en PDAs inalámbricas utilizando computación de cliente ligero. En Actas de la 13ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham y P. Shenoy. TranSquid: Proxy de transcodificación y almacenamiento en caché para entornos de comercio electrónico heterogéneos. En Actas del 12º Taller IEEE sobre Problemas de Investigación en Ingeniería de Datos (RIDE 02), febrero de 2002. [12] Visor VNC .NET para PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang y N. Novik. Midiendo el rendimiento de clientes ligeros utilizando pruebas de referencia en cámara lenta. ACM Trans. Sistemas de Computación, 21(1):87-115, Feb. 2003. [14] J. Nielsen. Diseño de Usabilidad en la Web. New Riders Publishing, Indianápolis, IN, 2000. [15] Navegador Opera Mini. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood y A. Hopper. Computación de Red Virtual. IEEE Internet Computing, 2(1), enero/febrero de 1998. [17] R. W. Scheifler y J. Gettys. El Sistema de Ventanas X. ACM Trans. Gr., 5(2):79-106, Abr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla y M. Sajjadpour. Rendimiento de la navegación web en computación inalámbrica de cliente ligero. En Actas de la 12ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2003. 152 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "web browser": {
            "translated_key": "navegador web",
            "is_in_text": true,
            "original_annotated_sentences": [
                "pTHINC: A Thin-Client Architecture for Mobile Wireless Web Joeng Kim, Ricardo A. Baratto, and Jason Nieh Department of Computer Science Columbia University, New York, NY, USA {jk2438, ricardo, nieh}@cs.columbia.edu ABSTRACT Although web applications are gaining popularity on mobile wireless PDAs, web browsers on these systems can be quite slow and often lack adequate functionality to access many web sites.",
                "We have developed pTHINC, a PDA thinclient solution that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide high-fidelity display and seamless mobility across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available screen resolution for application display.",
                "We have implemented pTHINC on Windows Mobile and evaluated its performance on mobile wireless devices.",
                "Our results compared to local PDA web browsers and other thin-client approaches demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "Categories and Subject Descriptors: C.2.4 ComputerCommunication-Networks: Distributed Systems - client/ server General Terms: Design, Experimentation, Performance 1.",
                "INTRODUCTION The increasing ubiquity of wireless networks and decreasing cost of hardware is fueling a proliferation of mobile wireless handheld devices, both as standalone wireless Personal Digital Assistants (PDA) and popular integrated PDA/cell phone devices.",
                "These devices are enabling new forms of mobile computing and communication.",
                "Service providers are leveraging these devices to deliver pervasive web access, and mobile web users already often use these devices to access web-enabled information such as news, email, and localized travel guides and maps.",
                "It is likely that within a few years, most of the devices accessing the web will be mobile.",
                "Users typically access web content by running a <br>web browser</br> and associated helper applications locally on the PDA.",
                "Although native web browsers exist for PDAs, they deliver subpar performance and have a much smaller feature set and more limited functionality than their desktop computing counterparts [10].",
                "As a result, PDA web browsers are often not able to display web content from web sites that leverage more advanced web technologies to deliver a richer web experience.",
                "This fundamental problem arises for two reasons.",
                "First, because PDAs have a completely different hardware/software environment from traditional desktop computers, web applications need to be rewritten and customized for PDAs if at all possible, duplicating development costs.",
                "Because the desktop application market is larger and more mature, most development effort generally ends up being spent on desktop applications, resulting in greater functionality and performance than their PDA counterparts.",
                "Second, PDAs have a more resource constrained environment than traditional desktop computers to provide a smaller form factor and longer battery life.",
                "Desktop web browsers are large, complex applications that are unable to run on a PDA.",
                "Instead, developers are forced to significantly strip down these web browsers to provide a usable PDA <br>web browser</br>, thereby crippling PDA browser functionality.",
                "Thin-client computing provides an alternative approach for enabling pervasive web access from handheld devices.",
                "A thin-client computing system consists of a server and a client that communicate over a network using a remote display protocol.",
                "The protocol enables graphical displays to be virtualized and served across a network to a client device, while application logic is executed on the server.",
                "Using the remote display protocol, the client transmits user input to the server, and the server returns screen updates of the applications from the server to the client.",
                "Using a thin-client model for mobile handheld devices, PDAs can become simple stateless clients that leverage the remote server capabilities to execute web browsers and other helper applications.",
                "The thin-client model provides several important benefits for mobile wireless web.",
                "First, standard desktop web applications can be used to deliver web content to PDAs without rewriting or adapting applications to execute on a PDA, reducing development costs and leveraging existing software investments.",
                "Second, complex web applications can be executed on powerful servers instead of running stripped down versions on more resource constrained PDAs, providing greater functionality and better performance [10].",
                "Third, web applications can take advantage of servers with faster networks and better connectivity, further boosting application performance.",
                "Fourth, PDAs can be even simpler devices since they do not need to perform complex application logic, potentially reducing energy consumption and extend143 ing battery life.",
                "Finally, PDA thin clients can be essentially stateless appliances that do not need to be backed up or restored, require almost no maintenance or upgrades, and do not store any sensitive data that can be lost or stolen.",
                "This model provides a viable avenue for medical organizations to comply with HIPAA regulations [6] while embracing mobile handhelds in their day to day operations.",
                "Despite these potential advantages, thin clients have been unable to provide the full range of these benefits in delivering web applications to mobile handheld devices.",
                "Existing thin clients were not designed for PDAs and do not account for important usability issues in the context of small form factor devices, resulting in difficulty in navigating displayed web content.",
                "Furthermore, existing thin clients are ineffective at providing seamless mobility across the heterogeneous mix of device display sizes and resolutions.",
                "While existing thin clients can already provide faster performance than native PDA web browsers in delivering HTML web content, they do not effectively support more display-intensive web helper applications such as multimedia video, which is increasingly an integral part of available web content.",
                "To harness the full potential of thin-client computing in providing mobile wireless web on PDAs, we have developed pTHINC (PDA THin-client InterNet Computing). pTHINC builds on our previous work on THINC [1] to provide a thinclient architecture for mobile handheld devices. pTHINC virtualizes and resizes the display on the server to efficiently deliver high-fidelity screen updates to a broad range of different clients, screen sizes, and screen orientations, including both portrait and landscape viewing modes.",
                "This enables pTHINC to provide the same persistent web session across different client devices.",
                "For example, pTHINC can provide the same web browsing session appropriately scaled for display on a desktop computer and a PDA so that the same cookies, bookmarks, and other meta-data are continuously available on both machines simultaneously. pTHINCs virtual display approach leverages semantic information available in display commands, and client-side video hardware to provide more efficient remote display mechanisms that are crucial for supporting more display-intensive web applications.",
                "Given limited display resolution on PDAs, pTHINC maximizes the use of screen real estate for remote display by moving control functionality from the screen to readily available PDA control buttons, improving system usability.",
                "We have implemented pTHINC on Windows Mobile and demonstrated that it works transparently with existing applications, window systems, and operating systems, and does not require modifying, recompiling, or relinking existing software.",
                "We have quantitatively evaluated pTHINC against local PDA web browsers and other thin-client approaches on Pocket PC devices.",
                "Our experimental results demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "This paper presents the design and implementation of pTHINC.",
                "Section 2 describes the overall usage model and usability characteristics of pTHINC.",
                "Section 3 presents the design and system architecture of pTHINC.",
                "Section 4 presents experimental results measuring the performance of pTHINC on web applications and comparing it against native PDA browsers and other popular PDA thin-client systems.",
                "Section 5 discusses related work.",
                "Finally, we present some concluding remarks. 2.",
                "PTHINC USAGE MODEL pTHINC is a thin-client system that consists of a simple client viewer application that runs on the PDA and a server that runs on a commodity PC.",
                "The server leverages more powerful PCs to to run web browsers and other application logic.",
                "The client takes user input from the PDA stylus and virtual keyboard and sends them to the server to pass to the applications.",
                "Screen updates are then sent back from the server to the client for display to the user.",
                "When the pTHINC PDA client is started, the user is presented with a simple graphical interface where information such as server address and port, user authentication information, and session settings can be provided. pTHINC first attempts to connect to the server and perform the necessary handshaking.",
                "Once this process has been completed, pTHINC presents the user with the most recent display of his session.",
                "If the session does not exist, a new session is created.",
                "Existing sessions can be seamlessly continued without changes in the session setting or server configuration.",
                "Unlike other thin-client systems, pTHINC provides a user with a persistent web session model in which a user can launch a session running a <br>web browser</br> and associated applications at the server, then disconnect from that session and reconnect to it again anytime.",
                "When a user reconnects to the session, all of the applications continue running where the user left off, so that the user can continue working as though he or she never disconnected.",
                "The ability to disconnect and reconnect to a session at anytime is an important benefit for mobile wireless PDA users which may have intermittent network connectivity. pTHINCs persistent web session model enables a user to reconnect to a web session from devices other than the one on which the web session was originally initiated.",
                "This provides users with seamless mobility across different devices.",
                "If a user loses his PDA, he can easily use another PDA to access his web session.",
                "Furthermore, pTHINC allows users to use non-PDA devices to access web sessions as well.",
                "A user can access the same persistent web session on a desktop PC as on a PDA, enabling a user to use the same web session from any computer. pTHINCs persistent web session model addresses a key problem encountered by mobile web users, the lack of a common web environment across computers.",
                "Web browsers often store important information such as bookmarks, cookies, and history, which enable them to function in a much more useful manner.",
                "The problem that occurs when a user moves between computers is that this data, which is specific to a <br>web browser</br> installation, cannot move with the user.",
                "Furthermore, web browsers often need helper applications to process different media content, and those applications may not be consistently available across all computers. pTHINC addresses this problem by enabling a user to remotely use the exact same <br>web browser</br> environment and helper applications from any computer.",
                "As a result, pTHINC can provide a common, consistent web browsing environment for mobile users across different devices without requiring them to attempt to repeatedly synchronize different web browsing environments across multiple machines.",
                "To enable a user to access the same web session on different devices, pTHINC must provide mechanisms to support different display sizes and resolutions.",
                "Toward this end, pTHINC provides a zoom feature that enables a user to zoom in and out of a display and allows the display of a web 144 Figure 1: pTHINC shortcut keys session to be resized to fit the screen of the device being used.",
                "For example, if the server is running a web session at 1024×768 but the client is a PDA with a display resolution of 640×480, pTHINC will resize the desktop display to fit the full display in the smaller screen of the PDA. pTHINC provides the PDA user with the option to increase the size of the display by zooming in to different parts of the display.",
                "Users are often familiar with the general layout of commonly visited websites, and are able to leverage this resizing feature to better navigate through web pages.",
                "For example, a user can zoom out of the display to view the entire page content and navigate hyperlinks, then zoom in to a region of interest for a better view.",
                "To enable a user to access the same web session on different devices, pTHINC must also provide mechanisms to support different display orientations.",
                "In a desktop environment, users are typically accustomed to having displays presented in landscape mode where the screen width is larger than its height.",
                "However, in a PDA environment, the choice is not always obvious.",
                "Some users may prefer having the display in portrait mode, as it is easier to hold the device in their hands, while others may prefer landscape mode in order to minimize the amount of side-scrolling necessary to view a web page.",
                "To accommodate PDA user preferences, pTHINC provides an orientation feature that enables it to seamless rotate the display between landscape and portrait mode.",
                "The landscape mode is particularly useful for pTHINC users who frequently access their web sessions on both desktop and PDA devices, providing those users with the same familiar landscape setting across different devices.",
                "Because screen space is a relatively scarce resource on PDAs, pTHINC runs in fullscreen mode to maximize the screen area available to display the web session.",
                "To be able to use all of the screen on the PDA and still allow the user to control and interact with it, pTHINC reuses the typical shortcut buttons found on PDAs to perform all the control functions available to the user.",
                "The buttons used by pTHINC do not require any OS environment changes; they are simply intercepted by the pTHINC client application when they are pressed.",
                "Figure 1 shows how pTHINC utilizes the shortcut buttons to provide easy navigation and improve the overall user experience.",
                "These buttons are not device specific, and the layout shown is common to widelyused PocketPC devices. pTHINC provides six shortcuts to support its usage model: • Rotate Screen: The record button on the left edge is used to rotate the screen between portrait and landscape mode each time the button is pressed. • Zoom Out: The leftmost button on the bottom front is used to zoom out the display of the web session providing a birds eye view of the web session. • Zoom In: The second leftmost button on the bottom front is used to zoom in the display of the web session to more clearly view content of interest. • Directional Scroll: The middle button on the bottom front is used to scroll around the display using a single control button in a way that is already familiar to PDA users.",
                "This feature is particularly useful when the user has zoomed in to a region of the display such that only part of the display is visible on the screen. • Show/Hide Keyboard: The second rightmost button on the bottom front is used to bring up a virtual keyboard drawn on the screen for devices which have no physical keyboard.",
                "The virtual keyboard uses standard PDA OS mechanisms, providing portability across different PDA environments. • Close Session: The rightmost button on the bottom front is used to disconnect from the pTHINC session. pTHINC uses the PDA touch screen, stylus, and standard user interface mechanisms to provide a user interface pointand-click metaphor similar to that provided by the mouse in a traditional desktop computing environment. pTHINC does not use a cursor since PDA environments do not provide one.",
                "Instead, a user can use the stylus to tap on different sections of the touch screen to indicate input focus.",
                "A single tap on the touch screen generates a corresponding single click mouse event.",
                "A double tap on the touch screen generates a corresponding double click mouse event. pTHINC provides two-button mouse emulation by using the stylus to press down on the screen for one second to generate a right mouse click.",
                "All of these actions are identical to the way users already interact with PDA applications in the common PocketPC environment.",
                "In web browsing, users can click on hyperlinks and focus on input boxes by simply tapping on the desired screen area of interest.",
                "Unlike local PDA web browsers and other PDA applications, pTHINC leverages more powerful desktop user interface metaphors to enable users to manipulate multiple open application windows instead of being limited to a single application window at any given moment.",
                "This provides increased browsing flexibility beyond what is currently available on PDA devices.",
                "Similar to a desktop environment, browser windows and other application windows can be moved around by pressing down and dragging the stylus similar to a mouse. 3.",
                "PTHINC SYSTEM ARCHITECTURE pTHINC builds on the THINC [1] remote display architecture to provide a thin-client system for PDAs. pTHINC virtualizes the display at the server by leveraging the video device abstraction layer, which sits below the window server and above the framebuffer.",
                "This is a well-defined, low-level, device-dependent layer that exposes the video hardware to the display system. pTHINC accomplishes this through a simple virtual display driver that intercepts drawing commands, packetizes, and sends them over the network. 145 While other thin-client approaches intercept display commands at other layers of the display subsystem, pTHINCs display virtualization approach provides some key benefits in efficiently supporting PDA clients.",
                "For example, intercepting display commands at a higher layer between applications and the window system as is done by X [17] requires replicating and running a great deal of functionality on the PDA that is traditionally provided by the desktop window system.",
                "Given both the size and complexity of traditional window systems, attempting to replicate this functionality in the restricted PDA environment would have proven to be a daunting, and perhaps unfeasible task.",
                "Furthermore, applications and the window system often require tight synchronization in their operation and imposing a wireless network between them by running the applications on the server and the window system on the client would significantly degrade performance.",
                "On the other hand, intercepting at a lower layer by extracting pixels out of the framebuffer as they are rendered provides a simple solution that requires very little functionality on the PDA client, but can also result in degraded performance.",
                "The reason is that by the time the remote display server attempts to send screen updates, it has lost all semantic information that may have helped it encode efficiently, and it must resort to using a generic and expensive encoding mechanism on the server, as well as a potentially expensive decoding mechanism on the limited PDA client.",
                "In contrast to both the high and low level interception approaches, pTHINCs approach of intercepting at the device driver provides an effective balance between client and server simplicity, and the ability to efficiently encode and decode screen updates.",
                "By using a low-level virtual display approach, pTHINC can efficiently encode application display commands using only a small set of low-level commands.",
                "In a PDA environment, this set of commands provides a crucial component in maintaining the simplicity of the client in the resourceconstrained PDA environment.",
                "The display commands are shown in Table 1, and work as follows.",
                "COPY instructs the client to copy a region of the screen from its local framebuffer to another location.",
                "This command improves the user experience by accelerating scrolling and opaque window movement without having to resend screen data from the server.",
                "SFILL, PFILL, and BITMAP are commands that paint a fixed-size region on the screen.",
                "They are useful for accelerating the display of solid window backgrounds, desktop patterns, backgrounds of web pages, text drawing, and certain operations in graphics manipulation programs.",
                "SFILL fills a sizable region on the screen with a single color.",
                "PFILL replicates a tile over a screen region.",
                "BITMAP performs a fill using a bitmap of ones and zeros as a stipple to apply a foreground and background color.",
                "Finally, RAW is used to transmit unencoded pixel data to be displayed verbatim on a region of the screen.",
                "This command is invoked as a last resort if the server is unable to employ any other command, and it is the only command that may be compressed to mitigate its impact on network bandwidth. pTHINC delivers its commands using a non-blocking, serverpush update mechanism, where as soon as display updates are generated on the server, they are sent to the client.",
                "Clients are not required to explicitly request display updates, thus minimizing the impact that the typical varying network latency of wireless links may have on the responsiveness of the system.",
                "Keeping in mind that resource Command Description COPY Copy a frame buffer area to specified coordinates SFILL Fill an area with a given pixel color value PFILL Tile an area with a given pixel pattern BITMAP Fill a region using a bit pattern RAW Display raw pixel data at a given location Table 1: pTHINC Protocol Display Commands constrained PDAs and wireless networks may not be able to keep up with a fast server generating a large number of updates, pTHINC is able to coalesce, clip, and discard updates automatically if network loss or congestion occurs, or the client cannot keep up with the rate of updates.",
                "This type of behavior proves crucial in a web browsing environment, where for example, a page may be redrawn multiple times as it is rendered on the fly by the browser.",
                "In this case, the PDA will only receive and render the final result, which clearly is all the user is interesting in seeing. pTHINC prioritizes the delivery of updates to the PDA using a Shortest-Remaining-Size-First (SRSF) preemptive update scheduler.",
                "SRSF is analogous to Shortest-RemainingProcessing-Time scheduling, which is known to be optimal for minimizing mean response time in an interactive system.",
                "In a web browsing environment, short jobs are associated with text and basic page layout components such as the pages background, which are critical web content for the user.",
                "On the other hand, large jobs are often lower priority beautifying elements, or, even worse, web page banners and advertisements, which are of questionable value to the user as he or she is browsing the page.",
                "Using SRSF, pTHINC is able to maximize the utilization of the relatively scarce bandwidth available on the wireless connection between the PDA and the server. 3.1 Display Management To enable users to just as easily access their <br>web browser</br> and helper applications from a desktop computer at home as from a PDA while on the road, pTHINC provides a resize mechanism to zoom in and out of the display of a web session. pTHINC resizing is completely supported by the server, not the client.",
                "The server resamples updates to fit within the PDAs viewport before they are transmitted over the network. pTHINC uses Fants resampling algorithm to resize pixel updates.",
                "This provides smooth, visually pleasing updates with properly antialiasing and has only modest computational requirements. pTHINCs resizing approach has a number of advantages.",
                "First, it allows the PDA to leverage the vastly superior computational power of the server to use high quality resampling algorithms and produce higher quality updates for the PDA to display.",
                "Second, resizing the screen does not translate into additional resource requirements for the PDA, since it does not need to perform any additional work.",
                "Finally, better utilization of the wireless network is attained since rescaling the updates reduces their bandwidth requirements.",
                "To enable users to orient their displays on a PDA to provide a viewing experience that best accommodates user preferences and the layout of web pages or applications, pTHINC provides a display rotation mechanism to switch between landscape and portrait viewing modes. pTHINC display rotation is completely supported by the client, not the server. pTHINC does not explicitly recalculate the ge146 ometry of display updates to perform rotation, which would be computationally expensive.",
                "Instead, pTHINC simply changes the way data is copied into the framebuffer to switch between display modes.",
                "When in portrait mode, data is copied along the rows of the framebuffer from left to right.",
                "When in landscape mode, data is copied along the columns of the framebuffer from top to bottom.",
                "These very fast and simple techniques replace one set of copy operations with another and impose no performance overhead. pTHINC provides its own rotation mechanism to support a wide range of devices without imposing additional feature requirements on the PDA.",
                "Although some newer PDA devices provide native support for different orientations, this mechanism is not dynamic and requires the user to rotate the PDAs entire user interface before starting the pTHINC client.",
                "Windows Mobile provides native API mechanisms for PDA applications to rotate their UI on the fly, but these mechanisms deliver poor performance and display quality as the rotation is performed naively and is not completely accurate. 3.2 Video Playback Video has gradually become an integral part of the World Wide Web, and its presence will only continue to increase.",
                "Web sites today not only use animated graphics and flash to deliver web content in an attractive manner, but also utilize streaming video to enrich the web interface.",
                "Users are able to view pre-recorded and live newscasts on CNN, watch sports highlights on ESPN, and even search through large collection of videos on Google Video.",
                "To allow applications to provide efficient video playback, interfaces have been created in display systems that allow video device drivers to expose their hardware capabilities back to the applications. pTHINC takes advantage of these interfaces and its virtual device driver approach to provide a virtual bridge between the remote client and its hardware and the applications, and transparently support video playback.",
                "On top of this architecture, pTHINC uses the YUV colorspace to encode the video content, which provides a number of benefits.",
                "First, it has become increasingly common for PDA video hardware to natively support YUV and be able to perform the colorspace conversion and scaling automatically.",
                "As a result, pTHINC is able to provide fullscreen video playback without any performance hits.",
                "Second, the use of YUV allows for a more efficient representation of RGB data without loss of quality, by taking advantage of the human eyes ability to better distinguish differences in brightness than in color.",
                "In particular, pTHINC uses the YV12 format, which allows full color RGB data to be encoded using just 12 bits per pixel.",
                "Third, YUV data is produced as one of the last steps of the decoding process of most video codecs, allowing pTHINC to provide video playback in a manner that is format independent.",
                "Finally, even if the PDAs video hardware is unable to accelerate playback, the colorspace conversion process is simple enough that it does not impose unreasonable requirements on the PDA.",
                "A more concrete example of how pTHINC leverages the PDA video hardware to support video playback can be seen in our prototype implementation on the popular Dell Axim X51v PDA, which is equipped with the Intel 2700G multimedia accelerator.",
                "In this case, pTHINC creates an offscreen buffer in video memory and writes and reads from this memory region data on the YV12 format.",
                "When a new video frame arrives, video data is copied from the buffer to Figure 2: Experimental Testbed an overlay surface in video memory, which is independent of the normal surface used for traditional drawing.",
                "As the YV12 data is put onto the overlay, the Intel accelerator automatically performs both colorspace conversion and scaling.",
                "By using the overlay surface, pTHINC has no need to redraw the screen once video playback is over since the overlapped surface is unaffected.",
                "In addition, specific overlay regions can be manipulated by leveraging the video hardware, for example to perform hardware linear interpolation to smooth out the frame and display it fullscreen, and to do automatic rotation when the client runs in landscape mode. 4.",
                "EXPERIMENTAL RESULTS We have implemented a pTHINC prototype that runs the client on widely-used Windows Mobile-based Pocket PC devices and the server on both Windows and Linux operating systems.",
                "To demonstrate its effectiveness in supporting mobile wireless web applications, we have measured its performance on web applications.",
                "We present experimental results on different PDA devices for two popular web applications, browsing web pages and playing video content from the web.",
                "We compared pTHINC against native web applications running locally on the PDA to demonstrate the improvement that pTHINC can provide over the traditional fat-client approach.",
                "We also compared pTHINC against three of the most widely used thin clients that can run on PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] and VNC (Virtual Network Computing) [16].",
                "We follow common practice and refer to Citrix MetaFrameXP and Microsoft Remote Desktop by their respective remote display protocols, ICA (Independent Computing Architecture) and RDP (Remote Desktop Protocol). 4.1 Experimental Testbed We conducted our web experiments using two different wireless Pocket PC PDAs in an isolated Wi-Fi network testbed, as shown in Figure 2.",
                "The testbed consisted of two PDA client devices, a packet monitor, a thin-client server, and a web server.",
                "Except for the PDAs, all of the other machines were IBM Netfinity 4500R servers with dual 933 MHz Intel PIII CPUs and 512 MB RAM and were connected on a switched 100 Mbps FastEthernet network.",
                "The web server used was Apache 1.3.27, the network emulator was NISTNet 2.0.12, and the packet monitor was Ethereal 0.10.9.",
                "The PDA clients connected to the testbed through a 802.11b Lucent Orinoco AP-2000 wireless access point.",
                "All experiments using the wireless network were conducted within ten feet of the access point, so we considered the amount of packet loss to be negligible in our experiments.",
                "Two Pocket PC PDAs were used to provide results across both older, less powerful models and newer higher performance models.",
                "The older model was a Dell Axim X5 with 147 Client 1024×768 640×480 Depth Resize Clip RDP no yes 8-bit no yes VNC yes yes 16-bit no no ICA yes yes 16-bit yes no pTHINC yes yes 24-bit yes no Table 2: Thin-client Testbed Configuration Setting a 400 MHz Intel XScale PXA255 CPU and 64 MB RAM running Windows Mobile 2003 and a Dell TrueMobile 1180 2.4Ghz CompactFlash card for wireless networking.",
                "The newer model was a Dell Axim X51v with a 624 MHz Intel XScale XPA270 CPU and 64 MB RAM running Windows Mobile 5.0 and integrated 802.11b wireless networking.",
                "The X51v has an Intel 2700G multimedia accelerator with 16MB video memory.",
                "Both PDAs are capable of 16-bit color but have different screen sizes and display resolutions.",
                "The X5 has a 3.5 inch diagonal screen with 240×320 resolution.",
                "The X51v has a 3.7 inch diagonal screen with 480×640.",
                "The four thin clients that we used support different levels of display quality as summarized in Table 2.",
                "The RDP client only supports a fixed 640×480 display resolution on the server with 8-bit color depth, while other platforms provide higher levels of display quality.",
                "To provide a fair comparison across all platforms, we conducted our experiments with thin-client sessions configured for two possible resolutions, 1024×768 and 640×480.",
                "Both ICA and VNC were configured to use the native PDA resolution of 16-bit color depth.",
                "The current pTHINC prototype uses 24-bit color directly and the client downsamples updates to the 16-bit color depth available on the PDA.",
                "RDP was configured using only 8-bit color depth since it does not support any better color depth.",
                "Since both pTHINC and ICA provide the ability to view the display resized to fit the screen, we measured both clients with and without the display resized to fit the PDA screen.",
                "Each thin client was tested using landscape rather than portrait mode when available.",
                "All systems run on the X51v could run in landscape mode because the hardware provides a landscape mode feature.",
                "However, the X5 does not provide this functionality.",
                "Only pTHINC directly supports landscape mode, so it was the only system that could run in landscape mode on both the X5 and X51v.",
                "To provide a fair comparison, we also standardized on common hardware and operating systems whenever possible.",
                "All of the systems used the Netfinity server as the thin-client server.",
                "For the two systems designed for Windows servers, ICA and RDP, we ran Windows 2003 Server on the server.",
                "For the other systems which support X-based servers, VNC and pTHINC, we ran the Debian Linux Unstable distribution with the Linux 2.6.10 kernel on the server.",
                "We used the latest thin-client server versions available on each platform at the time of our experiments, namely Citrix MetaFrame XP Server for Windows Feature Release 3, Microsoft Remote Desktop built into Windows XP and Windows 2003 using RDP 5.2, and VNC 4.0. 4.2 Application Benchmarks We used two web application benchmarks for our experiments based on two common application scenarios, browsing web pages and playing video content from the web.",
                "Since many thin-client systems including two of the ones tested are closed and proprietary, we measured their performance in a noninvasive manner by capturing network traffic with a packet monitor and using a variant of slow-motion benchmarking [13] previously developed to measure thin-client performance in PDA environments [10].",
                "This measurement methodology accounts for both the display decoupling that can occur between client and server in thin-client systems as well as client processing time, which may be significant in the case of PDAs.",
                "To measure web browsing performance, we used a web browsing benchmark based on the Web Text Page Load Test from the Ziff-Davis i-Bench benchmark suite [7].",
                "The benchmark consists of JavaScript controlled load of 55 pages from the web server.",
                "The pages contain both text and graphics with pages varying in size.",
                "The graphics are embedded images in GIF and JPEG formats.",
                "The original i-Bench benchmark was modified for slow-motion benchmarking by introducing delays of several seconds between the pages using JavaScript.",
                "Then two tests were run, one where delays where added between each page, and one where pages where loaded continuously without waiting for them to be displayed on the client.",
                "In the first test, delays were sufficiently adjusted in each case to ensure that each page could be received and displayed on the client completely without temporal overlap in transferring the data belonging to two consecutive pages.",
                "We used the packet monitor to record the packet traffic for each run of the benchmark, then used the timestamps of the first and last packet in the trace to obtain our latency measures [10].",
                "The packet monitor also recorded the amount of data transmitted between the client and the server.",
                "The ratio between the data traffic in the two tests yields a scale factor.",
                "This scale factor shows the loss of data between the server and the client due to inability of the client to process the data quickly enough.",
                "The product of the scale factor with the latency measurement produces the true latency accounting for client processing time.",
                "To run the web browsing benchmark, we used Mozilla Firefox 1.0.4 running on the thin-client server for the thin clients, and Windows Internet Explorer (IE) Mobile for 2003 and Mobile for 5.0 for the native browsers on the X5 and X51v PDAs, respectively.",
                "In all cases, the <br>web browser</br> used was sized to fill the entire display region available.",
                "To measure video playback performance, we used a video benchmark that consisted of playing a 34.75s MPEG-1 video clip containing a mix of news and entertainment programming at full-screen resolution.",
                "The video clip is 5.11 MB and consists of 834 352x240 pixel frames with an ideal frame rate of 24 frames/sec.",
                "We measured video performance using slow-motion benchmarking by monitoring resulting packet traffic at two playback rates, 1 frames/second (fps) and 24 fps, and comparing the results to determine playback delays and frame drops that occur at 24 fps to measure overall video quality [13].",
                "For example, 100% quality means that all video frames were played at real-time speed.",
                "On the other hand, 50% quality could mean that half the video data was dropped, or that the clip took twice as long to play even though all of the video data was displayed.",
                "To run the video benchmark, we used Windows Media Player 9 for Windows-based thin-client servers, MPlayer 1.0 pre 6 for X-based thin-client servers, and Windows Media Player 9 Mobile and 10 Mobile for the native video players running locally on the X5 and X51v PDAs, respectively.",
                "In all cases, the video player used was sized to fill the entire display region available. 4.3 Measurements Figures 3 and 4 show the results of running the web brows148 0 1 10 100 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL Latency(s) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 3: Browsing Benchmark: Average Page Latency ing benchmark.",
                "For each platform, we show results for up to four different configurations, two on the X5 and two on the X51v, depending on whether each configuration was supported.",
                "However, not all platforms could support all configurations.",
                "The local browser only runs at the display resolution of the PDA, 480×680 or less for the X51v and the X5.",
                "RDP only runs at 640×480.",
                "Neither platform could support 1024×768 display resolution.",
                "ICA only ran on the X5 and could not run on the X51v because it did not work on Windows Mobile 5.",
                "Figure 3 shows the average latency per web page for each platform. pTHINC provides the lowest average web browsing latency on both PDAs.",
                "On the X5, pTHINC performs up to 70 times better than other thin-client systems and 8 times better than the local browser.",
                "On the X51v, pTHINC performs up to 80 times better than other thin-client systems and 7 times better than the native browser.",
                "In fact, all of the thin clients except VNC outperform the local PDA browser, demonstrating the performance benefits of the thin-client approach.",
                "Usability studies have shown that web pages should take less than one second to download for the user to experience an uninterrupted web browsing experience [14].",
                "The measurements show that only the thin clients deliver subsecond web page latencies.",
                "In contrast, the local browser requires more than 3 seconds on average per web page.",
                "The local browser performs worse since it needs to run a more limited <br>web browser</br> to process the HTML, JavaScript, and do all the rendering using the limited capabilities of the PDA.",
                "The thin clients can take advantage of faster server hardware and a highly tuned <br>web browser</br> to process the web content much faster.",
                "Figure 3 shows that RDP is the next fastest platform after pTHINC.",
                "However, RDP is only able to run at a fixed resolution of 640×480 and 8-bit color depth.",
                "Furthermore, RDP also clips the display to the size of the PDA screen so that it does not need to send updates that are not visible on the PDA screen.",
                "This provides a performance benefit assuming the remaining web content is not viewed, but degrades performance when a user scrolls around the display to view other web content.",
                "RDP achieves its performance with significantly lower display quality compared to the other thin clients and with additional display clipping not used by other systems.",
                "As a result, RDP performance alone does not provide a complete comparison with the other platforms.",
                "In contrast, pTHINC provides the fastest performance while at the same time providing equal or better display quality than the other systems. 0 1 10 100 1000 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL DataSize(KB) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 4: Browsing Benchmark: Average Page Data Transferred Since VNC and ICA provide similar display quality to pTHINC, these systems provide a more fair comparison of different thin-client approaches.",
                "ICA performs worse in part because it uses higher-level display primitives that require additional client processing costs.",
                "VNC performs worse in part because it loses display data due to its client-pull delivery mechanism and because of the client processing costs in decompressing raw pixel primitives.",
                "In both cases, their performance was limited in part because their PDA clients were unable to keep up with the rate at which web pages were being displayed.",
                "Figure 3 also shows measurements for those thin clients that support resizing the display to fit the PDA screen, namely ICA and pTHINC.",
                "Resizing requires additional processing, which results in slower average web page latencies.",
                "The measurements show that the additional delay incurred by ICA when resizing versus not resizing is much more substantial than for pTHINC.",
                "ICA performs resizing on the slower PDA client.",
                "In contrast, pTHINC leverage the more powerful server to do resizing, reducing the performance difference between resizing and not resizing.",
                "Unlike ICA, pTHINC is able to provide subsecond web page download latencies in both cases.",
                "Figure 4 shows the data transferred in KB per page when running the slow-motion version of the tests.",
                "All of the platforms have modest data transfer requirements of roughly 100 KB per page or less.",
                "This is well within the bandwidth capacity of Wi-Fi networks.",
                "The measurements show that the local browser does not transfer the least amount of data.",
                "This is surprising as HTML is often considered to be a very compact representation of content.",
                "Instead, RDP is the most bandwidth efficient platform, largely as a result of using only 8-bit color depth and screen clipping so that it does not transfer the entire web page to the client. pTHINC overall has the largest data requirements, slightly more than VNC.",
                "This is largely a result of the current pTHINC prototypes lack of native support for 16-bit color data in the wire protocol.",
                "However, this result also highlights pTHINCs performance as it is faster than all other systems even while transferring more data.",
                "Furthermore, as newer PDA models support full 24-bit color, these results indicate that pTHINC will continue to provide good web browsing performance.",
                "Since display usability and quality are as important as performance, Figures 5 to 8 compare screenshots of the different thin clients when displaying a web page, in this case from the popular BBC news website.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode 149 Figure 5: Browser Screenshot: RDP 640x480 Figure 6: Browser Screenshot: VNC 1024x768 Figure 7: Browser Screenshot: ICA Resized 1024x768 Figure 8: Browser Screenshot: pTHINC Resized 1024x768 using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "While the screenshots lack the visual fidelity of the actual device display, several observations can be made.",
                "Figure 5 shows that RDP does not support fullscreen mode and wastes lots of screen space for controls and UI elements, requiring the user to scroll around in order to access the full contents of the web browsing session.",
                "Figure 6 shows that VNC makes better use of the screen space and provides better display quality, but still forces the user to scroll around to view the web page due to its lack of resizing support.",
                "Figure 7 shows ICAs ability to display the full web page given its resizing support, but that its lack of landscape capability and poorer resize algorithm significantly compromise display quality.",
                "In contrast, Figure 8 shows pTHINC using resizing to provide a high quality fullscreen display of the full width of the web page. pTHINC maximizes the entire viewing region by moving all controls to the PDA buttons.",
                "In addition, pTHINC leverages the server computational power to use a high quality resizing algorithm to resize the display to fit the PDA screen without significant overhead.",
                "Figures 9 and 10 show the results of running the video playback benchmark.",
                "For each platform except ICA, we show results for an X5 and X51v configuration.",
                "ICA could not run on the X51v as noted earlier.",
                "The measurements were done using settings that reflected the environment a user would have to access a web session from both a desktop computer and a PDA.",
                "As such, a 1024×768 server display resolution was used whenever possible and the video was shown at fullscreen.",
                "RDP was limited to 640×480 display resolution as noted earlier.",
                "Since viewing the entire video display is the only really usable option, we resized the display to fit the PDA screen for those platforms that supported this feature, namely ICA and pTHINC.",
                "Figure 9 shows the video quality for each platform. pTHINC is the only thin client able to provide perfect video playback quality, similar to the native PDA video player.",
                "All of the other thin clients deliver very poor video quality.",
                "With the exception of RDP on the X51v which provided unacceptable 35% video quality, none of the other systems were even able to achieve 10% video quality.",
                "VNC and ICA have the worst quality at 8% on the X5 device. pTHINCs native video support enables superior video performance, while other thin clients suffer from their inability to distinguish video from normal display updates.",
                "They attempt to apply ineffective and expensive compression algorithms on the video data and are unable to keep up with the stream of updates generated, resulting in dropped frames or long playback times.",
                "VNC suffers further from its client-pull update model because video frames are generated faster than the rate at which the client can process and send requests to the server to obtain the next display update.",
                "Figure 10 shows the total data transferred during 150 0% 20% 40% 60% 80% 100% pTHINCICAVNCRDPLOCAL VideoQuality Platform Axim X5 Axim X51v Figure 9: Video Benchmark: Fullscreen Video Quality 0 1 10 100 pTHINCICAVNCRDPLOCAL VideoDataSize(MB) Platform Axim X5 Axim X51v Figure 10: Video Benchmark: Fullscreen Video Data video playback for each system.",
                "The native player is the most bandwidth efficient platform, sending less than 6 MB of data, which corresponds to about 1.2 Mbps of bandwidth. pTHINCs 100% video quality requires about 25 MB of data which corresponds to a bandwidth usage of less than 6 Mbps.",
                "While the other thin clients send less data than THINC, they do so because they are dropping video data, resulting in degraded video quality.",
                "Figures 11 to 14 compare screenshots of the different thin clients when displaying the video clip.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "Figures 11 and 12 show that RDP and VNC are unable to display the entire video frame on the PDA screen.",
                "RDP wastes screen space for UI elements and VNC only shows the top corner of the video frame on the screen.",
                "Figure 13 shows that ICA provides resizing to display the entire video frame, but did not proportionally resize the video data, resulting in strange display artifacts.",
                "In contrast, Figure 14 shows pTHINC using resizing to provide a high quality fullscreen display of the entire video frame. pTHINC provides visually more appealing video display than RDP, VNC, or ICA. 5.",
                "RELATED WORK Several studies have examined the web browsing performance of thin-client computing [13, 19, 10].",
                "The ability for thin clients to improve web browsing performance on wireless PDAs was first quantitatively demonstrated in a previous study by one of the authors [10].",
                "This study demonstrated that thin clients can provide both faster web browsing performance and greater web browsing functionality.",
                "The study considered a wide range of web content including content from medical information systems.",
                "Our work builds on this previous study and consider important issues such as how usable existing thin clients are in PDA environments, the trade-offs between thin-client usability and performance, performance across different PDA devices, and the performance of thin clients on common web-related applications such as video.",
                "Many thin clients have been developed and some have PDA clients, including Microsofts Remote Desktop [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5], and Tarantella [18].",
                "These systems were first designed for desktop computing and retrofitted for PDAs.",
                "Unlike pTHINC, they do not address key system architecture and usability issues important for PDAs.",
                "This limits their display quality, system performance, available screen space, and overall usability on PDAs. pTHINC builds on previous work by two of the authors on THINC [1], extending the server architecture and introducing a client interface and usage model to efficiently support PDA devices for mobile web applications.",
                "Other approaches to improve the performance of mobile wireless web browsing have focused on using transcoding and caching proxies in conjunction with the fat client model [11, 9, 4, 8].",
                "They work by pushing functionality to external proxies, and using specialized browsing applications on the PDA device that communicate with the proxy.",
                "Our thinclient approach differs fundamentally from these fat-client approaches by pushing all <br>web browser</br> logic to the server, leveraging existing investments in desktop web browsers and helper applications to work seamlessly with production systems without any additional proxy configuration or <br>web browser</br> modifications.",
                "With the emergence of web browsing on small display devices, web sites have been redesigned using mechanisms like WAP and specialized native web browsers have been developed to tailor the needs of these devices.",
                "Recently, Opera has developed the Opera Mini [15] <br>web browser</br>, which uses an approach similar to the thin-client model to provide access across a number of mobile devices that would normally be incapable of running a <br>web browser</br>.",
                "Instead of requiring the device to process web pages, it uses a remote server to pre-process the page before sending it to the phone. 6.",
                "CONCLUSIONS We have introduced pTHINC, a thin-client architecture for wireless PDAs. pTHINC provides key architectural and usability mechanisms such as server-side screen resizing, clientside screen rotation using simple copy techniques, YUV video support, and maximizing screen space for display updates and leveraging existing PDA control buttons for UI elements. pTHINC transparently supports traditional desktop browsers and their helper applications on PDA devices and desktop machines, providing mobile users with ubiquitous access to a consistent, personalized, and full-featured web environment across heterogeneous devices.",
                "We have implemented pTHINC and measured its performance on web applications compared to existing thin-client systems and native web applications.",
                "Our results on multiple mobile wireless devices demonstrate that pTHINC delivers web browsing performance up to 80 times better than existing thin-client systems, and 8 times better than a native PDA browser.",
                "In addition, pTHINC is the only PDA thin client 151 Figure 11: Video Screenshot: RDP 640x480 Figure 12: Video Screenshot: VNC 1024x768 Figure 13: Video Screenshot: ICA Resized 1024x768 Figure 14: Video Screenshot: pTHINC Resized 1024x768 that transparently provides full-screen, full frame rate video playback, making web sites with multimedia content accessible to mobile web users. 7.",
                "ACKNOWLEDGEMENTS This work was supported in part by NSF ITR grants CCR0219943 and CNS-0426623, and an IBM SUR Award. 8.",
                "REFERENCES [1] R. Baratto, L. Kim, and J. Nieh.",
                "THINC: A Virtual Display Architecture for Thin-Client Computing.",
                "In Proceedings of the 20th ACM Symposium on Operating Systems Principles (SOSP), Oct. 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius, and A. Muir.",
                "Microsoft Windows NT Server 4.0, Terminal Server Edition: Technical Reference.",
                "Microsoft Press, Redmond, WA, 1999. [4] A.",
                "Fox, I. Goldberg, S. D. Gribble, and D. C. Lee.",
                "Experience With Top Gun Wingman: A Proxy-Based Graphical <br>web browser</br> for the 3Com PalmPilot.",
                "In Proceedings of Middleware 98, Lake District, England, September 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Health Insurance Portability and Accountability Act. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench version 1.5. http: //etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi.",
                "On proxy agents, mobility, and web access.",
                "Mobile Networks and Applications, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon, and A. Ortega.",
                "Design and Implementation of a Soft Caching Proxy.",
                "Computer Networks and ISDN Systems, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana, and S. Varshneya.",
                "Improving Web Browsing on Wireless PDAs Using Thin-Client Computing.",
                "In Proceedings of the 13th International World Wide Web Conference (WWW), May 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham, and P. Shenoy.",
                "TranSquid: Transcoding and caching proxy for heterogenous ecommerce environments.",
                "In Proceedings of the 12th IEEE Workshop on Research Issues in Data Engineering (RIDE 02), Feb. 2002. [12] .NET VNC Viewer for PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang, and N. Novik.",
                "Measuring Thin-Client Performance Using Slow-Motion Benchmarking.",
                "ACM Trans.",
                "Computer Systems, 21(1):87-115, Feb. 2003. [14] J. Nielsen.",
                "Designing Web Usability.",
                "New Riders Publishing, Indianapolis, IN, 2000. [15] Opera Mini Browser. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood, and A. Hopper.",
                "Virtual Network Computing.",
                "IEEE Internet Computing, 2(1), Jan./Feb. 1998. [17] R. W. Scheifler and J. Gettys.",
                "The X Window System.",
                "ACM Trans.",
                "Gr., 5(2):79-106, Apr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla, and M. Sajjadpour.",
                "Web Browsing Performance of Wireless Thin-Client Computing.",
                "In Proceedings of the 12th International World Wide Web Conference (WWW), May 2003. 152"
            ],
            "original_annotated_samples": [
                "Users typically access web content by running a <br>web browser</br> and associated helper applications locally on the PDA.",
                "Instead, developers are forced to significantly strip down these web browsers to provide a usable PDA <br>web browser</br>, thereby crippling PDA browser functionality.",
                "Unlike other thin-client systems, pTHINC provides a user with a persistent web session model in which a user can launch a session running a <br>web browser</br> and associated applications at the server, then disconnect from that session and reconnect to it again anytime.",
                "The problem that occurs when a user moves between computers is that this data, which is specific to a <br>web browser</br> installation, cannot move with the user.",
                "Furthermore, web browsers often need helper applications to process different media content, and those applications may not be consistently available across all computers. pTHINC addresses this problem by enabling a user to remotely use the exact same <br>web browser</br> environment and helper applications from any computer."
            ],
            "translated_annotated_samples": [
                "Los usuarios suelen acceder al contenido web ejecutando un <br>navegador web</br> y aplicaciones auxiliares asociadas localmente en la PDA.",
                "En cambio, los desarrolladores se ven obligados a reducir significativamente estas navegadores web para ofrecer un <br>navegador web</br> PDA utilizable, lo que limita la funcionalidad del navegador PDA.",
                "A diferencia de otros sistemas de cliente ligero, pTHINC proporciona a un usuario un modelo de sesión web persistente en el que un usuario puede iniciar una sesión ejecutando un <br>navegador web</br> y aplicaciones asociadas en el servidor, luego desconectarse de esa sesión y volver a conectarse en cualquier momento.",
                "El problema que ocurre cuando un usuario se mueve entre computadoras es que estos datos, específicos de una instalación de un <br>navegador web</br>, no pueden moverse con el usuario.",
                "Además, los navegadores web a menudo necesitan aplicaciones auxiliares para procesar diferentes contenidos multimedia, y esas aplicaciones pueden no estar disponibles de manera consistente en todas las computadoras. pTHINC aborda este problema al permitir que un usuario utilice de forma remota el mismo entorno de <br>navegador web</br> y aplicaciones auxiliares desde cualquier computadora."
            ],
            "translated_text": "pTHINC: Una arquitectura de cliente ligero para la web inalámbrica móvil Joeng Kim, Ricardo A. Baratto y Jason Nieh Departamento de Ciencias de la Computación Universidad de Columbia, Nueva York, NY, EE. UU. {jk2438, ricardo, nieh}@cs.columbia.edu RESUMEN Aunque las aplicaciones web están ganando popularidad en las PDAs inalámbricas móviles, los navegadores web en estos sistemas pueden ser bastante lentos y a menudo carecen de funcionalidad adecuada para acceder a muchos sitios web. Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y movilidad fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la resolución de pantalla disponible para la visualización de aplicaciones. Hemos implementado pTHINC en Windows Mobile y evaluado su rendimiento en dispositivos móviles inalámbricos. Nuestros resultados comparados con los navegadores web PDA locales y otros enfoques de cliente ligero demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero PDA que soporta de manera efectiva aplicaciones de ayuda del navegador cruciales como la reproducción de video. Categorías y Descriptores de Asunto: C.2.4 Comunicación de Computadoras-Redes: Sistemas Distribuidos - cliente/servidor Términos Generales: Diseño, Experimentación, Rendimiento 1. La creciente ubicuidad de las redes inalámbricas y la disminución del costo del hardware están impulsando una proliferación de dispositivos móviles inalámbricos portátiles, tanto como asistentes digitales personales (PDA) inalámbricos independientes y dispositivos populares integrados de PDA/teléfono celular. Estos dispositivos están permitiendo nuevas formas de computación y comunicación móvil. Los proveedores de servicios están aprovechando estos dispositivos para ofrecer acceso web omnipresente, y los usuarios de la web móvil a menudo ya utilizan estos dispositivos para acceder a información habilitada para la web, como noticias, correo electrónico, guías de viaje localizadas y mapas. Es probable que en unos pocos años, la mayoría de los dispositivos que accedan a la web sean móviles. Los usuarios suelen acceder al contenido web ejecutando un <br>navegador web</br> y aplicaciones auxiliares asociadas localmente en la PDA. Aunque existen navegadores web nativos para PDAs, ofrecen un rendimiento deficiente y tienen un conjunto de funciones mucho más pequeño y una funcionalidad más limitada que sus contrapartes de computadoras de escritorio [10]. Como resultado, los navegadores web de PDA a menudo no pueden mostrar el contenido web de sitios web que utilizan tecnologías web más avanzadas para ofrecer una experiencia web más rica. Este problema fundamental surge por dos razones. Primero, debido a que las PDAs tienen un entorno de hardware/software completamente diferente de las computadoras de escritorio tradicionales, las aplicaciones web necesitan ser reescritas y personalizadas para las PDAs si es posible, duplicando los costos de desarrollo. Debido a que el mercado de aplicaciones de escritorio es más grande y maduro, la mayoría del esfuerzo de desarrollo generalmente se destina a las aplicaciones de escritorio, lo que resulta en una mayor funcionalidad y rendimiento que sus contrapartes de PDA. En segundo lugar, las PDAs tienen un entorno con recursos más limitados que las computadoras de escritorio tradicionales para ofrecer un factor de forma más pequeño y una vida útil de la batería más larga. Los navegadores web de escritorio son aplicaciones grandes y complejas que no pueden ejecutarse en una PDA. En cambio, los desarrolladores se ven obligados a reducir significativamente estas navegadores web para ofrecer un <br>navegador web</br> PDA utilizable, lo que limita la funcionalidad del navegador PDA. La computación de cliente ligero proporciona un enfoque alternativo para habilitar el acceso web ubicuo desde dispositivos móviles. Un sistema informático de cliente ligero consiste en un servidor y un cliente que se comunican a través de una red utilizando un protocolo de visualización remota. El protocolo permite que las pantallas gráficas se virtualicen y se sirvan a través de una red a un dispositivo cliente, mientras que la lógica de la aplicación se ejecuta en el servidor. Usando el protocolo de visualización remota, el cliente transmite la entrada del usuario al servidor, y el servidor devuelve actualizaciones de pantalla de las aplicaciones del servidor al cliente. Utilizando un modelo de cliente ligero para dispositivos móviles de mano, las PDAs pueden convertirse en clientes simples sin estado que aprovechan las capacidades del servidor remoto para ejecutar navegadores web y otras aplicaciones auxiliares. El modelo de cliente ligero proporciona varios beneficios importantes para la web inalámbrica móvil. Primero, las aplicaciones web estándar de escritorio pueden utilizarse para entregar contenido web a PDAs sin necesidad de reescribir o adaptar las aplicaciones para ejecutarse en una PDA, lo que reduce los costos de desarrollo y aprovecha las inversiones existentes en software. Segundo, las aplicaciones web complejas pueden ejecutarse en servidores potentes en lugar de ejecutarse en versiones simplificadas en PDAs con recursos más limitados, lo que proporciona una mayor funcionalidad y un mejor rendimiento [10]. Tercero, las aplicaciones web pueden aprovechar servidores con redes más rápidas y mejor conectividad, lo que mejora aún más el rendimiento de la aplicación. En cuarto lugar, las PDAs pueden ser dispositivos aún más simples ya que no necesitan realizar una lógica de aplicación compleja, lo que potencialmente reduce el consumo de energía y extiende la vida útil de la batería. Finalmente, los clientes ligeros PDA pueden ser dispositivos prácticamente sin estado que no necesitan ser respaldados o restaurados, requieren casi ningún mantenimiento o actualizaciones, y no almacenan datos sensibles que puedan perderse o ser robados. Este modelo proporciona una vía viable para que las organizaciones médicas cumplan con las regulaciones de HIPAA mientras incorporan dispositivos móviles en sus operaciones diarias. A pesar de estas posibles ventajas, los clientes ligeros no han podido ofrecer la gama completa de estos beneficios al entregar aplicaciones web a dispositivos móviles portátiles. Los thin clients existentes no fueron diseñados para PDAs y no tienen en cuenta problemas importantes de usabilidad en el contexto de dispositivos de factor de forma pequeño, lo que resulta en dificultades para navegar por el contenido web mostrado. Además, los clientes ligeros existentes son ineficaces para proporcionar movilidad fluida en la mezcla heterogénea de tamaños de pantalla y resoluciones de dispositivos. Si bien los clientes ligeros existentes ya pueden ofrecer un rendimiento más rápido que los navegadores web nativos de PDA al entregar contenido web HTML, no admiten de manera efectiva aplicaciones web auxiliares más intensivas en visualización, como videos multimedia, que cada vez son una parte integral del contenido web disponible. Para aprovechar todo el potencial de la informática de cliente ligero en la provisión de la web inalámbrica móvil en PDAs, hemos desarrollado pTHINC (PDA THin-client InterNet Computing). pTHINC se basa en nuestro trabajo previo en THINC [1] para proporcionar una arquitectura de cliente ligero para dispositivos móviles de mano. pTHINC virtualiza y redimensiona la pantalla en el servidor para entregar de manera eficiente actualizaciones de pantalla de alta fidelidad a una amplia gama de clientes diferentes, tamaños de pantalla y orientaciones de pantalla, incluidos los modos de visualización en vertical y horizontal. Esto permite a pTHINC proporcionar la misma sesión web persistente en diferentes dispositivos de cliente. Por ejemplo, pTHINC puede proporcionar la misma sesión de navegación web adecuadamente escalada para su visualización en una computadora de escritorio y una PDA, de modo que las mismas cookies, marcadores y otros metadatos estén disponibles continuamente en ambas máquinas simultáneamente. El enfoque de visualización virtual de pTHINC aprovecha la información semántica disponible en los comandos de visualización y el hardware de video del cliente para proporcionar mecanismos de visualización remota más eficientes que son cruciales para admitir aplicaciones web más intensivas en visualización. Dada la limitada resolución de pantalla en las PDA, pTHINC maximiza el uso del espacio de pantalla para la visualización remota al trasladar la funcionalidad de control de la pantalla a los botones de control de PDA fácilmente disponibles, mejorando la usabilidad del sistema. Hemos implementado pTHINC en Windows Mobile y demostrado que funciona de manera transparente con las aplicaciones existentes, sistemas de ventanas y sistemas operativos, y no requiere modificar, recompilar o volver a enlazar el software existente. Hemos evaluado cuantitativamente pTHINC frente a navegadores web PDA locales y otros enfoques de cliente ligero en dispositivos Pocket PC. Nuestros resultados experimentales demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero de PDA que soporta de manera efectiva aplicaciones esenciales de ayuda para el navegador, como la reproducción de video. Este documento presenta el diseño e implementación de pTHINC. La sección 2 describe el modelo de uso general y las características de usabilidad de pTHINC. La sección 3 presenta el diseño y la arquitectura del sistema de pTHINC. La sección 4 presenta resultados experimentales que miden el rendimiento de pTHINC en aplicaciones web y lo comparan con navegadores nativos de PDA y otros sistemas de cliente ligero de PDA populares. La sección 5 discute el trabajo relacionado. Finalmente, presentamos algunas observaciones finales. El MODELO DE USO DE pTHINC pTHINC es un sistema de cliente ligero que consiste en una aplicación de visualización de cliente simple que se ejecuta en la PDA y un servidor que se ejecuta en una PC estándar. El servidor aprovecha PCs más potentes para ejecutar navegadores web y otra lógica de aplicaciones. El cliente recibe la entrada del usuario desde el lápiz óptico y el teclado virtual de la PDA y los envía al servidor para pasarlos a las aplicaciones. Las actualizaciones de la pantalla son luego enviadas desde el servidor al cliente para mostrar al usuario. Cuando se inicia el cliente PDA pTHINC, se presenta al usuario una interfaz gráfica simple donde se pueden proporcionar información como la dirección y el puerto del servidor, la información de autenticación del usuario y la configuración de la sesión. pTHINC primero intenta conectarse al servidor y realizar el saludo necesario. Una vez que este proceso haya sido completado, pTHINC presenta al usuario la visualización más reciente de su sesión. Si la sesión no existe, se crea una nueva sesión. Las sesiones existentes pueden continuar sin problemas sin cambios en la configuración de la sesión o del servidor. A diferencia de otros sistemas de cliente ligero, pTHINC proporciona a un usuario un modelo de sesión web persistente en el que un usuario puede iniciar una sesión ejecutando un <br>navegador web</br> y aplicaciones asociadas en el servidor, luego desconectarse de esa sesión y volver a conectarse en cualquier momento. Cuando un usuario se reconecta a la sesión, todas las aplicaciones siguen funcionando desde donde el usuario las dejó, de modo que el usuario puede seguir trabajando como si nunca se hubiera desconectado. La capacidad de desconectarse y reconectarse a una sesión en cualquier momento es un beneficio importante para los usuarios de PDA inalámbricas móviles que pueden tener conectividad de red intermitente. El modelo de sesión web persistente de pTHINCs permite a un usuario reconectarse a una sesión web desde dispositivos distintos al que se inició originalmente la sesión web. Esto proporciona a los usuarios una movilidad fluida entre diferentes dispositivos. Si un usuario pierde su PDA, puede fácilmente usar otra PDA para acceder a su sesión web. Además, pTHINC permite a los usuarios utilizar dispositivos que no son PDA para acceder a sesiones web también. Un usuario puede acceder a la misma sesión web persistente en una PC de escritorio como en una PDA, lo que le permite al usuario utilizar la misma sesión web desde cualquier computadora. El modelo de sesión web persistente de pTHINCs aborda un problema clave encontrado por los usuarios de la web móvil, la falta de un entorno web común en diferentes computadoras. Los navegadores web a menudo almacenan información importante como marcadores, cookies e historial, lo que les permite funcionar de una manera mucho más útil. El problema que ocurre cuando un usuario se mueve entre computadoras es que estos datos, específicos de una instalación de un <br>navegador web</br>, no pueden moverse con el usuario. Además, los navegadores web a menudo necesitan aplicaciones auxiliares para procesar diferentes contenidos multimedia, y esas aplicaciones pueden no estar disponibles de manera consistente en todas las computadoras. pTHINC aborda este problema al permitir que un usuario utilice de forma remota el mismo entorno de <br>navegador web</br> y aplicaciones auxiliares desde cualquier computadora. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "functionality": {
            "translated_key": "funcionalidad",
            "is_in_text": true,
            "original_annotated_sentences": [
                "pTHINC: A Thin-Client Architecture for Mobile Wireless Web Joeng Kim, Ricardo A. Baratto, and Jason Nieh Department of Computer Science Columbia University, New York, NY, USA {jk2438, ricardo, nieh}@cs.columbia.edu ABSTRACT Although web applications are gaining popularity on mobile wireless PDAs, web browsers on these systems can be quite slow and often lack adequate <br>functionality</br> to access many web sites.",
                "We have developed pTHINC, a PDA thinclient solution that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide high-fidelity display and seamless mobility across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available screen resolution for application display.",
                "We have implemented pTHINC on Windows Mobile and evaluated its performance on mobile wireless devices.",
                "Our results compared to local PDA web browsers and other thin-client approaches demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "Categories and Subject Descriptors: C.2.4 ComputerCommunication-Networks: Distributed Systems - client/ server General Terms: Design, Experimentation, Performance 1.",
                "INTRODUCTION The increasing ubiquity of wireless networks and decreasing cost of hardware is fueling a proliferation of mobile wireless handheld devices, both as standalone wireless Personal Digital Assistants (PDA) and popular integrated PDA/cell phone devices.",
                "These devices are enabling new forms of mobile computing and communication.",
                "Service providers are leveraging these devices to deliver pervasive web access, and mobile web users already often use these devices to access web-enabled information such as news, email, and localized travel guides and maps.",
                "It is likely that within a few years, most of the devices accessing the web will be mobile.",
                "Users typically access web content by running a web browser and associated helper applications locally on the PDA.",
                "Although native web browsers exist for PDAs, they deliver subpar performance and have a much smaller feature set and more limited <br>functionality</br> than their desktop computing counterparts [10].",
                "As a result, PDA web browsers are often not able to display web content from web sites that leverage more advanced web technologies to deliver a richer web experience.",
                "This fundamental problem arises for two reasons.",
                "First, because PDAs have a completely different hardware/software environment from traditional desktop computers, web applications need to be rewritten and customized for PDAs if at all possible, duplicating development costs.",
                "Because the desktop application market is larger and more mature, most development effort generally ends up being spent on desktop applications, resulting in greater <br>functionality</br> and performance than their PDA counterparts.",
                "Second, PDAs have a more resource constrained environment than traditional desktop computers to provide a smaller form factor and longer battery life.",
                "Desktop web browsers are large, complex applications that are unable to run on a PDA.",
                "Instead, developers are forced to significantly strip down these web browsers to provide a usable PDA web browser, thereby crippling PDA browser <br>functionality</br>.",
                "Thin-client computing provides an alternative approach for enabling pervasive web access from handheld devices.",
                "A thin-client computing system consists of a server and a client that communicate over a network using a remote display protocol.",
                "The protocol enables graphical displays to be virtualized and served across a network to a client device, while application logic is executed on the server.",
                "Using the remote display protocol, the client transmits user input to the server, and the server returns screen updates of the applications from the server to the client.",
                "Using a thin-client model for mobile handheld devices, PDAs can become simple stateless clients that leverage the remote server capabilities to execute web browsers and other helper applications.",
                "The thin-client model provides several important benefits for mobile wireless web.",
                "First, standard desktop web applications can be used to deliver web content to PDAs without rewriting or adapting applications to execute on a PDA, reducing development costs and leveraging existing software investments.",
                "Second, complex web applications can be executed on powerful servers instead of running stripped down versions on more resource constrained PDAs, providing greater <br>functionality</br> and better performance [10].",
                "Third, web applications can take advantage of servers with faster networks and better connectivity, further boosting application performance.",
                "Fourth, PDAs can be even simpler devices since they do not need to perform complex application logic, potentially reducing energy consumption and extend143 ing battery life.",
                "Finally, PDA thin clients can be essentially stateless appliances that do not need to be backed up or restored, require almost no maintenance or upgrades, and do not store any sensitive data that can be lost or stolen.",
                "This model provides a viable avenue for medical organizations to comply with HIPAA regulations [6] while embracing mobile handhelds in their day to day operations.",
                "Despite these potential advantages, thin clients have been unable to provide the full range of these benefits in delivering web applications to mobile handheld devices.",
                "Existing thin clients were not designed for PDAs and do not account for important usability issues in the context of small form factor devices, resulting in difficulty in navigating displayed web content.",
                "Furthermore, existing thin clients are ineffective at providing seamless mobility across the heterogeneous mix of device display sizes and resolutions.",
                "While existing thin clients can already provide faster performance than native PDA web browsers in delivering HTML web content, they do not effectively support more display-intensive web helper applications such as multimedia video, which is increasingly an integral part of available web content.",
                "To harness the full potential of thin-client computing in providing mobile wireless web on PDAs, we have developed pTHINC (PDA THin-client InterNet Computing). pTHINC builds on our previous work on THINC [1] to provide a thinclient architecture for mobile handheld devices. pTHINC virtualizes and resizes the display on the server to efficiently deliver high-fidelity screen updates to a broad range of different clients, screen sizes, and screen orientations, including both portrait and landscape viewing modes.",
                "This enables pTHINC to provide the same persistent web session across different client devices.",
                "For example, pTHINC can provide the same web browsing session appropriately scaled for display on a desktop computer and a PDA so that the same cookies, bookmarks, and other meta-data are continuously available on both machines simultaneously. pTHINCs virtual display approach leverages semantic information available in display commands, and client-side video hardware to provide more efficient remote display mechanisms that are crucial for supporting more display-intensive web applications.",
                "Given limited display resolution on PDAs, pTHINC maximizes the use of screen real estate for remote display by moving control <br>functionality</br> from the screen to readily available PDA control buttons, improving system usability.",
                "We have implemented pTHINC on Windows Mobile and demonstrated that it works transparently with existing applications, window systems, and operating systems, and does not require modifying, recompiling, or relinking existing software.",
                "We have quantitatively evaluated pTHINC against local PDA web browsers and other thin-client approaches on Pocket PC devices.",
                "Our experimental results demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "This paper presents the design and implementation of pTHINC.",
                "Section 2 describes the overall usage model and usability characteristics of pTHINC.",
                "Section 3 presents the design and system architecture of pTHINC.",
                "Section 4 presents experimental results measuring the performance of pTHINC on web applications and comparing it against native PDA browsers and other popular PDA thin-client systems.",
                "Section 5 discusses related work.",
                "Finally, we present some concluding remarks. 2.",
                "PTHINC USAGE MODEL pTHINC is a thin-client system that consists of a simple client viewer application that runs on the PDA and a server that runs on a commodity PC.",
                "The server leverages more powerful PCs to to run web browsers and other application logic.",
                "The client takes user input from the PDA stylus and virtual keyboard and sends them to the server to pass to the applications.",
                "Screen updates are then sent back from the server to the client for display to the user.",
                "When the pTHINC PDA client is started, the user is presented with a simple graphical interface where information such as server address and port, user authentication information, and session settings can be provided. pTHINC first attempts to connect to the server and perform the necessary handshaking.",
                "Once this process has been completed, pTHINC presents the user with the most recent display of his session.",
                "If the session does not exist, a new session is created.",
                "Existing sessions can be seamlessly continued without changes in the session setting or server configuration.",
                "Unlike other thin-client systems, pTHINC provides a user with a persistent web session model in which a user can launch a session running a web browser and associated applications at the server, then disconnect from that session and reconnect to it again anytime.",
                "When a user reconnects to the session, all of the applications continue running where the user left off, so that the user can continue working as though he or she never disconnected.",
                "The ability to disconnect and reconnect to a session at anytime is an important benefit for mobile wireless PDA users which may have intermittent network connectivity. pTHINCs persistent web session model enables a user to reconnect to a web session from devices other than the one on which the web session was originally initiated.",
                "This provides users with seamless mobility across different devices.",
                "If a user loses his PDA, he can easily use another PDA to access his web session.",
                "Furthermore, pTHINC allows users to use non-PDA devices to access web sessions as well.",
                "A user can access the same persistent web session on a desktop PC as on a PDA, enabling a user to use the same web session from any computer. pTHINCs persistent web session model addresses a key problem encountered by mobile web users, the lack of a common web environment across computers.",
                "Web browsers often store important information such as bookmarks, cookies, and history, which enable them to function in a much more useful manner.",
                "The problem that occurs when a user moves between computers is that this data, which is specific to a web browser installation, cannot move with the user.",
                "Furthermore, web browsers often need helper applications to process different media content, and those applications may not be consistently available across all computers. pTHINC addresses this problem by enabling a user to remotely use the exact same web browser environment and helper applications from any computer.",
                "As a result, pTHINC can provide a common, consistent web browsing environment for mobile users across different devices without requiring them to attempt to repeatedly synchronize different web browsing environments across multiple machines.",
                "To enable a user to access the same web session on different devices, pTHINC must provide mechanisms to support different display sizes and resolutions.",
                "Toward this end, pTHINC provides a zoom feature that enables a user to zoom in and out of a display and allows the display of a web 144 Figure 1: pTHINC shortcut keys session to be resized to fit the screen of the device being used.",
                "For example, if the server is running a web session at 1024×768 but the client is a PDA with a display resolution of 640×480, pTHINC will resize the desktop display to fit the full display in the smaller screen of the PDA. pTHINC provides the PDA user with the option to increase the size of the display by zooming in to different parts of the display.",
                "Users are often familiar with the general layout of commonly visited websites, and are able to leverage this resizing feature to better navigate through web pages.",
                "For example, a user can zoom out of the display to view the entire page content and navigate hyperlinks, then zoom in to a region of interest for a better view.",
                "To enable a user to access the same web session on different devices, pTHINC must also provide mechanisms to support different display orientations.",
                "In a desktop environment, users are typically accustomed to having displays presented in landscape mode where the screen width is larger than its height.",
                "However, in a PDA environment, the choice is not always obvious.",
                "Some users may prefer having the display in portrait mode, as it is easier to hold the device in their hands, while others may prefer landscape mode in order to minimize the amount of side-scrolling necessary to view a web page.",
                "To accommodate PDA user preferences, pTHINC provides an orientation feature that enables it to seamless rotate the display between landscape and portrait mode.",
                "The landscape mode is particularly useful for pTHINC users who frequently access their web sessions on both desktop and PDA devices, providing those users with the same familiar landscape setting across different devices.",
                "Because screen space is a relatively scarce resource on PDAs, pTHINC runs in fullscreen mode to maximize the screen area available to display the web session.",
                "To be able to use all of the screen on the PDA and still allow the user to control and interact with it, pTHINC reuses the typical shortcut buttons found on PDAs to perform all the control functions available to the user.",
                "The buttons used by pTHINC do not require any OS environment changes; they are simply intercepted by the pTHINC client application when they are pressed.",
                "Figure 1 shows how pTHINC utilizes the shortcut buttons to provide easy navigation and improve the overall user experience.",
                "These buttons are not device specific, and the layout shown is common to widelyused PocketPC devices. pTHINC provides six shortcuts to support its usage model: • Rotate Screen: The record button on the left edge is used to rotate the screen between portrait and landscape mode each time the button is pressed. • Zoom Out: The leftmost button on the bottom front is used to zoom out the display of the web session providing a birds eye view of the web session. • Zoom In: The second leftmost button on the bottom front is used to zoom in the display of the web session to more clearly view content of interest. • Directional Scroll: The middle button on the bottom front is used to scroll around the display using a single control button in a way that is already familiar to PDA users.",
                "This feature is particularly useful when the user has zoomed in to a region of the display such that only part of the display is visible on the screen. • Show/Hide Keyboard: The second rightmost button on the bottom front is used to bring up a virtual keyboard drawn on the screen for devices which have no physical keyboard.",
                "The virtual keyboard uses standard PDA OS mechanisms, providing portability across different PDA environments. • Close Session: The rightmost button on the bottom front is used to disconnect from the pTHINC session. pTHINC uses the PDA touch screen, stylus, and standard user interface mechanisms to provide a user interface pointand-click metaphor similar to that provided by the mouse in a traditional desktop computing environment. pTHINC does not use a cursor since PDA environments do not provide one.",
                "Instead, a user can use the stylus to tap on different sections of the touch screen to indicate input focus.",
                "A single tap on the touch screen generates a corresponding single click mouse event.",
                "A double tap on the touch screen generates a corresponding double click mouse event. pTHINC provides two-button mouse emulation by using the stylus to press down on the screen for one second to generate a right mouse click.",
                "All of these actions are identical to the way users already interact with PDA applications in the common PocketPC environment.",
                "In web browsing, users can click on hyperlinks and focus on input boxes by simply tapping on the desired screen area of interest.",
                "Unlike local PDA web browsers and other PDA applications, pTHINC leverages more powerful desktop user interface metaphors to enable users to manipulate multiple open application windows instead of being limited to a single application window at any given moment.",
                "This provides increased browsing flexibility beyond what is currently available on PDA devices.",
                "Similar to a desktop environment, browser windows and other application windows can be moved around by pressing down and dragging the stylus similar to a mouse. 3.",
                "PTHINC SYSTEM ARCHITECTURE pTHINC builds on the THINC [1] remote display architecture to provide a thin-client system for PDAs. pTHINC virtualizes the display at the server by leveraging the video device abstraction layer, which sits below the window server and above the framebuffer.",
                "This is a well-defined, low-level, device-dependent layer that exposes the video hardware to the display system. pTHINC accomplishes this through a simple virtual display driver that intercepts drawing commands, packetizes, and sends them over the network. 145 While other thin-client approaches intercept display commands at other layers of the display subsystem, pTHINCs display virtualization approach provides some key benefits in efficiently supporting PDA clients.",
                "For example, intercepting display commands at a higher layer between applications and the window system as is done by X [17] requires replicating and running a great deal of <br>functionality</br> on the PDA that is traditionally provided by the desktop window system.",
                "Given both the size and complexity of traditional window systems, attempting to replicate this <br>functionality</br> in the restricted PDA environment would have proven to be a daunting, and perhaps unfeasible task.",
                "Furthermore, applications and the window system often require tight synchronization in their operation and imposing a wireless network between them by running the applications on the server and the window system on the client would significantly degrade performance.",
                "On the other hand, intercepting at a lower layer by extracting pixels out of the framebuffer as they are rendered provides a simple solution that requires very little <br>functionality</br> on the PDA client, but can also result in degraded performance.",
                "The reason is that by the time the remote display server attempts to send screen updates, it has lost all semantic information that may have helped it encode efficiently, and it must resort to using a generic and expensive encoding mechanism on the server, as well as a potentially expensive decoding mechanism on the limited PDA client.",
                "In contrast to both the high and low level interception approaches, pTHINCs approach of intercepting at the device driver provides an effective balance between client and server simplicity, and the ability to efficiently encode and decode screen updates.",
                "By using a low-level virtual display approach, pTHINC can efficiently encode application display commands using only a small set of low-level commands.",
                "In a PDA environment, this set of commands provides a crucial component in maintaining the simplicity of the client in the resourceconstrained PDA environment.",
                "The display commands are shown in Table 1, and work as follows.",
                "COPY instructs the client to copy a region of the screen from its local framebuffer to another location.",
                "This command improves the user experience by accelerating scrolling and opaque window movement without having to resend screen data from the server.",
                "SFILL, PFILL, and BITMAP are commands that paint a fixed-size region on the screen.",
                "They are useful for accelerating the display of solid window backgrounds, desktop patterns, backgrounds of web pages, text drawing, and certain operations in graphics manipulation programs.",
                "SFILL fills a sizable region on the screen with a single color.",
                "PFILL replicates a tile over a screen region.",
                "BITMAP performs a fill using a bitmap of ones and zeros as a stipple to apply a foreground and background color.",
                "Finally, RAW is used to transmit unencoded pixel data to be displayed verbatim on a region of the screen.",
                "This command is invoked as a last resort if the server is unable to employ any other command, and it is the only command that may be compressed to mitigate its impact on network bandwidth. pTHINC delivers its commands using a non-blocking, serverpush update mechanism, where as soon as display updates are generated on the server, they are sent to the client.",
                "Clients are not required to explicitly request display updates, thus minimizing the impact that the typical varying network latency of wireless links may have on the responsiveness of the system.",
                "Keeping in mind that resource Command Description COPY Copy a frame buffer area to specified coordinates SFILL Fill an area with a given pixel color value PFILL Tile an area with a given pixel pattern BITMAP Fill a region using a bit pattern RAW Display raw pixel data at a given location Table 1: pTHINC Protocol Display Commands constrained PDAs and wireless networks may not be able to keep up with a fast server generating a large number of updates, pTHINC is able to coalesce, clip, and discard updates automatically if network loss or congestion occurs, or the client cannot keep up with the rate of updates.",
                "This type of behavior proves crucial in a web browsing environment, where for example, a page may be redrawn multiple times as it is rendered on the fly by the browser.",
                "In this case, the PDA will only receive and render the final result, which clearly is all the user is interesting in seeing. pTHINC prioritizes the delivery of updates to the PDA using a Shortest-Remaining-Size-First (SRSF) preemptive update scheduler.",
                "SRSF is analogous to Shortest-RemainingProcessing-Time scheduling, which is known to be optimal for minimizing mean response time in an interactive system.",
                "In a web browsing environment, short jobs are associated with text and basic page layout components such as the pages background, which are critical web content for the user.",
                "On the other hand, large jobs are often lower priority beautifying elements, or, even worse, web page banners and advertisements, which are of questionable value to the user as he or she is browsing the page.",
                "Using SRSF, pTHINC is able to maximize the utilization of the relatively scarce bandwidth available on the wireless connection between the PDA and the server. 3.1 Display Management To enable users to just as easily access their web browser and helper applications from a desktop computer at home as from a PDA while on the road, pTHINC provides a resize mechanism to zoom in and out of the display of a web session. pTHINC resizing is completely supported by the server, not the client.",
                "The server resamples updates to fit within the PDAs viewport before they are transmitted over the network. pTHINC uses Fants resampling algorithm to resize pixel updates.",
                "This provides smooth, visually pleasing updates with properly antialiasing and has only modest computational requirements. pTHINCs resizing approach has a number of advantages.",
                "First, it allows the PDA to leverage the vastly superior computational power of the server to use high quality resampling algorithms and produce higher quality updates for the PDA to display.",
                "Second, resizing the screen does not translate into additional resource requirements for the PDA, since it does not need to perform any additional work.",
                "Finally, better utilization of the wireless network is attained since rescaling the updates reduces their bandwidth requirements.",
                "To enable users to orient their displays on a PDA to provide a viewing experience that best accommodates user preferences and the layout of web pages or applications, pTHINC provides a display rotation mechanism to switch between landscape and portrait viewing modes. pTHINC display rotation is completely supported by the client, not the server. pTHINC does not explicitly recalculate the ge146 ometry of display updates to perform rotation, which would be computationally expensive.",
                "Instead, pTHINC simply changes the way data is copied into the framebuffer to switch between display modes.",
                "When in portrait mode, data is copied along the rows of the framebuffer from left to right.",
                "When in landscape mode, data is copied along the columns of the framebuffer from top to bottom.",
                "These very fast and simple techniques replace one set of copy operations with another and impose no performance overhead. pTHINC provides its own rotation mechanism to support a wide range of devices without imposing additional feature requirements on the PDA.",
                "Although some newer PDA devices provide native support for different orientations, this mechanism is not dynamic and requires the user to rotate the PDAs entire user interface before starting the pTHINC client.",
                "Windows Mobile provides native API mechanisms for PDA applications to rotate their UI on the fly, but these mechanisms deliver poor performance and display quality as the rotation is performed naively and is not completely accurate. 3.2 Video Playback Video has gradually become an integral part of the World Wide Web, and its presence will only continue to increase.",
                "Web sites today not only use animated graphics and flash to deliver web content in an attractive manner, but also utilize streaming video to enrich the web interface.",
                "Users are able to view pre-recorded and live newscasts on CNN, watch sports highlights on ESPN, and even search through large collection of videos on Google Video.",
                "To allow applications to provide efficient video playback, interfaces have been created in display systems that allow video device drivers to expose their hardware capabilities back to the applications. pTHINC takes advantage of these interfaces and its virtual device driver approach to provide a virtual bridge between the remote client and its hardware and the applications, and transparently support video playback.",
                "On top of this architecture, pTHINC uses the YUV colorspace to encode the video content, which provides a number of benefits.",
                "First, it has become increasingly common for PDA video hardware to natively support YUV and be able to perform the colorspace conversion and scaling automatically.",
                "As a result, pTHINC is able to provide fullscreen video playback without any performance hits.",
                "Second, the use of YUV allows for a more efficient representation of RGB data without loss of quality, by taking advantage of the human eyes ability to better distinguish differences in brightness than in color.",
                "In particular, pTHINC uses the YV12 format, which allows full color RGB data to be encoded using just 12 bits per pixel.",
                "Third, YUV data is produced as one of the last steps of the decoding process of most video codecs, allowing pTHINC to provide video playback in a manner that is format independent.",
                "Finally, even if the PDAs video hardware is unable to accelerate playback, the colorspace conversion process is simple enough that it does not impose unreasonable requirements on the PDA.",
                "A more concrete example of how pTHINC leverages the PDA video hardware to support video playback can be seen in our prototype implementation on the popular Dell Axim X51v PDA, which is equipped with the Intel 2700G multimedia accelerator.",
                "In this case, pTHINC creates an offscreen buffer in video memory and writes and reads from this memory region data on the YV12 format.",
                "When a new video frame arrives, video data is copied from the buffer to Figure 2: Experimental Testbed an overlay surface in video memory, which is independent of the normal surface used for traditional drawing.",
                "As the YV12 data is put onto the overlay, the Intel accelerator automatically performs both colorspace conversion and scaling.",
                "By using the overlay surface, pTHINC has no need to redraw the screen once video playback is over since the overlapped surface is unaffected.",
                "In addition, specific overlay regions can be manipulated by leveraging the video hardware, for example to perform hardware linear interpolation to smooth out the frame and display it fullscreen, and to do automatic rotation when the client runs in landscape mode. 4.",
                "EXPERIMENTAL RESULTS We have implemented a pTHINC prototype that runs the client on widely-used Windows Mobile-based Pocket PC devices and the server on both Windows and Linux operating systems.",
                "To demonstrate its effectiveness in supporting mobile wireless web applications, we have measured its performance on web applications.",
                "We present experimental results on different PDA devices for two popular web applications, browsing web pages and playing video content from the web.",
                "We compared pTHINC against native web applications running locally on the PDA to demonstrate the improvement that pTHINC can provide over the traditional fat-client approach.",
                "We also compared pTHINC against three of the most widely used thin clients that can run on PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] and VNC (Virtual Network Computing) [16].",
                "We follow common practice and refer to Citrix MetaFrameXP and Microsoft Remote Desktop by their respective remote display protocols, ICA (Independent Computing Architecture) and RDP (Remote Desktop Protocol). 4.1 Experimental Testbed We conducted our web experiments using two different wireless Pocket PC PDAs in an isolated Wi-Fi network testbed, as shown in Figure 2.",
                "The testbed consisted of two PDA client devices, a packet monitor, a thin-client server, and a web server.",
                "Except for the PDAs, all of the other machines were IBM Netfinity 4500R servers with dual 933 MHz Intel PIII CPUs and 512 MB RAM and were connected on a switched 100 Mbps FastEthernet network.",
                "The web server used was Apache 1.3.27, the network emulator was NISTNet 2.0.12, and the packet monitor was Ethereal 0.10.9.",
                "The PDA clients connected to the testbed through a 802.11b Lucent Orinoco AP-2000 wireless access point.",
                "All experiments using the wireless network were conducted within ten feet of the access point, so we considered the amount of packet loss to be negligible in our experiments.",
                "Two Pocket PC PDAs were used to provide results across both older, less powerful models and newer higher performance models.",
                "The older model was a Dell Axim X5 with 147 Client 1024×768 640×480 Depth Resize Clip RDP no yes 8-bit no yes VNC yes yes 16-bit no no ICA yes yes 16-bit yes no pTHINC yes yes 24-bit yes no Table 2: Thin-client Testbed Configuration Setting a 400 MHz Intel XScale PXA255 CPU and 64 MB RAM running Windows Mobile 2003 and a Dell TrueMobile 1180 2.4Ghz CompactFlash card for wireless networking.",
                "The newer model was a Dell Axim X51v with a 624 MHz Intel XScale XPA270 CPU and 64 MB RAM running Windows Mobile 5.0 and integrated 802.11b wireless networking.",
                "The X51v has an Intel 2700G multimedia accelerator with 16MB video memory.",
                "Both PDAs are capable of 16-bit color but have different screen sizes and display resolutions.",
                "The X5 has a 3.5 inch diagonal screen with 240×320 resolution.",
                "The X51v has a 3.7 inch diagonal screen with 480×640.",
                "The four thin clients that we used support different levels of display quality as summarized in Table 2.",
                "The RDP client only supports a fixed 640×480 display resolution on the server with 8-bit color depth, while other platforms provide higher levels of display quality.",
                "To provide a fair comparison across all platforms, we conducted our experiments with thin-client sessions configured for two possible resolutions, 1024×768 and 640×480.",
                "Both ICA and VNC were configured to use the native PDA resolution of 16-bit color depth.",
                "The current pTHINC prototype uses 24-bit color directly and the client downsamples updates to the 16-bit color depth available on the PDA.",
                "RDP was configured using only 8-bit color depth since it does not support any better color depth.",
                "Since both pTHINC and ICA provide the ability to view the display resized to fit the screen, we measured both clients with and without the display resized to fit the PDA screen.",
                "Each thin client was tested using landscape rather than portrait mode when available.",
                "All systems run on the X51v could run in landscape mode because the hardware provides a landscape mode feature.",
                "However, the X5 does not provide this <br>functionality</br>.",
                "Only pTHINC directly supports landscape mode, so it was the only system that could run in landscape mode on both the X5 and X51v.",
                "To provide a fair comparison, we also standardized on common hardware and operating systems whenever possible.",
                "All of the systems used the Netfinity server as the thin-client server.",
                "For the two systems designed for Windows servers, ICA and RDP, we ran Windows 2003 Server on the server.",
                "For the other systems which support X-based servers, VNC and pTHINC, we ran the Debian Linux Unstable distribution with the Linux 2.6.10 kernel on the server.",
                "We used the latest thin-client server versions available on each platform at the time of our experiments, namely Citrix MetaFrame XP Server for Windows Feature Release 3, Microsoft Remote Desktop built into Windows XP and Windows 2003 using RDP 5.2, and VNC 4.0. 4.2 Application Benchmarks We used two web application benchmarks for our experiments based on two common application scenarios, browsing web pages and playing video content from the web.",
                "Since many thin-client systems including two of the ones tested are closed and proprietary, we measured their performance in a noninvasive manner by capturing network traffic with a packet monitor and using a variant of slow-motion benchmarking [13] previously developed to measure thin-client performance in PDA environments [10].",
                "This measurement methodology accounts for both the display decoupling that can occur between client and server in thin-client systems as well as client processing time, which may be significant in the case of PDAs.",
                "To measure web browsing performance, we used a web browsing benchmark based on the Web Text Page Load Test from the Ziff-Davis i-Bench benchmark suite [7].",
                "The benchmark consists of JavaScript controlled load of 55 pages from the web server.",
                "The pages contain both text and graphics with pages varying in size.",
                "The graphics are embedded images in GIF and JPEG formats.",
                "The original i-Bench benchmark was modified for slow-motion benchmarking by introducing delays of several seconds between the pages using JavaScript.",
                "Then two tests were run, one where delays where added between each page, and one where pages where loaded continuously without waiting for them to be displayed on the client.",
                "In the first test, delays were sufficiently adjusted in each case to ensure that each page could be received and displayed on the client completely without temporal overlap in transferring the data belonging to two consecutive pages.",
                "We used the packet monitor to record the packet traffic for each run of the benchmark, then used the timestamps of the first and last packet in the trace to obtain our latency measures [10].",
                "The packet monitor also recorded the amount of data transmitted between the client and the server.",
                "The ratio between the data traffic in the two tests yields a scale factor.",
                "This scale factor shows the loss of data between the server and the client due to inability of the client to process the data quickly enough.",
                "The product of the scale factor with the latency measurement produces the true latency accounting for client processing time.",
                "To run the web browsing benchmark, we used Mozilla Firefox 1.0.4 running on the thin-client server for the thin clients, and Windows Internet Explorer (IE) Mobile for 2003 and Mobile for 5.0 for the native browsers on the X5 and X51v PDAs, respectively.",
                "In all cases, the web browser used was sized to fill the entire display region available.",
                "To measure video playback performance, we used a video benchmark that consisted of playing a 34.75s MPEG-1 video clip containing a mix of news and entertainment programming at full-screen resolution.",
                "The video clip is 5.11 MB and consists of 834 352x240 pixel frames with an ideal frame rate of 24 frames/sec.",
                "We measured video performance using slow-motion benchmarking by monitoring resulting packet traffic at two playback rates, 1 frames/second (fps) and 24 fps, and comparing the results to determine playback delays and frame drops that occur at 24 fps to measure overall video quality [13].",
                "For example, 100% quality means that all video frames were played at real-time speed.",
                "On the other hand, 50% quality could mean that half the video data was dropped, or that the clip took twice as long to play even though all of the video data was displayed.",
                "To run the video benchmark, we used Windows Media Player 9 for Windows-based thin-client servers, MPlayer 1.0 pre 6 for X-based thin-client servers, and Windows Media Player 9 Mobile and 10 Mobile for the native video players running locally on the X5 and X51v PDAs, respectively.",
                "In all cases, the video player used was sized to fill the entire display region available. 4.3 Measurements Figures 3 and 4 show the results of running the web brows148 0 1 10 100 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL Latency(s) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 3: Browsing Benchmark: Average Page Latency ing benchmark.",
                "For each platform, we show results for up to four different configurations, two on the X5 and two on the X51v, depending on whether each configuration was supported.",
                "However, not all platforms could support all configurations.",
                "The local browser only runs at the display resolution of the PDA, 480×680 or less for the X51v and the X5.",
                "RDP only runs at 640×480.",
                "Neither platform could support 1024×768 display resolution.",
                "ICA only ran on the X5 and could not run on the X51v because it did not work on Windows Mobile 5.",
                "Figure 3 shows the average latency per web page for each platform. pTHINC provides the lowest average web browsing latency on both PDAs.",
                "On the X5, pTHINC performs up to 70 times better than other thin-client systems and 8 times better than the local browser.",
                "On the X51v, pTHINC performs up to 80 times better than other thin-client systems and 7 times better than the native browser.",
                "In fact, all of the thin clients except VNC outperform the local PDA browser, demonstrating the performance benefits of the thin-client approach.",
                "Usability studies have shown that web pages should take less than one second to download for the user to experience an uninterrupted web browsing experience [14].",
                "The measurements show that only the thin clients deliver subsecond web page latencies.",
                "In contrast, the local browser requires more than 3 seconds on average per web page.",
                "The local browser performs worse since it needs to run a more limited web browser to process the HTML, JavaScript, and do all the rendering using the limited capabilities of the PDA.",
                "The thin clients can take advantage of faster server hardware and a highly tuned web browser to process the web content much faster.",
                "Figure 3 shows that RDP is the next fastest platform after pTHINC.",
                "However, RDP is only able to run at a fixed resolution of 640×480 and 8-bit color depth.",
                "Furthermore, RDP also clips the display to the size of the PDA screen so that it does not need to send updates that are not visible on the PDA screen.",
                "This provides a performance benefit assuming the remaining web content is not viewed, but degrades performance when a user scrolls around the display to view other web content.",
                "RDP achieves its performance with significantly lower display quality compared to the other thin clients and with additional display clipping not used by other systems.",
                "As a result, RDP performance alone does not provide a complete comparison with the other platforms.",
                "In contrast, pTHINC provides the fastest performance while at the same time providing equal or better display quality than the other systems. 0 1 10 100 1000 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL DataSize(KB) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 4: Browsing Benchmark: Average Page Data Transferred Since VNC and ICA provide similar display quality to pTHINC, these systems provide a more fair comparison of different thin-client approaches.",
                "ICA performs worse in part because it uses higher-level display primitives that require additional client processing costs.",
                "VNC performs worse in part because it loses display data due to its client-pull delivery mechanism and because of the client processing costs in decompressing raw pixel primitives.",
                "In both cases, their performance was limited in part because their PDA clients were unable to keep up with the rate at which web pages were being displayed.",
                "Figure 3 also shows measurements for those thin clients that support resizing the display to fit the PDA screen, namely ICA and pTHINC.",
                "Resizing requires additional processing, which results in slower average web page latencies.",
                "The measurements show that the additional delay incurred by ICA when resizing versus not resizing is much more substantial than for pTHINC.",
                "ICA performs resizing on the slower PDA client.",
                "In contrast, pTHINC leverage the more powerful server to do resizing, reducing the performance difference between resizing and not resizing.",
                "Unlike ICA, pTHINC is able to provide subsecond web page download latencies in both cases.",
                "Figure 4 shows the data transferred in KB per page when running the slow-motion version of the tests.",
                "All of the platforms have modest data transfer requirements of roughly 100 KB per page or less.",
                "This is well within the bandwidth capacity of Wi-Fi networks.",
                "The measurements show that the local browser does not transfer the least amount of data.",
                "This is surprising as HTML is often considered to be a very compact representation of content.",
                "Instead, RDP is the most bandwidth efficient platform, largely as a result of using only 8-bit color depth and screen clipping so that it does not transfer the entire web page to the client. pTHINC overall has the largest data requirements, slightly more than VNC.",
                "This is largely a result of the current pTHINC prototypes lack of native support for 16-bit color data in the wire protocol.",
                "However, this result also highlights pTHINCs performance as it is faster than all other systems even while transferring more data.",
                "Furthermore, as newer PDA models support full 24-bit color, these results indicate that pTHINC will continue to provide good web browsing performance.",
                "Since display usability and quality are as important as performance, Figures 5 to 8 compare screenshots of the different thin clients when displaying a web page, in this case from the popular BBC news website.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode 149 Figure 5: Browser Screenshot: RDP 640x480 Figure 6: Browser Screenshot: VNC 1024x768 Figure 7: Browser Screenshot: ICA Resized 1024x768 Figure 8: Browser Screenshot: pTHINC Resized 1024x768 using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "While the screenshots lack the visual fidelity of the actual device display, several observations can be made.",
                "Figure 5 shows that RDP does not support fullscreen mode and wastes lots of screen space for controls and UI elements, requiring the user to scroll around in order to access the full contents of the web browsing session.",
                "Figure 6 shows that VNC makes better use of the screen space and provides better display quality, but still forces the user to scroll around to view the web page due to its lack of resizing support.",
                "Figure 7 shows ICAs ability to display the full web page given its resizing support, but that its lack of landscape capability and poorer resize algorithm significantly compromise display quality.",
                "In contrast, Figure 8 shows pTHINC using resizing to provide a high quality fullscreen display of the full width of the web page. pTHINC maximizes the entire viewing region by moving all controls to the PDA buttons.",
                "In addition, pTHINC leverages the server computational power to use a high quality resizing algorithm to resize the display to fit the PDA screen without significant overhead.",
                "Figures 9 and 10 show the results of running the video playback benchmark.",
                "For each platform except ICA, we show results for an X5 and X51v configuration.",
                "ICA could not run on the X51v as noted earlier.",
                "The measurements were done using settings that reflected the environment a user would have to access a web session from both a desktop computer and a PDA.",
                "As such, a 1024×768 server display resolution was used whenever possible and the video was shown at fullscreen.",
                "RDP was limited to 640×480 display resolution as noted earlier.",
                "Since viewing the entire video display is the only really usable option, we resized the display to fit the PDA screen for those platforms that supported this feature, namely ICA and pTHINC.",
                "Figure 9 shows the video quality for each platform. pTHINC is the only thin client able to provide perfect video playback quality, similar to the native PDA video player.",
                "All of the other thin clients deliver very poor video quality.",
                "With the exception of RDP on the X51v which provided unacceptable 35% video quality, none of the other systems were even able to achieve 10% video quality.",
                "VNC and ICA have the worst quality at 8% on the X5 device. pTHINCs native video support enables superior video performance, while other thin clients suffer from their inability to distinguish video from normal display updates.",
                "They attempt to apply ineffective and expensive compression algorithms on the video data and are unable to keep up with the stream of updates generated, resulting in dropped frames or long playback times.",
                "VNC suffers further from its client-pull update model because video frames are generated faster than the rate at which the client can process and send requests to the server to obtain the next display update.",
                "Figure 10 shows the total data transferred during 150 0% 20% 40% 60% 80% 100% pTHINCICAVNCRDPLOCAL VideoQuality Platform Axim X5 Axim X51v Figure 9: Video Benchmark: Fullscreen Video Quality 0 1 10 100 pTHINCICAVNCRDPLOCAL VideoDataSize(MB) Platform Axim X5 Axim X51v Figure 10: Video Benchmark: Fullscreen Video Data video playback for each system.",
                "The native player is the most bandwidth efficient platform, sending less than 6 MB of data, which corresponds to about 1.2 Mbps of bandwidth. pTHINCs 100% video quality requires about 25 MB of data which corresponds to a bandwidth usage of less than 6 Mbps.",
                "While the other thin clients send less data than THINC, they do so because they are dropping video data, resulting in degraded video quality.",
                "Figures 11 to 14 compare screenshots of the different thin clients when displaying the video clip.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "Figures 11 and 12 show that RDP and VNC are unable to display the entire video frame on the PDA screen.",
                "RDP wastes screen space for UI elements and VNC only shows the top corner of the video frame on the screen.",
                "Figure 13 shows that ICA provides resizing to display the entire video frame, but did not proportionally resize the video data, resulting in strange display artifacts.",
                "In contrast, Figure 14 shows pTHINC using resizing to provide a high quality fullscreen display of the entire video frame. pTHINC provides visually more appealing video display than RDP, VNC, or ICA. 5.",
                "RELATED WORK Several studies have examined the web browsing performance of thin-client computing [13, 19, 10].",
                "The ability for thin clients to improve web browsing performance on wireless PDAs was first quantitatively demonstrated in a previous study by one of the authors [10].",
                "This study demonstrated that thin clients can provide both faster web browsing performance and greater web browsing <br>functionality</br>.",
                "The study considered a wide range of web content including content from medical information systems.",
                "Our work builds on this previous study and consider important issues such as how usable existing thin clients are in PDA environments, the trade-offs between thin-client usability and performance, performance across different PDA devices, and the performance of thin clients on common web-related applications such as video.",
                "Many thin clients have been developed and some have PDA clients, including Microsofts Remote Desktop [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5], and Tarantella [18].",
                "These systems were first designed for desktop computing and retrofitted for PDAs.",
                "Unlike pTHINC, they do not address key system architecture and usability issues important for PDAs.",
                "This limits their display quality, system performance, available screen space, and overall usability on PDAs. pTHINC builds on previous work by two of the authors on THINC [1], extending the server architecture and introducing a client interface and usage model to efficiently support PDA devices for mobile web applications.",
                "Other approaches to improve the performance of mobile wireless web browsing have focused on using transcoding and caching proxies in conjunction with the fat client model [11, 9, 4, 8].",
                "They work by pushing <br>functionality</br> to external proxies, and using specialized browsing applications on the PDA device that communicate with the proxy.",
                "Our thinclient approach differs fundamentally from these fat-client approaches by pushing all web browser logic to the server, leveraging existing investments in desktop web browsers and helper applications to work seamlessly with production systems without any additional proxy configuration or web browser modifications.",
                "With the emergence of web browsing on small display devices, web sites have been redesigned using mechanisms like WAP and specialized native web browsers have been developed to tailor the needs of these devices.",
                "Recently, Opera has developed the Opera Mini [15] web browser, which uses an approach similar to the thin-client model to provide access across a number of mobile devices that would normally be incapable of running a web browser.",
                "Instead of requiring the device to process web pages, it uses a remote server to pre-process the page before sending it to the phone. 6.",
                "CONCLUSIONS We have introduced pTHINC, a thin-client architecture for wireless PDAs. pTHINC provides key architectural and usability mechanisms such as server-side screen resizing, clientside screen rotation using simple copy techniques, YUV video support, and maximizing screen space for display updates and leveraging existing PDA control buttons for UI elements. pTHINC transparently supports traditional desktop browsers and their helper applications on PDA devices and desktop machines, providing mobile users with ubiquitous access to a consistent, personalized, and full-featured web environment across heterogeneous devices.",
                "We have implemented pTHINC and measured its performance on web applications compared to existing thin-client systems and native web applications.",
                "Our results on multiple mobile wireless devices demonstrate that pTHINC delivers web browsing performance up to 80 times better than existing thin-client systems, and 8 times better than a native PDA browser.",
                "In addition, pTHINC is the only PDA thin client 151 Figure 11: Video Screenshot: RDP 640x480 Figure 12: Video Screenshot: VNC 1024x768 Figure 13: Video Screenshot: ICA Resized 1024x768 Figure 14: Video Screenshot: pTHINC Resized 1024x768 that transparently provides full-screen, full frame rate video playback, making web sites with multimedia content accessible to mobile web users. 7.",
                "ACKNOWLEDGEMENTS This work was supported in part by NSF ITR grants CCR0219943 and CNS-0426623, and an IBM SUR Award. 8.",
                "REFERENCES [1] R. Baratto, L. Kim, and J. Nieh.",
                "THINC: A Virtual Display Architecture for Thin-Client Computing.",
                "In Proceedings of the 20th ACM Symposium on Operating Systems Principles (SOSP), Oct. 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius, and A. Muir.",
                "Microsoft Windows NT Server 4.0, Terminal Server Edition: Technical Reference.",
                "Microsoft Press, Redmond, WA, 1999. [4] A.",
                "Fox, I. Goldberg, S. D. Gribble, and D. C. Lee.",
                "Experience With Top Gun Wingman: A Proxy-Based Graphical Web Browser for the 3Com PalmPilot.",
                "In Proceedings of Middleware 98, Lake District, England, September 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Health Insurance Portability and Accountability Act. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench version 1.5. http: //etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi.",
                "On proxy agents, mobility, and web access.",
                "Mobile Networks and Applications, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon, and A. Ortega.",
                "Design and Implementation of a Soft Caching Proxy.",
                "Computer Networks and ISDN Systems, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana, and S. Varshneya.",
                "Improving Web Browsing on Wireless PDAs Using Thin-Client Computing.",
                "In Proceedings of the 13th International World Wide Web Conference (WWW), May 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham, and P. Shenoy.",
                "TranSquid: Transcoding and caching proxy for heterogenous ecommerce environments.",
                "In Proceedings of the 12th IEEE Workshop on Research Issues in Data Engineering (RIDE 02), Feb. 2002. [12] .NET VNC Viewer for PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang, and N. Novik.",
                "Measuring Thin-Client Performance Using Slow-Motion Benchmarking.",
                "ACM Trans.",
                "Computer Systems, 21(1):87-115, Feb. 2003. [14] J. Nielsen.",
                "Designing Web Usability.",
                "New Riders Publishing, Indianapolis, IN, 2000. [15] Opera Mini Browser. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood, and A. Hopper.",
                "Virtual Network Computing.",
                "IEEE Internet Computing, 2(1), Jan./Feb. 1998. [17] R. W. Scheifler and J. Gettys.",
                "The X Window System.",
                "ACM Trans.",
                "Gr., 5(2):79-106, Apr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla, and M. Sajjadpour.",
                "Web Browsing Performance of Wireless Thin-Client Computing.",
                "In Proceedings of the 12th International World Wide Web Conference (WWW), May 2003. 152"
            ],
            "original_annotated_samples": [
                "pTHINC: A Thin-Client Architecture for Mobile Wireless Web Joeng Kim, Ricardo A. Baratto, and Jason Nieh Department of Computer Science Columbia University, New York, NY, USA {jk2438, ricardo, nieh}@cs.columbia.edu ABSTRACT Although web applications are gaining popularity on mobile wireless PDAs, web browsers on these systems can be quite slow and often lack adequate <br>functionality</br> to access many web sites.",
                "Although native web browsers exist for PDAs, they deliver subpar performance and have a much smaller feature set and more limited <br>functionality</br> than their desktop computing counterparts [10].",
                "Because the desktop application market is larger and more mature, most development effort generally ends up being spent on desktop applications, resulting in greater <br>functionality</br> and performance than their PDA counterparts.",
                "Instead, developers are forced to significantly strip down these web browsers to provide a usable PDA web browser, thereby crippling PDA browser <br>functionality</br>.",
                "Second, complex web applications can be executed on powerful servers instead of running stripped down versions on more resource constrained PDAs, providing greater <br>functionality</br> and better performance [10]."
            ],
            "translated_annotated_samples": [
                "pTHINC: Una arquitectura de cliente ligero para la web inalámbrica móvil Joeng Kim, Ricardo A. Baratto y Jason Nieh Departamento de Ciencias de la Computación Universidad de Columbia, Nueva York, NY, EE. UU. {jk2438, ricardo, nieh}@cs.columbia.edu RESUMEN Aunque las aplicaciones web están ganando popularidad en las PDAs inalámbricas móviles, los navegadores web en estos sistemas pueden ser bastante lentos y a menudo carecen de <br>funcionalidad</br> adecuada para acceder a muchos sitios web.",
                "Aunque existen navegadores web nativos para PDAs, ofrecen un rendimiento deficiente y tienen un conjunto de funciones mucho más pequeño y una <br>funcionalidad</br> más limitada que sus contrapartes de computadoras de escritorio [10].",
                "Debido a que el mercado de aplicaciones de escritorio es más grande y maduro, la mayoría del esfuerzo de desarrollo generalmente se destina a las aplicaciones de escritorio, lo que resulta en una mayor <br>funcionalidad</br> y rendimiento que sus contrapartes de PDA.",
                "En cambio, los desarrolladores se ven obligados a reducir significativamente estas navegadores web para ofrecer un navegador web PDA utilizable, lo que limita la <br>funcionalidad</br> del navegador PDA.",
                "Segundo, las aplicaciones web complejas pueden ejecutarse en servidores potentes en lugar de ejecutarse en versiones simplificadas en PDAs con recursos más limitados, lo que proporciona una mayor <br>funcionalidad</br> y un mejor rendimiento [10]."
            ],
            "translated_text": "pTHINC: Una arquitectura de cliente ligero para la web inalámbrica móvil Joeng Kim, Ricardo A. Baratto y Jason Nieh Departamento de Ciencias de la Computación Universidad de Columbia, Nueva York, NY, EE. UU. {jk2438, ricardo, nieh}@cs.columbia.edu RESUMEN Aunque las aplicaciones web están ganando popularidad en las PDAs inalámbricas móviles, los navegadores web en estos sistemas pueden ser bastante lentos y a menudo carecen de <br>funcionalidad</br> adecuada para acceder a muchos sitios web. Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y movilidad fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la resolución de pantalla disponible para la visualización de aplicaciones. Hemos implementado pTHINC en Windows Mobile y evaluado su rendimiento en dispositivos móviles inalámbricos. Nuestros resultados comparados con los navegadores web PDA locales y otros enfoques de cliente ligero demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero PDA que soporta de manera efectiva aplicaciones de ayuda del navegador cruciales como la reproducción de video. Categorías y Descriptores de Asunto: C.2.4 Comunicación de Computadoras-Redes: Sistemas Distribuidos - cliente/servidor Términos Generales: Diseño, Experimentación, Rendimiento 1. La creciente ubicuidad de las redes inalámbricas y la disminución del costo del hardware están impulsando una proliferación de dispositivos móviles inalámbricos portátiles, tanto como asistentes digitales personales (PDA) inalámbricos independientes y dispositivos populares integrados de PDA/teléfono celular. Estos dispositivos están permitiendo nuevas formas de computación y comunicación móvil. Los proveedores de servicios están aprovechando estos dispositivos para ofrecer acceso web omnipresente, y los usuarios de la web móvil a menudo ya utilizan estos dispositivos para acceder a información habilitada para la web, como noticias, correo electrónico, guías de viaje localizadas y mapas. Es probable que en unos pocos años, la mayoría de los dispositivos que accedan a la web sean móviles. Los usuarios suelen acceder al contenido web ejecutando un navegador web y aplicaciones auxiliares asociadas localmente en la PDA. Aunque existen navegadores web nativos para PDAs, ofrecen un rendimiento deficiente y tienen un conjunto de funciones mucho más pequeño y una <br>funcionalidad</br> más limitada que sus contrapartes de computadoras de escritorio [10]. Como resultado, los navegadores web de PDA a menudo no pueden mostrar el contenido web de sitios web que utilizan tecnologías web más avanzadas para ofrecer una experiencia web más rica. Este problema fundamental surge por dos razones. Primero, debido a que las PDAs tienen un entorno de hardware/software completamente diferente de las computadoras de escritorio tradicionales, las aplicaciones web necesitan ser reescritas y personalizadas para las PDAs si es posible, duplicando los costos de desarrollo. Debido a que el mercado de aplicaciones de escritorio es más grande y maduro, la mayoría del esfuerzo de desarrollo generalmente se destina a las aplicaciones de escritorio, lo que resulta en una mayor <br>funcionalidad</br> y rendimiento que sus contrapartes de PDA. En segundo lugar, las PDAs tienen un entorno con recursos más limitados que las computadoras de escritorio tradicionales para ofrecer un factor de forma más pequeño y una vida útil de la batería más larga. Los navegadores web de escritorio son aplicaciones grandes y complejas que no pueden ejecutarse en una PDA. En cambio, los desarrolladores se ven obligados a reducir significativamente estas navegadores web para ofrecer un navegador web PDA utilizable, lo que limita la <br>funcionalidad</br> del navegador PDA. La computación de cliente ligero proporciona un enfoque alternativo para habilitar el acceso web ubicuo desde dispositivos móviles. Un sistema informático de cliente ligero consiste en un servidor y un cliente que se comunican a través de una red utilizando un protocolo de visualización remota. El protocolo permite que las pantallas gráficas se virtualicen y se sirvan a través de una red a un dispositivo cliente, mientras que la lógica de la aplicación se ejecuta en el servidor. Usando el protocolo de visualización remota, el cliente transmite la entrada del usuario al servidor, y el servidor devuelve actualizaciones de pantalla de las aplicaciones del servidor al cliente. Utilizando un modelo de cliente ligero para dispositivos móviles de mano, las PDAs pueden convertirse en clientes simples sin estado que aprovechan las capacidades del servidor remoto para ejecutar navegadores web y otras aplicaciones auxiliares. El modelo de cliente ligero proporciona varios beneficios importantes para la web inalámbrica móvil. Primero, las aplicaciones web estándar de escritorio pueden utilizarse para entregar contenido web a PDAs sin necesidad de reescribir o adaptar las aplicaciones para ejecutarse en una PDA, lo que reduce los costos de desarrollo y aprovecha las inversiones existentes en software. Segundo, las aplicaciones web complejas pueden ejecutarse en servidores potentes en lugar de ejecutarse en versiones simplificadas en PDAs con recursos más limitados, lo que proporciona una mayor <br>funcionalidad</br> y un mejor rendimiento [10]. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "pthinc": {
            "translated_key": "cliente ligero",
            "is_in_text": true,
            "original_annotated_sentences": [
                "<br>pthinc</br>: A Thin-Client Architecture for Mobile Wireless Web Joeng Kim, Ricardo A. Baratto, and Jason Nieh Department of Computer Science Columbia University, New York, NY, USA {jk2438, ricardo, nieh}@cs.columbia.edu ABSTRACT Although web applications are gaining popularity on mobile wireless PDAs, web browsers on these systems can be quite slow and often lack adequate functionality to access many web sites.",
                "We have developed <br>pthinc</br>, a PDA thinclient solution that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. <br>pthinc</br> uses server-side screen scaling to provide high-fidelity display and seamless mobility across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available screen resolution for application display.",
                "We have implemented <br>pthinc</br> on Windows Mobile and evaluated its performance on mobile wireless devices.",
                "Our results compared to local PDA web browsers and other thin-client approaches demonstrate that <br>pthinc</br> provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "Categories and Subject Descriptors: C.2.4 ComputerCommunication-Networks: Distributed Systems - client/ server General Terms: Design, Experimentation, Performance 1.",
                "INTRODUCTION The increasing ubiquity of wireless networks and decreasing cost of hardware is fueling a proliferation of mobile wireless handheld devices, both as standalone wireless Personal Digital Assistants (PDA) and popular integrated PDA/cell phone devices.",
                "These devices are enabling new forms of mobile computing and communication.",
                "Service providers are leveraging these devices to deliver pervasive web access, and mobile web users already often use these devices to access web-enabled information such as news, email, and localized travel guides and maps.",
                "It is likely that within a few years, most of the devices accessing the web will be mobile.",
                "Users typically access web content by running a web browser and associated helper applications locally on the PDA.",
                "Although native web browsers exist for PDAs, they deliver subpar performance and have a much smaller feature set and more limited functionality than their desktop computing counterparts [10].",
                "As a result, PDA web browsers are often not able to display web content from web sites that leverage more advanced web technologies to deliver a richer web experience.",
                "This fundamental problem arises for two reasons.",
                "First, because PDAs have a completely different hardware/software environment from traditional desktop computers, web applications need to be rewritten and customized for PDAs if at all possible, duplicating development costs.",
                "Because the desktop application market is larger and more mature, most development effort generally ends up being spent on desktop applications, resulting in greater functionality and performance than their PDA counterparts.",
                "Second, PDAs have a more resource constrained environment than traditional desktop computers to provide a smaller form factor and longer battery life.",
                "Desktop web browsers are large, complex applications that are unable to run on a PDA.",
                "Instead, developers are forced to significantly strip down these web browsers to provide a usable PDA web browser, thereby crippling PDA browser functionality.",
                "Thin-client computing provides an alternative approach for enabling pervasive web access from handheld devices.",
                "A thin-client computing system consists of a server and a client that communicate over a network using a remote display protocol.",
                "The protocol enables graphical displays to be virtualized and served across a network to a client device, while application logic is executed on the server.",
                "Using the remote display protocol, the client transmits user input to the server, and the server returns screen updates of the applications from the server to the client.",
                "Using a thin-client model for mobile handheld devices, PDAs can become simple stateless clients that leverage the remote server capabilities to execute web browsers and other helper applications.",
                "The thin-client model provides several important benefits for mobile wireless web.",
                "First, standard desktop web applications can be used to deliver web content to PDAs without rewriting or adapting applications to execute on a PDA, reducing development costs and leveraging existing software investments.",
                "Second, complex web applications can be executed on powerful servers instead of running stripped down versions on more resource constrained PDAs, providing greater functionality and better performance [10].",
                "Third, web applications can take advantage of servers with faster networks and better connectivity, further boosting application performance.",
                "Fourth, PDAs can be even simpler devices since they do not need to perform complex application logic, potentially reducing energy consumption and extend143 ing battery life.",
                "Finally, PDA thin clients can be essentially stateless appliances that do not need to be backed up or restored, require almost no maintenance or upgrades, and do not store any sensitive data that can be lost or stolen.",
                "This model provides a viable avenue for medical organizations to comply with HIPAA regulations [6] while embracing mobile handhelds in their day to day operations.",
                "Despite these potential advantages, thin clients have been unable to provide the full range of these benefits in delivering web applications to mobile handheld devices.",
                "Existing thin clients were not designed for PDAs and do not account for important usability issues in the context of small form factor devices, resulting in difficulty in navigating displayed web content.",
                "Furthermore, existing thin clients are ineffective at providing seamless mobility across the heterogeneous mix of device display sizes and resolutions.",
                "While existing thin clients can already provide faster performance than native PDA web browsers in delivering HTML web content, they do not effectively support more display-intensive web helper applications such as multimedia video, which is increasingly an integral part of available web content.",
                "To harness the full potential of thin-client computing in providing mobile wireless web on PDAs, we have developed <br>pthinc</br> (PDA THin-client InterNet Computing). <br>pthinc</br> builds on our previous work on THINC [1] to provide a thinclient architecture for mobile handheld devices. pTHINC virtualizes and resizes the display on the server to efficiently deliver high-fidelity screen updates to a broad range of different clients, screen sizes, and screen orientations, including both portrait and landscape viewing modes.",
                "This enables <br>pthinc</br> to provide the same persistent web session across different client devices.",
                "For example, <br>pthinc</br> can provide the same web browsing session appropriately scaled for display on a desktop computer and a PDA so that the same cookies, bookmarks, and other meta-data are continuously available on both machines simultaneously. pTHINCs virtual display approach leverages semantic information available in display commands, and client-side video hardware to provide more efficient remote display mechanisms that are crucial for supporting more display-intensive web applications.",
                "Given limited display resolution on PDAs, <br>pthinc</br> maximizes the use of screen real estate for remote display by moving control functionality from the screen to readily available PDA control buttons, improving system usability.",
                "We have implemented <br>pthinc</br> on Windows Mobile and demonstrated that it works transparently with existing applications, window systems, and operating systems, and does not require modifying, recompiling, or relinking existing software.",
                "We have quantitatively evaluated <br>pthinc</br> against local PDA web browsers and other thin-client approaches on Pocket PC devices.",
                "Our experimental results demonstrate that <br>pthinc</br> provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "This paper presents the design and implementation of <br>pthinc</br>.",
                "Section 2 describes the overall usage model and usability characteristics of <br>pthinc</br>.",
                "Section 3 presents the design and system architecture of <br>pthinc</br>.",
                "Section 4 presents experimental results measuring the performance of <br>pthinc</br> on web applications and comparing it against native PDA browsers and other popular PDA thin-client systems.",
                "Section 5 discusses related work.",
                "Finally, we present some concluding remarks. 2.",
                "<br>pthinc</br> USAGE MODEL <br>pthinc</br> is a thin-client system that consists of a simple client viewer application that runs on the PDA and a server that runs on a commodity PC.",
                "The server leverages more powerful PCs to to run web browsers and other application logic.",
                "The client takes user input from the PDA stylus and virtual keyboard and sends them to the server to pass to the applications.",
                "Screen updates are then sent back from the server to the client for display to the user.",
                "When the <br>pthinc</br> PDA client is started, the user is presented with a simple graphical interface where information such as server address and port, user authentication information, and session settings can be provided. <br>pthinc</br> first attempts to connect to the server and perform the necessary handshaking.",
                "Once this process has been completed, <br>pthinc</br> presents the user with the most recent display of his session.",
                "If the session does not exist, a new session is created.",
                "Existing sessions can be seamlessly continued without changes in the session setting or server configuration.",
                "Unlike other thin-client systems, <br>pthinc</br> provides a user with a persistent web session model in which a user can launch a session running a web browser and associated applications at the server, then disconnect from that session and reconnect to it again anytime.",
                "When a user reconnects to the session, all of the applications continue running where the user left off, so that the user can continue working as though he or she never disconnected.",
                "The ability to disconnect and reconnect to a session at anytime is an important benefit for mobile wireless PDA users which may have intermittent network connectivity. pTHINCs persistent web session model enables a user to reconnect to a web session from devices other than the one on which the web session was originally initiated.",
                "This provides users with seamless mobility across different devices.",
                "If a user loses his PDA, he can easily use another PDA to access his web session.",
                "Furthermore, <br>pthinc</br> allows users to use non-PDA devices to access web sessions as well.",
                "A user can access the same persistent web session on a desktop PC as on a PDA, enabling a user to use the same web session from any computer. pTHINCs persistent web session model addresses a key problem encountered by mobile web users, the lack of a common web environment across computers.",
                "Web browsers often store important information such as bookmarks, cookies, and history, which enable them to function in a much more useful manner.",
                "The problem that occurs when a user moves between computers is that this data, which is specific to a web browser installation, cannot move with the user.",
                "Furthermore, web browsers often need helper applications to process different media content, and those applications may not be consistently available across all computers. <br>pthinc</br> addresses this problem by enabling a user to remotely use the exact same web browser environment and helper applications from any computer.",
                "As a result, <br>pthinc</br> can provide a common, consistent web browsing environment for mobile users across different devices without requiring them to attempt to repeatedly synchronize different web browsing environments across multiple machines.",
                "To enable a user to access the same web session on different devices, <br>pthinc</br> must provide mechanisms to support different display sizes and resolutions.",
                "Toward this end, <br>pthinc</br> provides a zoom feature that enables a user to zoom in and out of a display and allows the display of a web 144 Figure 1: <br>pthinc</br> shortcut keys session to be resized to fit the screen of the device being used.",
                "For example, if the server is running a web session at 1024×768 but the client is a PDA with a display resolution of 640×480, <br>pthinc</br> will resize the desktop display to fit the full display in the smaller screen of the PDA. <br>pthinc</br> provides the PDA user with the option to increase the size of the display by zooming in to different parts of the display.",
                "Users are often familiar with the general layout of commonly visited websites, and are able to leverage this resizing feature to better navigate through web pages.",
                "For example, a user can zoom out of the display to view the entire page content and navigate hyperlinks, then zoom in to a region of interest for a better view.",
                "To enable a user to access the same web session on different devices, <br>pthinc</br> must also provide mechanisms to support different display orientations.",
                "In a desktop environment, users are typically accustomed to having displays presented in landscape mode where the screen width is larger than its height.",
                "However, in a PDA environment, the choice is not always obvious.",
                "Some users may prefer having the display in portrait mode, as it is easier to hold the device in their hands, while others may prefer landscape mode in order to minimize the amount of side-scrolling necessary to view a web page.",
                "To accommodate PDA user preferences, <br>pthinc</br> provides an orientation feature that enables it to seamless rotate the display between landscape and portrait mode.",
                "The landscape mode is particularly useful for <br>pthinc</br> users who frequently access their web sessions on both desktop and PDA devices, providing those users with the same familiar landscape setting across different devices.",
                "Because screen space is a relatively scarce resource on PDAs, <br>pthinc</br> runs in fullscreen mode to maximize the screen area available to display the web session.",
                "To be able to use all of the screen on the PDA and still allow the user to control and interact with it, <br>pthinc</br> reuses the typical shortcut buttons found on PDAs to perform all the control functions available to the user.",
                "The buttons used by <br>pthinc</br> do not require any OS environment changes; they are simply intercepted by the <br>pthinc</br> client application when they are pressed.",
                "Figure 1 shows how <br>pthinc</br> utilizes the shortcut buttons to provide easy navigation and improve the overall user experience.",
                "These buttons are not device specific, and the layout shown is common to widelyused PocketPC devices. <br>pthinc</br> provides six shortcuts to support its usage model: • Rotate Screen: The record button on the left edge is used to rotate the screen between portrait and landscape mode each time the button is pressed. • Zoom Out: The leftmost button on the bottom front is used to zoom out the display of the web session providing a birds eye view of the web session. • Zoom In: The second leftmost button on the bottom front is used to zoom in the display of the web session to more clearly view content of interest. • Directional Scroll: The middle button on the bottom front is used to scroll around the display using a single control button in a way that is already familiar to PDA users.",
                "This feature is particularly useful when the user has zoomed in to a region of the display such that only part of the display is visible on the screen. • Show/Hide Keyboard: The second rightmost button on the bottom front is used to bring up a virtual keyboard drawn on the screen for devices which have no physical keyboard.",
                "The virtual keyboard uses standard PDA OS mechanisms, providing portability across different PDA environments. • Close Session: The rightmost button on the bottom front is used to disconnect from the <br>pthinc</br> session. <br>pthinc</br> uses the PDA touch screen, stylus, and standard user interface mechanisms to provide a user interface pointand-click metaphor similar to that provided by the mouse in a traditional desktop computing environment. pTHINC does not use a cursor since PDA environments do not provide one.",
                "Instead, a user can use the stylus to tap on different sections of the touch screen to indicate input focus.",
                "A single tap on the touch screen generates a corresponding single click mouse event.",
                "A double tap on the touch screen generates a corresponding double click mouse event. <br>pthinc</br> provides two-button mouse emulation by using the stylus to press down on the screen for one second to generate a right mouse click.",
                "All of these actions are identical to the way users already interact with PDA applications in the common PocketPC environment.",
                "In web browsing, users can click on hyperlinks and focus on input boxes by simply tapping on the desired screen area of interest.",
                "Unlike local PDA web browsers and other PDA applications, <br>pthinc</br> leverages more powerful desktop user interface metaphors to enable users to manipulate multiple open application windows instead of being limited to a single application window at any given moment.",
                "This provides increased browsing flexibility beyond what is currently available on PDA devices.",
                "Similar to a desktop environment, browser windows and other application windows can be moved around by pressing down and dragging the stylus similar to a mouse. 3.",
                "<br>pthinc</br> SYSTEM ARCHITECTURE <br>pthinc</br> builds on the THINC [1] remote display architecture to provide a thin-client system for PDAs. pTHINC virtualizes the display at the server by leveraging the video device abstraction layer, which sits below the window server and above the framebuffer.",
                "This is a well-defined, low-level, device-dependent layer that exposes the video hardware to the display system. <br>pthinc</br> accomplishes this through a simple virtual display driver that intercepts drawing commands, packetizes, and sends them over the network. 145 While other thin-client approaches intercept display commands at other layers of the display subsystem, pTHINCs display virtualization approach provides some key benefits in efficiently supporting PDA clients.",
                "For example, intercepting display commands at a higher layer between applications and the window system as is done by X [17] requires replicating and running a great deal of functionality on the PDA that is traditionally provided by the desktop window system.",
                "Given both the size and complexity of traditional window systems, attempting to replicate this functionality in the restricted PDA environment would have proven to be a daunting, and perhaps unfeasible task.",
                "Furthermore, applications and the window system often require tight synchronization in their operation and imposing a wireless network between them by running the applications on the server and the window system on the client would significantly degrade performance.",
                "On the other hand, intercepting at a lower layer by extracting pixels out of the framebuffer as they are rendered provides a simple solution that requires very little functionality on the PDA client, but can also result in degraded performance.",
                "The reason is that by the time the remote display server attempts to send screen updates, it has lost all semantic information that may have helped it encode efficiently, and it must resort to using a generic and expensive encoding mechanism on the server, as well as a potentially expensive decoding mechanism on the limited PDA client.",
                "In contrast to both the high and low level interception approaches, pTHINCs approach of intercepting at the device driver provides an effective balance between client and server simplicity, and the ability to efficiently encode and decode screen updates.",
                "By using a low-level virtual display approach, <br>pthinc</br> can efficiently encode application display commands using only a small set of low-level commands.",
                "In a PDA environment, this set of commands provides a crucial component in maintaining the simplicity of the client in the resourceconstrained PDA environment.",
                "The display commands are shown in Table 1, and work as follows.",
                "COPY instructs the client to copy a region of the screen from its local framebuffer to another location.",
                "This command improves the user experience by accelerating scrolling and opaque window movement without having to resend screen data from the server.",
                "SFILL, PFILL, and BITMAP are commands that paint a fixed-size region on the screen.",
                "They are useful for accelerating the display of solid window backgrounds, desktop patterns, backgrounds of web pages, text drawing, and certain operations in graphics manipulation programs.",
                "SFILL fills a sizable region on the screen with a single color.",
                "PFILL replicates a tile over a screen region.",
                "BITMAP performs a fill using a bitmap of ones and zeros as a stipple to apply a foreground and background color.",
                "Finally, RAW is used to transmit unencoded pixel data to be displayed verbatim on a region of the screen.",
                "This command is invoked as a last resort if the server is unable to employ any other command, and it is the only command that may be compressed to mitigate its impact on network bandwidth. <br>pthinc</br> delivers its commands using a non-blocking, serverpush update mechanism, where as soon as display updates are generated on the server, they are sent to the client.",
                "Clients are not required to explicitly request display updates, thus minimizing the impact that the typical varying network latency of wireless links may have on the responsiveness of the system.",
                "Keeping in mind that resource Command Description COPY Copy a frame buffer area to specified coordinates SFILL Fill an area with a given pixel color value PFILL Tile an area with a given pixel pattern BITMAP Fill a region using a bit pattern RAW Display raw pixel data at a given location Table 1: <br>pthinc</br> Protocol Display Commands constrained PDAs and wireless networks may not be able to keep up with a fast server generating a large number of updates, <br>pthinc</br> is able to coalesce, clip, and discard updates automatically if network loss or congestion occurs, or the client cannot keep up with the rate of updates.",
                "This type of behavior proves crucial in a web browsing environment, where for example, a page may be redrawn multiple times as it is rendered on the fly by the browser.",
                "In this case, the PDA will only receive and render the final result, which clearly is all the user is interesting in seeing. <br>pthinc</br> prioritizes the delivery of updates to the PDA using a Shortest-Remaining-Size-First (SRSF) preemptive update scheduler.",
                "SRSF is analogous to Shortest-RemainingProcessing-Time scheduling, which is known to be optimal for minimizing mean response time in an interactive system.",
                "In a web browsing environment, short jobs are associated with text and basic page layout components such as the pages background, which are critical web content for the user.",
                "On the other hand, large jobs are often lower priority beautifying elements, or, even worse, web page banners and advertisements, which are of questionable value to the user as he or she is browsing the page.",
                "Using SRSF, <br>pthinc</br> is able to maximize the utilization of the relatively scarce bandwidth available on the wireless connection between the PDA and the server. 3.1 Display Management To enable users to just as easily access their web browser and helper applications from a desktop computer at home as from a PDA while on the road, <br>pthinc</br> provides a resize mechanism to zoom in and out of the display of a web session. pTHINC resizing is completely supported by the server, not the client.",
                "The server resamples updates to fit within the PDAs viewport before they are transmitted over the network. <br>pthinc</br> uses Fants resampling algorithm to resize pixel updates.",
                "This provides smooth, visually pleasing updates with properly antialiasing and has only modest computational requirements. pTHINCs resizing approach has a number of advantages.",
                "First, it allows the PDA to leverage the vastly superior computational power of the server to use high quality resampling algorithms and produce higher quality updates for the PDA to display.",
                "Second, resizing the screen does not translate into additional resource requirements for the PDA, since it does not need to perform any additional work.",
                "Finally, better utilization of the wireless network is attained since rescaling the updates reduces their bandwidth requirements.",
                "To enable users to orient their displays on a PDA to provide a viewing experience that best accommodates user preferences and the layout of web pages or applications, <br>pthinc</br> provides a display rotation mechanism to switch between landscape and portrait viewing modes. <br>pthinc</br> display rotation is completely supported by the client, not the server. pTHINC does not explicitly recalculate the ge146 ometry of display updates to perform rotation, which would be computationally expensive.",
                "Instead, <br>pthinc</br> simply changes the way data is copied into the framebuffer to switch between display modes.",
                "When in portrait mode, data is copied along the rows of the framebuffer from left to right.",
                "When in landscape mode, data is copied along the columns of the framebuffer from top to bottom.",
                "These very fast and simple techniques replace one set of copy operations with another and impose no performance overhead. <br>pthinc</br> provides its own rotation mechanism to support a wide range of devices without imposing additional feature requirements on the PDA.",
                "Although some newer PDA devices provide native support for different orientations, this mechanism is not dynamic and requires the user to rotate the PDAs entire user interface before starting the <br>pthinc</br> client.",
                "Windows Mobile provides native API mechanisms for PDA applications to rotate their UI on the fly, but these mechanisms deliver poor performance and display quality as the rotation is performed naively and is not completely accurate. 3.2 Video Playback Video has gradually become an integral part of the World Wide Web, and its presence will only continue to increase.",
                "Web sites today not only use animated graphics and flash to deliver web content in an attractive manner, but also utilize streaming video to enrich the web interface.",
                "Users are able to view pre-recorded and live newscasts on CNN, watch sports highlights on ESPN, and even search through large collection of videos on Google Video.",
                "To allow applications to provide efficient video playback, interfaces have been created in display systems that allow video device drivers to expose their hardware capabilities back to the applications. <br>pthinc</br> takes advantage of these interfaces and its virtual device driver approach to provide a virtual bridge between the remote client and its hardware and the applications, and transparently support video playback.",
                "On top of this architecture, <br>pthinc</br> uses the YUV colorspace to encode the video content, which provides a number of benefits.",
                "First, it has become increasingly common for PDA video hardware to natively support YUV and be able to perform the colorspace conversion and scaling automatically.",
                "As a result, <br>pthinc</br> is able to provide fullscreen video playback without any performance hits.",
                "Second, the use of YUV allows for a more efficient representation of RGB data without loss of quality, by taking advantage of the human eyes ability to better distinguish differences in brightness than in color.",
                "In particular, <br>pthinc</br> uses the YV12 format, which allows full color RGB data to be encoded using just 12 bits per pixel.",
                "Third, YUV data is produced as one of the last steps of the decoding process of most video codecs, allowing <br>pthinc</br> to provide video playback in a manner that is format independent.",
                "Finally, even if the PDAs video hardware is unable to accelerate playback, the colorspace conversion process is simple enough that it does not impose unreasonable requirements on the PDA.",
                "A more concrete example of how <br>pthinc</br> leverages the PDA video hardware to support video playback can be seen in our prototype implementation on the popular Dell Axim X51v PDA, which is equipped with the Intel 2700G multimedia accelerator.",
                "In this case, <br>pthinc</br> creates an offscreen buffer in video memory and writes and reads from this memory region data on the YV12 format.",
                "When a new video frame arrives, video data is copied from the buffer to Figure 2: Experimental Testbed an overlay surface in video memory, which is independent of the normal surface used for traditional drawing.",
                "As the YV12 data is put onto the overlay, the Intel accelerator automatically performs both colorspace conversion and scaling.",
                "By using the overlay surface, <br>pthinc</br> has no need to redraw the screen once video playback is over since the overlapped surface is unaffected.",
                "In addition, specific overlay regions can be manipulated by leveraging the video hardware, for example to perform hardware linear interpolation to smooth out the frame and display it fullscreen, and to do automatic rotation when the client runs in landscape mode. 4.",
                "EXPERIMENTAL RESULTS We have implemented a <br>pthinc</br> prototype that runs the client on widely-used Windows Mobile-based Pocket PC devices and the server on both Windows and Linux operating systems.",
                "To demonstrate its effectiveness in supporting mobile wireless web applications, we have measured its performance on web applications.",
                "We present experimental results on different PDA devices for two popular web applications, browsing web pages and playing video content from the web.",
                "We compared <br>pthinc</br> against native web applications running locally on the PDA to demonstrate the improvement that <br>pthinc</br> can provide over the traditional fat-client approach.",
                "We also compared <br>pthinc</br> against three of the most widely used thin clients that can run on PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] and VNC (Virtual Network Computing) [16].",
                "We follow common practice and refer to Citrix MetaFrameXP and Microsoft Remote Desktop by their respective remote display protocols, ICA (Independent Computing Architecture) and RDP (Remote Desktop Protocol). 4.1 Experimental Testbed We conducted our web experiments using two different wireless Pocket PC PDAs in an isolated Wi-Fi network testbed, as shown in Figure 2.",
                "The testbed consisted of two PDA client devices, a packet monitor, a thin-client server, and a web server.",
                "Except for the PDAs, all of the other machines were IBM Netfinity 4500R servers with dual 933 MHz Intel PIII CPUs and 512 MB RAM and were connected on a switched 100 Mbps FastEthernet network.",
                "The web server used was Apache 1.3.27, the network emulator was NISTNet 2.0.12, and the packet monitor was Ethereal 0.10.9.",
                "The PDA clients connected to the testbed through a 802.11b Lucent Orinoco AP-2000 wireless access point.",
                "All experiments using the wireless network were conducted within ten feet of the access point, so we considered the amount of packet loss to be negligible in our experiments.",
                "Two Pocket PC PDAs were used to provide results across both older, less powerful models and newer higher performance models.",
                "The older model was a Dell Axim X5 with 147 Client 1024×768 640×480 Depth Resize Clip RDP no yes 8-bit no yes VNC yes yes 16-bit no no ICA yes yes 16-bit yes no <br>pthinc</br> yes yes 24-bit yes no Table 2: Thin-client Testbed Configuration Setting a 400 MHz Intel XScale PXA255 CPU and 64 MB RAM running Windows Mobile 2003 and a Dell TrueMobile 1180 2.4Ghz CompactFlash card for wireless networking.",
                "The newer model was a Dell Axim X51v with a 624 MHz Intel XScale XPA270 CPU and 64 MB RAM running Windows Mobile 5.0 and integrated 802.11b wireless networking.",
                "The X51v has an Intel 2700G multimedia accelerator with 16MB video memory.",
                "Both PDAs are capable of 16-bit color but have different screen sizes and display resolutions.",
                "The X5 has a 3.5 inch diagonal screen with 240×320 resolution.",
                "The X51v has a 3.7 inch diagonal screen with 480×640.",
                "The four thin clients that we used support different levels of display quality as summarized in Table 2.",
                "The RDP client only supports a fixed 640×480 display resolution on the server with 8-bit color depth, while other platforms provide higher levels of display quality.",
                "To provide a fair comparison across all platforms, we conducted our experiments with thin-client sessions configured for two possible resolutions, 1024×768 and 640×480.",
                "Both ICA and VNC were configured to use the native PDA resolution of 16-bit color depth.",
                "The current <br>pthinc</br> prototype uses 24-bit color directly and the client downsamples updates to the 16-bit color depth available on the PDA.",
                "RDP was configured using only 8-bit color depth since it does not support any better color depth.",
                "Since both <br>pthinc</br> and ICA provide the ability to view the display resized to fit the screen, we measured both clients with and without the display resized to fit the PDA screen.",
                "Each thin client was tested using landscape rather than portrait mode when available.",
                "All systems run on the X51v could run in landscape mode because the hardware provides a landscape mode feature.",
                "However, the X5 does not provide this functionality.",
                "Only <br>pthinc</br> directly supports landscape mode, so it was the only system that could run in landscape mode on both the X5 and X51v.",
                "To provide a fair comparison, we also standardized on common hardware and operating systems whenever possible.",
                "All of the systems used the Netfinity server as the thin-client server.",
                "For the two systems designed for Windows servers, ICA and RDP, we ran Windows 2003 Server on the server.",
                "For the other systems which support X-based servers, VNC and <br>pthinc</br>, we ran the Debian Linux Unstable distribution with the Linux 2.6.10 kernel on the server.",
                "We used the latest thin-client server versions available on each platform at the time of our experiments, namely Citrix MetaFrame XP Server for Windows Feature Release 3, Microsoft Remote Desktop built into Windows XP and Windows 2003 using RDP 5.2, and VNC 4.0. 4.2 Application Benchmarks We used two web application benchmarks for our experiments based on two common application scenarios, browsing web pages and playing video content from the web.",
                "Since many thin-client systems including two of the ones tested are closed and proprietary, we measured their performance in a noninvasive manner by capturing network traffic with a packet monitor and using a variant of slow-motion benchmarking [13] previously developed to measure thin-client performance in PDA environments [10].",
                "This measurement methodology accounts for both the display decoupling that can occur between client and server in thin-client systems as well as client processing time, which may be significant in the case of PDAs.",
                "To measure web browsing performance, we used a web browsing benchmark based on the Web Text Page Load Test from the Ziff-Davis i-Bench benchmark suite [7].",
                "The benchmark consists of JavaScript controlled load of 55 pages from the web server.",
                "The pages contain both text and graphics with pages varying in size.",
                "The graphics are embedded images in GIF and JPEG formats.",
                "The original i-Bench benchmark was modified for slow-motion benchmarking by introducing delays of several seconds between the pages using JavaScript.",
                "Then two tests were run, one where delays where added between each page, and one where pages where loaded continuously without waiting for them to be displayed on the client.",
                "In the first test, delays were sufficiently adjusted in each case to ensure that each page could be received and displayed on the client completely without temporal overlap in transferring the data belonging to two consecutive pages.",
                "We used the packet monitor to record the packet traffic for each run of the benchmark, then used the timestamps of the first and last packet in the trace to obtain our latency measures [10].",
                "The packet monitor also recorded the amount of data transmitted between the client and the server.",
                "The ratio between the data traffic in the two tests yields a scale factor.",
                "This scale factor shows the loss of data between the server and the client due to inability of the client to process the data quickly enough.",
                "The product of the scale factor with the latency measurement produces the true latency accounting for client processing time.",
                "To run the web browsing benchmark, we used Mozilla Firefox 1.0.4 running on the thin-client server for the thin clients, and Windows Internet Explorer (IE) Mobile for 2003 and Mobile for 5.0 for the native browsers on the X5 and X51v PDAs, respectively.",
                "In all cases, the web browser used was sized to fill the entire display region available.",
                "To measure video playback performance, we used a video benchmark that consisted of playing a 34.75s MPEG-1 video clip containing a mix of news and entertainment programming at full-screen resolution.",
                "The video clip is 5.11 MB and consists of 834 352x240 pixel frames with an ideal frame rate of 24 frames/sec.",
                "We measured video performance using slow-motion benchmarking by monitoring resulting packet traffic at two playback rates, 1 frames/second (fps) and 24 fps, and comparing the results to determine playback delays and frame drops that occur at 24 fps to measure overall video quality [13].",
                "For example, 100% quality means that all video frames were played at real-time speed.",
                "On the other hand, 50% quality could mean that half the video data was dropped, or that the clip took twice as long to play even though all of the video data was displayed.",
                "To run the video benchmark, we used Windows Media Player 9 for Windows-based thin-client servers, MPlayer 1.0 pre 6 for X-based thin-client servers, and Windows Media Player 9 Mobile and 10 Mobile for the native video players running locally on the X5 and X51v PDAs, respectively.",
                "In all cases, the video player used was sized to fill the entire display region available. 4.3 Measurements Figures 3 and 4 show the results of running the web brows148 0 1 10 100 <br>pthinc</br> Resized pTHINCICA Resized ICAVNCRDPLOCAL Latency(s) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 3: Browsing Benchmark: Average Page Latency ing benchmark.",
                "For each platform, we show results for up to four different configurations, two on the X5 and two on the X51v, depending on whether each configuration was supported.",
                "However, not all platforms could support all configurations.",
                "The local browser only runs at the display resolution of the PDA, 480×680 or less for the X51v and the X5.",
                "RDP only runs at 640×480.",
                "Neither platform could support 1024×768 display resolution.",
                "ICA only ran on the X5 and could not run on the X51v because it did not work on Windows Mobile 5.",
                "Figure 3 shows the average latency per web page for each platform. <br>pthinc</br> provides the lowest average web browsing latency on both PDAs.",
                "On the X5, <br>pthinc</br> performs up to 70 times better than other thin-client systems and 8 times better than the local browser.",
                "On the X51v, <br>pthinc</br> performs up to 80 times better than other thin-client systems and 7 times better than the native browser.",
                "In fact, all of the thin clients except VNC outperform the local PDA browser, demonstrating the performance benefits of the thin-client approach.",
                "Usability studies have shown that web pages should take less than one second to download for the user to experience an uninterrupted web browsing experience [14].",
                "The measurements show that only the thin clients deliver subsecond web page latencies.",
                "In contrast, the local browser requires more than 3 seconds on average per web page.",
                "The local browser performs worse since it needs to run a more limited web browser to process the HTML, JavaScript, and do all the rendering using the limited capabilities of the PDA.",
                "The thin clients can take advantage of faster server hardware and a highly tuned web browser to process the web content much faster.",
                "Figure 3 shows that RDP is the next fastest platform after <br>pthinc</br>.",
                "However, RDP is only able to run at a fixed resolution of 640×480 and 8-bit color depth.",
                "Furthermore, RDP also clips the display to the size of the PDA screen so that it does not need to send updates that are not visible on the PDA screen.",
                "This provides a performance benefit assuming the remaining web content is not viewed, but degrades performance when a user scrolls around the display to view other web content.",
                "RDP achieves its performance with significantly lower display quality compared to the other thin clients and with additional display clipping not used by other systems.",
                "As a result, RDP performance alone does not provide a complete comparison with the other platforms.",
                "In contrast, <br>pthinc</br> provides the fastest performance while at the same time providing equal or better display quality than the other systems. 0 1 10 100 1000 <br>pthinc</br> Resized pTHINCICA Resized ICAVNCRDPLOCAL DataSize(KB) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 4: Browsing Benchmark: Average Page Data Transferred Since VNC and ICA provide similar display quality to pTHINC, these systems provide a more fair comparison of different thin-client approaches.",
                "ICA performs worse in part because it uses higher-level display primitives that require additional client processing costs.",
                "VNC performs worse in part because it loses display data due to its client-pull delivery mechanism and because of the client processing costs in decompressing raw pixel primitives.",
                "In both cases, their performance was limited in part because their PDA clients were unable to keep up with the rate at which web pages were being displayed.",
                "Figure 3 also shows measurements for those thin clients that support resizing the display to fit the PDA screen, namely ICA and <br>pthinc</br>.",
                "Resizing requires additional processing, which results in slower average web page latencies.",
                "The measurements show that the additional delay incurred by ICA when resizing versus not resizing is much more substantial than for <br>pthinc</br>.",
                "ICA performs resizing on the slower PDA client.",
                "In contrast, <br>pthinc</br> leverage the more powerful server to do resizing, reducing the performance difference between resizing and not resizing.",
                "Unlike ICA, <br>pthinc</br> is able to provide subsecond web page download latencies in both cases.",
                "Figure 4 shows the data transferred in KB per page when running the slow-motion version of the tests.",
                "All of the platforms have modest data transfer requirements of roughly 100 KB per page or less.",
                "This is well within the bandwidth capacity of Wi-Fi networks.",
                "The measurements show that the local browser does not transfer the least amount of data.",
                "This is surprising as HTML is often considered to be a very compact representation of content.",
                "Instead, RDP is the most bandwidth efficient platform, largely as a result of using only 8-bit color depth and screen clipping so that it does not transfer the entire web page to the client. <br>pthinc</br> overall has the largest data requirements, slightly more than VNC.",
                "This is largely a result of the current <br>pthinc</br> prototypes lack of native support for 16-bit color data in the wire protocol.",
                "However, this result also highlights pTHINCs performance as it is faster than all other systems even while transferring more data.",
                "Furthermore, as newer PDA models support full 24-bit color, these results indicate that <br>pthinc</br> will continue to provide good web browsing performance.",
                "Since display usability and quality are as important as performance, Figures 5 to 8 compare screenshots of the different thin clients when displaying a web page, in this case from the popular BBC news website.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode 149 Figure 5: Browser Screenshot: RDP 640x480 Figure 6: Browser Screenshot: VNC 1024x768 Figure 7: Browser Screenshot: ICA Resized 1024x768 Figure 8: Browser Screenshot: <br>pthinc</br> Resized 1024x768 using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "While the screenshots lack the visual fidelity of the actual device display, several observations can be made.",
                "Figure 5 shows that RDP does not support fullscreen mode and wastes lots of screen space for controls and UI elements, requiring the user to scroll around in order to access the full contents of the web browsing session.",
                "Figure 6 shows that VNC makes better use of the screen space and provides better display quality, but still forces the user to scroll around to view the web page due to its lack of resizing support.",
                "Figure 7 shows ICAs ability to display the full web page given its resizing support, but that its lack of landscape capability and poorer resize algorithm significantly compromise display quality.",
                "In contrast, Figure 8 shows <br>pthinc</br> using resizing to provide a high quality fullscreen display of the full width of the web page. <br>pthinc</br> maximizes the entire viewing region by moving all controls to the PDA buttons.",
                "In addition, <br>pthinc</br> leverages the server computational power to use a high quality resizing algorithm to resize the display to fit the PDA screen without significant overhead.",
                "Figures 9 and 10 show the results of running the video playback benchmark.",
                "For each platform except ICA, we show results for an X5 and X51v configuration.",
                "ICA could not run on the X51v as noted earlier.",
                "The measurements were done using settings that reflected the environment a user would have to access a web session from both a desktop computer and a PDA.",
                "As such, a 1024×768 server display resolution was used whenever possible and the video was shown at fullscreen.",
                "RDP was limited to 640×480 display resolution as noted earlier.",
                "Since viewing the entire video display is the only really usable option, we resized the display to fit the PDA screen for those platforms that supported this feature, namely ICA and <br>pthinc</br>.",
                "Figure 9 shows the video quality for each platform. <br>pthinc</br> is the only thin client able to provide perfect video playback quality, similar to the native PDA video player.",
                "All of the other thin clients deliver very poor video quality.",
                "With the exception of RDP on the X51v which provided unacceptable 35% video quality, none of the other systems were even able to achieve 10% video quality.",
                "VNC and ICA have the worst quality at 8% on the X5 device. pTHINCs native video support enables superior video performance, while other thin clients suffer from their inability to distinguish video from normal display updates.",
                "They attempt to apply ineffective and expensive compression algorithms on the video data and are unable to keep up with the stream of updates generated, resulting in dropped frames or long playback times.",
                "VNC suffers further from its client-pull update model because video frames are generated faster than the rate at which the client can process and send requests to the server to obtain the next display update.",
                "Figure 10 shows the total data transferred during 150 0% 20% 40% 60% 80% 100% pTHINCICAVNCRDPLOCAL VideoQuality Platform Axim X5 Axim X51v Figure 9: Video Benchmark: Fullscreen Video Quality 0 1 10 100 pTHINCICAVNCRDPLOCAL VideoDataSize(MB) Platform Axim X5 Axim X51v Figure 10: Video Benchmark: Fullscreen Video Data video playback for each system.",
                "The native player is the most bandwidth efficient platform, sending less than 6 MB of data, which corresponds to about 1.2 Mbps of bandwidth. pTHINCs 100% video quality requires about 25 MB of data which corresponds to a bandwidth usage of less than 6 Mbps.",
                "While the other thin clients send less data than THINC, they do so because they are dropping video data, resulting in degraded video quality.",
                "Figures 11 to 14 compare screenshots of the different thin clients when displaying the video clip.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "Figures 11 and 12 show that RDP and VNC are unable to display the entire video frame on the PDA screen.",
                "RDP wastes screen space for UI elements and VNC only shows the top corner of the video frame on the screen.",
                "Figure 13 shows that ICA provides resizing to display the entire video frame, but did not proportionally resize the video data, resulting in strange display artifacts.",
                "In contrast, Figure 14 shows <br>pthinc</br> using resizing to provide a high quality fullscreen display of the entire video frame. <br>pthinc</br> provides visually more appealing video display than RDP, VNC, or ICA. 5.",
                "RELATED WORK Several studies have examined the web browsing performance of thin-client computing [13, 19, 10].",
                "The ability for thin clients to improve web browsing performance on wireless PDAs was first quantitatively demonstrated in a previous study by one of the authors [10].",
                "This study demonstrated that thin clients can provide both faster web browsing performance and greater web browsing functionality.",
                "The study considered a wide range of web content including content from medical information systems.",
                "Our work builds on this previous study and consider important issues such as how usable existing thin clients are in PDA environments, the trade-offs between thin-client usability and performance, performance across different PDA devices, and the performance of thin clients on common web-related applications such as video.",
                "Many thin clients have been developed and some have PDA clients, including Microsofts Remote Desktop [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5], and Tarantella [18].",
                "These systems were first designed for desktop computing and retrofitted for PDAs.",
                "Unlike <br>pthinc</br>, they do not address key system architecture and usability issues important for PDAs.",
                "This limits their display quality, system performance, available screen space, and overall usability on PDAs. <br>pthinc</br> builds on previous work by two of the authors on THINC [1], extending the server architecture and introducing a client interface and usage model to efficiently support PDA devices for mobile web applications.",
                "Other approaches to improve the performance of mobile wireless web browsing have focused on using transcoding and caching proxies in conjunction with the fat client model [11, 9, 4, 8].",
                "They work by pushing functionality to external proxies, and using specialized browsing applications on the PDA device that communicate with the proxy.",
                "Our thinclient approach differs fundamentally from these fat-client approaches by pushing all web browser logic to the server, leveraging existing investments in desktop web browsers and helper applications to work seamlessly with production systems without any additional proxy configuration or web browser modifications.",
                "With the emergence of web browsing on small display devices, web sites have been redesigned using mechanisms like WAP and specialized native web browsers have been developed to tailor the needs of these devices.",
                "Recently, Opera has developed the Opera Mini [15] web browser, which uses an approach similar to the thin-client model to provide access across a number of mobile devices that would normally be incapable of running a web browser.",
                "Instead of requiring the device to process web pages, it uses a remote server to pre-process the page before sending it to the phone. 6.",
                "CONCLUSIONS We have introduced <br>pthinc</br>, a thin-client architecture for wireless PDAs. <br>pthinc</br> provides key architectural and usability mechanisms such as server-side screen resizing, clientside screen rotation using simple copy techniques, YUV video support, and maximizing screen space for display updates and leveraging existing PDA control buttons for UI elements. pTHINC transparently supports traditional desktop browsers and their helper applications on PDA devices and desktop machines, providing mobile users with ubiquitous access to a consistent, personalized, and full-featured web environment across heterogeneous devices.",
                "We have implemented <br>pthinc</br> and measured its performance on web applications compared to existing thin-client systems and native web applications.",
                "Our results on multiple mobile wireless devices demonstrate that <br>pthinc</br> delivers web browsing performance up to 80 times better than existing thin-client systems, and 8 times better than a native PDA browser.",
                "In addition, <br>pthinc</br> is the only PDA thin client 151 Figure 11: Video Screenshot: RDP 640x480 Figure 12: Video Screenshot: VNC 1024x768 Figure 13: Video Screenshot: ICA Resized 1024x768 Figure 14: Video Screenshot: <br>pthinc</br> Resized 1024x768 that transparently provides full-screen, full frame rate video playback, making web sites with multimedia content accessible to mobile web users. 7.",
                "ACKNOWLEDGEMENTS This work was supported in part by NSF ITR grants CCR0219943 and CNS-0426623, and an IBM SUR Award. 8.",
                "REFERENCES [1] R. Baratto, L. Kim, and J. Nieh.",
                "THINC: A Virtual Display Architecture for Thin-Client Computing.",
                "In Proceedings of the 20th ACM Symposium on Operating Systems Principles (SOSP), Oct. 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius, and A. Muir.",
                "Microsoft Windows NT Server 4.0, Terminal Server Edition: Technical Reference.",
                "Microsoft Press, Redmond, WA, 1999. [4] A.",
                "Fox, I. Goldberg, S. D. Gribble, and D. C. Lee.",
                "Experience With Top Gun Wingman: A Proxy-Based Graphical Web Browser for the 3Com PalmPilot.",
                "In Proceedings of Middleware 98, Lake District, England, September 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Health Insurance Portability and Accountability Act. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench version 1.5. http: //etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi.",
                "On proxy agents, mobility, and web access.",
                "Mobile Networks and Applications, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon, and A. Ortega.",
                "Design and Implementation of a Soft Caching Proxy.",
                "Computer Networks and ISDN Systems, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana, and S. Varshneya.",
                "Improving Web Browsing on Wireless PDAs Using Thin-Client Computing.",
                "In Proceedings of the 13th International World Wide Web Conference (WWW), May 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham, and P. Shenoy.",
                "TranSquid: Transcoding and caching proxy for heterogenous ecommerce environments.",
                "In Proceedings of the 12th IEEE Workshop on Research Issues in Data Engineering (RIDE 02), Feb. 2002. [12] .NET VNC Viewer for PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang, and N. Novik.",
                "Measuring Thin-Client Performance Using Slow-Motion Benchmarking.",
                "ACM Trans.",
                "Computer Systems, 21(1):87-115, Feb. 2003. [14] J. Nielsen.",
                "Designing Web Usability.",
                "New Riders Publishing, Indianapolis, IN, 2000. [15] Opera Mini Browser. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood, and A. Hopper.",
                "Virtual Network Computing.",
                "IEEE Internet Computing, 2(1), Jan./Feb. 1998. [17] R. W. Scheifler and J. Gettys.",
                "The X Window System.",
                "ACM Trans.",
                "Gr., 5(2):79-106, Apr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla, and M. Sajjadpour.",
                "Web Browsing Performance of Wireless Thin-Client Computing.",
                "In Proceedings of the 12th International World Wide Web Conference (WWW), May 2003. 152"
            ],
            "original_annotated_samples": [
                "<br>pthinc</br>: A Thin-Client Architecture for Mobile Wireless Web Joeng Kim, Ricardo A. Baratto, and Jason Nieh Department of Computer Science Columbia University, New York, NY, USA {jk2438, ricardo, nieh}@cs.columbia.edu ABSTRACT Although web applications are gaining popularity on mobile wireless PDAs, web browsers on these systems can be quite slow and often lack adequate functionality to access many web sites.",
                "We have developed <br>pthinc</br>, a PDA thinclient solution that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. <br>pthinc</br> uses server-side screen scaling to provide high-fidelity display and seamless mobility across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available screen resolution for application display.",
                "We have implemented <br>pthinc</br> on Windows Mobile and evaluated its performance on mobile wireless devices.",
                "Our results compared to local PDA web browsers and other thin-client approaches demonstrate that <br>pthinc</br> provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "To harness the full potential of thin-client computing in providing mobile wireless web on PDAs, we have developed <br>pthinc</br> (PDA THin-client InterNet Computing). <br>pthinc</br> builds on our previous work on THINC [1] to provide a thinclient architecture for mobile handheld devices. pTHINC virtualizes and resizes the display on the server to efficiently deliver high-fidelity screen updates to a broad range of different clients, screen sizes, and screen orientations, including both portrait and landscape viewing modes."
            ],
            "translated_annotated_samples": [
                "pTHINC: Una arquitectura de cliente ligero para la web inalámbrica móvil Joeng Kim, Ricardo A. Baratto y Jason Nieh Departamento de Ciencias de la Computación Universidad de Columbia, Nueva York, NY, EE. UU. {jk2438, ricardo, nieh}@cs.columbia.edu RESUMEN Aunque las aplicaciones web están ganando popularidad en las PDAs inalámbricas móviles, los navegadores web en estos sistemas pueden ser bastante lentos y a menudo carecen de funcionalidad adecuada para acceder a muchos sitios web.",
                "Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y movilidad fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la resolución de pantalla disponible para la visualización de aplicaciones.",
                "Hemos implementado pTHINC en Windows Mobile y evaluado su rendimiento en dispositivos móviles inalámbricos.",
                "Nuestros resultados comparados con los navegadores web PDA locales y otros enfoques de cliente ligero demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero PDA que soporta de manera efectiva aplicaciones de ayuda del navegador cruciales como la reproducción de video.",
                "Para aprovechar todo el potencial de la informática de <br>cliente ligero</br> en la provisión de la web inalámbrica móvil en PDAs, hemos desarrollado pTHINC (PDA THin-client InterNet Computing). pTHINC se basa en nuestro trabajo previo en THINC [1] para proporcionar una arquitectura de <br>cliente ligero</br> para dispositivos móviles de mano. pTHINC virtualiza y redimensiona la pantalla en el servidor para entregar de manera eficiente actualizaciones de pantalla de alta fidelidad a una amplia gama de clientes diferentes, tamaños de pantalla y orientaciones de pantalla, incluidos los modos de visualización en vertical y horizontal."
            ],
            "translated_text": "pTHINC: Una arquitectura de cliente ligero para la web inalámbrica móvil Joeng Kim, Ricardo A. Baratto y Jason Nieh Departamento de Ciencias de la Computación Universidad de Columbia, Nueva York, NY, EE. UU. {jk2438, ricardo, nieh}@cs.columbia.edu RESUMEN Aunque las aplicaciones web están ganando popularidad en las PDAs inalámbricas móviles, los navegadores web en estos sistemas pueden ser bastante lentos y a menudo carecen de funcionalidad adecuada para acceder a muchos sitios web. Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y movilidad fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la resolución de pantalla disponible para la visualización de aplicaciones. Hemos implementado pTHINC en Windows Mobile y evaluado su rendimiento en dispositivos móviles inalámbricos. Nuestros resultados comparados con los navegadores web PDA locales y otros enfoques de cliente ligero demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero PDA que soporta de manera efectiva aplicaciones de ayuda del navegador cruciales como la reproducción de video. Categorías y Descriptores de Asunto: C.2.4 Comunicación de Computadoras-Redes: Sistemas Distribuidos - cliente/servidor Términos Generales: Diseño, Experimentación, Rendimiento 1. La creciente ubicuidad de las redes inalámbricas y la disminución del costo del hardware están impulsando una proliferación de dispositivos móviles inalámbricos portátiles, tanto como asistentes digitales personales (PDA) inalámbricos independientes y dispositivos populares integrados de PDA/teléfono celular. Estos dispositivos están permitiendo nuevas formas de computación y comunicación móvil. Los proveedores de servicios están aprovechando estos dispositivos para ofrecer acceso web omnipresente, y los usuarios de la web móvil a menudo ya utilizan estos dispositivos para acceder a información habilitada para la web, como noticias, correo electrónico, guías de viaje localizadas y mapas. Es probable que en unos pocos años, la mayoría de los dispositivos que accedan a la web sean móviles. Los usuarios suelen acceder al contenido web ejecutando un navegador web y aplicaciones auxiliares asociadas localmente en la PDA. Aunque existen navegadores web nativos para PDAs, ofrecen un rendimiento deficiente y tienen un conjunto de funciones mucho más pequeño y una funcionalidad más limitada que sus contrapartes de computadoras de escritorio [10]. Como resultado, los navegadores web de PDA a menudo no pueden mostrar el contenido web de sitios web que utilizan tecnologías web más avanzadas para ofrecer una experiencia web más rica. Este problema fundamental surge por dos razones. Primero, debido a que las PDAs tienen un entorno de hardware/software completamente diferente de las computadoras de escritorio tradicionales, las aplicaciones web necesitan ser reescritas y personalizadas para las PDAs si es posible, duplicando los costos de desarrollo. Debido a que el mercado de aplicaciones de escritorio es más grande y maduro, la mayoría del esfuerzo de desarrollo generalmente se destina a las aplicaciones de escritorio, lo que resulta en una mayor funcionalidad y rendimiento que sus contrapartes de PDA. En segundo lugar, las PDAs tienen un entorno con recursos más limitados que las computadoras de escritorio tradicionales para ofrecer un factor de forma más pequeño y una vida útil de la batería más larga. Los navegadores web de escritorio son aplicaciones grandes y complejas que no pueden ejecutarse en una PDA. En cambio, los desarrolladores se ven obligados a reducir significativamente estas navegadores web para ofrecer un navegador web PDA utilizable, lo que limita la funcionalidad del navegador PDA. La computación de cliente ligero proporciona un enfoque alternativo para habilitar el acceso web ubicuo desde dispositivos móviles. Un sistema informático de cliente ligero consiste en un servidor y un cliente que se comunican a través de una red utilizando un protocolo de visualización remota. El protocolo permite que las pantallas gráficas se virtualicen y se sirvan a través de una red a un dispositivo cliente, mientras que la lógica de la aplicación se ejecuta en el servidor. Usando el protocolo de visualización remota, el cliente transmite la entrada del usuario al servidor, y el servidor devuelve actualizaciones de pantalla de las aplicaciones del servidor al cliente. Utilizando un modelo de cliente ligero para dispositivos móviles de mano, las PDAs pueden convertirse en clientes simples sin estado que aprovechan las capacidades del servidor remoto para ejecutar navegadores web y otras aplicaciones auxiliares. El modelo de cliente ligero proporciona varios beneficios importantes para la web inalámbrica móvil. Primero, las aplicaciones web estándar de escritorio pueden utilizarse para entregar contenido web a PDAs sin necesidad de reescribir o adaptar las aplicaciones para ejecutarse en una PDA, lo que reduce los costos de desarrollo y aprovecha las inversiones existentes en software. Segundo, las aplicaciones web complejas pueden ejecutarse en servidores potentes en lugar de ejecutarse en versiones simplificadas en PDAs con recursos más limitados, lo que proporciona una mayor funcionalidad y un mejor rendimiento [10]. Tercero, las aplicaciones web pueden aprovechar servidores con redes más rápidas y mejor conectividad, lo que mejora aún más el rendimiento de la aplicación. En cuarto lugar, las PDAs pueden ser dispositivos aún más simples ya que no necesitan realizar una lógica de aplicación compleja, lo que potencialmente reduce el consumo de energía y extiende la vida útil de la batería. Finalmente, los clientes ligeros PDA pueden ser dispositivos prácticamente sin estado que no necesitan ser respaldados o restaurados, requieren casi ningún mantenimiento o actualizaciones, y no almacenan datos sensibles que puedan perderse o ser robados. Este modelo proporciona una vía viable para que las organizaciones médicas cumplan con las regulaciones de HIPAA mientras incorporan dispositivos móviles en sus operaciones diarias. A pesar de estas posibles ventajas, los clientes ligeros no han podido ofrecer la gama completa de estos beneficios al entregar aplicaciones web a dispositivos móviles portátiles. Los thin clients existentes no fueron diseñados para PDAs y no tienen en cuenta problemas importantes de usabilidad en el contexto de dispositivos de factor de forma pequeño, lo que resulta en dificultades para navegar por el contenido web mostrado. Además, los clientes ligeros existentes son ineficaces para proporcionar movilidad fluida en la mezcla heterogénea de tamaños de pantalla y resoluciones de dispositivos. Si bien los clientes ligeros existentes ya pueden ofrecer un rendimiento más rápido que los navegadores web nativos de PDA al entregar contenido web HTML, no admiten de manera efectiva aplicaciones web auxiliares más intensivas en visualización, como videos multimedia, que cada vez son una parte integral del contenido web disponible. Para aprovechar todo el potencial de la informática de <br>cliente ligero</br> en la provisión de la web inalámbrica móvil en PDAs, hemos desarrollado pTHINC (PDA THin-client InterNet Computing). pTHINC se basa en nuestro trabajo previo en THINC [1] para proporcionar una arquitectura de <br>cliente ligero</br> para dispositivos móviles de mano. pTHINC virtualiza y redimensiona la pantalla en el servidor para entregar de manera eficiente actualizaciones de pantalla de alta fidelidad a una amplia gama de clientes diferentes, tamaños de pantalla y orientaciones de pantalla, incluidos los modos de visualización en vertical y horizontal. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "full-function web browser": {
            "translated_key": "navegadores web de función completa",
            "is_in_text": true,
            "original_annotated_sentences": [
                "pTHINC: A Thin-Client Architecture for Mobile Wireless Web Joeng Kim, Ricardo A. Baratto, and Jason Nieh Department of Computer Science Columbia University, New York, NY, USA {jk2438, ricardo, nieh}@cs.columbia.edu ABSTRACT Although web applications are gaining popularity on mobile wireless PDAs, web browsers on these systems can be quite slow and often lack adequate functionality to access many web sites.",
                "We have developed pTHINC, a PDA thinclient solution that leverages more powerful servers to run <br>full-function web browser</br>s and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide high-fidelity display and seamless mobility across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available screen resolution for application display.",
                "We have implemented pTHINC on Windows Mobile and evaluated its performance on mobile wireless devices.",
                "Our results compared to local PDA web browsers and other thin-client approaches demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "Categories and Subject Descriptors: C.2.4 ComputerCommunication-Networks: Distributed Systems - client/ server General Terms: Design, Experimentation, Performance 1.",
                "INTRODUCTION The increasing ubiquity of wireless networks and decreasing cost of hardware is fueling a proliferation of mobile wireless handheld devices, both as standalone wireless Personal Digital Assistants (PDA) and popular integrated PDA/cell phone devices.",
                "These devices are enabling new forms of mobile computing and communication.",
                "Service providers are leveraging these devices to deliver pervasive web access, and mobile web users already often use these devices to access web-enabled information such as news, email, and localized travel guides and maps.",
                "It is likely that within a few years, most of the devices accessing the web will be mobile.",
                "Users typically access web content by running a web browser and associated helper applications locally on the PDA.",
                "Although native web browsers exist for PDAs, they deliver subpar performance and have a much smaller feature set and more limited functionality than their desktop computing counterparts [10].",
                "As a result, PDA web browsers are often not able to display web content from web sites that leverage more advanced web technologies to deliver a richer web experience.",
                "This fundamental problem arises for two reasons.",
                "First, because PDAs have a completely different hardware/software environment from traditional desktop computers, web applications need to be rewritten and customized for PDAs if at all possible, duplicating development costs.",
                "Because the desktop application market is larger and more mature, most development effort generally ends up being spent on desktop applications, resulting in greater functionality and performance than their PDA counterparts.",
                "Second, PDAs have a more resource constrained environment than traditional desktop computers to provide a smaller form factor and longer battery life.",
                "Desktop web browsers are large, complex applications that are unable to run on a PDA.",
                "Instead, developers are forced to significantly strip down these web browsers to provide a usable PDA web browser, thereby crippling PDA browser functionality.",
                "Thin-client computing provides an alternative approach for enabling pervasive web access from handheld devices.",
                "A thin-client computing system consists of a server and a client that communicate over a network using a remote display protocol.",
                "The protocol enables graphical displays to be virtualized and served across a network to a client device, while application logic is executed on the server.",
                "Using the remote display protocol, the client transmits user input to the server, and the server returns screen updates of the applications from the server to the client.",
                "Using a thin-client model for mobile handheld devices, PDAs can become simple stateless clients that leverage the remote server capabilities to execute web browsers and other helper applications.",
                "The thin-client model provides several important benefits for mobile wireless web.",
                "First, standard desktop web applications can be used to deliver web content to PDAs without rewriting or adapting applications to execute on a PDA, reducing development costs and leveraging existing software investments.",
                "Second, complex web applications can be executed on powerful servers instead of running stripped down versions on more resource constrained PDAs, providing greater functionality and better performance [10].",
                "Third, web applications can take advantage of servers with faster networks and better connectivity, further boosting application performance.",
                "Fourth, PDAs can be even simpler devices since they do not need to perform complex application logic, potentially reducing energy consumption and extend143 ing battery life.",
                "Finally, PDA thin clients can be essentially stateless appliances that do not need to be backed up or restored, require almost no maintenance or upgrades, and do not store any sensitive data that can be lost or stolen.",
                "This model provides a viable avenue for medical organizations to comply with HIPAA regulations [6] while embracing mobile handhelds in their day to day operations.",
                "Despite these potential advantages, thin clients have been unable to provide the full range of these benefits in delivering web applications to mobile handheld devices.",
                "Existing thin clients were not designed for PDAs and do not account for important usability issues in the context of small form factor devices, resulting in difficulty in navigating displayed web content.",
                "Furthermore, existing thin clients are ineffective at providing seamless mobility across the heterogeneous mix of device display sizes and resolutions.",
                "While existing thin clients can already provide faster performance than native PDA web browsers in delivering HTML web content, they do not effectively support more display-intensive web helper applications such as multimedia video, which is increasingly an integral part of available web content.",
                "To harness the full potential of thin-client computing in providing mobile wireless web on PDAs, we have developed pTHINC (PDA THin-client InterNet Computing). pTHINC builds on our previous work on THINC [1] to provide a thinclient architecture for mobile handheld devices. pTHINC virtualizes and resizes the display on the server to efficiently deliver high-fidelity screen updates to a broad range of different clients, screen sizes, and screen orientations, including both portrait and landscape viewing modes.",
                "This enables pTHINC to provide the same persistent web session across different client devices.",
                "For example, pTHINC can provide the same web browsing session appropriately scaled for display on a desktop computer and a PDA so that the same cookies, bookmarks, and other meta-data are continuously available on both machines simultaneously. pTHINCs virtual display approach leverages semantic information available in display commands, and client-side video hardware to provide more efficient remote display mechanisms that are crucial for supporting more display-intensive web applications.",
                "Given limited display resolution on PDAs, pTHINC maximizes the use of screen real estate for remote display by moving control functionality from the screen to readily available PDA control buttons, improving system usability.",
                "We have implemented pTHINC on Windows Mobile and demonstrated that it works transparently with existing applications, window systems, and operating systems, and does not require modifying, recompiling, or relinking existing software.",
                "We have quantitatively evaluated pTHINC against local PDA web browsers and other thin-client approaches on Pocket PC devices.",
                "Our experimental results demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "This paper presents the design and implementation of pTHINC.",
                "Section 2 describes the overall usage model and usability characteristics of pTHINC.",
                "Section 3 presents the design and system architecture of pTHINC.",
                "Section 4 presents experimental results measuring the performance of pTHINC on web applications and comparing it against native PDA browsers and other popular PDA thin-client systems.",
                "Section 5 discusses related work.",
                "Finally, we present some concluding remarks. 2.",
                "PTHINC USAGE MODEL pTHINC is a thin-client system that consists of a simple client viewer application that runs on the PDA and a server that runs on a commodity PC.",
                "The server leverages more powerful PCs to to run web browsers and other application logic.",
                "The client takes user input from the PDA stylus and virtual keyboard and sends them to the server to pass to the applications.",
                "Screen updates are then sent back from the server to the client for display to the user.",
                "When the pTHINC PDA client is started, the user is presented with a simple graphical interface where information such as server address and port, user authentication information, and session settings can be provided. pTHINC first attempts to connect to the server and perform the necessary handshaking.",
                "Once this process has been completed, pTHINC presents the user with the most recent display of his session.",
                "If the session does not exist, a new session is created.",
                "Existing sessions can be seamlessly continued without changes in the session setting or server configuration.",
                "Unlike other thin-client systems, pTHINC provides a user with a persistent web session model in which a user can launch a session running a web browser and associated applications at the server, then disconnect from that session and reconnect to it again anytime.",
                "When a user reconnects to the session, all of the applications continue running where the user left off, so that the user can continue working as though he or she never disconnected.",
                "The ability to disconnect and reconnect to a session at anytime is an important benefit for mobile wireless PDA users which may have intermittent network connectivity. pTHINCs persistent web session model enables a user to reconnect to a web session from devices other than the one on which the web session was originally initiated.",
                "This provides users with seamless mobility across different devices.",
                "If a user loses his PDA, he can easily use another PDA to access his web session.",
                "Furthermore, pTHINC allows users to use non-PDA devices to access web sessions as well.",
                "A user can access the same persistent web session on a desktop PC as on a PDA, enabling a user to use the same web session from any computer. pTHINCs persistent web session model addresses a key problem encountered by mobile web users, the lack of a common web environment across computers.",
                "Web browsers often store important information such as bookmarks, cookies, and history, which enable them to function in a much more useful manner.",
                "The problem that occurs when a user moves between computers is that this data, which is specific to a web browser installation, cannot move with the user.",
                "Furthermore, web browsers often need helper applications to process different media content, and those applications may not be consistently available across all computers. pTHINC addresses this problem by enabling a user to remotely use the exact same web browser environment and helper applications from any computer.",
                "As a result, pTHINC can provide a common, consistent web browsing environment for mobile users across different devices without requiring them to attempt to repeatedly synchronize different web browsing environments across multiple machines.",
                "To enable a user to access the same web session on different devices, pTHINC must provide mechanisms to support different display sizes and resolutions.",
                "Toward this end, pTHINC provides a zoom feature that enables a user to zoom in and out of a display and allows the display of a web 144 Figure 1: pTHINC shortcut keys session to be resized to fit the screen of the device being used.",
                "For example, if the server is running a web session at 1024×768 but the client is a PDA with a display resolution of 640×480, pTHINC will resize the desktop display to fit the full display in the smaller screen of the PDA. pTHINC provides the PDA user with the option to increase the size of the display by zooming in to different parts of the display.",
                "Users are often familiar with the general layout of commonly visited websites, and are able to leverage this resizing feature to better navigate through web pages.",
                "For example, a user can zoom out of the display to view the entire page content and navigate hyperlinks, then zoom in to a region of interest for a better view.",
                "To enable a user to access the same web session on different devices, pTHINC must also provide mechanisms to support different display orientations.",
                "In a desktop environment, users are typically accustomed to having displays presented in landscape mode where the screen width is larger than its height.",
                "However, in a PDA environment, the choice is not always obvious.",
                "Some users may prefer having the display in portrait mode, as it is easier to hold the device in their hands, while others may prefer landscape mode in order to minimize the amount of side-scrolling necessary to view a web page.",
                "To accommodate PDA user preferences, pTHINC provides an orientation feature that enables it to seamless rotate the display between landscape and portrait mode.",
                "The landscape mode is particularly useful for pTHINC users who frequently access their web sessions on both desktop and PDA devices, providing those users with the same familiar landscape setting across different devices.",
                "Because screen space is a relatively scarce resource on PDAs, pTHINC runs in fullscreen mode to maximize the screen area available to display the web session.",
                "To be able to use all of the screen on the PDA and still allow the user to control and interact with it, pTHINC reuses the typical shortcut buttons found on PDAs to perform all the control functions available to the user.",
                "The buttons used by pTHINC do not require any OS environment changes; they are simply intercepted by the pTHINC client application when they are pressed.",
                "Figure 1 shows how pTHINC utilizes the shortcut buttons to provide easy navigation and improve the overall user experience.",
                "These buttons are not device specific, and the layout shown is common to widelyused PocketPC devices. pTHINC provides six shortcuts to support its usage model: • Rotate Screen: The record button on the left edge is used to rotate the screen between portrait and landscape mode each time the button is pressed. • Zoom Out: The leftmost button on the bottom front is used to zoom out the display of the web session providing a birds eye view of the web session. • Zoom In: The second leftmost button on the bottom front is used to zoom in the display of the web session to more clearly view content of interest. • Directional Scroll: The middle button on the bottom front is used to scroll around the display using a single control button in a way that is already familiar to PDA users.",
                "This feature is particularly useful when the user has zoomed in to a region of the display such that only part of the display is visible on the screen. • Show/Hide Keyboard: The second rightmost button on the bottom front is used to bring up a virtual keyboard drawn on the screen for devices which have no physical keyboard.",
                "The virtual keyboard uses standard PDA OS mechanisms, providing portability across different PDA environments. • Close Session: The rightmost button on the bottom front is used to disconnect from the pTHINC session. pTHINC uses the PDA touch screen, stylus, and standard user interface mechanisms to provide a user interface pointand-click metaphor similar to that provided by the mouse in a traditional desktop computing environment. pTHINC does not use a cursor since PDA environments do not provide one.",
                "Instead, a user can use the stylus to tap on different sections of the touch screen to indicate input focus.",
                "A single tap on the touch screen generates a corresponding single click mouse event.",
                "A double tap on the touch screen generates a corresponding double click mouse event. pTHINC provides two-button mouse emulation by using the stylus to press down on the screen for one second to generate a right mouse click.",
                "All of these actions are identical to the way users already interact with PDA applications in the common PocketPC environment.",
                "In web browsing, users can click on hyperlinks and focus on input boxes by simply tapping on the desired screen area of interest.",
                "Unlike local PDA web browsers and other PDA applications, pTHINC leverages more powerful desktop user interface metaphors to enable users to manipulate multiple open application windows instead of being limited to a single application window at any given moment.",
                "This provides increased browsing flexibility beyond what is currently available on PDA devices.",
                "Similar to a desktop environment, browser windows and other application windows can be moved around by pressing down and dragging the stylus similar to a mouse. 3.",
                "PTHINC SYSTEM ARCHITECTURE pTHINC builds on the THINC [1] remote display architecture to provide a thin-client system for PDAs. pTHINC virtualizes the display at the server by leveraging the video device abstraction layer, which sits below the window server and above the framebuffer.",
                "This is a well-defined, low-level, device-dependent layer that exposes the video hardware to the display system. pTHINC accomplishes this through a simple virtual display driver that intercepts drawing commands, packetizes, and sends them over the network. 145 While other thin-client approaches intercept display commands at other layers of the display subsystem, pTHINCs display virtualization approach provides some key benefits in efficiently supporting PDA clients.",
                "For example, intercepting display commands at a higher layer between applications and the window system as is done by X [17] requires replicating and running a great deal of functionality on the PDA that is traditionally provided by the desktop window system.",
                "Given both the size and complexity of traditional window systems, attempting to replicate this functionality in the restricted PDA environment would have proven to be a daunting, and perhaps unfeasible task.",
                "Furthermore, applications and the window system often require tight synchronization in their operation and imposing a wireless network between them by running the applications on the server and the window system on the client would significantly degrade performance.",
                "On the other hand, intercepting at a lower layer by extracting pixels out of the framebuffer as they are rendered provides a simple solution that requires very little functionality on the PDA client, but can also result in degraded performance.",
                "The reason is that by the time the remote display server attempts to send screen updates, it has lost all semantic information that may have helped it encode efficiently, and it must resort to using a generic and expensive encoding mechanism on the server, as well as a potentially expensive decoding mechanism on the limited PDA client.",
                "In contrast to both the high and low level interception approaches, pTHINCs approach of intercepting at the device driver provides an effective balance between client and server simplicity, and the ability to efficiently encode and decode screen updates.",
                "By using a low-level virtual display approach, pTHINC can efficiently encode application display commands using only a small set of low-level commands.",
                "In a PDA environment, this set of commands provides a crucial component in maintaining the simplicity of the client in the resourceconstrained PDA environment.",
                "The display commands are shown in Table 1, and work as follows.",
                "COPY instructs the client to copy a region of the screen from its local framebuffer to another location.",
                "This command improves the user experience by accelerating scrolling and opaque window movement without having to resend screen data from the server.",
                "SFILL, PFILL, and BITMAP are commands that paint a fixed-size region on the screen.",
                "They are useful for accelerating the display of solid window backgrounds, desktop patterns, backgrounds of web pages, text drawing, and certain operations in graphics manipulation programs.",
                "SFILL fills a sizable region on the screen with a single color.",
                "PFILL replicates a tile over a screen region.",
                "BITMAP performs a fill using a bitmap of ones and zeros as a stipple to apply a foreground and background color.",
                "Finally, RAW is used to transmit unencoded pixel data to be displayed verbatim on a region of the screen.",
                "This command is invoked as a last resort if the server is unable to employ any other command, and it is the only command that may be compressed to mitigate its impact on network bandwidth. pTHINC delivers its commands using a non-blocking, serverpush update mechanism, where as soon as display updates are generated on the server, they are sent to the client.",
                "Clients are not required to explicitly request display updates, thus minimizing the impact that the typical varying network latency of wireless links may have on the responsiveness of the system.",
                "Keeping in mind that resource Command Description COPY Copy a frame buffer area to specified coordinates SFILL Fill an area with a given pixel color value PFILL Tile an area with a given pixel pattern BITMAP Fill a region using a bit pattern RAW Display raw pixel data at a given location Table 1: pTHINC Protocol Display Commands constrained PDAs and wireless networks may not be able to keep up with a fast server generating a large number of updates, pTHINC is able to coalesce, clip, and discard updates automatically if network loss or congestion occurs, or the client cannot keep up with the rate of updates.",
                "This type of behavior proves crucial in a web browsing environment, where for example, a page may be redrawn multiple times as it is rendered on the fly by the browser.",
                "In this case, the PDA will only receive and render the final result, which clearly is all the user is interesting in seeing. pTHINC prioritizes the delivery of updates to the PDA using a Shortest-Remaining-Size-First (SRSF) preemptive update scheduler.",
                "SRSF is analogous to Shortest-RemainingProcessing-Time scheduling, which is known to be optimal for minimizing mean response time in an interactive system.",
                "In a web browsing environment, short jobs are associated with text and basic page layout components such as the pages background, which are critical web content for the user.",
                "On the other hand, large jobs are often lower priority beautifying elements, or, even worse, web page banners and advertisements, which are of questionable value to the user as he or she is browsing the page.",
                "Using SRSF, pTHINC is able to maximize the utilization of the relatively scarce bandwidth available on the wireless connection between the PDA and the server. 3.1 Display Management To enable users to just as easily access their web browser and helper applications from a desktop computer at home as from a PDA while on the road, pTHINC provides a resize mechanism to zoom in and out of the display of a web session. pTHINC resizing is completely supported by the server, not the client.",
                "The server resamples updates to fit within the PDAs viewport before they are transmitted over the network. pTHINC uses Fants resampling algorithm to resize pixel updates.",
                "This provides smooth, visually pleasing updates with properly antialiasing and has only modest computational requirements. pTHINCs resizing approach has a number of advantages.",
                "First, it allows the PDA to leverage the vastly superior computational power of the server to use high quality resampling algorithms and produce higher quality updates for the PDA to display.",
                "Second, resizing the screen does not translate into additional resource requirements for the PDA, since it does not need to perform any additional work.",
                "Finally, better utilization of the wireless network is attained since rescaling the updates reduces their bandwidth requirements.",
                "To enable users to orient their displays on a PDA to provide a viewing experience that best accommodates user preferences and the layout of web pages or applications, pTHINC provides a display rotation mechanism to switch between landscape and portrait viewing modes. pTHINC display rotation is completely supported by the client, not the server. pTHINC does not explicitly recalculate the ge146 ometry of display updates to perform rotation, which would be computationally expensive.",
                "Instead, pTHINC simply changes the way data is copied into the framebuffer to switch between display modes.",
                "When in portrait mode, data is copied along the rows of the framebuffer from left to right.",
                "When in landscape mode, data is copied along the columns of the framebuffer from top to bottom.",
                "These very fast and simple techniques replace one set of copy operations with another and impose no performance overhead. pTHINC provides its own rotation mechanism to support a wide range of devices without imposing additional feature requirements on the PDA.",
                "Although some newer PDA devices provide native support for different orientations, this mechanism is not dynamic and requires the user to rotate the PDAs entire user interface before starting the pTHINC client.",
                "Windows Mobile provides native API mechanisms for PDA applications to rotate their UI on the fly, but these mechanisms deliver poor performance and display quality as the rotation is performed naively and is not completely accurate. 3.2 Video Playback Video has gradually become an integral part of the World Wide Web, and its presence will only continue to increase.",
                "Web sites today not only use animated graphics and flash to deliver web content in an attractive manner, but also utilize streaming video to enrich the web interface.",
                "Users are able to view pre-recorded and live newscasts on CNN, watch sports highlights on ESPN, and even search through large collection of videos on Google Video.",
                "To allow applications to provide efficient video playback, interfaces have been created in display systems that allow video device drivers to expose their hardware capabilities back to the applications. pTHINC takes advantage of these interfaces and its virtual device driver approach to provide a virtual bridge between the remote client and its hardware and the applications, and transparently support video playback.",
                "On top of this architecture, pTHINC uses the YUV colorspace to encode the video content, which provides a number of benefits.",
                "First, it has become increasingly common for PDA video hardware to natively support YUV and be able to perform the colorspace conversion and scaling automatically.",
                "As a result, pTHINC is able to provide fullscreen video playback without any performance hits.",
                "Second, the use of YUV allows for a more efficient representation of RGB data without loss of quality, by taking advantage of the human eyes ability to better distinguish differences in brightness than in color.",
                "In particular, pTHINC uses the YV12 format, which allows full color RGB data to be encoded using just 12 bits per pixel.",
                "Third, YUV data is produced as one of the last steps of the decoding process of most video codecs, allowing pTHINC to provide video playback in a manner that is format independent.",
                "Finally, even if the PDAs video hardware is unable to accelerate playback, the colorspace conversion process is simple enough that it does not impose unreasonable requirements on the PDA.",
                "A more concrete example of how pTHINC leverages the PDA video hardware to support video playback can be seen in our prototype implementation on the popular Dell Axim X51v PDA, which is equipped with the Intel 2700G multimedia accelerator.",
                "In this case, pTHINC creates an offscreen buffer in video memory and writes and reads from this memory region data on the YV12 format.",
                "When a new video frame arrives, video data is copied from the buffer to Figure 2: Experimental Testbed an overlay surface in video memory, which is independent of the normal surface used for traditional drawing.",
                "As the YV12 data is put onto the overlay, the Intel accelerator automatically performs both colorspace conversion and scaling.",
                "By using the overlay surface, pTHINC has no need to redraw the screen once video playback is over since the overlapped surface is unaffected.",
                "In addition, specific overlay regions can be manipulated by leveraging the video hardware, for example to perform hardware linear interpolation to smooth out the frame and display it fullscreen, and to do automatic rotation when the client runs in landscape mode. 4.",
                "EXPERIMENTAL RESULTS We have implemented a pTHINC prototype that runs the client on widely-used Windows Mobile-based Pocket PC devices and the server on both Windows and Linux operating systems.",
                "To demonstrate its effectiveness in supporting mobile wireless web applications, we have measured its performance on web applications.",
                "We present experimental results on different PDA devices for two popular web applications, browsing web pages and playing video content from the web.",
                "We compared pTHINC against native web applications running locally on the PDA to demonstrate the improvement that pTHINC can provide over the traditional fat-client approach.",
                "We also compared pTHINC against three of the most widely used thin clients that can run on PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] and VNC (Virtual Network Computing) [16].",
                "We follow common practice and refer to Citrix MetaFrameXP and Microsoft Remote Desktop by their respective remote display protocols, ICA (Independent Computing Architecture) and RDP (Remote Desktop Protocol). 4.1 Experimental Testbed We conducted our web experiments using two different wireless Pocket PC PDAs in an isolated Wi-Fi network testbed, as shown in Figure 2.",
                "The testbed consisted of two PDA client devices, a packet monitor, a thin-client server, and a web server.",
                "Except for the PDAs, all of the other machines were IBM Netfinity 4500R servers with dual 933 MHz Intel PIII CPUs and 512 MB RAM and were connected on a switched 100 Mbps FastEthernet network.",
                "The web server used was Apache 1.3.27, the network emulator was NISTNet 2.0.12, and the packet monitor was Ethereal 0.10.9.",
                "The PDA clients connected to the testbed through a 802.11b Lucent Orinoco AP-2000 wireless access point.",
                "All experiments using the wireless network were conducted within ten feet of the access point, so we considered the amount of packet loss to be negligible in our experiments.",
                "Two Pocket PC PDAs were used to provide results across both older, less powerful models and newer higher performance models.",
                "The older model was a Dell Axim X5 with 147 Client 1024×768 640×480 Depth Resize Clip RDP no yes 8-bit no yes VNC yes yes 16-bit no no ICA yes yes 16-bit yes no pTHINC yes yes 24-bit yes no Table 2: Thin-client Testbed Configuration Setting a 400 MHz Intel XScale PXA255 CPU and 64 MB RAM running Windows Mobile 2003 and a Dell TrueMobile 1180 2.4Ghz CompactFlash card for wireless networking.",
                "The newer model was a Dell Axim X51v with a 624 MHz Intel XScale XPA270 CPU and 64 MB RAM running Windows Mobile 5.0 and integrated 802.11b wireless networking.",
                "The X51v has an Intel 2700G multimedia accelerator with 16MB video memory.",
                "Both PDAs are capable of 16-bit color but have different screen sizes and display resolutions.",
                "The X5 has a 3.5 inch diagonal screen with 240×320 resolution.",
                "The X51v has a 3.7 inch diagonal screen with 480×640.",
                "The four thin clients that we used support different levels of display quality as summarized in Table 2.",
                "The RDP client only supports a fixed 640×480 display resolution on the server with 8-bit color depth, while other platforms provide higher levels of display quality.",
                "To provide a fair comparison across all platforms, we conducted our experiments with thin-client sessions configured for two possible resolutions, 1024×768 and 640×480.",
                "Both ICA and VNC were configured to use the native PDA resolution of 16-bit color depth.",
                "The current pTHINC prototype uses 24-bit color directly and the client downsamples updates to the 16-bit color depth available on the PDA.",
                "RDP was configured using only 8-bit color depth since it does not support any better color depth.",
                "Since both pTHINC and ICA provide the ability to view the display resized to fit the screen, we measured both clients with and without the display resized to fit the PDA screen.",
                "Each thin client was tested using landscape rather than portrait mode when available.",
                "All systems run on the X51v could run in landscape mode because the hardware provides a landscape mode feature.",
                "However, the X5 does not provide this functionality.",
                "Only pTHINC directly supports landscape mode, so it was the only system that could run in landscape mode on both the X5 and X51v.",
                "To provide a fair comparison, we also standardized on common hardware and operating systems whenever possible.",
                "All of the systems used the Netfinity server as the thin-client server.",
                "For the two systems designed for Windows servers, ICA and RDP, we ran Windows 2003 Server on the server.",
                "For the other systems which support X-based servers, VNC and pTHINC, we ran the Debian Linux Unstable distribution with the Linux 2.6.10 kernel on the server.",
                "We used the latest thin-client server versions available on each platform at the time of our experiments, namely Citrix MetaFrame XP Server for Windows Feature Release 3, Microsoft Remote Desktop built into Windows XP and Windows 2003 using RDP 5.2, and VNC 4.0. 4.2 Application Benchmarks We used two web application benchmarks for our experiments based on two common application scenarios, browsing web pages and playing video content from the web.",
                "Since many thin-client systems including two of the ones tested are closed and proprietary, we measured their performance in a noninvasive manner by capturing network traffic with a packet monitor and using a variant of slow-motion benchmarking [13] previously developed to measure thin-client performance in PDA environments [10].",
                "This measurement methodology accounts for both the display decoupling that can occur between client and server in thin-client systems as well as client processing time, which may be significant in the case of PDAs.",
                "To measure web browsing performance, we used a web browsing benchmark based on the Web Text Page Load Test from the Ziff-Davis i-Bench benchmark suite [7].",
                "The benchmark consists of JavaScript controlled load of 55 pages from the web server.",
                "The pages contain both text and graphics with pages varying in size.",
                "The graphics are embedded images in GIF and JPEG formats.",
                "The original i-Bench benchmark was modified for slow-motion benchmarking by introducing delays of several seconds between the pages using JavaScript.",
                "Then two tests were run, one where delays where added between each page, and one where pages where loaded continuously without waiting for them to be displayed on the client.",
                "In the first test, delays were sufficiently adjusted in each case to ensure that each page could be received and displayed on the client completely without temporal overlap in transferring the data belonging to two consecutive pages.",
                "We used the packet monitor to record the packet traffic for each run of the benchmark, then used the timestamps of the first and last packet in the trace to obtain our latency measures [10].",
                "The packet monitor also recorded the amount of data transmitted between the client and the server.",
                "The ratio between the data traffic in the two tests yields a scale factor.",
                "This scale factor shows the loss of data between the server and the client due to inability of the client to process the data quickly enough.",
                "The product of the scale factor with the latency measurement produces the true latency accounting for client processing time.",
                "To run the web browsing benchmark, we used Mozilla Firefox 1.0.4 running on the thin-client server for the thin clients, and Windows Internet Explorer (IE) Mobile for 2003 and Mobile for 5.0 for the native browsers on the X5 and X51v PDAs, respectively.",
                "In all cases, the web browser used was sized to fill the entire display region available.",
                "To measure video playback performance, we used a video benchmark that consisted of playing a 34.75s MPEG-1 video clip containing a mix of news and entertainment programming at full-screen resolution.",
                "The video clip is 5.11 MB and consists of 834 352x240 pixel frames with an ideal frame rate of 24 frames/sec.",
                "We measured video performance using slow-motion benchmarking by monitoring resulting packet traffic at two playback rates, 1 frames/second (fps) and 24 fps, and comparing the results to determine playback delays and frame drops that occur at 24 fps to measure overall video quality [13].",
                "For example, 100% quality means that all video frames were played at real-time speed.",
                "On the other hand, 50% quality could mean that half the video data was dropped, or that the clip took twice as long to play even though all of the video data was displayed.",
                "To run the video benchmark, we used Windows Media Player 9 for Windows-based thin-client servers, MPlayer 1.0 pre 6 for X-based thin-client servers, and Windows Media Player 9 Mobile and 10 Mobile for the native video players running locally on the X5 and X51v PDAs, respectively.",
                "In all cases, the video player used was sized to fill the entire display region available. 4.3 Measurements Figures 3 and 4 show the results of running the web brows148 0 1 10 100 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL Latency(s) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 3: Browsing Benchmark: Average Page Latency ing benchmark.",
                "For each platform, we show results for up to four different configurations, two on the X5 and two on the X51v, depending on whether each configuration was supported.",
                "However, not all platforms could support all configurations.",
                "The local browser only runs at the display resolution of the PDA, 480×680 or less for the X51v and the X5.",
                "RDP only runs at 640×480.",
                "Neither platform could support 1024×768 display resolution.",
                "ICA only ran on the X5 and could not run on the X51v because it did not work on Windows Mobile 5.",
                "Figure 3 shows the average latency per web page for each platform. pTHINC provides the lowest average web browsing latency on both PDAs.",
                "On the X5, pTHINC performs up to 70 times better than other thin-client systems and 8 times better than the local browser.",
                "On the X51v, pTHINC performs up to 80 times better than other thin-client systems and 7 times better than the native browser.",
                "In fact, all of the thin clients except VNC outperform the local PDA browser, demonstrating the performance benefits of the thin-client approach.",
                "Usability studies have shown that web pages should take less than one second to download for the user to experience an uninterrupted web browsing experience [14].",
                "The measurements show that only the thin clients deliver subsecond web page latencies.",
                "In contrast, the local browser requires more than 3 seconds on average per web page.",
                "The local browser performs worse since it needs to run a more limited web browser to process the HTML, JavaScript, and do all the rendering using the limited capabilities of the PDA.",
                "The thin clients can take advantage of faster server hardware and a highly tuned web browser to process the web content much faster.",
                "Figure 3 shows that RDP is the next fastest platform after pTHINC.",
                "However, RDP is only able to run at a fixed resolution of 640×480 and 8-bit color depth.",
                "Furthermore, RDP also clips the display to the size of the PDA screen so that it does not need to send updates that are not visible on the PDA screen.",
                "This provides a performance benefit assuming the remaining web content is not viewed, but degrades performance when a user scrolls around the display to view other web content.",
                "RDP achieves its performance with significantly lower display quality compared to the other thin clients and with additional display clipping not used by other systems.",
                "As a result, RDP performance alone does not provide a complete comparison with the other platforms.",
                "In contrast, pTHINC provides the fastest performance while at the same time providing equal or better display quality than the other systems. 0 1 10 100 1000 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL DataSize(KB) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 4: Browsing Benchmark: Average Page Data Transferred Since VNC and ICA provide similar display quality to pTHINC, these systems provide a more fair comparison of different thin-client approaches.",
                "ICA performs worse in part because it uses higher-level display primitives that require additional client processing costs.",
                "VNC performs worse in part because it loses display data due to its client-pull delivery mechanism and because of the client processing costs in decompressing raw pixel primitives.",
                "In both cases, their performance was limited in part because their PDA clients were unable to keep up with the rate at which web pages were being displayed.",
                "Figure 3 also shows measurements for those thin clients that support resizing the display to fit the PDA screen, namely ICA and pTHINC.",
                "Resizing requires additional processing, which results in slower average web page latencies.",
                "The measurements show that the additional delay incurred by ICA when resizing versus not resizing is much more substantial than for pTHINC.",
                "ICA performs resizing on the slower PDA client.",
                "In contrast, pTHINC leverage the more powerful server to do resizing, reducing the performance difference between resizing and not resizing.",
                "Unlike ICA, pTHINC is able to provide subsecond web page download latencies in both cases.",
                "Figure 4 shows the data transferred in KB per page when running the slow-motion version of the tests.",
                "All of the platforms have modest data transfer requirements of roughly 100 KB per page or less.",
                "This is well within the bandwidth capacity of Wi-Fi networks.",
                "The measurements show that the local browser does not transfer the least amount of data.",
                "This is surprising as HTML is often considered to be a very compact representation of content.",
                "Instead, RDP is the most bandwidth efficient platform, largely as a result of using only 8-bit color depth and screen clipping so that it does not transfer the entire web page to the client. pTHINC overall has the largest data requirements, slightly more than VNC.",
                "This is largely a result of the current pTHINC prototypes lack of native support for 16-bit color data in the wire protocol.",
                "However, this result also highlights pTHINCs performance as it is faster than all other systems even while transferring more data.",
                "Furthermore, as newer PDA models support full 24-bit color, these results indicate that pTHINC will continue to provide good web browsing performance.",
                "Since display usability and quality are as important as performance, Figures 5 to 8 compare screenshots of the different thin clients when displaying a web page, in this case from the popular BBC news website.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode 149 Figure 5: Browser Screenshot: RDP 640x480 Figure 6: Browser Screenshot: VNC 1024x768 Figure 7: Browser Screenshot: ICA Resized 1024x768 Figure 8: Browser Screenshot: pTHINC Resized 1024x768 using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "While the screenshots lack the visual fidelity of the actual device display, several observations can be made.",
                "Figure 5 shows that RDP does not support fullscreen mode and wastes lots of screen space for controls and UI elements, requiring the user to scroll around in order to access the full contents of the web browsing session.",
                "Figure 6 shows that VNC makes better use of the screen space and provides better display quality, but still forces the user to scroll around to view the web page due to its lack of resizing support.",
                "Figure 7 shows ICAs ability to display the full web page given its resizing support, but that its lack of landscape capability and poorer resize algorithm significantly compromise display quality.",
                "In contrast, Figure 8 shows pTHINC using resizing to provide a high quality fullscreen display of the full width of the web page. pTHINC maximizes the entire viewing region by moving all controls to the PDA buttons.",
                "In addition, pTHINC leverages the server computational power to use a high quality resizing algorithm to resize the display to fit the PDA screen without significant overhead.",
                "Figures 9 and 10 show the results of running the video playback benchmark.",
                "For each platform except ICA, we show results for an X5 and X51v configuration.",
                "ICA could not run on the X51v as noted earlier.",
                "The measurements were done using settings that reflected the environment a user would have to access a web session from both a desktop computer and a PDA.",
                "As such, a 1024×768 server display resolution was used whenever possible and the video was shown at fullscreen.",
                "RDP was limited to 640×480 display resolution as noted earlier.",
                "Since viewing the entire video display is the only really usable option, we resized the display to fit the PDA screen for those platforms that supported this feature, namely ICA and pTHINC.",
                "Figure 9 shows the video quality for each platform. pTHINC is the only thin client able to provide perfect video playback quality, similar to the native PDA video player.",
                "All of the other thin clients deliver very poor video quality.",
                "With the exception of RDP on the X51v which provided unacceptable 35% video quality, none of the other systems were even able to achieve 10% video quality.",
                "VNC and ICA have the worst quality at 8% on the X5 device. pTHINCs native video support enables superior video performance, while other thin clients suffer from their inability to distinguish video from normal display updates.",
                "They attempt to apply ineffective and expensive compression algorithms on the video data and are unable to keep up with the stream of updates generated, resulting in dropped frames or long playback times.",
                "VNC suffers further from its client-pull update model because video frames are generated faster than the rate at which the client can process and send requests to the server to obtain the next display update.",
                "Figure 10 shows the total data transferred during 150 0% 20% 40% 60% 80% 100% pTHINCICAVNCRDPLOCAL VideoQuality Platform Axim X5 Axim X51v Figure 9: Video Benchmark: Fullscreen Video Quality 0 1 10 100 pTHINCICAVNCRDPLOCAL VideoDataSize(MB) Platform Axim X5 Axim X51v Figure 10: Video Benchmark: Fullscreen Video Data video playback for each system.",
                "The native player is the most bandwidth efficient platform, sending less than 6 MB of data, which corresponds to about 1.2 Mbps of bandwidth. pTHINCs 100% video quality requires about 25 MB of data which corresponds to a bandwidth usage of less than 6 Mbps.",
                "While the other thin clients send less data than THINC, they do so because they are dropping video data, resulting in degraded video quality.",
                "Figures 11 to 14 compare screenshots of the different thin clients when displaying the video clip.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "Figures 11 and 12 show that RDP and VNC are unable to display the entire video frame on the PDA screen.",
                "RDP wastes screen space for UI elements and VNC only shows the top corner of the video frame on the screen.",
                "Figure 13 shows that ICA provides resizing to display the entire video frame, but did not proportionally resize the video data, resulting in strange display artifacts.",
                "In contrast, Figure 14 shows pTHINC using resizing to provide a high quality fullscreen display of the entire video frame. pTHINC provides visually more appealing video display than RDP, VNC, or ICA. 5.",
                "RELATED WORK Several studies have examined the web browsing performance of thin-client computing [13, 19, 10].",
                "The ability for thin clients to improve web browsing performance on wireless PDAs was first quantitatively demonstrated in a previous study by one of the authors [10].",
                "This study demonstrated that thin clients can provide both faster web browsing performance and greater web browsing functionality.",
                "The study considered a wide range of web content including content from medical information systems.",
                "Our work builds on this previous study and consider important issues such as how usable existing thin clients are in PDA environments, the trade-offs between thin-client usability and performance, performance across different PDA devices, and the performance of thin clients on common web-related applications such as video.",
                "Many thin clients have been developed and some have PDA clients, including Microsofts Remote Desktop [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5], and Tarantella [18].",
                "These systems were first designed for desktop computing and retrofitted for PDAs.",
                "Unlike pTHINC, they do not address key system architecture and usability issues important for PDAs.",
                "This limits their display quality, system performance, available screen space, and overall usability on PDAs. pTHINC builds on previous work by two of the authors on THINC [1], extending the server architecture and introducing a client interface and usage model to efficiently support PDA devices for mobile web applications.",
                "Other approaches to improve the performance of mobile wireless web browsing have focused on using transcoding and caching proxies in conjunction with the fat client model [11, 9, 4, 8].",
                "They work by pushing functionality to external proxies, and using specialized browsing applications on the PDA device that communicate with the proxy.",
                "Our thinclient approach differs fundamentally from these fat-client approaches by pushing all web browser logic to the server, leveraging existing investments in desktop web browsers and helper applications to work seamlessly with production systems without any additional proxy configuration or web browser modifications.",
                "With the emergence of web browsing on small display devices, web sites have been redesigned using mechanisms like WAP and specialized native web browsers have been developed to tailor the needs of these devices.",
                "Recently, Opera has developed the Opera Mini [15] web browser, which uses an approach similar to the thin-client model to provide access across a number of mobile devices that would normally be incapable of running a web browser.",
                "Instead of requiring the device to process web pages, it uses a remote server to pre-process the page before sending it to the phone. 6.",
                "CONCLUSIONS We have introduced pTHINC, a thin-client architecture for wireless PDAs. pTHINC provides key architectural and usability mechanisms such as server-side screen resizing, clientside screen rotation using simple copy techniques, YUV video support, and maximizing screen space for display updates and leveraging existing PDA control buttons for UI elements. pTHINC transparently supports traditional desktop browsers and their helper applications on PDA devices and desktop machines, providing mobile users with ubiquitous access to a consistent, personalized, and full-featured web environment across heterogeneous devices.",
                "We have implemented pTHINC and measured its performance on web applications compared to existing thin-client systems and native web applications.",
                "Our results on multiple mobile wireless devices demonstrate that pTHINC delivers web browsing performance up to 80 times better than existing thin-client systems, and 8 times better than a native PDA browser.",
                "In addition, pTHINC is the only PDA thin client 151 Figure 11: Video Screenshot: RDP 640x480 Figure 12: Video Screenshot: VNC 1024x768 Figure 13: Video Screenshot: ICA Resized 1024x768 Figure 14: Video Screenshot: pTHINC Resized 1024x768 that transparently provides full-screen, full frame rate video playback, making web sites with multimedia content accessible to mobile web users. 7.",
                "ACKNOWLEDGEMENTS This work was supported in part by NSF ITR grants CCR0219943 and CNS-0426623, and an IBM SUR Award. 8.",
                "REFERENCES [1] R. Baratto, L. Kim, and J. Nieh.",
                "THINC: A Virtual Display Architecture for Thin-Client Computing.",
                "In Proceedings of the 20th ACM Symposium on Operating Systems Principles (SOSP), Oct. 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius, and A. Muir.",
                "Microsoft Windows NT Server 4.0, Terminal Server Edition: Technical Reference.",
                "Microsoft Press, Redmond, WA, 1999. [4] A.",
                "Fox, I. Goldberg, S. D. Gribble, and D. C. Lee.",
                "Experience With Top Gun Wingman: A Proxy-Based Graphical Web Browser for the 3Com PalmPilot.",
                "In Proceedings of Middleware 98, Lake District, England, September 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Health Insurance Portability and Accountability Act. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench version 1.5. http: //etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi.",
                "On proxy agents, mobility, and web access.",
                "Mobile Networks and Applications, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon, and A. Ortega.",
                "Design and Implementation of a Soft Caching Proxy.",
                "Computer Networks and ISDN Systems, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana, and S. Varshneya.",
                "Improving Web Browsing on Wireless PDAs Using Thin-Client Computing.",
                "In Proceedings of the 13th International World Wide Web Conference (WWW), May 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham, and P. Shenoy.",
                "TranSquid: Transcoding and caching proxy for heterogenous ecommerce environments.",
                "In Proceedings of the 12th IEEE Workshop on Research Issues in Data Engineering (RIDE 02), Feb. 2002. [12] .NET VNC Viewer for PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang, and N. Novik.",
                "Measuring Thin-Client Performance Using Slow-Motion Benchmarking.",
                "ACM Trans.",
                "Computer Systems, 21(1):87-115, Feb. 2003. [14] J. Nielsen.",
                "Designing Web Usability.",
                "New Riders Publishing, Indianapolis, IN, 2000. [15] Opera Mini Browser. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood, and A. Hopper.",
                "Virtual Network Computing.",
                "IEEE Internet Computing, 2(1), Jan./Feb. 1998. [17] R. W. Scheifler and J. Gettys.",
                "The X Window System.",
                "ACM Trans.",
                "Gr., 5(2):79-106, Apr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla, and M. Sajjadpour.",
                "Web Browsing Performance of Wireless Thin-Client Computing.",
                "In Proceedings of the 12th International World Wide Web Conference (WWW), May 2003. 152"
            ],
            "original_annotated_samples": [
                "We have developed pTHINC, a PDA thinclient solution that leverages more powerful servers to run <br>full-function web browser</br>s and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide high-fidelity display and seamless mobility across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available screen resolution for application display."
            ],
            "translated_annotated_samples": [
                "Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar <br>navegadores web de función completa</br> y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y movilidad fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la resolución de pantalla disponible para la visualización de aplicaciones."
            ],
            "translated_text": "pTHINC: Una arquitectura de cliente ligero para la web inalámbrica móvil Joeng Kim, Ricardo A. Baratto y Jason Nieh Departamento de Ciencias de la Computación Universidad de Columbia, Nueva York, NY, EE. UU. {jk2438, ricardo, nieh}@cs.columbia.edu RESUMEN Aunque las aplicaciones web están ganando popularidad en las PDAs inalámbricas móviles, los navegadores web en estos sistemas pueden ser bastante lentos y a menudo carecen de funcionalidad adecuada para acceder a muchos sitios web. Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar <br>navegadores web de función completa</br> y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y movilidad fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la resolución de pantalla disponible para la visualización de aplicaciones. Hemos implementado pTHINC en Windows Mobile y evaluado su rendimiento en dispositivos móviles inalámbricos. Nuestros resultados comparados con los navegadores web PDA locales y otros enfoques de cliente ligero demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero PDA que soporta de manera efectiva aplicaciones de ayuda del navegador cruciales como la reproducción de video. Categorías y Descriptores de Asunto: C.2.4 Comunicación de Computadoras-Redes: Sistemas Distribuidos - cliente/servidor Términos Generales: Diseño, Experimentación, Rendimiento 1. La creciente ubicuidad de las redes inalámbricas y la disminución del costo del hardware están impulsando una proliferación de dispositivos móviles inalámbricos portátiles, tanto como asistentes digitales personales (PDA) inalámbricos independientes y dispositivos populares integrados de PDA/teléfono celular. Estos dispositivos están permitiendo nuevas formas de computación y comunicación móvil. Los proveedores de servicios están aprovechando estos dispositivos para ofrecer acceso web omnipresente, y los usuarios de la web móvil a menudo ya utilizan estos dispositivos para acceder a información habilitada para la web, como noticias, correo electrónico, guías de viaje localizadas y mapas. Es probable que en unos pocos años, la mayoría de los dispositivos que accedan a la web sean móviles. Los usuarios suelen acceder al contenido web ejecutando un navegador web y aplicaciones auxiliares asociadas localmente en la PDA. Aunque existen navegadores web nativos para PDAs, ofrecen un rendimiento deficiente y tienen un conjunto de funciones mucho más pequeño y una funcionalidad más limitada que sus contrapartes de computadoras de escritorio [10]. Como resultado, los navegadores web de PDA a menudo no pueden mostrar el contenido web de sitios web que utilizan tecnologías web más avanzadas para ofrecer una experiencia web más rica. Este problema fundamental surge por dos razones. Primero, debido a que las PDAs tienen un entorno de hardware/software completamente diferente de las computadoras de escritorio tradicionales, las aplicaciones web necesitan ser reescritas y personalizadas para las PDAs si es posible, duplicando los costos de desarrollo. Debido a que el mercado de aplicaciones de escritorio es más grande y maduro, la mayoría del esfuerzo de desarrollo generalmente se destina a las aplicaciones de escritorio, lo que resulta en una mayor funcionalidad y rendimiento que sus contrapartes de PDA. En segundo lugar, las PDAs tienen un entorno con recursos más limitados que las computadoras de escritorio tradicionales para ofrecer un factor de forma más pequeño y una vida útil de la batería más larga. Los navegadores web de escritorio son aplicaciones grandes y complejas que no pueden ejecutarse en una PDA. En cambio, los desarrolladores se ven obligados a reducir significativamente estas navegadores web para ofrecer un navegador web PDA utilizable, lo que limita la funcionalidad del navegador PDA. La computación de cliente ligero proporciona un enfoque alternativo para habilitar el acceso web ubicuo desde dispositivos móviles. Un sistema informático de cliente ligero consiste en un servidor y un cliente que se comunican a través de una red utilizando un protocolo de visualización remota. El protocolo permite que las pantallas gráficas se virtualicen y se sirvan a través de una red a un dispositivo cliente, mientras que la lógica de la aplicación se ejecuta en el servidor. Usando el protocolo de visualización remota, el cliente transmite la entrada del usuario al servidor, y el servidor devuelve actualizaciones de pantalla de las aplicaciones del servidor al cliente. Utilizando un modelo de cliente ligero para dispositivos móviles de mano, las PDAs pueden convertirse en clientes simples sin estado que aprovechan las capacidades del servidor remoto para ejecutar navegadores web y otras aplicaciones auxiliares. El modelo de cliente ligero proporciona varios beneficios importantes para la web inalámbrica móvil. Primero, las aplicaciones web estándar de escritorio pueden utilizarse para entregar contenido web a PDAs sin necesidad de reescribir o adaptar las aplicaciones para ejecutarse en una PDA, lo que reduce los costos de desarrollo y aprovecha las inversiones existentes en software. Segundo, las aplicaciones web complejas pueden ejecutarse en servidores potentes en lugar de ejecutarse en versiones simplificadas en PDAs con recursos más limitados, lo que proporciona una mayor funcionalidad y un mejor rendimiento [10]. Tercero, las aplicaciones web pueden aprovechar servidores con redes más rápidas y mejor conectividad, lo que mejora aún más el rendimiento de la aplicación. En cuarto lugar, las PDAs pueden ser dispositivos aún más simples ya que no necesitan realizar una lógica de aplicación compleja, lo que potencialmente reduce el consumo de energía y extiende la vida útil de la batería. Finalmente, los clientes ligeros PDA pueden ser dispositivos prácticamente sin estado que no necesitan ser respaldados o restaurados, requieren casi ningún mantenimiento o actualizaciones, y no almacenan datos sensibles que puedan perderse o ser robados. Este modelo proporciona una vía viable para que las organizaciones médicas cumplan con las regulaciones de HIPAA mientras incorporan dispositivos móviles en sus operaciones diarias. A pesar de estas posibles ventajas, los clientes ligeros no han podido ofrecer la gama completa de estos beneficios al entregar aplicaciones web a dispositivos móviles portátiles. Los thin clients existentes no fueron diseñados para PDAs y no tienen en cuenta problemas importantes de usabilidad en el contexto de dispositivos de factor de forma pequeño, lo que resulta en dificultades para navegar por el contenido web mostrado. Además, los clientes ligeros existentes son ineficaces para proporcionar movilidad fluida en la mezcla heterogénea de tamaños de pantalla y resoluciones de dispositivos. Si bien los clientes ligeros existentes ya pueden ofrecer un rendimiento más rápido que los navegadores web nativos de PDA al entregar contenido web HTML, no admiten de manera efectiva aplicaciones web auxiliares más intensivas en visualización, como videos multimedia, que cada vez son una parte integral del contenido web disponible. Para aprovechar todo el potencial de la informática de cliente ligero en la provisión de la web inalámbrica móvil en PDAs, hemos desarrollado pTHINC (PDA THin-client InterNet Computing). pTHINC se basa en nuestro trabajo previo en THINC [1] para proporcionar una arquitectura de cliente ligero para dispositivos móviles de mano. pTHINC virtualiza y redimensiona la pantalla en el servidor para entregar de manera eficiente actualizaciones de pantalla de alta fidelidad a una amplia gama de clientes diferentes, tamaños de pantalla y orientaciones de pantalla, incluidos los modos de visualización en vertical y horizontal. Esto permite a pTHINC proporcionar la misma sesión web persistente en diferentes dispositivos de cliente. Por ejemplo, pTHINC puede proporcionar la misma sesión de navegación web adecuadamente escalada para su visualización en una computadora de escritorio y una PDA, de modo que las mismas cookies, marcadores y otros metadatos estén disponibles continuamente en ambas máquinas simultáneamente. El enfoque de visualización virtual de pTHINC aprovecha la información semántica disponible en los comandos de visualización y el hardware de video del cliente para proporcionar mecanismos de visualización remota más eficientes que son cruciales para admitir aplicaciones web más intensivas en visualización. Dada la limitada resolución de pantalla en las PDA, pTHINC maximiza el uso del espacio de pantalla para la visualización remota al trasladar la funcionalidad de control de la pantalla a los botones de control de PDA fácilmente disponibles, mejorando la usabilidad del sistema. Hemos implementado pTHINC en Windows Mobile y demostrado que funciona de manera transparente con las aplicaciones existentes, sistemas de ventanas y sistemas operativos, y no requiere modificar, recompilar o volver a enlazar el software existente. Hemos evaluado cuantitativamente pTHINC frente a navegadores web PDA locales y otros enfoques de cliente ligero en dispositivos Pocket PC. Nuestros resultados experimentales demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero de PDA que soporta de manera efectiva aplicaciones esenciales de ayuda para el navegador, como la reproducción de video. Este documento presenta el diseño e implementación de pTHINC. La sección 2 describe el modelo de uso general y las características de usabilidad de pTHINC. La sección 3 presenta el diseño y la arquitectura del sistema de pTHINC. La sección 4 presenta resultados experimentales que miden el rendimiento de pTHINC en aplicaciones web y lo comparan con navegadores nativos de PDA y otros sistemas de cliente ligero de PDA populares. La sección 5 discute el trabajo relacionado. Finalmente, presentamos algunas observaciones finales. El MODELO DE USO DE pTHINC pTHINC es un sistema de cliente ligero que consiste en una aplicación de visualización de cliente simple que se ejecuta en la PDA y un servidor que se ejecuta en una PC estándar. El servidor aprovecha PCs más potentes para ejecutar navegadores web y otra lógica de aplicaciones. El cliente recibe la entrada del usuario desde el lápiz óptico y el teclado virtual de la PDA y los envía al servidor para pasarlos a las aplicaciones. Las actualizaciones de la pantalla son luego enviadas desde el servidor al cliente para mostrar al usuario. Cuando se inicia el cliente PDA pTHINC, se presenta al usuario una interfaz gráfica simple donde se pueden proporcionar información como la dirección y el puerto del servidor, la información de autenticación del usuario y la configuración de la sesión. pTHINC primero intenta conectarse al servidor y realizar el saludo necesario. Una vez que este proceso haya sido completado, pTHINC presenta al usuario la visualización más reciente de su sesión. Si la sesión no existe, se crea una nueva sesión. Las sesiones existentes pueden continuar sin problemas sin cambios en la configuración de la sesión o del servidor. A diferencia de otros sistemas de cliente ligero, pTHINC proporciona a un usuario un modelo de sesión web persistente en el que un usuario puede iniciar una sesión ejecutando un navegador web y aplicaciones asociadas en el servidor, luego desconectarse de esa sesión y volver a conectarse en cualquier momento. Cuando un usuario se reconecta a la sesión, todas las aplicaciones siguen funcionando desde donde el usuario las dejó, de modo que el usuario puede seguir trabajando como si nunca se hubiera desconectado. La capacidad de desconectarse y reconectarse a una sesión en cualquier momento es un beneficio importante para los usuarios de PDA inalámbricas móviles que pueden tener conectividad de red intermitente. El modelo de sesión web persistente de pTHINCs permite a un usuario reconectarse a una sesión web desde dispositivos distintos al que se inició originalmente la sesión web. Esto proporciona a los usuarios una movilidad fluida entre diferentes dispositivos. Si un usuario pierde su PDA, puede fácilmente usar otra PDA para acceder a su sesión web. Además, pTHINC permite a los usuarios utilizar dispositivos que no son PDA para acceder a sesiones web también. Un usuario puede acceder a la misma sesión web persistente en una PC de escritorio como en una PDA, lo que le permite al usuario utilizar la misma sesión web desde cualquier computadora. El modelo de sesión web persistente de pTHINCs aborda un problema clave encontrado por los usuarios de la web móvil, la falta de un entorno web común en diferentes computadoras. Los navegadores web a menudo almacenan información importante como marcadores, cookies e historial, lo que les permite funcionar de una manera mucho más útil. El problema que ocurre cuando un usuario se mueve entre computadoras es que estos datos, específicos de una instalación de un navegador web, no pueden moverse con el usuario. Además, los navegadores web a menudo necesitan aplicaciones auxiliares para procesar diferentes contenidos multimedia, y esas aplicaciones pueden no estar disponibles de manera consistente en todas las computadoras. pTHINC aborda este problema al permitir que un usuario utilice de forma remota el mismo entorno de navegador web y aplicaciones auxiliares desde cualquier computadora. Como resultado, pTHINC puede proporcionar un entorno de navegación web común y consistente para usuarios móviles en diferentes dispositivos sin requerirles intentar sincronizar repetidamente diferentes entornos de navegación web en múltiples máquinas. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC debe proporcionar mecanismos para admitir diferentes tamaños de pantalla y resoluciones. Con este fin, pTHINC proporciona una función de zoom que permite a un usuario acercar y alejar una pantalla y permite que la pantalla de una sesión web 144 Figura 1: teclas de acceso rápido de pTHINC se redimensione para adaptarse a la pantalla del dispositivo que se está utilizando. Por ejemplo, si el servidor está ejecutando una sesión web a 1024×768 pero el cliente es una PDA con una resolución de pantalla de 640×480, pTHINC redimensionará la pantalla del escritorio para que se ajuste a la pantalla más pequeña de la PDA. pTHINC proporciona al usuario de la PDA la opción de aumentar el tamaño de la pantalla haciendo zoom en diferentes partes de la pantalla. Los usuarios suelen estar familiarizados con el diseño general de los sitios web que visitan con frecuencia, y pueden aprovechar esta función de redimensionamiento para navegar mejor por las páginas web. Por ejemplo, un usuario puede alejarse de la pantalla para ver todo el contenido de la página y navegar por los hipervínculos, luego acercarse a una región de interés para obtener una mejor vista. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC también debe proporcionar mecanismos para admitir diferentes orientaciones de pantalla. En un entorno de escritorio, los usuarios suelen estar acostumbrados a tener las pantallas presentadas en modo horizontal, donde el ancho de la pantalla es mayor que su altura. Sin embargo, en un entorno de PDA, la elección no siempre es obvia. Algunos usuarios pueden preferir tener la pantalla en modo retrato, ya que es más fácil sostener el dispositivo en sus manos, mientras que otros pueden preferir el modo paisaje para minimizar la cantidad de desplazamiento lateral necesario para ver una página web. Para adaptarse a las preferencias de los usuarios de PDA, pTHINC proporciona una función de orientación que le permite rotar la pantalla de forma fluida entre el modo horizontal y vertical. El modo de paisaje es particularmente útil para los usuarios de pTHINC que acceden con frecuencia a sus sesiones web tanto en dispositivos de escritorio como en PDA, proporcionando a esos usuarios el mismo ajuste de paisaje familiar en diferentes dispositivos. Dado que el espacio de pantalla es un recurso relativamente escaso en las PDAs, pTHINC se ejecuta en modo de pantalla completa para maximizar el área de pantalla disponible para mostrar la sesión web. Para poder utilizar toda la pantalla en la PDA y aún así permitir al usuario controlar e interactuar con ella, pTHINC reutiliza los botones de acceso directo típicos que se encuentran en las PDAs para realizar todas las funciones de control disponibles para el usuario. Los botones utilizados por pTHINC no requieren ningún cambio en el entorno del sistema operativo; simplemente son interceptados por la aplicación cliente de pTHINC cuando se presionan. La Figura 1 muestra cómo pTHINC utiliza los botones de acceso directo para proporcionar una navegación sencilla y mejorar la experiencia del usuario en general. Estos botones no son específicos del dispositivo, y el diseño mostrado es común en dispositivos PocketPC ampliamente utilizados. pTHINC proporciona seis accesos directos para apoyar su modelo de uso: • Rotar pantalla: El botón de grabación en el borde izquierdo se utiliza para rotar la pantalla entre modo retrato y modo paisaje cada vez que se presiona el botón. • Alejar: El botón más a la izquierda en la parte inferior delantera se utiliza para alejar la visualización de la sesión web proporcionando una vista general de la sesión web. • Acercar: El segundo botón más a la izquierda en la parte inferior delantera se utiliza para acercar la visualización de la sesión web para ver más claramente el contenido de interés. • Desplazamiento direccional: El botón central en la parte inferior delantera se utiliza para desplazarse alrededor de la visualización utilizando un solo botón de control de una manera que ya es familiar para los usuarios de PDA. Esta función es particularmente útil cuando el usuario ha ampliado una región de la pantalla de tal manera que solo una parte de la pantalla es visible en la pantalla. • Mostrar/Ocultar Teclado: El segundo botón más a la derecha en la parte inferior frontal se utiliza para mostrar un teclado virtual dibujado en la pantalla para dispositivos que no tienen teclado físico. El teclado virtual utiliza mecanismos estándar del sistema operativo de PDA, proporcionando portabilidad entre diferentes entornos de PDA. • Cerrar sesión: El botón más a la derecha en la parte inferior frontal se utiliza para desconectarse de la sesión de pTHINC. pTHINC utiliza la pantalla táctil de la PDA, el lápiz óptico y mecanismos estándar de interfaz de usuario para proporcionar una metáfora de punto y clic de la interfaz de usuario similar a la proporcionada por el ratón en un entorno de computación de escritorio tradicional. pTHINC no utiliza un cursor ya que los entornos de PDA no lo proporcionan. En cambio, un usuario puede usar el lápiz táctil para tocar diferentes secciones de la pantalla táctil y señalar el enfoque de entrada. Un toque único en la pantalla táctil genera un evento de clic de ratón correspondiente. Un doble toque en la pantalla táctil genera un evento de doble clic del ratón correspondiente. pTHINC proporciona emulación de ratón de dos botones al usar el lápiz óptico para presionar la pantalla durante un segundo y generar un clic derecho del ratón. Todas estas acciones son idénticas a la forma en que los usuarios ya interactúan con las aplicaciones de PDA en el entorno común de PocketPC. En la navegación web, los usuarios pueden hacer clic en hipervínculos y enfocarse en cuadros de entrada simplemente tocando el área de interés deseada en la pantalla. A diferencia de los navegadores web PDA locales y otras aplicaciones PDA, pTHINC aprovecha metáforas de interfaz de usuario de escritorio más potentes para permitir a los usuarios manipular múltiples ventanas de aplicación abiertas en lugar de estar limitados a una sola ventana de aplicación en un momento dado. Esto proporciona una mayor flexibilidad de navegación más allá de lo que está actualmente disponible en los dispositivos PDA. Similar a un entorno de escritorio, las ventanas del navegador y otras ventanas de aplicaciones pueden ser movidas al presionar y arrastrar el lápiz óptico de manera similar a un ratón. 3. La arquitectura del sistema pTHINC se basa en la arquitectura de visualización remota THINC para proporcionar un sistema de cliente ligero para PDAs. pTHINC virtualiza la visualización en el servidor aprovechando la capa de abstracción del dispositivo de video, que se encuentra por debajo del servidor de ventanas y por encima del framebuffer. Este es un nivel de dispositivo bien definido y de bajo nivel que depende del dispositivo y expone el hardware de video al sistema de visualización. pTHINC logra esto a través de un controlador de pantalla virtual simple que intercepta comandos de dibujo, los empaqueta y los envía a través de la red. Mientras que otros enfoques de cliente ligero interceptan comandos de visualización en otras capas del subsistema de visualización, el enfoque de virtualización de pantalla de pTHINC proporciona algunos beneficios clave para admitir eficientemente a los clientes de PDA. Por ejemplo, interceptar comandos de visualización en una capa superior entre aplicaciones y el sistema de ventanas, como se hace en X [17], requiere replicar y ejecutar una gran cantidad de funcionalidades en la PDA que tradicionalmente son proporcionadas por el sistema de ventanas de escritorio. Dada la magnitud y complejidad de los sistemas de ventanas tradicionales, intentar replicar esta funcionalidad en el entorno restringido de una PDA habría resultado ser una tarea desafiante, y quizás inviable. Además, las aplicaciones y el sistema de ventanas a menudo requieren una sincronización precisa en su funcionamiento, y imponer una red inalámbrica entre ellos al ejecutar las aplicaciones en el servidor y el sistema de ventanas en el cliente degradaría significativamente el rendimiento. Por otro lado, interceptar en una capa inferior extrayendo píxeles del framebuffer a medida que se renderizan proporciona una solución simple que requiere muy poca funcionalidad en el cliente de PDA, pero también puede resultar en un rendimiento degradado. La razón es que para cuando el servidor de visualización remota intenta enviar actualizaciones de pantalla, ha perdido toda la información semántica que podría haberle ayudado a codificar de manera eficiente, y debe recurrir a utilizar un mecanismo de codificación genérico y costoso en el servidor, así como un mecanismo de decodificación potencialmente costoso en el cliente de PDA limitado. A diferencia de los enfoques de intercepción de alto y bajo nivel, el enfoque de pTHINCs de interceptar en el controlador del dispositivo proporciona un equilibrio efectivo entre la simplicidad del cliente y del servidor, y la capacidad de codificar y decodificar de manera eficiente las actualizaciones de pantalla. Al utilizar un enfoque de visualización virtual de bajo nivel, pTHINC puede codificar de manera eficiente los comandos de visualización de la aplicación utilizando solo un pequeño conjunto de comandos de bajo nivel. En un entorno de PDA, este conjunto de comandos proporciona un componente crucial para mantener la simplicidad del cliente en el entorno de PDA con recursos limitados. Los comandos de visualización se muestran en la Tabla 1 y funcionan de la siguiente manera. COPY instruye al cliente a copiar una región de la pantalla desde su framebuffer local a otra ubicación. Este comando mejora la experiencia del usuario al acelerar el desplazamiento y el movimiento de ventanas opacas sin necesidad de reenviar datos de pantalla desde el servidor. SFILL, PFILL y BITMAP son comandos que pintan una región de tamaño fijo en la pantalla. Son útiles para acelerar la visualización de fondos de ventanas sólidas, patrones de escritorio, fondos de páginas web, dibujo de texto y ciertas operaciones en programas de manipulación de gráficos. SFILL llena una región considerable en la pantalla con un solo color. PFILL replica una baldosa sobre una región de la pantalla. BITMAP realiza un relleno utilizando un mapa de bits de unos y ceros como un estipulado para aplicar un color de primer plano y de fondo. Finalmente, RAW se utiliza para transmitir datos de píxeles no codificados que se mostrarán textualmente en una región de la pantalla. Este comando se invoca como último recurso si el servidor no puede emplear ningún otro comando, y es el único comando que puede ser comprimido para mitigar su impacto en el ancho de banda de la red. pTHINC entrega sus comandos utilizando un mecanismo de actualización de servidor-push no bloqueante, donde tan pronto como se generan actualizaciones de pantalla en el servidor, se envían al cliente. Los clientes no están obligados a solicitar explícitamente actualizaciones de pantalla, minimizando así el impacto que la típica variabilidad de la latencia de la red inalámbrica puede tener en la capacidad de respuesta del sistema. Teniendo en cuenta que los recursos Descripción de Comando COPY Copiar un área de búfer de fotogramas en coordenadas especificadas SFILL Rellenar un área con un valor de color de píxel dado PFILL Azulejar un área con un patrón de píxeles dado BITMAP Rellenar una región usando un patrón de bits RAW Mostrar datos de píxeles en bruto en una ubicación dada Tabla 1: Comandos de visualización del protocolo pTHINC. Las PDAs y las redes inalámbricas limitadas pueden no ser capaces de mantenerse al día con un servidor rápido que genera una gran cantidad de actualizaciones, pTHINC es capaz de fusionar, recortar y descartar actualizaciones automáticamente si se produce pérdida o congestión de red, o si el cliente no puede mantenerse al día con la velocidad de las actualizaciones. Este tipo de comportamiento resulta crucial en un entorno de navegación web, donde por ejemplo, una página puede ser redibujada varias veces mientras se renderiza al vuelo por el navegador. En este caso, la PDA solo recibirá y mostrará el resultado final, que claramente es todo lo que al usuario le interesa ver. pTHINC prioriza la entrega de actualizaciones a la PDA utilizando un programador de actualizaciones preemptivo de Tamaño Restante Más Corto Primero (SRSF). SRSF es análogo a la programación de Tiempo de Procesamiento Restante más Corto, la cual se sabe que es óptima para minimizar el tiempo medio de respuesta en un sistema interactivo. En un entorno de navegación web, los trabajos cortos están asociados con el texto y los componentes básicos de diseño de página, como el fondo de las páginas, que son contenido web crítico para el usuario. Por otro lado, los trabajos grandes suelen ser elementos de embellecimiento de menor prioridad, o, incluso peor, banners y anuncios de página web, los cuales tienen un valor cuestionable para el usuario mientras navega por la página. Usando SRSF, pTHINC puede maximizar la utilización del ancho de banda relativamente escaso disponible en la conexión inalámbrica entre la PDA y el servidor. 3.1 Gestión de la Pantalla Para permitir a los usuarios acceder con la misma facilidad a su navegador web y aplicaciones auxiliares desde una computadora de escritorio en casa como desde una PDA mientras están en movimiento, pTHINC proporciona un mecanismo de redimensionamiento para hacer zoom dentro y fuera de la pantalla de una sesión web. El redimensionamiento de pTHINC es completamente compatible con el servidor, no con el cliente. El servidor vuelve a muestrear las actualizaciones para que se ajusten al área de visualización de las PDAs antes de ser transmitidas por la red. pTHINC utiliza el algoritmo de remuestreo de Fants para redimensionar las actualizaciones de píxeles. Esto proporciona actualizaciones suaves y visualmente agradables con un antialiasing adecuado y solo requiere modestos recursos computacionales. El enfoque de redimensionamiento de pTHINCs tiene varias ventajas. Primero, permite al PDA aprovechar la vastamente superior potencia computacional del servidor para utilizar algoritmos de re-muestreo de alta calidad y producir actualizaciones de mayor calidad para que el PDA las muestre. Segundo, cambiar el tamaño de la pantalla no se traduce en requisitos adicionales de recursos para la PDA, ya que no necesita realizar ningún trabajo adicional. Finalmente, se logra una mejor utilización de la red inalámbrica ya que al reescalar las actualizaciones se reducen sus requisitos de ancho de banda. Para permitir a los usuarios orientar sus pantallas en una PDA y así proporcionar una experiencia visual que se ajuste mejor a las preferencias del usuario y al diseño de páginas web o aplicaciones, pTHINC proporciona un mecanismo de rotación de pantalla para alternar entre los modos de visualización horizontal y vertical. La rotación de pantalla de pTHINC es completamente compatible con el cliente, no con el servidor. pTHINC no recalcula explícitamente la geometría de las actualizaciones de pantalla para realizar la rotación, lo cual sería computacionalmente costoso. En cambio, pTHINC simplemente cambia la forma en que los datos se copian en el framebuffer para cambiar entre los modos de visualización. Cuando está en modo retrato, los datos se copian a lo largo de las filas del framebuffer de izquierda a derecha. Cuando se encuentra en modo horizontal, los datos se copian a lo largo de las columnas del framebuffer de arriba hacia abajo. Estas técnicas muy rápidas y simples reemplazan un conjunto de operaciones de copia por otro y no imponen ningún sobrecosto de rendimiento. pTHINC proporciona su propio mecanismo de rotación para soportar una amplia gama de dispositivos sin imponer requisitos adicionales de funciones en la PDA. Aunque algunos dispositivos PDA más nuevos ofrecen soporte nativo para diferentes orientaciones, este mecanismo no es dinámico y requiere que el usuario rote toda la interfaz de usuario de la PDA antes de iniciar el cliente pTHINC. Windows Mobile proporciona mecanismos de API nativos para que las aplicaciones de PDA puedan rotar su interfaz de usuario sobre la marcha, pero estos mecanismos ofrecen un rendimiento deficiente y una calidad de visualización baja, ya que la rotación se realiza de manera ingenua y no es completamente precisa. 3.2 Reproducción de video El video se ha convertido gradualmente en una parte integral de la World Wide Web, y su presencia solo seguirá aumentando. Los sitios web de hoy en día no solo utilizan gráficos animados y flash para presentar el contenido web de manera atractiva, sino que también utilizan video en streaming para enriquecer la interfaz web. Los usuarios pueden ver noticias pregrabadas y en vivo en CNN, ver los momentos más destacados deportivos en ESPN e incluso buscar a través de una gran colección de videos en Google Video. Para permitir que las aplicaciones proporcionen una reproducción de video eficiente, se han creado interfaces en los sistemas de visualización que permiten a los controladores de dispositivos de video exponer sus capacidades de hardware a las aplicaciones. pTHINC aprovecha estas interfaces y su enfoque de controlador de dispositivo virtual para proporcionar un puente virtual entre el cliente remoto y su hardware y las aplicaciones, y admitir de manera transparente la reproducción de video. Sobre esta arquitectura, pTHINC utiliza el espacio de color YUV para codificar el contenido de video, lo cual proporciona una serie de beneficios. Primero, se ha vuelto cada vez más común que el hardware de video de las PDA admita nativamente YUV y pueda realizar la conversión del espacio de color y el escalado automáticamente. Como resultado, pTHINC puede proporcionar reproducción de video a pantalla completa sin afectar el rendimiento. Segundo, el uso de YUV permite una representación más eficiente de los datos RGB sin pérdida de calidad, aprovechando la capacidad de los ojos humanos para distinguir mejor las diferencias en brillo que en color. En particular, pTHINC utiliza el formato YV12, que permite codificar datos de color RGB completo utilizando solo 12 bits por píxel. Tercero, los datos YUV se producen como uno de los últimos pasos del proceso de decodificación de la mayoría de los códecs de video, lo que permite a pTHINC proporcionar la reproducción de video de una manera independiente del formato. Finalmente, aunque el hardware de video de las PDAs no pueda acelerar la reproducción, el proceso de conversión de espacio de color es lo suficientemente simple como para no imponer requisitos poco razonables en la PDA. Un ejemplo más concreto de cómo pTHINC aprovecha el hardware de video PDA para admitir la reproducción de video se puede ver en nuestra implementación de prototipo en la popular PDA Dell Axim X51v, que está equipada con el acelerador multimedia Intel 2700G. En este caso, pTHINC crea un búfer fuera de pantalla en la memoria de video y escribe y lee desde esta región de memoria datos en formato YV12. Cuando llega un nuevo fotograma de video, los datos de video se copian desde el búfer a una superficie superpuesta en la memoria de video, que es independiente de la superficie normal utilizada para el dibujo tradicional. A medida que los datos YV12 se colocan en la superposición, el acelerador de Intel realiza automáticamente la conversión de espacio de color y el escalado. Al utilizar la superficie de superposición, pTHINC no necesita volver a dibujar la pantalla una vez que la reproducción de video ha terminado, ya que la superficie superpuesta no se ve afectada. Además, las regiones de superposición específicas pueden ser manipuladas aprovechando el hardware de video, por ejemplo, para realizar interpolación lineal de hardware y suavizar el fotograma para mostrarlo a pantalla completa, y para realizar rotación automática cuando el cliente se ejecuta en modo horizontal. 4. RESULTADOS EXPERIMENTALES Hemos implementado un prototipo de pTHINC que ejecuta el cliente en dispositivos Pocket PC basados en Windows Mobile ampliamente utilizados y el servidor en sistemas operativos tanto Windows como Linux. Para demostrar su eficacia en el soporte de aplicaciones web inalámbricas móviles, hemos medido su rendimiento en aplicaciones web. Presentamos resultados experimentales sobre diferentes dispositivos PDA para dos aplicaciones web populares, navegar por páginas web y reproducir contenido de video desde la web. Comparamos pTHINC con aplicaciones web nativas que se ejecutan localmente en la PDA para demostrar la mejora que pTHINC puede proporcionar sobre el enfoque tradicional de cliente pesado. También comparamos pTHINC con tres de los clientes ligeros más utilizados que pueden ejecutarse en PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] y VNC (Virtual Network Computing) [16]. Seguimos la práctica común y nos referimos a Citrix MetaFrameXP y Microsoft Remote Desktop por sus respectivos protocolos de visualización remota, ICA (Independent Computing Architecture) y RDP (Remote Desktop Protocol). 4.1 Plataforma de Pruebas Experimental Realizamos nuestros experimentos web utilizando dos PDA Pocket PC inalámbricas diferentes en un entorno de prueba de red Wi-Fi aislado, como se muestra en la Figura 2. El banco de pruebas consistía en dos dispositivos cliente PDA, un monitor de paquetes, un servidor de cliente ligero y un servidor web. Excepto por las PDAs, todas las demás máquinas eran servidores IBM Netfinity 4500R con procesadores duales Intel PIII de 933 MHz y 512 MB de RAM, y estaban conectadas en una red FastEthernet de 100 Mbps conmutada. El servidor web utilizado fue Apache 1.3.27, el emulador de red fue NISTNet 2.0.12 y el monitor de paquetes fue Ethereal 0.10.9. Los clientes de PDA se conectaron al banco de pruebas a través de un punto de acceso inalámbrico Lucent Orinoco AP-2000 802.11b. Todos los experimentos utilizando la red inalámbrica se llevaron a cabo a una distancia de diez pies del punto de acceso, por lo que consideramos que la cantidad de pérdida de paquetes era insignificante en nuestros experimentos. Se utilizaron dos PDA Pocket PC para proporcionar resultados en modelos antiguos y menos potentes, así como en modelos más nuevos de mayor rendimiento. El modelo anterior era un Dell Axim X5 con 147 Cliente 1024×768 640×480 Profundidad Cambio de tamaño Clip RDP no sí 8 bits no sí VNC sí sí 16 bits no no ICA sí sí 16 bits sí no pTHINC sí sí 24 bits sí no Tabla 2: Configuración del banco de pruebas de cliente ligero con un CPU Intel XScale PXA255 de 400 MHz y 64 MB de RAM ejecutando Windows Mobile 2003 y una tarjeta Dell TrueMobile 1180 de 2.4 GHz CompactFlash para redes inalámbricas. El modelo más nuevo era un Dell Axim X51v con un procesador Intel XScale XPA270 de 624 MHz y 64 MB de RAM ejecutando Windows Mobile 5.0 y con red inalámbrica 802.11b integrada. El X51v tiene un acelerador multimedia Intel 2700G con 16MB de memoria de video. Ambas PDAs son capaces de mostrar colores de 16 bits pero tienen diferentes tamaños de pantalla y resoluciones de visualización. El X5 tiene una pantalla diagonal de 3.5 pulgadas con una resolución de 240×320. El X51v tiene una pantalla diagonal de 3.7 pulgadas con una resolución de 480×640. Los cuatro clientes ligeros que utilizamos admiten diferentes niveles de calidad de visualización, como se resume en la Tabla 2. El cliente de RDP solo admite una resolución de pantalla fija de 640×480 en el servidor con una profundidad de color de 8 bits, mientras que otras plataformas ofrecen niveles más altos de calidad de visualización. Para proporcionar una comparación justa en todas las plataformas, realizamos nuestros experimentos con sesiones de cliente ligero configuradas para dos posibles resoluciones, 1024×768 y 640×480. Tanto ICA como VNC se configuraron para usar la resolución nativa de PDA con una profundidad de color de 16 bits. El prototipo actual de pTHINC utiliza color de 24 bits directamente y el cliente reduce la resolución de las actualizaciones al nivel de color de 16 bits disponible en la PDA. RDP se configuró utilizando solo una profundidad de color de 8 bits ya que no admite ninguna profundidad de color mejor. Dado que tanto pTHINC como ICA ofrecen la capacidad de ver la pantalla redimensionada para ajustarse a la pantalla, medimos ambos clientes con y sin la pantalla redimensionada para ajustarse a la pantalla del PDA. Cada cliente ligero fue probado utilizando el modo de paisaje en lugar del modo retrato cuando estaba disponible. Todos los sistemas que se ejecutan en el X51v podrían funcionar en modo horizontal porque el hardware proporciona una función de modo horizontal. Sin embargo, el X5 no proporciona esta funcionalidad. Solo pTHINC admite directamente el modo paisaje, por lo que era el único sistema que podía ejecutarse en modo paisaje tanto en el X5 como en el X51v. Para proporcionar una comparación justa, también estandarizamos en hardware y sistemas operativos comunes siempre que sea posible. Todos los sistemas utilizaron el servidor Netfinity como servidor de cliente ligero. Para los dos sistemas diseñados para servidores Windows, ICA y RDP, ejecutamos Windows Server 2003 en el servidor. Para los otros sistemas que admiten servidores basados en X, ejecutamos la distribución Debian Linux Inestable con el kernel Linux 2.6.10 en el servidor. Utilizamos las últimas versiones de servidores de cliente ligero disponibles en cada plataforma en el momento de nuestros experimentos, a saber, Citrix MetaFrame XP Server para Windows Feature Release 3, Microsoft Remote Desktop integrado en Windows XP y Windows 2003 utilizando RDP 5.2, y VNC 4.0.4.2. Para los benchmarks de aplicaciones, utilizamos dos benchmarks de aplicaciones web para nuestros experimentos basados en dos escenarios de aplicación comunes, navegación por páginas web y reproducción de contenido de video desde la web. Dado que muchos sistemas de cliente ligero, incluidos dos de los probados, son cerrados y propietarios, medimos su rendimiento de manera no invasiva capturando el tráfico de red con un monitor de paquetes y utilizando una variante de benchmarking en cámara lenta [13] previamente desarrollada para medir el rendimiento de clientes ligeros en entornos de PDA [10]. Esta metodología de medición tiene en cuenta tanto el desacoplamiento de la visualización que puede ocurrir entre el cliente y el servidor en sistemas de cliente ligero, como el tiempo de procesamiento del cliente, que puede ser significativo en el caso de las PDAs. Para medir el rendimiento de la navegación web, utilizamos un benchmark de navegación web basado en la Prueba de Carga de Páginas de Texto Web del conjunto de benchmarks Ziff-Davis i-Bench [7]. El punto de referencia consiste en la carga controlada de 55 páginas desde el servidor web mediante JavaScript. Las páginas contienen tanto texto como gráficos, con páginas de diferentes tamaños. Los gráficos son imágenes incrustadas en formatos GIF y JPEG. El benchmark original i-Bench fue modificado para pruebas de rendimiento en cámara lenta al introducir retrasos de varios segundos entre las páginas utilizando JavaScript. Luego se realizaron dos pruebas, una en la que se agregaron retrasos entre cada página, y otra en la que las páginas se cargaron continuamente sin esperar a que se mostraran en el cliente. En la primera prueba, los retrasos se ajustaron lo suficiente en cada caso para garantizar que cada página pudiera ser recibida y mostrada en el cliente por completo sin solapamiento temporal en la transferencia de los datos pertenecientes a dos páginas consecutivas. Utilizamos el monitor de paquetes para registrar el tráfico de paquetes para cada ejecución de la prueba de referencia, luego utilizamos las marcas de tiempo del primer y último paquete en la traza para obtener nuestras medidas de latencia [10]. El monitor de paquetes también registró la cantidad de datos transmitidos entre el cliente y el servidor. La proporción entre el tráfico de datos en las dos pruebas produce un factor de escala. Este factor de escala muestra la pérdida de datos entre el servidor y el cliente debido a la incapacidad del cliente para procesar los datos lo suficientemente rápido. El producto del factor de escala con la medición de latencia produce la verdadera latencia teniendo en cuenta el tiempo de procesamiento del cliente. Para ejecutar la prueba de navegación web, utilizamos Mozilla Firefox 1.0.4 en el servidor de cliente ligero para los clientes ligeros, y Windows Internet Explorer (IE) Mobile para 2003 y Mobile para 5.0 para los navegadores nativos en las PDAs X5 y X51v, respectivamente. En todos los casos, el navegador web utilizado se ajustó para ocupar toda la región de visualización disponible. Para medir el rendimiento de reproducción de video, utilizamos un banco de pruebas de video que consistía en reproducir un clip de video MPEG-1 de 34.75 segundos que contenía una mezcla de noticias y programación de entretenimiento a resolución de pantalla completa. El videoclip tiene un tamaño de 5.11 MB y consta de 834 cuadros de píxeles de 352x240 con una velocidad de cuadro ideal de 24 cuadros por segundo. Medimos el rendimiento del video utilizando pruebas de referencia en cámara lenta al monitorear el tráfico de paquetes resultante a dos velocidades de reproducción, 1 cuadro por segundo (fps) y 24 fps, y comparando los resultados para determinar los retrasos en la reproducción y las caídas de cuadros que ocurren a 24 fps para medir la calidad general del video [13]. Por ejemplo, el 100% de calidad significa que todos los fotogramas del video se reprodujeron a velocidad en tiempo real. Por otro lado, una calidad del 50% podría significar que se eliminó la mitad de los datos del video, o que el clip tardó el doble en reproducirse a pesar de que se mostró toda la información del video. Para ejecutar la prueba de rendimiento de video, utilizamos Windows Media Player 9 para servidores de clientes ligeros basados en Windows, MPlayer 1.0 pre 6 para servidores de clientes ligeros basados en X, y Windows Media Player 9 Mobile y 10 Mobile para los reproductores de video nativos que se ejecutan localmente en las PDAs X5 y X51v, respectivamente. En todos los casos, el reproductor de video utilizado se dimensionó para llenar toda la región de visualización disponible. Las Figuras 3 y 4 muestran los resultados de ejecutar la prueba de navegación por la web. Para cada plataforma, mostramos resultados de hasta cuatro configuraciones diferentes, dos en el X5 y dos en el X51v, dependiendo de si cada configuración era compatible. Sin embargo, no todas las plataformas podrían admitir todas las configuraciones. El navegador local solo se ejecuta a la resolución de pantalla de la PDA, 480×680 o menos para el X51v y el X5. RDP solo funciona a 640×480. Ninguna plataforma podía soportar una resolución de pantalla de 1024×768. ICA solo funcionaba en el X5 y no podía ejecutarse en el X51v porque no era compatible con Windows Mobile 5. La Figura 3 muestra la latencia promedio por página web para cada plataforma. pTHINC proporciona la latencia promedio más baja en la navegación web en ambas PDAs. En el X5, pTHINC funciona hasta 70 veces mejor que otros sistemas de cliente ligero y 8 veces mejor que el navegador local. En el X51v, pTHINC funciona hasta 80 veces mejor que otros sistemas de cliente ligero y 7 veces mejor que el navegador nativo. De hecho, todos los clientes ligeros excepto VNC superan al navegador local de PDA, demostrando los beneficios de rendimiento del enfoque de cliente ligero. Los estudios de usabilidad han demostrado que las páginas web deben tardar menos de un segundo en descargarse para que el usuario experimente una navegación web ininterrumpida [14]. Las mediciones muestran que solo los clientes delgados ofrecen latencias de página web de menos de un segundo. Por el contrario, el navegador local requiere más de 3 segundos en promedio por página web. El navegador local funciona peor ya que necesita ejecutar un navegador web más limitado para procesar el HTML, JavaScript y realizar todo el renderizado utilizando las capacidades limitadas de la PDA. Los clientes ligeros pueden aprovecharse de hardware de servidor más rápido y un navegador web altamente optimizado para procesar el contenido web mucho más rápido. La Figura 3 muestra que RDP es la plataforma más rápida después de pTHINC. Sin embargo, RDP solo puede ejecutarse a una resolución fija de 640×480 y una profundidad de color de 8 bits. Además, RDP también recorta la pantalla al tamaño de la pantalla de la PDA para no tener que enviar actualizaciones que no son visibles en la pantalla de la PDA. Esto proporciona un beneficio de rendimiento siempre y cuando el resto del contenido web no se visualice, pero degrada el rendimiento cuando un usuario desplaza la pantalla para ver otro contenido web. RDP logra su rendimiento con una calidad de visualización significativamente inferior en comparación con otros clientes ligeros y con recortes adicionales en la visualización que no son utilizados por otros sistemas. Como resultado, el rendimiento de RDP por sí solo no proporciona una comparación completa con las otras plataformas. Por el contrario, pTHINC ofrece el mejor rendimiento al mismo tiempo que proporciona una calidad de visualización igual o mejor que los otros sistemas. Dado que VNC e ICA ofrecen una calidad de visualización similar a pTHINC, estos sistemas proporcionan una comparación más justa de diferentes enfoques de cliente ligero. ICA funciona peor en parte porque utiliza primitivas de visualización de nivel superior que requieren costos adicionales de procesamiento por parte del cliente. VNC funciona peor en parte porque pierde datos de visualización debido a su mecanismo de entrega de cliente-pull y debido a los costos de procesamiento del cliente en descomprimir primitivas de píxeles crudos. En ambos casos, su rendimiento se vio limitado en parte porque sus clientes de PDA no podían mantenerse al ritmo al que se mostraban las páginas web. La Figura 3 también muestra las medidas para aquellos clientes ligeros que admiten redimensionar la pantalla para ajustarse a la pantalla de la PDA, a saber, ICA y pTHINC. El redimensionamiento requiere un procesamiento adicional, lo que resulta en latencias promedio más lentas de las páginas web. Las mediciones muestran que el retraso adicional incurrido por ICA al cambiar el tamaño es mucho más sustancial que para pTHINC. ICA realiza redimensionamiento en el cliente PDA más lento. Por el contrario, pTHINC aprovecha el servidor más potente para redimensionar, reduciendo la diferencia de rendimiento entre redimensionar y no redimensionar. A diferencia de ICA, pTHINC es capaz de proporcionar latencias de descarga de páginas web en menos de un segundo en ambos casos. La Figura 4 muestra los datos transferidos en KB por página al ejecutar la versión de cámara lenta de las pruebas. Todas las plataformas tienen requisitos modestos de transferencia de datos de aproximadamente 100 KB por página o menos. Esto está bien dentro de la capacidad de ancho de banda de las redes Wi-Fi. Las mediciones muestran que el navegador local no transfiere la menor cantidad de datos. Esto es sorprendente ya que HTML suele considerarse una representación muy compacta del contenido. En cambio, RDP es la plataforma más eficiente en ancho de banda, en gran parte debido a que utiliza solo una profundidad de color de 8 bits y recorte de pantalla para no transferir la página web completa al cliente. En general, pTHINC tiene los mayores requisitos de datos, ligeramente más que VNC. Esto se debe en gran medida a la falta de soporte nativo de los prototipos actuales de pTHINC para datos de color de 16 bits en el protocolo de comunicación. Sin embargo, este resultado también destaca el rendimiento de pTHINCs, ya que es más rápido que todos los demás sistemas incluso al transferir más datos. Además, dado que los modelos más recientes de PDA admiten colores completos de 24 bits, estos resultados indican que pTHINC seguirá proporcionando un buen rendimiento en la navegación web. Dado que la usabilidad y la calidad de la pantalla son tan importantes como el rendimiento, las Figuras 5 a 8 comparan capturas de pantalla de los diferentes clientes ligeros al mostrar una página web, en este caso del popular sitio de noticias de la BBC. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo paisaje. Figura 5: Captura de pantalla del navegador: RDP 640x480. Figura 6: Captura de pantalla del navegador: VNC 1024x768. Figura 7: Captura de pantalla del navegador: ICA redimensionado 1024x768. Figura 8: Captura de pantalla del navegador: pTHINC redimensionado 1024x768 utilizando la configuración de resolución de pantalla máxima para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Si bien las capturas de pantalla carecen de la fidelidad visual de la pantalla real del dispositivo, se pueden hacer varias observaciones. La Figura 5 muestra que RDP no admite el modo de pantalla completa y desperdicia mucho espacio en pantalla para controles y elementos de la interfaz de usuario, lo que obliga al usuario a desplazarse para acceder a todo el contenido de la sesión de navegación web. La Figura 6 muestra que VNC aprovecha mejor el espacio de la pantalla y ofrece una mejor calidad de visualización, pero aún obliga al usuario a desplazarse para ver la página web debido a la falta de soporte para redimensionar. La Figura 7 muestra la capacidad de ICA para mostrar la página web completa dada su soporte de redimensionamiento, pero su falta de capacidad en modo paisaje y su algoritmo de redimensionamiento deficiente comprometen significativamente la calidad de visualización. Por el contrario, la Figura 8 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de pantalla completa de alta calidad del ancho completo de la página web. pTHINC maximiza toda la región de visualización moviendo todos los controles a los botones de la PDA. Además, pTHINC aprovecha la potencia computacional del servidor para utilizar un algoritmo de redimensionamiento de alta calidad y ajustar la pantalla al tamaño de la PDA sin un sobrecoste significativo. Las figuras 9 y 10 muestran los resultados de ejecutar la prueba de reproducción de video. Para cada plataforma excepto ICA, mostramos resultados para una configuración X5 y X51v. ICA no pudo ejecutarse en el X51v como se mencionó anteriormente. Las mediciones se realizaron utilizando configuraciones que reflejaban el entorno desde el cual un usuario tendría que acceder a una sesión web tanto desde una computadora de escritorio como desde una PDA. Por lo tanto, se utilizó una resolución de pantalla del servidor de 1024×768 siempre que fuera posible y el video se mostró a pantalla completa. La resolución de pantalla de RDP se limitaba a 640×480, como se mencionó anteriormente. Dado que ver toda la pantalla del video es la única opción realmente utilizable, redimensionamos la pantalla para que se ajustara a la pantalla de la PDA en aquellas plataformas que admitían esta función, a saber, ICA y pTHINC. La Figura 9 muestra la calidad de video para cada plataforma. pTHINC es el único cliente ligero capaz de proporcionar una calidad de reproducción de video perfecta, similar al reproductor de video nativo de PDA. Todos los demás clientes ligeros ofrecen una calidad de video muy pobre. Con la excepción de RDP en el X51v que proporcionó una calidad de video inaceptable del 35%, ninguno de los otros sistemas pudo siquiera alcanzar el 10% de calidad de video. VNC e ICA tienen la peor calidad al 8% en el dispositivo X5. El soporte de video nativo de pTHINCs permite un rendimiento de video superior, mientras que otros clientes ligeros sufren de su incapacidad para distinguir el video de las actualizaciones normales de la pantalla. Intentan aplicar algoritmos de compresión ineficaces y costosos en los datos de video y no pueden mantenerse al día con la corriente de actualizaciones generadas, lo que resulta en cuadros omitidos o largos tiempos de reproducción. VNC se ve aún más afectado por su modelo de actualización de cliente-pull porque los fotogramas de video se generan más rápido que la velocidad a la que el cliente puede procesar y enviar solicitudes al servidor para obtener la siguiente actualización de pantalla. La Figura 10 muestra los datos totales transferidos durante la reproducción de video a pantalla completa para cada sistema. El reproductor nativo es la plataforma más eficiente en ancho de banda, enviando menos de 6 MB de datos, lo que corresponde a aproximadamente 1.2 Mbps de ancho de banda. La calidad de video al 100% de pTHINCs requiere alrededor de 25 MB de datos, lo que corresponde a un uso de ancho de banda de menos de 6 Mbps. Mientras que los otros clientes ligeros envían menos datos que THINC, lo hacen porque están eliminando datos de video, lo que resulta en una calidad de video degradada. Las figuras 11 a 14 comparan capturas de pantalla de los distintos clientes ligeros al mostrar el videoclip. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo horizontal utilizando la configuración de resolución máxima de pantalla para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Las figuras 11 y 12 muestran que RDP y VNC no pueden mostrar el cuadro completo del video en la pantalla de la PDA. RDP desperdicia espacio en pantalla para los elementos de la interfaz de usuario y VNC solo muestra la esquina superior del marco de video en la pantalla. La Figura 13 muestra que el ICA proporciona redimensionamiento para mostrar todo el fotograma del video, pero no redimensiona proporcionalmente los datos del video, lo que resulta en artefactos de visualización extraños. Por el contrario, la Figura 14 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de alta calidad a pantalla completa de todo el fotograma del video. pTHINC ofrece una visualización de video visualmente más atractiva que RDP, VNC o ICA. 5. TRABAJOS RELACIONADOS Varios estudios han examinado el rendimiento de la navegación web en la computación de cliente ligero [13, 19, 10]. La capacidad de los clientes ligeros para mejorar el rendimiento de la navegación web en PDAs inalámbricas fue demostrada cuantitativamente por primera vez en un estudio previo realizado por uno de los autores [10]. Este estudio demostró que los clientes ligeros pueden ofrecer tanto un rendimiento de navegación web más rápido como una mayor funcionalidad de navegación web. El estudio consideró una amplia gama de contenido web, incluido el contenido de sistemas de información médica. Nuestro trabajo se basa en este estudio previo y considera temas importantes como la usabilidad de los clientes ligeros existentes en entornos de PDA, los compromisos entre la usabilidad y el rendimiento de los clientes ligeros, el rendimiento en diferentes dispositivos de PDA y el rendimiento de los clientes ligeros en aplicaciones web comunes como el video. Se han desarrollado muchos clientes ligeros y algunos tienen clientes de PDA, incluyendo Remote Desktop de Microsoft [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5] y Tarantella [18]. Estos sistemas fueron diseñados inicialmente para computadoras de escritorio y adaptados posteriormente para asistentes digitales personales (PDA). A diferencia de pTHINC, no abordan los problemas clave de arquitectura del sistema y usabilidad importantes para las PDAs. Esto limita la calidad de visualización, el rendimiento del sistema, el espacio de pantalla disponible y la usabilidad general en PDAs. pTHINC se basa en trabajos anteriores de dos de los autores sobre THINC [1], ampliando la arquitectura del servidor e introduciendo una interfaz de cliente y un modelo de uso para admitir eficientemente dispositivos PDA en aplicaciones web móviles. Otros enfoques para mejorar el rendimiento de la navegación web inalámbrica móvil se han centrado en el uso de proxies de transcodificación y almacenamiento en caché en conjunto con el modelo de cliente pesado [11, 9, 4, 8]. Trabajan mediante el envío de funcionalidades a proxies externos y utilizando aplicaciones de navegación especializadas en el dispositivo PDA que se comunican con el proxy. Nuestro enfoque de cliente ligero difiere fundamentalmente de estos enfoques de cliente pesado al trasladar toda la lógica del navegador web al servidor, aprovechando las inversiones existentes en navegadores web de escritorio y aplicaciones auxiliares para funcionar de manera integrada con los sistemas de producción sin necesidad de configuraciones adicionales de proxy o modificaciones en el navegador web. Con la aparición de la navegación web en dispositivos con pantallas pequeñas, los sitios web han sido rediseñados utilizando mecanismos como WAP y se han desarrollado navegadores web nativos especializados para adaptarse a las necesidades de estos dispositivos. Recientemente, Opera ha desarrollado el navegador web Opera Mini [15], que utiliza un enfoque similar al modelo de cliente ligero para proporcionar acceso a través de una serie de dispositivos móviles que normalmente no podrían ejecutar un navegador web. En lugar de requerir que el dispositivo procese las páginas web, utiliza un servidor remoto para preprocesar la página antes de enviarla al teléfono. CONCLUSIONES Hemos introducido pTHINC, una arquitectura de cliente ligero para PDAs inalámbricas. pTHINC proporciona mecanismos arquitectónicos y de usabilidad clave como el redimensionamiento de pantalla en el lado del servidor, rotación de pantalla en el lado del cliente utilizando técnicas simples de copia, soporte de video YUV, y maximización del espacio de pantalla para actualizaciones de visualización y aprovechamiento de los botones de control existentes en las PDAs para elementos de la interfaz de usuario. pTHINC soporta de manera transparente navegadores de escritorio tradicionales y sus aplicaciones auxiliares en dispositivos PDA y computadoras de escritorio, brindando a los usuarios móviles acceso ubicuo a un entorno web consistente, personalizado y completo en dispositivos heterogéneos. Hemos implementado pTHINC y medido su rendimiento en aplicaciones web en comparación con los sistemas de cliente ligero existentes y las aplicaciones web nativas. Nuestros resultados en múltiples dispositivos móviles inalámbricos demuestran que pTHINC ofrece un rendimiento de navegación web hasta 80 veces mejor que los sistemas de cliente ligero existentes, y 8 veces mejor que un navegador PDA nativo. Además, pTHINC es el único cliente ligero de PDA 151 Figura 11: Captura de pantalla de video: RDP 640x480 Figura 12: Captura de pantalla de video: VNC 1024x768 Figura 13: Captura de pantalla de video: ICA redimensionado 1024x768 Figura 14: Captura de pantalla de video: pTHINC redimensionado 1024x768 que proporciona de manera transparente la reproducción de video a pantalla completa y a velocidad de cuadro completa, haciendo que los sitios web con contenido multimedia sean accesibles para los usuarios de la web móvil. 7. AGRADECIMIENTOS Este trabajo fue apoyado en parte por las subvenciones NSF ITR CCR0219943 y CNS-0426623, y un premio IBM SUR. 8. REFERENCIAS [1] R. Baratto, L. Kim y J. Nieh. THINC: Una arquitectura de visualización virtual para la computación de cliente ligero. En Actas del 20º Simposio de Principios de Sistemas Operativos de la ACM (SOSP), octubre de 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius y A. Muir. Microsoft Windows NT Server 4.0, Terminal Server Edition: Referencia Técnica. Microsoft Press, Redmond, WA, 1999. [4] A.\nMicrosoft Press, Redmond, WA, 1999. [4] A. Fox, I. Goldberg, S. D. Gribble y D. C. Lee. Experiencia con Top Gun Wingman: un navegador web gráfico basado en proxy para el 3Com PalmPilot. En Actas de Middleware 98, Lake District, Inglaterra, septiembre de 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Ley de Portabilidad y Responsabilidad del Seguro de Salud. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench versión 1.5. http://etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi. Sobre agentes de proxy, movilidad y acceso web. Redes y aplicaciones móviles, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon y A. Ortega. Diseño e Implementación de un Proxy de Caché Blando. Redes de Computadoras y Sistemas ISDN, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana y S. Varshneya. Mejorando la navegación web en PDAs inalámbricas utilizando computación de cliente ligero. En Actas de la 13ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham y P. Shenoy. TranSquid: Proxy de transcodificación y almacenamiento en caché para entornos de comercio electrónico heterogéneos. En Actas del 12º Taller IEEE sobre Problemas de Investigación en Ingeniería de Datos (RIDE 02), febrero de 2002. [12] Visor VNC .NET para PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang y N. Novik. Midiendo el rendimiento de clientes ligeros utilizando pruebas de referencia en cámara lenta. ACM Trans. Sistemas de Computación, 21(1):87-115, Feb. 2003. [14] J. Nielsen. Diseño de Usabilidad en la Web. New Riders Publishing, Indianápolis, IN, 2000. [15] Navegador Opera Mini. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood y A. Hopper. Computación de Red Virtual. IEEE Internet Computing, 2(1), enero/febrero de 1998. [17] R. W. Scheifler y J. Gettys. El Sistema de Ventanas X. ACM Trans. Gr., 5(2):79-106, Abr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla y M. Sajjadpour. Rendimiento de la navegación web en computación inalámbrica de cliente ligero. En Actas de la 12ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2003. 152 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "pda thinclient solution": {
            "translated_key": "cliente ligero PDA",
            "is_in_text": true,
            "original_annotated_sentences": [
                "pTHINC: A Thin-Client Architecture for Mobile Wireless Web Joeng Kim, Ricardo A. Baratto, and Jason Nieh Department of Computer Science Columbia University, New York, NY, USA {jk2438, ricardo, nieh}@cs.columbia.edu ABSTRACT Although web applications are gaining popularity on mobile wireless PDAs, web browsers on these systems can be quite slow and often lack adequate functionality to access many web sites.",
                "We have developed pTHINC, a <br>pda thinclient solution</br> that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide high-fidelity display and seamless mobility across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available screen resolution for application display.",
                "We have implemented pTHINC on Windows Mobile and evaluated its performance on mobile wireless devices.",
                "Our results compared to local PDA web browsers and other thin-client approaches demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "Categories and Subject Descriptors: C.2.4 ComputerCommunication-Networks: Distributed Systems - client/ server General Terms: Design, Experimentation, Performance 1.",
                "INTRODUCTION The increasing ubiquity of wireless networks and decreasing cost of hardware is fueling a proliferation of mobile wireless handheld devices, both as standalone wireless Personal Digital Assistants (PDA) and popular integrated PDA/cell phone devices.",
                "These devices are enabling new forms of mobile computing and communication.",
                "Service providers are leveraging these devices to deliver pervasive web access, and mobile web users already often use these devices to access web-enabled information such as news, email, and localized travel guides and maps.",
                "It is likely that within a few years, most of the devices accessing the web will be mobile.",
                "Users typically access web content by running a web browser and associated helper applications locally on the PDA.",
                "Although native web browsers exist for PDAs, they deliver subpar performance and have a much smaller feature set and more limited functionality than their desktop computing counterparts [10].",
                "As a result, PDA web browsers are often not able to display web content from web sites that leverage more advanced web technologies to deliver a richer web experience.",
                "This fundamental problem arises for two reasons.",
                "First, because PDAs have a completely different hardware/software environment from traditional desktop computers, web applications need to be rewritten and customized for PDAs if at all possible, duplicating development costs.",
                "Because the desktop application market is larger and more mature, most development effort generally ends up being spent on desktop applications, resulting in greater functionality and performance than their PDA counterparts.",
                "Second, PDAs have a more resource constrained environment than traditional desktop computers to provide a smaller form factor and longer battery life.",
                "Desktop web browsers are large, complex applications that are unable to run on a PDA.",
                "Instead, developers are forced to significantly strip down these web browsers to provide a usable PDA web browser, thereby crippling PDA browser functionality.",
                "Thin-client computing provides an alternative approach for enabling pervasive web access from handheld devices.",
                "A thin-client computing system consists of a server and a client that communicate over a network using a remote display protocol.",
                "The protocol enables graphical displays to be virtualized and served across a network to a client device, while application logic is executed on the server.",
                "Using the remote display protocol, the client transmits user input to the server, and the server returns screen updates of the applications from the server to the client.",
                "Using a thin-client model for mobile handheld devices, PDAs can become simple stateless clients that leverage the remote server capabilities to execute web browsers and other helper applications.",
                "The thin-client model provides several important benefits for mobile wireless web.",
                "First, standard desktop web applications can be used to deliver web content to PDAs without rewriting or adapting applications to execute on a PDA, reducing development costs and leveraging existing software investments.",
                "Second, complex web applications can be executed on powerful servers instead of running stripped down versions on more resource constrained PDAs, providing greater functionality and better performance [10].",
                "Third, web applications can take advantage of servers with faster networks and better connectivity, further boosting application performance.",
                "Fourth, PDAs can be even simpler devices since they do not need to perform complex application logic, potentially reducing energy consumption and extend143 ing battery life.",
                "Finally, PDA thin clients can be essentially stateless appliances that do not need to be backed up or restored, require almost no maintenance or upgrades, and do not store any sensitive data that can be lost or stolen.",
                "This model provides a viable avenue for medical organizations to comply with HIPAA regulations [6] while embracing mobile handhelds in their day to day operations.",
                "Despite these potential advantages, thin clients have been unable to provide the full range of these benefits in delivering web applications to mobile handheld devices.",
                "Existing thin clients were not designed for PDAs and do not account for important usability issues in the context of small form factor devices, resulting in difficulty in navigating displayed web content.",
                "Furthermore, existing thin clients are ineffective at providing seamless mobility across the heterogeneous mix of device display sizes and resolutions.",
                "While existing thin clients can already provide faster performance than native PDA web browsers in delivering HTML web content, they do not effectively support more display-intensive web helper applications such as multimedia video, which is increasingly an integral part of available web content.",
                "To harness the full potential of thin-client computing in providing mobile wireless web on PDAs, we have developed pTHINC (PDA THin-client InterNet Computing). pTHINC builds on our previous work on THINC [1] to provide a thinclient architecture for mobile handheld devices. pTHINC virtualizes and resizes the display on the server to efficiently deliver high-fidelity screen updates to a broad range of different clients, screen sizes, and screen orientations, including both portrait and landscape viewing modes.",
                "This enables pTHINC to provide the same persistent web session across different client devices.",
                "For example, pTHINC can provide the same web browsing session appropriately scaled for display on a desktop computer and a PDA so that the same cookies, bookmarks, and other meta-data are continuously available on both machines simultaneously. pTHINCs virtual display approach leverages semantic information available in display commands, and client-side video hardware to provide more efficient remote display mechanisms that are crucial for supporting more display-intensive web applications.",
                "Given limited display resolution on PDAs, pTHINC maximizes the use of screen real estate for remote display by moving control functionality from the screen to readily available PDA control buttons, improving system usability.",
                "We have implemented pTHINC on Windows Mobile and demonstrated that it works transparently with existing applications, window systems, and operating systems, and does not require modifying, recompiling, or relinking existing software.",
                "We have quantitatively evaluated pTHINC against local PDA web browsers and other thin-client approaches on Pocket PC devices.",
                "Our experimental results demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "This paper presents the design and implementation of pTHINC.",
                "Section 2 describes the overall usage model and usability characteristics of pTHINC.",
                "Section 3 presents the design and system architecture of pTHINC.",
                "Section 4 presents experimental results measuring the performance of pTHINC on web applications and comparing it against native PDA browsers and other popular PDA thin-client systems.",
                "Section 5 discusses related work.",
                "Finally, we present some concluding remarks. 2.",
                "PTHINC USAGE MODEL pTHINC is a thin-client system that consists of a simple client viewer application that runs on the PDA and a server that runs on a commodity PC.",
                "The server leverages more powerful PCs to to run web browsers and other application logic.",
                "The client takes user input from the PDA stylus and virtual keyboard and sends them to the server to pass to the applications.",
                "Screen updates are then sent back from the server to the client for display to the user.",
                "When the pTHINC PDA client is started, the user is presented with a simple graphical interface where information such as server address and port, user authentication information, and session settings can be provided. pTHINC first attempts to connect to the server and perform the necessary handshaking.",
                "Once this process has been completed, pTHINC presents the user with the most recent display of his session.",
                "If the session does not exist, a new session is created.",
                "Existing sessions can be seamlessly continued without changes in the session setting or server configuration.",
                "Unlike other thin-client systems, pTHINC provides a user with a persistent web session model in which a user can launch a session running a web browser and associated applications at the server, then disconnect from that session and reconnect to it again anytime.",
                "When a user reconnects to the session, all of the applications continue running where the user left off, so that the user can continue working as though he or she never disconnected.",
                "The ability to disconnect and reconnect to a session at anytime is an important benefit for mobile wireless PDA users which may have intermittent network connectivity. pTHINCs persistent web session model enables a user to reconnect to a web session from devices other than the one on which the web session was originally initiated.",
                "This provides users with seamless mobility across different devices.",
                "If a user loses his PDA, he can easily use another PDA to access his web session.",
                "Furthermore, pTHINC allows users to use non-PDA devices to access web sessions as well.",
                "A user can access the same persistent web session on a desktop PC as on a PDA, enabling a user to use the same web session from any computer. pTHINCs persistent web session model addresses a key problem encountered by mobile web users, the lack of a common web environment across computers.",
                "Web browsers often store important information such as bookmarks, cookies, and history, which enable them to function in a much more useful manner.",
                "The problem that occurs when a user moves between computers is that this data, which is specific to a web browser installation, cannot move with the user.",
                "Furthermore, web browsers often need helper applications to process different media content, and those applications may not be consistently available across all computers. pTHINC addresses this problem by enabling a user to remotely use the exact same web browser environment and helper applications from any computer.",
                "As a result, pTHINC can provide a common, consistent web browsing environment for mobile users across different devices without requiring them to attempt to repeatedly synchronize different web browsing environments across multiple machines.",
                "To enable a user to access the same web session on different devices, pTHINC must provide mechanisms to support different display sizes and resolutions.",
                "Toward this end, pTHINC provides a zoom feature that enables a user to zoom in and out of a display and allows the display of a web 144 Figure 1: pTHINC shortcut keys session to be resized to fit the screen of the device being used.",
                "For example, if the server is running a web session at 1024×768 but the client is a PDA with a display resolution of 640×480, pTHINC will resize the desktop display to fit the full display in the smaller screen of the PDA. pTHINC provides the PDA user with the option to increase the size of the display by zooming in to different parts of the display.",
                "Users are often familiar with the general layout of commonly visited websites, and are able to leverage this resizing feature to better navigate through web pages.",
                "For example, a user can zoom out of the display to view the entire page content and navigate hyperlinks, then zoom in to a region of interest for a better view.",
                "To enable a user to access the same web session on different devices, pTHINC must also provide mechanisms to support different display orientations.",
                "In a desktop environment, users are typically accustomed to having displays presented in landscape mode where the screen width is larger than its height.",
                "However, in a PDA environment, the choice is not always obvious.",
                "Some users may prefer having the display in portrait mode, as it is easier to hold the device in their hands, while others may prefer landscape mode in order to minimize the amount of side-scrolling necessary to view a web page.",
                "To accommodate PDA user preferences, pTHINC provides an orientation feature that enables it to seamless rotate the display between landscape and portrait mode.",
                "The landscape mode is particularly useful for pTHINC users who frequently access their web sessions on both desktop and PDA devices, providing those users with the same familiar landscape setting across different devices.",
                "Because screen space is a relatively scarce resource on PDAs, pTHINC runs in fullscreen mode to maximize the screen area available to display the web session.",
                "To be able to use all of the screen on the PDA and still allow the user to control and interact with it, pTHINC reuses the typical shortcut buttons found on PDAs to perform all the control functions available to the user.",
                "The buttons used by pTHINC do not require any OS environment changes; they are simply intercepted by the pTHINC client application when they are pressed.",
                "Figure 1 shows how pTHINC utilizes the shortcut buttons to provide easy navigation and improve the overall user experience.",
                "These buttons are not device specific, and the layout shown is common to widelyused PocketPC devices. pTHINC provides six shortcuts to support its usage model: • Rotate Screen: The record button on the left edge is used to rotate the screen between portrait and landscape mode each time the button is pressed. • Zoom Out: The leftmost button on the bottom front is used to zoom out the display of the web session providing a birds eye view of the web session. • Zoom In: The second leftmost button on the bottom front is used to zoom in the display of the web session to more clearly view content of interest. • Directional Scroll: The middle button on the bottom front is used to scroll around the display using a single control button in a way that is already familiar to PDA users.",
                "This feature is particularly useful when the user has zoomed in to a region of the display such that only part of the display is visible on the screen. • Show/Hide Keyboard: The second rightmost button on the bottom front is used to bring up a virtual keyboard drawn on the screen for devices which have no physical keyboard.",
                "The virtual keyboard uses standard PDA OS mechanisms, providing portability across different PDA environments. • Close Session: The rightmost button on the bottom front is used to disconnect from the pTHINC session. pTHINC uses the PDA touch screen, stylus, and standard user interface mechanisms to provide a user interface pointand-click metaphor similar to that provided by the mouse in a traditional desktop computing environment. pTHINC does not use a cursor since PDA environments do not provide one.",
                "Instead, a user can use the stylus to tap on different sections of the touch screen to indicate input focus.",
                "A single tap on the touch screen generates a corresponding single click mouse event.",
                "A double tap on the touch screen generates a corresponding double click mouse event. pTHINC provides two-button mouse emulation by using the stylus to press down on the screen for one second to generate a right mouse click.",
                "All of these actions are identical to the way users already interact with PDA applications in the common PocketPC environment.",
                "In web browsing, users can click on hyperlinks and focus on input boxes by simply tapping on the desired screen area of interest.",
                "Unlike local PDA web browsers and other PDA applications, pTHINC leverages more powerful desktop user interface metaphors to enable users to manipulate multiple open application windows instead of being limited to a single application window at any given moment.",
                "This provides increased browsing flexibility beyond what is currently available on PDA devices.",
                "Similar to a desktop environment, browser windows and other application windows can be moved around by pressing down and dragging the stylus similar to a mouse. 3.",
                "PTHINC SYSTEM ARCHITECTURE pTHINC builds on the THINC [1] remote display architecture to provide a thin-client system for PDAs. pTHINC virtualizes the display at the server by leveraging the video device abstraction layer, which sits below the window server and above the framebuffer.",
                "This is a well-defined, low-level, device-dependent layer that exposes the video hardware to the display system. pTHINC accomplishes this through a simple virtual display driver that intercepts drawing commands, packetizes, and sends them over the network. 145 While other thin-client approaches intercept display commands at other layers of the display subsystem, pTHINCs display virtualization approach provides some key benefits in efficiently supporting PDA clients.",
                "For example, intercepting display commands at a higher layer between applications and the window system as is done by X [17] requires replicating and running a great deal of functionality on the PDA that is traditionally provided by the desktop window system.",
                "Given both the size and complexity of traditional window systems, attempting to replicate this functionality in the restricted PDA environment would have proven to be a daunting, and perhaps unfeasible task.",
                "Furthermore, applications and the window system often require tight synchronization in their operation and imposing a wireless network between them by running the applications on the server and the window system on the client would significantly degrade performance.",
                "On the other hand, intercepting at a lower layer by extracting pixels out of the framebuffer as they are rendered provides a simple solution that requires very little functionality on the PDA client, but can also result in degraded performance.",
                "The reason is that by the time the remote display server attempts to send screen updates, it has lost all semantic information that may have helped it encode efficiently, and it must resort to using a generic and expensive encoding mechanism on the server, as well as a potentially expensive decoding mechanism on the limited PDA client.",
                "In contrast to both the high and low level interception approaches, pTHINCs approach of intercepting at the device driver provides an effective balance between client and server simplicity, and the ability to efficiently encode and decode screen updates.",
                "By using a low-level virtual display approach, pTHINC can efficiently encode application display commands using only a small set of low-level commands.",
                "In a PDA environment, this set of commands provides a crucial component in maintaining the simplicity of the client in the resourceconstrained PDA environment.",
                "The display commands are shown in Table 1, and work as follows.",
                "COPY instructs the client to copy a region of the screen from its local framebuffer to another location.",
                "This command improves the user experience by accelerating scrolling and opaque window movement without having to resend screen data from the server.",
                "SFILL, PFILL, and BITMAP are commands that paint a fixed-size region on the screen.",
                "They are useful for accelerating the display of solid window backgrounds, desktop patterns, backgrounds of web pages, text drawing, and certain operations in graphics manipulation programs.",
                "SFILL fills a sizable region on the screen with a single color.",
                "PFILL replicates a tile over a screen region.",
                "BITMAP performs a fill using a bitmap of ones and zeros as a stipple to apply a foreground and background color.",
                "Finally, RAW is used to transmit unencoded pixel data to be displayed verbatim on a region of the screen.",
                "This command is invoked as a last resort if the server is unable to employ any other command, and it is the only command that may be compressed to mitigate its impact on network bandwidth. pTHINC delivers its commands using a non-blocking, serverpush update mechanism, where as soon as display updates are generated on the server, they are sent to the client.",
                "Clients are not required to explicitly request display updates, thus minimizing the impact that the typical varying network latency of wireless links may have on the responsiveness of the system.",
                "Keeping in mind that resource Command Description COPY Copy a frame buffer area to specified coordinates SFILL Fill an area with a given pixel color value PFILL Tile an area with a given pixel pattern BITMAP Fill a region using a bit pattern RAW Display raw pixel data at a given location Table 1: pTHINC Protocol Display Commands constrained PDAs and wireless networks may not be able to keep up with a fast server generating a large number of updates, pTHINC is able to coalesce, clip, and discard updates automatically if network loss or congestion occurs, or the client cannot keep up with the rate of updates.",
                "This type of behavior proves crucial in a web browsing environment, where for example, a page may be redrawn multiple times as it is rendered on the fly by the browser.",
                "In this case, the PDA will only receive and render the final result, which clearly is all the user is interesting in seeing. pTHINC prioritizes the delivery of updates to the PDA using a Shortest-Remaining-Size-First (SRSF) preemptive update scheduler.",
                "SRSF is analogous to Shortest-RemainingProcessing-Time scheduling, which is known to be optimal for minimizing mean response time in an interactive system.",
                "In a web browsing environment, short jobs are associated with text and basic page layout components such as the pages background, which are critical web content for the user.",
                "On the other hand, large jobs are often lower priority beautifying elements, or, even worse, web page banners and advertisements, which are of questionable value to the user as he or she is browsing the page.",
                "Using SRSF, pTHINC is able to maximize the utilization of the relatively scarce bandwidth available on the wireless connection between the PDA and the server. 3.1 Display Management To enable users to just as easily access their web browser and helper applications from a desktop computer at home as from a PDA while on the road, pTHINC provides a resize mechanism to zoom in and out of the display of a web session. pTHINC resizing is completely supported by the server, not the client.",
                "The server resamples updates to fit within the PDAs viewport before they are transmitted over the network. pTHINC uses Fants resampling algorithm to resize pixel updates.",
                "This provides smooth, visually pleasing updates with properly antialiasing and has only modest computational requirements. pTHINCs resizing approach has a number of advantages.",
                "First, it allows the PDA to leverage the vastly superior computational power of the server to use high quality resampling algorithms and produce higher quality updates for the PDA to display.",
                "Second, resizing the screen does not translate into additional resource requirements for the PDA, since it does not need to perform any additional work.",
                "Finally, better utilization of the wireless network is attained since rescaling the updates reduces their bandwidth requirements.",
                "To enable users to orient their displays on a PDA to provide a viewing experience that best accommodates user preferences and the layout of web pages or applications, pTHINC provides a display rotation mechanism to switch between landscape and portrait viewing modes. pTHINC display rotation is completely supported by the client, not the server. pTHINC does not explicitly recalculate the ge146 ometry of display updates to perform rotation, which would be computationally expensive.",
                "Instead, pTHINC simply changes the way data is copied into the framebuffer to switch between display modes.",
                "When in portrait mode, data is copied along the rows of the framebuffer from left to right.",
                "When in landscape mode, data is copied along the columns of the framebuffer from top to bottom.",
                "These very fast and simple techniques replace one set of copy operations with another and impose no performance overhead. pTHINC provides its own rotation mechanism to support a wide range of devices without imposing additional feature requirements on the PDA.",
                "Although some newer PDA devices provide native support for different orientations, this mechanism is not dynamic and requires the user to rotate the PDAs entire user interface before starting the pTHINC client.",
                "Windows Mobile provides native API mechanisms for PDA applications to rotate their UI on the fly, but these mechanisms deliver poor performance and display quality as the rotation is performed naively and is not completely accurate. 3.2 Video Playback Video has gradually become an integral part of the World Wide Web, and its presence will only continue to increase.",
                "Web sites today not only use animated graphics and flash to deliver web content in an attractive manner, but also utilize streaming video to enrich the web interface.",
                "Users are able to view pre-recorded and live newscasts on CNN, watch sports highlights on ESPN, and even search through large collection of videos on Google Video.",
                "To allow applications to provide efficient video playback, interfaces have been created in display systems that allow video device drivers to expose their hardware capabilities back to the applications. pTHINC takes advantage of these interfaces and its virtual device driver approach to provide a virtual bridge between the remote client and its hardware and the applications, and transparently support video playback.",
                "On top of this architecture, pTHINC uses the YUV colorspace to encode the video content, which provides a number of benefits.",
                "First, it has become increasingly common for PDA video hardware to natively support YUV and be able to perform the colorspace conversion and scaling automatically.",
                "As a result, pTHINC is able to provide fullscreen video playback without any performance hits.",
                "Second, the use of YUV allows for a more efficient representation of RGB data without loss of quality, by taking advantage of the human eyes ability to better distinguish differences in brightness than in color.",
                "In particular, pTHINC uses the YV12 format, which allows full color RGB data to be encoded using just 12 bits per pixel.",
                "Third, YUV data is produced as one of the last steps of the decoding process of most video codecs, allowing pTHINC to provide video playback in a manner that is format independent.",
                "Finally, even if the PDAs video hardware is unable to accelerate playback, the colorspace conversion process is simple enough that it does not impose unreasonable requirements on the PDA.",
                "A more concrete example of how pTHINC leverages the PDA video hardware to support video playback can be seen in our prototype implementation on the popular Dell Axim X51v PDA, which is equipped with the Intel 2700G multimedia accelerator.",
                "In this case, pTHINC creates an offscreen buffer in video memory and writes and reads from this memory region data on the YV12 format.",
                "When a new video frame arrives, video data is copied from the buffer to Figure 2: Experimental Testbed an overlay surface in video memory, which is independent of the normal surface used for traditional drawing.",
                "As the YV12 data is put onto the overlay, the Intel accelerator automatically performs both colorspace conversion and scaling.",
                "By using the overlay surface, pTHINC has no need to redraw the screen once video playback is over since the overlapped surface is unaffected.",
                "In addition, specific overlay regions can be manipulated by leveraging the video hardware, for example to perform hardware linear interpolation to smooth out the frame and display it fullscreen, and to do automatic rotation when the client runs in landscape mode. 4.",
                "EXPERIMENTAL RESULTS We have implemented a pTHINC prototype that runs the client on widely-used Windows Mobile-based Pocket PC devices and the server on both Windows and Linux operating systems.",
                "To demonstrate its effectiveness in supporting mobile wireless web applications, we have measured its performance on web applications.",
                "We present experimental results on different PDA devices for two popular web applications, browsing web pages and playing video content from the web.",
                "We compared pTHINC against native web applications running locally on the PDA to demonstrate the improvement that pTHINC can provide over the traditional fat-client approach.",
                "We also compared pTHINC against three of the most widely used thin clients that can run on PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] and VNC (Virtual Network Computing) [16].",
                "We follow common practice and refer to Citrix MetaFrameXP and Microsoft Remote Desktop by their respective remote display protocols, ICA (Independent Computing Architecture) and RDP (Remote Desktop Protocol). 4.1 Experimental Testbed We conducted our web experiments using two different wireless Pocket PC PDAs in an isolated Wi-Fi network testbed, as shown in Figure 2.",
                "The testbed consisted of two PDA client devices, a packet monitor, a thin-client server, and a web server.",
                "Except for the PDAs, all of the other machines were IBM Netfinity 4500R servers with dual 933 MHz Intel PIII CPUs and 512 MB RAM and were connected on a switched 100 Mbps FastEthernet network.",
                "The web server used was Apache 1.3.27, the network emulator was NISTNet 2.0.12, and the packet monitor was Ethereal 0.10.9.",
                "The PDA clients connected to the testbed through a 802.11b Lucent Orinoco AP-2000 wireless access point.",
                "All experiments using the wireless network were conducted within ten feet of the access point, so we considered the amount of packet loss to be negligible in our experiments.",
                "Two Pocket PC PDAs were used to provide results across both older, less powerful models and newer higher performance models.",
                "The older model was a Dell Axim X5 with 147 Client 1024×768 640×480 Depth Resize Clip RDP no yes 8-bit no yes VNC yes yes 16-bit no no ICA yes yes 16-bit yes no pTHINC yes yes 24-bit yes no Table 2: Thin-client Testbed Configuration Setting a 400 MHz Intel XScale PXA255 CPU and 64 MB RAM running Windows Mobile 2003 and a Dell TrueMobile 1180 2.4Ghz CompactFlash card for wireless networking.",
                "The newer model was a Dell Axim X51v with a 624 MHz Intel XScale XPA270 CPU and 64 MB RAM running Windows Mobile 5.0 and integrated 802.11b wireless networking.",
                "The X51v has an Intel 2700G multimedia accelerator with 16MB video memory.",
                "Both PDAs are capable of 16-bit color but have different screen sizes and display resolutions.",
                "The X5 has a 3.5 inch diagonal screen with 240×320 resolution.",
                "The X51v has a 3.7 inch diagonal screen with 480×640.",
                "The four thin clients that we used support different levels of display quality as summarized in Table 2.",
                "The RDP client only supports a fixed 640×480 display resolution on the server with 8-bit color depth, while other platforms provide higher levels of display quality.",
                "To provide a fair comparison across all platforms, we conducted our experiments with thin-client sessions configured for two possible resolutions, 1024×768 and 640×480.",
                "Both ICA and VNC were configured to use the native PDA resolution of 16-bit color depth.",
                "The current pTHINC prototype uses 24-bit color directly and the client downsamples updates to the 16-bit color depth available on the PDA.",
                "RDP was configured using only 8-bit color depth since it does not support any better color depth.",
                "Since both pTHINC and ICA provide the ability to view the display resized to fit the screen, we measured both clients with and without the display resized to fit the PDA screen.",
                "Each thin client was tested using landscape rather than portrait mode when available.",
                "All systems run on the X51v could run in landscape mode because the hardware provides a landscape mode feature.",
                "However, the X5 does not provide this functionality.",
                "Only pTHINC directly supports landscape mode, so it was the only system that could run in landscape mode on both the X5 and X51v.",
                "To provide a fair comparison, we also standardized on common hardware and operating systems whenever possible.",
                "All of the systems used the Netfinity server as the thin-client server.",
                "For the two systems designed for Windows servers, ICA and RDP, we ran Windows 2003 Server on the server.",
                "For the other systems which support X-based servers, VNC and pTHINC, we ran the Debian Linux Unstable distribution with the Linux 2.6.10 kernel on the server.",
                "We used the latest thin-client server versions available on each platform at the time of our experiments, namely Citrix MetaFrame XP Server for Windows Feature Release 3, Microsoft Remote Desktop built into Windows XP and Windows 2003 using RDP 5.2, and VNC 4.0. 4.2 Application Benchmarks We used two web application benchmarks for our experiments based on two common application scenarios, browsing web pages and playing video content from the web.",
                "Since many thin-client systems including two of the ones tested are closed and proprietary, we measured their performance in a noninvasive manner by capturing network traffic with a packet monitor and using a variant of slow-motion benchmarking [13] previously developed to measure thin-client performance in PDA environments [10].",
                "This measurement methodology accounts for both the display decoupling that can occur between client and server in thin-client systems as well as client processing time, which may be significant in the case of PDAs.",
                "To measure web browsing performance, we used a web browsing benchmark based on the Web Text Page Load Test from the Ziff-Davis i-Bench benchmark suite [7].",
                "The benchmark consists of JavaScript controlled load of 55 pages from the web server.",
                "The pages contain both text and graphics with pages varying in size.",
                "The graphics are embedded images in GIF and JPEG formats.",
                "The original i-Bench benchmark was modified for slow-motion benchmarking by introducing delays of several seconds between the pages using JavaScript.",
                "Then two tests were run, one where delays where added between each page, and one where pages where loaded continuously without waiting for them to be displayed on the client.",
                "In the first test, delays were sufficiently adjusted in each case to ensure that each page could be received and displayed on the client completely without temporal overlap in transferring the data belonging to two consecutive pages.",
                "We used the packet monitor to record the packet traffic for each run of the benchmark, then used the timestamps of the first and last packet in the trace to obtain our latency measures [10].",
                "The packet monitor also recorded the amount of data transmitted between the client and the server.",
                "The ratio between the data traffic in the two tests yields a scale factor.",
                "This scale factor shows the loss of data between the server and the client due to inability of the client to process the data quickly enough.",
                "The product of the scale factor with the latency measurement produces the true latency accounting for client processing time.",
                "To run the web browsing benchmark, we used Mozilla Firefox 1.0.4 running on the thin-client server for the thin clients, and Windows Internet Explorer (IE) Mobile for 2003 and Mobile for 5.0 for the native browsers on the X5 and X51v PDAs, respectively.",
                "In all cases, the web browser used was sized to fill the entire display region available.",
                "To measure video playback performance, we used a video benchmark that consisted of playing a 34.75s MPEG-1 video clip containing a mix of news and entertainment programming at full-screen resolution.",
                "The video clip is 5.11 MB and consists of 834 352x240 pixel frames with an ideal frame rate of 24 frames/sec.",
                "We measured video performance using slow-motion benchmarking by monitoring resulting packet traffic at two playback rates, 1 frames/second (fps) and 24 fps, and comparing the results to determine playback delays and frame drops that occur at 24 fps to measure overall video quality [13].",
                "For example, 100% quality means that all video frames were played at real-time speed.",
                "On the other hand, 50% quality could mean that half the video data was dropped, or that the clip took twice as long to play even though all of the video data was displayed.",
                "To run the video benchmark, we used Windows Media Player 9 for Windows-based thin-client servers, MPlayer 1.0 pre 6 for X-based thin-client servers, and Windows Media Player 9 Mobile and 10 Mobile for the native video players running locally on the X5 and X51v PDAs, respectively.",
                "In all cases, the video player used was sized to fill the entire display region available. 4.3 Measurements Figures 3 and 4 show the results of running the web brows148 0 1 10 100 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL Latency(s) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 3: Browsing Benchmark: Average Page Latency ing benchmark.",
                "For each platform, we show results for up to four different configurations, two on the X5 and two on the X51v, depending on whether each configuration was supported.",
                "However, not all platforms could support all configurations.",
                "The local browser only runs at the display resolution of the PDA, 480×680 or less for the X51v and the X5.",
                "RDP only runs at 640×480.",
                "Neither platform could support 1024×768 display resolution.",
                "ICA only ran on the X5 and could not run on the X51v because it did not work on Windows Mobile 5.",
                "Figure 3 shows the average latency per web page for each platform. pTHINC provides the lowest average web browsing latency on both PDAs.",
                "On the X5, pTHINC performs up to 70 times better than other thin-client systems and 8 times better than the local browser.",
                "On the X51v, pTHINC performs up to 80 times better than other thin-client systems and 7 times better than the native browser.",
                "In fact, all of the thin clients except VNC outperform the local PDA browser, demonstrating the performance benefits of the thin-client approach.",
                "Usability studies have shown that web pages should take less than one second to download for the user to experience an uninterrupted web browsing experience [14].",
                "The measurements show that only the thin clients deliver subsecond web page latencies.",
                "In contrast, the local browser requires more than 3 seconds on average per web page.",
                "The local browser performs worse since it needs to run a more limited web browser to process the HTML, JavaScript, and do all the rendering using the limited capabilities of the PDA.",
                "The thin clients can take advantage of faster server hardware and a highly tuned web browser to process the web content much faster.",
                "Figure 3 shows that RDP is the next fastest platform after pTHINC.",
                "However, RDP is only able to run at a fixed resolution of 640×480 and 8-bit color depth.",
                "Furthermore, RDP also clips the display to the size of the PDA screen so that it does not need to send updates that are not visible on the PDA screen.",
                "This provides a performance benefit assuming the remaining web content is not viewed, but degrades performance when a user scrolls around the display to view other web content.",
                "RDP achieves its performance with significantly lower display quality compared to the other thin clients and with additional display clipping not used by other systems.",
                "As a result, RDP performance alone does not provide a complete comparison with the other platforms.",
                "In contrast, pTHINC provides the fastest performance while at the same time providing equal or better display quality than the other systems. 0 1 10 100 1000 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL DataSize(KB) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 4: Browsing Benchmark: Average Page Data Transferred Since VNC and ICA provide similar display quality to pTHINC, these systems provide a more fair comparison of different thin-client approaches.",
                "ICA performs worse in part because it uses higher-level display primitives that require additional client processing costs.",
                "VNC performs worse in part because it loses display data due to its client-pull delivery mechanism and because of the client processing costs in decompressing raw pixel primitives.",
                "In both cases, their performance was limited in part because their PDA clients were unable to keep up with the rate at which web pages were being displayed.",
                "Figure 3 also shows measurements for those thin clients that support resizing the display to fit the PDA screen, namely ICA and pTHINC.",
                "Resizing requires additional processing, which results in slower average web page latencies.",
                "The measurements show that the additional delay incurred by ICA when resizing versus not resizing is much more substantial than for pTHINC.",
                "ICA performs resizing on the slower PDA client.",
                "In contrast, pTHINC leverage the more powerful server to do resizing, reducing the performance difference between resizing and not resizing.",
                "Unlike ICA, pTHINC is able to provide subsecond web page download latencies in both cases.",
                "Figure 4 shows the data transferred in KB per page when running the slow-motion version of the tests.",
                "All of the platforms have modest data transfer requirements of roughly 100 KB per page or less.",
                "This is well within the bandwidth capacity of Wi-Fi networks.",
                "The measurements show that the local browser does not transfer the least amount of data.",
                "This is surprising as HTML is often considered to be a very compact representation of content.",
                "Instead, RDP is the most bandwidth efficient platform, largely as a result of using only 8-bit color depth and screen clipping so that it does not transfer the entire web page to the client. pTHINC overall has the largest data requirements, slightly more than VNC.",
                "This is largely a result of the current pTHINC prototypes lack of native support for 16-bit color data in the wire protocol.",
                "However, this result also highlights pTHINCs performance as it is faster than all other systems even while transferring more data.",
                "Furthermore, as newer PDA models support full 24-bit color, these results indicate that pTHINC will continue to provide good web browsing performance.",
                "Since display usability and quality are as important as performance, Figures 5 to 8 compare screenshots of the different thin clients when displaying a web page, in this case from the popular BBC news website.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode 149 Figure 5: Browser Screenshot: RDP 640x480 Figure 6: Browser Screenshot: VNC 1024x768 Figure 7: Browser Screenshot: ICA Resized 1024x768 Figure 8: Browser Screenshot: pTHINC Resized 1024x768 using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "While the screenshots lack the visual fidelity of the actual device display, several observations can be made.",
                "Figure 5 shows that RDP does not support fullscreen mode and wastes lots of screen space for controls and UI elements, requiring the user to scroll around in order to access the full contents of the web browsing session.",
                "Figure 6 shows that VNC makes better use of the screen space and provides better display quality, but still forces the user to scroll around to view the web page due to its lack of resizing support.",
                "Figure 7 shows ICAs ability to display the full web page given its resizing support, but that its lack of landscape capability and poorer resize algorithm significantly compromise display quality.",
                "In contrast, Figure 8 shows pTHINC using resizing to provide a high quality fullscreen display of the full width of the web page. pTHINC maximizes the entire viewing region by moving all controls to the PDA buttons.",
                "In addition, pTHINC leverages the server computational power to use a high quality resizing algorithm to resize the display to fit the PDA screen without significant overhead.",
                "Figures 9 and 10 show the results of running the video playback benchmark.",
                "For each platform except ICA, we show results for an X5 and X51v configuration.",
                "ICA could not run on the X51v as noted earlier.",
                "The measurements were done using settings that reflected the environment a user would have to access a web session from both a desktop computer and a PDA.",
                "As such, a 1024×768 server display resolution was used whenever possible and the video was shown at fullscreen.",
                "RDP was limited to 640×480 display resolution as noted earlier.",
                "Since viewing the entire video display is the only really usable option, we resized the display to fit the PDA screen for those platforms that supported this feature, namely ICA and pTHINC.",
                "Figure 9 shows the video quality for each platform. pTHINC is the only thin client able to provide perfect video playback quality, similar to the native PDA video player.",
                "All of the other thin clients deliver very poor video quality.",
                "With the exception of RDP on the X51v which provided unacceptable 35% video quality, none of the other systems were even able to achieve 10% video quality.",
                "VNC and ICA have the worst quality at 8% on the X5 device. pTHINCs native video support enables superior video performance, while other thin clients suffer from their inability to distinguish video from normal display updates.",
                "They attempt to apply ineffective and expensive compression algorithms on the video data and are unable to keep up with the stream of updates generated, resulting in dropped frames or long playback times.",
                "VNC suffers further from its client-pull update model because video frames are generated faster than the rate at which the client can process and send requests to the server to obtain the next display update.",
                "Figure 10 shows the total data transferred during 150 0% 20% 40% 60% 80% 100% pTHINCICAVNCRDPLOCAL VideoQuality Platform Axim X5 Axim X51v Figure 9: Video Benchmark: Fullscreen Video Quality 0 1 10 100 pTHINCICAVNCRDPLOCAL VideoDataSize(MB) Platform Axim X5 Axim X51v Figure 10: Video Benchmark: Fullscreen Video Data video playback for each system.",
                "The native player is the most bandwidth efficient platform, sending less than 6 MB of data, which corresponds to about 1.2 Mbps of bandwidth. pTHINCs 100% video quality requires about 25 MB of data which corresponds to a bandwidth usage of less than 6 Mbps.",
                "While the other thin clients send less data than THINC, they do so because they are dropping video data, resulting in degraded video quality.",
                "Figures 11 to 14 compare screenshots of the different thin clients when displaying the video clip.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "Figures 11 and 12 show that RDP and VNC are unable to display the entire video frame on the PDA screen.",
                "RDP wastes screen space for UI elements and VNC only shows the top corner of the video frame on the screen.",
                "Figure 13 shows that ICA provides resizing to display the entire video frame, but did not proportionally resize the video data, resulting in strange display artifacts.",
                "In contrast, Figure 14 shows pTHINC using resizing to provide a high quality fullscreen display of the entire video frame. pTHINC provides visually more appealing video display than RDP, VNC, or ICA. 5.",
                "RELATED WORK Several studies have examined the web browsing performance of thin-client computing [13, 19, 10].",
                "The ability for thin clients to improve web browsing performance on wireless PDAs was first quantitatively demonstrated in a previous study by one of the authors [10].",
                "This study demonstrated that thin clients can provide both faster web browsing performance and greater web browsing functionality.",
                "The study considered a wide range of web content including content from medical information systems.",
                "Our work builds on this previous study and consider important issues such as how usable existing thin clients are in PDA environments, the trade-offs between thin-client usability and performance, performance across different PDA devices, and the performance of thin clients on common web-related applications such as video.",
                "Many thin clients have been developed and some have PDA clients, including Microsofts Remote Desktop [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5], and Tarantella [18].",
                "These systems were first designed for desktop computing and retrofitted for PDAs.",
                "Unlike pTHINC, they do not address key system architecture and usability issues important for PDAs.",
                "This limits their display quality, system performance, available screen space, and overall usability on PDAs. pTHINC builds on previous work by two of the authors on THINC [1], extending the server architecture and introducing a client interface and usage model to efficiently support PDA devices for mobile web applications.",
                "Other approaches to improve the performance of mobile wireless web browsing have focused on using transcoding and caching proxies in conjunction with the fat client model [11, 9, 4, 8].",
                "They work by pushing functionality to external proxies, and using specialized browsing applications on the PDA device that communicate with the proxy.",
                "Our thinclient approach differs fundamentally from these fat-client approaches by pushing all web browser logic to the server, leveraging existing investments in desktop web browsers and helper applications to work seamlessly with production systems without any additional proxy configuration or web browser modifications.",
                "With the emergence of web browsing on small display devices, web sites have been redesigned using mechanisms like WAP and specialized native web browsers have been developed to tailor the needs of these devices.",
                "Recently, Opera has developed the Opera Mini [15] web browser, which uses an approach similar to the thin-client model to provide access across a number of mobile devices that would normally be incapable of running a web browser.",
                "Instead of requiring the device to process web pages, it uses a remote server to pre-process the page before sending it to the phone. 6.",
                "CONCLUSIONS We have introduced pTHINC, a thin-client architecture for wireless PDAs. pTHINC provides key architectural and usability mechanisms such as server-side screen resizing, clientside screen rotation using simple copy techniques, YUV video support, and maximizing screen space for display updates and leveraging existing PDA control buttons for UI elements. pTHINC transparently supports traditional desktop browsers and their helper applications on PDA devices and desktop machines, providing mobile users with ubiquitous access to a consistent, personalized, and full-featured web environment across heterogeneous devices.",
                "We have implemented pTHINC and measured its performance on web applications compared to existing thin-client systems and native web applications.",
                "Our results on multiple mobile wireless devices demonstrate that pTHINC delivers web browsing performance up to 80 times better than existing thin-client systems, and 8 times better than a native PDA browser.",
                "In addition, pTHINC is the only PDA thin client 151 Figure 11: Video Screenshot: RDP 640x480 Figure 12: Video Screenshot: VNC 1024x768 Figure 13: Video Screenshot: ICA Resized 1024x768 Figure 14: Video Screenshot: pTHINC Resized 1024x768 that transparently provides full-screen, full frame rate video playback, making web sites with multimedia content accessible to mobile web users. 7.",
                "ACKNOWLEDGEMENTS This work was supported in part by NSF ITR grants CCR0219943 and CNS-0426623, and an IBM SUR Award. 8.",
                "REFERENCES [1] R. Baratto, L. Kim, and J. Nieh.",
                "THINC: A Virtual Display Architecture for Thin-Client Computing.",
                "In Proceedings of the 20th ACM Symposium on Operating Systems Principles (SOSP), Oct. 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius, and A. Muir.",
                "Microsoft Windows NT Server 4.0, Terminal Server Edition: Technical Reference.",
                "Microsoft Press, Redmond, WA, 1999. [4] A.",
                "Fox, I. Goldberg, S. D. Gribble, and D. C. Lee.",
                "Experience With Top Gun Wingman: A Proxy-Based Graphical Web Browser for the 3Com PalmPilot.",
                "In Proceedings of Middleware 98, Lake District, England, September 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Health Insurance Portability and Accountability Act. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench version 1.5. http: //etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi.",
                "On proxy agents, mobility, and web access.",
                "Mobile Networks and Applications, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon, and A. Ortega.",
                "Design and Implementation of a Soft Caching Proxy.",
                "Computer Networks and ISDN Systems, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana, and S. Varshneya.",
                "Improving Web Browsing on Wireless PDAs Using Thin-Client Computing.",
                "In Proceedings of the 13th International World Wide Web Conference (WWW), May 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham, and P. Shenoy.",
                "TranSquid: Transcoding and caching proxy for heterogenous ecommerce environments.",
                "In Proceedings of the 12th IEEE Workshop on Research Issues in Data Engineering (RIDE 02), Feb. 2002. [12] .NET VNC Viewer for PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang, and N. Novik.",
                "Measuring Thin-Client Performance Using Slow-Motion Benchmarking.",
                "ACM Trans.",
                "Computer Systems, 21(1):87-115, Feb. 2003. [14] J. Nielsen.",
                "Designing Web Usability.",
                "New Riders Publishing, Indianapolis, IN, 2000. [15] Opera Mini Browser. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood, and A. Hopper.",
                "Virtual Network Computing.",
                "IEEE Internet Computing, 2(1), Jan./Feb. 1998. [17] R. W. Scheifler and J. Gettys.",
                "The X Window System.",
                "ACM Trans.",
                "Gr., 5(2):79-106, Apr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla, and M. Sajjadpour.",
                "Web Browsing Performance of Wireless Thin-Client Computing.",
                "In Proceedings of the 12th International World Wide Web Conference (WWW), May 2003. 152"
            ],
            "original_annotated_samples": [
                "We have developed pTHINC, a <br>pda thinclient solution</br> that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide high-fidelity display and seamless mobility across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available screen resolution for application display."
            ],
            "translated_annotated_samples": [
                "Hemos desarrollado pTHINC, una solución de <br>cliente ligero PDA</br> que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y movilidad fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la resolución de pantalla disponible para la visualización de aplicaciones."
            ],
            "translated_text": "pTHINC: Una arquitectura de cliente ligero para la web inalámbrica móvil Joeng Kim, Ricardo A. Baratto y Jason Nieh Departamento de Ciencias de la Computación Universidad de Columbia, Nueva York, NY, EE. UU. {jk2438, ricardo, nieh}@cs.columbia.edu RESUMEN Aunque las aplicaciones web están ganando popularidad en las PDAs inalámbricas móviles, los navegadores web en estos sistemas pueden ser bastante lentos y a menudo carecen de funcionalidad adecuada para acceder a muchos sitios web. Hemos desarrollado pTHINC, una solución de <br>cliente ligero PDA</br> que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y movilidad fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la resolución de pantalla disponible para la visualización de aplicaciones. Hemos implementado pTHINC en Windows Mobile y evaluado su rendimiento en dispositivos móviles inalámbricos. Nuestros resultados comparados con los navegadores web PDA locales y otros enfoques de cliente ligero demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero PDA que soporta de manera efectiva aplicaciones de ayuda del navegador cruciales como la reproducción de video. Categorías y Descriptores de Asunto: C.2.4 Comunicación de Computadoras-Redes: Sistemas Distribuidos - cliente/servidor Términos Generales: Diseño, Experimentación, Rendimiento 1. La creciente ubicuidad de las redes inalámbricas y la disminución del costo del hardware están impulsando una proliferación de dispositivos móviles inalámbricos portátiles, tanto como asistentes digitales personales (PDA) inalámbricos independientes y dispositivos populares integrados de PDA/teléfono celular. Estos dispositivos están permitiendo nuevas formas de computación y comunicación móvil. Los proveedores de servicios están aprovechando estos dispositivos para ofrecer acceso web omnipresente, y los usuarios de la web móvil a menudo ya utilizan estos dispositivos para acceder a información habilitada para la web, como noticias, correo electrónico, guías de viaje localizadas y mapas. Es probable que en unos pocos años, la mayoría de los dispositivos que accedan a la web sean móviles. Los usuarios suelen acceder al contenido web ejecutando un navegador web y aplicaciones auxiliares asociadas localmente en la PDA. Aunque existen navegadores web nativos para PDAs, ofrecen un rendimiento deficiente y tienen un conjunto de funciones mucho más pequeño y una funcionalidad más limitada que sus contrapartes de computadoras de escritorio [10]. Como resultado, los navegadores web de PDA a menudo no pueden mostrar el contenido web de sitios web que utilizan tecnologías web más avanzadas para ofrecer una experiencia web más rica. Este problema fundamental surge por dos razones. Primero, debido a que las PDAs tienen un entorno de hardware/software completamente diferente de las computadoras de escritorio tradicionales, las aplicaciones web necesitan ser reescritas y personalizadas para las PDAs si es posible, duplicando los costos de desarrollo. Debido a que el mercado de aplicaciones de escritorio es más grande y maduro, la mayoría del esfuerzo de desarrollo generalmente se destina a las aplicaciones de escritorio, lo que resulta en una mayor funcionalidad y rendimiento que sus contrapartes de PDA. En segundo lugar, las PDAs tienen un entorno con recursos más limitados que las computadoras de escritorio tradicionales para ofrecer un factor de forma más pequeño y una vida útil de la batería más larga. Los navegadores web de escritorio son aplicaciones grandes y complejas que no pueden ejecutarse en una PDA. En cambio, los desarrolladores se ven obligados a reducir significativamente estas navegadores web para ofrecer un navegador web PDA utilizable, lo que limita la funcionalidad del navegador PDA. La computación de cliente ligero proporciona un enfoque alternativo para habilitar el acceso web ubicuo desde dispositivos móviles. Un sistema informático de cliente ligero consiste en un servidor y un cliente que se comunican a través de una red utilizando un protocolo de visualización remota. El protocolo permite que las pantallas gráficas se virtualicen y se sirvan a través de una red a un dispositivo cliente, mientras que la lógica de la aplicación se ejecuta en el servidor. Usando el protocolo de visualización remota, el cliente transmite la entrada del usuario al servidor, y el servidor devuelve actualizaciones de pantalla de las aplicaciones del servidor al cliente. Utilizando un modelo de cliente ligero para dispositivos móviles de mano, las PDAs pueden convertirse en clientes simples sin estado que aprovechan las capacidades del servidor remoto para ejecutar navegadores web y otras aplicaciones auxiliares. El modelo de cliente ligero proporciona varios beneficios importantes para la web inalámbrica móvil. Primero, las aplicaciones web estándar de escritorio pueden utilizarse para entregar contenido web a PDAs sin necesidad de reescribir o adaptar las aplicaciones para ejecutarse en una PDA, lo que reduce los costos de desarrollo y aprovecha las inversiones existentes en software. Segundo, las aplicaciones web complejas pueden ejecutarse en servidores potentes en lugar de ejecutarse en versiones simplificadas en PDAs con recursos más limitados, lo que proporciona una mayor funcionalidad y un mejor rendimiento [10]. Tercero, las aplicaciones web pueden aprovechar servidores con redes más rápidas y mejor conectividad, lo que mejora aún más el rendimiento de la aplicación. En cuarto lugar, las PDAs pueden ser dispositivos aún más simples ya que no necesitan realizar una lógica de aplicación compleja, lo que potencialmente reduce el consumo de energía y extiende la vida útil de la batería. Finalmente, los clientes ligeros PDA pueden ser dispositivos prácticamente sin estado que no necesitan ser respaldados o restaurados, requieren casi ningún mantenimiento o actualizaciones, y no almacenan datos sensibles que puedan perderse o ser robados. Este modelo proporciona una vía viable para que las organizaciones médicas cumplan con las regulaciones de HIPAA mientras incorporan dispositivos móviles en sus operaciones diarias. A pesar de estas posibles ventajas, los clientes ligeros no han podido ofrecer la gama completa de estos beneficios al entregar aplicaciones web a dispositivos móviles portátiles. Los thin clients existentes no fueron diseñados para PDAs y no tienen en cuenta problemas importantes de usabilidad en el contexto de dispositivos de factor de forma pequeño, lo que resulta en dificultades para navegar por el contenido web mostrado. Además, los clientes ligeros existentes son ineficaces para proporcionar movilidad fluida en la mezcla heterogénea de tamaños de pantalla y resoluciones de dispositivos. Si bien los clientes ligeros existentes ya pueden ofrecer un rendimiento más rápido que los navegadores web nativos de PDA al entregar contenido web HTML, no admiten de manera efectiva aplicaciones web auxiliares más intensivas en visualización, como videos multimedia, que cada vez son una parte integral del contenido web disponible. Para aprovechar todo el potencial de la informática de cliente ligero en la provisión de la web inalámbrica móvil en PDAs, hemos desarrollado pTHINC (PDA THin-client InterNet Computing). pTHINC se basa en nuestro trabajo previo en THINC [1] para proporcionar una arquitectura de cliente ligero para dispositivos móviles de mano. pTHINC virtualiza y redimensiona la pantalla en el servidor para entregar de manera eficiente actualizaciones de pantalla de alta fidelidad a una amplia gama de clientes diferentes, tamaños de pantalla y orientaciones de pantalla, incluidos los modos de visualización en vertical y horizontal. Esto permite a pTHINC proporcionar la misma sesión web persistente en diferentes dispositivos de cliente. Por ejemplo, pTHINC puede proporcionar la misma sesión de navegación web adecuadamente escalada para su visualización en una computadora de escritorio y una PDA, de modo que las mismas cookies, marcadores y otros metadatos estén disponibles continuamente en ambas máquinas simultáneamente. El enfoque de visualización virtual de pTHINC aprovecha la información semántica disponible en los comandos de visualización y el hardware de video del cliente para proporcionar mecanismos de visualización remota más eficientes que son cruciales para admitir aplicaciones web más intensivas en visualización. Dada la limitada resolución de pantalla en las PDA, pTHINC maximiza el uso del espacio de pantalla para la visualización remota al trasladar la funcionalidad de control de la pantalla a los botones de control de PDA fácilmente disponibles, mejorando la usabilidad del sistema. Hemos implementado pTHINC en Windows Mobile y demostrado que funciona de manera transparente con las aplicaciones existentes, sistemas de ventanas y sistemas operativos, y no requiere modificar, recompilar o volver a enlazar el software existente. Hemos evaluado cuantitativamente pTHINC frente a navegadores web PDA locales y otros enfoques de cliente ligero en dispositivos Pocket PC. Nuestros resultados experimentales demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero de PDA que soporta de manera efectiva aplicaciones esenciales de ayuda para el navegador, como la reproducción de video. Este documento presenta el diseño e implementación de pTHINC. La sección 2 describe el modelo de uso general y las características de usabilidad de pTHINC. La sección 3 presenta el diseño y la arquitectura del sistema de pTHINC. La sección 4 presenta resultados experimentales que miden el rendimiento de pTHINC en aplicaciones web y lo comparan con navegadores nativos de PDA y otros sistemas de cliente ligero de PDA populares. La sección 5 discute el trabajo relacionado. Finalmente, presentamos algunas observaciones finales. El MODELO DE USO DE pTHINC pTHINC es un sistema de cliente ligero que consiste en una aplicación de visualización de cliente simple que se ejecuta en la PDA y un servidor que se ejecuta en una PC estándar. El servidor aprovecha PCs más potentes para ejecutar navegadores web y otra lógica de aplicaciones. El cliente recibe la entrada del usuario desde el lápiz óptico y el teclado virtual de la PDA y los envía al servidor para pasarlos a las aplicaciones. Las actualizaciones de la pantalla son luego enviadas desde el servidor al cliente para mostrar al usuario. Cuando se inicia el cliente PDA pTHINC, se presenta al usuario una interfaz gráfica simple donde se pueden proporcionar información como la dirección y el puerto del servidor, la información de autenticación del usuario y la configuración de la sesión. pTHINC primero intenta conectarse al servidor y realizar el saludo necesario. Una vez que este proceso haya sido completado, pTHINC presenta al usuario la visualización más reciente de su sesión. Si la sesión no existe, se crea una nueva sesión. Las sesiones existentes pueden continuar sin problemas sin cambios en la configuración de la sesión o del servidor. A diferencia de otros sistemas de cliente ligero, pTHINC proporciona a un usuario un modelo de sesión web persistente en el que un usuario puede iniciar una sesión ejecutando un navegador web y aplicaciones asociadas en el servidor, luego desconectarse de esa sesión y volver a conectarse en cualquier momento. Cuando un usuario se reconecta a la sesión, todas las aplicaciones siguen funcionando desde donde el usuario las dejó, de modo que el usuario puede seguir trabajando como si nunca se hubiera desconectado. La capacidad de desconectarse y reconectarse a una sesión en cualquier momento es un beneficio importante para los usuarios de PDA inalámbricas móviles que pueden tener conectividad de red intermitente. El modelo de sesión web persistente de pTHINCs permite a un usuario reconectarse a una sesión web desde dispositivos distintos al que se inició originalmente la sesión web. Esto proporciona a los usuarios una movilidad fluida entre diferentes dispositivos. Si un usuario pierde su PDA, puede fácilmente usar otra PDA para acceder a su sesión web. Además, pTHINC permite a los usuarios utilizar dispositivos que no son PDA para acceder a sesiones web también. Un usuario puede acceder a la misma sesión web persistente en una PC de escritorio como en una PDA, lo que le permite al usuario utilizar la misma sesión web desde cualquier computadora. El modelo de sesión web persistente de pTHINCs aborda un problema clave encontrado por los usuarios de la web móvil, la falta de un entorno web común en diferentes computadoras. Los navegadores web a menudo almacenan información importante como marcadores, cookies e historial, lo que les permite funcionar de una manera mucho más útil. El problema que ocurre cuando un usuario se mueve entre computadoras es que estos datos, específicos de una instalación de un navegador web, no pueden moverse con el usuario. Además, los navegadores web a menudo necesitan aplicaciones auxiliares para procesar diferentes contenidos multimedia, y esas aplicaciones pueden no estar disponibles de manera consistente en todas las computadoras. pTHINC aborda este problema al permitir que un usuario utilice de forma remota el mismo entorno de navegador web y aplicaciones auxiliares desde cualquier computadora. Como resultado, pTHINC puede proporcionar un entorno de navegación web común y consistente para usuarios móviles en diferentes dispositivos sin requerirles intentar sincronizar repetidamente diferentes entornos de navegación web en múltiples máquinas. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC debe proporcionar mecanismos para admitir diferentes tamaños de pantalla y resoluciones. Con este fin, pTHINC proporciona una función de zoom que permite a un usuario acercar y alejar una pantalla y permite que la pantalla de una sesión web 144 Figura 1: teclas de acceso rápido de pTHINC se redimensione para adaptarse a la pantalla del dispositivo que se está utilizando. Por ejemplo, si el servidor está ejecutando una sesión web a 1024×768 pero el cliente es una PDA con una resolución de pantalla de 640×480, pTHINC redimensionará la pantalla del escritorio para que se ajuste a la pantalla más pequeña de la PDA. pTHINC proporciona al usuario de la PDA la opción de aumentar el tamaño de la pantalla haciendo zoom en diferentes partes de la pantalla. Los usuarios suelen estar familiarizados con el diseño general de los sitios web que visitan con frecuencia, y pueden aprovechar esta función de redimensionamiento para navegar mejor por las páginas web. Por ejemplo, un usuario puede alejarse de la pantalla para ver todo el contenido de la página y navegar por los hipervínculos, luego acercarse a una región de interés para obtener una mejor vista. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC también debe proporcionar mecanismos para admitir diferentes orientaciones de pantalla. En un entorno de escritorio, los usuarios suelen estar acostumbrados a tener las pantallas presentadas en modo horizontal, donde el ancho de la pantalla es mayor que su altura. Sin embargo, en un entorno de PDA, la elección no siempre es obvia. Algunos usuarios pueden preferir tener la pantalla en modo retrato, ya que es más fácil sostener el dispositivo en sus manos, mientras que otros pueden preferir el modo paisaje para minimizar la cantidad de desplazamiento lateral necesario para ver una página web. Para adaptarse a las preferencias de los usuarios de PDA, pTHINC proporciona una función de orientación que le permite rotar la pantalla de forma fluida entre el modo horizontal y vertical. El modo de paisaje es particularmente útil para los usuarios de pTHINC que acceden con frecuencia a sus sesiones web tanto en dispositivos de escritorio como en PDA, proporcionando a esos usuarios el mismo ajuste de paisaje familiar en diferentes dispositivos. Dado que el espacio de pantalla es un recurso relativamente escaso en las PDAs, pTHINC se ejecuta en modo de pantalla completa para maximizar el área de pantalla disponible para mostrar la sesión web. Para poder utilizar toda la pantalla en la PDA y aún así permitir al usuario controlar e interactuar con ella, pTHINC reutiliza los botones de acceso directo típicos que se encuentran en las PDAs para realizar todas las funciones de control disponibles para el usuario. Los botones utilizados por pTHINC no requieren ningún cambio en el entorno del sistema operativo; simplemente son interceptados por la aplicación cliente de pTHINC cuando se presionan. La Figura 1 muestra cómo pTHINC utiliza los botones de acceso directo para proporcionar una navegación sencilla y mejorar la experiencia del usuario en general. Estos botones no son específicos del dispositivo, y el diseño mostrado es común en dispositivos PocketPC ampliamente utilizados. pTHINC proporciona seis accesos directos para apoyar su modelo de uso: • Rotar pantalla: El botón de grabación en el borde izquierdo se utiliza para rotar la pantalla entre modo retrato y modo paisaje cada vez que se presiona el botón. • Alejar: El botón más a la izquierda en la parte inferior delantera se utiliza para alejar la visualización de la sesión web proporcionando una vista general de la sesión web. • Acercar: El segundo botón más a la izquierda en la parte inferior delantera se utiliza para acercar la visualización de la sesión web para ver más claramente el contenido de interés. • Desplazamiento direccional: El botón central en la parte inferior delantera se utiliza para desplazarse alrededor de la visualización utilizando un solo botón de control de una manera que ya es familiar para los usuarios de PDA. Esta función es particularmente útil cuando el usuario ha ampliado una región de la pantalla de tal manera que solo una parte de la pantalla es visible en la pantalla. • Mostrar/Ocultar Teclado: El segundo botón más a la derecha en la parte inferior frontal se utiliza para mostrar un teclado virtual dibujado en la pantalla para dispositivos que no tienen teclado físico. El teclado virtual utiliza mecanismos estándar del sistema operativo de PDA, proporcionando portabilidad entre diferentes entornos de PDA. • Cerrar sesión: El botón más a la derecha en la parte inferior frontal se utiliza para desconectarse de la sesión de pTHINC. pTHINC utiliza la pantalla táctil de la PDA, el lápiz óptico y mecanismos estándar de interfaz de usuario para proporcionar una metáfora de punto y clic de la interfaz de usuario similar a la proporcionada por el ratón en un entorno de computación de escritorio tradicional. pTHINC no utiliza un cursor ya que los entornos de PDA no lo proporcionan. En cambio, un usuario puede usar el lápiz táctil para tocar diferentes secciones de la pantalla táctil y señalar el enfoque de entrada. Un toque único en la pantalla táctil genera un evento de clic de ratón correspondiente. Un doble toque en la pantalla táctil genera un evento de doble clic del ratón correspondiente. pTHINC proporciona emulación de ratón de dos botones al usar el lápiz óptico para presionar la pantalla durante un segundo y generar un clic derecho del ratón. Todas estas acciones son idénticas a la forma en que los usuarios ya interactúan con las aplicaciones de PDA en el entorno común de PocketPC. En la navegación web, los usuarios pueden hacer clic en hipervínculos y enfocarse en cuadros de entrada simplemente tocando el área de interés deseada en la pantalla. A diferencia de los navegadores web PDA locales y otras aplicaciones PDA, pTHINC aprovecha metáforas de interfaz de usuario de escritorio más potentes para permitir a los usuarios manipular múltiples ventanas de aplicación abiertas en lugar de estar limitados a una sola ventana de aplicación en un momento dado. Esto proporciona una mayor flexibilidad de navegación más allá de lo que está actualmente disponible en los dispositivos PDA. Similar a un entorno de escritorio, las ventanas del navegador y otras ventanas de aplicaciones pueden ser movidas al presionar y arrastrar el lápiz óptico de manera similar a un ratón. 3. La arquitectura del sistema pTHINC se basa en la arquitectura de visualización remota THINC para proporcionar un sistema de cliente ligero para PDAs. pTHINC virtualiza la visualización en el servidor aprovechando la capa de abstracción del dispositivo de video, que se encuentra por debajo del servidor de ventanas y por encima del framebuffer. Este es un nivel de dispositivo bien definido y de bajo nivel que depende del dispositivo y expone el hardware de video al sistema de visualización. pTHINC logra esto a través de un controlador de pantalla virtual simple que intercepta comandos de dibujo, los empaqueta y los envía a través de la red. Mientras que otros enfoques de cliente ligero interceptan comandos de visualización en otras capas del subsistema de visualización, el enfoque de virtualización de pantalla de pTHINC proporciona algunos beneficios clave para admitir eficientemente a los clientes de PDA. Por ejemplo, interceptar comandos de visualización en una capa superior entre aplicaciones y el sistema de ventanas, como se hace en X [17], requiere replicar y ejecutar una gran cantidad de funcionalidades en la PDA que tradicionalmente son proporcionadas por el sistema de ventanas de escritorio. Dada la magnitud y complejidad de los sistemas de ventanas tradicionales, intentar replicar esta funcionalidad en el entorno restringido de una PDA habría resultado ser una tarea desafiante, y quizás inviable. Además, las aplicaciones y el sistema de ventanas a menudo requieren una sincronización precisa en su funcionamiento, y imponer una red inalámbrica entre ellos al ejecutar las aplicaciones en el servidor y el sistema de ventanas en el cliente degradaría significativamente el rendimiento. Por otro lado, interceptar en una capa inferior extrayendo píxeles del framebuffer a medida que se renderizan proporciona una solución simple que requiere muy poca funcionalidad en el cliente de PDA, pero también puede resultar en un rendimiento degradado. La razón es que para cuando el servidor de visualización remota intenta enviar actualizaciones de pantalla, ha perdido toda la información semántica que podría haberle ayudado a codificar de manera eficiente, y debe recurrir a utilizar un mecanismo de codificación genérico y costoso en el servidor, así como un mecanismo de decodificación potencialmente costoso en el cliente de PDA limitado. A diferencia de los enfoques de intercepción de alto y bajo nivel, el enfoque de pTHINCs de interceptar en el controlador del dispositivo proporciona un equilibrio efectivo entre la simplicidad del cliente y del servidor, y la capacidad de codificar y decodificar de manera eficiente las actualizaciones de pantalla. Al utilizar un enfoque de visualización virtual de bajo nivel, pTHINC puede codificar de manera eficiente los comandos de visualización de la aplicación utilizando solo un pequeño conjunto de comandos de bajo nivel. En un entorno de PDA, este conjunto de comandos proporciona un componente crucial para mantener la simplicidad del cliente en el entorno de PDA con recursos limitados. Los comandos de visualización se muestran en la Tabla 1 y funcionan de la siguiente manera. COPY instruye al cliente a copiar una región de la pantalla desde su framebuffer local a otra ubicación. Este comando mejora la experiencia del usuario al acelerar el desplazamiento y el movimiento de ventanas opacas sin necesidad de reenviar datos de pantalla desde el servidor. SFILL, PFILL y BITMAP son comandos que pintan una región de tamaño fijo en la pantalla. Son útiles para acelerar la visualización de fondos de ventanas sólidas, patrones de escritorio, fondos de páginas web, dibujo de texto y ciertas operaciones en programas de manipulación de gráficos. SFILL llena una región considerable en la pantalla con un solo color. PFILL replica una baldosa sobre una región de la pantalla. BITMAP realiza un relleno utilizando un mapa de bits de unos y ceros como un estipulado para aplicar un color de primer plano y de fondo. Finalmente, RAW se utiliza para transmitir datos de píxeles no codificados que se mostrarán textualmente en una región de la pantalla. Este comando se invoca como último recurso si el servidor no puede emplear ningún otro comando, y es el único comando que puede ser comprimido para mitigar su impacto en el ancho de banda de la red. pTHINC entrega sus comandos utilizando un mecanismo de actualización de servidor-push no bloqueante, donde tan pronto como se generan actualizaciones de pantalla en el servidor, se envían al cliente. Los clientes no están obligados a solicitar explícitamente actualizaciones de pantalla, minimizando así el impacto que la típica variabilidad de la latencia de la red inalámbrica puede tener en la capacidad de respuesta del sistema. Teniendo en cuenta que los recursos Descripción de Comando COPY Copiar un área de búfer de fotogramas en coordenadas especificadas SFILL Rellenar un área con un valor de color de píxel dado PFILL Azulejar un área con un patrón de píxeles dado BITMAP Rellenar una región usando un patrón de bits RAW Mostrar datos de píxeles en bruto en una ubicación dada Tabla 1: Comandos de visualización del protocolo pTHINC. Las PDAs y las redes inalámbricas limitadas pueden no ser capaces de mantenerse al día con un servidor rápido que genera una gran cantidad de actualizaciones, pTHINC es capaz de fusionar, recortar y descartar actualizaciones automáticamente si se produce pérdida o congestión de red, o si el cliente no puede mantenerse al día con la velocidad de las actualizaciones. Este tipo de comportamiento resulta crucial en un entorno de navegación web, donde por ejemplo, una página puede ser redibujada varias veces mientras se renderiza al vuelo por el navegador. En este caso, la PDA solo recibirá y mostrará el resultado final, que claramente es todo lo que al usuario le interesa ver. pTHINC prioriza la entrega de actualizaciones a la PDA utilizando un programador de actualizaciones preemptivo de Tamaño Restante Más Corto Primero (SRSF). SRSF es análogo a la programación de Tiempo de Procesamiento Restante más Corto, la cual se sabe que es óptima para minimizar el tiempo medio de respuesta en un sistema interactivo. En un entorno de navegación web, los trabajos cortos están asociados con el texto y los componentes básicos de diseño de página, como el fondo de las páginas, que son contenido web crítico para el usuario. Por otro lado, los trabajos grandes suelen ser elementos de embellecimiento de menor prioridad, o, incluso peor, banners y anuncios de página web, los cuales tienen un valor cuestionable para el usuario mientras navega por la página. Usando SRSF, pTHINC puede maximizar la utilización del ancho de banda relativamente escaso disponible en la conexión inalámbrica entre la PDA y el servidor. 3.1 Gestión de la Pantalla Para permitir a los usuarios acceder con la misma facilidad a su navegador web y aplicaciones auxiliares desde una computadora de escritorio en casa como desde una PDA mientras están en movimiento, pTHINC proporciona un mecanismo de redimensionamiento para hacer zoom dentro y fuera de la pantalla de una sesión web. El redimensionamiento de pTHINC es completamente compatible con el servidor, no con el cliente. El servidor vuelve a muestrear las actualizaciones para que se ajusten al área de visualización de las PDAs antes de ser transmitidas por la red. pTHINC utiliza el algoritmo de remuestreo de Fants para redimensionar las actualizaciones de píxeles. Esto proporciona actualizaciones suaves y visualmente agradables con un antialiasing adecuado y solo requiere modestos recursos computacionales. El enfoque de redimensionamiento de pTHINCs tiene varias ventajas. Primero, permite al PDA aprovechar la vastamente superior potencia computacional del servidor para utilizar algoritmos de re-muestreo de alta calidad y producir actualizaciones de mayor calidad para que el PDA las muestre. Segundo, cambiar el tamaño de la pantalla no se traduce en requisitos adicionales de recursos para la PDA, ya que no necesita realizar ningún trabajo adicional. Finalmente, se logra una mejor utilización de la red inalámbrica ya que al reescalar las actualizaciones se reducen sus requisitos de ancho de banda. Para permitir a los usuarios orientar sus pantallas en una PDA y así proporcionar una experiencia visual que se ajuste mejor a las preferencias del usuario y al diseño de páginas web o aplicaciones, pTHINC proporciona un mecanismo de rotación de pantalla para alternar entre los modos de visualización horizontal y vertical. La rotación de pantalla de pTHINC es completamente compatible con el cliente, no con el servidor. pTHINC no recalcula explícitamente la geometría de las actualizaciones de pantalla para realizar la rotación, lo cual sería computacionalmente costoso. En cambio, pTHINC simplemente cambia la forma en que los datos se copian en el framebuffer para cambiar entre los modos de visualización. Cuando está en modo retrato, los datos se copian a lo largo de las filas del framebuffer de izquierda a derecha. Cuando se encuentra en modo horizontal, los datos se copian a lo largo de las columnas del framebuffer de arriba hacia abajo. Estas técnicas muy rápidas y simples reemplazan un conjunto de operaciones de copia por otro y no imponen ningún sobrecosto de rendimiento. pTHINC proporciona su propio mecanismo de rotación para soportar una amplia gama de dispositivos sin imponer requisitos adicionales de funciones en la PDA. Aunque algunos dispositivos PDA más nuevos ofrecen soporte nativo para diferentes orientaciones, este mecanismo no es dinámico y requiere que el usuario rote toda la interfaz de usuario de la PDA antes de iniciar el cliente pTHINC. Windows Mobile proporciona mecanismos de API nativos para que las aplicaciones de PDA puedan rotar su interfaz de usuario sobre la marcha, pero estos mecanismos ofrecen un rendimiento deficiente y una calidad de visualización baja, ya que la rotación se realiza de manera ingenua y no es completamente precisa. 3.2 Reproducción de video El video se ha convertido gradualmente en una parte integral de la World Wide Web, y su presencia solo seguirá aumentando. Los sitios web de hoy en día no solo utilizan gráficos animados y flash para presentar el contenido web de manera atractiva, sino que también utilizan video en streaming para enriquecer la interfaz web. Los usuarios pueden ver noticias pregrabadas y en vivo en CNN, ver los momentos más destacados deportivos en ESPN e incluso buscar a través de una gran colección de videos en Google Video. Para permitir que las aplicaciones proporcionen una reproducción de video eficiente, se han creado interfaces en los sistemas de visualización que permiten a los controladores de dispositivos de video exponer sus capacidades de hardware a las aplicaciones. pTHINC aprovecha estas interfaces y su enfoque de controlador de dispositivo virtual para proporcionar un puente virtual entre el cliente remoto y su hardware y las aplicaciones, y admitir de manera transparente la reproducción de video. Sobre esta arquitectura, pTHINC utiliza el espacio de color YUV para codificar el contenido de video, lo cual proporciona una serie de beneficios. Primero, se ha vuelto cada vez más común que el hardware de video de las PDA admita nativamente YUV y pueda realizar la conversión del espacio de color y el escalado automáticamente. Como resultado, pTHINC puede proporcionar reproducción de video a pantalla completa sin afectar el rendimiento. Segundo, el uso de YUV permite una representación más eficiente de los datos RGB sin pérdida de calidad, aprovechando la capacidad de los ojos humanos para distinguir mejor las diferencias en brillo que en color. En particular, pTHINC utiliza el formato YV12, que permite codificar datos de color RGB completo utilizando solo 12 bits por píxel. Tercero, los datos YUV se producen como uno de los últimos pasos del proceso de decodificación de la mayoría de los códecs de video, lo que permite a pTHINC proporcionar la reproducción de video de una manera independiente del formato. Finalmente, aunque el hardware de video de las PDAs no pueda acelerar la reproducción, el proceso de conversión de espacio de color es lo suficientemente simple como para no imponer requisitos poco razonables en la PDA. Un ejemplo más concreto de cómo pTHINC aprovecha el hardware de video PDA para admitir la reproducción de video se puede ver en nuestra implementación de prototipo en la popular PDA Dell Axim X51v, que está equipada con el acelerador multimedia Intel 2700G. En este caso, pTHINC crea un búfer fuera de pantalla en la memoria de video y escribe y lee desde esta región de memoria datos en formato YV12. Cuando llega un nuevo fotograma de video, los datos de video se copian desde el búfer a una superficie superpuesta en la memoria de video, que es independiente de la superficie normal utilizada para el dibujo tradicional. A medida que los datos YV12 se colocan en la superposición, el acelerador de Intel realiza automáticamente la conversión de espacio de color y el escalado. Al utilizar la superficie de superposición, pTHINC no necesita volver a dibujar la pantalla una vez que la reproducción de video ha terminado, ya que la superficie superpuesta no se ve afectada. Además, las regiones de superposición específicas pueden ser manipuladas aprovechando el hardware de video, por ejemplo, para realizar interpolación lineal de hardware y suavizar el fotograma para mostrarlo a pantalla completa, y para realizar rotación automática cuando el cliente se ejecuta en modo horizontal. 4. RESULTADOS EXPERIMENTALES Hemos implementado un prototipo de pTHINC que ejecuta el cliente en dispositivos Pocket PC basados en Windows Mobile ampliamente utilizados y el servidor en sistemas operativos tanto Windows como Linux. Para demostrar su eficacia en el soporte de aplicaciones web inalámbricas móviles, hemos medido su rendimiento en aplicaciones web. Presentamos resultados experimentales sobre diferentes dispositivos PDA para dos aplicaciones web populares, navegar por páginas web y reproducir contenido de video desde la web. Comparamos pTHINC con aplicaciones web nativas que se ejecutan localmente en la PDA para demostrar la mejora que pTHINC puede proporcionar sobre el enfoque tradicional de cliente pesado. También comparamos pTHINC con tres de los clientes ligeros más utilizados que pueden ejecutarse en PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] y VNC (Virtual Network Computing) [16]. Seguimos la práctica común y nos referimos a Citrix MetaFrameXP y Microsoft Remote Desktop por sus respectivos protocolos de visualización remota, ICA (Independent Computing Architecture) y RDP (Remote Desktop Protocol). 4.1 Plataforma de Pruebas Experimental Realizamos nuestros experimentos web utilizando dos PDA Pocket PC inalámbricas diferentes en un entorno de prueba de red Wi-Fi aislado, como se muestra en la Figura 2. El banco de pruebas consistía en dos dispositivos cliente PDA, un monitor de paquetes, un servidor de cliente ligero y un servidor web. Excepto por las PDAs, todas las demás máquinas eran servidores IBM Netfinity 4500R con procesadores duales Intel PIII de 933 MHz y 512 MB de RAM, y estaban conectadas en una red FastEthernet de 100 Mbps conmutada. El servidor web utilizado fue Apache 1.3.27, el emulador de red fue NISTNet 2.0.12 y el monitor de paquetes fue Ethereal 0.10.9. Los clientes de PDA se conectaron al banco de pruebas a través de un punto de acceso inalámbrico Lucent Orinoco AP-2000 802.11b. Todos los experimentos utilizando la red inalámbrica se llevaron a cabo a una distancia de diez pies del punto de acceso, por lo que consideramos que la cantidad de pérdida de paquetes era insignificante en nuestros experimentos. Se utilizaron dos PDA Pocket PC para proporcionar resultados en modelos antiguos y menos potentes, así como en modelos más nuevos de mayor rendimiento. El modelo anterior era un Dell Axim X5 con 147 Cliente 1024×768 640×480 Profundidad Cambio de tamaño Clip RDP no sí 8 bits no sí VNC sí sí 16 bits no no ICA sí sí 16 bits sí no pTHINC sí sí 24 bits sí no Tabla 2: Configuración del banco de pruebas de cliente ligero con un CPU Intel XScale PXA255 de 400 MHz y 64 MB de RAM ejecutando Windows Mobile 2003 y una tarjeta Dell TrueMobile 1180 de 2.4 GHz CompactFlash para redes inalámbricas. El modelo más nuevo era un Dell Axim X51v con un procesador Intel XScale XPA270 de 624 MHz y 64 MB de RAM ejecutando Windows Mobile 5.0 y con red inalámbrica 802.11b integrada. El X51v tiene un acelerador multimedia Intel 2700G con 16MB de memoria de video. Ambas PDAs son capaces de mostrar colores de 16 bits pero tienen diferentes tamaños de pantalla y resoluciones de visualización. El X5 tiene una pantalla diagonal de 3.5 pulgadas con una resolución de 240×320. El X51v tiene una pantalla diagonal de 3.7 pulgadas con una resolución de 480×640. Los cuatro clientes ligeros que utilizamos admiten diferentes niveles de calidad de visualización, como se resume en la Tabla 2. El cliente de RDP solo admite una resolución de pantalla fija de 640×480 en el servidor con una profundidad de color de 8 bits, mientras que otras plataformas ofrecen niveles más altos de calidad de visualización. Para proporcionar una comparación justa en todas las plataformas, realizamos nuestros experimentos con sesiones de cliente ligero configuradas para dos posibles resoluciones, 1024×768 y 640×480. Tanto ICA como VNC se configuraron para usar la resolución nativa de PDA con una profundidad de color de 16 bits. El prototipo actual de pTHINC utiliza color de 24 bits directamente y el cliente reduce la resolución de las actualizaciones al nivel de color de 16 bits disponible en la PDA. RDP se configuró utilizando solo una profundidad de color de 8 bits ya que no admite ninguna profundidad de color mejor. Dado que tanto pTHINC como ICA ofrecen la capacidad de ver la pantalla redimensionada para ajustarse a la pantalla, medimos ambos clientes con y sin la pantalla redimensionada para ajustarse a la pantalla del PDA. Cada cliente ligero fue probado utilizando el modo de paisaje en lugar del modo retrato cuando estaba disponible. Todos los sistemas que se ejecutan en el X51v podrían funcionar en modo horizontal porque el hardware proporciona una función de modo horizontal. Sin embargo, el X5 no proporciona esta funcionalidad. Solo pTHINC admite directamente el modo paisaje, por lo que era el único sistema que podía ejecutarse en modo paisaje tanto en el X5 como en el X51v. Para proporcionar una comparación justa, también estandarizamos en hardware y sistemas operativos comunes siempre que sea posible. Todos los sistemas utilizaron el servidor Netfinity como servidor de cliente ligero. Para los dos sistemas diseñados para servidores Windows, ICA y RDP, ejecutamos Windows Server 2003 en el servidor. Para los otros sistemas que admiten servidores basados en X, ejecutamos la distribución Debian Linux Inestable con el kernel Linux 2.6.10 en el servidor. Utilizamos las últimas versiones de servidores de cliente ligero disponibles en cada plataforma en el momento de nuestros experimentos, a saber, Citrix MetaFrame XP Server para Windows Feature Release 3, Microsoft Remote Desktop integrado en Windows XP y Windows 2003 utilizando RDP 5.2, y VNC 4.0.4.2. Para los benchmarks de aplicaciones, utilizamos dos benchmarks de aplicaciones web para nuestros experimentos basados en dos escenarios de aplicación comunes, navegación por páginas web y reproducción de contenido de video desde la web. Dado que muchos sistemas de cliente ligero, incluidos dos de los probados, son cerrados y propietarios, medimos su rendimiento de manera no invasiva capturando el tráfico de red con un monitor de paquetes y utilizando una variante de benchmarking en cámara lenta [13] previamente desarrollada para medir el rendimiento de clientes ligeros en entornos de PDA [10]. Esta metodología de medición tiene en cuenta tanto el desacoplamiento de la visualización que puede ocurrir entre el cliente y el servidor en sistemas de cliente ligero, como el tiempo de procesamiento del cliente, que puede ser significativo en el caso de las PDAs. Para medir el rendimiento de la navegación web, utilizamos un benchmark de navegación web basado en la Prueba de Carga de Páginas de Texto Web del conjunto de benchmarks Ziff-Davis i-Bench [7]. El punto de referencia consiste en la carga controlada de 55 páginas desde el servidor web mediante JavaScript. Las páginas contienen tanto texto como gráficos, con páginas de diferentes tamaños. Los gráficos son imágenes incrustadas en formatos GIF y JPEG. El benchmark original i-Bench fue modificado para pruebas de rendimiento en cámara lenta al introducir retrasos de varios segundos entre las páginas utilizando JavaScript. Luego se realizaron dos pruebas, una en la que se agregaron retrasos entre cada página, y otra en la que las páginas se cargaron continuamente sin esperar a que se mostraran en el cliente. En la primera prueba, los retrasos se ajustaron lo suficiente en cada caso para garantizar que cada página pudiera ser recibida y mostrada en el cliente por completo sin solapamiento temporal en la transferencia de los datos pertenecientes a dos páginas consecutivas. Utilizamos el monitor de paquetes para registrar el tráfico de paquetes para cada ejecución de la prueba de referencia, luego utilizamos las marcas de tiempo del primer y último paquete en la traza para obtener nuestras medidas de latencia [10]. El monitor de paquetes también registró la cantidad de datos transmitidos entre el cliente y el servidor. La proporción entre el tráfico de datos en las dos pruebas produce un factor de escala. Este factor de escala muestra la pérdida de datos entre el servidor y el cliente debido a la incapacidad del cliente para procesar los datos lo suficientemente rápido. El producto del factor de escala con la medición de latencia produce la verdadera latencia teniendo en cuenta el tiempo de procesamiento del cliente. Para ejecutar la prueba de navegación web, utilizamos Mozilla Firefox 1.0.4 en el servidor de cliente ligero para los clientes ligeros, y Windows Internet Explorer (IE) Mobile para 2003 y Mobile para 5.0 para los navegadores nativos en las PDAs X5 y X51v, respectivamente. En todos los casos, el navegador web utilizado se ajustó para ocupar toda la región de visualización disponible. Para medir el rendimiento de reproducción de video, utilizamos un banco de pruebas de video que consistía en reproducir un clip de video MPEG-1 de 34.75 segundos que contenía una mezcla de noticias y programación de entretenimiento a resolución de pantalla completa. El videoclip tiene un tamaño de 5.11 MB y consta de 834 cuadros de píxeles de 352x240 con una velocidad de cuadro ideal de 24 cuadros por segundo. Medimos el rendimiento del video utilizando pruebas de referencia en cámara lenta al monitorear el tráfico de paquetes resultante a dos velocidades de reproducción, 1 cuadro por segundo (fps) y 24 fps, y comparando los resultados para determinar los retrasos en la reproducción y las caídas de cuadros que ocurren a 24 fps para medir la calidad general del video [13]. Por ejemplo, el 100% de calidad significa que todos los fotogramas del video se reprodujeron a velocidad en tiempo real. Por otro lado, una calidad del 50% podría significar que se eliminó la mitad de los datos del video, o que el clip tardó el doble en reproducirse a pesar de que se mostró toda la información del video. Para ejecutar la prueba de rendimiento de video, utilizamos Windows Media Player 9 para servidores de clientes ligeros basados en Windows, MPlayer 1.0 pre 6 para servidores de clientes ligeros basados en X, y Windows Media Player 9 Mobile y 10 Mobile para los reproductores de video nativos que se ejecutan localmente en las PDAs X5 y X51v, respectivamente. En todos los casos, el reproductor de video utilizado se dimensionó para llenar toda la región de visualización disponible. Las Figuras 3 y 4 muestran los resultados de ejecutar la prueba de navegación por la web. Para cada plataforma, mostramos resultados de hasta cuatro configuraciones diferentes, dos en el X5 y dos en el X51v, dependiendo de si cada configuración era compatible. Sin embargo, no todas las plataformas podrían admitir todas las configuraciones. El navegador local solo se ejecuta a la resolución de pantalla de la PDA, 480×680 o menos para el X51v y el X5. RDP solo funciona a 640×480. Ninguna plataforma podía soportar una resolución de pantalla de 1024×768. ICA solo funcionaba en el X5 y no podía ejecutarse en el X51v porque no era compatible con Windows Mobile 5. La Figura 3 muestra la latencia promedio por página web para cada plataforma. pTHINC proporciona la latencia promedio más baja en la navegación web en ambas PDAs. En el X5, pTHINC funciona hasta 70 veces mejor que otros sistemas de cliente ligero y 8 veces mejor que el navegador local. En el X51v, pTHINC funciona hasta 80 veces mejor que otros sistemas de cliente ligero y 7 veces mejor que el navegador nativo. De hecho, todos los clientes ligeros excepto VNC superan al navegador local de PDA, demostrando los beneficios de rendimiento del enfoque de cliente ligero. Los estudios de usabilidad han demostrado que las páginas web deben tardar menos de un segundo en descargarse para que el usuario experimente una navegación web ininterrumpida [14]. Las mediciones muestran que solo los clientes delgados ofrecen latencias de página web de menos de un segundo. Por el contrario, el navegador local requiere más de 3 segundos en promedio por página web. El navegador local funciona peor ya que necesita ejecutar un navegador web más limitado para procesar el HTML, JavaScript y realizar todo el renderizado utilizando las capacidades limitadas de la PDA. Los clientes ligeros pueden aprovecharse de hardware de servidor más rápido y un navegador web altamente optimizado para procesar el contenido web mucho más rápido. La Figura 3 muestra que RDP es la plataforma más rápida después de pTHINC. Sin embargo, RDP solo puede ejecutarse a una resolución fija de 640×480 y una profundidad de color de 8 bits. Además, RDP también recorta la pantalla al tamaño de la pantalla de la PDA para no tener que enviar actualizaciones que no son visibles en la pantalla de la PDA. Esto proporciona un beneficio de rendimiento siempre y cuando el resto del contenido web no se visualice, pero degrada el rendimiento cuando un usuario desplaza la pantalla para ver otro contenido web. RDP logra su rendimiento con una calidad de visualización significativamente inferior en comparación con otros clientes ligeros y con recortes adicionales en la visualización que no son utilizados por otros sistemas. Como resultado, el rendimiento de RDP por sí solo no proporciona una comparación completa con las otras plataformas. Por el contrario, pTHINC ofrece el mejor rendimiento al mismo tiempo que proporciona una calidad de visualización igual o mejor que los otros sistemas. Dado que VNC e ICA ofrecen una calidad de visualización similar a pTHINC, estos sistemas proporcionan una comparación más justa de diferentes enfoques de cliente ligero. ICA funciona peor en parte porque utiliza primitivas de visualización de nivel superior que requieren costos adicionales de procesamiento por parte del cliente. VNC funciona peor en parte porque pierde datos de visualización debido a su mecanismo de entrega de cliente-pull y debido a los costos de procesamiento del cliente en descomprimir primitivas de píxeles crudos. En ambos casos, su rendimiento se vio limitado en parte porque sus clientes de PDA no podían mantenerse al ritmo al que se mostraban las páginas web. La Figura 3 también muestra las medidas para aquellos clientes ligeros que admiten redimensionar la pantalla para ajustarse a la pantalla de la PDA, a saber, ICA y pTHINC. El redimensionamiento requiere un procesamiento adicional, lo que resulta en latencias promedio más lentas de las páginas web. Las mediciones muestran que el retraso adicional incurrido por ICA al cambiar el tamaño es mucho más sustancial que para pTHINC. ICA realiza redimensionamiento en el cliente PDA más lento. Por el contrario, pTHINC aprovecha el servidor más potente para redimensionar, reduciendo la diferencia de rendimiento entre redimensionar y no redimensionar. A diferencia de ICA, pTHINC es capaz de proporcionar latencias de descarga de páginas web en menos de un segundo en ambos casos. La Figura 4 muestra los datos transferidos en KB por página al ejecutar la versión de cámara lenta de las pruebas. Todas las plataformas tienen requisitos modestos de transferencia de datos de aproximadamente 100 KB por página o menos. Esto está bien dentro de la capacidad de ancho de banda de las redes Wi-Fi. Las mediciones muestran que el navegador local no transfiere la menor cantidad de datos. Esto es sorprendente ya que HTML suele considerarse una representación muy compacta del contenido. En cambio, RDP es la plataforma más eficiente en ancho de banda, en gran parte debido a que utiliza solo una profundidad de color de 8 bits y recorte de pantalla para no transferir la página web completa al cliente. En general, pTHINC tiene los mayores requisitos de datos, ligeramente más que VNC. Esto se debe en gran medida a la falta de soporte nativo de los prototipos actuales de pTHINC para datos de color de 16 bits en el protocolo de comunicación. Sin embargo, este resultado también destaca el rendimiento de pTHINCs, ya que es más rápido que todos los demás sistemas incluso al transferir más datos. Además, dado que los modelos más recientes de PDA admiten colores completos de 24 bits, estos resultados indican que pTHINC seguirá proporcionando un buen rendimiento en la navegación web. Dado que la usabilidad y la calidad de la pantalla son tan importantes como el rendimiento, las Figuras 5 a 8 comparan capturas de pantalla de los diferentes clientes ligeros al mostrar una página web, en este caso del popular sitio de noticias de la BBC. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo paisaje. Figura 5: Captura de pantalla del navegador: RDP 640x480. Figura 6: Captura de pantalla del navegador: VNC 1024x768. Figura 7: Captura de pantalla del navegador: ICA redimensionado 1024x768. Figura 8: Captura de pantalla del navegador: pTHINC redimensionado 1024x768 utilizando la configuración de resolución de pantalla máxima para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Si bien las capturas de pantalla carecen de la fidelidad visual de la pantalla real del dispositivo, se pueden hacer varias observaciones. La Figura 5 muestra que RDP no admite el modo de pantalla completa y desperdicia mucho espacio en pantalla para controles y elementos de la interfaz de usuario, lo que obliga al usuario a desplazarse para acceder a todo el contenido de la sesión de navegación web. La Figura 6 muestra que VNC aprovecha mejor el espacio de la pantalla y ofrece una mejor calidad de visualización, pero aún obliga al usuario a desplazarse para ver la página web debido a la falta de soporte para redimensionar. La Figura 7 muestra la capacidad de ICA para mostrar la página web completa dada su soporte de redimensionamiento, pero su falta de capacidad en modo paisaje y su algoritmo de redimensionamiento deficiente comprometen significativamente la calidad de visualización. Por el contrario, la Figura 8 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de pantalla completa de alta calidad del ancho completo de la página web. pTHINC maximiza toda la región de visualización moviendo todos los controles a los botones de la PDA. Además, pTHINC aprovecha la potencia computacional del servidor para utilizar un algoritmo de redimensionamiento de alta calidad y ajustar la pantalla al tamaño de la PDA sin un sobrecoste significativo. Las figuras 9 y 10 muestran los resultados de ejecutar la prueba de reproducción de video. Para cada plataforma excepto ICA, mostramos resultados para una configuración X5 y X51v. ICA no pudo ejecutarse en el X51v como se mencionó anteriormente. Las mediciones se realizaron utilizando configuraciones que reflejaban el entorno desde el cual un usuario tendría que acceder a una sesión web tanto desde una computadora de escritorio como desde una PDA. Por lo tanto, se utilizó una resolución de pantalla del servidor de 1024×768 siempre que fuera posible y el video se mostró a pantalla completa. La resolución de pantalla de RDP se limitaba a 640×480, como se mencionó anteriormente. Dado que ver toda la pantalla del video es la única opción realmente utilizable, redimensionamos la pantalla para que se ajustara a la pantalla de la PDA en aquellas plataformas que admitían esta función, a saber, ICA y pTHINC. La Figura 9 muestra la calidad de video para cada plataforma. pTHINC es el único cliente ligero capaz de proporcionar una calidad de reproducción de video perfecta, similar al reproductor de video nativo de PDA. Todos los demás clientes ligeros ofrecen una calidad de video muy pobre. Con la excepción de RDP en el X51v que proporcionó una calidad de video inaceptable del 35%, ninguno de los otros sistemas pudo siquiera alcanzar el 10% de calidad de video. VNC e ICA tienen la peor calidad al 8% en el dispositivo X5. El soporte de video nativo de pTHINCs permite un rendimiento de video superior, mientras que otros clientes ligeros sufren de su incapacidad para distinguir el video de las actualizaciones normales de la pantalla. Intentan aplicar algoritmos de compresión ineficaces y costosos en los datos de video y no pueden mantenerse al día con la corriente de actualizaciones generadas, lo que resulta en cuadros omitidos o largos tiempos de reproducción. VNC se ve aún más afectado por su modelo de actualización de cliente-pull porque los fotogramas de video se generan más rápido que la velocidad a la que el cliente puede procesar y enviar solicitudes al servidor para obtener la siguiente actualización de pantalla. La Figura 10 muestra los datos totales transferidos durante la reproducción de video a pantalla completa para cada sistema. El reproductor nativo es la plataforma más eficiente en ancho de banda, enviando menos de 6 MB de datos, lo que corresponde a aproximadamente 1.2 Mbps de ancho de banda. La calidad de video al 100% de pTHINCs requiere alrededor de 25 MB de datos, lo que corresponde a un uso de ancho de banda de menos de 6 Mbps. Mientras que los otros clientes ligeros envían menos datos que THINC, lo hacen porque están eliminando datos de video, lo que resulta en una calidad de video degradada. Las figuras 11 a 14 comparan capturas de pantalla de los distintos clientes ligeros al mostrar el videoclip. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo horizontal utilizando la configuración de resolución máxima de pantalla para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Las figuras 11 y 12 muestran que RDP y VNC no pueden mostrar el cuadro completo del video en la pantalla de la PDA. RDP desperdicia espacio en pantalla para los elementos de la interfaz de usuario y VNC solo muestra la esquina superior del marco de video en la pantalla. La Figura 13 muestra que el ICA proporciona redimensionamiento para mostrar todo el fotograma del video, pero no redimensiona proporcionalmente los datos del video, lo que resulta en artefactos de visualización extraños. Por el contrario, la Figura 14 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de alta calidad a pantalla completa de todo el fotograma del video. pTHINC ofrece una visualización de video visualmente más atractiva que RDP, VNC o ICA. 5. TRABAJOS RELACIONADOS Varios estudios han examinado el rendimiento de la navegación web en la computación de cliente ligero [13, 19, 10]. La capacidad de los clientes ligeros para mejorar el rendimiento de la navegación web en PDAs inalámbricas fue demostrada cuantitativamente por primera vez en un estudio previo realizado por uno de los autores [10]. Este estudio demostró que los clientes ligeros pueden ofrecer tanto un rendimiento de navegación web más rápido como una mayor funcionalidad de navegación web. El estudio consideró una amplia gama de contenido web, incluido el contenido de sistemas de información médica. Nuestro trabajo se basa en este estudio previo y considera temas importantes como la usabilidad de los clientes ligeros existentes en entornos de PDA, los compromisos entre la usabilidad y el rendimiento de los clientes ligeros, el rendimiento en diferentes dispositivos de PDA y el rendimiento de los clientes ligeros en aplicaciones web comunes como el video. Se han desarrollado muchos clientes ligeros y algunos tienen clientes de PDA, incluyendo Remote Desktop de Microsoft [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5] y Tarantella [18]. Estos sistemas fueron diseñados inicialmente para computadoras de escritorio y adaptados posteriormente para asistentes digitales personales (PDA). A diferencia de pTHINC, no abordan los problemas clave de arquitectura del sistema y usabilidad importantes para las PDAs. Esto limita la calidad de visualización, el rendimiento del sistema, el espacio de pantalla disponible y la usabilidad general en PDAs. pTHINC se basa en trabajos anteriores de dos de los autores sobre THINC [1], ampliando la arquitectura del servidor e introduciendo una interfaz de cliente y un modelo de uso para admitir eficientemente dispositivos PDA en aplicaciones web móviles. Otros enfoques para mejorar el rendimiento de la navegación web inalámbrica móvil se han centrado en el uso de proxies de transcodificación y almacenamiento en caché en conjunto con el modelo de cliente pesado [11, 9, 4, 8]. Trabajan mediante el envío de funcionalidades a proxies externos y utilizando aplicaciones de navegación especializadas en el dispositivo PDA que se comunican con el proxy. Nuestro enfoque de cliente ligero difiere fundamentalmente de estos enfoques de cliente pesado al trasladar toda la lógica del navegador web al servidor, aprovechando las inversiones existentes en navegadores web de escritorio y aplicaciones auxiliares para funcionar de manera integrada con los sistemas de producción sin necesidad de configuraciones adicionales de proxy o modificaciones en el navegador web. Con la aparición de la navegación web en dispositivos con pantallas pequeñas, los sitios web han sido rediseñados utilizando mecanismos como WAP y se han desarrollado navegadores web nativos especializados para adaptarse a las necesidades de estos dispositivos. Recientemente, Opera ha desarrollado el navegador web Opera Mini [15], que utiliza un enfoque similar al modelo de cliente ligero para proporcionar acceso a través de una serie de dispositivos móviles que normalmente no podrían ejecutar un navegador web. En lugar de requerir que el dispositivo procese las páginas web, utiliza un servidor remoto para preprocesar la página antes de enviarla al teléfono. CONCLUSIONES Hemos introducido pTHINC, una arquitectura de cliente ligero para PDAs inalámbricas. pTHINC proporciona mecanismos arquitectónicos y de usabilidad clave como el redimensionamiento de pantalla en el lado del servidor, rotación de pantalla en el lado del cliente utilizando técnicas simples de copia, soporte de video YUV, y maximización del espacio de pantalla para actualizaciones de visualización y aprovechamiento de los botones de control existentes en las PDAs para elementos de la interfaz de usuario. pTHINC soporta de manera transparente navegadores de escritorio tradicionales y sus aplicaciones auxiliares en dispositivos PDA y computadoras de escritorio, brindando a los usuarios móviles acceso ubicuo a un entorno web consistente, personalizado y completo en dispositivos heterogéneos. Hemos implementado pTHINC y medido su rendimiento en aplicaciones web en comparación con los sistemas de cliente ligero existentes y las aplicaciones web nativas. Nuestros resultados en múltiples dispositivos móviles inalámbricos demuestran que pTHINC ofrece un rendimiento de navegación web hasta 80 veces mejor que los sistemas de cliente ligero existentes, y 8 veces mejor que un navegador PDA nativo. Además, pTHINC es el único cliente ligero de PDA 151 Figura 11: Captura de pantalla de video: RDP 640x480 Figura 12: Captura de pantalla de video: VNC 1024x768 Figura 13: Captura de pantalla de video: ICA redimensionado 1024x768 Figura 14: Captura de pantalla de video: pTHINC redimensionado 1024x768 que proporciona de manera transparente la reproducción de video a pantalla completa y a velocidad de cuadro completa, haciendo que los sitios web con contenido multimedia sean accesibles para los usuarios de la web móvil. 7. AGRADECIMIENTOS Este trabajo fue apoyado en parte por las subvenciones NSF ITR CCR0219943 y CNS-0426623, y un premio IBM SUR. 8. REFERENCIAS [1] R. Baratto, L. Kim y J. Nieh. THINC: Una arquitectura de visualización virtual para la computación de cliente ligero. En Actas del 20º Simposio de Principios de Sistemas Operativos de la ACM (SOSP), octubre de 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius y A. Muir. Microsoft Windows NT Server 4.0, Terminal Server Edition: Referencia Técnica. Microsoft Press, Redmond, WA, 1999. [4] A.\nMicrosoft Press, Redmond, WA, 1999. [4] A. Fox, I. Goldberg, S. D. Gribble y D. C. Lee. Experiencia con Top Gun Wingman: un navegador web gráfico basado en proxy para el 3Com PalmPilot. En Actas de Middleware 98, Lake District, Inglaterra, septiembre de 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Ley de Portabilidad y Responsabilidad del Seguro de Salud. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench versión 1.5. http://etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi. Sobre agentes de proxy, movilidad y acceso web. Redes y aplicaciones móviles, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon y A. Ortega. Diseño e Implementación de un Proxy de Caché Blando. Redes de Computadoras y Sistemas ISDN, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana y S. Varshneya. Mejorando la navegación web en PDAs inalámbricas utilizando computación de cliente ligero. En Actas de la 13ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham y P. Shenoy. TranSquid: Proxy de transcodificación y almacenamiento en caché para entornos de comercio electrónico heterogéneos. En Actas del 12º Taller IEEE sobre Problemas de Investigación en Ingeniería de Datos (RIDE 02), febrero de 2002. [12] Visor VNC .NET para PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang y N. Novik. Midiendo el rendimiento de clientes ligeros utilizando pruebas de referencia en cámara lenta. ACM Trans. Sistemas de Computación, 21(1):87-115, Feb. 2003. [14] J. Nielsen. Diseño de Usabilidad en la Web. New Riders Publishing, Indianápolis, IN, 2000. [15] Navegador Opera Mini. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood y A. Hopper. Computación de Red Virtual. IEEE Internet Computing, 2(1), enero/febrero de 1998. [17] R. W. Scheifler y J. Gettys. El Sistema de Ventanas X. ACM Trans. Gr., 5(2):79-106, Abr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla y M. Sajjadpour. Rendimiento de la navegación web en computación inalámbrica de cliente ligero. En Actas de la 12ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2003. 152 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "local pda web browser": {
            "translated_key": "navegador web de PDA local",
            "is_in_text": false,
            "original_annotated_sentences": [
                "pTHINC: A Thin-Client Architecture for Mobile Wireless Web Joeng Kim, Ricardo A. Baratto, and Jason Nieh Department of Computer Science Columbia University, New York, NY, USA {jk2438, ricardo, nieh}@cs.columbia.edu ABSTRACT Although web applications are gaining popularity on mobile wireless PDAs, web browsers on these systems can be quite slow and often lack adequate functionality to access many web sites.",
                "We have developed pTHINC, a PDA thinclient solution that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide high-fidelity display and seamless mobility across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available screen resolution for application display.",
                "We have implemented pTHINC on Windows Mobile and evaluated its performance on mobile wireless devices.",
                "Our results compared to local PDA web browsers and other thin-client approaches demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "Categories and Subject Descriptors: C.2.4 ComputerCommunication-Networks: Distributed Systems - client/ server General Terms: Design, Experimentation, Performance 1.",
                "INTRODUCTION The increasing ubiquity of wireless networks and decreasing cost of hardware is fueling a proliferation of mobile wireless handheld devices, both as standalone wireless Personal Digital Assistants (PDA) and popular integrated PDA/cell phone devices.",
                "These devices are enabling new forms of mobile computing and communication.",
                "Service providers are leveraging these devices to deliver pervasive web access, and mobile web users already often use these devices to access web-enabled information such as news, email, and localized travel guides and maps.",
                "It is likely that within a few years, most of the devices accessing the web will be mobile.",
                "Users typically access web content by running a web browser and associated helper applications locally on the PDA.",
                "Although native web browsers exist for PDAs, they deliver subpar performance and have a much smaller feature set and more limited functionality than their desktop computing counterparts [10].",
                "As a result, PDA web browsers are often not able to display web content from web sites that leverage more advanced web technologies to deliver a richer web experience.",
                "This fundamental problem arises for two reasons.",
                "First, because PDAs have a completely different hardware/software environment from traditional desktop computers, web applications need to be rewritten and customized for PDAs if at all possible, duplicating development costs.",
                "Because the desktop application market is larger and more mature, most development effort generally ends up being spent on desktop applications, resulting in greater functionality and performance than their PDA counterparts.",
                "Second, PDAs have a more resource constrained environment than traditional desktop computers to provide a smaller form factor and longer battery life.",
                "Desktop web browsers are large, complex applications that are unable to run on a PDA.",
                "Instead, developers are forced to significantly strip down these web browsers to provide a usable PDA web browser, thereby crippling PDA browser functionality.",
                "Thin-client computing provides an alternative approach for enabling pervasive web access from handheld devices.",
                "A thin-client computing system consists of a server and a client that communicate over a network using a remote display protocol.",
                "The protocol enables graphical displays to be virtualized and served across a network to a client device, while application logic is executed on the server.",
                "Using the remote display protocol, the client transmits user input to the server, and the server returns screen updates of the applications from the server to the client.",
                "Using a thin-client model for mobile handheld devices, PDAs can become simple stateless clients that leverage the remote server capabilities to execute web browsers and other helper applications.",
                "The thin-client model provides several important benefits for mobile wireless web.",
                "First, standard desktop web applications can be used to deliver web content to PDAs without rewriting or adapting applications to execute on a PDA, reducing development costs and leveraging existing software investments.",
                "Second, complex web applications can be executed on powerful servers instead of running stripped down versions on more resource constrained PDAs, providing greater functionality and better performance [10].",
                "Third, web applications can take advantage of servers with faster networks and better connectivity, further boosting application performance.",
                "Fourth, PDAs can be even simpler devices since they do not need to perform complex application logic, potentially reducing energy consumption and extend143 ing battery life.",
                "Finally, PDA thin clients can be essentially stateless appliances that do not need to be backed up or restored, require almost no maintenance or upgrades, and do not store any sensitive data that can be lost or stolen.",
                "This model provides a viable avenue for medical organizations to comply with HIPAA regulations [6] while embracing mobile handhelds in their day to day operations.",
                "Despite these potential advantages, thin clients have been unable to provide the full range of these benefits in delivering web applications to mobile handheld devices.",
                "Existing thin clients were not designed for PDAs and do not account for important usability issues in the context of small form factor devices, resulting in difficulty in navigating displayed web content.",
                "Furthermore, existing thin clients are ineffective at providing seamless mobility across the heterogeneous mix of device display sizes and resolutions.",
                "While existing thin clients can already provide faster performance than native PDA web browsers in delivering HTML web content, they do not effectively support more display-intensive web helper applications such as multimedia video, which is increasingly an integral part of available web content.",
                "To harness the full potential of thin-client computing in providing mobile wireless web on PDAs, we have developed pTHINC (PDA THin-client InterNet Computing). pTHINC builds on our previous work on THINC [1] to provide a thinclient architecture for mobile handheld devices. pTHINC virtualizes and resizes the display on the server to efficiently deliver high-fidelity screen updates to a broad range of different clients, screen sizes, and screen orientations, including both portrait and landscape viewing modes.",
                "This enables pTHINC to provide the same persistent web session across different client devices.",
                "For example, pTHINC can provide the same web browsing session appropriately scaled for display on a desktop computer and a PDA so that the same cookies, bookmarks, and other meta-data are continuously available on both machines simultaneously. pTHINCs virtual display approach leverages semantic information available in display commands, and client-side video hardware to provide more efficient remote display mechanisms that are crucial for supporting more display-intensive web applications.",
                "Given limited display resolution on PDAs, pTHINC maximizes the use of screen real estate for remote display by moving control functionality from the screen to readily available PDA control buttons, improving system usability.",
                "We have implemented pTHINC on Windows Mobile and demonstrated that it works transparently with existing applications, window systems, and operating systems, and does not require modifying, recompiling, or relinking existing software.",
                "We have quantitatively evaluated pTHINC against local PDA web browsers and other thin-client approaches on Pocket PC devices.",
                "Our experimental results demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "This paper presents the design and implementation of pTHINC.",
                "Section 2 describes the overall usage model and usability characteristics of pTHINC.",
                "Section 3 presents the design and system architecture of pTHINC.",
                "Section 4 presents experimental results measuring the performance of pTHINC on web applications and comparing it against native PDA browsers and other popular PDA thin-client systems.",
                "Section 5 discusses related work.",
                "Finally, we present some concluding remarks. 2.",
                "PTHINC USAGE MODEL pTHINC is a thin-client system that consists of a simple client viewer application that runs on the PDA and a server that runs on a commodity PC.",
                "The server leverages more powerful PCs to to run web browsers and other application logic.",
                "The client takes user input from the PDA stylus and virtual keyboard and sends them to the server to pass to the applications.",
                "Screen updates are then sent back from the server to the client for display to the user.",
                "When the pTHINC PDA client is started, the user is presented with a simple graphical interface where information such as server address and port, user authentication information, and session settings can be provided. pTHINC first attempts to connect to the server and perform the necessary handshaking.",
                "Once this process has been completed, pTHINC presents the user with the most recent display of his session.",
                "If the session does not exist, a new session is created.",
                "Existing sessions can be seamlessly continued without changes in the session setting or server configuration.",
                "Unlike other thin-client systems, pTHINC provides a user with a persistent web session model in which a user can launch a session running a web browser and associated applications at the server, then disconnect from that session and reconnect to it again anytime.",
                "When a user reconnects to the session, all of the applications continue running where the user left off, so that the user can continue working as though he or she never disconnected.",
                "The ability to disconnect and reconnect to a session at anytime is an important benefit for mobile wireless PDA users which may have intermittent network connectivity. pTHINCs persistent web session model enables a user to reconnect to a web session from devices other than the one on which the web session was originally initiated.",
                "This provides users with seamless mobility across different devices.",
                "If a user loses his PDA, he can easily use another PDA to access his web session.",
                "Furthermore, pTHINC allows users to use non-PDA devices to access web sessions as well.",
                "A user can access the same persistent web session on a desktop PC as on a PDA, enabling a user to use the same web session from any computer. pTHINCs persistent web session model addresses a key problem encountered by mobile web users, the lack of a common web environment across computers.",
                "Web browsers often store important information such as bookmarks, cookies, and history, which enable them to function in a much more useful manner.",
                "The problem that occurs when a user moves between computers is that this data, which is specific to a web browser installation, cannot move with the user.",
                "Furthermore, web browsers often need helper applications to process different media content, and those applications may not be consistently available across all computers. pTHINC addresses this problem by enabling a user to remotely use the exact same web browser environment and helper applications from any computer.",
                "As a result, pTHINC can provide a common, consistent web browsing environment for mobile users across different devices without requiring them to attempt to repeatedly synchronize different web browsing environments across multiple machines.",
                "To enable a user to access the same web session on different devices, pTHINC must provide mechanisms to support different display sizes and resolutions.",
                "Toward this end, pTHINC provides a zoom feature that enables a user to zoom in and out of a display and allows the display of a web 144 Figure 1: pTHINC shortcut keys session to be resized to fit the screen of the device being used.",
                "For example, if the server is running a web session at 1024×768 but the client is a PDA with a display resolution of 640×480, pTHINC will resize the desktop display to fit the full display in the smaller screen of the PDA. pTHINC provides the PDA user with the option to increase the size of the display by zooming in to different parts of the display.",
                "Users are often familiar with the general layout of commonly visited websites, and are able to leverage this resizing feature to better navigate through web pages.",
                "For example, a user can zoom out of the display to view the entire page content and navigate hyperlinks, then zoom in to a region of interest for a better view.",
                "To enable a user to access the same web session on different devices, pTHINC must also provide mechanisms to support different display orientations.",
                "In a desktop environment, users are typically accustomed to having displays presented in landscape mode where the screen width is larger than its height.",
                "However, in a PDA environment, the choice is not always obvious.",
                "Some users may prefer having the display in portrait mode, as it is easier to hold the device in their hands, while others may prefer landscape mode in order to minimize the amount of side-scrolling necessary to view a web page.",
                "To accommodate PDA user preferences, pTHINC provides an orientation feature that enables it to seamless rotate the display between landscape and portrait mode.",
                "The landscape mode is particularly useful for pTHINC users who frequently access their web sessions on both desktop and PDA devices, providing those users with the same familiar landscape setting across different devices.",
                "Because screen space is a relatively scarce resource on PDAs, pTHINC runs in fullscreen mode to maximize the screen area available to display the web session.",
                "To be able to use all of the screen on the PDA and still allow the user to control and interact with it, pTHINC reuses the typical shortcut buttons found on PDAs to perform all the control functions available to the user.",
                "The buttons used by pTHINC do not require any OS environment changes; they are simply intercepted by the pTHINC client application when they are pressed.",
                "Figure 1 shows how pTHINC utilizes the shortcut buttons to provide easy navigation and improve the overall user experience.",
                "These buttons are not device specific, and the layout shown is common to widelyused PocketPC devices. pTHINC provides six shortcuts to support its usage model: • Rotate Screen: The record button on the left edge is used to rotate the screen between portrait and landscape mode each time the button is pressed. • Zoom Out: The leftmost button on the bottom front is used to zoom out the display of the web session providing a birds eye view of the web session. • Zoom In: The second leftmost button on the bottom front is used to zoom in the display of the web session to more clearly view content of interest. • Directional Scroll: The middle button on the bottom front is used to scroll around the display using a single control button in a way that is already familiar to PDA users.",
                "This feature is particularly useful when the user has zoomed in to a region of the display such that only part of the display is visible on the screen. • Show/Hide Keyboard: The second rightmost button on the bottom front is used to bring up a virtual keyboard drawn on the screen for devices which have no physical keyboard.",
                "The virtual keyboard uses standard PDA OS mechanisms, providing portability across different PDA environments. • Close Session: The rightmost button on the bottom front is used to disconnect from the pTHINC session. pTHINC uses the PDA touch screen, stylus, and standard user interface mechanisms to provide a user interface pointand-click metaphor similar to that provided by the mouse in a traditional desktop computing environment. pTHINC does not use a cursor since PDA environments do not provide one.",
                "Instead, a user can use the stylus to tap on different sections of the touch screen to indicate input focus.",
                "A single tap on the touch screen generates a corresponding single click mouse event.",
                "A double tap on the touch screen generates a corresponding double click mouse event. pTHINC provides two-button mouse emulation by using the stylus to press down on the screen for one second to generate a right mouse click.",
                "All of these actions are identical to the way users already interact with PDA applications in the common PocketPC environment.",
                "In web browsing, users can click on hyperlinks and focus on input boxes by simply tapping on the desired screen area of interest.",
                "Unlike local PDA web browsers and other PDA applications, pTHINC leverages more powerful desktop user interface metaphors to enable users to manipulate multiple open application windows instead of being limited to a single application window at any given moment.",
                "This provides increased browsing flexibility beyond what is currently available on PDA devices.",
                "Similar to a desktop environment, browser windows and other application windows can be moved around by pressing down and dragging the stylus similar to a mouse. 3.",
                "PTHINC SYSTEM ARCHITECTURE pTHINC builds on the THINC [1] remote display architecture to provide a thin-client system for PDAs. pTHINC virtualizes the display at the server by leveraging the video device abstraction layer, which sits below the window server and above the framebuffer.",
                "This is a well-defined, low-level, device-dependent layer that exposes the video hardware to the display system. pTHINC accomplishes this through a simple virtual display driver that intercepts drawing commands, packetizes, and sends them over the network. 145 While other thin-client approaches intercept display commands at other layers of the display subsystem, pTHINCs display virtualization approach provides some key benefits in efficiently supporting PDA clients.",
                "For example, intercepting display commands at a higher layer between applications and the window system as is done by X [17] requires replicating and running a great deal of functionality on the PDA that is traditionally provided by the desktop window system.",
                "Given both the size and complexity of traditional window systems, attempting to replicate this functionality in the restricted PDA environment would have proven to be a daunting, and perhaps unfeasible task.",
                "Furthermore, applications and the window system often require tight synchronization in their operation and imposing a wireless network between them by running the applications on the server and the window system on the client would significantly degrade performance.",
                "On the other hand, intercepting at a lower layer by extracting pixels out of the framebuffer as they are rendered provides a simple solution that requires very little functionality on the PDA client, but can also result in degraded performance.",
                "The reason is that by the time the remote display server attempts to send screen updates, it has lost all semantic information that may have helped it encode efficiently, and it must resort to using a generic and expensive encoding mechanism on the server, as well as a potentially expensive decoding mechanism on the limited PDA client.",
                "In contrast to both the high and low level interception approaches, pTHINCs approach of intercepting at the device driver provides an effective balance between client and server simplicity, and the ability to efficiently encode and decode screen updates.",
                "By using a low-level virtual display approach, pTHINC can efficiently encode application display commands using only a small set of low-level commands.",
                "In a PDA environment, this set of commands provides a crucial component in maintaining the simplicity of the client in the resourceconstrained PDA environment.",
                "The display commands are shown in Table 1, and work as follows.",
                "COPY instructs the client to copy a region of the screen from its local framebuffer to another location.",
                "This command improves the user experience by accelerating scrolling and opaque window movement without having to resend screen data from the server.",
                "SFILL, PFILL, and BITMAP are commands that paint a fixed-size region on the screen.",
                "They are useful for accelerating the display of solid window backgrounds, desktop patterns, backgrounds of web pages, text drawing, and certain operations in graphics manipulation programs.",
                "SFILL fills a sizable region on the screen with a single color.",
                "PFILL replicates a tile over a screen region.",
                "BITMAP performs a fill using a bitmap of ones and zeros as a stipple to apply a foreground and background color.",
                "Finally, RAW is used to transmit unencoded pixel data to be displayed verbatim on a region of the screen.",
                "This command is invoked as a last resort if the server is unable to employ any other command, and it is the only command that may be compressed to mitigate its impact on network bandwidth. pTHINC delivers its commands using a non-blocking, serverpush update mechanism, where as soon as display updates are generated on the server, they are sent to the client.",
                "Clients are not required to explicitly request display updates, thus minimizing the impact that the typical varying network latency of wireless links may have on the responsiveness of the system.",
                "Keeping in mind that resource Command Description COPY Copy a frame buffer area to specified coordinates SFILL Fill an area with a given pixel color value PFILL Tile an area with a given pixel pattern BITMAP Fill a region using a bit pattern RAW Display raw pixel data at a given location Table 1: pTHINC Protocol Display Commands constrained PDAs and wireless networks may not be able to keep up with a fast server generating a large number of updates, pTHINC is able to coalesce, clip, and discard updates automatically if network loss or congestion occurs, or the client cannot keep up with the rate of updates.",
                "This type of behavior proves crucial in a web browsing environment, where for example, a page may be redrawn multiple times as it is rendered on the fly by the browser.",
                "In this case, the PDA will only receive and render the final result, which clearly is all the user is interesting in seeing. pTHINC prioritizes the delivery of updates to the PDA using a Shortest-Remaining-Size-First (SRSF) preemptive update scheduler.",
                "SRSF is analogous to Shortest-RemainingProcessing-Time scheduling, which is known to be optimal for minimizing mean response time in an interactive system.",
                "In a web browsing environment, short jobs are associated with text and basic page layout components such as the pages background, which are critical web content for the user.",
                "On the other hand, large jobs are often lower priority beautifying elements, or, even worse, web page banners and advertisements, which are of questionable value to the user as he or she is browsing the page.",
                "Using SRSF, pTHINC is able to maximize the utilization of the relatively scarce bandwidth available on the wireless connection between the PDA and the server. 3.1 Display Management To enable users to just as easily access their web browser and helper applications from a desktop computer at home as from a PDA while on the road, pTHINC provides a resize mechanism to zoom in and out of the display of a web session. pTHINC resizing is completely supported by the server, not the client.",
                "The server resamples updates to fit within the PDAs viewport before they are transmitted over the network. pTHINC uses Fants resampling algorithm to resize pixel updates.",
                "This provides smooth, visually pleasing updates with properly antialiasing and has only modest computational requirements. pTHINCs resizing approach has a number of advantages.",
                "First, it allows the PDA to leverage the vastly superior computational power of the server to use high quality resampling algorithms and produce higher quality updates for the PDA to display.",
                "Second, resizing the screen does not translate into additional resource requirements for the PDA, since it does not need to perform any additional work.",
                "Finally, better utilization of the wireless network is attained since rescaling the updates reduces their bandwidth requirements.",
                "To enable users to orient their displays on a PDA to provide a viewing experience that best accommodates user preferences and the layout of web pages or applications, pTHINC provides a display rotation mechanism to switch between landscape and portrait viewing modes. pTHINC display rotation is completely supported by the client, not the server. pTHINC does not explicitly recalculate the ge146 ometry of display updates to perform rotation, which would be computationally expensive.",
                "Instead, pTHINC simply changes the way data is copied into the framebuffer to switch between display modes.",
                "When in portrait mode, data is copied along the rows of the framebuffer from left to right.",
                "When in landscape mode, data is copied along the columns of the framebuffer from top to bottom.",
                "These very fast and simple techniques replace one set of copy operations with another and impose no performance overhead. pTHINC provides its own rotation mechanism to support a wide range of devices without imposing additional feature requirements on the PDA.",
                "Although some newer PDA devices provide native support for different orientations, this mechanism is not dynamic and requires the user to rotate the PDAs entire user interface before starting the pTHINC client.",
                "Windows Mobile provides native API mechanisms for PDA applications to rotate their UI on the fly, but these mechanisms deliver poor performance and display quality as the rotation is performed naively and is not completely accurate. 3.2 Video Playback Video has gradually become an integral part of the World Wide Web, and its presence will only continue to increase.",
                "Web sites today not only use animated graphics and flash to deliver web content in an attractive manner, but also utilize streaming video to enrich the web interface.",
                "Users are able to view pre-recorded and live newscasts on CNN, watch sports highlights on ESPN, and even search through large collection of videos on Google Video.",
                "To allow applications to provide efficient video playback, interfaces have been created in display systems that allow video device drivers to expose their hardware capabilities back to the applications. pTHINC takes advantage of these interfaces and its virtual device driver approach to provide a virtual bridge between the remote client and its hardware and the applications, and transparently support video playback.",
                "On top of this architecture, pTHINC uses the YUV colorspace to encode the video content, which provides a number of benefits.",
                "First, it has become increasingly common for PDA video hardware to natively support YUV and be able to perform the colorspace conversion and scaling automatically.",
                "As a result, pTHINC is able to provide fullscreen video playback without any performance hits.",
                "Second, the use of YUV allows for a more efficient representation of RGB data without loss of quality, by taking advantage of the human eyes ability to better distinguish differences in brightness than in color.",
                "In particular, pTHINC uses the YV12 format, which allows full color RGB data to be encoded using just 12 bits per pixel.",
                "Third, YUV data is produced as one of the last steps of the decoding process of most video codecs, allowing pTHINC to provide video playback in a manner that is format independent.",
                "Finally, even if the PDAs video hardware is unable to accelerate playback, the colorspace conversion process is simple enough that it does not impose unreasonable requirements on the PDA.",
                "A more concrete example of how pTHINC leverages the PDA video hardware to support video playback can be seen in our prototype implementation on the popular Dell Axim X51v PDA, which is equipped with the Intel 2700G multimedia accelerator.",
                "In this case, pTHINC creates an offscreen buffer in video memory and writes and reads from this memory region data on the YV12 format.",
                "When a new video frame arrives, video data is copied from the buffer to Figure 2: Experimental Testbed an overlay surface in video memory, which is independent of the normal surface used for traditional drawing.",
                "As the YV12 data is put onto the overlay, the Intel accelerator automatically performs both colorspace conversion and scaling.",
                "By using the overlay surface, pTHINC has no need to redraw the screen once video playback is over since the overlapped surface is unaffected.",
                "In addition, specific overlay regions can be manipulated by leveraging the video hardware, for example to perform hardware linear interpolation to smooth out the frame and display it fullscreen, and to do automatic rotation when the client runs in landscape mode. 4.",
                "EXPERIMENTAL RESULTS We have implemented a pTHINC prototype that runs the client on widely-used Windows Mobile-based Pocket PC devices and the server on both Windows and Linux operating systems.",
                "To demonstrate its effectiveness in supporting mobile wireless web applications, we have measured its performance on web applications.",
                "We present experimental results on different PDA devices for two popular web applications, browsing web pages and playing video content from the web.",
                "We compared pTHINC against native web applications running locally on the PDA to demonstrate the improvement that pTHINC can provide over the traditional fat-client approach.",
                "We also compared pTHINC against three of the most widely used thin clients that can run on PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] and VNC (Virtual Network Computing) [16].",
                "We follow common practice and refer to Citrix MetaFrameXP and Microsoft Remote Desktop by their respective remote display protocols, ICA (Independent Computing Architecture) and RDP (Remote Desktop Protocol). 4.1 Experimental Testbed We conducted our web experiments using two different wireless Pocket PC PDAs in an isolated Wi-Fi network testbed, as shown in Figure 2.",
                "The testbed consisted of two PDA client devices, a packet monitor, a thin-client server, and a web server.",
                "Except for the PDAs, all of the other machines were IBM Netfinity 4500R servers with dual 933 MHz Intel PIII CPUs and 512 MB RAM and were connected on a switched 100 Mbps FastEthernet network.",
                "The web server used was Apache 1.3.27, the network emulator was NISTNet 2.0.12, and the packet monitor was Ethereal 0.10.9.",
                "The PDA clients connected to the testbed through a 802.11b Lucent Orinoco AP-2000 wireless access point.",
                "All experiments using the wireless network were conducted within ten feet of the access point, so we considered the amount of packet loss to be negligible in our experiments.",
                "Two Pocket PC PDAs were used to provide results across both older, less powerful models and newer higher performance models.",
                "The older model was a Dell Axim X5 with 147 Client 1024×768 640×480 Depth Resize Clip RDP no yes 8-bit no yes VNC yes yes 16-bit no no ICA yes yes 16-bit yes no pTHINC yes yes 24-bit yes no Table 2: Thin-client Testbed Configuration Setting a 400 MHz Intel XScale PXA255 CPU and 64 MB RAM running Windows Mobile 2003 and a Dell TrueMobile 1180 2.4Ghz CompactFlash card for wireless networking.",
                "The newer model was a Dell Axim X51v with a 624 MHz Intel XScale XPA270 CPU and 64 MB RAM running Windows Mobile 5.0 and integrated 802.11b wireless networking.",
                "The X51v has an Intel 2700G multimedia accelerator with 16MB video memory.",
                "Both PDAs are capable of 16-bit color but have different screen sizes and display resolutions.",
                "The X5 has a 3.5 inch diagonal screen with 240×320 resolution.",
                "The X51v has a 3.7 inch diagonal screen with 480×640.",
                "The four thin clients that we used support different levels of display quality as summarized in Table 2.",
                "The RDP client only supports a fixed 640×480 display resolution on the server with 8-bit color depth, while other platforms provide higher levels of display quality.",
                "To provide a fair comparison across all platforms, we conducted our experiments with thin-client sessions configured for two possible resolutions, 1024×768 and 640×480.",
                "Both ICA and VNC were configured to use the native PDA resolution of 16-bit color depth.",
                "The current pTHINC prototype uses 24-bit color directly and the client downsamples updates to the 16-bit color depth available on the PDA.",
                "RDP was configured using only 8-bit color depth since it does not support any better color depth.",
                "Since both pTHINC and ICA provide the ability to view the display resized to fit the screen, we measured both clients with and without the display resized to fit the PDA screen.",
                "Each thin client was tested using landscape rather than portrait mode when available.",
                "All systems run on the X51v could run in landscape mode because the hardware provides a landscape mode feature.",
                "However, the X5 does not provide this functionality.",
                "Only pTHINC directly supports landscape mode, so it was the only system that could run in landscape mode on both the X5 and X51v.",
                "To provide a fair comparison, we also standardized on common hardware and operating systems whenever possible.",
                "All of the systems used the Netfinity server as the thin-client server.",
                "For the two systems designed for Windows servers, ICA and RDP, we ran Windows 2003 Server on the server.",
                "For the other systems which support X-based servers, VNC and pTHINC, we ran the Debian Linux Unstable distribution with the Linux 2.6.10 kernel on the server.",
                "We used the latest thin-client server versions available on each platform at the time of our experiments, namely Citrix MetaFrame XP Server for Windows Feature Release 3, Microsoft Remote Desktop built into Windows XP and Windows 2003 using RDP 5.2, and VNC 4.0. 4.2 Application Benchmarks We used two web application benchmarks for our experiments based on two common application scenarios, browsing web pages and playing video content from the web.",
                "Since many thin-client systems including two of the ones tested are closed and proprietary, we measured their performance in a noninvasive manner by capturing network traffic with a packet monitor and using a variant of slow-motion benchmarking [13] previously developed to measure thin-client performance in PDA environments [10].",
                "This measurement methodology accounts for both the display decoupling that can occur between client and server in thin-client systems as well as client processing time, which may be significant in the case of PDAs.",
                "To measure web browsing performance, we used a web browsing benchmark based on the Web Text Page Load Test from the Ziff-Davis i-Bench benchmark suite [7].",
                "The benchmark consists of JavaScript controlled load of 55 pages from the web server.",
                "The pages contain both text and graphics with pages varying in size.",
                "The graphics are embedded images in GIF and JPEG formats.",
                "The original i-Bench benchmark was modified for slow-motion benchmarking by introducing delays of several seconds between the pages using JavaScript.",
                "Then two tests were run, one where delays where added between each page, and one where pages where loaded continuously without waiting for them to be displayed on the client.",
                "In the first test, delays were sufficiently adjusted in each case to ensure that each page could be received and displayed on the client completely without temporal overlap in transferring the data belonging to two consecutive pages.",
                "We used the packet monitor to record the packet traffic for each run of the benchmark, then used the timestamps of the first and last packet in the trace to obtain our latency measures [10].",
                "The packet monitor also recorded the amount of data transmitted between the client and the server.",
                "The ratio between the data traffic in the two tests yields a scale factor.",
                "This scale factor shows the loss of data between the server and the client due to inability of the client to process the data quickly enough.",
                "The product of the scale factor with the latency measurement produces the true latency accounting for client processing time.",
                "To run the web browsing benchmark, we used Mozilla Firefox 1.0.4 running on the thin-client server for the thin clients, and Windows Internet Explorer (IE) Mobile for 2003 and Mobile for 5.0 for the native browsers on the X5 and X51v PDAs, respectively.",
                "In all cases, the web browser used was sized to fill the entire display region available.",
                "To measure video playback performance, we used a video benchmark that consisted of playing a 34.75s MPEG-1 video clip containing a mix of news and entertainment programming at full-screen resolution.",
                "The video clip is 5.11 MB and consists of 834 352x240 pixel frames with an ideal frame rate of 24 frames/sec.",
                "We measured video performance using slow-motion benchmarking by monitoring resulting packet traffic at two playback rates, 1 frames/second (fps) and 24 fps, and comparing the results to determine playback delays and frame drops that occur at 24 fps to measure overall video quality [13].",
                "For example, 100% quality means that all video frames were played at real-time speed.",
                "On the other hand, 50% quality could mean that half the video data was dropped, or that the clip took twice as long to play even though all of the video data was displayed.",
                "To run the video benchmark, we used Windows Media Player 9 for Windows-based thin-client servers, MPlayer 1.0 pre 6 for X-based thin-client servers, and Windows Media Player 9 Mobile and 10 Mobile for the native video players running locally on the X5 and X51v PDAs, respectively.",
                "In all cases, the video player used was sized to fill the entire display region available. 4.3 Measurements Figures 3 and 4 show the results of running the web brows148 0 1 10 100 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL Latency(s) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 3: Browsing Benchmark: Average Page Latency ing benchmark.",
                "For each platform, we show results for up to four different configurations, two on the X5 and two on the X51v, depending on whether each configuration was supported.",
                "However, not all platforms could support all configurations.",
                "The local browser only runs at the display resolution of the PDA, 480×680 or less for the X51v and the X5.",
                "RDP only runs at 640×480.",
                "Neither platform could support 1024×768 display resolution.",
                "ICA only ran on the X5 and could not run on the X51v because it did not work on Windows Mobile 5.",
                "Figure 3 shows the average latency per web page for each platform. pTHINC provides the lowest average web browsing latency on both PDAs.",
                "On the X5, pTHINC performs up to 70 times better than other thin-client systems and 8 times better than the local browser.",
                "On the X51v, pTHINC performs up to 80 times better than other thin-client systems and 7 times better than the native browser.",
                "In fact, all of the thin clients except VNC outperform the local PDA browser, demonstrating the performance benefits of the thin-client approach.",
                "Usability studies have shown that web pages should take less than one second to download for the user to experience an uninterrupted web browsing experience [14].",
                "The measurements show that only the thin clients deliver subsecond web page latencies.",
                "In contrast, the local browser requires more than 3 seconds on average per web page.",
                "The local browser performs worse since it needs to run a more limited web browser to process the HTML, JavaScript, and do all the rendering using the limited capabilities of the PDA.",
                "The thin clients can take advantage of faster server hardware and a highly tuned web browser to process the web content much faster.",
                "Figure 3 shows that RDP is the next fastest platform after pTHINC.",
                "However, RDP is only able to run at a fixed resolution of 640×480 and 8-bit color depth.",
                "Furthermore, RDP also clips the display to the size of the PDA screen so that it does not need to send updates that are not visible on the PDA screen.",
                "This provides a performance benefit assuming the remaining web content is not viewed, but degrades performance when a user scrolls around the display to view other web content.",
                "RDP achieves its performance with significantly lower display quality compared to the other thin clients and with additional display clipping not used by other systems.",
                "As a result, RDP performance alone does not provide a complete comparison with the other platforms.",
                "In contrast, pTHINC provides the fastest performance while at the same time providing equal or better display quality than the other systems. 0 1 10 100 1000 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL DataSize(KB) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 4: Browsing Benchmark: Average Page Data Transferred Since VNC and ICA provide similar display quality to pTHINC, these systems provide a more fair comparison of different thin-client approaches.",
                "ICA performs worse in part because it uses higher-level display primitives that require additional client processing costs.",
                "VNC performs worse in part because it loses display data due to its client-pull delivery mechanism and because of the client processing costs in decompressing raw pixel primitives.",
                "In both cases, their performance was limited in part because their PDA clients were unable to keep up with the rate at which web pages were being displayed.",
                "Figure 3 also shows measurements for those thin clients that support resizing the display to fit the PDA screen, namely ICA and pTHINC.",
                "Resizing requires additional processing, which results in slower average web page latencies.",
                "The measurements show that the additional delay incurred by ICA when resizing versus not resizing is much more substantial than for pTHINC.",
                "ICA performs resizing on the slower PDA client.",
                "In contrast, pTHINC leverage the more powerful server to do resizing, reducing the performance difference between resizing and not resizing.",
                "Unlike ICA, pTHINC is able to provide subsecond web page download latencies in both cases.",
                "Figure 4 shows the data transferred in KB per page when running the slow-motion version of the tests.",
                "All of the platforms have modest data transfer requirements of roughly 100 KB per page or less.",
                "This is well within the bandwidth capacity of Wi-Fi networks.",
                "The measurements show that the local browser does not transfer the least amount of data.",
                "This is surprising as HTML is often considered to be a very compact representation of content.",
                "Instead, RDP is the most bandwidth efficient platform, largely as a result of using only 8-bit color depth and screen clipping so that it does not transfer the entire web page to the client. pTHINC overall has the largest data requirements, slightly more than VNC.",
                "This is largely a result of the current pTHINC prototypes lack of native support for 16-bit color data in the wire protocol.",
                "However, this result also highlights pTHINCs performance as it is faster than all other systems even while transferring more data.",
                "Furthermore, as newer PDA models support full 24-bit color, these results indicate that pTHINC will continue to provide good web browsing performance.",
                "Since display usability and quality are as important as performance, Figures 5 to 8 compare screenshots of the different thin clients when displaying a web page, in this case from the popular BBC news website.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode 149 Figure 5: Browser Screenshot: RDP 640x480 Figure 6: Browser Screenshot: VNC 1024x768 Figure 7: Browser Screenshot: ICA Resized 1024x768 Figure 8: Browser Screenshot: pTHINC Resized 1024x768 using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "While the screenshots lack the visual fidelity of the actual device display, several observations can be made.",
                "Figure 5 shows that RDP does not support fullscreen mode and wastes lots of screen space for controls and UI elements, requiring the user to scroll around in order to access the full contents of the web browsing session.",
                "Figure 6 shows that VNC makes better use of the screen space and provides better display quality, but still forces the user to scroll around to view the web page due to its lack of resizing support.",
                "Figure 7 shows ICAs ability to display the full web page given its resizing support, but that its lack of landscape capability and poorer resize algorithm significantly compromise display quality.",
                "In contrast, Figure 8 shows pTHINC using resizing to provide a high quality fullscreen display of the full width of the web page. pTHINC maximizes the entire viewing region by moving all controls to the PDA buttons.",
                "In addition, pTHINC leverages the server computational power to use a high quality resizing algorithm to resize the display to fit the PDA screen without significant overhead.",
                "Figures 9 and 10 show the results of running the video playback benchmark.",
                "For each platform except ICA, we show results for an X5 and X51v configuration.",
                "ICA could not run on the X51v as noted earlier.",
                "The measurements were done using settings that reflected the environment a user would have to access a web session from both a desktop computer and a PDA.",
                "As such, a 1024×768 server display resolution was used whenever possible and the video was shown at fullscreen.",
                "RDP was limited to 640×480 display resolution as noted earlier.",
                "Since viewing the entire video display is the only really usable option, we resized the display to fit the PDA screen for those platforms that supported this feature, namely ICA and pTHINC.",
                "Figure 9 shows the video quality for each platform. pTHINC is the only thin client able to provide perfect video playback quality, similar to the native PDA video player.",
                "All of the other thin clients deliver very poor video quality.",
                "With the exception of RDP on the X51v which provided unacceptable 35% video quality, none of the other systems were even able to achieve 10% video quality.",
                "VNC and ICA have the worst quality at 8% on the X5 device. pTHINCs native video support enables superior video performance, while other thin clients suffer from their inability to distinguish video from normal display updates.",
                "They attempt to apply ineffective and expensive compression algorithms on the video data and are unable to keep up with the stream of updates generated, resulting in dropped frames or long playback times.",
                "VNC suffers further from its client-pull update model because video frames are generated faster than the rate at which the client can process and send requests to the server to obtain the next display update.",
                "Figure 10 shows the total data transferred during 150 0% 20% 40% 60% 80% 100% pTHINCICAVNCRDPLOCAL VideoQuality Platform Axim X5 Axim X51v Figure 9: Video Benchmark: Fullscreen Video Quality 0 1 10 100 pTHINCICAVNCRDPLOCAL VideoDataSize(MB) Platform Axim X5 Axim X51v Figure 10: Video Benchmark: Fullscreen Video Data video playback for each system.",
                "The native player is the most bandwidth efficient platform, sending less than 6 MB of data, which corresponds to about 1.2 Mbps of bandwidth. pTHINCs 100% video quality requires about 25 MB of data which corresponds to a bandwidth usage of less than 6 Mbps.",
                "While the other thin clients send less data than THINC, they do so because they are dropping video data, resulting in degraded video quality.",
                "Figures 11 to 14 compare screenshots of the different thin clients when displaying the video clip.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "Figures 11 and 12 show that RDP and VNC are unable to display the entire video frame on the PDA screen.",
                "RDP wastes screen space for UI elements and VNC only shows the top corner of the video frame on the screen.",
                "Figure 13 shows that ICA provides resizing to display the entire video frame, but did not proportionally resize the video data, resulting in strange display artifacts.",
                "In contrast, Figure 14 shows pTHINC using resizing to provide a high quality fullscreen display of the entire video frame. pTHINC provides visually more appealing video display than RDP, VNC, or ICA. 5.",
                "RELATED WORK Several studies have examined the web browsing performance of thin-client computing [13, 19, 10].",
                "The ability for thin clients to improve web browsing performance on wireless PDAs was first quantitatively demonstrated in a previous study by one of the authors [10].",
                "This study demonstrated that thin clients can provide both faster web browsing performance and greater web browsing functionality.",
                "The study considered a wide range of web content including content from medical information systems.",
                "Our work builds on this previous study and consider important issues such as how usable existing thin clients are in PDA environments, the trade-offs between thin-client usability and performance, performance across different PDA devices, and the performance of thin clients on common web-related applications such as video.",
                "Many thin clients have been developed and some have PDA clients, including Microsofts Remote Desktop [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5], and Tarantella [18].",
                "These systems were first designed for desktop computing and retrofitted for PDAs.",
                "Unlike pTHINC, they do not address key system architecture and usability issues important for PDAs.",
                "This limits their display quality, system performance, available screen space, and overall usability on PDAs. pTHINC builds on previous work by two of the authors on THINC [1], extending the server architecture and introducing a client interface and usage model to efficiently support PDA devices for mobile web applications.",
                "Other approaches to improve the performance of mobile wireless web browsing have focused on using transcoding and caching proxies in conjunction with the fat client model [11, 9, 4, 8].",
                "They work by pushing functionality to external proxies, and using specialized browsing applications on the PDA device that communicate with the proxy.",
                "Our thinclient approach differs fundamentally from these fat-client approaches by pushing all web browser logic to the server, leveraging existing investments in desktop web browsers and helper applications to work seamlessly with production systems without any additional proxy configuration or web browser modifications.",
                "With the emergence of web browsing on small display devices, web sites have been redesigned using mechanisms like WAP and specialized native web browsers have been developed to tailor the needs of these devices.",
                "Recently, Opera has developed the Opera Mini [15] web browser, which uses an approach similar to the thin-client model to provide access across a number of mobile devices that would normally be incapable of running a web browser.",
                "Instead of requiring the device to process web pages, it uses a remote server to pre-process the page before sending it to the phone. 6.",
                "CONCLUSIONS We have introduced pTHINC, a thin-client architecture for wireless PDAs. pTHINC provides key architectural and usability mechanisms such as server-side screen resizing, clientside screen rotation using simple copy techniques, YUV video support, and maximizing screen space for display updates and leveraging existing PDA control buttons for UI elements. pTHINC transparently supports traditional desktop browsers and their helper applications on PDA devices and desktop machines, providing mobile users with ubiquitous access to a consistent, personalized, and full-featured web environment across heterogeneous devices.",
                "We have implemented pTHINC and measured its performance on web applications compared to existing thin-client systems and native web applications.",
                "Our results on multiple mobile wireless devices demonstrate that pTHINC delivers web browsing performance up to 80 times better than existing thin-client systems, and 8 times better than a native PDA browser.",
                "In addition, pTHINC is the only PDA thin client 151 Figure 11: Video Screenshot: RDP 640x480 Figure 12: Video Screenshot: VNC 1024x768 Figure 13: Video Screenshot: ICA Resized 1024x768 Figure 14: Video Screenshot: pTHINC Resized 1024x768 that transparently provides full-screen, full frame rate video playback, making web sites with multimedia content accessible to mobile web users. 7.",
                "ACKNOWLEDGEMENTS This work was supported in part by NSF ITR grants CCR0219943 and CNS-0426623, and an IBM SUR Award. 8.",
                "REFERENCES [1] R. Baratto, L. Kim, and J. Nieh.",
                "THINC: A Virtual Display Architecture for Thin-Client Computing.",
                "In Proceedings of the 20th ACM Symposium on Operating Systems Principles (SOSP), Oct. 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius, and A. Muir.",
                "Microsoft Windows NT Server 4.0, Terminal Server Edition: Technical Reference.",
                "Microsoft Press, Redmond, WA, 1999. [4] A.",
                "Fox, I. Goldberg, S. D. Gribble, and D. C. Lee.",
                "Experience With Top Gun Wingman: A Proxy-Based Graphical Web Browser for the 3Com PalmPilot.",
                "In Proceedings of Middleware 98, Lake District, England, September 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Health Insurance Portability and Accountability Act. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench version 1.5. http: //etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi.",
                "On proxy agents, mobility, and web access.",
                "Mobile Networks and Applications, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon, and A. Ortega.",
                "Design and Implementation of a Soft Caching Proxy.",
                "Computer Networks and ISDN Systems, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana, and S. Varshneya.",
                "Improving Web Browsing on Wireless PDAs Using Thin-Client Computing.",
                "In Proceedings of the 13th International World Wide Web Conference (WWW), May 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham, and P. Shenoy.",
                "TranSquid: Transcoding and caching proxy for heterogenous ecommerce environments.",
                "In Proceedings of the 12th IEEE Workshop on Research Issues in Data Engineering (RIDE 02), Feb. 2002. [12] .NET VNC Viewer for PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang, and N. Novik.",
                "Measuring Thin-Client Performance Using Slow-Motion Benchmarking.",
                "ACM Trans.",
                "Computer Systems, 21(1):87-115, Feb. 2003. [14] J. Nielsen.",
                "Designing Web Usability.",
                "New Riders Publishing, Indianapolis, IN, 2000. [15] Opera Mini Browser. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood, and A. Hopper.",
                "Virtual Network Computing.",
                "IEEE Internet Computing, 2(1), Jan./Feb. 1998. [17] R. W. Scheifler and J. Gettys.",
                "The X Window System.",
                "ACM Trans.",
                "Gr., 5(2):79-106, Apr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla, and M. Sajjadpour.",
                "Web Browsing Performance of Wireless Thin-Client Computing.",
                "In Proceedings of the 12th International World Wide Web Conference (WWW), May 2003. 152"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        },
        "thin-client": {
            "translated_key": "cliente ligero",
            "is_in_text": true,
            "original_annotated_sentences": [
                "pTHINC: A <br>thin-client</br> Architecture for Mobile Wireless Web Joeng Kim, Ricardo A. Baratto, and Jason Nieh Department of Computer Science Columbia University, New York, NY, USA {jk2438, ricardo, nieh}@cs.columbia.edu ABSTRACT Although web applications are gaining popularity on mobile wireless PDAs, web browsers on these systems can be quite slow and often lack adequate functionality to access many web sites.",
                "We have developed pTHINC, a PDA thinclient solution that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide high-fidelity display and seamless mobility across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available screen resolution for application display.",
                "We have implemented pTHINC on Windows Mobile and evaluated its performance on mobile wireless devices.",
                "Our results compared to local PDA web browsers and other <br>thin-client</br> approaches demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "Categories and Subject Descriptors: C.2.4 ComputerCommunication-Networks: Distributed Systems - client/ server General Terms: Design, Experimentation, Performance 1.",
                "INTRODUCTION The increasing ubiquity of wireless networks and decreasing cost of hardware is fueling a proliferation of mobile wireless handheld devices, both as standalone wireless Personal Digital Assistants (PDA) and popular integrated PDA/cell phone devices.",
                "These devices are enabling new forms of mobile computing and communication.",
                "Service providers are leveraging these devices to deliver pervasive web access, and mobile web users already often use these devices to access web-enabled information such as news, email, and localized travel guides and maps.",
                "It is likely that within a few years, most of the devices accessing the web will be mobile.",
                "Users typically access web content by running a web browser and associated helper applications locally on the PDA.",
                "Although native web browsers exist for PDAs, they deliver subpar performance and have a much smaller feature set and more limited functionality than their desktop computing counterparts [10].",
                "As a result, PDA web browsers are often not able to display web content from web sites that leverage more advanced web technologies to deliver a richer web experience.",
                "This fundamental problem arises for two reasons.",
                "First, because PDAs have a completely different hardware/software environment from traditional desktop computers, web applications need to be rewritten and customized for PDAs if at all possible, duplicating development costs.",
                "Because the desktop application market is larger and more mature, most development effort generally ends up being spent on desktop applications, resulting in greater functionality and performance than their PDA counterparts.",
                "Second, PDAs have a more resource constrained environment than traditional desktop computers to provide a smaller form factor and longer battery life.",
                "Desktop web browsers are large, complex applications that are unable to run on a PDA.",
                "Instead, developers are forced to significantly strip down these web browsers to provide a usable PDA web browser, thereby crippling PDA browser functionality.",
                "<br>thin-client</br> computing provides an alternative approach for enabling pervasive web access from handheld devices.",
                "A <br>thin-client</br> computing system consists of a server and a client that communicate over a network using a remote display protocol.",
                "The protocol enables graphical displays to be virtualized and served across a network to a client device, while application logic is executed on the server.",
                "Using the remote display protocol, the client transmits user input to the server, and the server returns screen updates of the applications from the server to the client.",
                "Using a <br>thin-client</br> model for mobile handheld devices, PDAs can become simple stateless clients that leverage the remote server capabilities to execute web browsers and other helper applications.",
                "The <br>thin-client</br> model provides several important benefits for mobile wireless web.",
                "First, standard desktop web applications can be used to deliver web content to PDAs without rewriting or adapting applications to execute on a PDA, reducing development costs and leveraging existing software investments.",
                "Second, complex web applications can be executed on powerful servers instead of running stripped down versions on more resource constrained PDAs, providing greater functionality and better performance [10].",
                "Third, web applications can take advantage of servers with faster networks and better connectivity, further boosting application performance.",
                "Fourth, PDAs can be even simpler devices since they do not need to perform complex application logic, potentially reducing energy consumption and extend143 ing battery life.",
                "Finally, PDA thin clients can be essentially stateless appliances that do not need to be backed up or restored, require almost no maintenance or upgrades, and do not store any sensitive data that can be lost or stolen.",
                "This model provides a viable avenue for medical organizations to comply with HIPAA regulations [6] while embracing mobile handhelds in their day to day operations.",
                "Despite these potential advantages, thin clients have been unable to provide the full range of these benefits in delivering web applications to mobile handheld devices.",
                "Existing thin clients were not designed for PDAs and do not account for important usability issues in the context of small form factor devices, resulting in difficulty in navigating displayed web content.",
                "Furthermore, existing thin clients are ineffective at providing seamless mobility across the heterogeneous mix of device display sizes and resolutions.",
                "While existing thin clients can already provide faster performance than native PDA web browsers in delivering HTML web content, they do not effectively support more display-intensive web helper applications such as multimedia video, which is increasingly an integral part of available web content.",
                "To harness the full potential of <br>thin-client</br> computing in providing mobile wireless web on PDAs, we have developed pTHINC (PDA <br>thin-client</br> InterNet Computing). pTHINC builds on our previous work on THINC [1] to provide a thinclient architecture for mobile handheld devices. pTHINC virtualizes and resizes the display on the server to efficiently deliver high-fidelity screen updates to a broad range of different clients, screen sizes, and screen orientations, including both portrait and landscape viewing modes.",
                "This enables pTHINC to provide the same persistent web session across different client devices.",
                "For example, pTHINC can provide the same web browsing session appropriately scaled for display on a desktop computer and a PDA so that the same cookies, bookmarks, and other meta-data are continuously available on both machines simultaneously. pTHINCs virtual display approach leverages semantic information available in display commands, and client-side video hardware to provide more efficient remote display mechanisms that are crucial for supporting more display-intensive web applications.",
                "Given limited display resolution on PDAs, pTHINC maximizes the use of screen real estate for remote display by moving control functionality from the screen to readily available PDA control buttons, improving system usability.",
                "We have implemented pTHINC on Windows Mobile and demonstrated that it works transparently with existing applications, window systems, and operating systems, and does not require modifying, recompiling, or relinking existing software.",
                "We have quantitatively evaluated pTHINC against local PDA web browsers and other <br>thin-client</br> approaches on Pocket PC devices.",
                "Our experimental results demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "This paper presents the design and implementation of pTHINC.",
                "Section 2 describes the overall usage model and usability characteristics of pTHINC.",
                "Section 3 presents the design and system architecture of pTHINC.",
                "Section 4 presents experimental results measuring the performance of pTHINC on web applications and comparing it against native PDA browsers and other popular PDA <br>thin-client</br> systems.",
                "Section 5 discusses related work.",
                "Finally, we present some concluding remarks. 2.",
                "PTHINC USAGE MODEL pTHINC is a <br>thin-client</br> system that consists of a simple client viewer application that runs on the PDA and a server that runs on a commodity PC.",
                "The server leverages more powerful PCs to to run web browsers and other application logic.",
                "The client takes user input from the PDA stylus and virtual keyboard and sends them to the server to pass to the applications.",
                "Screen updates are then sent back from the server to the client for display to the user.",
                "When the pTHINC PDA client is started, the user is presented with a simple graphical interface where information such as server address and port, user authentication information, and session settings can be provided. pTHINC first attempts to connect to the server and perform the necessary handshaking.",
                "Once this process has been completed, pTHINC presents the user with the most recent display of his session.",
                "If the session does not exist, a new session is created.",
                "Existing sessions can be seamlessly continued without changes in the session setting or server configuration.",
                "Unlike other <br>thin-client</br> systems, pTHINC provides a user with a persistent web session model in which a user can launch a session running a web browser and associated applications at the server, then disconnect from that session and reconnect to it again anytime.",
                "When a user reconnects to the session, all of the applications continue running where the user left off, so that the user can continue working as though he or she never disconnected.",
                "The ability to disconnect and reconnect to a session at anytime is an important benefit for mobile wireless PDA users which may have intermittent network connectivity. pTHINCs persistent web session model enables a user to reconnect to a web session from devices other than the one on which the web session was originally initiated.",
                "This provides users with seamless mobility across different devices.",
                "If a user loses his PDA, he can easily use another PDA to access his web session.",
                "Furthermore, pTHINC allows users to use non-PDA devices to access web sessions as well.",
                "A user can access the same persistent web session on a desktop PC as on a PDA, enabling a user to use the same web session from any computer. pTHINCs persistent web session model addresses a key problem encountered by mobile web users, the lack of a common web environment across computers.",
                "Web browsers often store important information such as bookmarks, cookies, and history, which enable them to function in a much more useful manner.",
                "The problem that occurs when a user moves between computers is that this data, which is specific to a web browser installation, cannot move with the user.",
                "Furthermore, web browsers often need helper applications to process different media content, and those applications may not be consistently available across all computers. pTHINC addresses this problem by enabling a user to remotely use the exact same web browser environment and helper applications from any computer.",
                "As a result, pTHINC can provide a common, consistent web browsing environment for mobile users across different devices without requiring them to attempt to repeatedly synchronize different web browsing environments across multiple machines.",
                "To enable a user to access the same web session on different devices, pTHINC must provide mechanisms to support different display sizes and resolutions.",
                "Toward this end, pTHINC provides a zoom feature that enables a user to zoom in and out of a display and allows the display of a web 144 Figure 1: pTHINC shortcut keys session to be resized to fit the screen of the device being used.",
                "For example, if the server is running a web session at 1024×768 but the client is a PDA with a display resolution of 640×480, pTHINC will resize the desktop display to fit the full display in the smaller screen of the PDA. pTHINC provides the PDA user with the option to increase the size of the display by zooming in to different parts of the display.",
                "Users are often familiar with the general layout of commonly visited websites, and are able to leverage this resizing feature to better navigate through web pages.",
                "For example, a user can zoom out of the display to view the entire page content and navigate hyperlinks, then zoom in to a region of interest for a better view.",
                "To enable a user to access the same web session on different devices, pTHINC must also provide mechanisms to support different display orientations.",
                "In a desktop environment, users are typically accustomed to having displays presented in landscape mode where the screen width is larger than its height.",
                "However, in a PDA environment, the choice is not always obvious.",
                "Some users may prefer having the display in portrait mode, as it is easier to hold the device in their hands, while others may prefer landscape mode in order to minimize the amount of side-scrolling necessary to view a web page.",
                "To accommodate PDA user preferences, pTHINC provides an orientation feature that enables it to seamless rotate the display between landscape and portrait mode.",
                "The landscape mode is particularly useful for pTHINC users who frequently access their web sessions on both desktop and PDA devices, providing those users with the same familiar landscape setting across different devices.",
                "Because screen space is a relatively scarce resource on PDAs, pTHINC runs in fullscreen mode to maximize the screen area available to display the web session.",
                "To be able to use all of the screen on the PDA and still allow the user to control and interact with it, pTHINC reuses the typical shortcut buttons found on PDAs to perform all the control functions available to the user.",
                "The buttons used by pTHINC do not require any OS environment changes; they are simply intercepted by the pTHINC client application when they are pressed.",
                "Figure 1 shows how pTHINC utilizes the shortcut buttons to provide easy navigation and improve the overall user experience.",
                "These buttons are not device specific, and the layout shown is common to widelyused PocketPC devices. pTHINC provides six shortcuts to support its usage model: • Rotate Screen: The record button on the left edge is used to rotate the screen between portrait and landscape mode each time the button is pressed. • Zoom Out: The leftmost button on the bottom front is used to zoom out the display of the web session providing a birds eye view of the web session. • Zoom In: The second leftmost button on the bottom front is used to zoom in the display of the web session to more clearly view content of interest. • Directional Scroll: The middle button on the bottom front is used to scroll around the display using a single control button in a way that is already familiar to PDA users.",
                "This feature is particularly useful when the user has zoomed in to a region of the display such that only part of the display is visible on the screen. • Show/Hide Keyboard: The second rightmost button on the bottom front is used to bring up a virtual keyboard drawn on the screen for devices which have no physical keyboard.",
                "The virtual keyboard uses standard PDA OS mechanisms, providing portability across different PDA environments. • Close Session: The rightmost button on the bottom front is used to disconnect from the pTHINC session. pTHINC uses the PDA touch screen, stylus, and standard user interface mechanisms to provide a user interface pointand-click metaphor similar to that provided by the mouse in a traditional desktop computing environment. pTHINC does not use a cursor since PDA environments do not provide one.",
                "Instead, a user can use the stylus to tap on different sections of the touch screen to indicate input focus.",
                "A single tap on the touch screen generates a corresponding single click mouse event.",
                "A double tap on the touch screen generates a corresponding double click mouse event. pTHINC provides two-button mouse emulation by using the stylus to press down on the screen for one second to generate a right mouse click.",
                "All of these actions are identical to the way users already interact with PDA applications in the common PocketPC environment.",
                "In web browsing, users can click on hyperlinks and focus on input boxes by simply tapping on the desired screen area of interest.",
                "Unlike local PDA web browsers and other PDA applications, pTHINC leverages more powerful desktop user interface metaphors to enable users to manipulate multiple open application windows instead of being limited to a single application window at any given moment.",
                "This provides increased browsing flexibility beyond what is currently available on PDA devices.",
                "Similar to a desktop environment, browser windows and other application windows can be moved around by pressing down and dragging the stylus similar to a mouse. 3.",
                "PTHINC SYSTEM ARCHITECTURE pTHINC builds on the THINC [1] remote display architecture to provide a <br>thin-client</br> system for PDAs. pTHINC virtualizes the display at the server by leveraging the video device abstraction layer, which sits below the window server and above the framebuffer.",
                "This is a well-defined, low-level, device-dependent layer that exposes the video hardware to the display system. pTHINC accomplishes this through a simple virtual display driver that intercepts drawing commands, packetizes, and sends them over the network. 145 While other <br>thin-client</br> approaches intercept display commands at other layers of the display subsystem, pTHINCs display virtualization approach provides some key benefits in efficiently supporting PDA clients.",
                "For example, intercepting display commands at a higher layer between applications and the window system as is done by X [17] requires replicating and running a great deal of functionality on the PDA that is traditionally provided by the desktop window system.",
                "Given both the size and complexity of traditional window systems, attempting to replicate this functionality in the restricted PDA environment would have proven to be a daunting, and perhaps unfeasible task.",
                "Furthermore, applications and the window system often require tight synchronization in their operation and imposing a wireless network between them by running the applications on the server and the window system on the client would significantly degrade performance.",
                "On the other hand, intercepting at a lower layer by extracting pixels out of the framebuffer as they are rendered provides a simple solution that requires very little functionality on the PDA client, but can also result in degraded performance.",
                "The reason is that by the time the remote display server attempts to send screen updates, it has lost all semantic information that may have helped it encode efficiently, and it must resort to using a generic and expensive encoding mechanism on the server, as well as a potentially expensive decoding mechanism on the limited PDA client.",
                "In contrast to both the high and low level interception approaches, pTHINCs approach of intercepting at the device driver provides an effective balance between client and server simplicity, and the ability to efficiently encode and decode screen updates.",
                "By using a low-level virtual display approach, pTHINC can efficiently encode application display commands using only a small set of low-level commands.",
                "In a PDA environment, this set of commands provides a crucial component in maintaining the simplicity of the client in the resourceconstrained PDA environment.",
                "The display commands are shown in Table 1, and work as follows.",
                "COPY instructs the client to copy a region of the screen from its local framebuffer to another location.",
                "This command improves the user experience by accelerating scrolling and opaque window movement without having to resend screen data from the server.",
                "SFILL, PFILL, and BITMAP are commands that paint a fixed-size region on the screen.",
                "They are useful for accelerating the display of solid window backgrounds, desktop patterns, backgrounds of web pages, text drawing, and certain operations in graphics manipulation programs.",
                "SFILL fills a sizable region on the screen with a single color.",
                "PFILL replicates a tile over a screen region.",
                "BITMAP performs a fill using a bitmap of ones and zeros as a stipple to apply a foreground and background color.",
                "Finally, RAW is used to transmit unencoded pixel data to be displayed verbatim on a region of the screen.",
                "This command is invoked as a last resort if the server is unable to employ any other command, and it is the only command that may be compressed to mitigate its impact on network bandwidth. pTHINC delivers its commands using a non-blocking, serverpush update mechanism, where as soon as display updates are generated on the server, they are sent to the client.",
                "Clients are not required to explicitly request display updates, thus minimizing the impact that the typical varying network latency of wireless links may have on the responsiveness of the system.",
                "Keeping in mind that resource Command Description COPY Copy a frame buffer area to specified coordinates SFILL Fill an area with a given pixel color value PFILL Tile an area with a given pixel pattern BITMAP Fill a region using a bit pattern RAW Display raw pixel data at a given location Table 1: pTHINC Protocol Display Commands constrained PDAs and wireless networks may not be able to keep up with a fast server generating a large number of updates, pTHINC is able to coalesce, clip, and discard updates automatically if network loss or congestion occurs, or the client cannot keep up with the rate of updates.",
                "This type of behavior proves crucial in a web browsing environment, where for example, a page may be redrawn multiple times as it is rendered on the fly by the browser.",
                "In this case, the PDA will only receive and render the final result, which clearly is all the user is interesting in seeing. pTHINC prioritizes the delivery of updates to the PDA using a Shortest-Remaining-Size-First (SRSF) preemptive update scheduler.",
                "SRSF is analogous to Shortest-RemainingProcessing-Time scheduling, which is known to be optimal for minimizing mean response time in an interactive system.",
                "In a web browsing environment, short jobs are associated with text and basic page layout components such as the pages background, which are critical web content for the user.",
                "On the other hand, large jobs are often lower priority beautifying elements, or, even worse, web page banners and advertisements, which are of questionable value to the user as he or she is browsing the page.",
                "Using SRSF, pTHINC is able to maximize the utilization of the relatively scarce bandwidth available on the wireless connection between the PDA and the server. 3.1 Display Management To enable users to just as easily access their web browser and helper applications from a desktop computer at home as from a PDA while on the road, pTHINC provides a resize mechanism to zoom in and out of the display of a web session. pTHINC resizing is completely supported by the server, not the client.",
                "The server resamples updates to fit within the PDAs viewport before they are transmitted over the network. pTHINC uses Fants resampling algorithm to resize pixel updates.",
                "This provides smooth, visually pleasing updates with properly antialiasing and has only modest computational requirements. pTHINCs resizing approach has a number of advantages.",
                "First, it allows the PDA to leverage the vastly superior computational power of the server to use high quality resampling algorithms and produce higher quality updates for the PDA to display.",
                "Second, resizing the screen does not translate into additional resource requirements for the PDA, since it does not need to perform any additional work.",
                "Finally, better utilization of the wireless network is attained since rescaling the updates reduces their bandwidth requirements.",
                "To enable users to orient their displays on a PDA to provide a viewing experience that best accommodates user preferences and the layout of web pages or applications, pTHINC provides a display rotation mechanism to switch between landscape and portrait viewing modes. pTHINC display rotation is completely supported by the client, not the server. pTHINC does not explicitly recalculate the ge146 ometry of display updates to perform rotation, which would be computationally expensive.",
                "Instead, pTHINC simply changes the way data is copied into the framebuffer to switch between display modes.",
                "When in portrait mode, data is copied along the rows of the framebuffer from left to right.",
                "When in landscape mode, data is copied along the columns of the framebuffer from top to bottom.",
                "These very fast and simple techniques replace one set of copy operations with another and impose no performance overhead. pTHINC provides its own rotation mechanism to support a wide range of devices without imposing additional feature requirements on the PDA.",
                "Although some newer PDA devices provide native support for different orientations, this mechanism is not dynamic and requires the user to rotate the PDAs entire user interface before starting the pTHINC client.",
                "Windows Mobile provides native API mechanisms for PDA applications to rotate their UI on the fly, but these mechanisms deliver poor performance and display quality as the rotation is performed naively and is not completely accurate. 3.2 Video Playback Video has gradually become an integral part of the World Wide Web, and its presence will only continue to increase.",
                "Web sites today not only use animated graphics and flash to deliver web content in an attractive manner, but also utilize streaming video to enrich the web interface.",
                "Users are able to view pre-recorded and live newscasts on CNN, watch sports highlights on ESPN, and even search through large collection of videos on Google Video.",
                "To allow applications to provide efficient video playback, interfaces have been created in display systems that allow video device drivers to expose their hardware capabilities back to the applications. pTHINC takes advantage of these interfaces and its virtual device driver approach to provide a virtual bridge between the remote client and its hardware and the applications, and transparently support video playback.",
                "On top of this architecture, pTHINC uses the YUV colorspace to encode the video content, which provides a number of benefits.",
                "First, it has become increasingly common for PDA video hardware to natively support YUV and be able to perform the colorspace conversion and scaling automatically.",
                "As a result, pTHINC is able to provide fullscreen video playback without any performance hits.",
                "Second, the use of YUV allows for a more efficient representation of RGB data without loss of quality, by taking advantage of the human eyes ability to better distinguish differences in brightness than in color.",
                "In particular, pTHINC uses the YV12 format, which allows full color RGB data to be encoded using just 12 bits per pixel.",
                "Third, YUV data is produced as one of the last steps of the decoding process of most video codecs, allowing pTHINC to provide video playback in a manner that is format independent.",
                "Finally, even if the PDAs video hardware is unable to accelerate playback, the colorspace conversion process is simple enough that it does not impose unreasonable requirements on the PDA.",
                "A more concrete example of how pTHINC leverages the PDA video hardware to support video playback can be seen in our prototype implementation on the popular Dell Axim X51v PDA, which is equipped with the Intel 2700G multimedia accelerator.",
                "In this case, pTHINC creates an offscreen buffer in video memory and writes and reads from this memory region data on the YV12 format.",
                "When a new video frame arrives, video data is copied from the buffer to Figure 2: Experimental Testbed an overlay surface in video memory, which is independent of the normal surface used for traditional drawing.",
                "As the YV12 data is put onto the overlay, the Intel accelerator automatically performs both colorspace conversion and scaling.",
                "By using the overlay surface, pTHINC has no need to redraw the screen once video playback is over since the overlapped surface is unaffected.",
                "In addition, specific overlay regions can be manipulated by leveraging the video hardware, for example to perform hardware linear interpolation to smooth out the frame and display it fullscreen, and to do automatic rotation when the client runs in landscape mode. 4.",
                "EXPERIMENTAL RESULTS We have implemented a pTHINC prototype that runs the client on widely-used Windows Mobile-based Pocket PC devices and the server on both Windows and Linux operating systems.",
                "To demonstrate its effectiveness in supporting mobile wireless web applications, we have measured its performance on web applications.",
                "We present experimental results on different PDA devices for two popular web applications, browsing web pages and playing video content from the web.",
                "We compared pTHINC against native web applications running locally on the PDA to demonstrate the improvement that pTHINC can provide over the traditional fat-client approach.",
                "We also compared pTHINC against three of the most widely used thin clients that can run on PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] and VNC (Virtual Network Computing) [16].",
                "We follow common practice and refer to Citrix MetaFrameXP and Microsoft Remote Desktop by their respective remote display protocols, ICA (Independent Computing Architecture) and RDP (Remote Desktop Protocol). 4.1 Experimental Testbed We conducted our web experiments using two different wireless Pocket PC PDAs in an isolated Wi-Fi network testbed, as shown in Figure 2.",
                "The testbed consisted of two PDA client devices, a packet monitor, a <br>thin-client</br> server, and a web server.",
                "Except for the PDAs, all of the other machines were IBM Netfinity 4500R servers with dual 933 MHz Intel PIII CPUs and 512 MB RAM and were connected on a switched 100 Mbps FastEthernet network.",
                "The web server used was Apache 1.3.27, the network emulator was NISTNet 2.0.12, and the packet monitor was Ethereal 0.10.9.",
                "The PDA clients connected to the testbed through a 802.11b Lucent Orinoco AP-2000 wireless access point.",
                "All experiments using the wireless network were conducted within ten feet of the access point, so we considered the amount of packet loss to be negligible in our experiments.",
                "Two Pocket PC PDAs were used to provide results across both older, less powerful models and newer higher performance models.",
                "The older model was a Dell Axim X5 with 147 Client 1024×768 640×480 Depth Resize Clip RDP no yes 8-bit no yes VNC yes yes 16-bit no no ICA yes yes 16-bit yes no pTHINC yes yes 24-bit yes no Table 2: <br>thin-client</br> Testbed Configuration Setting a 400 MHz Intel XScale PXA255 CPU and 64 MB RAM running Windows Mobile 2003 and a Dell TrueMobile 1180 2.4Ghz CompactFlash card for wireless networking.",
                "The newer model was a Dell Axim X51v with a 624 MHz Intel XScale XPA270 CPU and 64 MB RAM running Windows Mobile 5.0 and integrated 802.11b wireless networking.",
                "The X51v has an Intel 2700G multimedia accelerator with 16MB video memory.",
                "Both PDAs are capable of 16-bit color but have different screen sizes and display resolutions.",
                "The X5 has a 3.5 inch diagonal screen with 240×320 resolution.",
                "The X51v has a 3.7 inch diagonal screen with 480×640.",
                "The four thin clients that we used support different levels of display quality as summarized in Table 2.",
                "The RDP client only supports a fixed 640×480 display resolution on the server with 8-bit color depth, while other platforms provide higher levels of display quality.",
                "To provide a fair comparison across all platforms, we conducted our experiments with <br>thin-client</br> sessions configured for two possible resolutions, 1024×768 and 640×480.",
                "Both ICA and VNC were configured to use the native PDA resolution of 16-bit color depth.",
                "The current pTHINC prototype uses 24-bit color directly and the client downsamples updates to the 16-bit color depth available on the PDA.",
                "RDP was configured using only 8-bit color depth since it does not support any better color depth.",
                "Since both pTHINC and ICA provide the ability to view the display resized to fit the screen, we measured both clients with and without the display resized to fit the PDA screen.",
                "Each thin client was tested using landscape rather than portrait mode when available.",
                "All systems run on the X51v could run in landscape mode because the hardware provides a landscape mode feature.",
                "However, the X5 does not provide this functionality.",
                "Only pTHINC directly supports landscape mode, so it was the only system that could run in landscape mode on both the X5 and X51v.",
                "To provide a fair comparison, we also standardized on common hardware and operating systems whenever possible.",
                "All of the systems used the Netfinity server as the <br>thin-client</br> server.",
                "For the two systems designed for Windows servers, ICA and RDP, we ran Windows 2003 Server on the server.",
                "For the other systems which support X-based servers, VNC and pTHINC, we ran the Debian Linux Unstable distribution with the Linux 2.6.10 kernel on the server.",
                "We used the latest <br>thin-client</br> server versions available on each platform at the time of our experiments, namely Citrix MetaFrame XP Server for Windows Feature Release 3, Microsoft Remote Desktop built into Windows XP and Windows 2003 using RDP 5.2, and VNC 4.0. 4.2 Application Benchmarks We used two web application benchmarks for our experiments based on two common application scenarios, browsing web pages and playing video content from the web.",
                "Since many <br>thin-client</br> systems including two of the ones tested are closed and proprietary, we measured their performance in a noninvasive manner by capturing network traffic with a packet monitor and using a variant of slow-motion benchmarking [13] previously developed to measure <br>thin-client</br> performance in PDA environments [10].",
                "This measurement methodology accounts for both the display decoupling that can occur between client and server in <br>thin-client</br> systems as well as client processing time, which may be significant in the case of PDAs.",
                "To measure web browsing performance, we used a web browsing benchmark based on the Web Text Page Load Test from the Ziff-Davis i-Bench benchmark suite [7].",
                "The benchmark consists of JavaScript controlled load of 55 pages from the web server.",
                "The pages contain both text and graphics with pages varying in size.",
                "The graphics are embedded images in GIF and JPEG formats.",
                "The original i-Bench benchmark was modified for slow-motion benchmarking by introducing delays of several seconds between the pages using JavaScript.",
                "Then two tests were run, one where delays where added between each page, and one where pages where loaded continuously without waiting for them to be displayed on the client.",
                "In the first test, delays were sufficiently adjusted in each case to ensure that each page could be received and displayed on the client completely without temporal overlap in transferring the data belonging to two consecutive pages.",
                "We used the packet monitor to record the packet traffic for each run of the benchmark, then used the timestamps of the first and last packet in the trace to obtain our latency measures [10].",
                "The packet monitor also recorded the amount of data transmitted between the client and the server.",
                "The ratio between the data traffic in the two tests yields a scale factor.",
                "This scale factor shows the loss of data between the server and the client due to inability of the client to process the data quickly enough.",
                "The product of the scale factor with the latency measurement produces the true latency accounting for client processing time.",
                "To run the web browsing benchmark, we used Mozilla Firefox 1.0.4 running on the <br>thin-client</br> server for the thin clients, and Windows Internet Explorer (IE) Mobile for 2003 and Mobile for 5.0 for the native browsers on the X5 and X51v PDAs, respectively.",
                "In all cases, the web browser used was sized to fill the entire display region available.",
                "To measure video playback performance, we used a video benchmark that consisted of playing a 34.75s MPEG-1 video clip containing a mix of news and entertainment programming at full-screen resolution.",
                "The video clip is 5.11 MB and consists of 834 352x240 pixel frames with an ideal frame rate of 24 frames/sec.",
                "We measured video performance using slow-motion benchmarking by monitoring resulting packet traffic at two playback rates, 1 frames/second (fps) and 24 fps, and comparing the results to determine playback delays and frame drops that occur at 24 fps to measure overall video quality [13].",
                "For example, 100% quality means that all video frames were played at real-time speed.",
                "On the other hand, 50% quality could mean that half the video data was dropped, or that the clip took twice as long to play even though all of the video data was displayed.",
                "To run the video benchmark, we used Windows Media Player 9 for Windows-based <br>thin-client</br> servers, MPlayer 1.0 pre 6 for X-based <br>thin-client</br> servers, and Windows Media Player 9 Mobile and 10 Mobile for the native video players running locally on the X5 and X51v PDAs, respectively.",
                "In all cases, the video player used was sized to fill the entire display region available. 4.3 Measurements Figures 3 and 4 show the results of running the web brows148 0 1 10 100 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL Latency(s) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 3: Browsing Benchmark: Average Page Latency ing benchmark.",
                "For each platform, we show results for up to four different configurations, two on the X5 and two on the X51v, depending on whether each configuration was supported.",
                "However, not all platforms could support all configurations.",
                "The local browser only runs at the display resolution of the PDA, 480×680 or less for the X51v and the X5.",
                "RDP only runs at 640×480.",
                "Neither platform could support 1024×768 display resolution.",
                "ICA only ran on the X5 and could not run on the X51v because it did not work on Windows Mobile 5.",
                "Figure 3 shows the average latency per web page for each platform. pTHINC provides the lowest average web browsing latency on both PDAs.",
                "On the X5, pTHINC performs up to 70 times better than other <br>thin-client</br> systems and 8 times better than the local browser.",
                "On the X51v, pTHINC performs up to 80 times better than other <br>thin-client</br> systems and 7 times better than the native browser.",
                "In fact, all of the thin clients except VNC outperform the local PDA browser, demonstrating the performance benefits of the <br>thin-client</br> approach.",
                "Usability studies have shown that web pages should take less than one second to download for the user to experience an uninterrupted web browsing experience [14].",
                "The measurements show that only the thin clients deliver subsecond web page latencies.",
                "In contrast, the local browser requires more than 3 seconds on average per web page.",
                "The local browser performs worse since it needs to run a more limited web browser to process the HTML, JavaScript, and do all the rendering using the limited capabilities of the PDA.",
                "The thin clients can take advantage of faster server hardware and a highly tuned web browser to process the web content much faster.",
                "Figure 3 shows that RDP is the next fastest platform after pTHINC.",
                "However, RDP is only able to run at a fixed resolution of 640×480 and 8-bit color depth.",
                "Furthermore, RDP also clips the display to the size of the PDA screen so that it does not need to send updates that are not visible on the PDA screen.",
                "This provides a performance benefit assuming the remaining web content is not viewed, but degrades performance when a user scrolls around the display to view other web content.",
                "RDP achieves its performance with significantly lower display quality compared to the other thin clients and with additional display clipping not used by other systems.",
                "As a result, RDP performance alone does not provide a complete comparison with the other platforms.",
                "In contrast, pTHINC provides the fastest performance while at the same time providing equal or better display quality than the other systems. 0 1 10 100 1000 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL DataSize(KB) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 4: Browsing Benchmark: Average Page Data Transferred Since VNC and ICA provide similar display quality to pTHINC, these systems provide a more fair comparison of different <br>thin-client</br> approaches.",
                "ICA performs worse in part because it uses higher-level display primitives that require additional client processing costs.",
                "VNC performs worse in part because it loses display data due to its client-pull delivery mechanism and because of the client processing costs in decompressing raw pixel primitives.",
                "In both cases, their performance was limited in part because their PDA clients were unable to keep up with the rate at which web pages were being displayed.",
                "Figure 3 also shows measurements for those thin clients that support resizing the display to fit the PDA screen, namely ICA and pTHINC.",
                "Resizing requires additional processing, which results in slower average web page latencies.",
                "The measurements show that the additional delay incurred by ICA when resizing versus not resizing is much more substantial than for pTHINC.",
                "ICA performs resizing on the slower PDA client.",
                "In contrast, pTHINC leverage the more powerful server to do resizing, reducing the performance difference between resizing and not resizing.",
                "Unlike ICA, pTHINC is able to provide subsecond web page download latencies in both cases.",
                "Figure 4 shows the data transferred in KB per page when running the slow-motion version of the tests.",
                "All of the platforms have modest data transfer requirements of roughly 100 KB per page or less.",
                "This is well within the bandwidth capacity of Wi-Fi networks.",
                "The measurements show that the local browser does not transfer the least amount of data.",
                "This is surprising as HTML is often considered to be a very compact representation of content.",
                "Instead, RDP is the most bandwidth efficient platform, largely as a result of using only 8-bit color depth and screen clipping so that it does not transfer the entire web page to the client. pTHINC overall has the largest data requirements, slightly more than VNC.",
                "This is largely a result of the current pTHINC prototypes lack of native support for 16-bit color data in the wire protocol.",
                "However, this result also highlights pTHINCs performance as it is faster than all other systems even while transferring more data.",
                "Furthermore, as newer PDA models support full 24-bit color, these results indicate that pTHINC will continue to provide good web browsing performance.",
                "Since display usability and quality are as important as performance, Figures 5 to 8 compare screenshots of the different thin clients when displaying a web page, in this case from the popular BBC news website.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode 149 Figure 5: Browser Screenshot: RDP 640x480 Figure 6: Browser Screenshot: VNC 1024x768 Figure 7: Browser Screenshot: ICA Resized 1024x768 Figure 8: Browser Screenshot: pTHINC Resized 1024x768 using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "While the screenshots lack the visual fidelity of the actual device display, several observations can be made.",
                "Figure 5 shows that RDP does not support fullscreen mode and wastes lots of screen space for controls and UI elements, requiring the user to scroll around in order to access the full contents of the web browsing session.",
                "Figure 6 shows that VNC makes better use of the screen space and provides better display quality, but still forces the user to scroll around to view the web page due to its lack of resizing support.",
                "Figure 7 shows ICAs ability to display the full web page given its resizing support, but that its lack of landscape capability and poorer resize algorithm significantly compromise display quality.",
                "In contrast, Figure 8 shows pTHINC using resizing to provide a high quality fullscreen display of the full width of the web page. pTHINC maximizes the entire viewing region by moving all controls to the PDA buttons.",
                "In addition, pTHINC leverages the server computational power to use a high quality resizing algorithm to resize the display to fit the PDA screen without significant overhead.",
                "Figures 9 and 10 show the results of running the video playback benchmark.",
                "For each platform except ICA, we show results for an X5 and X51v configuration.",
                "ICA could not run on the X51v as noted earlier.",
                "The measurements were done using settings that reflected the environment a user would have to access a web session from both a desktop computer and a PDA.",
                "As such, a 1024×768 server display resolution was used whenever possible and the video was shown at fullscreen.",
                "RDP was limited to 640×480 display resolution as noted earlier.",
                "Since viewing the entire video display is the only really usable option, we resized the display to fit the PDA screen for those platforms that supported this feature, namely ICA and pTHINC.",
                "Figure 9 shows the video quality for each platform. pTHINC is the only thin client able to provide perfect video playback quality, similar to the native PDA video player.",
                "All of the other thin clients deliver very poor video quality.",
                "With the exception of RDP on the X51v which provided unacceptable 35% video quality, none of the other systems were even able to achieve 10% video quality.",
                "VNC and ICA have the worst quality at 8% on the X5 device. pTHINCs native video support enables superior video performance, while other thin clients suffer from their inability to distinguish video from normal display updates.",
                "They attempt to apply ineffective and expensive compression algorithms on the video data and are unable to keep up with the stream of updates generated, resulting in dropped frames or long playback times.",
                "VNC suffers further from its client-pull update model because video frames are generated faster than the rate at which the client can process and send requests to the server to obtain the next display update.",
                "Figure 10 shows the total data transferred during 150 0% 20% 40% 60% 80% 100% pTHINCICAVNCRDPLOCAL VideoQuality Platform Axim X5 Axim X51v Figure 9: Video Benchmark: Fullscreen Video Quality 0 1 10 100 pTHINCICAVNCRDPLOCAL VideoDataSize(MB) Platform Axim X5 Axim X51v Figure 10: Video Benchmark: Fullscreen Video Data video playback for each system.",
                "The native player is the most bandwidth efficient platform, sending less than 6 MB of data, which corresponds to about 1.2 Mbps of bandwidth. pTHINCs 100% video quality requires about 25 MB of data which corresponds to a bandwidth usage of less than 6 Mbps.",
                "While the other thin clients send less data than THINC, they do so because they are dropping video data, resulting in degraded video quality.",
                "Figures 11 to 14 compare screenshots of the different thin clients when displaying the video clip.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "Figures 11 and 12 show that RDP and VNC are unable to display the entire video frame on the PDA screen.",
                "RDP wastes screen space for UI elements and VNC only shows the top corner of the video frame on the screen.",
                "Figure 13 shows that ICA provides resizing to display the entire video frame, but did not proportionally resize the video data, resulting in strange display artifacts.",
                "In contrast, Figure 14 shows pTHINC using resizing to provide a high quality fullscreen display of the entire video frame. pTHINC provides visually more appealing video display than RDP, VNC, or ICA. 5.",
                "RELATED WORK Several studies have examined the web browsing performance of <br>thin-client</br> computing [13, 19, 10].",
                "The ability for thin clients to improve web browsing performance on wireless PDAs was first quantitatively demonstrated in a previous study by one of the authors [10].",
                "This study demonstrated that thin clients can provide both faster web browsing performance and greater web browsing functionality.",
                "The study considered a wide range of web content including content from medical information systems.",
                "Our work builds on this previous study and consider important issues such as how usable existing thin clients are in PDA environments, the trade-offs between <br>thin-client</br> usability and performance, performance across different PDA devices, and the performance of thin clients on common web-related applications such as video.",
                "Many thin clients have been developed and some have PDA clients, including Microsofts Remote Desktop [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5], and Tarantella [18].",
                "These systems were first designed for desktop computing and retrofitted for PDAs.",
                "Unlike pTHINC, they do not address key system architecture and usability issues important for PDAs.",
                "This limits their display quality, system performance, available screen space, and overall usability on PDAs. pTHINC builds on previous work by two of the authors on THINC [1], extending the server architecture and introducing a client interface and usage model to efficiently support PDA devices for mobile web applications.",
                "Other approaches to improve the performance of mobile wireless web browsing have focused on using transcoding and caching proxies in conjunction with the fat client model [11, 9, 4, 8].",
                "They work by pushing functionality to external proxies, and using specialized browsing applications on the PDA device that communicate with the proxy.",
                "Our thinclient approach differs fundamentally from these fat-client approaches by pushing all web browser logic to the server, leveraging existing investments in desktop web browsers and helper applications to work seamlessly with production systems without any additional proxy configuration or web browser modifications.",
                "With the emergence of web browsing on small display devices, web sites have been redesigned using mechanisms like WAP and specialized native web browsers have been developed to tailor the needs of these devices.",
                "Recently, Opera has developed the Opera Mini [15] web browser, which uses an approach similar to the <br>thin-client</br> model to provide access across a number of mobile devices that would normally be incapable of running a web browser.",
                "Instead of requiring the device to process web pages, it uses a remote server to pre-process the page before sending it to the phone. 6.",
                "CONCLUSIONS We have introduced pTHINC, a <br>thin-client</br> architecture for wireless PDAs. pTHINC provides key architectural and usability mechanisms such as server-side screen resizing, clientside screen rotation using simple copy techniques, YUV video support, and maximizing screen space for display updates and leveraging existing PDA control buttons for UI elements. pTHINC transparently supports traditional desktop browsers and their helper applications on PDA devices and desktop machines, providing mobile users with ubiquitous access to a consistent, personalized, and full-featured web environment across heterogeneous devices.",
                "We have implemented pTHINC and measured its performance on web applications compared to existing <br>thin-client</br> systems and native web applications.",
                "Our results on multiple mobile wireless devices demonstrate that pTHINC delivers web browsing performance up to 80 times better than existing <br>thin-client</br> systems, and 8 times better than a native PDA browser.",
                "In addition, pTHINC is the only PDA thin client 151 Figure 11: Video Screenshot: RDP 640x480 Figure 12: Video Screenshot: VNC 1024x768 Figure 13: Video Screenshot: ICA Resized 1024x768 Figure 14: Video Screenshot: pTHINC Resized 1024x768 that transparently provides full-screen, full frame rate video playback, making web sites with multimedia content accessible to mobile web users. 7.",
                "ACKNOWLEDGEMENTS This work was supported in part by NSF ITR grants CCR0219943 and CNS-0426623, and an IBM SUR Award. 8.",
                "REFERENCES [1] R. Baratto, L. Kim, and J. Nieh.",
                "THINC: A Virtual Display Architecture for <br>thin-client</br> Computing.",
                "In Proceedings of the 20th ACM Symposium on Operating Systems Principles (SOSP), Oct. 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius, and A. Muir.",
                "Microsoft Windows NT Server 4.0, Terminal Server Edition: Technical Reference.",
                "Microsoft Press, Redmond, WA, 1999. [4] A.",
                "Fox, I. Goldberg, S. D. Gribble, and D. C. Lee.",
                "Experience With Top Gun Wingman: A Proxy-Based Graphical Web Browser for the 3Com PalmPilot.",
                "In Proceedings of Middleware 98, Lake District, England, September 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Health Insurance Portability and Accountability Act. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench version 1.5. http: //etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi.",
                "On proxy agents, mobility, and web access.",
                "Mobile Networks and Applications, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon, and A. Ortega.",
                "Design and Implementation of a Soft Caching Proxy.",
                "Computer Networks and ISDN Systems, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana, and S. Varshneya.",
                "Improving Web Browsing on Wireless PDAs Using <br>thin-client</br> Computing.",
                "In Proceedings of the 13th International World Wide Web Conference (WWW), May 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham, and P. Shenoy.",
                "TranSquid: Transcoding and caching proxy for heterogenous ecommerce environments.",
                "In Proceedings of the 12th IEEE Workshop on Research Issues in Data Engineering (RIDE 02), Feb. 2002. [12] .NET VNC Viewer for PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang, and N. Novik.",
                "Measuring <br>thin-client</br> Performance Using Slow-Motion Benchmarking.",
                "ACM Trans.",
                "Computer Systems, 21(1):87-115, Feb. 2003. [14] J. Nielsen.",
                "Designing Web Usability.",
                "New Riders Publishing, Indianapolis, IN, 2000. [15] Opera Mini Browser. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood, and A. Hopper.",
                "Virtual Network Computing.",
                "IEEE Internet Computing, 2(1), Jan./Feb. 1998. [17] R. W. Scheifler and J. Gettys.",
                "The X Window System.",
                "ACM Trans.",
                "Gr., 5(2):79-106, Apr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla, and M. Sajjadpour.",
                "Web Browsing Performance of Wireless <br>thin-client</br> Computing.",
                "In Proceedings of the 12th International World Wide Web Conference (WWW), May 2003. 152"
            ],
            "original_annotated_samples": [
                "pTHINC: A <br>thin-client</br> Architecture for Mobile Wireless Web Joeng Kim, Ricardo A. Baratto, and Jason Nieh Department of Computer Science Columbia University, New York, NY, USA {jk2438, ricardo, nieh}@cs.columbia.edu ABSTRACT Although web applications are gaining popularity on mobile wireless PDAs, web browsers on these systems can be quite slow and often lack adequate functionality to access many web sites.",
                "Our results compared to local PDA web browsers and other <br>thin-client</br> approaches demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "<br>thin-client</br> computing provides an alternative approach for enabling pervasive web access from handheld devices.",
                "A <br>thin-client</br> computing system consists of a server and a client that communicate over a network using a remote display protocol.",
                "Using a <br>thin-client</br> model for mobile handheld devices, PDAs can become simple stateless clients that leverage the remote server capabilities to execute web browsers and other helper applications."
            ],
            "translated_annotated_samples": [
                "pTHINC: Una arquitectura de <br>cliente ligero</br> para la web inalámbrica móvil Joeng Kim, Ricardo A. Baratto y Jason Nieh Departamento de Ciencias de la Computación Universidad de Columbia, Nueva York, NY, EE. UU. {jk2438, ricardo, nieh}@cs.columbia.edu RESUMEN Aunque las aplicaciones web están ganando popularidad en las PDAs inalámbricas móviles, los navegadores web en estos sistemas pueden ser bastante lentos y a menudo carecen de funcionalidad adecuada para acceder a muchos sitios web.",
                "Nuestros resultados comparados con los navegadores web PDA locales y otros enfoques de <br>cliente ligero</br> demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único <br>cliente ligero</br> PDA que soporta de manera efectiva aplicaciones de ayuda del navegador cruciales como la reproducción de video.",
                "La computación de <br>cliente ligero</br> proporciona un enfoque alternativo para habilitar el acceso web ubicuo desde dispositivos móviles.",
                "Un sistema informático de <br>cliente ligero</br> consiste en un servidor y un cliente que se comunican a través de una red utilizando un protocolo de visualización remota.",
                "Utilizando un modelo de <br>cliente ligero</br> para dispositivos móviles de mano, las PDAs pueden convertirse en clientes simples sin estado que aprovechan las capacidades del servidor remoto para ejecutar navegadores web y otras aplicaciones auxiliares."
            ],
            "translated_text": "pTHINC: Una arquitectura de <br>cliente ligero</br> para la web inalámbrica móvil Joeng Kim, Ricardo A. Baratto y Jason Nieh Departamento de Ciencias de la Computación Universidad de Columbia, Nueva York, NY, EE. UU. {jk2438, ricardo, nieh}@cs.columbia.edu RESUMEN Aunque las aplicaciones web están ganando popularidad en las PDAs inalámbricas móviles, los navegadores web en estos sistemas pueden ser bastante lentos y a menudo carecen de funcionalidad adecuada para acceder a muchos sitios web. Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y movilidad fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la resolución de pantalla disponible para la visualización de aplicaciones. Hemos implementado pTHINC en Windows Mobile y evaluado su rendimiento en dispositivos móviles inalámbricos. Nuestros resultados comparados con los navegadores web PDA locales y otros enfoques de <br>cliente ligero</br> demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único <br>cliente ligero</br> PDA que soporta de manera efectiva aplicaciones de ayuda del navegador cruciales como la reproducción de video. Categorías y Descriptores de Asunto: C.2.4 Comunicación de Computadoras-Redes: Sistemas Distribuidos - cliente/servidor Términos Generales: Diseño, Experimentación, Rendimiento 1. La creciente ubicuidad de las redes inalámbricas y la disminución del costo del hardware están impulsando una proliferación de dispositivos móviles inalámbricos portátiles, tanto como asistentes digitales personales (PDA) inalámbricos independientes y dispositivos populares integrados de PDA/teléfono celular. Estos dispositivos están permitiendo nuevas formas de computación y comunicación móvil. Los proveedores de servicios están aprovechando estos dispositivos para ofrecer acceso web omnipresente, y los usuarios de la web móvil a menudo ya utilizan estos dispositivos para acceder a información habilitada para la web, como noticias, correo electrónico, guías de viaje localizadas y mapas. Es probable que en unos pocos años, la mayoría de los dispositivos que accedan a la web sean móviles. Los usuarios suelen acceder al contenido web ejecutando un navegador web y aplicaciones auxiliares asociadas localmente en la PDA. Aunque existen navegadores web nativos para PDAs, ofrecen un rendimiento deficiente y tienen un conjunto de funciones mucho más pequeño y una funcionalidad más limitada que sus contrapartes de computadoras de escritorio [10]. Como resultado, los navegadores web de PDA a menudo no pueden mostrar el contenido web de sitios web que utilizan tecnologías web más avanzadas para ofrecer una experiencia web más rica. Este problema fundamental surge por dos razones. Primero, debido a que las PDAs tienen un entorno de hardware/software completamente diferente de las computadoras de escritorio tradicionales, las aplicaciones web necesitan ser reescritas y personalizadas para las PDAs si es posible, duplicando los costos de desarrollo. Debido a que el mercado de aplicaciones de escritorio es más grande y maduro, la mayoría del esfuerzo de desarrollo generalmente se destina a las aplicaciones de escritorio, lo que resulta en una mayor funcionalidad y rendimiento que sus contrapartes de PDA. En segundo lugar, las PDAs tienen un entorno con recursos más limitados que las computadoras de escritorio tradicionales para ofrecer un factor de forma más pequeño y una vida útil de la batería más larga. Los navegadores web de escritorio son aplicaciones grandes y complejas que no pueden ejecutarse en una PDA. En cambio, los desarrolladores se ven obligados a reducir significativamente estas navegadores web para ofrecer un navegador web PDA utilizable, lo que limita la funcionalidad del navegador PDA. La computación de <br>cliente ligero</br> proporciona un enfoque alternativo para habilitar el acceso web ubicuo desde dispositivos móviles. Un sistema informático de <br>cliente ligero</br> consiste en un servidor y un cliente que se comunican a través de una red utilizando un protocolo de visualización remota. El protocolo permite que las pantallas gráficas se virtualicen y se sirvan a través de una red a un dispositivo cliente, mientras que la lógica de la aplicación se ejecuta en el servidor. Usando el protocolo de visualización remota, el cliente transmite la entrada del usuario al servidor, y el servidor devuelve actualizaciones de pantalla de las aplicaciones del servidor al cliente. Utilizando un modelo de <br>cliente ligero</br> para dispositivos móviles de mano, las PDAs pueden convertirse en clientes simples sin estado que aprovechan las capacidades del servidor remoto para ejecutar navegadores web y otras aplicaciones auxiliares. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "web browsing performance": {
            "translated_key": "rendimiento de la navegación web",
            "is_in_text": true,
            "original_annotated_sentences": [
                "pTHINC: A Thin-Client Architecture for Mobile Wireless Web Joeng Kim, Ricardo A. Baratto, and Jason Nieh Department of Computer Science Columbia University, New York, NY, USA {jk2438, ricardo, nieh}@cs.columbia.edu ABSTRACT Although web applications are gaining popularity on mobile wireless PDAs, web browsers on these systems can be quite slow and often lack adequate functionality to access many web sites.",
                "We have developed pTHINC, a PDA thinclient solution that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide high-fidelity display and seamless mobility across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available screen resolution for application display.",
                "We have implemented pTHINC on Windows Mobile and evaluated its performance on mobile wireless devices.",
                "Our results compared to local PDA web browsers and other thin-client approaches demonstrate that pTHINC provides superior <br>web browsing performance</br> and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "Categories and Subject Descriptors: C.2.4 ComputerCommunication-Networks: Distributed Systems - client/ server General Terms: Design, Experimentation, Performance 1.",
                "INTRODUCTION The increasing ubiquity of wireless networks and decreasing cost of hardware is fueling a proliferation of mobile wireless handheld devices, both as standalone wireless Personal Digital Assistants (PDA) and popular integrated PDA/cell phone devices.",
                "These devices are enabling new forms of mobile computing and communication.",
                "Service providers are leveraging these devices to deliver pervasive web access, and mobile web users already often use these devices to access web-enabled information such as news, email, and localized travel guides and maps.",
                "It is likely that within a few years, most of the devices accessing the web will be mobile.",
                "Users typically access web content by running a web browser and associated helper applications locally on the PDA.",
                "Although native web browsers exist for PDAs, they deliver subpar performance and have a much smaller feature set and more limited functionality than their desktop computing counterparts [10].",
                "As a result, PDA web browsers are often not able to display web content from web sites that leverage more advanced web technologies to deliver a richer web experience.",
                "This fundamental problem arises for two reasons.",
                "First, because PDAs have a completely different hardware/software environment from traditional desktop computers, web applications need to be rewritten and customized for PDAs if at all possible, duplicating development costs.",
                "Because the desktop application market is larger and more mature, most development effort generally ends up being spent on desktop applications, resulting in greater functionality and performance than their PDA counterparts.",
                "Second, PDAs have a more resource constrained environment than traditional desktop computers to provide a smaller form factor and longer battery life.",
                "Desktop web browsers are large, complex applications that are unable to run on a PDA.",
                "Instead, developers are forced to significantly strip down these web browsers to provide a usable PDA web browser, thereby crippling PDA browser functionality.",
                "Thin-client computing provides an alternative approach for enabling pervasive web access from handheld devices.",
                "A thin-client computing system consists of a server and a client that communicate over a network using a remote display protocol.",
                "The protocol enables graphical displays to be virtualized and served across a network to a client device, while application logic is executed on the server.",
                "Using the remote display protocol, the client transmits user input to the server, and the server returns screen updates of the applications from the server to the client.",
                "Using a thin-client model for mobile handheld devices, PDAs can become simple stateless clients that leverage the remote server capabilities to execute web browsers and other helper applications.",
                "The thin-client model provides several important benefits for mobile wireless web.",
                "First, standard desktop web applications can be used to deliver web content to PDAs without rewriting or adapting applications to execute on a PDA, reducing development costs and leveraging existing software investments.",
                "Second, complex web applications can be executed on powerful servers instead of running stripped down versions on more resource constrained PDAs, providing greater functionality and better performance [10].",
                "Third, web applications can take advantage of servers with faster networks and better connectivity, further boosting application performance.",
                "Fourth, PDAs can be even simpler devices since they do not need to perform complex application logic, potentially reducing energy consumption and extend143 ing battery life.",
                "Finally, PDA thin clients can be essentially stateless appliances that do not need to be backed up or restored, require almost no maintenance or upgrades, and do not store any sensitive data that can be lost or stolen.",
                "This model provides a viable avenue for medical organizations to comply with HIPAA regulations [6] while embracing mobile handhelds in their day to day operations.",
                "Despite these potential advantages, thin clients have been unable to provide the full range of these benefits in delivering web applications to mobile handheld devices.",
                "Existing thin clients were not designed for PDAs and do not account for important usability issues in the context of small form factor devices, resulting in difficulty in navigating displayed web content.",
                "Furthermore, existing thin clients are ineffective at providing seamless mobility across the heterogeneous mix of device display sizes and resolutions.",
                "While existing thin clients can already provide faster performance than native PDA web browsers in delivering HTML web content, they do not effectively support more display-intensive web helper applications such as multimedia video, which is increasingly an integral part of available web content.",
                "To harness the full potential of thin-client computing in providing mobile wireless web on PDAs, we have developed pTHINC (PDA THin-client InterNet Computing). pTHINC builds on our previous work on THINC [1] to provide a thinclient architecture for mobile handheld devices. pTHINC virtualizes and resizes the display on the server to efficiently deliver high-fidelity screen updates to a broad range of different clients, screen sizes, and screen orientations, including both portrait and landscape viewing modes.",
                "This enables pTHINC to provide the same persistent web session across different client devices.",
                "For example, pTHINC can provide the same web browsing session appropriately scaled for display on a desktop computer and a PDA so that the same cookies, bookmarks, and other meta-data are continuously available on both machines simultaneously. pTHINCs virtual display approach leverages semantic information available in display commands, and client-side video hardware to provide more efficient remote display mechanisms that are crucial for supporting more display-intensive web applications.",
                "Given limited display resolution on PDAs, pTHINC maximizes the use of screen real estate for remote display by moving control functionality from the screen to readily available PDA control buttons, improving system usability.",
                "We have implemented pTHINC on Windows Mobile and demonstrated that it works transparently with existing applications, window systems, and operating systems, and does not require modifying, recompiling, or relinking existing software.",
                "We have quantitatively evaluated pTHINC against local PDA web browsers and other thin-client approaches on Pocket PC devices.",
                "Our experimental results demonstrate that pTHINC provides superior <br>web browsing performance</br> and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "This paper presents the design and implementation of pTHINC.",
                "Section 2 describes the overall usage model and usability characteristics of pTHINC.",
                "Section 3 presents the design and system architecture of pTHINC.",
                "Section 4 presents experimental results measuring the performance of pTHINC on web applications and comparing it against native PDA browsers and other popular PDA thin-client systems.",
                "Section 5 discusses related work.",
                "Finally, we present some concluding remarks. 2.",
                "PTHINC USAGE MODEL pTHINC is a thin-client system that consists of a simple client viewer application that runs on the PDA and a server that runs on a commodity PC.",
                "The server leverages more powerful PCs to to run web browsers and other application logic.",
                "The client takes user input from the PDA stylus and virtual keyboard and sends them to the server to pass to the applications.",
                "Screen updates are then sent back from the server to the client for display to the user.",
                "When the pTHINC PDA client is started, the user is presented with a simple graphical interface where information such as server address and port, user authentication information, and session settings can be provided. pTHINC first attempts to connect to the server and perform the necessary handshaking.",
                "Once this process has been completed, pTHINC presents the user with the most recent display of his session.",
                "If the session does not exist, a new session is created.",
                "Existing sessions can be seamlessly continued without changes in the session setting or server configuration.",
                "Unlike other thin-client systems, pTHINC provides a user with a persistent web session model in which a user can launch a session running a web browser and associated applications at the server, then disconnect from that session and reconnect to it again anytime.",
                "When a user reconnects to the session, all of the applications continue running where the user left off, so that the user can continue working as though he or she never disconnected.",
                "The ability to disconnect and reconnect to a session at anytime is an important benefit for mobile wireless PDA users which may have intermittent network connectivity. pTHINCs persistent web session model enables a user to reconnect to a web session from devices other than the one on which the web session was originally initiated.",
                "This provides users with seamless mobility across different devices.",
                "If a user loses his PDA, he can easily use another PDA to access his web session.",
                "Furthermore, pTHINC allows users to use non-PDA devices to access web sessions as well.",
                "A user can access the same persistent web session on a desktop PC as on a PDA, enabling a user to use the same web session from any computer. pTHINCs persistent web session model addresses a key problem encountered by mobile web users, the lack of a common web environment across computers.",
                "Web browsers often store important information such as bookmarks, cookies, and history, which enable them to function in a much more useful manner.",
                "The problem that occurs when a user moves between computers is that this data, which is specific to a web browser installation, cannot move with the user.",
                "Furthermore, web browsers often need helper applications to process different media content, and those applications may not be consistently available across all computers. pTHINC addresses this problem by enabling a user to remotely use the exact same web browser environment and helper applications from any computer.",
                "As a result, pTHINC can provide a common, consistent web browsing environment for mobile users across different devices without requiring them to attempt to repeatedly synchronize different web browsing environments across multiple machines.",
                "To enable a user to access the same web session on different devices, pTHINC must provide mechanisms to support different display sizes and resolutions.",
                "Toward this end, pTHINC provides a zoom feature that enables a user to zoom in and out of a display and allows the display of a web 144 Figure 1: pTHINC shortcut keys session to be resized to fit the screen of the device being used.",
                "For example, if the server is running a web session at 1024×768 but the client is a PDA with a display resolution of 640×480, pTHINC will resize the desktop display to fit the full display in the smaller screen of the PDA. pTHINC provides the PDA user with the option to increase the size of the display by zooming in to different parts of the display.",
                "Users are often familiar with the general layout of commonly visited websites, and are able to leverage this resizing feature to better navigate through web pages.",
                "For example, a user can zoom out of the display to view the entire page content and navigate hyperlinks, then zoom in to a region of interest for a better view.",
                "To enable a user to access the same web session on different devices, pTHINC must also provide mechanisms to support different display orientations.",
                "In a desktop environment, users are typically accustomed to having displays presented in landscape mode where the screen width is larger than its height.",
                "However, in a PDA environment, the choice is not always obvious.",
                "Some users may prefer having the display in portrait mode, as it is easier to hold the device in their hands, while others may prefer landscape mode in order to minimize the amount of side-scrolling necessary to view a web page.",
                "To accommodate PDA user preferences, pTHINC provides an orientation feature that enables it to seamless rotate the display between landscape and portrait mode.",
                "The landscape mode is particularly useful for pTHINC users who frequently access their web sessions on both desktop and PDA devices, providing those users with the same familiar landscape setting across different devices.",
                "Because screen space is a relatively scarce resource on PDAs, pTHINC runs in fullscreen mode to maximize the screen area available to display the web session.",
                "To be able to use all of the screen on the PDA and still allow the user to control and interact with it, pTHINC reuses the typical shortcut buttons found on PDAs to perform all the control functions available to the user.",
                "The buttons used by pTHINC do not require any OS environment changes; they are simply intercepted by the pTHINC client application when they are pressed.",
                "Figure 1 shows how pTHINC utilizes the shortcut buttons to provide easy navigation and improve the overall user experience.",
                "These buttons are not device specific, and the layout shown is common to widelyused PocketPC devices. pTHINC provides six shortcuts to support its usage model: • Rotate Screen: The record button on the left edge is used to rotate the screen between portrait and landscape mode each time the button is pressed. • Zoom Out: The leftmost button on the bottom front is used to zoom out the display of the web session providing a birds eye view of the web session. • Zoom In: The second leftmost button on the bottom front is used to zoom in the display of the web session to more clearly view content of interest. • Directional Scroll: The middle button on the bottom front is used to scroll around the display using a single control button in a way that is already familiar to PDA users.",
                "This feature is particularly useful when the user has zoomed in to a region of the display such that only part of the display is visible on the screen. • Show/Hide Keyboard: The second rightmost button on the bottom front is used to bring up a virtual keyboard drawn on the screen for devices which have no physical keyboard.",
                "The virtual keyboard uses standard PDA OS mechanisms, providing portability across different PDA environments. • Close Session: The rightmost button on the bottom front is used to disconnect from the pTHINC session. pTHINC uses the PDA touch screen, stylus, and standard user interface mechanisms to provide a user interface pointand-click metaphor similar to that provided by the mouse in a traditional desktop computing environment. pTHINC does not use a cursor since PDA environments do not provide one.",
                "Instead, a user can use the stylus to tap on different sections of the touch screen to indicate input focus.",
                "A single tap on the touch screen generates a corresponding single click mouse event.",
                "A double tap on the touch screen generates a corresponding double click mouse event. pTHINC provides two-button mouse emulation by using the stylus to press down on the screen for one second to generate a right mouse click.",
                "All of these actions are identical to the way users already interact with PDA applications in the common PocketPC environment.",
                "In web browsing, users can click on hyperlinks and focus on input boxes by simply tapping on the desired screen area of interest.",
                "Unlike local PDA web browsers and other PDA applications, pTHINC leverages more powerful desktop user interface metaphors to enable users to manipulate multiple open application windows instead of being limited to a single application window at any given moment.",
                "This provides increased browsing flexibility beyond what is currently available on PDA devices.",
                "Similar to a desktop environment, browser windows and other application windows can be moved around by pressing down and dragging the stylus similar to a mouse. 3.",
                "PTHINC SYSTEM ARCHITECTURE pTHINC builds on the THINC [1] remote display architecture to provide a thin-client system for PDAs. pTHINC virtualizes the display at the server by leveraging the video device abstraction layer, which sits below the window server and above the framebuffer.",
                "This is a well-defined, low-level, device-dependent layer that exposes the video hardware to the display system. pTHINC accomplishes this through a simple virtual display driver that intercepts drawing commands, packetizes, and sends them over the network. 145 While other thin-client approaches intercept display commands at other layers of the display subsystem, pTHINCs display virtualization approach provides some key benefits in efficiently supporting PDA clients.",
                "For example, intercepting display commands at a higher layer between applications and the window system as is done by X [17] requires replicating and running a great deal of functionality on the PDA that is traditionally provided by the desktop window system.",
                "Given both the size and complexity of traditional window systems, attempting to replicate this functionality in the restricted PDA environment would have proven to be a daunting, and perhaps unfeasible task.",
                "Furthermore, applications and the window system often require tight synchronization in their operation and imposing a wireless network between them by running the applications on the server and the window system on the client would significantly degrade performance.",
                "On the other hand, intercepting at a lower layer by extracting pixels out of the framebuffer as they are rendered provides a simple solution that requires very little functionality on the PDA client, but can also result in degraded performance.",
                "The reason is that by the time the remote display server attempts to send screen updates, it has lost all semantic information that may have helped it encode efficiently, and it must resort to using a generic and expensive encoding mechanism on the server, as well as a potentially expensive decoding mechanism on the limited PDA client.",
                "In contrast to both the high and low level interception approaches, pTHINCs approach of intercepting at the device driver provides an effective balance between client and server simplicity, and the ability to efficiently encode and decode screen updates.",
                "By using a low-level virtual display approach, pTHINC can efficiently encode application display commands using only a small set of low-level commands.",
                "In a PDA environment, this set of commands provides a crucial component in maintaining the simplicity of the client in the resourceconstrained PDA environment.",
                "The display commands are shown in Table 1, and work as follows.",
                "COPY instructs the client to copy a region of the screen from its local framebuffer to another location.",
                "This command improves the user experience by accelerating scrolling and opaque window movement without having to resend screen data from the server.",
                "SFILL, PFILL, and BITMAP are commands that paint a fixed-size region on the screen.",
                "They are useful for accelerating the display of solid window backgrounds, desktop patterns, backgrounds of web pages, text drawing, and certain operations in graphics manipulation programs.",
                "SFILL fills a sizable region on the screen with a single color.",
                "PFILL replicates a tile over a screen region.",
                "BITMAP performs a fill using a bitmap of ones and zeros as a stipple to apply a foreground and background color.",
                "Finally, RAW is used to transmit unencoded pixel data to be displayed verbatim on a region of the screen.",
                "This command is invoked as a last resort if the server is unable to employ any other command, and it is the only command that may be compressed to mitigate its impact on network bandwidth. pTHINC delivers its commands using a non-blocking, serverpush update mechanism, where as soon as display updates are generated on the server, they are sent to the client.",
                "Clients are not required to explicitly request display updates, thus minimizing the impact that the typical varying network latency of wireless links may have on the responsiveness of the system.",
                "Keeping in mind that resource Command Description COPY Copy a frame buffer area to specified coordinates SFILL Fill an area with a given pixel color value PFILL Tile an area with a given pixel pattern BITMAP Fill a region using a bit pattern RAW Display raw pixel data at a given location Table 1: pTHINC Protocol Display Commands constrained PDAs and wireless networks may not be able to keep up with a fast server generating a large number of updates, pTHINC is able to coalesce, clip, and discard updates automatically if network loss or congestion occurs, or the client cannot keep up with the rate of updates.",
                "This type of behavior proves crucial in a web browsing environment, where for example, a page may be redrawn multiple times as it is rendered on the fly by the browser.",
                "In this case, the PDA will only receive and render the final result, which clearly is all the user is interesting in seeing. pTHINC prioritizes the delivery of updates to the PDA using a Shortest-Remaining-Size-First (SRSF) preemptive update scheduler.",
                "SRSF is analogous to Shortest-RemainingProcessing-Time scheduling, which is known to be optimal for minimizing mean response time in an interactive system.",
                "In a web browsing environment, short jobs are associated with text and basic page layout components such as the pages background, which are critical web content for the user.",
                "On the other hand, large jobs are often lower priority beautifying elements, or, even worse, web page banners and advertisements, which are of questionable value to the user as he or she is browsing the page.",
                "Using SRSF, pTHINC is able to maximize the utilization of the relatively scarce bandwidth available on the wireless connection between the PDA and the server. 3.1 Display Management To enable users to just as easily access their web browser and helper applications from a desktop computer at home as from a PDA while on the road, pTHINC provides a resize mechanism to zoom in and out of the display of a web session. pTHINC resizing is completely supported by the server, not the client.",
                "The server resamples updates to fit within the PDAs viewport before they are transmitted over the network. pTHINC uses Fants resampling algorithm to resize pixel updates.",
                "This provides smooth, visually pleasing updates with properly antialiasing and has only modest computational requirements. pTHINCs resizing approach has a number of advantages.",
                "First, it allows the PDA to leverage the vastly superior computational power of the server to use high quality resampling algorithms and produce higher quality updates for the PDA to display.",
                "Second, resizing the screen does not translate into additional resource requirements for the PDA, since it does not need to perform any additional work.",
                "Finally, better utilization of the wireless network is attained since rescaling the updates reduces their bandwidth requirements.",
                "To enable users to orient their displays on a PDA to provide a viewing experience that best accommodates user preferences and the layout of web pages or applications, pTHINC provides a display rotation mechanism to switch between landscape and portrait viewing modes. pTHINC display rotation is completely supported by the client, not the server. pTHINC does not explicitly recalculate the ge146 ometry of display updates to perform rotation, which would be computationally expensive.",
                "Instead, pTHINC simply changes the way data is copied into the framebuffer to switch between display modes.",
                "When in portrait mode, data is copied along the rows of the framebuffer from left to right.",
                "When in landscape mode, data is copied along the columns of the framebuffer from top to bottom.",
                "These very fast and simple techniques replace one set of copy operations with another and impose no performance overhead. pTHINC provides its own rotation mechanism to support a wide range of devices without imposing additional feature requirements on the PDA.",
                "Although some newer PDA devices provide native support for different orientations, this mechanism is not dynamic and requires the user to rotate the PDAs entire user interface before starting the pTHINC client.",
                "Windows Mobile provides native API mechanisms for PDA applications to rotate their UI on the fly, but these mechanisms deliver poor performance and display quality as the rotation is performed naively and is not completely accurate. 3.2 Video Playback Video has gradually become an integral part of the World Wide Web, and its presence will only continue to increase.",
                "Web sites today not only use animated graphics and flash to deliver web content in an attractive manner, but also utilize streaming video to enrich the web interface.",
                "Users are able to view pre-recorded and live newscasts on CNN, watch sports highlights on ESPN, and even search through large collection of videos on Google Video.",
                "To allow applications to provide efficient video playback, interfaces have been created in display systems that allow video device drivers to expose their hardware capabilities back to the applications. pTHINC takes advantage of these interfaces and its virtual device driver approach to provide a virtual bridge between the remote client and its hardware and the applications, and transparently support video playback.",
                "On top of this architecture, pTHINC uses the YUV colorspace to encode the video content, which provides a number of benefits.",
                "First, it has become increasingly common for PDA video hardware to natively support YUV and be able to perform the colorspace conversion and scaling automatically.",
                "As a result, pTHINC is able to provide fullscreen video playback without any performance hits.",
                "Second, the use of YUV allows for a more efficient representation of RGB data without loss of quality, by taking advantage of the human eyes ability to better distinguish differences in brightness than in color.",
                "In particular, pTHINC uses the YV12 format, which allows full color RGB data to be encoded using just 12 bits per pixel.",
                "Third, YUV data is produced as one of the last steps of the decoding process of most video codecs, allowing pTHINC to provide video playback in a manner that is format independent.",
                "Finally, even if the PDAs video hardware is unable to accelerate playback, the colorspace conversion process is simple enough that it does not impose unreasonable requirements on the PDA.",
                "A more concrete example of how pTHINC leverages the PDA video hardware to support video playback can be seen in our prototype implementation on the popular Dell Axim X51v PDA, which is equipped with the Intel 2700G multimedia accelerator.",
                "In this case, pTHINC creates an offscreen buffer in video memory and writes and reads from this memory region data on the YV12 format.",
                "When a new video frame arrives, video data is copied from the buffer to Figure 2: Experimental Testbed an overlay surface in video memory, which is independent of the normal surface used for traditional drawing.",
                "As the YV12 data is put onto the overlay, the Intel accelerator automatically performs both colorspace conversion and scaling.",
                "By using the overlay surface, pTHINC has no need to redraw the screen once video playback is over since the overlapped surface is unaffected.",
                "In addition, specific overlay regions can be manipulated by leveraging the video hardware, for example to perform hardware linear interpolation to smooth out the frame and display it fullscreen, and to do automatic rotation when the client runs in landscape mode. 4.",
                "EXPERIMENTAL RESULTS We have implemented a pTHINC prototype that runs the client on widely-used Windows Mobile-based Pocket PC devices and the server on both Windows and Linux operating systems.",
                "To demonstrate its effectiveness in supporting mobile wireless web applications, we have measured its performance on web applications.",
                "We present experimental results on different PDA devices for two popular web applications, browsing web pages and playing video content from the web.",
                "We compared pTHINC against native web applications running locally on the PDA to demonstrate the improvement that pTHINC can provide over the traditional fat-client approach.",
                "We also compared pTHINC against three of the most widely used thin clients that can run on PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] and VNC (Virtual Network Computing) [16].",
                "We follow common practice and refer to Citrix MetaFrameXP and Microsoft Remote Desktop by their respective remote display protocols, ICA (Independent Computing Architecture) and RDP (Remote Desktop Protocol). 4.1 Experimental Testbed We conducted our web experiments using two different wireless Pocket PC PDAs in an isolated Wi-Fi network testbed, as shown in Figure 2.",
                "The testbed consisted of two PDA client devices, a packet monitor, a thin-client server, and a web server.",
                "Except for the PDAs, all of the other machines were IBM Netfinity 4500R servers with dual 933 MHz Intel PIII CPUs and 512 MB RAM and were connected on a switched 100 Mbps FastEthernet network.",
                "The web server used was Apache 1.3.27, the network emulator was NISTNet 2.0.12, and the packet monitor was Ethereal 0.10.9.",
                "The PDA clients connected to the testbed through a 802.11b Lucent Orinoco AP-2000 wireless access point.",
                "All experiments using the wireless network were conducted within ten feet of the access point, so we considered the amount of packet loss to be negligible in our experiments.",
                "Two Pocket PC PDAs were used to provide results across both older, less powerful models and newer higher performance models.",
                "The older model was a Dell Axim X5 with 147 Client 1024×768 640×480 Depth Resize Clip RDP no yes 8-bit no yes VNC yes yes 16-bit no no ICA yes yes 16-bit yes no pTHINC yes yes 24-bit yes no Table 2: Thin-client Testbed Configuration Setting a 400 MHz Intel XScale PXA255 CPU and 64 MB RAM running Windows Mobile 2003 and a Dell TrueMobile 1180 2.4Ghz CompactFlash card for wireless networking.",
                "The newer model was a Dell Axim X51v with a 624 MHz Intel XScale XPA270 CPU and 64 MB RAM running Windows Mobile 5.0 and integrated 802.11b wireless networking.",
                "The X51v has an Intel 2700G multimedia accelerator with 16MB video memory.",
                "Both PDAs are capable of 16-bit color but have different screen sizes and display resolutions.",
                "The X5 has a 3.5 inch diagonal screen with 240×320 resolution.",
                "The X51v has a 3.7 inch diagonal screen with 480×640.",
                "The four thin clients that we used support different levels of display quality as summarized in Table 2.",
                "The RDP client only supports a fixed 640×480 display resolution on the server with 8-bit color depth, while other platforms provide higher levels of display quality.",
                "To provide a fair comparison across all platforms, we conducted our experiments with thin-client sessions configured for two possible resolutions, 1024×768 and 640×480.",
                "Both ICA and VNC were configured to use the native PDA resolution of 16-bit color depth.",
                "The current pTHINC prototype uses 24-bit color directly and the client downsamples updates to the 16-bit color depth available on the PDA.",
                "RDP was configured using only 8-bit color depth since it does not support any better color depth.",
                "Since both pTHINC and ICA provide the ability to view the display resized to fit the screen, we measured both clients with and without the display resized to fit the PDA screen.",
                "Each thin client was tested using landscape rather than portrait mode when available.",
                "All systems run on the X51v could run in landscape mode because the hardware provides a landscape mode feature.",
                "However, the X5 does not provide this functionality.",
                "Only pTHINC directly supports landscape mode, so it was the only system that could run in landscape mode on both the X5 and X51v.",
                "To provide a fair comparison, we also standardized on common hardware and operating systems whenever possible.",
                "All of the systems used the Netfinity server as the thin-client server.",
                "For the two systems designed for Windows servers, ICA and RDP, we ran Windows 2003 Server on the server.",
                "For the other systems which support X-based servers, VNC and pTHINC, we ran the Debian Linux Unstable distribution with the Linux 2.6.10 kernel on the server.",
                "We used the latest thin-client server versions available on each platform at the time of our experiments, namely Citrix MetaFrame XP Server for Windows Feature Release 3, Microsoft Remote Desktop built into Windows XP and Windows 2003 using RDP 5.2, and VNC 4.0. 4.2 Application Benchmarks We used two web application benchmarks for our experiments based on two common application scenarios, browsing web pages and playing video content from the web.",
                "Since many thin-client systems including two of the ones tested are closed and proprietary, we measured their performance in a noninvasive manner by capturing network traffic with a packet monitor and using a variant of slow-motion benchmarking [13] previously developed to measure thin-client performance in PDA environments [10].",
                "This measurement methodology accounts for both the display decoupling that can occur between client and server in thin-client systems as well as client processing time, which may be significant in the case of PDAs.",
                "To measure <br>web browsing performance</br>, we used a web browsing benchmark based on the Web Text Page Load Test from the Ziff-Davis i-Bench benchmark suite [7].",
                "The benchmark consists of JavaScript controlled load of 55 pages from the web server.",
                "The pages contain both text and graphics with pages varying in size.",
                "The graphics are embedded images in GIF and JPEG formats.",
                "The original i-Bench benchmark was modified for slow-motion benchmarking by introducing delays of several seconds between the pages using JavaScript.",
                "Then two tests were run, one where delays where added between each page, and one where pages where loaded continuously without waiting for them to be displayed on the client.",
                "In the first test, delays were sufficiently adjusted in each case to ensure that each page could be received and displayed on the client completely without temporal overlap in transferring the data belonging to two consecutive pages.",
                "We used the packet monitor to record the packet traffic for each run of the benchmark, then used the timestamps of the first and last packet in the trace to obtain our latency measures [10].",
                "The packet monitor also recorded the amount of data transmitted between the client and the server.",
                "The ratio between the data traffic in the two tests yields a scale factor.",
                "This scale factor shows the loss of data between the server and the client due to inability of the client to process the data quickly enough.",
                "The product of the scale factor with the latency measurement produces the true latency accounting for client processing time.",
                "To run the web browsing benchmark, we used Mozilla Firefox 1.0.4 running on the thin-client server for the thin clients, and Windows Internet Explorer (IE) Mobile for 2003 and Mobile for 5.0 for the native browsers on the X5 and X51v PDAs, respectively.",
                "In all cases, the web browser used was sized to fill the entire display region available.",
                "To measure video playback performance, we used a video benchmark that consisted of playing a 34.75s MPEG-1 video clip containing a mix of news and entertainment programming at full-screen resolution.",
                "The video clip is 5.11 MB and consists of 834 352x240 pixel frames with an ideal frame rate of 24 frames/sec.",
                "We measured video performance using slow-motion benchmarking by monitoring resulting packet traffic at two playback rates, 1 frames/second (fps) and 24 fps, and comparing the results to determine playback delays and frame drops that occur at 24 fps to measure overall video quality [13].",
                "For example, 100% quality means that all video frames were played at real-time speed.",
                "On the other hand, 50% quality could mean that half the video data was dropped, or that the clip took twice as long to play even though all of the video data was displayed.",
                "To run the video benchmark, we used Windows Media Player 9 for Windows-based thin-client servers, MPlayer 1.0 pre 6 for X-based thin-client servers, and Windows Media Player 9 Mobile and 10 Mobile for the native video players running locally on the X5 and X51v PDAs, respectively.",
                "In all cases, the video player used was sized to fill the entire display region available. 4.3 Measurements Figures 3 and 4 show the results of running the web brows148 0 1 10 100 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL Latency(s) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 3: Browsing Benchmark: Average Page Latency ing benchmark.",
                "For each platform, we show results for up to four different configurations, two on the X5 and two on the X51v, depending on whether each configuration was supported.",
                "However, not all platforms could support all configurations.",
                "The local browser only runs at the display resolution of the PDA, 480×680 or less for the X51v and the X5.",
                "RDP only runs at 640×480.",
                "Neither platform could support 1024×768 display resolution.",
                "ICA only ran on the X5 and could not run on the X51v because it did not work on Windows Mobile 5.",
                "Figure 3 shows the average latency per web page for each platform. pTHINC provides the lowest average web browsing latency on both PDAs.",
                "On the X5, pTHINC performs up to 70 times better than other thin-client systems and 8 times better than the local browser.",
                "On the X51v, pTHINC performs up to 80 times better than other thin-client systems and 7 times better than the native browser.",
                "In fact, all of the thin clients except VNC outperform the local PDA browser, demonstrating the performance benefits of the thin-client approach.",
                "Usability studies have shown that web pages should take less than one second to download for the user to experience an uninterrupted web browsing experience [14].",
                "The measurements show that only the thin clients deliver subsecond web page latencies.",
                "In contrast, the local browser requires more than 3 seconds on average per web page.",
                "The local browser performs worse since it needs to run a more limited web browser to process the HTML, JavaScript, and do all the rendering using the limited capabilities of the PDA.",
                "The thin clients can take advantage of faster server hardware and a highly tuned web browser to process the web content much faster.",
                "Figure 3 shows that RDP is the next fastest platform after pTHINC.",
                "However, RDP is only able to run at a fixed resolution of 640×480 and 8-bit color depth.",
                "Furthermore, RDP also clips the display to the size of the PDA screen so that it does not need to send updates that are not visible on the PDA screen.",
                "This provides a performance benefit assuming the remaining web content is not viewed, but degrades performance when a user scrolls around the display to view other web content.",
                "RDP achieves its performance with significantly lower display quality compared to the other thin clients and with additional display clipping not used by other systems.",
                "As a result, RDP performance alone does not provide a complete comparison with the other platforms.",
                "In contrast, pTHINC provides the fastest performance while at the same time providing equal or better display quality than the other systems. 0 1 10 100 1000 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL DataSize(KB) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 4: Browsing Benchmark: Average Page Data Transferred Since VNC and ICA provide similar display quality to pTHINC, these systems provide a more fair comparison of different thin-client approaches.",
                "ICA performs worse in part because it uses higher-level display primitives that require additional client processing costs.",
                "VNC performs worse in part because it loses display data due to its client-pull delivery mechanism and because of the client processing costs in decompressing raw pixel primitives.",
                "In both cases, their performance was limited in part because their PDA clients were unable to keep up with the rate at which web pages were being displayed.",
                "Figure 3 also shows measurements for those thin clients that support resizing the display to fit the PDA screen, namely ICA and pTHINC.",
                "Resizing requires additional processing, which results in slower average web page latencies.",
                "The measurements show that the additional delay incurred by ICA when resizing versus not resizing is much more substantial than for pTHINC.",
                "ICA performs resizing on the slower PDA client.",
                "In contrast, pTHINC leverage the more powerful server to do resizing, reducing the performance difference between resizing and not resizing.",
                "Unlike ICA, pTHINC is able to provide subsecond web page download latencies in both cases.",
                "Figure 4 shows the data transferred in KB per page when running the slow-motion version of the tests.",
                "All of the platforms have modest data transfer requirements of roughly 100 KB per page or less.",
                "This is well within the bandwidth capacity of Wi-Fi networks.",
                "The measurements show that the local browser does not transfer the least amount of data.",
                "This is surprising as HTML is often considered to be a very compact representation of content.",
                "Instead, RDP is the most bandwidth efficient platform, largely as a result of using only 8-bit color depth and screen clipping so that it does not transfer the entire web page to the client. pTHINC overall has the largest data requirements, slightly more than VNC.",
                "This is largely a result of the current pTHINC prototypes lack of native support for 16-bit color data in the wire protocol.",
                "However, this result also highlights pTHINCs performance as it is faster than all other systems even while transferring more data.",
                "Furthermore, as newer PDA models support full 24-bit color, these results indicate that pTHINC will continue to provide good <br>web browsing performance</br>.",
                "Since display usability and quality are as important as performance, Figures 5 to 8 compare screenshots of the different thin clients when displaying a web page, in this case from the popular BBC news website.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode 149 Figure 5: Browser Screenshot: RDP 640x480 Figure 6: Browser Screenshot: VNC 1024x768 Figure 7: Browser Screenshot: ICA Resized 1024x768 Figure 8: Browser Screenshot: pTHINC Resized 1024x768 using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "While the screenshots lack the visual fidelity of the actual device display, several observations can be made.",
                "Figure 5 shows that RDP does not support fullscreen mode and wastes lots of screen space for controls and UI elements, requiring the user to scroll around in order to access the full contents of the web browsing session.",
                "Figure 6 shows that VNC makes better use of the screen space and provides better display quality, but still forces the user to scroll around to view the web page due to its lack of resizing support.",
                "Figure 7 shows ICAs ability to display the full web page given its resizing support, but that its lack of landscape capability and poorer resize algorithm significantly compromise display quality.",
                "In contrast, Figure 8 shows pTHINC using resizing to provide a high quality fullscreen display of the full width of the web page. pTHINC maximizes the entire viewing region by moving all controls to the PDA buttons.",
                "In addition, pTHINC leverages the server computational power to use a high quality resizing algorithm to resize the display to fit the PDA screen without significant overhead.",
                "Figures 9 and 10 show the results of running the video playback benchmark.",
                "For each platform except ICA, we show results for an X5 and X51v configuration.",
                "ICA could not run on the X51v as noted earlier.",
                "The measurements were done using settings that reflected the environment a user would have to access a web session from both a desktop computer and a PDA.",
                "As such, a 1024×768 server display resolution was used whenever possible and the video was shown at fullscreen.",
                "RDP was limited to 640×480 display resolution as noted earlier.",
                "Since viewing the entire video display is the only really usable option, we resized the display to fit the PDA screen for those platforms that supported this feature, namely ICA and pTHINC.",
                "Figure 9 shows the video quality for each platform. pTHINC is the only thin client able to provide perfect video playback quality, similar to the native PDA video player.",
                "All of the other thin clients deliver very poor video quality.",
                "With the exception of RDP on the X51v which provided unacceptable 35% video quality, none of the other systems were even able to achieve 10% video quality.",
                "VNC and ICA have the worst quality at 8% on the X5 device. pTHINCs native video support enables superior video performance, while other thin clients suffer from their inability to distinguish video from normal display updates.",
                "They attempt to apply ineffective and expensive compression algorithms on the video data and are unable to keep up with the stream of updates generated, resulting in dropped frames or long playback times.",
                "VNC suffers further from its client-pull update model because video frames are generated faster than the rate at which the client can process and send requests to the server to obtain the next display update.",
                "Figure 10 shows the total data transferred during 150 0% 20% 40% 60% 80% 100% pTHINCICAVNCRDPLOCAL VideoQuality Platform Axim X5 Axim X51v Figure 9: Video Benchmark: Fullscreen Video Quality 0 1 10 100 pTHINCICAVNCRDPLOCAL VideoDataSize(MB) Platform Axim X5 Axim X51v Figure 10: Video Benchmark: Fullscreen Video Data video playback for each system.",
                "The native player is the most bandwidth efficient platform, sending less than 6 MB of data, which corresponds to about 1.2 Mbps of bandwidth. pTHINCs 100% video quality requires about 25 MB of data which corresponds to a bandwidth usage of less than 6 Mbps.",
                "While the other thin clients send less data than THINC, they do so because they are dropping video data, resulting in degraded video quality.",
                "Figures 11 to 14 compare screenshots of the different thin clients when displaying the video clip.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "Figures 11 and 12 show that RDP and VNC are unable to display the entire video frame on the PDA screen.",
                "RDP wastes screen space for UI elements and VNC only shows the top corner of the video frame on the screen.",
                "Figure 13 shows that ICA provides resizing to display the entire video frame, but did not proportionally resize the video data, resulting in strange display artifacts.",
                "In contrast, Figure 14 shows pTHINC using resizing to provide a high quality fullscreen display of the entire video frame. pTHINC provides visually more appealing video display than RDP, VNC, or ICA. 5.",
                "RELATED WORK Several studies have examined the <br>web browsing performance</br> of thin-client computing [13, 19, 10].",
                "The ability for thin clients to improve <br>web browsing performance</br> on wireless PDAs was first quantitatively demonstrated in a previous study by one of the authors [10].",
                "This study demonstrated that thin clients can provide both faster <br>web browsing performance</br> and greater web browsing functionality.",
                "The study considered a wide range of web content including content from medical information systems.",
                "Our work builds on this previous study and consider important issues such as how usable existing thin clients are in PDA environments, the trade-offs between thin-client usability and performance, performance across different PDA devices, and the performance of thin clients on common web-related applications such as video.",
                "Many thin clients have been developed and some have PDA clients, including Microsofts Remote Desktop [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5], and Tarantella [18].",
                "These systems were first designed for desktop computing and retrofitted for PDAs.",
                "Unlike pTHINC, they do not address key system architecture and usability issues important for PDAs.",
                "This limits their display quality, system performance, available screen space, and overall usability on PDAs. pTHINC builds on previous work by two of the authors on THINC [1], extending the server architecture and introducing a client interface and usage model to efficiently support PDA devices for mobile web applications.",
                "Other approaches to improve the performance of mobile wireless web browsing have focused on using transcoding and caching proxies in conjunction with the fat client model [11, 9, 4, 8].",
                "They work by pushing functionality to external proxies, and using specialized browsing applications on the PDA device that communicate with the proxy.",
                "Our thinclient approach differs fundamentally from these fat-client approaches by pushing all web browser logic to the server, leveraging existing investments in desktop web browsers and helper applications to work seamlessly with production systems without any additional proxy configuration or web browser modifications.",
                "With the emergence of web browsing on small display devices, web sites have been redesigned using mechanisms like WAP and specialized native web browsers have been developed to tailor the needs of these devices.",
                "Recently, Opera has developed the Opera Mini [15] web browser, which uses an approach similar to the thin-client model to provide access across a number of mobile devices that would normally be incapable of running a web browser.",
                "Instead of requiring the device to process web pages, it uses a remote server to pre-process the page before sending it to the phone. 6.",
                "CONCLUSIONS We have introduced pTHINC, a thin-client architecture for wireless PDAs. pTHINC provides key architectural and usability mechanisms such as server-side screen resizing, clientside screen rotation using simple copy techniques, YUV video support, and maximizing screen space for display updates and leveraging existing PDA control buttons for UI elements. pTHINC transparently supports traditional desktop browsers and their helper applications on PDA devices and desktop machines, providing mobile users with ubiquitous access to a consistent, personalized, and full-featured web environment across heterogeneous devices.",
                "We have implemented pTHINC and measured its performance on web applications compared to existing thin-client systems and native web applications.",
                "Our results on multiple mobile wireless devices demonstrate that pTHINC delivers <br>web browsing performance</br> up to 80 times better than existing thin-client systems, and 8 times better than a native PDA browser.",
                "In addition, pTHINC is the only PDA thin client 151 Figure 11: Video Screenshot: RDP 640x480 Figure 12: Video Screenshot: VNC 1024x768 Figure 13: Video Screenshot: ICA Resized 1024x768 Figure 14: Video Screenshot: pTHINC Resized 1024x768 that transparently provides full-screen, full frame rate video playback, making web sites with multimedia content accessible to mobile web users. 7.",
                "ACKNOWLEDGEMENTS This work was supported in part by NSF ITR grants CCR0219943 and CNS-0426623, and an IBM SUR Award. 8.",
                "REFERENCES [1] R. Baratto, L. Kim, and J. Nieh.",
                "THINC: A Virtual Display Architecture for Thin-Client Computing.",
                "In Proceedings of the 20th ACM Symposium on Operating Systems Principles (SOSP), Oct. 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius, and A. Muir.",
                "Microsoft Windows NT Server 4.0, Terminal Server Edition: Technical Reference.",
                "Microsoft Press, Redmond, WA, 1999. [4] A.",
                "Fox, I. Goldberg, S. D. Gribble, and D. C. Lee.",
                "Experience With Top Gun Wingman: A Proxy-Based Graphical Web Browser for the 3Com PalmPilot.",
                "In Proceedings of Middleware 98, Lake District, England, September 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Health Insurance Portability and Accountability Act. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench version 1.5. http: //etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi.",
                "On proxy agents, mobility, and web access.",
                "Mobile Networks and Applications, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon, and A. Ortega.",
                "Design and Implementation of a Soft Caching Proxy.",
                "Computer Networks and ISDN Systems, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana, and S. Varshneya.",
                "Improving Web Browsing on Wireless PDAs Using Thin-Client Computing.",
                "In Proceedings of the 13th International World Wide Web Conference (WWW), May 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham, and P. Shenoy.",
                "TranSquid: Transcoding and caching proxy for heterogenous ecommerce environments.",
                "In Proceedings of the 12th IEEE Workshop on Research Issues in Data Engineering (RIDE 02), Feb. 2002. [12] .NET VNC Viewer for PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang, and N. Novik.",
                "Measuring Thin-Client Performance Using Slow-Motion Benchmarking.",
                "ACM Trans.",
                "Computer Systems, 21(1):87-115, Feb. 2003. [14] J. Nielsen.",
                "Designing Web Usability.",
                "New Riders Publishing, Indianapolis, IN, 2000. [15] Opera Mini Browser. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood, and A. Hopper.",
                "Virtual Network Computing.",
                "IEEE Internet Computing, 2(1), Jan./Feb. 1998. [17] R. W. Scheifler and J. Gettys.",
                "The X Window System.",
                "ACM Trans.",
                "Gr., 5(2):79-106, Apr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla, and M. Sajjadpour.",
                "<br>web browsing performance</br> of Wireless Thin-Client Computing.",
                "In Proceedings of the 12th International World Wide Web Conference (WWW), May 2003. 152"
            ],
            "original_annotated_samples": [
                "Our results compared to local PDA web browsers and other thin-client approaches demonstrate that pTHINC provides superior <br>web browsing performance</br> and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "Our experimental results demonstrate that pTHINC provides superior <br>web browsing performance</br> and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "To measure <br>web browsing performance</br>, we used a web browsing benchmark based on the Web Text Page Load Test from the Ziff-Davis i-Bench benchmark suite [7].",
                "Furthermore, as newer PDA models support full 24-bit color, these results indicate that pTHINC will continue to provide good <br>web browsing performance</br>.",
                "RELATED WORK Several studies have examined the <br>web browsing performance</br> of thin-client computing [13, 19, 10]."
            ],
            "translated_annotated_samples": [
                "Nuestros resultados comparados con los navegadores web PDA locales y otros enfoques de cliente ligero demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero PDA que soporta de manera efectiva aplicaciones de ayuda del navegador cruciales como la reproducción de video.",
                "Nuestros resultados experimentales demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero de PDA que soporta de manera efectiva aplicaciones esenciales de ayuda para el navegador, como la reproducción de video.",
                "Para medir el <br>rendimiento de la navegación web</br>, utilizamos un benchmark de navegación web basado en la Prueba de Carga de Páginas de Texto Web del conjunto de benchmarks Ziff-Davis i-Bench [7].",
                "Además, dado que los modelos más recientes de PDA admiten colores completos de 24 bits, estos resultados indican que pTHINC seguirá proporcionando un buen <br>rendimiento en la navegación web</br>.",
                "TRABAJOS RELACIONADOS Varios estudios han examinado el <br>rendimiento de la navegación web</br> en la computación de cliente ligero [13, 19, 10]."
            ],
            "translated_text": "pTHINC: Una arquitectura de cliente ligero para la web inalámbrica móvil Joeng Kim, Ricardo A. Baratto y Jason Nieh Departamento de Ciencias de la Computación Universidad de Columbia, Nueva York, NY, EE. UU. {jk2438, ricardo, nieh}@cs.columbia.edu RESUMEN Aunque las aplicaciones web están ganando popularidad en las PDAs inalámbricas móviles, los navegadores web en estos sistemas pueden ser bastante lentos y a menudo carecen de funcionalidad adecuada para acceder a muchos sitios web. Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y movilidad fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la resolución de pantalla disponible para la visualización de aplicaciones. Hemos implementado pTHINC en Windows Mobile y evaluado su rendimiento en dispositivos móviles inalámbricos. Nuestros resultados comparados con los navegadores web PDA locales y otros enfoques de cliente ligero demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero PDA que soporta de manera efectiva aplicaciones de ayuda del navegador cruciales como la reproducción de video. Categorías y Descriptores de Asunto: C.2.4 Comunicación de Computadoras-Redes: Sistemas Distribuidos - cliente/servidor Términos Generales: Diseño, Experimentación, Rendimiento 1. La creciente ubicuidad de las redes inalámbricas y la disminución del costo del hardware están impulsando una proliferación de dispositivos móviles inalámbricos portátiles, tanto como asistentes digitales personales (PDA) inalámbricos independientes y dispositivos populares integrados de PDA/teléfono celular. Estos dispositivos están permitiendo nuevas formas de computación y comunicación móvil. Los proveedores de servicios están aprovechando estos dispositivos para ofrecer acceso web omnipresente, y los usuarios de la web móvil a menudo ya utilizan estos dispositivos para acceder a información habilitada para la web, como noticias, correo electrónico, guías de viaje localizadas y mapas. Es probable que en unos pocos años, la mayoría de los dispositivos que accedan a la web sean móviles. Los usuarios suelen acceder al contenido web ejecutando un navegador web y aplicaciones auxiliares asociadas localmente en la PDA. Aunque existen navegadores web nativos para PDAs, ofrecen un rendimiento deficiente y tienen un conjunto de funciones mucho más pequeño y una funcionalidad más limitada que sus contrapartes de computadoras de escritorio [10]. Como resultado, los navegadores web de PDA a menudo no pueden mostrar el contenido web de sitios web que utilizan tecnologías web más avanzadas para ofrecer una experiencia web más rica. Este problema fundamental surge por dos razones. Primero, debido a que las PDAs tienen un entorno de hardware/software completamente diferente de las computadoras de escritorio tradicionales, las aplicaciones web necesitan ser reescritas y personalizadas para las PDAs si es posible, duplicando los costos de desarrollo. Debido a que el mercado de aplicaciones de escritorio es más grande y maduro, la mayoría del esfuerzo de desarrollo generalmente se destina a las aplicaciones de escritorio, lo que resulta en una mayor funcionalidad y rendimiento que sus contrapartes de PDA. En segundo lugar, las PDAs tienen un entorno con recursos más limitados que las computadoras de escritorio tradicionales para ofrecer un factor de forma más pequeño y una vida útil de la batería más larga. Los navegadores web de escritorio son aplicaciones grandes y complejas que no pueden ejecutarse en una PDA. En cambio, los desarrolladores se ven obligados a reducir significativamente estas navegadores web para ofrecer un navegador web PDA utilizable, lo que limita la funcionalidad del navegador PDA. La computación de cliente ligero proporciona un enfoque alternativo para habilitar el acceso web ubicuo desde dispositivos móviles. Un sistema informático de cliente ligero consiste en un servidor y un cliente que se comunican a través de una red utilizando un protocolo de visualización remota. El protocolo permite que las pantallas gráficas se virtualicen y se sirvan a través de una red a un dispositivo cliente, mientras que la lógica de la aplicación se ejecuta en el servidor. Usando el protocolo de visualización remota, el cliente transmite la entrada del usuario al servidor, y el servidor devuelve actualizaciones de pantalla de las aplicaciones del servidor al cliente. Utilizando un modelo de cliente ligero para dispositivos móviles de mano, las PDAs pueden convertirse en clientes simples sin estado que aprovechan las capacidades del servidor remoto para ejecutar navegadores web y otras aplicaciones auxiliares. El modelo de cliente ligero proporciona varios beneficios importantes para la web inalámbrica móvil. Primero, las aplicaciones web estándar de escritorio pueden utilizarse para entregar contenido web a PDAs sin necesidad de reescribir o adaptar las aplicaciones para ejecutarse en una PDA, lo que reduce los costos de desarrollo y aprovecha las inversiones existentes en software. Segundo, las aplicaciones web complejas pueden ejecutarse en servidores potentes en lugar de ejecutarse en versiones simplificadas en PDAs con recursos más limitados, lo que proporciona una mayor funcionalidad y un mejor rendimiento [10]. Tercero, las aplicaciones web pueden aprovechar servidores con redes más rápidas y mejor conectividad, lo que mejora aún más el rendimiento de la aplicación. En cuarto lugar, las PDAs pueden ser dispositivos aún más simples ya que no necesitan realizar una lógica de aplicación compleja, lo que potencialmente reduce el consumo de energía y extiende la vida útil de la batería. Finalmente, los clientes ligeros PDA pueden ser dispositivos prácticamente sin estado que no necesitan ser respaldados o restaurados, requieren casi ningún mantenimiento o actualizaciones, y no almacenan datos sensibles que puedan perderse o ser robados. Este modelo proporciona una vía viable para que las organizaciones médicas cumplan con las regulaciones de HIPAA mientras incorporan dispositivos móviles en sus operaciones diarias. A pesar de estas posibles ventajas, los clientes ligeros no han podido ofrecer la gama completa de estos beneficios al entregar aplicaciones web a dispositivos móviles portátiles. Los thin clients existentes no fueron diseñados para PDAs y no tienen en cuenta problemas importantes de usabilidad en el contexto de dispositivos de factor de forma pequeño, lo que resulta en dificultades para navegar por el contenido web mostrado. Además, los clientes ligeros existentes son ineficaces para proporcionar movilidad fluida en la mezcla heterogénea de tamaños de pantalla y resoluciones de dispositivos. Si bien los clientes ligeros existentes ya pueden ofrecer un rendimiento más rápido que los navegadores web nativos de PDA al entregar contenido web HTML, no admiten de manera efectiva aplicaciones web auxiliares más intensivas en visualización, como videos multimedia, que cada vez son una parte integral del contenido web disponible. Para aprovechar todo el potencial de la informática de cliente ligero en la provisión de la web inalámbrica móvil en PDAs, hemos desarrollado pTHINC (PDA THin-client InterNet Computing). pTHINC se basa en nuestro trabajo previo en THINC [1] para proporcionar una arquitectura de cliente ligero para dispositivos móviles de mano. pTHINC virtualiza y redimensiona la pantalla en el servidor para entregar de manera eficiente actualizaciones de pantalla de alta fidelidad a una amplia gama de clientes diferentes, tamaños de pantalla y orientaciones de pantalla, incluidos los modos de visualización en vertical y horizontal. Esto permite a pTHINC proporcionar la misma sesión web persistente en diferentes dispositivos de cliente. Por ejemplo, pTHINC puede proporcionar la misma sesión de navegación web adecuadamente escalada para su visualización en una computadora de escritorio y una PDA, de modo que las mismas cookies, marcadores y otros metadatos estén disponibles continuamente en ambas máquinas simultáneamente. El enfoque de visualización virtual de pTHINC aprovecha la información semántica disponible en los comandos de visualización y el hardware de video del cliente para proporcionar mecanismos de visualización remota más eficientes que son cruciales para admitir aplicaciones web más intensivas en visualización. Dada la limitada resolución de pantalla en las PDA, pTHINC maximiza el uso del espacio de pantalla para la visualización remota al trasladar la funcionalidad de control de la pantalla a los botones de control de PDA fácilmente disponibles, mejorando la usabilidad del sistema. Hemos implementado pTHINC en Windows Mobile y demostrado que funciona de manera transparente con las aplicaciones existentes, sistemas de ventanas y sistemas operativos, y no requiere modificar, recompilar o volver a enlazar el software existente. Hemos evaluado cuantitativamente pTHINC frente a navegadores web PDA locales y otros enfoques de cliente ligero en dispositivos Pocket PC. Nuestros resultados experimentales demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero de PDA que soporta de manera efectiva aplicaciones esenciales de ayuda para el navegador, como la reproducción de video. Este documento presenta el diseño e implementación de pTHINC. La sección 2 describe el modelo de uso general y las características de usabilidad de pTHINC. La sección 3 presenta el diseño y la arquitectura del sistema de pTHINC. La sección 4 presenta resultados experimentales que miden el rendimiento de pTHINC en aplicaciones web y lo comparan con navegadores nativos de PDA y otros sistemas de cliente ligero de PDA populares. La sección 5 discute el trabajo relacionado. Finalmente, presentamos algunas observaciones finales. El MODELO DE USO DE pTHINC pTHINC es un sistema de cliente ligero que consiste en una aplicación de visualización de cliente simple que se ejecuta en la PDA y un servidor que se ejecuta en una PC estándar. El servidor aprovecha PCs más potentes para ejecutar navegadores web y otra lógica de aplicaciones. El cliente recibe la entrada del usuario desde el lápiz óptico y el teclado virtual de la PDA y los envía al servidor para pasarlos a las aplicaciones. Las actualizaciones de la pantalla son luego enviadas desde el servidor al cliente para mostrar al usuario. Cuando se inicia el cliente PDA pTHINC, se presenta al usuario una interfaz gráfica simple donde se pueden proporcionar información como la dirección y el puerto del servidor, la información de autenticación del usuario y la configuración de la sesión. pTHINC primero intenta conectarse al servidor y realizar el saludo necesario. Una vez que este proceso haya sido completado, pTHINC presenta al usuario la visualización más reciente de su sesión. Si la sesión no existe, se crea una nueva sesión. Las sesiones existentes pueden continuar sin problemas sin cambios en la configuración de la sesión o del servidor. A diferencia de otros sistemas de cliente ligero, pTHINC proporciona a un usuario un modelo de sesión web persistente en el que un usuario puede iniciar una sesión ejecutando un navegador web y aplicaciones asociadas en el servidor, luego desconectarse de esa sesión y volver a conectarse en cualquier momento. Cuando un usuario se reconecta a la sesión, todas las aplicaciones siguen funcionando desde donde el usuario las dejó, de modo que el usuario puede seguir trabajando como si nunca se hubiera desconectado. La capacidad de desconectarse y reconectarse a una sesión en cualquier momento es un beneficio importante para los usuarios de PDA inalámbricas móviles que pueden tener conectividad de red intermitente. El modelo de sesión web persistente de pTHINCs permite a un usuario reconectarse a una sesión web desde dispositivos distintos al que se inició originalmente la sesión web. Esto proporciona a los usuarios una movilidad fluida entre diferentes dispositivos. Si un usuario pierde su PDA, puede fácilmente usar otra PDA para acceder a su sesión web. Además, pTHINC permite a los usuarios utilizar dispositivos que no son PDA para acceder a sesiones web también. Un usuario puede acceder a la misma sesión web persistente en una PC de escritorio como en una PDA, lo que le permite al usuario utilizar la misma sesión web desde cualquier computadora. El modelo de sesión web persistente de pTHINCs aborda un problema clave encontrado por los usuarios de la web móvil, la falta de un entorno web común en diferentes computadoras. Los navegadores web a menudo almacenan información importante como marcadores, cookies e historial, lo que les permite funcionar de una manera mucho más útil. El problema que ocurre cuando un usuario se mueve entre computadoras es que estos datos, específicos de una instalación de un navegador web, no pueden moverse con el usuario. Además, los navegadores web a menudo necesitan aplicaciones auxiliares para procesar diferentes contenidos multimedia, y esas aplicaciones pueden no estar disponibles de manera consistente en todas las computadoras. pTHINC aborda este problema al permitir que un usuario utilice de forma remota el mismo entorno de navegador web y aplicaciones auxiliares desde cualquier computadora. Como resultado, pTHINC puede proporcionar un entorno de navegación web común y consistente para usuarios móviles en diferentes dispositivos sin requerirles intentar sincronizar repetidamente diferentes entornos de navegación web en múltiples máquinas. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC debe proporcionar mecanismos para admitir diferentes tamaños de pantalla y resoluciones. Con este fin, pTHINC proporciona una función de zoom que permite a un usuario acercar y alejar una pantalla y permite que la pantalla de una sesión web 144 Figura 1: teclas de acceso rápido de pTHINC se redimensione para adaptarse a la pantalla del dispositivo que se está utilizando. Por ejemplo, si el servidor está ejecutando una sesión web a 1024×768 pero el cliente es una PDA con una resolución de pantalla de 640×480, pTHINC redimensionará la pantalla del escritorio para que se ajuste a la pantalla más pequeña de la PDA. pTHINC proporciona al usuario de la PDA la opción de aumentar el tamaño de la pantalla haciendo zoom en diferentes partes de la pantalla. Los usuarios suelen estar familiarizados con el diseño general de los sitios web que visitan con frecuencia, y pueden aprovechar esta función de redimensionamiento para navegar mejor por las páginas web. Por ejemplo, un usuario puede alejarse de la pantalla para ver todo el contenido de la página y navegar por los hipervínculos, luego acercarse a una región de interés para obtener una mejor vista. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC también debe proporcionar mecanismos para admitir diferentes orientaciones de pantalla. En un entorno de escritorio, los usuarios suelen estar acostumbrados a tener las pantallas presentadas en modo horizontal, donde el ancho de la pantalla es mayor que su altura. Sin embargo, en un entorno de PDA, la elección no siempre es obvia. Algunos usuarios pueden preferir tener la pantalla en modo retrato, ya que es más fácil sostener el dispositivo en sus manos, mientras que otros pueden preferir el modo paisaje para minimizar la cantidad de desplazamiento lateral necesario para ver una página web. Para adaptarse a las preferencias de los usuarios de PDA, pTHINC proporciona una función de orientación que le permite rotar la pantalla de forma fluida entre el modo horizontal y vertical. El modo de paisaje es particularmente útil para los usuarios de pTHINC que acceden con frecuencia a sus sesiones web tanto en dispositivos de escritorio como en PDA, proporcionando a esos usuarios el mismo ajuste de paisaje familiar en diferentes dispositivos. Dado que el espacio de pantalla es un recurso relativamente escaso en las PDAs, pTHINC se ejecuta en modo de pantalla completa para maximizar el área de pantalla disponible para mostrar la sesión web. Para poder utilizar toda la pantalla en la PDA y aún así permitir al usuario controlar e interactuar con ella, pTHINC reutiliza los botones de acceso directo típicos que se encuentran en las PDAs para realizar todas las funciones de control disponibles para el usuario. Los botones utilizados por pTHINC no requieren ningún cambio en el entorno del sistema operativo; simplemente son interceptados por la aplicación cliente de pTHINC cuando se presionan. La Figura 1 muestra cómo pTHINC utiliza los botones de acceso directo para proporcionar una navegación sencilla y mejorar la experiencia del usuario en general. Estos botones no son específicos del dispositivo, y el diseño mostrado es común en dispositivos PocketPC ampliamente utilizados. pTHINC proporciona seis accesos directos para apoyar su modelo de uso: • Rotar pantalla: El botón de grabación en el borde izquierdo se utiliza para rotar la pantalla entre modo retrato y modo paisaje cada vez que se presiona el botón. • Alejar: El botón más a la izquierda en la parte inferior delantera se utiliza para alejar la visualización de la sesión web proporcionando una vista general de la sesión web. • Acercar: El segundo botón más a la izquierda en la parte inferior delantera se utiliza para acercar la visualización de la sesión web para ver más claramente el contenido de interés. • Desplazamiento direccional: El botón central en la parte inferior delantera se utiliza para desplazarse alrededor de la visualización utilizando un solo botón de control de una manera que ya es familiar para los usuarios de PDA. Esta función es particularmente útil cuando el usuario ha ampliado una región de la pantalla de tal manera que solo una parte de la pantalla es visible en la pantalla. • Mostrar/Ocultar Teclado: El segundo botón más a la derecha en la parte inferior frontal se utiliza para mostrar un teclado virtual dibujado en la pantalla para dispositivos que no tienen teclado físico. El teclado virtual utiliza mecanismos estándar del sistema operativo de PDA, proporcionando portabilidad entre diferentes entornos de PDA. • Cerrar sesión: El botón más a la derecha en la parte inferior frontal se utiliza para desconectarse de la sesión de pTHINC. pTHINC utiliza la pantalla táctil de la PDA, el lápiz óptico y mecanismos estándar de interfaz de usuario para proporcionar una metáfora de punto y clic de la interfaz de usuario similar a la proporcionada por el ratón en un entorno de computación de escritorio tradicional. pTHINC no utiliza un cursor ya que los entornos de PDA no lo proporcionan. En cambio, un usuario puede usar el lápiz táctil para tocar diferentes secciones de la pantalla táctil y señalar el enfoque de entrada. Un toque único en la pantalla táctil genera un evento de clic de ratón correspondiente. Un doble toque en la pantalla táctil genera un evento de doble clic del ratón correspondiente. pTHINC proporciona emulación de ratón de dos botones al usar el lápiz óptico para presionar la pantalla durante un segundo y generar un clic derecho del ratón. Todas estas acciones son idénticas a la forma en que los usuarios ya interactúan con las aplicaciones de PDA en el entorno común de PocketPC. En la navegación web, los usuarios pueden hacer clic en hipervínculos y enfocarse en cuadros de entrada simplemente tocando el área de interés deseada en la pantalla. A diferencia de los navegadores web PDA locales y otras aplicaciones PDA, pTHINC aprovecha metáforas de interfaz de usuario de escritorio más potentes para permitir a los usuarios manipular múltiples ventanas de aplicación abiertas en lugar de estar limitados a una sola ventana de aplicación en un momento dado. Esto proporciona una mayor flexibilidad de navegación más allá de lo que está actualmente disponible en los dispositivos PDA. Similar a un entorno de escritorio, las ventanas del navegador y otras ventanas de aplicaciones pueden ser movidas al presionar y arrastrar el lápiz óptico de manera similar a un ratón. 3. La arquitectura del sistema pTHINC se basa en la arquitectura de visualización remota THINC para proporcionar un sistema de cliente ligero para PDAs. pTHINC virtualiza la visualización en el servidor aprovechando la capa de abstracción del dispositivo de video, que se encuentra por debajo del servidor de ventanas y por encima del framebuffer. Este es un nivel de dispositivo bien definido y de bajo nivel que depende del dispositivo y expone el hardware de video al sistema de visualización. pTHINC logra esto a través de un controlador de pantalla virtual simple que intercepta comandos de dibujo, los empaqueta y los envía a través de la red. Mientras que otros enfoques de cliente ligero interceptan comandos de visualización en otras capas del subsistema de visualización, el enfoque de virtualización de pantalla de pTHINC proporciona algunos beneficios clave para admitir eficientemente a los clientes de PDA. Por ejemplo, interceptar comandos de visualización en una capa superior entre aplicaciones y el sistema de ventanas, como se hace en X [17], requiere replicar y ejecutar una gran cantidad de funcionalidades en la PDA que tradicionalmente son proporcionadas por el sistema de ventanas de escritorio. Dada la magnitud y complejidad de los sistemas de ventanas tradicionales, intentar replicar esta funcionalidad en el entorno restringido de una PDA habría resultado ser una tarea desafiante, y quizás inviable. Además, las aplicaciones y el sistema de ventanas a menudo requieren una sincronización precisa en su funcionamiento, y imponer una red inalámbrica entre ellos al ejecutar las aplicaciones en el servidor y el sistema de ventanas en el cliente degradaría significativamente el rendimiento. Por otro lado, interceptar en una capa inferior extrayendo píxeles del framebuffer a medida que se renderizan proporciona una solución simple que requiere muy poca funcionalidad en el cliente de PDA, pero también puede resultar en un rendimiento degradado. La razón es que para cuando el servidor de visualización remota intenta enviar actualizaciones de pantalla, ha perdido toda la información semántica que podría haberle ayudado a codificar de manera eficiente, y debe recurrir a utilizar un mecanismo de codificación genérico y costoso en el servidor, así como un mecanismo de decodificación potencialmente costoso en el cliente de PDA limitado. A diferencia de los enfoques de intercepción de alto y bajo nivel, el enfoque de pTHINCs de interceptar en el controlador del dispositivo proporciona un equilibrio efectivo entre la simplicidad del cliente y del servidor, y la capacidad de codificar y decodificar de manera eficiente las actualizaciones de pantalla. Al utilizar un enfoque de visualización virtual de bajo nivel, pTHINC puede codificar de manera eficiente los comandos de visualización de la aplicación utilizando solo un pequeño conjunto de comandos de bajo nivel. En un entorno de PDA, este conjunto de comandos proporciona un componente crucial para mantener la simplicidad del cliente en el entorno de PDA con recursos limitados. Los comandos de visualización se muestran en la Tabla 1 y funcionan de la siguiente manera. COPY instruye al cliente a copiar una región de la pantalla desde su framebuffer local a otra ubicación. Este comando mejora la experiencia del usuario al acelerar el desplazamiento y el movimiento de ventanas opacas sin necesidad de reenviar datos de pantalla desde el servidor. SFILL, PFILL y BITMAP son comandos que pintan una región de tamaño fijo en la pantalla. Son útiles para acelerar la visualización de fondos de ventanas sólidas, patrones de escritorio, fondos de páginas web, dibujo de texto y ciertas operaciones en programas de manipulación de gráficos. SFILL llena una región considerable en la pantalla con un solo color. PFILL replica una baldosa sobre una región de la pantalla. BITMAP realiza un relleno utilizando un mapa de bits de unos y ceros como un estipulado para aplicar un color de primer plano y de fondo. Finalmente, RAW se utiliza para transmitir datos de píxeles no codificados que se mostrarán textualmente en una región de la pantalla. Este comando se invoca como último recurso si el servidor no puede emplear ningún otro comando, y es el único comando que puede ser comprimido para mitigar su impacto en el ancho de banda de la red. pTHINC entrega sus comandos utilizando un mecanismo de actualización de servidor-push no bloqueante, donde tan pronto como se generan actualizaciones de pantalla en el servidor, se envían al cliente. Los clientes no están obligados a solicitar explícitamente actualizaciones de pantalla, minimizando así el impacto que la típica variabilidad de la latencia de la red inalámbrica puede tener en la capacidad de respuesta del sistema. Teniendo en cuenta que los recursos Descripción de Comando COPY Copiar un área de búfer de fotogramas en coordenadas especificadas SFILL Rellenar un área con un valor de color de píxel dado PFILL Azulejar un área con un patrón de píxeles dado BITMAP Rellenar una región usando un patrón de bits RAW Mostrar datos de píxeles en bruto en una ubicación dada Tabla 1: Comandos de visualización del protocolo pTHINC. Las PDAs y las redes inalámbricas limitadas pueden no ser capaces de mantenerse al día con un servidor rápido que genera una gran cantidad de actualizaciones, pTHINC es capaz de fusionar, recortar y descartar actualizaciones automáticamente si se produce pérdida o congestión de red, o si el cliente no puede mantenerse al día con la velocidad de las actualizaciones. Este tipo de comportamiento resulta crucial en un entorno de navegación web, donde por ejemplo, una página puede ser redibujada varias veces mientras se renderiza al vuelo por el navegador. En este caso, la PDA solo recibirá y mostrará el resultado final, que claramente es todo lo que al usuario le interesa ver. pTHINC prioriza la entrega de actualizaciones a la PDA utilizando un programador de actualizaciones preemptivo de Tamaño Restante Más Corto Primero (SRSF). SRSF es análogo a la programación de Tiempo de Procesamiento Restante más Corto, la cual se sabe que es óptima para minimizar el tiempo medio de respuesta en un sistema interactivo. En un entorno de navegación web, los trabajos cortos están asociados con el texto y los componentes básicos de diseño de página, como el fondo de las páginas, que son contenido web crítico para el usuario. Por otro lado, los trabajos grandes suelen ser elementos de embellecimiento de menor prioridad, o, incluso peor, banners y anuncios de página web, los cuales tienen un valor cuestionable para el usuario mientras navega por la página. Usando SRSF, pTHINC puede maximizar la utilización del ancho de banda relativamente escaso disponible en la conexión inalámbrica entre la PDA y el servidor. 3.1 Gestión de la Pantalla Para permitir a los usuarios acceder con la misma facilidad a su navegador web y aplicaciones auxiliares desde una computadora de escritorio en casa como desde una PDA mientras están en movimiento, pTHINC proporciona un mecanismo de redimensionamiento para hacer zoom dentro y fuera de la pantalla de una sesión web. El redimensionamiento de pTHINC es completamente compatible con el servidor, no con el cliente. El servidor vuelve a muestrear las actualizaciones para que se ajusten al área de visualización de las PDAs antes de ser transmitidas por la red. pTHINC utiliza el algoritmo de remuestreo de Fants para redimensionar las actualizaciones de píxeles. Esto proporciona actualizaciones suaves y visualmente agradables con un antialiasing adecuado y solo requiere modestos recursos computacionales. El enfoque de redimensionamiento de pTHINCs tiene varias ventajas. Primero, permite al PDA aprovechar la vastamente superior potencia computacional del servidor para utilizar algoritmos de re-muestreo de alta calidad y producir actualizaciones de mayor calidad para que el PDA las muestre. Segundo, cambiar el tamaño de la pantalla no se traduce en requisitos adicionales de recursos para la PDA, ya que no necesita realizar ningún trabajo adicional. Finalmente, se logra una mejor utilización de la red inalámbrica ya que al reescalar las actualizaciones se reducen sus requisitos de ancho de banda. Para permitir a los usuarios orientar sus pantallas en una PDA y así proporcionar una experiencia visual que se ajuste mejor a las preferencias del usuario y al diseño de páginas web o aplicaciones, pTHINC proporciona un mecanismo de rotación de pantalla para alternar entre los modos de visualización horizontal y vertical. La rotación de pantalla de pTHINC es completamente compatible con el cliente, no con el servidor. pTHINC no recalcula explícitamente la geometría de las actualizaciones de pantalla para realizar la rotación, lo cual sería computacionalmente costoso. En cambio, pTHINC simplemente cambia la forma en que los datos se copian en el framebuffer para cambiar entre los modos de visualización. Cuando está en modo retrato, los datos se copian a lo largo de las filas del framebuffer de izquierda a derecha. Cuando se encuentra en modo horizontal, los datos se copian a lo largo de las columnas del framebuffer de arriba hacia abajo. Estas técnicas muy rápidas y simples reemplazan un conjunto de operaciones de copia por otro y no imponen ningún sobrecosto de rendimiento. pTHINC proporciona su propio mecanismo de rotación para soportar una amplia gama de dispositivos sin imponer requisitos adicionales de funciones en la PDA. Aunque algunos dispositivos PDA más nuevos ofrecen soporte nativo para diferentes orientaciones, este mecanismo no es dinámico y requiere que el usuario rote toda la interfaz de usuario de la PDA antes de iniciar el cliente pTHINC. Windows Mobile proporciona mecanismos de API nativos para que las aplicaciones de PDA puedan rotar su interfaz de usuario sobre la marcha, pero estos mecanismos ofrecen un rendimiento deficiente y una calidad de visualización baja, ya que la rotación se realiza de manera ingenua y no es completamente precisa. 3.2 Reproducción de video El video se ha convertido gradualmente en una parte integral de la World Wide Web, y su presencia solo seguirá aumentando. Los sitios web de hoy en día no solo utilizan gráficos animados y flash para presentar el contenido web de manera atractiva, sino que también utilizan video en streaming para enriquecer la interfaz web. Los usuarios pueden ver noticias pregrabadas y en vivo en CNN, ver los momentos más destacados deportivos en ESPN e incluso buscar a través de una gran colección de videos en Google Video. Para permitir que las aplicaciones proporcionen una reproducción de video eficiente, se han creado interfaces en los sistemas de visualización que permiten a los controladores de dispositivos de video exponer sus capacidades de hardware a las aplicaciones. pTHINC aprovecha estas interfaces y su enfoque de controlador de dispositivo virtual para proporcionar un puente virtual entre el cliente remoto y su hardware y las aplicaciones, y admitir de manera transparente la reproducción de video. Sobre esta arquitectura, pTHINC utiliza el espacio de color YUV para codificar el contenido de video, lo cual proporciona una serie de beneficios. Primero, se ha vuelto cada vez más común que el hardware de video de las PDA admita nativamente YUV y pueda realizar la conversión del espacio de color y el escalado automáticamente. Como resultado, pTHINC puede proporcionar reproducción de video a pantalla completa sin afectar el rendimiento. Segundo, el uso de YUV permite una representación más eficiente de los datos RGB sin pérdida de calidad, aprovechando la capacidad de los ojos humanos para distinguir mejor las diferencias en brillo que en color. En particular, pTHINC utiliza el formato YV12, que permite codificar datos de color RGB completo utilizando solo 12 bits por píxel. Tercero, los datos YUV se producen como uno de los últimos pasos del proceso de decodificación de la mayoría de los códecs de video, lo que permite a pTHINC proporcionar la reproducción de video de una manera independiente del formato. Finalmente, aunque el hardware de video de las PDAs no pueda acelerar la reproducción, el proceso de conversión de espacio de color es lo suficientemente simple como para no imponer requisitos poco razonables en la PDA. Un ejemplo más concreto de cómo pTHINC aprovecha el hardware de video PDA para admitir la reproducción de video se puede ver en nuestra implementación de prototipo en la popular PDA Dell Axim X51v, que está equipada con el acelerador multimedia Intel 2700G. En este caso, pTHINC crea un búfer fuera de pantalla en la memoria de video y escribe y lee desde esta región de memoria datos en formato YV12. Cuando llega un nuevo fotograma de video, los datos de video se copian desde el búfer a una superficie superpuesta en la memoria de video, que es independiente de la superficie normal utilizada para el dibujo tradicional. A medida que los datos YV12 se colocan en la superposición, el acelerador de Intel realiza automáticamente la conversión de espacio de color y el escalado. Al utilizar la superficie de superposición, pTHINC no necesita volver a dibujar la pantalla una vez que la reproducción de video ha terminado, ya que la superficie superpuesta no se ve afectada. Además, las regiones de superposición específicas pueden ser manipuladas aprovechando el hardware de video, por ejemplo, para realizar interpolación lineal de hardware y suavizar el fotograma para mostrarlo a pantalla completa, y para realizar rotación automática cuando el cliente se ejecuta en modo horizontal. 4. RESULTADOS EXPERIMENTALES Hemos implementado un prototipo de pTHINC que ejecuta el cliente en dispositivos Pocket PC basados en Windows Mobile ampliamente utilizados y el servidor en sistemas operativos tanto Windows como Linux. Para demostrar su eficacia en el soporte de aplicaciones web inalámbricas móviles, hemos medido su rendimiento en aplicaciones web. Presentamos resultados experimentales sobre diferentes dispositivos PDA para dos aplicaciones web populares, navegar por páginas web y reproducir contenido de video desde la web. Comparamos pTHINC con aplicaciones web nativas que se ejecutan localmente en la PDA para demostrar la mejora que pTHINC puede proporcionar sobre el enfoque tradicional de cliente pesado. También comparamos pTHINC con tres de los clientes ligeros más utilizados que pueden ejecutarse en PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] y VNC (Virtual Network Computing) [16]. Seguimos la práctica común y nos referimos a Citrix MetaFrameXP y Microsoft Remote Desktop por sus respectivos protocolos de visualización remota, ICA (Independent Computing Architecture) y RDP (Remote Desktop Protocol). 4.1 Plataforma de Pruebas Experimental Realizamos nuestros experimentos web utilizando dos PDA Pocket PC inalámbricas diferentes en un entorno de prueba de red Wi-Fi aislado, como se muestra en la Figura 2. El banco de pruebas consistía en dos dispositivos cliente PDA, un monitor de paquetes, un servidor de cliente ligero y un servidor web. Excepto por las PDAs, todas las demás máquinas eran servidores IBM Netfinity 4500R con procesadores duales Intel PIII de 933 MHz y 512 MB de RAM, y estaban conectadas en una red FastEthernet de 100 Mbps conmutada. El servidor web utilizado fue Apache 1.3.27, el emulador de red fue NISTNet 2.0.12 y el monitor de paquetes fue Ethereal 0.10.9. Los clientes de PDA se conectaron al banco de pruebas a través de un punto de acceso inalámbrico Lucent Orinoco AP-2000 802.11b. Todos los experimentos utilizando la red inalámbrica se llevaron a cabo a una distancia de diez pies del punto de acceso, por lo que consideramos que la cantidad de pérdida de paquetes era insignificante en nuestros experimentos. Se utilizaron dos PDA Pocket PC para proporcionar resultados en modelos antiguos y menos potentes, así como en modelos más nuevos de mayor rendimiento. El modelo anterior era un Dell Axim X5 con 147 Cliente 1024×768 640×480 Profundidad Cambio de tamaño Clip RDP no sí 8 bits no sí VNC sí sí 16 bits no no ICA sí sí 16 bits sí no pTHINC sí sí 24 bits sí no Tabla 2: Configuración del banco de pruebas de cliente ligero con un CPU Intel XScale PXA255 de 400 MHz y 64 MB de RAM ejecutando Windows Mobile 2003 y una tarjeta Dell TrueMobile 1180 de 2.4 GHz CompactFlash para redes inalámbricas. El modelo más nuevo era un Dell Axim X51v con un procesador Intel XScale XPA270 de 624 MHz y 64 MB de RAM ejecutando Windows Mobile 5.0 y con red inalámbrica 802.11b integrada. El X51v tiene un acelerador multimedia Intel 2700G con 16MB de memoria de video. Ambas PDAs son capaces de mostrar colores de 16 bits pero tienen diferentes tamaños de pantalla y resoluciones de visualización. El X5 tiene una pantalla diagonal de 3.5 pulgadas con una resolución de 240×320. El X51v tiene una pantalla diagonal de 3.7 pulgadas con una resolución de 480×640. Los cuatro clientes ligeros que utilizamos admiten diferentes niveles de calidad de visualización, como se resume en la Tabla 2. El cliente de RDP solo admite una resolución de pantalla fija de 640×480 en el servidor con una profundidad de color de 8 bits, mientras que otras plataformas ofrecen niveles más altos de calidad de visualización. Para proporcionar una comparación justa en todas las plataformas, realizamos nuestros experimentos con sesiones de cliente ligero configuradas para dos posibles resoluciones, 1024×768 y 640×480. Tanto ICA como VNC se configuraron para usar la resolución nativa de PDA con una profundidad de color de 16 bits. El prototipo actual de pTHINC utiliza color de 24 bits directamente y el cliente reduce la resolución de las actualizaciones al nivel de color de 16 bits disponible en la PDA. RDP se configuró utilizando solo una profundidad de color de 8 bits ya que no admite ninguna profundidad de color mejor. Dado que tanto pTHINC como ICA ofrecen la capacidad de ver la pantalla redimensionada para ajustarse a la pantalla, medimos ambos clientes con y sin la pantalla redimensionada para ajustarse a la pantalla del PDA. Cada cliente ligero fue probado utilizando el modo de paisaje en lugar del modo retrato cuando estaba disponible. Todos los sistemas que se ejecutan en el X51v podrían funcionar en modo horizontal porque el hardware proporciona una función de modo horizontal. Sin embargo, el X5 no proporciona esta funcionalidad. Solo pTHINC admite directamente el modo paisaje, por lo que era el único sistema que podía ejecutarse en modo paisaje tanto en el X5 como en el X51v. Para proporcionar una comparación justa, también estandarizamos en hardware y sistemas operativos comunes siempre que sea posible. Todos los sistemas utilizaron el servidor Netfinity como servidor de cliente ligero. Para los dos sistemas diseñados para servidores Windows, ICA y RDP, ejecutamos Windows Server 2003 en el servidor. Para los otros sistemas que admiten servidores basados en X, ejecutamos la distribución Debian Linux Inestable con el kernel Linux 2.6.10 en el servidor. Utilizamos las últimas versiones de servidores de cliente ligero disponibles en cada plataforma en el momento de nuestros experimentos, a saber, Citrix MetaFrame XP Server para Windows Feature Release 3, Microsoft Remote Desktop integrado en Windows XP y Windows 2003 utilizando RDP 5.2, y VNC 4.0.4.2. Para los benchmarks de aplicaciones, utilizamos dos benchmarks de aplicaciones web para nuestros experimentos basados en dos escenarios de aplicación comunes, navegación por páginas web y reproducción de contenido de video desde la web. Dado que muchos sistemas de cliente ligero, incluidos dos de los probados, son cerrados y propietarios, medimos su rendimiento de manera no invasiva capturando el tráfico de red con un monitor de paquetes y utilizando una variante de benchmarking en cámara lenta [13] previamente desarrollada para medir el rendimiento de clientes ligeros en entornos de PDA [10]. Esta metodología de medición tiene en cuenta tanto el desacoplamiento de la visualización que puede ocurrir entre el cliente y el servidor en sistemas de cliente ligero, como el tiempo de procesamiento del cliente, que puede ser significativo en el caso de las PDAs. Para medir el <br>rendimiento de la navegación web</br>, utilizamos un benchmark de navegación web basado en la Prueba de Carga de Páginas de Texto Web del conjunto de benchmarks Ziff-Davis i-Bench [7]. El punto de referencia consiste en la carga controlada de 55 páginas desde el servidor web mediante JavaScript. Las páginas contienen tanto texto como gráficos, con páginas de diferentes tamaños. Los gráficos son imágenes incrustadas en formatos GIF y JPEG. El benchmark original i-Bench fue modificado para pruebas de rendimiento en cámara lenta al introducir retrasos de varios segundos entre las páginas utilizando JavaScript. Luego se realizaron dos pruebas, una en la que se agregaron retrasos entre cada página, y otra en la que las páginas se cargaron continuamente sin esperar a que se mostraran en el cliente. En la primera prueba, los retrasos se ajustaron lo suficiente en cada caso para garantizar que cada página pudiera ser recibida y mostrada en el cliente por completo sin solapamiento temporal en la transferencia de los datos pertenecientes a dos páginas consecutivas. Utilizamos el monitor de paquetes para registrar el tráfico de paquetes para cada ejecución de la prueba de referencia, luego utilizamos las marcas de tiempo del primer y último paquete en la traza para obtener nuestras medidas de latencia [10]. El monitor de paquetes también registró la cantidad de datos transmitidos entre el cliente y el servidor. La proporción entre el tráfico de datos en las dos pruebas produce un factor de escala. Este factor de escala muestra la pérdida de datos entre el servidor y el cliente debido a la incapacidad del cliente para procesar los datos lo suficientemente rápido. El producto del factor de escala con la medición de latencia produce la verdadera latencia teniendo en cuenta el tiempo de procesamiento del cliente. Para ejecutar la prueba de navegación web, utilizamos Mozilla Firefox 1.0.4 en el servidor de cliente ligero para los clientes ligeros, y Windows Internet Explorer (IE) Mobile para 2003 y Mobile para 5.0 para los navegadores nativos en las PDAs X5 y X51v, respectivamente. En todos los casos, el navegador web utilizado se ajustó para ocupar toda la región de visualización disponible. Para medir el rendimiento de reproducción de video, utilizamos un banco de pruebas de video que consistía en reproducir un clip de video MPEG-1 de 34.75 segundos que contenía una mezcla de noticias y programación de entretenimiento a resolución de pantalla completa. El videoclip tiene un tamaño de 5.11 MB y consta de 834 cuadros de píxeles de 352x240 con una velocidad de cuadro ideal de 24 cuadros por segundo. Medimos el rendimiento del video utilizando pruebas de referencia en cámara lenta al monitorear el tráfico de paquetes resultante a dos velocidades de reproducción, 1 cuadro por segundo (fps) y 24 fps, y comparando los resultados para determinar los retrasos en la reproducción y las caídas de cuadros que ocurren a 24 fps para medir la calidad general del video [13]. Por ejemplo, el 100% de calidad significa que todos los fotogramas del video se reprodujeron a velocidad en tiempo real. Por otro lado, una calidad del 50% podría significar que se eliminó la mitad de los datos del video, o que el clip tardó el doble en reproducirse a pesar de que se mostró toda la información del video. Para ejecutar la prueba de rendimiento de video, utilizamos Windows Media Player 9 para servidores de clientes ligeros basados en Windows, MPlayer 1.0 pre 6 para servidores de clientes ligeros basados en X, y Windows Media Player 9 Mobile y 10 Mobile para los reproductores de video nativos que se ejecutan localmente en las PDAs X5 y X51v, respectivamente. En todos los casos, el reproductor de video utilizado se dimensionó para llenar toda la región de visualización disponible. Las Figuras 3 y 4 muestran los resultados de ejecutar la prueba de navegación por la web. Para cada plataforma, mostramos resultados de hasta cuatro configuraciones diferentes, dos en el X5 y dos en el X51v, dependiendo de si cada configuración era compatible. Sin embargo, no todas las plataformas podrían admitir todas las configuraciones. El navegador local solo se ejecuta a la resolución de pantalla de la PDA, 480×680 o menos para el X51v y el X5. RDP solo funciona a 640×480. Ninguna plataforma podía soportar una resolución de pantalla de 1024×768. ICA solo funcionaba en el X5 y no podía ejecutarse en el X51v porque no era compatible con Windows Mobile 5. La Figura 3 muestra la latencia promedio por página web para cada plataforma. pTHINC proporciona la latencia promedio más baja en la navegación web en ambas PDAs. En el X5, pTHINC funciona hasta 70 veces mejor que otros sistemas de cliente ligero y 8 veces mejor que el navegador local. En el X51v, pTHINC funciona hasta 80 veces mejor que otros sistemas de cliente ligero y 7 veces mejor que el navegador nativo. De hecho, todos los clientes ligeros excepto VNC superan al navegador local de PDA, demostrando los beneficios de rendimiento del enfoque de cliente ligero. Los estudios de usabilidad han demostrado que las páginas web deben tardar menos de un segundo en descargarse para que el usuario experimente una navegación web ininterrumpida [14]. Las mediciones muestran que solo los clientes delgados ofrecen latencias de página web de menos de un segundo. Por el contrario, el navegador local requiere más de 3 segundos en promedio por página web. El navegador local funciona peor ya que necesita ejecutar un navegador web más limitado para procesar el HTML, JavaScript y realizar todo el renderizado utilizando las capacidades limitadas de la PDA. Los clientes ligeros pueden aprovecharse de hardware de servidor más rápido y un navegador web altamente optimizado para procesar el contenido web mucho más rápido. La Figura 3 muestra que RDP es la plataforma más rápida después de pTHINC. Sin embargo, RDP solo puede ejecutarse a una resolución fija de 640×480 y una profundidad de color de 8 bits. Además, RDP también recorta la pantalla al tamaño de la pantalla de la PDA para no tener que enviar actualizaciones que no son visibles en la pantalla de la PDA. Esto proporciona un beneficio de rendimiento siempre y cuando el resto del contenido web no se visualice, pero degrada el rendimiento cuando un usuario desplaza la pantalla para ver otro contenido web. RDP logra su rendimiento con una calidad de visualización significativamente inferior en comparación con otros clientes ligeros y con recortes adicionales en la visualización que no son utilizados por otros sistemas. Como resultado, el rendimiento de RDP por sí solo no proporciona una comparación completa con las otras plataformas. Por el contrario, pTHINC ofrece el mejor rendimiento al mismo tiempo que proporciona una calidad de visualización igual o mejor que los otros sistemas. Dado que VNC e ICA ofrecen una calidad de visualización similar a pTHINC, estos sistemas proporcionan una comparación más justa de diferentes enfoques de cliente ligero. ICA funciona peor en parte porque utiliza primitivas de visualización de nivel superior que requieren costos adicionales de procesamiento por parte del cliente. VNC funciona peor en parte porque pierde datos de visualización debido a su mecanismo de entrega de cliente-pull y debido a los costos de procesamiento del cliente en descomprimir primitivas de píxeles crudos. En ambos casos, su rendimiento se vio limitado en parte porque sus clientes de PDA no podían mantenerse al ritmo al que se mostraban las páginas web. La Figura 3 también muestra las medidas para aquellos clientes ligeros que admiten redimensionar la pantalla para ajustarse a la pantalla de la PDA, a saber, ICA y pTHINC. El redimensionamiento requiere un procesamiento adicional, lo que resulta en latencias promedio más lentas de las páginas web. Las mediciones muestran que el retraso adicional incurrido por ICA al cambiar el tamaño es mucho más sustancial que para pTHINC. ICA realiza redimensionamiento en el cliente PDA más lento. Por el contrario, pTHINC aprovecha el servidor más potente para redimensionar, reduciendo la diferencia de rendimiento entre redimensionar y no redimensionar. A diferencia de ICA, pTHINC es capaz de proporcionar latencias de descarga de páginas web en menos de un segundo en ambos casos. La Figura 4 muestra los datos transferidos en KB por página al ejecutar la versión de cámara lenta de las pruebas. Todas las plataformas tienen requisitos modestos de transferencia de datos de aproximadamente 100 KB por página o menos. Esto está bien dentro de la capacidad de ancho de banda de las redes Wi-Fi. Las mediciones muestran que el navegador local no transfiere la menor cantidad de datos. Esto es sorprendente ya que HTML suele considerarse una representación muy compacta del contenido. En cambio, RDP es la plataforma más eficiente en ancho de banda, en gran parte debido a que utiliza solo una profundidad de color de 8 bits y recorte de pantalla para no transferir la página web completa al cliente. En general, pTHINC tiene los mayores requisitos de datos, ligeramente más que VNC. Esto se debe en gran medida a la falta de soporte nativo de los prototipos actuales de pTHINC para datos de color de 16 bits en el protocolo de comunicación. Sin embargo, este resultado también destaca el rendimiento de pTHINCs, ya que es más rápido que todos los demás sistemas incluso al transferir más datos. Además, dado que los modelos más recientes de PDA admiten colores completos de 24 bits, estos resultados indican que pTHINC seguirá proporcionando un buen <br>rendimiento en la navegación web</br>. Dado que la usabilidad y la calidad de la pantalla son tan importantes como el rendimiento, las Figuras 5 a 8 comparan capturas de pantalla de los diferentes clientes ligeros al mostrar una página web, en este caso del popular sitio de noticias de la BBC. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo paisaje. Figura 5: Captura de pantalla del navegador: RDP 640x480. Figura 6: Captura de pantalla del navegador: VNC 1024x768. Figura 7: Captura de pantalla del navegador: ICA redimensionado 1024x768. Figura 8: Captura de pantalla del navegador: pTHINC redimensionado 1024x768 utilizando la configuración de resolución de pantalla máxima para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Si bien las capturas de pantalla carecen de la fidelidad visual de la pantalla real del dispositivo, se pueden hacer varias observaciones. La Figura 5 muestra que RDP no admite el modo de pantalla completa y desperdicia mucho espacio en pantalla para controles y elementos de la interfaz de usuario, lo que obliga al usuario a desplazarse para acceder a todo el contenido de la sesión de navegación web. La Figura 6 muestra que VNC aprovecha mejor el espacio de la pantalla y ofrece una mejor calidad de visualización, pero aún obliga al usuario a desplazarse para ver la página web debido a la falta de soporte para redimensionar. La Figura 7 muestra la capacidad de ICA para mostrar la página web completa dada su soporte de redimensionamiento, pero su falta de capacidad en modo paisaje y su algoritmo de redimensionamiento deficiente comprometen significativamente la calidad de visualización. Por el contrario, la Figura 8 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de pantalla completa de alta calidad del ancho completo de la página web. pTHINC maximiza toda la región de visualización moviendo todos los controles a los botones de la PDA. Además, pTHINC aprovecha la potencia computacional del servidor para utilizar un algoritmo de redimensionamiento de alta calidad y ajustar la pantalla al tamaño de la PDA sin un sobrecoste significativo. Las figuras 9 y 10 muestran los resultados de ejecutar la prueba de reproducción de video. Para cada plataforma excepto ICA, mostramos resultados para una configuración X5 y X51v. ICA no pudo ejecutarse en el X51v como se mencionó anteriormente. Las mediciones se realizaron utilizando configuraciones que reflejaban el entorno desde el cual un usuario tendría que acceder a una sesión web tanto desde una computadora de escritorio como desde una PDA. Por lo tanto, se utilizó una resolución de pantalla del servidor de 1024×768 siempre que fuera posible y el video se mostró a pantalla completa. La resolución de pantalla de RDP se limitaba a 640×480, como se mencionó anteriormente. Dado que ver toda la pantalla del video es la única opción realmente utilizable, redimensionamos la pantalla para que se ajustara a la pantalla de la PDA en aquellas plataformas que admitían esta función, a saber, ICA y pTHINC. La Figura 9 muestra la calidad de video para cada plataforma. pTHINC es el único cliente ligero capaz de proporcionar una calidad de reproducción de video perfecta, similar al reproductor de video nativo de PDA. Todos los demás clientes ligeros ofrecen una calidad de video muy pobre. Con la excepción de RDP en el X51v que proporcionó una calidad de video inaceptable del 35%, ninguno de los otros sistemas pudo siquiera alcanzar el 10% de calidad de video. VNC e ICA tienen la peor calidad al 8% en el dispositivo X5. El soporte de video nativo de pTHINCs permite un rendimiento de video superior, mientras que otros clientes ligeros sufren de su incapacidad para distinguir el video de las actualizaciones normales de la pantalla. Intentan aplicar algoritmos de compresión ineficaces y costosos en los datos de video y no pueden mantenerse al día con la corriente de actualizaciones generadas, lo que resulta en cuadros omitidos o largos tiempos de reproducción. VNC se ve aún más afectado por su modelo de actualización de cliente-pull porque los fotogramas de video se generan más rápido que la velocidad a la que el cliente puede procesar y enviar solicitudes al servidor para obtener la siguiente actualización de pantalla. La Figura 10 muestra los datos totales transferidos durante la reproducción de video a pantalla completa para cada sistema. El reproductor nativo es la plataforma más eficiente en ancho de banda, enviando menos de 6 MB de datos, lo que corresponde a aproximadamente 1.2 Mbps de ancho de banda. La calidad de video al 100% de pTHINCs requiere alrededor de 25 MB de datos, lo que corresponde a un uso de ancho de banda de menos de 6 Mbps. Mientras que los otros clientes ligeros envían menos datos que THINC, lo hacen porque están eliminando datos de video, lo que resulta en una calidad de video degradada. Las figuras 11 a 14 comparan capturas de pantalla de los distintos clientes ligeros al mostrar el videoclip. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo horizontal utilizando la configuración de resolución máxima de pantalla para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Las figuras 11 y 12 muestran que RDP y VNC no pueden mostrar el cuadro completo del video en la pantalla de la PDA. RDP desperdicia espacio en pantalla para los elementos de la interfaz de usuario y VNC solo muestra la esquina superior del marco de video en la pantalla. La Figura 13 muestra que el ICA proporciona redimensionamiento para mostrar todo el fotograma del video, pero no redimensiona proporcionalmente los datos del video, lo que resulta en artefactos de visualización extraños. Por el contrario, la Figura 14 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de alta calidad a pantalla completa de todo el fotograma del video. pTHINC ofrece una visualización de video visualmente más atractiva que RDP, VNC o ICA. 5. TRABAJOS RELACIONADOS Varios estudios han examinado el <br>rendimiento de la navegación web</br> en la computación de cliente ligero [13, 19, 10]. ",
            "candidates": [],
            "error": [
                [
                    "rendimiento de la navegación web",
                    "rendimiento en la navegación web",
                    "rendimiento de la navegación web"
                ]
            ]
        },
        "video playback": {
            "translated_key": "reproducción de video",
            "is_in_text": true,
            "original_annotated_sentences": [
                "pTHINC: A Thin-Client Architecture for Mobile Wireless Web Joeng Kim, Ricardo A. Baratto, and Jason Nieh Department of Computer Science Columbia University, New York, NY, USA {jk2438, ricardo, nieh}@cs.columbia.edu ABSTRACT Although web applications are gaining popularity on mobile wireless PDAs, web browsers on these systems can be quite slow and often lack adequate functionality to access many web sites.",
                "We have developed pTHINC, a PDA thinclient solution that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide high-fidelity display and seamless mobility across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available screen resolution for application display.",
                "We have implemented pTHINC on Windows Mobile and evaluated its performance on mobile wireless devices.",
                "Our results compared to local PDA web browsers and other thin-client approaches demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as <br>video playback</br>.",
                "Categories and Subject Descriptors: C.2.4 ComputerCommunication-Networks: Distributed Systems - client/ server General Terms: Design, Experimentation, Performance 1.",
                "INTRODUCTION The increasing ubiquity of wireless networks and decreasing cost of hardware is fueling a proliferation of mobile wireless handheld devices, both as standalone wireless Personal Digital Assistants (PDA) and popular integrated PDA/cell phone devices.",
                "These devices are enabling new forms of mobile computing and communication.",
                "Service providers are leveraging these devices to deliver pervasive web access, and mobile web users already often use these devices to access web-enabled information such as news, email, and localized travel guides and maps.",
                "It is likely that within a few years, most of the devices accessing the web will be mobile.",
                "Users typically access web content by running a web browser and associated helper applications locally on the PDA.",
                "Although native web browsers exist for PDAs, they deliver subpar performance and have a much smaller feature set and more limited functionality than their desktop computing counterparts [10].",
                "As a result, PDA web browsers are often not able to display web content from web sites that leverage more advanced web technologies to deliver a richer web experience.",
                "This fundamental problem arises for two reasons.",
                "First, because PDAs have a completely different hardware/software environment from traditional desktop computers, web applications need to be rewritten and customized for PDAs if at all possible, duplicating development costs.",
                "Because the desktop application market is larger and more mature, most development effort generally ends up being spent on desktop applications, resulting in greater functionality and performance than their PDA counterparts.",
                "Second, PDAs have a more resource constrained environment than traditional desktop computers to provide a smaller form factor and longer battery life.",
                "Desktop web browsers are large, complex applications that are unable to run on a PDA.",
                "Instead, developers are forced to significantly strip down these web browsers to provide a usable PDA web browser, thereby crippling PDA browser functionality.",
                "Thin-client computing provides an alternative approach for enabling pervasive web access from handheld devices.",
                "A thin-client computing system consists of a server and a client that communicate over a network using a remote display protocol.",
                "The protocol enables graphical displays to be virtualized and served across a network to a client device, while application logic is executed on the server.",
                "Using the remote display protocol, the client transmits user input to the server, and the server returns screen updates of the applications from the server to the client.",
                "Using a thin-client model for mobile handheld devices, PDAs can become simple stateless clients that leverage the remote server capabilities to execute web browsers and other helper applications.",
                "The thin-client model provides several important benefits for mobile wireless web.",
                "First, standard desktop web applications can be used to deliver web content to PDAs without rewriting or adapting applications to execute on a PDA, reducing development costs and leveraging existing software investments.",
                "Second, complex web applications can be executed on powerful servers instead of running stripped down versions on more resource constrained PDAs, providing greater functionality and better performance [10].",
                "Third, web applications can take advantage of servers with faster networks and better connectivity, further boosting application performance.",
                "Fourth, PDAs can be even simpler devices since they do not need to perform complex application logic, potentially reducing energy consumption and extend143 ing battery life.",
                "Finally, PDA thin clients can be essentially stateless appliances that do not need to be backed up or restored, require almost no maintenance or upgrades, and do not store any sensitive data that can be lost or stolen.",
                "This model provides a viable avenue for medical organizations to comply with HIPAA regulations [6] while embracing mobile handhelds in their day to day operations.",
                "Despite these potential advantages, thin clients have been unable to provide the full range of these benefits in delivering web applications to mobile handheld devices.",
                "Existing thin clients were not designed for PDAs and do not account for important usability issues in the context of small form factor devices, resulting in difficulty in navigating displayed web content.",
                "Furthermore, existing thin clients are ineffective at providing seamless mobility across the heterogeneous mix of device display sizes and resolutions.",
                "While existing thin clients can already provide faster performance than native PDA web browsers in delivering HTML web content, they do not effectively support more display-intensive web helper applications such as multimedia video, which is increasingly an integral part of available web content.",
                "To harness the full potential of thin-client computing in providing mobile wireless web on PDAs, we have developed pTHINC (PDA THin-client InterNet Computing). pTHINC builds on our previous work on THINC [1] to provide a thinclient architecture for mobile handheld devices. pTHINC virtualizes and resizes the display on the server to efficiently deliver high-fidelity screen updates to a broad range of different clients, screen sizes, and screen orientations, including both portrait and landscape viewing modes.",
                "This enables pTHINC to provide the same persistent web session across different client devices.",
                "For example, pTHINC can provide the same web browsing session appropriately scaled for display on a desktop computer and a PDA so that the same cookies, bookmarks, and other meta-data are continuously available on both machines simultaneously. pTHINCs virtual display approach leverages semantic information available in display commands, and client-side video hardware to provide more efficient remote display mechanisms that are crucial for supporting more display-intensive web applications.",
                "Given limited display resolution on PDAs, pTHINC maximizes the use of screen real estate for remote display by moving control functionality from the screen to readily available PDA control buttons, improving system usability.",
                "We have implemented pTHINC on Windows Mobile and demonstrated that it works transparently with existing applications, window systems, and operating systems, and does not require modifying, recompiling, or relinking existing software.",
                "We have quantitatively evaluated pTHINC against local PDA web browsers and other thin-client approaches on Pocket PC devices.",
                "Our experimental results demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as <br>video playback</br>.",
                "This paper presents the design and implementation of pTHINC.",
                "Section 2 describes the overall usage model and usability characteristics of pTHINC.",
                "Section 3 presents the design and system architecture of pTHINC.",
                "Section 4 presents experimental results measuring the performance of pTHINC on web applications and comparing it against native PDA browsers and other popular PDA thin-client systems.",
                "Section 5 discusses related work.",
                "Finally, we present some concluding remarks. 2.",
                "PTHINC USAGE MODEL pTHINC is a thin-client system that consists of a simple client viewer application that runs on the PDA and a server that runs on a commodity PC.",
                "The server leverages more powerful PCs to to run web browsers and other application logic.",
                "The client takes user input from the PDA stylus and virtual keyboard and sends them to the server to pass to the applications.",
                "Screen updates are then sent back from the server to the client for display to the user.",
                "When the pTHINC PDA client is started, the user is presented with a simple graphical interface where information such as server address and port, user authentication information, and session settings can be provided. pTHINC first attempts to connect to the server and perform the necessary handshaking.",
                "Once this process has been completed, pTHINC presents the user with the most recent display of his session.",
                "If the session does not exist, a new session is created.",
                "Existing sessions can be seamlessly continued without changes in the session setting or server configuration.",
                "Unlike other thin-client systems, pTHINC provides a user with a persistent web session model in which a user can launch a session running a web browser and associated applications at the server, then disconnect from that session and reconnect to it again anytime.",
                "When a user reconnects to the session, all of the applications continue running where the user left off, so that the user can continue working as though he or she never disconnected.",
                "The ability to disconnect and reconnect to a session at anytime is an important benefit for mobile wireless PDA users which may have intermittent network connectivity. pTHINCs persistent web session model enables a user to reconnect to a web session from devices other than the one on which the web session was originally initiated.",
                "This provides users with seamless mobility across different devices.",
                "If a user loses his PDA, he can easily use another PDA to access his web session.",
                "Furthermore, pTHINC allows users to use non-PDA devices to access web sessions as well.",
                "A user can access the same persistent web session on a desktop PC as on a PDA, enabling a user to use the same web session from any computer. pTHINCs persistent web session model addresses a key problem encountered by mobile web users, the lack of a common web environment across computers.",
                "Web browsers often store important information such as bookmarks, cookies, and history, which enable them to function in a much more useful manner.",
                "The problem that occurs when a user moves between computers is that this data, which is specific to a web browser installation, cannot move with the user.",
                "Furthermore, web browsers often need helper applications to process different media content, and those applications may not be consistently available across all computers. pTHINC addresses this problem by enabling a user to remotely use the exact same web browser environment and helper applications from any computer.",
                "As a result, pTHINC can provide a common, consistent web browsing environment for mobile users across different devices without requiring them to attempt to repeatedly synchronize different web browsing environments across multiple machines.",
                "To enable a user to access the same web session on different devices, pTHINC must provide mechanisms to support different display sizes and resolutions.",
                "Toward this end, pTHINC provides a zoom feature that enables a user to zoom in and out of a display and allows the display of a web 144 Figure 1: pTHINC shortcut keys session to be resized to fit the screen of the device being used.",
                "For example, if the server is running a web session at 1024×768 but the client is a PDA with a display resolution of 640×480, pTHINC will resize the desktop display to fit the full display in the smaller screen of the PDA. pTHINC provides the PDA user with the option to increase the size of the display by zooming in to different parts of the display.",
                "Users are often familiar with the general layout of commonly visited websites, and are able to leverage this resizing feature to better navigate through web pages.",
                "For example, a user can zoom out of the display to view the entire page content and navigate hyperlinks, then zoom in to a region of interest for a better view.",
                "To enable a user to access the same web session on different devices, pTHINC must also provide mechanisms to support different display orientations.",
                "In a desktop environment, users are typically accustomed to having displays presented in landscape mode where the screen width is larger than its height.",
                "However, in a PDA environment, the choice is not always obvious.",
                "Some users may prefer having the display in portrait mode, as it is easier to hold the device in their hands, while others may prefer landscape mode in order to minimize the amount of side-scrolling necessary to view a web page.",
                "To accommodate PDA user preferences, pTHINC provides an orientation feature that enables it to seamless rotate the display between landscape and portrait mode.",
                "The landscape mode is particularly useful for pTHINC users who frequently access their web sessions on both desktop and PDA devices, providing those users with the same familiar landscape setting across different devices.",
                "Because screen space is a relatively scarce resource on PDAs, pTHINC runs in fullscreen mode to maximize the screen area available to display the web session.",
                "To be able to use all of the screen on the PDA and still allow the user to control and interact with it, pTHINC reuses the typical shortcut buttons found on PDAs to perform all the control functions available to the user.",
                "The buttons used by pTHINC do not require any OS environment changes; they are simply intercepted by the pTHINC client application when they are pressed.",
                "Figure 1 shows how pTHINC utilizes the shortcut buttons to provide easy navigation and improve the overall user experience.",
                "These buttons are not device specific, and the layout shown is common to widelyused PocketPC devices. pTHINC provides six shortcuts to support its usage model: • Rotate Screen: The record button on the left edge is used to rotate the screen between portrait and landscape mode each time the button is pressed. • Zoom Out: The leftmost button on the bottom front is used to zoom out the display of the web session providing a birds eye view of the web session. • Zoom In: The second leftmost button on the bottom front is used to zoom in the display of the web session to more clearly view content of interest. • Directional Scroll: The middle button on the bottom front is used to scroll around the display using a single control button in a way that is already familiar to PDA users.",
                "This feature is particularly useful when the user has zoomed in to a region of the display such that only part of the display is visible on the screen. • Show/Hide Keyboard: The second rightmost button on the bottom front is used to bring up a virtual keyboard drawn on the screen for devices which have no physical keyboard.",
                "The virtual keyboard uses standard PDA OS mechanisms, providing portability across different PDA environments. • Close Session: The rightmost button on the bottom front is used to disconnect from the pTHINC session. pTHINC uses the PDA touch screen, stylus, and standard user interface mechanisms to provide a user interface pointand-click metaphor similar to that provided by the mouse in a traditional desktop computing environment. pTHINC does not use a cursor since PDA environments do not provide one.",
                "Instead, a user can use the stylus to tap on different sections of the touch screen to indicate input focus.",
                "A single tap on the touch screen generates a corresponding single click mouse event.",
                "A double tap on the touch screen generates a corresponding double click mouse event. pTHINC provides two-button mouse emulation by using the stylus to press down on the screen for one second to generate a right mouse click.",
                "All of these actions are identical to the way users already interact with PDA applications in the common PocketPC environment.",
                "In web browsing, users can click on hyperlinks and focus on input boxes by simply tapping on the desired screen area of interest.",
                "Unlike local PDA web browsers and other PDA applications, pTHINC leverages more powerful desktop user interface metaphors to enable users to manipulate multiple open application windows instead of being limited to a single application window at any given moment.",
                "This provides increased browsing flexibility beyond what is currently available on PDA devices.",
                "Similar to a desktop environment, browser windows and other application windows can be moved around by pressing down and dragging the stylus similar to a mouse. 3.",
                "PTHINC SYSTEM ARCHITECTURE pTHINC builds on the THINC [1] remote display architecture to provide a thin-client system for PDAs. pTHINC virtualizes the display at the server by leveraging the video device abstraction layer, which sits below the window server and above the framebuffer.",
                "This is a well-defined, low-level, device-dependent layer that exposes the video hardware to the display system. pTHINC accomplishes this through a simple virtual display driver that intercepts drawing commands, packetizes, and sends them over the network. 145 While other thin-client approaches intercept display commands at other layers of the display subsystem, pTHINCs display virtualization approach provides some key benefits in efficiently supporting PDA clients.",
                "For example, intercepting display commands at a higher layer between applications and the window system as is done by X [17] requires replicating and running a great deal of functionality on the PDA that is traditionally provided by the desktop window system.",
                "Given both the size and complexity of traditional window systems, attempting to replicate this functionality in the restricted PDA environment would have proven to be a daunting, and perhaps unfeasible task.",
                "Furthermore, applications and the window system often require tight synchronization in their operation and imposing a wireless network between them by running the applications on the server and the window system on the client would significantly degrade performance.",
                "On the other hand, intercepting at a lower layer by extracting pixels out of the framebuffer as they are rendered provides a simple solution that requires very little functionality on the PDA client, but can also result in degraded performance.",
                "The reason is that by the time the remote display server attempts to send screen updates, it has lost all semantic information that may have helped it encode efficiently, and it must resort to using a generic and expensive encoding mechanism on the server, as well as a potentially expensive decoding mechanism on the limited PDA client.",
                "In contrast to both the high and low level interception approaches, pTHINCs approach of intercepting at the device driver provides an effective balance between client and server simplicity, and the ability to efficiently encode and decode screen updates.",
                "By using a low-level virtual display approach, pTHINC can efficiently encode application display commands using only a small set of low-level commands.",
                "In a PDA environment, this set of commands provides a crucial component in maintaining the simplicity of the client in the resourceconstrained PDA environment.",
                "The display commands are shown in Table 1, and work as follows.",
                "COPY instructs the client to copy a region of the screen from its local framebuffer to another location.",
                "This command improves the user experience by accelerating scrolling and opaque window movement without having to resend screen data from the server.",
                "SFILL, PFILL, and BITMAP are commands that paint a fixed-size region on the screen.",
                "They are useful for accelerating the display of solid window backgrounds, desktop patterns, backgrounds of web pages, text drawing, and certain operations in graphics manipulation programs.",
                "SFILL fills a sizable region on the screen with a single color.",
                "PFILL replicates a tile over a screen region.",
                "BITMAP performs a fill using a bitmap of ones and zeros as a stipple to apply a foreground and background color.",
                "Finally, RAW is used to transmit unencoded pixel data to be displayed verbatim on a region of the screen.",
                "This command is invoked as a last resort if the server is unable to employ any other command, and it is the only command that may be compressed to mitigate its impact on network bandwidth. pTHINC delivers its commands using a non-blocking, serverpush update mechanism, where as soon as display updates are generated on the server, they are sent to the client.",
                "Clients are not required to explicitly request display updates, thus minimizing the impact that the typical varying network latency of wireless links may have on the responsiveness of the system.",
                "Keeping in mind that resource Command Description COPY Copy a frame buffer area to specified coordinates SFILL Fill an area with a given pixel color value PFILL Tile an area with a given pixel pattern BITMAP Fill a region using a bit pattern RAW Display raw pixel data at a given location Table 1: pTHINC Protocol Display Commands constrained PDAs and wireless networks may not be able to keep up with a fast server generating a large number of updates, pTHINC is able to coalesce, clip, and discard updates automatically if network loss or congestion occurs, or the client cannot keep up with the rate of updates.",
                "This type of behavior proves crucial in a web browsing environment, where for example, a page may be redrawn multiple times as it is rendered on the fly by the browser.",
                "In this case, the PDA will only receive and render the final result, which clearly is all the user is interesting in seeing. pTHINC prioritizes the delivery of updates to the PDA using a Shortest-Remaining-Size-First (SRSF) preemptive update scheduler.",
                "SRSF is analogous to Shortest-RemainingProcessing-Time scheduling, which is known to be optimal for minimizing mean response time in an interactive system.",
                "In a web browsing environment, short jobs are associated with text and basic page layout components such as the pages background, which are critical web content for the user.",
                "On the other hand, large jobs are often lower priority beautifying elements, or, even worse, web page banners and advertisements, which are of questionable value to the user as he or she is browsing the page.",
                "Using SRSF, pTHINC is able to maximize the utilization of the relatively scarce bandwidth available on the wireless connection between the PDA and the server. 3.1 Display Management To enable users to just as easily access their web browser and helper applications from a desktop computer at home as from a PDA while on the road, pTHINC provides a resize mechanism to zoom in and out of the display of a web session. pTHINC resizing is completely supported by the server, not the client.",
                "The server resamples updates to fit within the PDAs viewport before they are transmitted over the network. pTHINC uses Fants resampling algorithm to resize pixel updates.",
                "This provides smooth, visually pleasing updates with properly antialiasing and has only modest computational requirements. pTHINCs resizing approach has a number of advantages.",
                "First, it allows the PDA to leverage the vastly superior computational power of the server to use high quality resampling algorithms and produce higher quality updates for the PDA to display.",
                "Second, resizing the screen does not translate into additional resource requirements for the PDA, since it does not need to perform any additional work.",
                "Finally, better utilization of the wireless network is attained since rescaling the updates reduces their bandwidth requirements.",
                "To enable users to orient their displays on a PDA to provide a viewing experience that best accommodates user preferences and the layout of web pages or applications, pTHINC provides a display rotation mechanism to switch between landscape and portrait viewing modes. pTHINC display rotation is completely supported by the client, not the server. pTHINC does not explicitly recalculate the ge146 ometry of display updates to perform rotation, which would be computationally expensive.",
                "Instead, pTHINC simply changes the way data is copied into the framebuffer to switch between display modes.",
                "When in portrait mode, data is copied along the rows of the framebuffer from left to right.",
                "When in landscape mode, data is copied along the columns of the framebuffer from top to bottom.",
                "These very fast and simple techniques replace one set of copy operations with another and impose no performance overhead. pTHINC provides its own rotation mechanism to support a wide range of devices without imposing additional feature requirements on the PDA.",
                "Although some newer PDA devices provide native support for different orientations, this mechanism is not dynamic and requires the user to rotate the PDAs entire user interface before starting the pTHINC client.",
                "Windows Mobile provides native API mechanisms for PDA applications to rotate their UI on the fly, but these mechanisms deliver poor performance and display quality as the rotation is performed naively and is not completely accurate. 3.2 <br>video playback</br> Video has gradually become an integral part of the World Wide Web, and its presence will only continue to increase.",
                "Web sites today not only use animated graphics and flash to deliver web content in an attractive manner, but also utilize streaming video to enrich the web interface.",
                "Users are able to view pre-recorded and live newscasts on CNN, watch sports highlights on ESPN, and even search through large collection of videos on Google Video.",
                "To allow applications to provide efficient <br>video playback</br>, interfaces have been created in display systems that allow video device drivers to expose their hardware capabilities back to the applications. pTHINC takes advantage of these interfaces and its virtual device driver approach to provide a virtual bridge between the remote client and its hardware and the applications, and transparently support <br>video playback</br>.",
                "On top of this architecture, pTHINC uses the YUV colorspace to encode the video content, which provides a number of benefits.",
                "First, it has become increasingly common for PDA video hardware to natively support YUV and be able to perform the colorspace conversion and scaling automatically.",
                "As a result, pTHINC is able to provide fullscreen <br>video playback</br> without any performance hits.",
                "Second, the use of YUV allows for a more efficient representation of RGB data without loss of quality, by taking advantage of the human eyes ability to better distinguish differences in brightness than in color.",
                "In particular, pTHINC uses the YV12 format, which allows full color RGB data to be encoded using just 12 bits per pixel.",
                "Third, YUV data is produced as one of the last steps of the decoding process of most video codecs, allowing pTHINC to provide <br>video playback</br> in a manner that is format independent.",
                "Finally, even if the PDAs video hardware is unable to accelerate playback, the colorspace conversion process is simple enough that it does not impose unreasonable requirements on the PDA.",
                "A more concrete example of how pTHINC leverages the PDA video hardware to support <br>video playback</br> can be seen in our prototype implementation on the popular Dell Axim X51v PDA, which is equipped with the Intel 2700G multimedia accelerator.",
                "In this case, pTHINC creates an offscreen buffer in video memory and writes and reads from this memory region data on the YV12 format.",
                "When a new video frame arrives, video data is copied from the buffer to Figure 2: Experimental Testbed an overlay surface in video memory, which is independent of the normal surface used for traditional drawing.",
                "As the YV12 data is put onto the overlay, the Intel accelerator automatically performs both colorspace conversion and scaling.",
                "By using the overlay surface, pTHINC has no need to redraw the screen once <br>video playback</br> is over since the overlapped surface is unaffected.",
                "In addition, specific overlay regions can be manipulated by leveraging the video hardware, for example to perform hardware linear interpolation to smooth out the frame and display it fullscreen, and to do automatic rotation when the client runs in landscape mode. 4.",
                "EXPERIMENTAL RESULTS We have implemented a pTHINC prototype that runs the client on widely-used Windows Mobile-based Pocket PC devices and the server on both Windows and Linux operating systems.",
                "To demonstrate its effectiveness in supporting mobile wireless web applications, we have measured its performance on web applications.",
                "We present experimental results on different PDA devices for two popular web applications, browsing web pages and playing video content from the web.",
                "We compared pTHINC against native web applications running locally on the PDA to demonstrate the improvement that pTHINC can provide over the traditional fat-client approach.",
                "We also compared pTHINC against three of the most widely used thin clients that can run on PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] and VNC (Virtual Network Computing) [16].",
                "We follow common practice and refer to Citrix MetaFrameXP and Microsoft Remote Desktop by their respective remote display protocols, ICA (Independent Computing Architecture) and RDP (Remote Desktop Protocol). 4.1 Experimental Testbed We conducted our web experiments using two different wireless Pocket PC PDAs in an isolated Wi-Fi network testbed, as shown in Figure 2.",
                "The testbed consisted of two PDA client devices, a packet monitor, a thin-client server, and a web server.",
                "Except for the PDAs, all of the other machines were IBM Netfinity 4500R servers with dual 933 MHz Intel PIII CPUs and 512 MB RAM and were connected on a switched 100 Mbps FastEthernet network.",
                "The web server used was Apache 1.3.27, the network emulator was NISTNet 2.0.12, and the packet monitor was Ethereal 0.10.9.",
                "The PDA clients connected to the testbed through a 802.11b Lucent Orinoco AP-2000 wireless access point.",
                "All experiments using the wireless network were conducted within ten feet of the access point, so we considered the amount of packet loss to be negligible in our experiments.",
                "Two Pocket PC PDAs were used to provide results across both older, less powerful models and newer higher performance models.",
                "The older model was a Dell Axim X5 with 147 Client 1024×768 640×480 Depth Resize Clip RDP no yes 8-bit no yes VNC yes yes 16-bit no no ICA yes yes 16-bit yes no pTHINC yes yes 24-bit yes no Table 2: Thin-client Testbed Configuration Setting a 400 MHz Intel XScale PXA255 CPU and 64 MB RAM running Windows Mobile 2003 and a Dell TrueMobile 1180 2.4Ghz CompactFlash card for wireless networking.",
                "The newer model was a Dell Axim X51v with a 624 MHz Intel XScale XPA270 CPU and 64 MB RAM running Windows Mobile 5.0 and integrated 802.11b wireless networking.",
                "The X51v has an Intel 2700G multimedia accelerator with 16MB video memory.",
                "Both PDAs are capable of 16-bit color but have different screen sizes and display resolutions.",
                "The X5 has a 3.5 inch diagonal screen with 240×320 resolution.",
                "The X51v has a 3.7 inch diagonal screen with 480×640.",
                "The four thin clients that we used support different levels of display quality as summarized in Table 2.",
                "The RDP client only supports a fixed 640×480 display resolution on the server with 8-bit color depth, while other platforms provide higher levels of display quality.",
                "To provide a fair comparison across all platforms, we conducted our experiments with thin-client sessions configured for two possible resolutions, 1024×768 and 640×480.",
                "Both ICA and VNC were configured to use the native PDA resolution of 16-bit color depth.",
                "The current pTHINC prototype uses 24-bit color directly and the client downsamples updates to the 16-bit color depth available on the PDA.",
                "RDP was configured using only 8-bit color depth since it does not support any better color depth.",
                "Since both pTHINC and ICA provide the ability to view the display resized to fit the screen, we measured both clients with and without the display resized to fit the PDA screen.",
                "Each thin client was tested using landscape rather than portrait mode when available.",
                "All systems run on the X51v could run in landscape mode because the hardware provides a landscape mode feature.",
                "However, the X5 does not provide this functionality.",
                "Only pTHINC directly supports landscape mode, so it was the only system that could run in landscape mode on both the X5 and X51v.",
                "To provide a fair comparison, we also standardized on common hardware and operating systems whenever possible.",
                "All of the systems used the Netfinity server as the thin-client server.",
                "For the two systems designed for Windows servers, ICA and RDP, we ran Windows 2003 Server on the server.",
                "For the other systems which support X-based servers, VNC and pTHINC, we ran the Debian Linux Unstable distribution with the Linux 2.6.10 kernel on the server.",
                "We used the latest thin-client server versions available on each platform at the time of our experiments, namely Citrix MetaFrame XP Server for Windows Feature Release 3, Microsoft Remote Desktop built into Windows XP and Windows 2003 using RDP 5.2, and VNC 4.0. 4.2 Application Benchmarks We used two web application benchmarks for our experiments based on two common application scenarios, browsing web pages and playing video content from the web.",
                "Since many thin-client systems including two of the ones tested are closed and proprietary, we measured their performance in a noninvasive manner by capturing network traffic with a packet monitor and using a variant of slow-motion benchmarking [13] previously developed to measure thin-client performance in PDA environments [10].",
                "This measurement methodology accounts for both the display decoupling that can occur between client and server in thin-client systems as well as client processing time, which may be significant in the case of PDAs.",
                "To measure web browsing performance, we used a web browsing benchmark based on the Web Text Page Load Test from the Ziff-Davis i-Bench benchmark suite [7].",
                "The benchmark consists of JavaScript controlled load of 55 pages from the web server.",
                "The pages contain both text and graphics with pages varying in size.",
                "The graphics are embedded images in GIF and JPEG formats.",
                "The original i-Bench benchmark was modified for slow-motion benchmarking by introducing delays of several seconds between the pages using JavaScript.",
                "Then two tests were run, one where delays where added between each page, and one where pages where loaded continuously without waiting for them to be displayed on the client.",
                "In the first test, delays were sufficiently adjusted in each case to ensure that each page could be received and displayed on the client completely without temporal overlap in transferring the data belonging to two consecutive pages.",
                "We used the packet monitor to record the packet traffic for each run of the benchmark, then used the timestamps of the first and last packet in the trace to obtain our latency measures [10].",
                "The packet monitor also recorded the amount of data transmitted between the client and the server.",
                "The ratio between the data traffic in the two tests yields a scale factor.",
                "This scale factor shows the loss of data between the server and the client due to inability of the client to process the data quickly enough.",
                "The product of the scale factor with the latency measurement produces the true latency accounting for client processing time.",
                "To run the web browsing benchmark, we used Mozilla Firefox 1.0.4 running on the thin-client server for the thin clients, and Windows Internet Explorer (IE) Mobile for 2003 and Mobile for 5.0 for the native browsers on the X5 and X51v PDAs, respectively.",
                "In all cases, the web browser used was sized to fill the entire display region available.",
                "To measure <br>video playback</br> performance, we used a video benchmark that consisted of playing a 34.75s MPEG-1 video clip containing a mix of news and entertainment programming at full-screen resolution.",
                "The video clip is 5.11 MB and consists of 834 352x240 pixel frames with an ideal frame rate of 24 frames/sec.",
                "We measured video performance using slow-motion benchmarking by monitoring resulting packet traffic at two playback rates, 1 frames/second (fps) and 24 fps, and comparing the results to determine playback delays and frame drops that occur at 24 fps to measure overall video quality [13].",
                "For example, 100% quality means that all video frames were played at real-time speed.",
                "On the other hand, 50% quality could mean that half the video data was dropped, or that the clip took twice as long to play even though all of the video data was displayed.",
                "To run the video benchmark, we used Windows Media Player 9 for Windows-based thin-client servers, MPlayer 1.0 pre 6 for X-based thin-client servers, and Windows Media Player 9 Mobile and 10 Mobile for the native video players running locally on the X5 and X51v PDAs, respectively.",
                "In all cases, the video player used was sized to fill the entire display region available. 4.3 Measurements Figures 3 and 4 show the results of running the web brows148 0 1 10 100 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL Latency(s) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 3: Browsing Benchmark: Average Page Latency ing benchmark.",
                "For each platform, we show results for up to four different configurations, two on the X5 and two on the X51v, depending on whether each configuration was supported.",
                "However, not all platforms could support all configurations.",
                "The local browser only runs at the display resolution of the PDA, 480×680 or less for the X51v and the X5.",
                "RDP only runs at 640×480.",
                "Neither platform could support 1024×768 display resolution.",
                "ICA only ran on the X5 and could not run on the X51v because it did not work on Windows Mobile 5.",
                "Figure 3 shows the average latency per web page for each platform. pTHINC provides the lowest average web browsing latency on both PDAs.",
                "On the X5, pTHINC performs up to 70 times better than other thin-client systems and 8 times better than the local browser.",
                "On the X51v, pTHINC performs up to 80 times better than other thin-client systems and 7 times better than the native browser.",
                "In fact, all of the thin clients except VNC outperform the local PDA browser, demonstrating the performance benefits of the thin-client approach.",
                "Usability studies have shown that web pages should take less than one second to download for the user to experience an uninterrupted web browsing experience [14].",
                "The measurements show that only the thin clients deliver subsecond web page latencies.",
                "In contrast, the local browser requires more than 3 seconds on average per web page.",
                "The local browser performs worse since it needs to run a more limited web browser to process the HTML, JavaScript, and do all the rendering using the limited capabilities of the PDA.",
                "The thin clients can take advantage of faster server hardware and a highly tuned web browser to process the web content much faster.",
                "Figure 3 shows that RDP is the next fastest platform after pTHINC.",
                "However, RDP is only able to run at a fixed resolution of 640×480 and 8-bit color depth.",
                "Furthermore, RDP also clips the display to the size of the PDA screen so that it does not need to send updates that are not visible on the PDA screen.",
                "This provides a performance benefit assuming the remaining web content is not viewed, but degrades performance when a user scrolls around the display to view other web content.",
                "RDP achieves its performance with significantly lower display quality compared to the other thin clients and with additional display clipping not used by other systems.",
                "As a result, RDP performance alone does not provide a complete comparison with the other platforms.",
                "In contrast, pTHINC provides the fastest performance while at the same time providing equal or better display quality than the other systems. 0 1 10 100 1000 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL DataSize(KB) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 4: Browsing Benchmark: Average Page Data Transferred Since VNC and ICA provide similar display quality to pTHINC, these systems provide a more fair comparison of different thin-client approaches.",
                "ICA performs worse in part because it uses higher-level display primitives that require additional client processing costs.",
                "VNC performs worse in part because it loses display data due to its client-pull delivery mechanism and because of the client processing costs in decompressing raw pixel primitives.",
                "In both cases, their performance was limited in part because their PDA clients were unable to keep up with the rate at which web pages were being displayed.",
                "Figure 3 also shows measurements for those thin clients that support resizing the display to fit the PDA screen, namely ICA and pTHINC.",
                "Resizing requires additional processing, which results in slower average web page latencies.",
                "The measurements show that the additional delay incurred by ICA when resizing versus not resizing is much more substantial than for pTHINC.",
                "ICA performs resizing on the slower PDA client.",
                "In contrast, pTHINC leverage the more powerful server to do resizing, reducing the performance difference between resizing and not resizing.",
                "Unlike ICA, pTHINC is able to provide subsecond web page download latencies in both cases.",
                "Figure 4 shows the data transferred in KB per page when running the slow-motion version of the tests.",
                "All of the platforms have modest data transfer requirements of roughly 100 KB per page or less.",
                "This is well within the bandwidth capacity of Wi-Fi networks.",
                "The measurements show that the local browser does not transfer the least amount of data.",
                "This is surprising as HTML is often considered to be a very compact representation of content.",
                "Instead, RDP is the most bandwidth efficient platform, largely as a result of using only 8-bit color depth and screen clipping so that it does not transfer the entire web page to the client. pTHINC overall has the largest data requirements, slightly more than VNC.",
                "This is largely a result of the current pTHINC prototypes lack of native support for 16-bit color data in the wire protocol.",
                "However, this result also highlights pTHINCs performance as it is faster than all other systems even while transferring more data.",
                "Furthermore, as newer PDA models support full 24-bit color, these results indicate that pTHINC will continue to provide good web browsing performance.",
                "Since display usability and quality are as important as performance, Figures 5 to 8 compare screenshots of the different thin clients when displaying a web page, in this case from the popular BBC news website.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode 149 Figure 5: Browser Screenshot: RDP 640x480 Figure 6: Browser Screenshot: VNC 1024x768 Figure 7: Browser Screenshot: ICA Resized 1024x768 Figure 8: Browser Screenshot: pTHINC Resized 1024x768 using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "While the screenshots lack the visual fidelity of the actual device display, several observations can be made.",
                "Figure 5 shows that RDP does not support fullscreen mode and wastes lots of screen space for controls and UI elements, requiring the user to scroll around in order to access the full contents of the web browsing session.",
                "Figure 6 shows that VNC makes better use of the screen space and provides better display quality, but still forces the user to scroll around to view the web page due to its lack of resizing support.",
                "Figure 7 shows ICAs ability to display the full web page given its resizing support, but that its lack of landscape capability and poorer resize algorithm significantly compromise display quality.",
                "In contrast, Figure 8 shows pTHINC using resizing to provide a high quality fullscreen display of the full width of the web page. pTHINC maximizes the entire viewing region by moving all controls to the PDA buttons.",
                "In addition, pTHINC leverages the server computational power to use a high quality resizing algorithm to resize the display to fit the PDA screen without significant overhead.",
                "Figures 9 and 10 show the results of running the <br>video playback</br> benchmark.",
                "For each platform except ICA, we show results for an X5 and X51v configuration.",
                "ICA could not run on the X51v as noted earlier.",
                "The measurements were done using settings that reflected the environment a user would have to access a web session from both a desktop computer and a PDA.",
                "As such, a 1024×768 server display resolution was used whenever possible and the video was shown at fullscreen.",
                "RDP was limited to 640×480 display resolution as noted earlier.",
                "Since viewing the entire video display is the only really usable option, we resized the display to fit the PDA screen for those platforms that supported this feature, namely ICA and pTHINC.",
                "Figure 9 shows the video quality for each platform. pTHINC is the only thin client able to provide perfect <br>video playback</br> quality, similar to the native PDA video player.",
                "All of the other thin clients deliver very poor video quality.",
                "With the exception of RDP on the X51v which provided unacceptable 35% video quality, none of the other systems were even able to achieve 10% video quality.",
                "VNC and ICA have the worst quality at 8% on the X5 device. pTHINCs native video support enables superior video performance, while other thin clients suffer from their inability to distinguish video from normal display updates.",
                "They attempt to apply ineffective and expensive compression algorithms on the video data and are unable to keep up with the stream of updates generated, resulting in dropped frames or long playback times.",
                "VNC suffers further from its client-pull update model because video frames are generated faster than the rate at which the client can process and send requests to the server to obtain the next display update.",
                "Figure 10 shows the total data transferred during 150 0% 20% 40% 60% 80% 100% pTHINCICAVNCRDPLOCAL VideoQuality Platform Axim X5 Axim X51v Figure 9: Video Benchmark: Fullscreen Video Quality 0 1 10 100 pTHINCICAVNCRDPLOCAL VideoDataSize(MB) Platform Axim X5 Axim X51v Figure 10: Video Benchmark: Fullscreen Video Data <br>video playback</br> for each system.",
                "The native player is the most bandwidth efficient platform, sending less than 6 MB of data, which corresponds to about 1.2 Mbps of bandwidth. pTHINCs 100% video quality requires about 25 MB of data which corresponds to a bandwidth usage of less than 6 Mbps.",
                "While the other thin clients send less data than THINC, they do so because they are dropping video data, resulting in degraded video quality.",
                "Figures 11 to 14 compare screenshots of the different thin clients when displaying the video clip.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "Figures 11 and 12 show that RDP and VNC are unable to display the entire video frame on the PDA screen.",
                "RDP wastes screen space for UI elements and VNC only shows the top corner of the video frame on the screen.",
                "Figure 13 shows that ICA provides resizing to display the entire video frame, but did not proportionally resize the video data, resulting in strange display artifacts.",
                "In contrast, Figure 14 shows pTHINC using resizing to provide a high quality fullscreen display of the entire video frame. pTHINC provides visually more appealing video display than RDP, VNC, or ICA. 5.",
                "RELATED WORK Several studies have examined the web browsing performance of thin-client computing [13, 19, 10].",
                "The ability for thin clients to improve web browsing performance on wireless PDAs was first quantitatively demonstrated in a previous study by one of the authors [10].",
                "This study demonstrated that thin clients can provide both faster web browsing performance and greater web browsing functionality.",
                "The study considered a wide range of web content including content from medical information systems.",
                "Our work builds on this previous study and consider important issues such as how usable existing thin clients are in PDA environments, the trade-offs between thin-client usability and performance, performance across different PDA devices, and the performance of thin clients on common web-related applications such as video.",
                "Many thin clients have been developed and some have PDA clients, including Microsofts Remote Desktop [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5], and Tarantella [18].",
                "These systems were first designed for desktop computing and retrofitted for PDAs.",
                "Unlike pTHINC, they do not address key system architecture and usability issues important for PDAs.",
                "This limits their display quality, system performance, available screen space, and overall usability on PDAs. pTHINC builds on previous work by two of the authors on THINC [1], extending the server architecture and introducing a client interface and usage model to efficiently support PDA devices for mobile web applications.",
                "Other approaches to improve the performance of mobile wireless web browsing have focused on using transcoding and caching proxies in conjunction with the fat client model [11, 9, 4, 8].",
                "They work by pushing functionality to external proxies, and using specialized browsing applications on the PDA device that communicate with the proxy.",
                "Our thinclient approach differs fundamentally from these fat-client approaches by pushing all web browser logic to the server, leveraging existing investments in desktop web browsers and helper applications to work seamlessly with production systems without any additional proxy configuration or web browser modifications.",
                "With the emergence of web browsing on small display devices, web sites have been redesigned using mechanisms like WAP and specialized native web browsers have been developed to tailor the needs of these devices.",
                "Recently, Opera has developed the Opera Mini [15] web browser, which uses an approach similar to the thin-client model to provide access across a number of mobile devices that would normally be incapable of running a web browser.",
                "Instead of requiring the device to process web pages, it uses a remote server to pre-process the page before sending it to the phone. 6.",
                "CONCLUSIONS We have introduced pTHINC, a thin-client architecture for wireless PDAs. pTHINC provides key architectural and usability mechanisms such as server-side screen resizing, clientside screen rotation using simple copy techniques, YUV video support, and maximizing screen space for display updates and leveraging existing PDA control buttons for UI elements. pTHINC transparently supports traditional desktop browsers and their helper applications on PDA devices and desktop machines, providing mobile users with ubiquitous access to a consistent, personalized, and full-featured web environment across heterogeneous devices.",
                "We have implemented pTHINC and measured its performance on web applications compared to existing thin-client systems and native web applications.",
                "Our results on multiple mobile wireless devices demonstrate that pTHINC delivers web browsing performance up to 80 times better than existing thin-client systems, and 8 times better than a native PDA browser.",
                "In addition, pTHINC is the only PDA thin client 151 Figure 11: Video Screenshot: RDP 640x480 Figure 12: Video Screenshot: VNC 1024x768 Figure 13: Video Screenshot: ICA Resized 1024x768 Figure 14: Video Screenshot: pTHINC Resized 1024x768 that transparently provides full-screen, full frame rate <br>video playback</br>, making web sites with multimedia content accessible to mobile web users. 7.",
                "ACKNOWLEDGEMENTS This work was supported in part by NSF ITR grants CCR0219943 and CNS-0426623, and an IBM SUR Award. 8.",
                "REFERENCES [1] R. Baratto, L. Kim, and J. Nieh.",
                "THINC: A Virtual Display Architecture for Thin-Client Computing.",
                "In Proceedings of the 20th ACM Symposium on Operating Systems Principles (SOSP), Oct. 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius, and A. Muir.",
                "Microsoft Windows NT Server 4.0, Terminal Server Edition: Technical Reference.",
                "Microsoft Press, Redmond, WA, 1999. [4] A.",
                "Fox, I. Goldberg, S. D. Gribble, and D. C. Lee.",
                "Experience With Top Gun Wingman: A Proxy-Based Graphical Web Browser for the 3Com PalmPilot.",
                "In Proceedings of Middleware 98, Lake District, England, September 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Health Insurance Portability and Accountability Act. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench version 1.5. http: //etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi.",
                "On proxy agents, mobility, and web access.",
                "Mobile Networks and Applications, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon, and A. Ortega.",
                "Design and Implementation of a Soft Caching Proxy.",
                "Computer Networks and ISDN Systems, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana, and S. Varshneya.",
                "Improving Web Browsing on Wireless PDAs Using Thin-Client Computing.",
                "In Proceedings of the 13th International World Wide Web Conference (WWW), May 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham, and P. Shenoy.",
                "TranSquid: Transcoding and caching proxy for heterogenous ecommerce environments.",
                "In Proceedings of the 12th IEEE Workshop on Research Issues in Data Engineering (RIDE 02), Feb. 2002. [12] .NET VNC Viewer for PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang, and N. Novik.",
                "Measuring Thin-Client Performance Using Slow-Motion Benchmarking.",
                "ACM Trans.",
                "Computer Systems, 21(1):87-115, Feb. 2003. [14] J. Nielsen.",
                "Designing Web Usability.",
                "New Riders Publishing, Indianapolis, IN, 2000. [15] Opera Mini Browser. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood, and A. Hopper.",
                "Virtual Network Computing.",
                "IEEE Internet Computing, 2(1), Jan./Feb. 1998. [17] R. W. Scheifler and J. Gettys.",
                "The X Window System.",
                "ACM Trans.",
                "Gr., 5(2):79-106, Apr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla, and M. Sajjadpour.",
                "Web Browsing Performance of Wireless Thin-Client Computing.",
                "In Proceedings of the 12th International World Wide Web Conference (WWW), May 2003. 152"
            ],
            "original_annotated_samples": [
                "Our results compared to local PDA web browsers and other thin-client approaches demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as <br>video playback</br>.",
                "Our experimental results demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as <br>video playback</br>.",
                "Windows Mobile provides native API mechanisms for PDA applications to rotate their UI on the fly, but these mechanisms deliver poor performance and display quality as the rotation is performed naively and is not completely accurate. 3.2 <br>video playback</br> Video has gradually become an integral part of the World Wide Web, and its presence will only continue to increase.",
                "To allow applications to provide efficient <br>video playback</br>, interfaces have been created in display systems that allow video device drivers to expose their hardware capabilities back to the applications. pTHINC takes advantage of these interfaces and its virtual device driver approach to provide a virtual bridge between the remote client and its hardware and the applications, and transparently support <br>video playback</br>.",
                "As a result, pTHINC is able to provide fullscreen <br>video playback</br> without any performance hits."
            ],
            "translated_annotated_samples": [
                "Nuestros resultados comparados con los navegadores web PDA locales y otros enfoques de cliente ligero demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero PDA que soporta de manera efectiva aplicaciones de ayuda del navegador cruciales como la <br>reproducción de video</br>.",
                "Nuestros resultados experimentales demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero de PDA que soporta de manera efectiva aplicaciones esenciales de ayuda para el navegador, como la <br>reproducción de video</br>.",
                "Windows Mobile proporciona mecanismos de API nativos para que las aplicaciones de PDA puedan rotar su interfaz de usuario sobre la marcha, pero estos mecanismos ofrecen un rendimiento deficiente y una calidad de visualización baja, ya que la rotación se realiza de manera ingenua y no es completamente precisa. 3.2 Reproducción de video El video se ha convertido gradualmente en una parte integral de la World Wide Web, y su presencia solo seguirá aumentando.",
                "Para permitir que las aplicaciones proporcionen una <br>reproducción de video</br> eficiente, se han creado interfaces en los sistemas de visualización que permiten a los controladores de dispositivos de video exponer sus capacidades de hardware a las aplicaciones. pTHINC aprovecha estas interfaces y su enfoque de controlador de dispositivo virtual para proporcionar un puente virtual entre el cliente remoto y su hardware y las aplicaciones, y admitir de manera transparente la <br>reproducción de video</br>.",
                "Como resultado, pTHINC puede proporcionar <br>reproducción de video</br> a pantalla completa sin afectar el rendimiento."
            ],
            "translated_text": "pTHINC: Una arquitectura de cliente ligero para la web inalámbrica móvil Joeng Kim, Ricardo A. Baratto y Jason Nieh Departamento de Ciencias de la Computación Universidad de Columbia, Nueva York, NY, EE. UU. {jk2438, ricardo, nieh}@cs.columbia.edu RESUMEN Aunque las aplicaciones web están ganando popularidad en las PDAs inalámbricas móviles, los navegadores web en estos sistemas pueden ser bastante lentos y a menudo carecen de funcionalidad adecuada para acceder a muchos sitios web. Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y movilidad fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la resolución de pantalla disponible para la visualización de aplicaciones. Hemos implementado pTHINC en Windows Mobile y evaluado su rendimiento en dispositivos móviles inalámbricos. Nuestros resultados comparados con los navegadores web PDA locales y otros enfoques de cliente ligero demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero PDA que soporta de manera efectiva aplicaciones de ayuda del navegador cruciales como la <br>reproducción de video</br>. Categorías y Descriptores de Asunto: C.2.4 Comunicación de Computadoras-Redes: Sistemas Distribuidos - cliente/servidor Términos Generales: Diseño, Experimentación, Rendimiento 1. La creciente ubicuidad de las redes inalámbricas y la disminución del costo del hardware están impulsando una proliferación de dispositivos móviles inalámbricos portátiles, tanto como asistentes digitales personales (PDA) inalámbricos independientes y dispositivos populares integrados de PDA/teléfono celular. Estos dispositivos están permitiendo nuevas formas de computación y comunicación móvil. Los proveedores de servicios están aprovechando estos dispositivos para ofrecer acceso web omnipresente, y los usuarios de la web móvil a menudo ya utilizan estos dispositivos para acceder a información habilitada para la web, como noticias, correo electrónico, guías de viaje localizadas y mapas. Es probable que en unos pocos años, la mayoría de los dispositivos que accedan a la web sean móviles. Los usuarios suelen acceder al contenido web ejecutando un navegador web y aplicaciones auxiliares asociadas localmente en la PDA. Aunque existen navegadores web nativos para PDAs, ofrecen un rendimiento deficiente y tienen un conjunto de funciones mucho más pequeño y una funcionalidad más limitada que sus contrapartes de computadoras de escritorio [10]. Como resultado, los navegadores web de PDA a menudo no pueden mostrar el contenido web de sitios web que utilizan tecnologías web más avanzadas para ofrecer una experiencia web más rica. Este problema fundamental surge por dos razones. Primero, debido a que las PDAs tienen un entorno de hardware/software completamente diferente de las computadoras de escritorio tradicionales, las aplicaciones web necesitan ser reescritas y personalizadas para las PDAs si es posible, duplicando los costos de desarrollo. Debido a que el mercado de aplicaciones de escritorio es más grande y maduro, la mayoría del esfuerzo de desarrollo generalmente se destina a las aplicaciones de escritorio, lo que resulta en una mayor funcionalidad y rendimiento que sus contrapartes de PDA. En segundo lugar, las PDAs tienen un entorno con recursos más limitados que las computadoras de escritorio tradicionales para ofrecer un factor de forma más pequeño y una vida útil de la batería más larga. Los navegadores web de escritorio son aplicaciones grandes y complejas que no pueden ejecutarse en una PDA. En cambio, los desarrolladores se ven obligados a reducir significativamente estas navegadores web para ofrecer un navegador web PDA utilizable, lo que limita la funcionalidad del navegador PDA. La computación de cliente ligero proporciona un enfoque alternativo para habilitar el acceso web ubicuo desde dispositivos móviles. Un sistema informático de cliente ligero consiste en un servidor y un cliente que se comunican a través de una red utilizando un protocolo de visualización remota. El protocolo permite que las pantallas gráficas se virtualicen y se sirvan a través de una red a un dispositivo cliente, mientras que la lógica de la aplicación se ejecuta en el servidor. Usando el protocolo de visualización remota, el cliente transmite la entrada del usuario al servidor, y el servidor devuelve actualizaciones de pantalla de las aplicaciones del servidor al cliente. Utilizando un modelo de cliente ligero para dispositivos móviles de mano, las PDAs pueden convertirse en clientes simples sin estado que aprovechan las capacidades del servidor remoto para ejecutar navegadores web y otras aplicaciones auxiliares. El modelo de cliente ligero proporciona varios beneficios importantes para la web inalámbrica móvil. Primero, las aplicaciones web estándar de escritorio pueden utilizarse para entregar contenido web a PDAs sin necesidad de reescribir o adaptar las aplicaciones para ejecutarse en una PDA, lo que reduce los costos de desarrollo y aprovecha las inversiones existentes en software. Segundo, las aplicaciones web complejas pueden ejecutarse en servidores potentes en lugar de ejecutarse en versiones simplificadas en PDAs con recursos más limitados, lo que proporciona una mayor funcionalidad y un mejor rendimiento [10]. Tercero, las aplicaciones web pueden aprovechar servidores con redes más rápidas y mejor conectividad, lo que mejora aún más el rendimiento de la aplicación. En cuarto lugar, las PDAs pueden ser dispositivos aún más simples ya que no necesitan realizar una lógica de aplicación compleja, lo que potencialmente reduce el consumo de energía y extiende la vida útil de la batería. Finalmente, los clientes ligeros PDA pueden ser dispositivos prácticamente sin estado que no necesitan ser respaldados o restaurados, requieren casi ningún mantenimiento o actualizaciones, y no almacenan datos sensibles que puedan perderse o ser robados. Este modelo proporciona una vía viable para que las organizaciones médicas cumplan con las regulaciones de HIPAA mientras incorporan dispositivos móviles en sus operaciones diarias. A pesar de estas posibles ventajas, los clientes ligeros no han podido ofrecer la gama completa de estos beneficios al entregar aplicaciones web a dispositivos móviles portátiles. Los thin clients existentes no fueron diseñados para PDAs y no tienen en cuenta problemas importantes de usabilidad en el contexto de dispositivos de factor de forma pequeño, lo que resulta en dificultades para navegar por el contenido web mostrado. Además, los clientes ligeros existentes son ineficaces para proporcionar movilidad fluida en la mezcla heterogénea de tamaños de pantalla y resoluciones de dispositivos. Si bien los clientes ligeros existentes ya pueden ofrecer un rendimiento más rápido que los navegadores web nativos de PDA al entregar contenido web HTML, no admiten de manera efectiva aplicaciones web auxiliares más intensivas en visualización, como videos multimedia, que cada vez son una parte integral del contenido web disponible. Para aprovechar todo el potencial de la informática de cliente ligero en la provisión de la web inalámbrica móvil en PDAs, hemos desarrollado pTHINC (PDA THin-client InterNet Computing). pTHINC se basa en nuestro trabajo previo en THINC [1] para proporcionar una arquitectura de cliente ligero para dispositivos móviles de mano. pTHINC virtualiza y redimensiona la pantalla en el servidor para entregar de manera eficiente actualizaciones de pantalla de alta fidelidad a una amplia gama de clientes diferentes, tamaños de pantalla y orientaciones de pantalla, incluidos los modos de visualización en vertical y horizontal. Esto permite a pTHINC proporcionar la misma sesión web persistente en diferentes dispositivos de cliente. Por ejemplo, pTHINC puede proporcionar la misma sesión de navegación web adecuadamente escalada para su visualización en una computadora de escritorio y una PDA, de modo que las mismas cookies, marcadores y otros metadatos estén disponibles continuamente en ambas máquinas simultáneamente. El enfoque de visualización virtual de pTHINC aprovecha la información semántica disponible en los comandos de visualización y el hardware de video del cliente para proporcionar mecanismos de visualización remota más eficientes que son cruciales para admitir aplicaciones web más intensivas en visualización. Dada la limitada resolución de pantalla en las PDA, pTHINC maximiza el uso del espacio de pantalla para la visualización remota al trasladar la funcionalidad de control de la pantalla a los botones de control de PDA fácilmente disponibles, mejorando la usabilidad del sistema. Hemos implementado pTHINC en Windows Mobile y demostrado que funciona de manera transparente con las aplicaciones existentes, sistemas de ventanas y sistemas operativos, y no requiere modificar, recompilar o volver a enlazar el software existente. Hemos evaluado cuantitativamente pTHINC frente a navegadores web PDA locales y otros enfoques de cliente ligero en dispositivos Pocket PC. Nuestros resultados experimentales demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero de PDA que soporta de manera efectiva aplicaciones esenciales de ayuda para el navegador, como la <br>reproducción de video</br>. Este documento presenta el diseño e implementación de pTHINC. La sección 2 describe el modelo de uso general y las características de usabilidad de pTHINC. La sección 3 presenta el diseño y la arquitectura del sistema de pTHINC. La sección 4 presenta resultados experimentales que miden el rendimiento de pTHINC en aplicaciones web y lo comparan con navegadores nativos de PDA y otros sistemas de cliente ligero de PDA populares. La sección 5 discute el trabajo relacionado. Finalmente, presentamos algunas observaciones finales. El MODELO DE USO DE pTHINC pTHINC es un sistema de cliente ligero que consiste en una aplicación de visualización de cliente simple que se ejecuta en la PDA y un servidor que se ejecuta en una PC estándar. El servidor aprovecha PCs más potentes para ejecutar navegadores web y otra lógica de aplicaciones. El cliente recibe la entrada del usuario desde el lápiz óptico y el teclado virtual de la PDA y los envía al servidor para pasarlos a las aplicaciones. Las actualizaciones de la pantalla son luego enviadas desde el servidor al cliente para mostrar al usuario. Cuando se inicia el cliente PDA pTHINC, se presenta al usuario una interfaz gráfica simple donde se pueden proporcionar información como la dirección y el puerto del servidor, la información de autenticación del usuario y la configuración de la sesión. pTHINC primero intenta conectarse al servidor y realizar el saludo necesario. Una vez que este proceso haya sido completado, pTHINC presenta al usuario la visualización más reciente de su sesión. Si la sesión no existe, se crea una nueva sesión. Las sesiones existentes pueden continuar sin problemas sin cambios en la configuración de la sesión o del servidor. A diferencia de otros sistemas de cliente ligero, pTHINC proporciona a un usuario un modelo de sesión web persistente en el que un usuario puede iniciar una sesión ejecutando un navegador web y aplicaciones asociadas en el servidor, luego desconectarse de esa sesión y volver a conectarse en cualquier momento. Cuando un usuario se reconecta a la sesión, todas las aplicaciones siguen funcionando desde donde el usuario las dejó, de modo que el usuario puede seguir trabajando como si nunca se hubiera desconectado. La capacidad de desconectarse y reconectarse a una sesión en cualquier momento es un beneficio importante para los usuarios de PDA inalámbricas móviles que pueden tener conectividad de red intermitente. El modelo de sesión web persistente de pTHINCs permite a un usuario reconectarse a una sesión web desde dispositivos distintos al que se inició originalmente la sesión web. Esto proporciona a los usuarios una movilidad fluida entre diferentes dispositivos. Si un usuario pierde su PDA, puede fácilmente usar otra PDA para acceder a su sesión web. Además, pTHINC permite a los usuarios utilizar dispositivos que no son PDA para acceder a sesiones web también. Un usuario puede acceder a la misma sesión web persistente en una PC de escritorio como en una PDA, lo que le permite al usuario utilizar la misma sesión web desde cualquier computadora. El modelo de sesión web persistente de pTHINCs aborda un problema clave encontrado por los usuarios de la web móvil, la falta de un entorno web común en diferentes computadoras. Los navegadores web a menudo almacenan información importante como marcadores, cookies e historial, lo que les permite funcionar de una manera mucho más útil. El problema que ocurre cuando un usuario se mueve entre computadoras es que estos datos, específicos de una instalación de un navegador web, no pueden moverse con el usuario. Además, los navegadores web a menudo necesitan aplicaciones auxiliares para procesar diferentes contenidos multimedia, y esas aplicaciones pueden no estar disponibles de manera consistente en todas las computadoras. pTHINC aborda este problema al permitir que un usuario utilice de forma remota el mismo entorno de navegador web y aplicaciones auxiliares desde cualquier computadora. Como resultado, pTHINC puede proporcionar un entorno de navegación web común y consistente para usuarios móviles en diferentes dispositivos sin requerirles intentar sincronizar repetidamente diferentes entornos de navegación web en múltiples máquinas. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC debe proporcionar mecanismos para admitir diferentes tamaños de pantalla y resoluciones. Con este fin, pTHINC proporciona una función de zoom que permite a un usuario acercar y alejar una pantalla y permite que la pantalla de una sesión web 144 Figura 1: teclas de acceso rápido de pTHINC se redimensione para adaptarse a la pantalla del dispositivo que se está utilizando. Por ejemplo, si el servidor está ejecutando una sesión web a 1024×768 pero el cliente es una PDA con una resolución de pantalla de 640×480, pTHINC redimensionará la pantalla del escritorio para que se ajuste a la pantalla más pequeña de la PDA. pTHINC proporciona al usuario de la PDA la opción de aumentar el tamaño de la pantalla haciendo zoom en diferentes partes de la pantalla. Los usuarios suelen estar familiarizados con el diseño general de los sitios web que visitan con frecuencia, y pueden aprovechar esta función de redimensionamiento para navegar mejor por las páginas web. Por ejemplo, un usuario puede alejarse de la pantalla para ver todo el contenido de la página y navegar por los hipervínculos, luego acercarse a una región de interés para obtener una mejor vista. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC también debe proporcionar mecanismos para admitir diferentes orientaciones de pantalla. En un entorno de escritorio, los usuarios suelen estar acostumbrados a tener las pantallas presentadas en modo horizontal, donde el ancho de la pantalla es mayor que su altura. Sin embargo, en un entorno de PDA, la elección no siempre es obvia. Algunos usuarios pueden preferir tener la pantalla en modo retrato, ya que es más fácil sostener el dispositivo en sus manos, mientras que otros pueden preferir el modo paisaje para minimizar la cantidad de desplazamiento lateral necesario para ver una página web. Para adaptarse a las preferencias de los usuarios de PDA, pTHINC proporciona una función de orientación que le permite rotar la pantalla de forma fluida entre el modo horizontal y vertical. El modo de paisaje es particularmente útil para los usuarios de pTHINC que acceden con frecuencia a sus sesiones web tanto en dispositivos de escritorio como en PDA, proporcionando a esos usuarios el mismo ajuste de paisaje familiar en diferentes dispositivos. Dado que el espacio de pantalla es un recurso relativamente escaso en las PDAs, pTHINC se ejecuta en modo de pantalla completa para maximizar el área de pantalla disponible para mostrar la sesión web. Para poder utilizar toda la pantalla en la PDA y aún así permitir al usuario controlar e interactuar con ella, pTHINC reutiliza los botones de acceso directo típicos que se encuentran en las PDAs para realizar todas las funciones de control disponibles para el usuario. Los botones utilizados por pTHINC no requieren ningún cambio en el entorno del sistema operativo; simplemente son interceptados por la aplicación cliente de pTHINC cuando se presionan. La Figura 1 muestra cómo pTHINC utiliza los botones de acceso directo para proporcionar una navegación sencilla y mejorar la experiencia del usuario en general. Estos botones no son específicos del dispositivo, y el diseño mostrado es común en dispositivos PocketPC ampliamente utilizados. pTHINC proporciona seis accesos directos para apoyar su modelo de uso: • Rotar pantalla: El botón de grabación en el borde izquierdo se utiliza para rotar la pantalla entre modo retrato y modo paisaje cada vez que se presiona el botón. • Alejar: El botón más a la izquierda en la parte inferior delantera se utiliza para alejar la visualización de la sesión web proporcionando una vista general de la sesión web. • Acercar: El segundo botón más a la izquierda en la parte inferior delantera se utiliza para acercar la visualización de la sesión web para ver más claramente el contenido de interés. • Desplazamiento direccional: El botón central en la parte inferior delantera se utiliza para desplazarse alrededor de la visualización utilizando un solo botón de control de una manera que ya es familiar para los usuarios de PDA. Esta función es particularmente útil cuando el usuario ha ampliado una región de la pantalla de tal manera que solo una parte de la pantalla es visible en la pantalla. • Mostrar/Ocultar Teclado: El segundo botón más a la derecha en la parte inferior frontal se utiliza para mostrar un teclado virtual dibujado en la pantalla para dispositivos que no tienen teclado físico. El teclado virtual utiliza mecanismos estándar del sistema operativo de PDA, proporcionando portabilidad entre diferentes entornos de PDA. • Cerrar sesión: El botón más a la derecha en la parte inferior frontal se utiliza para desconectarse de la sesión de pTHINC. pTHINC utiliza la pantalla táctil de la PDA, el lápiz óptico y mecanismos estándar de interfaz de usuario para proporcionar una metáfora de punto y clic de la interfaz de usuario similar a la proporcionada por el ratón en un entorno de computación de escritorio tradicional. pTHINC no utiliza un cursor ya que los entornos de PDA no lo proporcionan. En cambio, un usuario puede usar el lápiz táctil para tocar diferentes secciones de la pantalla táctil y señalar el enfoque de entrada. Un toque único en la pantalla táctil genera un evento de clic de ratón correspondiente. Un doble toque en la pantalla táctil genera un evento de doble clic del ratón correspondiente. pTHINC proporciona emulación de ratón de dos botones al usar el lápiz óptico para presionar la pantalla durante un segundo y generar un clic derecho del ratón. Todas estas acciones son idénticas a la forma en que los usuarios ya interactúan con las aplicaciones de PDA en el entorno común de PocketPC. En la navegación web, los usuarios pueden hacer clic en hipervínculos y enfocarse en cuadros de entrada simplemente tocando el área de interés deseada en la pantalla. A diferencia de los navegadores web PDA locales y otras aplicaciones PDA, pTHINC aprovecha metáforas de interfaz de usuario de escritorio más potentes para permitir a los usuarios manipular múltiples ventanas de aplicación abiertas en lugar de estar limitados a una sola ventana de aplicación en un momento dado. Esto proporciona una mayor flexibilidad de navegación más allá de lo que está actualmente disponible en los dispositivos PDA. Similar a un entorno de escritorio, las ventanas del navegador y otras ventanas de aplicaciones pueden ser movidas al presionar y arrastrar el lápiz óptico de manera similar a un ratón. 3. La arquitectura del sistema pTHINC se basa en la arquitectura de visualización remota THINC para proporcionar un sistema de cliente ligero para PDAs. pTHINC virtualiza la visualización en el servidor aprovechando la capa de abstracción del dispositivo de video, que se encuentra por debajo del servidor de ventanas y por encima del framebuffer. Este es un nivel de dispositivo bien definido y de bajo nivel que depende del dispositivo y expone el hardware de video al sistema de visualización. pTHINC logra esto a través de un controlador de pantalla virtual simple que intercepta comandos de dibujo, los empaqueta y los envía a través de la red. Mientras que otros enfoques de cliente ligero interceptan comandos de visualización en otras capas del subsistema de visualización, el enfoque de virtualización de pantalla de pTHINC proporciona algunos beneficios clave para admitir eficientemente a los clientes de PDA. Por ejemplo, interceptar comandos de visualización en una capa superior entre aplicaciones y el sistema de ventanas, como se hace en X [17], requiere replicar y ejecutar una gran cantidad de funcionalidades en la PDA que tradicionalmente son proporcionadas por el sistema de ventanas de escritorio. Dada la magnitud y complejidad de los sistemas de ventanas tradicionales, intentar replicar esta funcionalidad en el entorno restringido de una PDA habría resultado ser una tarea desafiante, y quizás inviable. Además, las aplicaciones y el sistema de ventanas a menudo requieren una sincronización precisa en su funcionamiento, y imponer una red inalámbrica entre ellos al ejecutar las aplicaciones en el servidor y el sistema de ventanas en el cliente degradaría significativamente el rendimiento. Por otro lado, interceptar en una capa inferior extrayendo píxeles del framebuffer a medida que se renderizan proporciona una solución simple que requiere muy poca funcionalidad en el cliente de PDA, pero también puede resultar en un rendimiento degradado. La razón es que para cuando el servidor de visualización remota intenta enviar actualizaciones de pantalla, ha perdido toda la información semántica que podría haberle ayudado a codificar de manera eficiente, y debe recurrir a utilizar un mecanismo de codificación genérico y costoso en el servidor, así como un mecanismo de decodificación potencialmente costoso en el cliente de PDA limitado. A diferencia de los enfoques de intercepción de alto y bajo nivel, el enfoque de pTHINCs de interceptar en el controlador del dispositivo proporciona un equilibrio efectivo entre la simplicidad del cliente y del servidor, y la capacidad de codificar y decodificar de manera eficiente las actualizaciones de pantalla. Al utilizar un enfoque de visualización virtual de bajo nivel, pTHINC puede codificar de manera eficiente los comandos de visualización de la aplicación utilizando solo un pequeño conjunto de comandos de bajo nivel. En un entorno de PDA, este conjunto de comandos proporciona un componente crucial para mantener la simplicidad del cliente en el entorno de PDA con recursos limitados. Los comandos de visualización se muestran en la Tabla 1 y funcionan de la siguiente manera. COPY instruye al cliente a copiar una región de la pantalla desde su framebuffer local a otra ubicación. Este comando mejora la experiencia del usuario al acelerar el desplazamiento y el movimiento de ventanas opacas sin necesidad de reenviar datos de pantalla desde el servidor. SFILL, PFILL y BITMAP son comandos que pintan una región de tamaño fijo en la pantalla. Son útiles para acelerar la visualización de fondos de ventanas sólidas, patrones de escritorio, fondos de páginas web, dibujo de texto y ciertas operaciones en programas de manipulación de gráficos. SFILL llena una región considerable en la pantalla con un solo color. PFILL replica una baldosa sobre una región de la pantalla. BITMAP realiza un relleno utilizando un mapa de bits de unos y ceros como un estipulado para aplicar un color de primer plano y de fondo. Finalmente, RAW se utiliza para transmitir datos de píxeles no codificados que se mostrarán textualmente en una región de la pantalla. Este comando se invoca como último recurso si el servidor no puede emplear ningún otro comando, y es el único comando que puede ser comprimido para mitigar su impacto en el ancho de banda de la red. pTHINC entrega sus comandos utilizando un mecanismo de actualización de servidor-push no bloqueante, donde tan pronto como se generan actualizaciones de pantalla en el servidor, se envían al cliente. Los clientes no están obligados a solicitar explícitamente actualizaciones de pantalla, minimizando así el impacto que la típica variabilidad de la latencia de la red inalámbrica puede tener en la capacidad de respuesta del sistema. Teniendo en cuenta que los recursos Descripción de Comando COPY Copiar un área de búfer de fotogramas en coordenadas especificadas SFILL Rellenar un área con un valor de color de píxel dado PFILL Azulejar un área con un patrón de píxeles dado BITMAP Rellenar una región usando un patrón de bits RAW Mostrar datos de píxeles en bruto en una ubicación dada Tabla 1: Comandos de visualización del protocolo pTHINC. Las PDAs y las redes inalámbricas limitadas pueden no ser capaces de mantenerse al día con un servidor rápido que genera una gran cantidad de actualizaciones, pTHINC es capaz de fusionar, recortar y descartar actualizaciones automáticamente si se produce pérdida o congestión de red, o si el cliente no puede mantenerse al día con la velocidad de las actualizaciones. Este tipo de comportamiento resulta crucial en un entorno de navegación web, donde por ejemplo, una página puede ser redibujada varias veces mientras se renderiza al vuelo por el navegador. En este caso, la PDA solo recibirá y mostrará el resultado final, que claramente es todo lo que al usuario le interesa ver. pTHINC prioriza la entrega de actualizaciones a la PDA utilizando un programador de actualizaciones preemptivo de Tamaño Restante Más Corto Primero (SRSF). SRSF es análogo a la programación de Tiempo de Procesamiento Restante más Corto, la cual se sabe que es óptima para minimizar el tiempo medio de respuesta en un sistema interactivo. En un entorno de navegación web, los trabajos cortos están asociados con el texto y los componentes básicos de diseño de página, como el fondo de las páginas, que son contenido web crítico para el usuario. Por otro lado, los trabajos grandes suelen ser elementos de embellecimiento de menor prioridad, o, incluso peor, banners y anuncios de página web, los cuales tienen un valor cuestionable para el usuario mientras navega por la página. Usando SRSF, pTHINC puede maximizar la utilización del ancho de banda relativamente escaso disponible en la conexión inalámbrica entre la PDA y el servidor. 3.1 Gestión de la Pantalla Para permitir a los usuarios acceder con la misma facilidad a su navegador web y aplicaciones auxiliares desde una computadora de escritorio en casa como desde una PDA mientras están en movimiento, pTHINC proporciona un mecanismo de redimensionamiento para hacer zoom dentro y fuera de la pantalla de una sesión web. El redimensionamiento de pTHINC es completamente compatible con el servidor, no con el cliente. El servidor vuelve a muestrear las actualizaciones para que se ajusten al área de visualización de las PDAs antes de ser transmitidas por la red. pTHINC utiliza el algoritmo de remuestreo de Fants para redimensionar las actualizaciones de píxeles. Esto proporciona actualizaciones suaves y visualmente agradables con un antialiasing adecuado y solo requiere modestos recursos computacionales. El enfoque de redimensionamiento de pTHINCs tiene varias ventajas. Primero, permite al PDA aprovechar la vastamente superior potencia computacional del servidor para utilizar algoritmos de re-muestreo de alta calidad y producir actualizaciones de mayor calidad para que el PDA las muestre. Segundo, cambiar el tamaño de la pantalla no se traduce en requisitos adicionales de recursos para la PDA, ya que no necesita realizar ningún trabajo adicional. Finalmente, se logra una mejor utilización de la red inalámbrica ya que al reescalar las actualizaciones se reducen sus requisitos de ancho de banda. Para permitir a los usuarios orientar sus pantallas en una PDA y así proporcionar una experiencia visual que se ajuste mejor a las preferencias del usuario y al diseño de páginas web o aplicaciones, pTHINC proporciona un mecanismo de rotación de pantalla para alternar entre los modos de visualización horizontal y vertical. La rotación de pantalla de pTHINC es completamente compatible con el cliente, no con el servidor. pTHINC no recalcula explícitamente la geometría de las actualizaciones de pantalla para realizar la rotación, lo cual sería computacionalmente costoso. En cambio, pTHINC simplemente cambia la forma en que los datos se copian en el framebuffer para cambiar entre los modos de visualización. Cuando está en modo retrato, los datos se copian a lo largo de las filas del framebuffer de izquierda a derecha. Cuando se encuentra en modo horizontal, los datos se copian a lo largo de las columnas del framebuffer de arriba hacia abajo. Estas técnicas muy rápidas y simples reemplazan un conjunto de operaciones de copia por otro y no imponen ningún sobrecosto de rendimiento. pTHINC proporciona su propio mecanismo de rotación para soportar una amplia gama de dispositivos sin imponer requisitos adicionales de funciones en la PDA. Aunque algunos dispositivos PDA más nuevos ofrecen soporte nativo para diferentes orientaciones, este mecanismo no es dinámico y requiere que el usuario rote toda la interfaz de usuario de la PDA antes de iniciar el cliente pTHINC. Windows Mobile proporciona mecanismos de API nativos para que las aplicaciones de PDA puedan rotar su interfaz de usuario sobre la marcha, pero estos mecanismos ofrecen un rendimiento deficiente y una calidad de visualización baja, ya que la rotación se realiza de manera ingenua y no es completamente precisa. 3.2 Reproducción de video El video se ha convertido gradualmente en una parte integral de la World Wide Web, y su presencia solo seguirá aumentando. Los sitios web de hoy en día no solo utilizan gráficos animados y flash para presentar el contenido web de manera atractiva, sino que también utilizan video en streaming para enriquecer la interfaz web. Los usuarios pueden ver noticias pregrabadas y en vivo en CNN, ver los momentos más destacados deportivos en ESPN e incluso buscar a través de una gran colección de videos en Google Video. Para permitir que las aplicaciones proporcionen una <br>reproducción de video</br> eficiente, se han creado interfaces en los sistemas de visualización que permiten a los controladores de dispositivos de video exponer sus capacidades de hardware a las aplicaciones. pTHINC aprovecha estas interfaces y su enfoque de controlador de dispositivo virtual para proporcionar un puente virtual entre el cliente remoto y su hardware y las aplicaciones, y admitir de manera transparente la <br>reproducción de video</br>. Sobre esta arquitectura, pTHINC utiliza el espacio de color YUV para codificar el contenido de video, lo cual proporciona una serie de beneficios. Primero, se ha vuelto cada vez más común que el hardware de video de las PDA admita nativamente YUV y pueda realizar la conversión del espacio de color y el escalado automáticamente. Como resultado, pTHINC puede proporcionar <br>reproducción de video</br> a pantalla completa sin afectar el rendimiento. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "crucial browser helper application": {
            "translated_key": "aplicaciones de ayuda del navegador",
            "is_in_text": true,
            "original_annotated_sentences": [
                "pTHINC: A Thin-Client Architecture for Mobile Wireless Web Joeng Kim, Ricardo A. Baratto, and Jason Nieh Department of Computer Science Columbia University, New York, NY, USA {jk2438, ricardo, nieh}@cs.columbia.edu ABSTRACT Although web applications are gaining popularity on mobile wireless PDAs, web browsers on these systems can be quite slow and often lack adequate functionality to access many web sites.",
                "We have developed pTHINC, a PDA thinclient solution that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide high-fidelity display and seamless mobility across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available screen resolution for application display.",
                "We have implemented pTHINC on Windows Mobile and evaluated its performance on mobile wireless devices.",
                "Our results compared to local PDA web browsers and other thin-client approaches demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports <br>crucial browser helper application</br>s such as video playback.",
                "Categories and Subject Descriptors: C.2.4 ComputerCommunication-Networks: Distributed Systems - client/ server General Terms: Design, Experimentation, Performance 1.",
                "INTRODUCTION The increasing ubiquity of wireless networks and decreasing cost of hardware is fueling a proliferation of mobile wireless handheld devices, both as standalone wireless Personal Digital Assistants (PDA) and popular integrated PDA/cell phone devices.",
                "These devices are enabling new forms of mobile computing and communication.",
                "Service providers are leveraging these devices to deliver pervasive web access, and mobile web users already often use these devices to access web-enabled information such as news, email, and localized travel guides and maps.",
                "It is likely that within a few years, most of the devices accessing the web will be mobile.",
                "Users typically access web content by running a web browser and associated helper applications locally on the PDA.",
                "Although native web browsers exist for PDAs, they deliver subpar performance and have a much smaller feature set and more limited functionality than their desktop computing counterparts [10].",
                "As a result, PDA web browsers are often not able to display web content from web sites that leverage more advanced web technologies to deliver a richer web experience.",
                "This fundamental problem arises for two reasons.",
                "First, because PDAs have a completely different hardware/software environment from traditional desktop computers, web applications need to be rewritten and customized for PDAs if at all possible, duplicating development costs.",
                "Because the desktop application market is larger and more mature, most development effort generally ends up being spent on desktop applications, resulting in greater functionality and performance than their PDA counterparts.",
                "Second, PDAs have a more resource constrained environment than traditional desktop computers to provide a smaller form factor and longer battery life.",
                "Desktop web browsers are large, complex applications that are unable to run on a PDA.",
                "Instead, developers are forced to significantly strip down these web browsers to provide a usable PDA web browser, thereby crippling PDA browser functionality.",
                "Thin-client computing provides an alternative approach for enabling pervasive web access from handheld devices.",
                "A thin-client computing system consists of a server and a client that communicate over a network using a remote display protocol.",
                "The protocol enables graphical displays to be virtualized and served across a network to a client device, while application logic is executed on the server.",
                "Using the remote display protocol, the client transmits user input to the server, and the server returns screen updates of the applications from the server to the client.",
                "Using a thin-client model for mobile handheld devices, PDAs can become simple stateless clients that leverage the remote server capabilities to execute web browsers and other helper applications.",
                "The thin-client model provides several important benefits for mobile wireless web.",
                "First, standard desktop web applications can be used to deliver web content to PDAs without rewriting or adapting applications to execute on a PDA, reducing development costs and leveraging existing software investments.",
                "Second, complex web applications can be executed on powerful servers instead of running stripped down versions on more resource constrained PDAs, providing greater functionality and better performance [10].",
                "Third, web applications can take advantage of servers with faster networks and better connectivity, further boosting application performance.",
                "Fourth, PDAs can be even simpler devices since they do not need to perform complex application logic, potentially reducing energy consumption and extend143 ing battery life.",
                "Finally, PDA thin clients can be essentially stateless appliances that do not need to be backed up or restored, require almost no maintenance or upgrades, and do not store any sensitive data that can be lost or stolen.",
                "This model provides a viable avenue for medical organizations to comply with HIPAA regulations [6] while embracing mobile handhelds in their day to day operations.",
                "Despite these potential advantages, thin clients have been unable to provide the full range of these benefits in delivering web applications to mobile handheld devices.",
                "Existing thin clients were not designed for PDAs and do not account for important usability issues in the context of small form factor devices, resulting in difficulty in navigating displayed web content.",
                "Furthermore, existing thin clients are ineffective at providing seamless mobility across the heterogeneous mix of device display sizes and resolutions.",
                "While existing thin clients can already provide faster performance than native PDA web browsers in delivering HTML web content, they do not effectively support more display-intensive web helper applications such as multimedia video, which is increasingly an integral part of available web content.",
                "To harness the full potential of thin-client computing in providing mobile wireless web on PDAs, we have developed pTHINC (PDA THin-client InterNet Computing). pTHINC builds on our previous work on THINC [1] to provide a thinclient architecture for mobile handheld devices. pTHINC virtualizes and resizes the display on the server to efficiently deliver high-fidelity screen updates to a broad range of different clients, screen sizes, and screen orientations, including both portrait and landscape viewing modes.",
                "This enables pTHINC to provide the same persistent web session across different client devices.",
                "For example, pTHINC can provide the same web browsing session appropriately scaled for display on a desktop computer and a PDA so that the same cookies, bookmarks, and other meta-data are continuously available on both machines simultaneously. pTHINCs virtual display approach leverages semantic information available in display commands, and client-side video hardware to provide more efficient remote display mechanisms that are crucial for supporting more display-intensive web applications.",
                "Given limited display resolution on PDAs, pTHINC maximizes the use of screen real estate for remote display by moving control functionality from the screen to readily available PDA control buttons, improving system usability.",
                "We have implemented pTHINC on Windows Mobile and demonstrated that it works transparently with existing applications, window systems, and operating systems, and does not require modifying, recompiling, or relinking existing software.",
                "We have quantitatively evaluated pTHINC against local PDA web browsers and other thin-client approaches on Pocket PC devices.",
                "Our experimental results demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports <br>crucial browser helper application</br>s such as video playback.",
                "This paper presents the design and implementation of pTHINC.",
                "Section 2 describes the overall usage model and usability characteristics of pTHINC.",
                "Section 3 presents the design and system architecture of pTHINC.",
                "Section 4 presents experimental results measuring the performance of pTHINC on web applications and comparing it against native PDA browsers and other popular PDA thin-client systems.",
                "Section 5 discusses related work.",
                "Finally, we present some concluding remarks. 2.",
                "PTHINC USAGE MODEL pTHINC is a thin-client system that consists of a simple client viewer application that runs on the PDA and a server that runs on a commodity PC.",
                "The server leverages more powerful PCs to to run web browsers and other application logic.",
                "The client takes user input from the PDA stylus and virtual keyboard and sends them to the server to pass to the applications.",
                "Screen updates are then sent back from the server to the client for display to the user.",
                "When the pTHINC PDA client is started, the user is presented with a simple graphical interface where information such as server address and port, user authentication information, and session settings can be provided. pTHINC first attempts to connect to the server and perform the necessary handshaking.",
                "Once this process has been completed, pTHINC presents the user with the most recent display of his session.",
                "If the session does not exist, a new session is created.",
                "Existing sessions can be seamlessly continued without changes in the session setting or server configuration.",
                "Unlike other thin-client systems, pTHINC provides a user with a persistent web session model in which a user can launch a session running a web browser and associated applications at the server, then disconnect from that session and reconnect to it again anytime.",
                "When a user reconnects to the session, all of the applications continue running where the user left off, so that the user can continue working as though he or she never disconnected.",
                "The ability to disconnect and reconnect to a session at anytime is an important benefit for mobile wireless PDA users which may have intermittent network connectivity. pTHINCs persistent web session model enables a user to reconnect to a web session from devices other than the one on which the web session was originally initiated.",
                "This provides users with seamless mobility across different devices.",
                "If a user loses his PDA, he can easily use another PDA to access his web session.",
                "Furthermore, pTHINC allows users to use non-PDA devices to access web sessions as well.",
                "A user can access the same persistent web session on a desktop PC as on a PDA, enabling a user to use the same web session from any computer. pTHINCs persistent web session model addresses a key problem encountered by mobile web users, the lack of a common web environment across computers.",
                "Web browsers often store important information such as bookmarks, cookies, and history, which enable them to function in a much more useful manner.",
                "The problem that occurs when a user moves between computers is that this data, which is specific to a web browser installation, cannot move with the user.",
                "Furthermore, web browsers often need helper applications to process different media content, and those applications may not be consistently available across all computers. pTHINC addresses this problem by enabling a user to remotely use the exact same web browser environment and helper applications from any computer.",
                "As a result, pTHINC can provide a common, consistent web browsing environment for mobile users across different devices without requiring them to attempt to repeatedly synchronize different web browsing environments across multiple machines.",
                "To enable a user to access the same web session on different devices, pTHINC must provide mechanisms to support different display sizes and resolutions.",
                "Toward this end, pTHINC provides a zoom feature that enables a user to zoom in and out of a display and allows the display of a web 144 Figure 1: pTHINC shortcut keys session to be resized to fit the screen of the device being used.",
                "For example, if the server is running a web session at 1024×768 but the client is a PDA with a display resolution of 640×480, pTHINC will resize the desktop display to fit the full display in the smaller screen of the PDA. pTHINC provides the PDA user with the option to increase the size of the display by zooming in to different parts of the display.",
                "Users are often familiar with the general layout of commonly visited websites, and are able to leverage this resizing feature to better navigate through web pages.",
                "For example, a user can zoom out of the display to view the entire page content and navigate hyperlinks, then zoom in to a region of interest for a better view.",
                "To enable a user to access the same web session on different devices, pTHINC must also provide mechanisms to support different display orientations.",
                "In a desktop environment, users are typically accustomed to having displays presented in landscape mode where the screen width is larger than its height.",
                "However, in a PDA environment, the choice is not always obvious.",
                "Some users may prefer having the display in portrait mode, as it is easier to hold the device in their hands, while others may prefer landscape mode in order to minimize the amount of side-scrolling necessary to view a web page.",
                "To accommodate PDA user preferences, pTHINC provides an orientation feature that enables it to seamless rotate the display between landscape and portrait mode.",
                "The landscape mode is particularly useful for pTHINC users who frequently access their web sessions on both desktop and PDA devices, providing those users with the same familiar landscape setting across different devices.",
                "Because screen space is a relatively scarce resource on PDAs, pTHINC runs in fullscreen mode to maximize the screen area available to display the web session.",
                "To be able to use all of the screen on the PDA and still allow the user to control and interact with it, pTHINC reuses the typical shortcut buttons found on PDAs to perform all the control functions available to the user.",
                "The buttons used by pTHINC do not require any OS environment changes; they are simply intercepted by the pTHINC client application when they are pressed.",
                "Figure 1 shows how pTHINC utilizes the shortcut buttons to provide easy navigation and improve the overall user experience.",
                "These buttons are not device specific, and the layout shown is common to widelyused PocketPC devices. pTHINC provides six shortcuts to support its usage model: • Rotate Screen: The record button on the left edge is used to rotate the screen between portrait and landscape mode each time the button is pressed. • Zoom Out: The leftmost button on the bottom front is used to zoom out the display of the web session providing a birds eye view of the web session. • Zoom In: The second leftmost button on the bottom front is used to zoom in the display of the web session to more clearly view content of interest. • Directional Scroll: The middle button on the bottom front is used to scroll around the display using a single control button in a way that is already familiar to PDA users.",
                "This feature is particularly useful when the user has zoomed in to a region of the display such that only part of the display is visible on the screen. • Show/Hide Keyboard: The second rightmost button on the bottom front is used to bring up a virtual keyboard drawn on the screen for devices which have no physical keyboard.",
                "The virtual keyboard uses standard PDA OS mechanisms, providing portability across different PDA environments. • Close Session: The rightmost button on the bottom front is used to disconnect from the pTHINC session. pTHINC uses the PDA touch screen, stylus, and standard user interface mechanisms to provide a user interface pointand-click metaphor similar to that provided by the mouse in a traditional desktop computing environment. pTHINC does not use a cursor since PDA environments do not provide one.",
                "Instead, a user can use the stylus to tap on different sections of the touch screen to indicate input focus.",
                "A single tap on the touch screen generates a corresponding single click mouse event.",
                "A double tap on the touch screen generates a corresponding double click mouse event. pTHINC provides two-button mouse emulation by using the stylus to press down on the screen for one second to generate a right mouse click.",
                "All of these actions are identical to the way users already interact with PDA applications in the common PocketPC environment.",
                "In web browsing, users can click on hyperlinks and focus on input boxes by simply tapping on the desired screen area of interest.",
                "Unlike local PDA web browsers and other PDA applications, pTHINC leverages more powerful desktop user interface metaphors to enable users to manipulate multiple open application windows instead of being limited to a single application window at any given moment.",
                "This provides increased browsing flexibility beyond what is currently available on PDA devices.",
                "Similar to a desktop environment, browser windows and other application windows can be moved around by pressing down and dragging the stylus similar to a mouse. 3.",
                "PTHINC SYSTEM ARCHITECTURE pTHINC builds on the THINC [1] remote display architecture to provide a thin-client system for PDAs. pTHINC virtualizes the display at the server by leveraging the video device abstraction layer, which sits below the window server and above the framebuffer.",
                "This is a well-defined, low-level, device-dependent layer that exposes the video hardware to the display system. pTHINC accomplishes this through a simple virtual display driver that intercepts drawing commands, packetizes, and sends them over the network. 145 While other thin-client approaches intercept display commands at other layers of the display subsystem, pTHINCs display virtualization approach provides some key benefits in efficiently supporting PDA clients.",
                "For example, intercepting display commands at a higher layer between applications and the window system as is done by X [17] requires replicating and running a great deal of functionality on the PDA that is traditionally provided by the desktop window system.",
                "Given both the size and complexity of traditional window systems, attempting to replicate this functionality in the restricted PDA environment would have proven to be a daunting, and perhaps unfeasible task.",
                "Furthermore, applications and the window system often require tight synchronization in their operation and imposing a wireless network between them by running the applications on the server and the window system on the client would significantly degrade performance.",
                "On the other hand, intercepting at a lower layer by extracting pixels out of the framebuffer as they are rendered provides a simple solution that requires very little functionality on the PDA client, but can also result in degraded performance.",
                "The reason is that by the time the remote display server attempts to send screen updates, it has lost all semantic information that may have helped it encode efficiently, and it must resort to using a generic and expensive encoding mechanism on the server, as well as a potentially expensive decoding mechanism on the limited PDA client.",
                "In contrast to both the high and low level interception approaches, pTHINCs approach of intercepting at the device driver provides an effective balance between client and server simplicity, and the ability to efficiently encode and decode screen updates.",
                "By using a low-level virtual display approach, pTHINC can efficiently encode application display commands using only a small set of low-level commands.",
                "In a PDA environment, this set of commands provides a crucial component in maintaining the simplicity of the client in the resourceconstrained PDA environment.",
                "The display commands are shown in Table 1, and work as follows.",
                "COPY instructs the client to copy a region of the screen from its local framebuffer to another location.",
                "This command improves the user experience by accelerating scrolling and opaque window movement without having to resend screen data from the server.",
                "SFILL, PFILL, and BITMAP are commands that paint a fixed-size region on the screen.",
                "They are useful for accelerating the display of solid window backgrounds, desktop patterns, backgrounds of web pages, text drawing, and certain operations in graphics manipulation programs.",
                "SFILL fills a sizable region on the screen with a single color.",
                "PFILL replicates a tile over a screen region.",
                "BITMAP performs a fill using a bitmap of ones and zeros as a stipple to apply a foreground and background color.",
                "Finally, RAW is used to transmit unencoded pixel data to be displayed verbatim on a region of the screen.",
                "This command is invoked as a last resort if the server is unable to employ any other command, and it is the only command that may be compressed to mitigate its impact on network bandwidth. pTHINC delivers its commands using a non-blocking, serverpush update mechanism, where as soon as display updates are generated on the server, they are sent to the client.",
                "Clients are not required to explicitly request display updates, thus minimizing the impact that the typical varying network latency of wireless links may have on the responsiveness of the system.",
                "Keeping in mind that resource Command Description COPY Copy a frame buffer area to specified coordinates SFILL Fill an area with a given pixel color value PFILL Tile an area with a given pixel pattern BITMAP Fill a region using a bit pattern RAW Display raw pixel data at a given location Table 1: pTHINC Protocol Display Commands constrained PDAs and wireless networks may not be able to keep up with a fast server generating a large number of updates, pTHINC is able to coalesce, clip, and discard updates automatically if network loss or congestion occurs, or the client cannot keep up with the rate of updates.",
                "This type of behavior proves crucial in a web browsing environment, where for example, a page may be redrawn multiple times as it is rendered on the fly by the browser.",
                "In this case, the PDA will only receive and render the final result, which clearly is all the user is interesting in seeing. pTHINC prioritizes the delivery of updates to the PDA using a Shortest-Remaining-Size-First (SRSF) preemptive update scheduler.",
                "SRSF is analogous to Shortest-RemainingProcessing-Time scheduling, which is known to be optimal for minimizing mean response time in an interactive system.",
                "In a web browsing environment, short jobs are associated with text and basic page layout components such as the pages background, which are critical web content for the user.",
                "On the other hand, large jobs are often lower priority beautifying elements, or, even worse, web page banners and advertisements, which are of questionable value to the user as he or she is browsing the page.",
                "Using SRSF, pTHINC is able to maximize the utilization of the relatively scarce bandwidth available on the wireless connection between the PDA and the server. 3.1 Display Management To enable users to just as easily access their web browser and helper applications from a desktop computer at home as from a PDA while on the road, pTHINC provides a resize mechanism to zoom in and out of the display of a web session. pTHINC resizing is completely supported by the server, not the client.",
                "The server resamples updates to fit within the PDAs viewport before they are transmitted over the network. pTHINC uses Fants resampling algorithm to resize pixel updates.",
                "This provides smooth, visually pleasing updates with properly antialiasing and has only modest computational requirements. pTHINCs resizing approach has a number of advantages.",
                "First, it allows the PDA to leverage the vastly superior computational power of the server to use high quality resampling algorithms and produce higher quality updates for the PDA to display.",
                "Second, resizing the screen does not translate into additional resource requirements for the PDA, since it does not need to perform any additional work.",
                "Finally, better utilization of the wireless network is attained since rescaling the updates reduces their bandwidth requirements.",
                "To enable users to orient their displays on a PDA to provide a viewing experience that best accommodates user preferences and the layout of web pages or applications, pTHINC provides a display rotation mechanism to switch between landscape and portrait viewing modes. pTHINC display rotation is completely supported by the client, not the server. pTHINC does not explicitly recalculate the ge146 ometry of display updates to perform rotation, which would be computationally expensive.",
                "Instead, pTHINC simply changes the way data is copied into the framebuffer to switch between display modes.",
                "When in portrait mode, data is copied along the rows of the framebuffer from left to right.",
                "When in landscape mode, data is copied along the columns of the framebuffer from top to bottom.",
                "These very fast and simple techniques replace one set of copy operations with another and impose no performance overhead. pTHINC provides its own rotation mechanism to support a wide range of devices without imposing additional feature requirements on the PDA.",
                "Although some newer PDA devices provide native support for different orientations, this mechanism is not dynamic and requires the user to rotate the PDAs entire user interface before starting the pTHINC client.",
                "Windows Mobile provides native API mechanisms for PDA applications to rotate their UI on the fly, but these mechanisms deliver poor performance and display quality as the rotation is performed naively and is not completely accurate. 3.2 Video Playback Video has gradually become an integral part of the World Wide Web, and its presence will only continue to increase.",
                "Web sites today not only use animated graphics and flash to deliver web content in an attractive manner, but also utilize streaming video to enrich the web interface.",
                "Users are able to view pre-recorded and live newscasts on CNN, watch sports highlights on ESPN, and even search through large collection of videos on Google Video.",
                "To allow applications to provide efficient video playback, interfaces have been created in display systems that allow video device drivers to expose their hardware capabilities back to the applications. pTHINC takes advantage of these interfaces and its virtual device driver approach to provide a virtual bridge between the remote client and its hardware and the applications, and transparently support video playback.",
                "On top of this architecture, pTHINC uses the YUV colorspace to encode the video content, which provides a number of benefits.",
                "First, it has become increasingly common for PDA video hardware to natively support YUV and be able to perform the colorspace conversion and scaling automatically.",
                "As a result, pTHINC is able to provide fullscreen video playback without any performance hits.",
                "Second, the use of YUV allows for a more efficient representation of RGB data without loss of quality, by taking advantage of the human eyes ability to better distinguish differences in brightness than in color.",
                "In particular, pTHINC uses the YV12 format, which allows full color RGB data to be encoded using just 12 bits per pixel.",
                "Third, YUV data is produced as one of the last steps of the decoding process of most video codecs, allowing pTHINC to provide video playback in a manner that is format independent.",
                "Finally, even if the PDAs video hardware is unable to accelerate playback, the colorspace conversion process is simple enough that it does not impose unreasonable requirements on the PDA.",
                "A more concrete example of how pTHINC leverages the PDA video hardware to support video playback can be seen in our prototype implementation on the popular Dell Axim X51v PDA, which is equipped with the Intel 2700G multimedia accelerator.",
                "In this case, pTHINC creates an offscreen buffer in video memory and writes and reads from this memory region data on the YV12 format.",
                "When a new video frame arrives, video data is copied from the buffer to Figure 2: Experimental Testbed an overlay surface in video memory, which is independent of the normal surface used for traditional drawing.",
                "As the YV12 data is put onto the overlay, the Intel accelerator automatically performs both colorspace conversion and scaling.",
                "By using the overlay surface, pTHINC has no need to redraw the screen once video playback is over since the overlapped surface is unaffected.",
                "In addition, specific overlay regions can be manipulated by leveraging the video hardware, for example to perform hardware linear interpolation to smooth out the frame and display it fullscreen, and to do automatic rotation when the client runs in landscape mode. 4.",
                "EXPERIMENTAL RESULTS We have implemented a pTHINC prototype that runs the client on widely-used Windows Mobile-based Pocket PC devices and the server on both Windows and Linux operating systems.",
                "To demonstrate its effectiveness in supporting mobile wireless web applications, we have measured its performance on web applications.",
                "We present experimental results on different PDA devices for two popular web applications, browsing web pages and playing video content from the web.",
                "We compared pTHINC against native web applications running locally on the PDA to demonstrate the improvement that pTHINC can provide over the traditional fat-client approach.",
                "We also compared pTHINC against three of the most widely used thin clients that can run on PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] and VNC (Virtual Network Computing) [16].",
                "We follow common practice and refer to Citrix MetaFrameXP and Microsoft Remote Desktop by their respective remote display protocols, ICA (Independent Computing Architecture) and RDP (Remote Desktop Protocol). 4.1 Experimental Testbed We conducted our web experiments using two different wireless Pocket PC PDAs in an isolated Wi-Fi network testbed, as shown in Figure 2.",
                "The testbed consisted of two PDA client devices, a packet monitor, a thin-client server, and a web server.",
                "Except for the PDAs, all of the other machines were IBM Netfinity 4500R servers with dual 933 MHz Intel PIII CPUs and 512 MB RAM and were connected on a switched 100 Mbps FastEthernet network.",
                "The web server used was Apache 1.3.27, the network emulator was NISTNet 2.0.12, and the packet monitor was Ethereal 0.10.9.",
                "The PDA clients connected to the testbed through a 802.11b Lucent Orinoco AP-2000 wireless access point.",
                "All experiments using the wireless network were conducted within ten feet of the access point, so we considered the amount of packet loss to be negligible in our experiments.",
                "Two Pocket PC PDAs were used to provide results across both older, less powerful models and newer higher performance models.",
                "The older model was a Dell Axim X5 with 147 Client 1024×768 640×480 Depth Resize Clip RDP no yes 8-bit no yes VNC yes yes 16-bit no no ICA yes yes 16-bit yes no pTHINC yes yes 24-bit yes no Table 2: Thin-client Testbed Configuration Setting a 400 MHz Intel XScale PXA255 CPU and 64 MB RAM running Windows Mobile 2003 and a Dell TrueMobile 1180 2.4Ghz CompactFlash card for wireless networking.",
                "The newer model was a Dell Axim X51v with a 624 MHz Intel XScale XPA270 CPU and 64 MB RAM running Windows Mobile 5.0 and integrated 802.11b wireless networking.",
                "The X51v has an Intel 2700G multimedia accelerator with 16MB video memory.",
                "Both PDAs are capable of 16-bit color but have different screen sizes and display resolutions.",
                "The X5 has a 3.5 inch diagonal screen with 240×320 resolution.",
                "The X51v has a 3.7 inch diagonal screen with 480×640.",
                "The four thin clients that we used support different levels of display quality as summarized in Table 2.",
                "The RDP client only supports a fixed 640×480 display resolution on the server with 8-bit color depth, while other platforms provide higher levels of display quality.",
                "To provide a fair comparison across all platforms, we conducted our experiments with thin-client sessions configured for two possible resolutions, 1024×768 and 640×480.",
                "Both ICA and VNC were configured to use the native PDA resolution of 16-bit color depth.",
                "The current pTHINC prototype uses 24-bit color directly and the client downsamples updates to the 16-bit color depth available on the PDA.",
                "RDP was configured using only 8-bit color depth since it does not support any better color depth.",
                "Since both pTHINC and ICA provide the ability to view the display resized to fit the screen, we measured both clients with and without the display resized to fit the PDA screen.",
                "Each thin client was tested using landscape rather than portrait mode when available.",
                "All systems run on the X51v could run in landscape mode because the hardware provides a landscape mode feature.",
                "However, the X5 does not provide this functionality.",
                "Only pTHINC directly supports landscape mode, so it was the only system that could run in landscape mode on both the X5 and X51v.",
                "To provide a fair comparison, we also standardized on common hardware and operating systems whenever possible.",
                "All of the systems used the Netfinity server as the thin-client server.",
                "For the two systems designed for Windows servers, ICA and RDP, we ran Windows 2003 Server on the server.",
                "For the other systems which support X-based servers, VNC and pTHINC, we ran the Debian Linux Unstable distribution with the Linux 2.6.10 kernel on the server.",
                "We used the latest thin-client server versions available on each platform at the time of our experiments, namely Citrix MetaFrame XP Server for Windows Feature Release 3, Microsoft Remote Desktop built into Windows XP and Windows 2003 using RDP 5.2, and VNC 4.0. 4.2 Application Benchmarks We used two web application benchmarks for our experiments based on two common application scenarios, browsing web pages and playing video content from the web.",
                "Since many thin-client systems including two of the ones tested are closed and proprietary, we measured their performance in a noninvasive manner by capturing network traffic with a packet monitor and using a variant of slow-motion benchmarking [13] previously developed to measure thin-client performance in PDA environments [10].",
                "This measurement methodology accounts for both the display decoupling that can occur between client and server in thin-client systems as well as client processing time, which may be significant in the case of PDAs.",
                "To measure web browsing performance, we used a web browsing benchmark based on the Web Text Page Load Test from the Ziff-Davis i-Bench benchmark suite [7].",
                "The benchmark consists of JavaScript controlled load of 55 pages from the web server.",
                "The pages contain both text and graphics with pages varying in size.",
                "The graphics are embedded images in GIF and JPEG formats.",
                "The original i-Bench benchmark was modified for slow-motion benchmarking by introducing delays of several seconds between the pages using JavaScript.",
                "Then two tests were run, one where delays where added between each page, and one where pages where loaded continuously without waiting for them to be displayed on the client.",
                "In the first test, delays were sufficiently adjusted in each case to ensure that each page could be received and displayed on the client completely without temporal overlap in transferring the data belonging to two consecutive pages.",
                "We used the packet monitor to record the packet traffic for each run of the benchmark, then used the timestamps of the first and last packet in the trace to obtain our latency measures [10].",
                "The packet monitor also recorded the amount of data transmitted between the client and the server.",
                "The ratio between the data traffic in the two tests yields a scale factor.",
                "This scale factor shows the loss of data between the server and the client due to inability of the client to process the data quickly enough.",
                "The product of the scale factor with the latency measurement produces the true latency accounting for client processing time.",
                "To run the web browsing benchmark, we used Mozilla Firefox 1.0.4 running on the thin-client server for the thin clients, and Windows Internet Explorer (IE) Mobile for 2003 and Mobile for 5.0 for the native browsers on the X5 and X51v PDAs, respectively.",
                "In all cases, the web browser used was sized to fill the entire display region available.",
                "To measure video playback performance, we used a video benchmark that consisted of playing a 34.75s MPEG-1 video clip containing a mix of news and entertainment programming at full-screen resolution.",
                "The video clip is 5.11 MB and consists of 834 352x240 pixel frames with an ideal frame rate of 24 frames/sec.",
                "We measured video performance using slow-motion benchmarking by monitoring resulting packet traffic at two playback rates, 1 frames/second (fps) and 24 fps, and comparing the results to determine playback delays and frame drops that occur at 24 fps to measure overall video quality [13].",
                "For example, 100% quality means that all video frames were played at real-time speed.",
                "On the other hand, 50% quality could mean that half the video data was dropped, or that the clip took twice as long to play even though all of the video data was displayed.",
                "To run the video benchmark, we used Windows Media Player 9 for Windows-based thin-client servers, MPlayer 1.0 pre 6 for X-based thin-client servers, and Windows Media Player 9 Mobile and 10 Mobile for the native video players running locally on the X5 and X51v PDAs, respectively.",
                "In all cases, the video player used was sized to fill the entire display region available. 4.3 Measurements Figures 3 and 4 show the results of running the web brows148 0 1 10 100 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL Latency(s) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 3: Browsing Benchmark: Average Page Latency ing benchmark.",
                "For each platform, we show results for up to four different configurations, two on the X5 and two on the X51v, depending on whether each configuration was supported.",
                "However, not all platforms could support all configurations.",
                "The local browser only runs at the display resolution of the PDA, 480×680 or less for the X51v and the X5.",
                "RDP only runs at 640×480.",
                "Neither platform could support 1024×768 display resolution.",
                "ICA only ran on the X5 and could not run on the X51v because it did not work on Windows Mobile 5.",
                "Figure 3 shows the average latency per web page for each platform. pTHINC provides the lowest average web browsing latency on both PDAs.",
                "On the X5, pTHINC performs up to 70 times better than other thin-client systems and 8 times better than the local browser.",
                "On the X51v, pTHINC performs up to 80 times better than other thin-client systems and 7 times better than the native browser.",
                "In fact, all of the thin clients except VNC outperform the local PDA browser, demonstrating the performance benefits of the thin-client approach.",
                "Usability studies have shown that web pages should take less than one second to download for the user to experience an uninterrupted web browsing experience [14].",
                "The measurements show that only the thin clients deliver subsecond web page latencies.",
                "In contrast, the local browser requires more than 3 seconds on average per web page.",
                "The local browser performs worse since it needs to run a more limited web browser to process the HTML, JavaScript, and do all the rendering using the limited capabilities of the PDA.",
                "The thin clients can take advantage of faster server hardware and a highly tuned web browser to process the web content much faster.",
                "Figure 3 shows that RDP is the next fastest platform after pTHINC.",
                "However, RDP is only able to run at a fixed resolution of 640×480 and 8-bit color depth.",
                "Furthermore, RDP also clips the display to the size of the PDA screen so that it does not need to send updates that are not visible on the PDA screen.",
                "This provides a performance benefit assuming the remaining web content is not viewed, but degrades performance when a user scrolls around the display to view other web content.",
                "RDP achieves its performance with significantly lower display quality compared to the other thin clients and with additional display clipping not used by other systems.",
                "As a result, RDP performance alone does not provide a complete comparison with the other platforms.",
                "In contrast, pTHINC provides the fastest performance while at the same time providing equal or better display quality than the other systems. 0 1 10 100 1000 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL DataSize(KB) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 4: Browsing Benchmark: Average Page Data Transferred Since VNC and ICA provide similar display quality to pTHINC, these systems provide a more fair comparison of different thin-client approaches.",
                "ICA performs worse in part because it uses higher-level display primitives that require additional client processing costs.",
                "VNC performs worse in part because it loses display data due to its client-pull delivery mechanism and because of the client processing costs in decompressing raw pixel primitives.",
                "In both cases, their performance was limited in part because their PDA clients were unable to keep up with the rate at which web pages were being displayed.",
                "Figure 3 also shows measurements for those thin clients that support resizing the display to fit the PDA screen, namely ICA and pTHINC.",
                "Resizing requires additional processing, which results in slower average web page latencies.",
                "The measurements show that the additional delay incurred by ICA when resizing versus not resizing is much more substantial than for pTHINC.",
                "ICA performs resizing on the slower PDA client.",
                "In contrast, pTHINC leverage the more powerful server to do resizing, reducing the performance difference between resizing and not resizing.",
                "Unlike ICA, pTHINC is able to provide subsecond web page download latencies in both cases.",
                "Figure 4 shows the data transferred in KB per page when running the slow-motion version of the tests.",
                "All of the platforms have modest data transfer requirements of roughly 100 KB per page or less.",
                "This is well within the bandwidth capacity of Wi-Fi networks.",
                "The measurements show that the local browser does not transfer the least amount of data.",
                "This is surprising as HTML is often considered to be a very compact representation of content.",
                "Instead, RDP is the most bandwidth efficient platform, largely as a result of using only 8-bit color depth and screen clipping so that it does not transfer the entire web page to the client. pTHINC overall has the largest data requirements, slightly more than VNC.",
                "This is largely a result of the current pTHINC prototypes lack of native support for 16-bit color data in the wire protocol.",
                "However, this result also highlights pTHINCs performance as it is faster than all other systems even while transferring more data.",
                "Furthermore, as newer PDA models support full 24-bit color, these results indicate that pTHINC will continue to provide good web browsing performance.",
                "Since display usability and quality are as important as performance, Figures 5 to 8 compare screenshots of the different thin clients when displaying a web page, in this case from the popular BBC news website.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode 149 Figure 5: Browser Screenshot: RDP 640x480 Figure 6: Browser Screenshot: VNC 1024x768 Figure 7: Browser Screenshot: ICA Resized 1024x768 Figure 8: Browser Screenshot: pTHINC Resized 1024x768 using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "While the screenshots lack the visual fidelity of the actual device display, several observations can be made.",
                "Figure 5 shows that RDP does not support fullscreen mode and wastes lots of screen space for controls and UI elements, requiring the user to scroll around in order to access the full contents of the web browsing session.",
                "Figure 6 shows that VNC makes better use of the screen space and provides better display quality, but still forces the user to scroll around to view the web page due to its lack of resizing support.",
                "Figure 7 shows ICAs ability to display the full web page given its resizing support, but that its lack of landscape capability and poorer resize algorithm significantly compromise display quality.",
                "In contrast, Figure 8 shows pTHINC using resizing to provide a high quality fullscreen display of the full width of the web page. pTHINC maximizes the entire viewing region by moving all controls to the PDA buttons.",
                "In addition, pTHINC leverages the server computational power to use a high quality resizing algorithm to resize the display to fit the PDA screen without significant overhead.",
                "Figures 9 and 10 show the results of running the video playback benchmark.",
                "For each platform except ICA, we show results for an X5 and X51v configuration.",
                "ICA could not run on the X51v as noted earlier.",
                "The measurements were done using settings that reflected the environment a user would have to access a web session from both a desktop computer and a PDA.",
                "As such, a 1024×768 server display resolution was used whenever possible and the video was shown at fullscreen.",
                "RDP was limited to 640×480 display resolution as noted earlier.",
                "Since viewing the entire video display is the only really usable option, we resized the display to fit the PDA screen for those platforms that supported this feature, namely ICA and pTHINC.",
                "Figure 9 shows the video quality for each platform. pTHINC is the only thin client able to provide perfect video playback quality, similar to the native PDA video player.",
                "All of the other thin clients deliver very poor video quality.",
                "With the exception of RDP on the X51v which provided unacceptable 35% video quality, none of the other systems were even able to achieve 10% video quality.",
                "VNC and ICA have the worst quality at 8% on the X5 device. pTHINCs native video support enables superior video performance, while other thin clients suffer from their inability to distinguish video from normal display updates.",
                "They attempt to apply ineffective and expensive compression algorithms on the video data and are unable to keep up with the stream of updates generated, resulting in dropped frames or long playback times.",
                "VNC suffers further from its client-pull update model because video frames are generated faster than the rate at which the client can process and send requests to the server to obtain the next display update.",
                "Figure 10 shows the total data transferred during 150 0% 20% 40% 60% 80% 100% pTHINCICAVNCRDPLOCAL VideoQuality Platform Axim X5 Axim X51v Figure 9: Video Benchmark: Fullscreen Video Quality 0 1 10 100 pTHINCICAVNCRDPLOCAL VideoDataSize(MB) Platform Axim X5 Axim X51v Figure 10: Video Benchmark: Fullscreen Video Data video playback for each system.",
                "The native player is the most bandwidth efficient platform, sending less than 6 MB of data, which corresponds to about 1.2 Mbps of bandwidth. pTHINCs 100% video quality requires about 25 MB of data which corresponds to a bandwidth usage of less than 6 Mbps.",
                "While the other thin clients send less data than THINC, they do so because they are dropping video data, resulting in degraded video quality.",
                "Figures 11 to 14 compare screenshots of the different thin clients when displaying the video clip.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "Figures 11 and 12 show that RDP and VNC are unable to display the entire video frame on the PDA screen.",
                "RDP wastes screen space for UI elements and VNC only shows the top corner of the video frame on the screen.",
                "Figure 13 shows that ICA provides resizing to display the entire video frame, but did not proportionally resize the video data, resulting in strange display artifacts.",
                "In contrast, Figure 14 shows pTHINC using resizing to provide a high quality fullscreen display of the entire video frame. pTHINC provides visually more appealing video display than RDP, VNC, or ICA. 5.",
                "RELATED WORK Several studies have examined the web browsing performance of thin-client computing [13, 19, 10].",
                "The ability for thin clients to improve web browsing performance on wireless PDAs was first quantitatively demonstrated in a previous study by one of the authors [10].",
                "This study demonstrated that thin clients can provide both faster web browsing performance and greater web browsing functionality.",
                "The study considered a wide range of web content including content from medical information systems.",
                "Our work builds on this previous study and consider important issues such as how usable existing thin clients are in PDA environments, the trade-offs between thin-client usability and performance, performance across different PDA devices, and the performance of thin clients on common web-related applications such as video.",
                "Many thin clients have been developed and some have PDA clients, including Microsofts Remote Desktop [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5], and Tarantella [18].",
                "These systems were first designed for desktop computing and retrofitted for PDAs.",
                "Unlike pTHINC, they do not address key system architecture and usability issues important for PDAs.",
                "This limits their display quality, system performance, available screen space, and overall usability on PDAs. pTHINC builds on previous work by two of the authors on THINC [1], extending the server architecture and introducing a client interface and usage model to efficiently support PDA devices for mobile web applications.",
                "Other approaches to improve the performance of mobile wireless web browsing have focused on using transcoding and caching proxies in conjunction with the fat client model [11, 9, 4, 8].",
                "They work by pushing functionality to external proxies, and using specialized browsing applications on the PDA device that communicate with the proxy.",
                "Our thinclient approach differs fundamentally from these fat-client approaches by pushing all web browser logic to the server, leveraging existing investments in desktop web browsers and helper applications to work seamlessly with production systems without any additional proxy configuration or web browser modifications.",
                "With the emergence of web browsing on small display devices, web sites have been redesigned using mechanisms like WAP and specialized native web browsers have been developed to tailor the needs of these devices.",
                "Recently, Opera has developed the Opera Mini [15] web browser, which uses an approach similar to the thin-client model to provide access across a number of mobile devices that would normally be incapable of running a web browser.",
                "Instead of requiring the device to process web pages, it uses a remote server to pre-process the page before sending it to the phone. 6.",
                "CONCLUSIONS We have introduced pTHINC, a thin-client architecture for wireless PDAs. pTHINC provides key architectural and usability mechanisms such as server-side screen resizing, clientside screen rotation using simple copy techniques, YUV video support, and maximizing screen space for display updates and leveraging existing PDA control buttons for UI elements. pTHINC transparently supports traditional desktop browsers and their helper applications on PDA devices and desktop machines, providing mobile users with ubiquitous access to a consistent, personalized, and full-featured web environment across heterogeneous devices.",
                "We have implemented pTHINC and measured its performance on web applications compared to existing thin-client systems and native web applications.",
                "Our results on multiple mobile wireless devices demonstrate that pTHINC delivers web browsing performance up to 80 times better than existing thin-client systems, and 8 times better than a native PDA browser.",
                "In addition, pTHINC is the only PDA thin client 151 Figure 11: Video Screenshot: RDP 640x480 Figure 12: Video Screenshot: VNC 1024x768 Figure 13: Video Screenshot: ICA Resized 1024x768 Figure 14: Video Screenshot: pTHINC Resized 1024x768 that transparently provides full-screen, full frame rate video playback, making web sites with multimedia content accessible to mobile web users. 7.",
                "ACKNOWLEDGEMENTS This work was supported in part by NSF ITR grants CCR0219943 and CNS-0426623, and an IBM SUR Award. 8.",
                "REFERENCES [1] R. Baratto, L. Kim, and J. Nieh.",
                "THINC: A Virtual Display Architecture for Thin-Client Computing.",
                "In Proceedings of the 20th ACM Symposium on Operating Systems Principles (SOSP), Oct. 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius, and A. Muir.",
                "Microsoft Windows NT Server 4.0, Terminal Server Edition: Technical Reference.",
                "Microsoft Press, Redmond, WA, 1999. [4] A.",
                "Fox, I. Goldberg, S. D. Gribble, and D. C. Lee.",
                "Experience With Top Gun Wingman: A Proxy-Based Graphical Web Browser for the 3Com PalmPilot.",
                "In Proceedings of Middleware 98, Lake District, England, September 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Health Insurance Portability and Accountability Act. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench version 1.5. http: //etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi.",
                "On proxy agents, mobility, and web access.",
                "Mobile Networks and Applications, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon, and A. Ortega.",
                "Design and Implementation of a Soft Caching Proxy.",
                "Computer Networks and ISDN Systems, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana, and S. Varshneya.",
                "Improving Web Browsing on Wireless PDAs Using Thin-Client Computing.",
                "In Proceedings of the 13th International World Wide Web Conference (WWW), May 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham, and P. Shenoy.",
                "TranSquid: Transcoding and caching proxy for heterogenous ecommerce environments.",
                "In Proceedings of the 12th IEEE Workshop on Research Issues in Data Engineering (RIDE 02), Feb. 2002. [12] .NET VNC Viewer for PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang, and N. Novik.",
                "Measuring Thin-Client Performance Using Slow-Motion Benchmarking.",
                "ACM Trans.",
                "Computer Systems, 21(1):87-115, Feb. 2003. [14] J. Nielsen.",
                "Designing Web Usability.",
                "New Riders Publishing, Indianapolis, IN, 2000. [15] Opera Mini Browser. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood, and A. Hopper.",
                "Virtual Network Computing.",
                "IEEE Internet Computing, 2(1), Jan./Feb. 1998. [17] R. W. Scheifler and J. Gettys.",
                "The X Window System.",
                "ACM Trans.",
                "Gr., 5(2):79-106, Apr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla, and M. Sajjadpour.",
                "Web Browsing Performance of Wireless Thin-Client Computing.",
                "In Proceedings of the 12th International World Wide Web Conference (WWW), May 2003. 152"
            ],
            "original_annotated_samples": [
                "Our results compared to local PDA web browsers and other thin-client approaches demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports <br>crucial browser helper application</br>s such as video playback.",
                "Our experimental results demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports <br>crucial browser helper application</br>s such as video playback."
            ],
            "translated_annotated_samples": [
                "Nuestros resultados comparados con los navegadores web PDA locales y otros enfoques de cliente ligero demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero PDA que soporta de manera efectiva <br>aplicaciones de ayuda del navegador</br> cruciales como la reproducción de video.",
                "Nuestros resultados experimentales demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero de PDA que soporta de manera efectiva <br>aplicaciones esenciales de ayuda para el navegador</br>, como la reproducción de video."
            ],
            "translated_text": "pTHINC: Una arquitectura de cliente ligero para la web inalámbrica móvil Joeng Kim, Ricardo A. Baratto y Jason Nieh Departamento de Ciencias de la Computación Universidad de Columbia, Nueva York, NY, EE. UU. {jk2438, ricardo, nieh}@cs.columbia.edu RESUMEN Aunque las aplicaciones web están ganando popularidad en las PDAs inalámbricas móviles, los navegadores web en estos sistemas pueden ser bastante lentos y a menudo carecen de funcionalidad adecuada para acceder a muchos sitios web. Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y movilidad fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la resolución de pantalla disponible para la visualización de aplicaciones. Hemos implementado pTHINC en Windows Mobile y evaluado su rendimiento en dispositivos móviles inalámbricos. Nuestros resultados comparados con los navegadores web PDA locales y otros enfoques de cliente ligero demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero PDA que soporta de manera efectiva <br>aplicaciones de ayuda del navegador</br> cruciales como la reproducción de video. Categorías y Descriptores de Asunto: C.2.4 Comunicación de Computadoras-Redes: Sistemas Distribuidos - cliente/servidor Términos Generales: Diseño, Experimentación, Rendimiento 1. La creciente ubicuidad de las redes inalámbricas y la disminución del costo del hardware están impulsando una proliferación de dispositivos móviles inalámbricos portátiles, tanto como asistentes digitales personales (PDA) inalámbricos independientes y dispositivos populares integrados de PDA/teléfono celular. Estos dispositivos están permitiendo nuevas formas de computación y comunicación móvil. Los proveedores de servicios están aprovechando estos dispositivos para ofrecer acceso web omnipresente, y los usuarios de la web móvil a menudo ya utilizan estos dispositivos para acceder a información habilitada para la web, como noticias, correo electrónico, guías de viaje localizadas y mapas. Es probable que en unos pocos años, la mayoría de los dispositivos que accedan a la web sean móviles. Los usuarios suelen acceder al contenido web ejecutando un navegador web y aplicaciones auxiliares asociadas localmente en la PDA. Aunque existen navegadores web nativos para PDAs, ofrecen un rendimiento deficiente y tienen un conjunto de funciones mucho más pequeño y una funcionalidad más limitada que sus contrapartes de computadoras de escritorio [10]. Como resultado, los navegadores web de PDA a menudo no pueden mostrar el contenido web de sitios web que utilizan tecnologías web más avanzadas para ofrecer una experiencia web más rica. Este problema fundamental surge por dos razones. Primero, debido a que las PDAs tienen un entorno de hardware/software completamente diferente de las computadoras de escritorio tradicionales, las aplicaciones web necesitan ser reescritas y personalizadas para las PDAs si es posible, duplicando los costos de desarrollo. Debido a que el mercado de aplicaciones de escritorio es más grande y maduro, la mayoría del esfuerzo de desarrollo generalmente se destina a las aplicaciones de escritorio, lo que resulta en una mayor funcionalidad y rendimiento que sus contrapartes de PDA. En segundo lugar, las PDAs tienen un entorno con recursos más limitados que las computadoras de escritorio tradicionales para ofrecer un factor de forma más pequeño y una vida útil de la batería más larga. Los navegadores web de escritorio son aplicaciones grandes y complejas que no pueden ejecutarse en una PDA. En cambio, los desarrolladores se ven obligados a reducir significativamente estas navegadores web para ofrecer un navegador web PDA utilizable, lo que limita la funcionalidad del navegador PDA. La computación de cliente ligero proporciona un enfoque alternativo para habilitar el acceso web ubicuo desde dispositivos móviles. Un sistema informático de cliente ligero consiste en un servidor y un cliente que se comunican a través de una red utilizando un protocolo de visualización remota. El protocolo permite que las pantallas gráficas se virtualicen y se sirvan a través de una red a un dispositivo cliente, mientras que la lógica de la aplicación se ejecuta en el servidor. Usando el protocolo de visualización remota, el cliente transmite la entrada del usuario al servidor, y el servidor devuelve actualizaciones de pantalla de las aplicaciones del servidor al cliente. Utilizando un modelo de cliente ligero para dispositivos móviles de mano, las PDAs pueden convertirse en clientes simples sin estado que aprovechan las capacidades del servidor remoto para ejecutar navegadores web y otras aplicaciones auxiliares. El modelo de cliente ligero proporciona varios beneficios importantes para la web inalámbrica móvil. Primero, las aplicaciones web estándar de escritorio pueden utilizarse para entregar contenido web a PDAs sin necesidad de reescribir o adaptar las aplicaciones para ejecutarse en una PDA, lo que reduce los costos de desarrollo y aprovecha las inversiones existentes en software. Segundo, las aplicaciones web complejas pueden ejecutarse en servidores potentes en lugar de ejecutarse en versiones simplificadas en PDAs con recursos más limitados, lo que proporciona una mayor funcionalidad y un mejor rendimiento [10]. Tercero, las aplicaciones web pueden aprovechar servidores con redes más rápidas y mejor conectividad, lo que mejora aún más el rendimiento de la aplicación. En cuarto lugar, las PDAs pueden ser dispositivos aún más simples ya que no necesitan realizar una lógica de aplicación compleja, lo que potencialmente reduce el consumo de energía y extiende la vida útil de la batería. Finalmente, los clientes ligeros PDA pueden ser dispositivos prácticamente sin estado que no necesitan ser respaldados o restaurados, requieren casi ningún mantenimiento o actualizaciones, y no almacenan datos sensibles que puedan perderse o ser robados. Este modelo proporciona una vía viable para que las organizaciones médicas cumplan con las regulaciones de HIPAA mientras incorporan dispositivos móviles en sus operaciones diarias. A pesar de estas posibles ventajas, los clientes ligeros no han podido ofrecer la gama completa de estos beneficios al entregar aplicaciones web a dispositivos móviles portátiles. Los thin clients existentes no fueron diseñados para PDAs y no tienen en cuenta problemas importantes de usabilidad en el contexto de dispositivos de factor de forma pequeño, lo que resulta en dificultades para navegar por el contenido web mostrado. Además, los clientes ligeros existentes son ineficaces para proporcionar movilidad fluida en la mezcla heterogénea de tamaños de pantalla y resoluciones de dispositivos. Si bien los clientes ligeros existentes ya pueden ofrecer un rendimiento más rápido que los navegadores web nativos de PDA al entregar contenido web HTML, no admiten de manera efectiva aplicaciones web auxiliares más intensivas en visualización, como videos multimedia, que cada vez son una parte integral del contenido web disponible. Para aprovechar todo el potencial de la informática de cliente ligero en la provisión de la web inalámbrica móvil en PDAs, hemos desarrollado pTHINC (PDA THin-client InterNet Computing). pTHINC se basa en nuestro trabajo previo en THINC [1] para proporcionar una arquitectura de cliente ligero para dispositivos móviles de mano. pTHINC virtualiza y redimensiona la pantalla en el servidor para entregar de manera eficiente actualizaciones de pantalla de alta fidelidad a una amplia gama de clientes diferentes, tamaños de pantalla y orientaciones de pantalla, incluidos los modos de visualización en vertical y horizontal. Esto permite a pTHINC proporcionar la misma sesión web persistente en diferentes dispositivos de cliente. Por ejemplo, pTHINC puede proporcionar la misma sesión de navegación web adecuadamente escalada para su visualización en una computadora de escritorio y una PDA, de modo que las mismas cookies, marcadores y otros metadatos estén disponibles continuamente en ambas máquinas simultáneamente. El enfoque de visualización virtual de pTHINC aprovecha la información semántica disponible en los comandos de visualización y el hardware de video del cliente para proporcionar mecanismos de visualización remota más eficientes que son cruciales para admitir aplicaciones web más intensivas en visualización. Dada la limitada resolución de pantalla en las PDA, pTHINC maximiza el uso del espacio de pantalla para la visualización remota al trasladar la funcionalidad de control de la pantalla a los botones de control de PDA fácilmente disponibles, mejorando la usabilidad del sistema. Hemos implementado pTHINC en Windows Mobile y demostrado que funciona de manera transparente con las aplicaciones existentes, sistemas de ventanas y sistemas operativos, y no requiere modificar, recompilar o volver a enlazar el software existente. Hemos evaluado cuantitativamente pTHINC frente a navegadores web PDA locales y otros enfoques de cliente ligero en dispositivos Pocket PC. Nuestros resultados experimentales demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero de PDA que soporta de manera efectiva <br>aplicaciones esenciales de ayuda para el navegador</br>, como la reproducción de video. Este documento presenta el diseño e implementación de pTHINC. La sección 2 describe el modelo de uso general y las características de usabilidad de pTHINC. La sección 3 presenta el diseño y la arquitectura del sistema de pTHINC. La sección 4 presenta resultados experimentales que miden el rendimiento de pTHINC en aplicaciones web y lo comparan con navegadores nativos de PDA y otros sistemas de cliente ligero de PDA populares. La sección 5 discute el trabajo relacionado. Finalmente, presentamos algunas observaciones finales. El MODELO DE USO DE pTHINC pTHINC es un sistema de cliente ligero que consiste en una aplicación de visualización de cliente simple que se ejecuta en la PDA y un servidor que se ejecuta en una PC estándar. El servidor aprovecha PCs más potentes para ejecutar navegadores web y otra lógica de aplicaciones. El cliente recibe la entrada del usuario desde el lápiz óptico y el teclado virtual de la PDA y los envía al servidor para pasarlos a las aplicaciones. Las actualizaciones de la pantalla son luego enviadas desde el servidor al cliente para mostrar al usuario. Cuando se inicia el cliente PDA pTHINC, se presenta al usuario una interfaz gráfica simple donde se pueden proporcionar información como la dirección y el puerto del servidor, la información de autenticación del usuario y la configuración de la sesión. pTHINC primero intenta conectarse al servidor y realizar el saludo necesario. Una vez que este proceso haya sido completado, pTHINC presenta al usuario la visualización más reciente de su sesión. Si la sesión no existe, se crea una nueva sesión. Las sesiones existentes pueden continuar sin problemas sin cambios en la configuración de la sesión o del servidor. A diferencia de otros sistemas de cliente ligero, pTHINC proporciona a un usuario un modelo de sesión web persistente en el que un usuario puede iniciar una sesión ejecutando un navegador web y aplicaciones asociadas en el servidor, luego desconectarse de esa sesión y volver a conectarse en cualquier momento. Cuando un usuario se reconecta a la sesión, todas las aplicaciones siguen funcionando desde donde el usuario las dejó, de modo que el usuario puede seguir trabajando como si nunca se hubiera desconectado. La capacidad de desconectarse y reconectarse a una sesión en cualquier momento es un beneficio importante para los usuarios de PDA inalámbricas móviles que pueden tener conectividad de red intermitente. El modelo de sesión web persistente de pTHINCs permite a un usuario reconectarse a una sesión web desde dispositivos distintos al que se inició originalmente la sesión web. Esto proporciona a los usuarios una movilidad fluida entre diferentes dispositivos. Si un usuario pierde su PDA, puede fácilmente usar otra PDA para acceder a su sesión web. Además, pTHINC permite a los usuarios utilizar dispositivos que no son PDA para acceder a sesiones web también. Un usuario puede acceder a la misma sesión web persistente en una PC de escritorio como en una PDA, lo que le permite al usuario utilizar la misma sesión web desde cualquier computadora. El modelo de sesión web persistente de pTHINCs aborda un problema clave encontrado por los usuarios de la web móvil, la falta de un entorno web común en diferentes computadoras. Los navegadores web a menudo almacenan información importante como marcadores, cookies e historial, lo que les permite funcionar de una manera mucho más útil. El problema que ocurre cuando un usuario se mueve entre computadoras es que estos datos, específicos de una instalación de un navegador web, no pueden moverse con el usuario. Además, los navegadores web a menudo necesitan aplicaciones auxiliares para procesar diferentes contenidos multimedia, y esas aplicaciones pueden no estar disponibles de manera consistente en todas las computadoras. pTHINC aborda este problema al permitir que un usuario utilice de forma remota el mismo entorno de navegador web y aplicaciones auxiliares desde cualquier computadora. Como resultado, pTHINC puede proporcionar un entorno de navegación web común y consistente para usuarios móviles en diferentes dispositivos sin requerirles intentar sincronizar repetidamente diferentes entornos de navegación web en múltiples máquinas. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC debe proporcionar mecanismos para admitir diferentes tamaños de pantalla y resoluciones. Con este fin, pTHINC proporciona una función de zoom que permite a un usuario acercar y alejar una pantalla y permite que la pantalla de una sesión web 144 Figura 1: teclas de acceso rápido de pTHINC se redimensione para adaptarse a la pantalla del dispositivo que se está utilizando. Por ejemplo, si el servidor está ejecutando una sesión web a 1024×768 pero el cliente es una PDA con una resolución de pantalla de 640×480, pTHINC redimensionará la pantalla del escritorio para que se ajuste a la pantalla más pequeña de la PDA. pTHINC proporciona al usuario de la PDA la opción de aumentar el tamaño de la pantalla haciendo zoom en diferentes partes de la pantalla. Los usuarios suelen estar familiarizados con el diseño general de los sitios web que visitan con frecuencia, y pueden aprovechar esta función de redimensionamiento para navegar mejor por las páginas web. Por ejemplo, un usuario puede alejarse de la pantalla para ver todo el contenido de la página y navegar por los hipervínculos, luego acercarse a una región de interés para obtener una mejor vista. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC también debe proporcionar mecanismos para admitir diferentes orientaciones de pantalla. En un entorno de escritorio, los usuarios suelen estar acostumbrados a tener las pantallas presentadas en modo horizontal, donde el ancho de la pantalla es mayor que su altura. Sin embargo, en un entorno de PDA, la elección no siempre es obvia. Algunos usuarios pueden preferir tener la pantalla en modo retrato, ya que es más fácil sostener el dispositivo en sus manos, mientras que otros pueden preferir el modo paisaje para minimizar la cantidad de desplazamiento lateral necesario para ver una página web. Para adaptarse a las preferencias de los usuarios de PDA, pTHINC proporciona una función de orientación que le permite rotar la pantalla de forma fluida entre el modo horizontal y vertical. El modo de paisaje es particularmente útil para los usuarios de pTHINC que acceden con frecuencia a sus sesiones web tanto en dispositivos de escritorio como en PDA, proporcionando a esos usuarios el mismo ajuste de paisaje familiar en diferentes dispositivos. Dado que el espacio de pantalla es un recurso relativamente escaso en las PDAs, pTHINC se ejecuta en modo de pantalla completa para maximizar el área de pantalla disponible para mostrar la sesión web. Para poder utilizar toda la pantalla en la PDA y aún así permitir al usuario controlar e interactuar con ella, pTHINC reutiliza los botones de acceso directo típicos que se encuentran en las PDAs para realizar todas las funciones de control disponibles para el usuario. Los botones utilizados por pTHINC no requieren ningún cambio en el entorno del sistema operativo; simplemente son interceptados por la aplicación cliente de pTHINC cuando se presionan. La Figura 1 muestra cómo pTHINC utiliza los botones de acceso directo para proporcionar una navegación sencilla y mejorar la experiencia del usuario en general. Estos botones no son específicos del dispositivo, y el diseño mostrado es común en dispositivos PocketPC ampliamente utilizados. pTHINC proporciona seis accesos directos para apoyar su modelo de uso: • Rotar pantalla: El botón de grabación en el borde izquierdo se utiliza para rotar la pantalla entre modo retrato y modo paisaje cada vez que se presiona el botón. • Alejar: El botón más a la izquierda en la parte inferior delantera se utiliza para alejar la visualización de la sesión web proporcionando una vista general de la sesión web. • Acercar: El segundo botón más a la izquierda en la parte inferior delantera se utiliza para acercar la visualización de la sesión web para ver más claramente el contenido de interés. • Desplazamiento direccional: El botón central en la parte inferior delantera se utiliza para desplazarse alrededor de la visualización utilizando un solo botón de control de una manera que ya es familiar para los usuarios de PDA. Esta función es particularmente útil cuando el usuario ha ampliado una región de la pantalla de tal manera que solo una parte de la pantalla es visible en la pantalla. • Mostrar/Ocultar Teclado: El segundo botón más a la derecha en la parte inferior frontal se utiliza para mostrar un teclado virtual dibujado en la pantalla para dispositivos que no tienen teclado físico. El teclado virtual utiliza mecanismos estándar del sistema operativo de PDA, proporcionando portabilidad entre diferentes entornos de PDA. • Cerrar sesión: El botón más a la derecha en la parte inferior frontal se utiliza para desconectarse de la sesión de pTHINC. pTHINC utiliza la pantalla táctil de la PDA, el lápiz óptico y mecanismos estándar de interfaz de usuario para proporcionar una metáfora de punto y clic de la interfaz de usuario similar a la proporcionada por el ratón en un entorno de computación de escritorio tradicional. pTHINC no utiliza un cursor ya que los entornos de PDA no lo proporcionan. En cambio, un usuario puede usar el lápiz táctil para tocar diferentes secciones de la pantalla táctil y señalar el enfoque de entrada. Un toque único en la pantalla táctil genera un evento de clic de ratón correspondiente. Un doble toque en la pantalla táctil genera un evento de doble clic del ratón correspondiente. pTHINC proporciona emulación de ratón de dos botones al usar el lápiz óptico para presionar la pantalla durante un segundo y generar un clic derecho del ratón. Todas estas acciones son idénticas a la forma en que los usuarios ya interactúan con las aplicaciones de PDA en el entorno común de PocketPC. En la navegación web, los usuarios pueden hacer clic en hipervínculos y enfocarse en cuadros de entrada simplemente tocando el área de interés deseada en la pantalla. A diferencia de los navegadores web PDA locales y otras aplicaciones PDA, pTHINC aprovecha metáforas de interfaz de usuario de escritorio más potentes para permitir a los usuarios manipular múltiples ventanas de aplicación abiertas en lugar de estar limitados a una sola ventana de aplicación en un momento dado. Esto proporciona una mayor flexibilidad de navegación más allá de lo que está actualmente disponible en los dispositivos PDA. Similar a un entorno de escritorio, las ventanas del navegador y otras ventanas de aplicaciones pueden ser movidas al presionar y arrastrar el lápiz óptico de manera similar a un ratón. 3. La arquitectura del sistema pTHINC se basa en la arquitectura de visualización remota THINC para proporcionar un sistema de cliente ligero para PDAs. pTHINC virtualiza la visualización en el servidor aprovechando la capa de abstracción del dispositivo de video, que se encuentra por debajo del servidor de ventanas y por encima del framebuffer. Este es un nivel de dispositivo bien definido y de bajo nivel que depende del dispositivo y expone el hardware de video al sistema de visualización. pTHINC logra esto a través de un controlador de pantalla virtual simple que intercepta comandos de dibujo, los empaqueta y los envía a través de la red. Mientras que otros enfoques de cliente ligero interceptan comandos de visualización en otras capas del subsistema de visualización, el enfoque de virtualización de pantalla de pTHINC proporciona algunos beneficios clave para admitir eficientemente a los clientes de PDA. Por ejemplo, interceptar comandos de visualización en una capa superior entre aplicaciones y el sistema de ventanas, como se hace en X [17], requiere replicar y ejecutar una gran cantidad de funcionalidades en la PDA que tradicionalmente son proporcionadas por el sistema de ventanas de escritorio. Dada la magnitud y complejidad de los sistemas de ventanas tradicionales, intentar replicar esta funcionalidad en el entorno restringido de una PDA habría resultado ser una tarea desafiante, y quizás inviable. Además, las aplicaciones y el sistema de ventanas a menudo requieren una sincronización precisa en su funcionamiento, y imponer una red inalámbrica entre ellos al ejecutar las aplicaciones en el servidor y el sistema de ventanas en el cliente degradaría significativamente el rendimiento. Por otro lado, interceptar en una capa inferior extrayendo píxeles del framebuffer a medida que se renderizan proporciona una solución simple que requiere muy poca funcionalidad en el cliente de PDA, pero también puede resultar en un rendimiento degradado. La razón es que para cuando el servidor de visualización remota intenta enviar actualizaciones de pantalla, ha perdido toda la información semántica que podría haberle ayudado a codificar de manera eficiente, y debe recurrir a utilizar un mecanismo de codificación genérico y costoso en el servidor, así como un mecanismo de decodificación potencialmente costoso en el cliente de PDA limitado. A diferencia de los enfoques de intercepción de alto y bajo nivel, el enfoque de pTHINCs de interceptar en el controlador del dispositivo proporciona un equilibrio efectivo entre la simplicidad del cliente y del servidor, y la capacidad de codificar y decodificar de manera eficiente las actualizaciones de pantalla. Al utilizar un enfoque de visualización virtual de bajo nivel, pTHINC puede codificar de manera eficiente los comandos de visualización de la aplicación utilizando solo un pequeño conjunto de comandos de bajo nivel. En un entorno de PDA, este conjunto de comandos proporciona un componente crucial para mantener la simplicidad del cliente en el entorno de PDA con recursos limitados. Los comandos de visualización se muestran en la Tabla 1 y funcionan de la siguiente manera. COPY instruye al cliente a copiar una región de la pantalla desde su framebuffer local a otra ubicación. Este comando mejora la experiencia del usuario al acelerar el desplazamiento y el movimiento de ventanas opacas sin necesidad de reenviar datos de pantalla desde el servidor. SFILL, PFILL y BITMAP son comandos que pintan una región de tamaño fijo en la pantalla. Son útiles para acelerar la visualización de fondos de ventanas sólidas, patrones de escritorio, fondos de páginas web, dibujo de texto y ciertas operaciones en programas de manipulación de gráficos. SFILL llena una región considerable en la pantalla con un solo color. PFILL replica una baldosa sobre una región de la pantalla. BITMAP realiza un relleno utilizando un mapa de bits de unos y ceros como un estipulado para aplicar un color de primer plano y de fondo. Finalmente, RAW se utiliza para transmitir datos de píxeles no codificados que se mostrarán textualmente en una región de la pantalla. Este comando se invoca como último recurso si el servidor no puede emplear ningún otro comando, y es el único comando que puede ser comprimido para mitigar su impacto en el ancho de banda de la red. pTHINC entrega sus comandos utilizando un mecanismo de actualización de servidor-push no bloqueante, donde tan pronto como se generan actualizaciones de pantalla en el servidor, se envían al cliente. Los clientes no están obligados a solicitar explícitamente actualizaciones de pantalla, minimizando así el impacto que la típica variabilidad de la latencia de la red inalámbrica puede tener en la capacidad de respuesta del sistema. Teniendo en cuenta que los recursos Descripción de Comando COPY Copiar un área de búfer de fotogramas en coordenadas especificadas SFILL Rellenar un área con un valor de color de píxel dado PFILL Azulejar un área con un patrón de píxeles dado BITMAP Rellenar una región usando un patrón de bits RAW Mostrar datos de píxeles en bruto en una ubicación dada Tabla 1: Comandos de visualización del protocolo pTHINC. Las PDAs y las redes inalámbricas limitadas pueden no ser capaces de mantenerse al día con un servidor rápido que genera una gran cantidad de actualizaciones, pTHINC es capaz de fusionar, recortar y descartar actualizaciones automáticamente si se produce pérdida o congestión de red, o si el cliente no puede mantenerse al día con la velocidad de las actualizaciones. Este tipo de comportamiento resulta crucial en un entorno de navegación web, donde por ejemplo, una página puede ser redibujada varias veces mientras se renderiza al vuelo por el navegador. En este caso, la PDA solo recibirá y mostrará el resultado final, que claramente es todo lo que al usuario le interesa ver. pTHINC prioriza la entrega de actualizaciones a la PDA utilizando un programador de actualizaciones preemptivo de Tamaño Restante Más Corto Primero (SRSF). SRSF es análogo a la programación de Tiempo de Procesamiento Restante más Corto, la cual se sabe que es óptima para minimizar el tiempo medio de respuesta en un sistema interactivo. En un entorno de navegación web, los trabajos cortos están asociados con el texto y los componentes básicos de diseño de página, como el fondo de las páginas, que son contenido web crítico para el usuario. Por otro lado, los trabajos grandes suelen ser elementos de embellecimiento de menor prioridad, o, incluso peor, banners y anuncios de página web, los cuales tienen un valor cuestionable para el usuario mientras navega por la página. Usando SRSF, pTHINC puede maximizar la utilización del ancho de banda relativamente escaso disponible en la conexión inalámbrica entre la PDA y el servidor. 3.1 Gestión de la Pantalla Para permitir a los usuarios acceder con la misma facilidad a su navegador web y aplicaciones auxiliares desde una computadora de escritorio en casa como desde una PDA mientras están en movimiento, pTHINC proporciona un mecanismo de redimensionamiento para hacer zoom dentro y fuera de la pantalla de una sesión web. El redimensionamiento de pTHINC es completamente compatible con el servidor, no con el cliente. El servidor vuelve a muestrear las actualizaciones para que se ajusten al área de visualización de las PDAs antes de ser transmitidas por la red. pTHINC utiliza el algoritmo de remuestreo de Fants para redimensionar las actualizaciones de píxeles. Esto proporciona actualizaciones suaves y visualmente agradables con un antialiasing adecuado y solo requiere modestos recursos computacionales. El enfoque de redimensionamiento de pTHINCs tiene varias ventajas. Primero, permite al PDA aprovechar la vastamente superior potencia computacional del servidor para utilizar algoritmos de re-muestreo de alta calidad y producir actualizaciones de mayor calidad para que el PDA las muestre. Segundo, cambiar el tamaño de la pantalla no se traduce en requisitos adicionales de recursos para la PDA, ya que no necesita realizar ningún trabajo adicional. Finalmente, se logra una mejor utilización de la red inalámbrica ya que al reescalar las actualizaciones se reducen sus requisitos de ancho de banda. Para permitir a los usuarios orientar sus pantallas en una PDA y así proporcionar una experiencia visual que se ajuste mejor a las preferencias del usuario y al diseño de páginas web o aplicaciones, pTHINC proporciona un mecanismo de rotación de pantalla para alternar entre los modos de visualización horizontal y vertical. La rotación de pantalla de pTHINC es completamente compatible con el cliente, no con el servidor. pTHINC no recalcula explícitamente la geometría de las actualizaciones de pantalla para realizar la rotación, lo cual sería computacionalmente costoso. En cambio, pTHINC simplemente cambia la forma en que los datos se copian en el framebuffer para cambiar entre los modos de visualización. Cuando está en modo retrato, los datos se copian a lo largo de las filas del framebuffer de izquierda a derecha. Cuando se encuentra en modo horizontal, los datos se copian a lo largo de las columnas del framebuffer de arriba hacia abajo. Estas técnicas muy rápidas y simples reemplazan un conjunto de operaciones de copia por otro y no imponen ningún sobrecosto de rendimiento. pTHINC proporciona su propio mecanismo de rotación para soportar una amplia gama de dispositivos sin imponer requisitos adicionales de funciones en la PDA. Aunque algunos dispositivos PDA más nuevos ofrecen soporte nativo para diferentes orientaciones, este mecanismo no es dinámico y requiere que el usuario rote toda la interfaz de usuario de la PDA antes de iniciar el cliente pTHINC. Windows Mobile proporciona mecanismos de API nativos para que las aplicaciones de PDA puedan rotar su interfaz de usuario sobre la marcha, pero estos mecanismos ofrecen un rendimiento deficiente y una calidad de visualización baja, ya que la rotación se realiza de manera ingenua y no es completamente precisa. 3.2 Reproducción de video El video se ha convertido gradualmente en una parte integral de la World Wide Web, y su presencia solo seguirá aumentando. Los sitios web de hoy en día no solo utilizan gráficos animados y flash para presentar el contenido web de manera atractiva, sino que también utilizan video en streaming para enriquecer la interfaz web. Los usuarios pueden ver noticias pregrabadas y en vivo en CNN, ver los momentos más destacados deportivos en ESPN e incluso buscar a través de una gran colección de videos en Google Video. Para permitir que las aplicaciones proporcionen una reproducción de video eficiente, se han creado interfaces en los sistemas de visualización que permiten a los controladores de dispositivos de video exponer sus capacidades de hardware a las aplicaciones. pTHINC aprovecha estas interfaces y su enfoque de controlador de dispositivo virtual para proporcionar un puente virtual entre el cliente remoto y su hardware y las aplicaciones, y admitir de manera transparente la reproducción de video. Sobre esta arquitectura, pTHINC utiliza el espacio de color YUV para codificar el contenido de video, lo cual proporciona una serie de beneficios. Primero, se ha vuelto cada vez más común que el hardware de video de las PDA admita nativamente YUV y pueda realizar la conversión del espacio de color y el escalado automáticamente. Como resultado, pTHINC puede proporcionar reproducción de video a pantalla completa sin afectar el rendimiento. Segundo, el uso de YUV permite una representación más eficiente de los datos RGB sin pérdida de calidad, aprovechando la capacidad de los ojos humanos para distinguir mejor las diferencias en brillo que en color. En particular, pTHINC utiliza el formato YV12, que permite codificar datos de color RGB completo utilizando solo 12 bits por píxel. Tercero, los datos YUV se producen como uno de los últimos pasos del proceso de decodificación de la mayoría de los códecs de video, lo que permite a pTHINC proporcionar la reproducción de video de una manera independiente del formato. Finalmente, aunque el hardware de video de las PDAs no pueda acelerar la reproducción, el proceso de conversión de espacio de color es lo suficientemente simple como para no imponer requisitos poco razonables en la PDA. Un ejemplo más concreto de cómo pTHINC aprovecha el hardware de video PDA para admitir la reproducción de video se puede ver en nuestra implementación de prototipo en la popular PDA Dell Axim X51v, que está equipada con el acelerador multimedia Intel 2700G. En este caso, pTHINC crea un búfer fuera de pantalla en la memoria de video y escribe y lee desde esta región de memoria datos en formato YV12. Cuando llega un nuevo fotograma de video, los datos de video se copian desde el búfer a una superficie superpuesta en la memoria de video, que es independiente de la superficie normal utilizada para el dibujo tradicional. A medida que los datos YV12 se colocan en la superposición, el acelerador de Intel realiza automáticamente la conversión de espacio de color y el escalado. Al utilizar la superficie de superposición, pTHINC no necesita volver a dibujar la pantalla una vez que la reproducción de video ha terminado, ya que la superficie superpuesta no se ve afectada. Además, las regiones de superposición específicas pueden ser manipuladas aprovechando el hardware de video, por ejemplo, para realizar interpolación lineal de hardware y suavizar el fotograma para mostrarlo a pantalla completa, y para realizar rotación automática cuando el cliente se ejecuta en modo horizontal. 4. RESULTADOS EXPERIMENTALES Hemos implementado un prototipo de pTHINC que ejecuta el cliente en dispositivos Pocket PC basados en Windows Mobile ampliamente utilizados y el servidor en sistemas operativos tanto Windows como Linux. Para demostrar su eficacia en el soporte de aplicaciones web inalámbricas móviles, hemos medido su rendimiento en aplicaciones web. Presentamos resultados experimentales sobre diferentes dispositivos PDA para dos aplicaciones web populares, navegar por páginas web y reproducir contenido de video desde la web. Comparamos pTHINC con aplicaciones web nativas que se ejecutan localmente en la PDA para demostrar la mejora que pTHINC puede proporcionar sobre el enfoque tradicional de cliente pesado. También comparamos pTHINC con tres de los clientes ligeros más utilizados que pueden ejecutarse en PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] y VNC (Virtual Network Computing) [16]. Seguimos la práctica común y nos referimos a Citrix MetaFrameXP y Microsoft Remote Desktop por sus respectivos protocolos de visualización remota, ICA (Independent Computing Architecture) y RDP (Remote Desktop Protocol). 4.1 Plataforma de Pruebas Experimental Realizamos nuestros experimentos web utilizando dos PDA Pocket PC inalámbricas diferentes en un entorno de prueba de red Wi-Fi aislado, como se muestra en la Figura 2. El banco de pruebas consistía en dos dispositivos cliente PDA, un monitor de paquetes, un servidor de cliente ligero y un servidor web. Excepto por las PDAs, todas las demás máquinas eran servidores IBM Netfinity 4500R con procesadores duales Intel PIII de 933 MHz y 512 MB de RAM, y estaban conectadas en una red FastEthernet de 100 Mbps conmutada. El servidor web utilizado fue Apache 1.3.27, el emulador de red fue NISTNet 2.0.12 y el monitor de paquetes fue Ethereal 0.10.9. Los clientes de PDA se conectaron al banco de pruebas a través de un punto de acceso inalámbrico Lucent Orinoco AP-2000 802.11b. Todos los experimentos utilizando la red inalámbrica se llevaron a cabo a una distancia de diez pies del punto de acceso, por lo que consideramos que la cantidad de pérdida de paquetes era insignificante en nuestros experimentos. Se utilizaron dos PDA Pocket PC para proporcionar resultados en modelos antiguos y menos potentes, así como en modelos más nuevos de mayor rendimiento. El modelo anterior era un Dell Axim X5 con 147 Cliente 1024×768 640×480 Profundidad Cambio de tamaño Clip RDP no sí 8 bits no sí VNC sí sí 16 bits no no ICA sí sí 16 bits sí no pTHINC sí sí 24 bits sí no Tabla 2: Configuración del banco de pruebas de cliente ligero con un CPU Intel XScale PXA255 de 400 MHz y 64 MB de RAM ejecutando Windows Mobile 2003 y una tarjeta Dell TrueMobile 1180 de 2.4 GHz CompactFlash para redes inalámbricas. El modelo más nuevo era un Dell Axim X51v con un procesador Intel XScale XPA270 de 624 MHz y 64 MB de RAM ejecutando Windows Mobile 5.0 y con red inalámbrica 802.11b integrada. El X51v tiene un acelerador multimedia Intel 2700G con 16MB de memoria de video. Ambas PDAs son capaces de mostrar colores de 16 bits pero tienen diferentes tamaños de pantalla y resoluciones de visualización. El X5 tiene una pantalla diagonal de 3.5 pulgadas con una resolución de 240×320. El X51v tiene una pantalla diagonal de 3.7 pulgadas con una resolución de 480×640. Los cuatro clientes ligeros que utilizamos admiten diferentes niveles de calidad de visualización, como se resume en la Tabla 2. El cliente de RDP solo admite una resolución de pantalla fija de 640×480 en el servidor con una profundidad de color de 8 bits, mientras que otras plataformas ofrecen niveles más altos de calidad de visualización. Para proporcionar una comparación justa en todas las plataformas, realizamos nuestros experimentos con sesiones de cliente ligero configuradas para dos posibles resoluciones, 1024×768 y 640×480. Tanto ICA como VNC se configuraron para usar la resolución nativa de PDA con una profundidad de color de 16 bits. El prototipo actual de pTHINC utiliza color de 24 bits directamente y el cliente reduce la resolución de las actualizaciones al nivel de color de 16 bits disponible en la PDA. RDP se configuró utilizando solo una profundidad de color de 8 bits ya que no admite ninguna profundidad de color mejor. Dado que tanto pTHINC como ICA ofrecen la capacidad de ver la pantalla redimensionada para ajustarse a la pantalla, medimos ambos clientes con y sin la pantalla redimensionada para ajustarse a la pantalla del PDA. Cada cliente ligero fue probado utilizando el modo de paisaje en lugar del modo retrato cuando estaba disponible. Todos los sistemas que se ejecutan en el X51v podrían funcionar en modo horizontal porque el hardware proporciona una función de modo horizontal. Sin embargo, el X5 no proporciona esta funcionalidad. Solo pTHINC admite directamente el modo paisaje, por lo que era el único sistema que podía ejecutarse en modo paisaje tanto en el X5 como en el X51v. Para proporcionar una comparación justa, también estandarizamos en hardware y sistemas operativos comunes siempre que sea posible. Todos los sistemas utilizaron el servidor Netfinity como servidor de cliente ligero. Para los dos sistemas diseñados para servidores Windows, ICA y RDP, ejecutamos Windows Server 2003 en el servidor. Para los otros sistemas que admiten servidores basados en X, ejecutamos la distribución Debian Linux Inestable con el kernel Linux 2.6.10 en el servidor. Utilizamos las últimas versiones de servidores de cliente ligero disponibles en cada plataforma en el momento de nuestros experimentos, a saber, Citrix MetaFrame XP Server para Windows Feature Release 3, Microsoft Remote Desktop integrado en Windows XP y Windows 2003 utilizando RDP 5.2, y VNC 4.0.4.2. Para los benchmarks de aplicaciones, utilizamos dos benchmarks de aplicaciones web para nuestros experimentos basados en dos escenarios de aplicación comunes, navegación por páginas web y reproducción de contenido de video desde la web. Dado que muchos sistemas de cliente ligero, incluidos dos de los probados, son cerrados y propietarios, medimos su rendimiento de manera no invasiva capturando el tráfico de red con un monitor de paquetes y utilizando una variante de benchmarking en cámara lenta [13] previamente desarrollada para medir el rendimiento de clientes ligeros en entornos de PDA [10]. Esta metodología de medición tiene en cuenta tanto el desacoplamiento de la visualización que puede ocurrir entre el cliente y el servidor en sistemas de cliente ligero, como el tiempo de procesamiento del cliente, que puede ser significativo en el caso de las PDAs. Para medir el rendimiento de la navegación web, utilizamos un benchmark de navegación web basado en la Prueba de Carga de Páginas de Texto Web del conjunto de benchmarks Ziff-Davis i-Bench [7]. El punto de referencia consiste en la carga controlada de 55 páginas desde el servidor web mediante JavaScript. Las páginas contienen tanto texto como gráficos, con páginas de diferentes tamaños. Los gráficos son imágenes incrustadas en formatos GIF y JPEG. El benchmark original i-Bench fue modificado para pruebas de rendimiento en cámara lenta al introducir retrasos de varios segundos entre las páginas utilizando JavaScript. Luego se realizaron dos pruebas, una en la que se agregaron retrasos entre cada página, y otra en la que las páginas se cargaron continuamente sin esperar a que se mostraran en el cliente. En la primera prueba, los retrasos se ajustaron lo suficiente en cada caso para garantizar que cada página pudiera ser recibida y mostrada en el cliente por completo sin solapamiento temporal en la transferencia de los datos pertenecientes a dos páginas consecutivas. Utilizamos el monitor de paquetes para registrar el tráfico de paquetes para cada ejecución de la prueba de referencia, luego utilizamos las marcas de tiempo del primer y último paquete en la traza para obtener nuestras medidas de latencia [10]. El monitor de paquetes también registró la cantidad de datos transmitidos entre el cliente y el servidor. La proporción entre el tráfico de datos en las dos pruebas produce un factor de escala. Este factor de escala muestra la pérdida de datos entre el servidor y el cliente debido a la incapacidad del cliente para procesar los datos lo suficientemente rápido. El producto del factor de escala con la medición de latencia produce la verdadera latencia teniendo en cuenta el tiempo de procesamiento del cliente. Para ejecutar la prueba de navegación web, utilizamos Mozilla Firefox 1.0.4 en el servidor de cliente ligero para los clientes ligeros, y Windows Internet Explorer (IE) Mobile para 2003 y Mobile para 5.0 para los navegadores nativos en las PDAs X5 y X51v, respectivamente. En todos los casos, el navegador web utilizado se ajustó para ocupar toda la región de visualización disponible. Para medir el rendimiento de reproducción de video, utilizamos un banco de pruebas de video que consistía en reproducir un clip de video MPEG-1 de 34.75 segundos que contenía una mezcla de noticias y programación de entretenimiento a resolución de pantalla completa. El videoclip tiene un tamaño de 5.11 MB y consta de 834 cuadros de píxeles de 352x240 con una velocidad de cuadro ideal de 24 cuadros por segundo. Medimos el rendimiento del video utilizando pruebas de referencia en cámara lenta al monitorear el tráfico de paquetes resultante a dos velocidades de reproducción, 1 cuadro por segundo (fps) y 24 fps, y comparando los resultados para determinar los retrasos en la reproducción y las caídas de cuadros que ocurren a 24 fps para medir la calidad general del video [13]. Por ejemplo, el 100% de calidad significa que todos los fotogramas del video se reprodujeron a velocidad en tiempo real. Por otro lado, una calidad del 50% podría significar que se eliminó la mitad de los datos del video, o que el clip tardó el doble en reproducirse a pesar de que se mostró toda la información del video. Para ejecutar la prueba de rendimiento de video, utilizamos Windows Media Player 9 para servidores de clientes ligeros basados en Windows, MPlayer 1.0 pre 6 para servidores de clientes ligeros basados en X, y Windows Media Player 9 Mobile y 10 Mobile para los reproductores de video nativos que se ejecutan localmente en las PDAs X5 y X51v, respectivamente. En todos los casos, el reproductor de video utilizado se dimensionó para llenar toda la región de visualización disponible. Las Figuras 3 y 4 muestran los resultados de ejecutar la prueba de navegación por la web. Para cada plataforma, mostramos resultados de hasta cuatro configuraciones diferentes, dos en el X5 y dos en el X51v, dependiendo de si cada configuración era compatible. Sin embargo, no todas las plataformas podrían admitir todas las configuraciones. El navegador local solo se ejecuta a la resolución de pantalla de la PDA, 480×680 o menos para el X51v y el X5. RDP solo funciona a 640×480. Ninguna plataforma podía soportar una resolución de pantalla de 1024×768. ICA solo funcionaba en el X5 y no podía ejecutarse en el X51v porque no era compatible con Windows Mobile 5. La Figura 3 muestra la latencia promedio por página web para cada plataforma. pTHINC proporciona la latencia promedio más baja en la navegación web en ambas PDAs. En el X5, pTHINC funciona hasta 70 veces mejor que otros sistemas de cliente ligero y 8 veces mejor que el navegador local. En el X51v, pTHINC funciona hasta 80 veces mejor que otros sistemas de cliente ligero y 7 veces mejor que el navegador nativo. De hecho, todos los clientes ligeros excepto VNC superan al navegador local de PDA, demostrando los beneficios de rendimiento del enfoque de cliente ligero. Los estudios de usabilidad han demostrado que las páginas web deben tardar menos de un segundo en descargarse para que el usuario experimente una navegación web ininterrumpida [14]. Las mediciones muestran que solo los clientes delgados ofrecen latencias de página web de menos de un segundo. Por el contrario, el navegador local requiere más de 3 segundos en promedio por página web. El navegador local funciona peor ya que necesita ejecutar un navegador web más limitado para procesar el HTML, JavaScript y realizar todo el renderizado utilizando las capacidades limitadas de la PDA. Los clientes ligeros pueden aprovecharse de hardware de servidor más rápido y un navegador web altamente optimizado para procesar el contenido web mucho más rápido. La Figura 3 muestra que RDP es la plataforma más rápida después de pTHINC. Sin embargo, RDP solo puede ejecutarse a una resolución fija de 640×480 y una profundidad de color de 8 bits. Además, RDP también recorta la pantalla al tamaño de la pantalla de la PDA para no tener que enviar actualizaciones que no son visibles en la pantalla de la PDA. Esto proporciona un beneficio de rendimiento siempre y cuando el resto del contenido web no se visualice, pero degrada el rendimiento cuando un usuario desplaza la pantalla para ver otro contenido web. RDP logra su rendimiento con una calidad de visualización significativamente inferior en comparación con otros clientes ligeros y con recortes adicionales en la visualización que no son utilizados por otros sistemas. Como resultado, el rendimiento de RDP por sí solo no proporciona una comparación completa con las otras plataformas. Por el contrario, pTHINC ofrece el mejor rendimiento al mismo tiempo que proporciona una calidad de visualización igual o mejor que los otros sistemas. Dado que VNC e ICA ofrecen una calidad de visualización similar a pTHINC, estos sistemas proporcionan una comparación más justa de diferentes enfoques de cliente ligero. ICA funciona peor en parte porque utiliza primitivas de visualización de nivel superior que requieren costos adicionales de procesamiento por parte del cliente. VNC funciona peor en parte porque pierde datos de visualización debido a su mecanismo de entrega de cliente-pull y debido a los costos de procesamiento del cliente en descomprimir primitivas de píxeles crudos. En ambos casos, su rendimiento se vio limitado en parte porque sus clientes de PDA no podían mantenerse al ritmo al que se mostraban las páginas web. La Figura 3 también muestra las medidas para aquellos clientes ligeros que admiten redimensionar la pantalla para ajustarse a la pantalla de la PDA, a saber, ICA y pTHINC. El redimensionamiento requiere un procesamiento adicional, lo que resulta en latencias promedio más lentas de las páginas web. Las mediciones muestran que el retraso adicional incurrido por ICA al cambiar el tamaño es mucho más sustancial que para pTHINC. ICA realiza redimensionamiento en el cliente PDA más lento. Por el contrario, pTHINC aprovecha el servidor más potente para redimensionar, reduciendo la diferencia de rendimiento entre redimensionar y no redimensionar. A diferencia de ICA, pTHINC es capaz de proporcionar latencias de descarga de páginas web en menos de un segundo en ambos casos. La Figura 4 muestra los datos transferidos en KB por página al ejecutar la versión de cámara lenta de las pruebas. Todas las plataformas tienen requisitos modestos de transferencia de datos de aproximadamente 100 KB por página o menos. Esto está bien dentro de la capacidad de ancho de banda de las redes Wi-Fi. Las mediciones muestran que el navegador local no transfiere la menor cantidad de datos. Esto es sorprendente ya que HTML suele considerarse una representación muy compacta del contenido. En cambio, RDP es la plataforma más eficiente en ancho de banda, en gran parte debido a que utiliza solo una profundidad de color de 8 bits y recorte de pantalla para no transferir la página web completa al cliente. En general, pTHINC tiene los mayores requisitos de datos, ligeramente más que VNC. Esto se debe en gran medida a la falta de soporte nativo de los prototipos actuales de pTHINC para datos de color de 16 bits en el protocolo de comunicación. Sin embargo, este resultado también destaca el rendimiento de pTHINCs, ya que es más rápido que todos los demás sistemas incluso al transferir más datos. Además, dado que los modelos más recientes de PDA admiten colores completos de 24 bits, estos resultados indican que pTHINC seguirá proporcionando un buen rendimiento en la navegación web. Dado que la usabilidad y la calidad de la pantalla son tan importantes como el rendimiento, las Figuras 5 a 8 comparan capturas de pantalla de los diferentes clientes ligeros al mostrar una página web, en este caso del popular sitio de noticias de la BBC. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo paisaje. Figura 5: Captura de pantalla del navegador: RDP 640x480. Figura 6: Captura de pantalla del navegador: VNC 1024x768. Figura 7: Captura de pantalla del navegador: ICA redimensionado 1024x768. Figura 8: Captura de pantalla del navegador: pTHINC redimensionado 1024x768 utilizando la configuración de resolución de pantalla máxima para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Si bien las capturas de pantalla carecen de la fidelidad visual de la pantalla real del dispositivo, se pueden hacer varias observaciones. La Figura 5 muestra que RDP no admite el modo de pantalla completa y desperdicia mucho espacio en pantalla para controles y elementos de la interfaz de usuario, lo que obliga al usuario a desplazarse para acceder a todo el contenido de la sesión de navegación web. La Figura 6 muestra que VNC aprovecha mejor el espacio de la pantalla y ofrece una mejor calidad de visualización, pero aún obliga al usuario a desplazarse para ver la página web debido a la falta de soporte para redimensionar. La Figura 7 muestra la capacidad de ICA para mostrar la página web completa dada su soporte de redimensionamiento, pero su falta de capacidad en modo paisaje y su algoritmo de redimensionamiento deficiente comprometen significativamente la calidad de visualización. Por el contrario, la Figura 8 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de pantalla completa de alta calidad del ancho completo de la página web. pTHINC maximiza toda la región de visualización moviendo todos los controles a los botones de la PDA. Además, pTHINC aprovecha la potencia computacional del servidor para utilizar un algoritmo de redimensionamiento de alta calidad y ajustar la pantalla al tamaño de la PDA sin un sobrecoste significativo. Las figuras 9 y 10 muestran los resultados de ejecutar la prueba de reproducción de video. Para cada plataforma excepto ICA, mostramos resultados para una configuración X5 y X51v. ICA no pudo ejecutarse en el X51v como se mencionó anteriormente. Las mediciones se realizaron utilizando configuraciones que reflejaban el entorno desde el cual un usuario tendría que acceder a una sesión web tanto desde una computadora de escritorio como desde una PDA. Por lo tanto, se utilizó una resolución de pantalla del servidor de 1024×768 siempre que fuera posible y el video se mostró a pantalla completa. La resolución de pantalla de RDP se limitaba a 640×480, como se mencionó anteriormente. Dado que ver toda la pantalla del video es la única opción realmente utilizable, redimensionamos la pantalla para que se ajustara a la pantalla de la PDA en aquellas plataformas que admitían esta función, a saber, ICA y pTHINC. La Figura 9 muestra la calidad de video para cada plataforma. pTHINC es el único cliente ligero capaz de proporcionar una calidad de reproducción de video perfecta, similar al reproductor de video nativo de PDA. Todos los demás clientes ligeros ofrecen una calidad de video muy pobre. Con la excepción de RDP en el X51v que proporcionó una calidad de video inaceptable del 35%, ninguno de los otros sistemas pudo siquiera alcanzar el 10% de calidad de video. VNC e ICA tienen la peor calidad al 8% en el dispositivo X5. El soporte de video nativo de pTHINCs permite un rendimiento de video superior, mientras que otros clientes ligeros sufren de su incapacidad para distinguir el video de las actualizaciones normales de la pantalla. Intentan aplicar algoritmos de compresión ineficaces y costosos en los datos de video y no pueden mantenerse al día con la corriente de actualizaciones generadas, lo que resulta en cuadros omitidos o largos tiempos de reproducción. VNC se ve aún más afectado por su modelo de actualización de cliente-pull porque los fotogramas de video se generan más rápido que la velocidad a la que el cliente puede procesar y enviar solicitudes al servidor para obtener la siguiente actualización de pantalla. La Figura 10 muestra los datos totales transferidos durante la reproducción de video a pantalla completa para cada sistema. El reproductor nativo es la plataforma más eficiente en ancho de banda, enviando menos de 6 MB de datos, lo que corresponde a aproximadamente 1.2 Mbps de ancho de banda. La calidad de video al 100% de pTHINCs requiere alrededor de 25 MB de datos, lo que corresponde a un uso de ancho de banda de menos de 6 Mbps. Mientras que los otros clientes ligeros envían menos datos que THINC, lo hacen porque están eliminando datos de video, lo que resulta en una calidad de video degradada. Las figuras 11 a 14 comparan capturas de pantalla de los distintos clientes ligeros al mostrar el videoclip. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo horizontal utilizando la configuración de resolución máxima de pantalla para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Las figuras 11 y 12 muestran que RDP y VNC no pueden mostrar el cuadro completo del video en la pantalla de la PDA. RDP desperdicia espacio en pantalla para los elementos de la interfaz de usuario y VNC solo muestra la esquina superior del marco de video en la pantalla. La Figura 13 muestra que el ICA proporciona redimensionamiento para mostrar todo el fotograma del video, pero no redimensiona proporcionalmente los datos del video, lo que resulta en artefactos de visualización extraños. Por el contrario, la Figura 14 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de alta calidad a pantalla completa de todo el fotograma del video. pTHINC ofrece una visualización de video visualmente más atractiva que RDP, VNC o ICA. 5. TRABAJOS RELACIONADOS Varios estudios han examinado el rendimiento de la navegación web en la computación de cliente ligero [13, 19, 10]. La capacidad de los clientes ligeros para mejorar el rendimiento de la navegación web en PDAs inalámbricas fue demostrada cuantitativamente por primera vez en un estudio previo realizado por uno de los autores [10]. Este estudio demostró que los clientes ligeros pueden ofrecer tanto un rendimiento de navegación web más rápido como una mayor funcionalidad de navegación web. El estudio consideró una amplia gama de contenido web, incluido el contenido de sistemas de información médica. Nuestro trabajo se basa en este estudio previo y considera temas importantes como la usabilidad de los clientes ligeros existentes en entornos de PDA, los compromisos entre la usabilidad y el rendimiento de los clientes ligeros, el rendimiento en diferentes dispositivos de PDA y el rendimiento de los clientes ligeros en aplicaciones web comunes como el video. Se han desarrollado muchos clientes ligeros y algunos tienen clientes de PDA, incluyendo Remote Desktop de Microsoft [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5] y Tarantella [18]. Estos sistemas fueron diseñados inicialmente para computadoras de escritorio y adaptados posteriormente para asistentes digitales personales (PDA). A diferencia de pTHINC, no abordan los problemas clave de arquitectura del sistema y usabilidad importantes para las PDAs. Esto limita la calidad de visualización, el rendimiento del sistema, el espacio de pantalla disponible y la usabilidad general en PDAs. pTHINC se basa en trabajos anteriores de dos de los autores sobre THINC [1], ampliando la arquitectura del servidor e introduciendo una interfaz de cliente y un modelo de uso para admitir eficientemente dispositivos PDA en aplicaciones web móviles. Otros enfoques para mejorar el rendimiento de la navegación web inalámbrica móvil se han centrado en el uso de proxies de transcodificación y almacenamiento en caché en conjunto con el modelo de cliente pesado [11, 9, 4, 8]. Trabajan mediante el envío de funcionalidades a proxies externos y utilizando aplicaciones de navegación especializadas en el dispositivo PDA que se comunican con el proxy. Nuestro enfoque de cliente ligero difiere fundamentalmente de estos enfoques de cliente pesado al trasladar toda la lógica del navegador web al servidor, aprovechando las inversiones existentes en navegadores web de escritorio y aplicaciones auxiliares para funcionar de manera integrada con los sistemas de producción sin necesidad de configuraciones adicionales de proxy o modificaciones en el navegador web. Con la aparición de la navegación web en dispositivos con pantallas pequeñas, los sitios web han sido rediseñados utilizando mecanismos como WAP y se han desarrollado navegadores web nativos especializados para adaptarse a las necesidades de estos dispositivos. Recientemente, Opera ha desarrollado el navegador web Opera Mini [15], que utiliza un enfoque similar al modelo de cliente ligero para proporcionar acceso a través de una serie de dispositivos móviles que normalmente no podrían ejecutar un navegador web. En lugar de requerir que el dispositivo procese las páginas web, utiliza un servidor remoto para preprocesar la página antes de enviarla al teléfono. CONCLUSIONES Hemos introducido pTHINC, una arquitectura de cliente ligero para PDAs inalámbricas. pTHINC proporciona mecanismos arquitectónicos y de usabilidad clave como el redimensionamiento de pantalla en el lado del servidor, rotación de pantalla en el lado del cliente utilizando técnicas simples de copia, soporte de video YUV, y maximización del espacio de pantalla para actualizaciones de visualización y aprovechamiento de los botones de control existentes en las PDAs para elementos de la interfaz de usuario. pTHINC soporta de manera transparente navegadores de escritorio tradicionales y sus aplicaciones auxiliares en dispositivos PDA y computadoras de escritorio, brindando a los usuarios móviles acceso ubicuo a un entorno web consistente, personalizado y completo en dispositivos heterogéneos. Hemos implementado pTHINC y medido su rendimiento en aplicaciones web en comparación con los sistemas de cliente ligero existentes y las aplicaciones web nativas. Nuestros resultados en múltiples dispositivos móviles inalámbricos demuestran que pTHINC ofrece un rendimiento de navegación web hasta 80 veces mejor que los sistemas de cliente ligero existentes, y 8 veces mejor que un navegador PDA nativo. Además, pTHINC es el único cliente ligero de PDA 151 Figura 11: Captura de pantalla de video: RDP 640x480 Figura 12: Captura de pantalla de video: VNC 1024x768 Figura 13: Captura de pantalla de video: ICA redimensionado 1024x768 Figura 14: Captura de pantalla de video: pTHINC redimensionado 1024x768 que proporciona de manera transparente la reproducción de video a pantalla completa y a velocidad de cuadro completa, haciendo que los sitios web con contenido multimedia sean accesibles para los usuarios de la web móvil. 7. AGRADECIMIENTOS Este trabajo fue apoyado en parte por las subvenciones NSF ITR CCR0219943 y CNS-0426623, y un premio IBM SUR. 8. REFERENCIAS [1] R. Baratto, L. Kim y J. Nieh. THINC: Una arquitectura de visualización virtual para la computación de cliente ligero. En Actas del 20º Simposio de Principios de Sistemas Operativos de la ACM (SOSP), octubre de 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius y A. Muir. Microsoft Windows NT Server 4.0, Terminal Server Edition: Referencia Técnica. Microsoft Press, Redmond, WA, 1999. [4] A.\nMicrosoft Press, Redmond, WA, 1999. [4] A. Fox, I. Goldberg, S. D. Gribble y D. C. Lee. Experiencia con Top Gun Wingman: un navegador web gráfico basado en proxy para el 3Com PalmPilot. En Actas de Middleware 98, Lake District, Inglaterra, septiembre de 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Ley de Portabilidad y Responsabilidad del Seguro de Salud. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench versión 1.5. http://etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi. Sobre agentes de proxy, movilidad y acceso web. Redes y aplicaciones móviles, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon y A. Ortega. Diseño e Implementación de un Proxy de Caché Blando. Redes de Computadoras y Sistemas ISDN, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana y S. Varshneya. Mejorando la navegación web en PDAs inalámbricas utilizando computación de cliente ligero. En Actas de la 13ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham y P. Shenoy. TranSquid: Proxy de transcodificación y almacenamiento en caché para entornos de comercio electrónico heterogéneos. En Actas del 12º Taller IEEE sobre Problemas de Investigación en Ingeniería de Datos (RIDE 02), febrero de 2002. [12] Visor VNC .NET para PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang y N. Novik. Midiendo el rendimiento de clientes ligeros utilizando pruebas de referencia en cámara lenta. ACM Trans. Sistemas de Computación, 21(1):87-115, Feb. 2003. [14] J. Nielsen. Diseño de Usabilidad en la Web. New Riders Publishing, Indianápolis, IN, 2000. [15] Navegador Opera Mini. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood y A. Hopper. Computación de Red Virtual. IEEE Internet Computing, 2(1), enero/febrero de 1998. [17] R. W. Scheifler y J. Gettys. El Sistema de Ventanas X. ACM Trans. Gr., 5(2):79-106, Abr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla y M. Sajjadpour. Rendimiento de la navegación web en computación inalámbrica de cliente ligero. En Actas de la 12ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2003. 152 ",
            "candidates": [],
            "error": [
                [
                    "aplicaciones de ayuda del navegador",
                    "aplicaciones esenciales de ayuda para el navegador"
                ]
            ]
        },
        "high-fidelity display": {
            "translated_key": "visualización de alta fidelidad",
            "is_in_text": true,
            "original_annotated_sentences": [
                "pTHINC: A Thin-Client Architecture for Mobile Wireless Web Joeng Kim, Ricardo A. Baratto, and Jason Nieh Department of Computer Science Columbia University, New York, NY, USA {jk2438, ricardo, nieh}@cs.columbia.edu ABSTRACT Although web applications are gaining popularity on mobile wireless PDAs, web browsers on these systems can be quite slow and often lack adequate functionality to access many web sites.",
                "We have developed pTHINC, a PDA thinclient solution that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide <br>high-fidelity display</br> and seamless mobility across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available screen resolution for application display.",
                "We have implemented pTHINC on Windows Mobile and evaluated its performance on mobile wireless devices.",
                "Our results compared to local PDA web browsers and other thin-client approaches demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "Categories and Subject Descriptors: C.2.4 ComputerCommunication-Networks: Distributed Systems - client/ server General Terms: Design, Experimentation, Performance 1.",
                "INTRODUCTION The increasing ubiquity of wireless networks and decreasing cost of hardware is fueling a proliferation of mobile wireless handheld devices, both as standalone wireless Personal Digital Assistants (PDA) and popular integrated PDA/cell phone devices.",
                "These devices are enabling new forms of mobile computing and communication.",
                "Service providers are leveraging these devices to deliver pervasive web access, and mobile web users already often use these devices to access web-enabled information such as news, email, and localized travel guides and maps.",
                "It is likely that within a few years, most of the devices accessing the web will be mobile.",
                "Users typically access web content by running a web browser and associated helper applications locally on the PDA.",
                "Although native web browsers exist for PDAs, they deliver subpar performance and have a much smaller feature set and more limited functionality than their desktop computing counterparts [10].",
                "As a result, PDA web browsers are often not able to display web content from web sites that leverage more advanced web technologies to deliver a richer web experience.",
                "This fundamental problem arises for two reasons.",
                "First, because PDAs have a completely different hardware/software environment from traditional desktop computers, web applications need to be rewritten and customized for PDAs if at all possible, duplicating development costs.",
                "Because the desktop application market is larger and more mature, most development effort generally ends up being spent on desktop applications, resulting in greater functionality and performance than their PDA counterparts.",
                "Second, PDAs have a more resource constrained environment than traditional desktop computers to provide a smaller form factor and longer battery life.",
                "Desktop web browsers are large, complex applications that are unable to run on a PDA.",
                "Instead, developers are forced to significantly strip down these web browsers to provide a usable PDA web browser, thereby crippling PDA browser functionality.",
                "Thin-client computing provides an alternative approach for enabling pervasive web access from handheld devices.",
                "A thin-client computing system consists of a server and a client that communicate over a network using a remote display protocol.",
                "The protocol enables graphical displays to be virtualized and served across a network to a client device, while application logic is executed on the server.",
                "Using the remote display protocol, the client transmits user input to the server, and the server returns screen updates of the applications from the server to the client.",
                "Using a thin-client model for mobile handheld devices, PDAs can become simple stateless clients that leverage the remote server capabilities to execute web browsers and other helper applications.",
                "The thin-client model provides several important benefits for mobile wireless web.",
                "First, standard desktop web applications can be used to deliver web content to PDAs without rewriting or adapting applications to execute on a PDA, reducing development costs and leveraging existing software investments.",
                "Second, complex web applications can be executed on powerful servers instead of running stripped down versions on more resource constrained PDAs, providing greater functionality and better performance [10].",
                "Third, web applications can take advantage of servers with faster networks and better connectivity, further boosting application performance.",
                "Fourth, PDAs can be even simpler devices since they do not need to perform complex application logic, potentially reducing energy consumption and extend143 ing battery life.",
                "Finally, PDA thin clients can be essentially stateless appliances that do not need to be backed up or restored, require almost no maintenance or upgrades, and do not store any sensitive data that can be lost or stolen.",
                "This model provides a viable avenue for medical organizations to comply with HIPAA regulations [6] while embracing mobile handhelds in their day to day operations.",
                "Despite these potential advantages, thin clients have been unable to provide the full range of these benefits in delivering web applications to mobile handheld devices.",
                "Existing thin clients were not designed for PDAs and do not account for important usability issues in the context of small form factor devices, resulting in difficulty in navigating displayed web content.",
                "Furthermore, existing thin clients are ineffective at providing seamless mobility across the heterogeneous mix of device display sizes and resolutions.",
                "While existing thin clients can already provide faster performance than native PDA web browsers in delivering HTML web content, they do not effectively support more display-intensive web helper applications such as multimedia video, which is increasingly an integral part of available web content.",
                "To harness the full potential of thin-client computing in providing mobile wireless web on PDAs, we have developed pTHINC (PDA THin-client InterNet Computing). pTHINC builds on our previous work on THINC [1] to provide a thinclient architecture for mobile handheld devices. pTHINC virtualizes and resizes the display on the server to efficiently deliver high-fidelity screen updates to a broad range of different clients, screen sizes, and screen orientations, including both portrait and landscape viewing modes.",
                "This enables pTHINC to provide the same persistent web session across different client devices.",
                "For example, pTHINC can provide the same web browsing session appropriately scaled for display on a desktop computer and a PDA so that the same cookies, bookmarks, and other meta-data are continuously available on both machines simultaneously. pTHINCs virtual display approach leverages semantic information available in display commands, and client-side video hardware to provide more efficient remote display mechanisms that are crucial for supporting more display-intensive web applications.",
                "Given limited display resolution on PDAs, pTHINC maximizes the use of screen real estate for remote display by moving control functionality from the screen to readily available PDA control buttons, improving system usability.",
                "We have implemented pTHINC on Windows Mobile and demonstrated that it works transparently with existing applications, window systems, and operating systems, and does not require modifying, recompiling, or relinking existing software.",
                "We have quantitatively evaluated pTHINC against local PDA web browsers and other thin-client approaches on Pocket PC devices.",
                "Our experimental results demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "This paper presents the design and implementation of pTHINC.",
                "Section 2 describes the overall usage model and usability characteristics of pTHINC.",
                "Section 3 presents the design and system architecture of pTHINC.",
                "Section 4 presents experimental results measuring the performance of pTHINC on web applications and comparing it against native PDA browsers and other popular PDA thin-client systems.",
                "Section 5 discusses related work.",
                "Finally, we present some concluding remarks. 2.",
                "PTHINC USAGE MODEL pTHINC is a thin-client system that consists of a simple client viewer application that runs on the PDA and a server that runs on a commodity PC.",
                "The server leverages more powerful PCs to to run web browsers and other application logic.",
                "The client takes user input from the PDA stylus and virtual keyboard and sends them to the server to pass to the applications.",
                "Screen updates are then sent back from the server to the client for display to the user.",
                "When the pTHINC PDA client is started, the user is presented with a simple graphical interface where information such as server address and port, user authentication information, and session settings can be provided. pTHINC first attempts to connect to the server and perform the necessary handshaking.",
                "Once this process has been completed, pTHINC presents the user with the most recent display of his session.",
                "If the session does not exist, a new session is created.",
                "Existing sessions can be seamlessly continued without changes in the session setting or server configuration.",
                "Unlike other thin-client systems, pTHINC provides a user with a persistent web session model in which a user can launch a session running a web browser and associated applications at the server, then disconnect from that session and reconnect to it again anytime.",
                "When a user reconnects to the session, all of the applications continue running where the user left off, so that the user can continue working as though he or she never disconnected.",
                "The ability to disconnect and reconnect to a session at anytime is an important benefit for mobile wireless PDA users which may have intermittent network connectivity. pTHINCs persistent web session model enables a user to reconnect to a web session from devices other than the one on which the web session was originally initiated.",
                "This provides users with seamless mobility across different devices.",
                "If a user loses his PDA, he can easily use another PDA to access his web session.",
                "Furthermore, pTHINC allows users to use non-PDA devices to access web sessions as well.",
                "A user can access the same persistent web session on a desktop PC as on a PDA, enabling a user to use the same web session from any computer. pTHINCs persistent web session model addresses a key problem encountered by mobile web users, the lack of a common web environment across computers.",
                "Web browsers often store important information such as bookmarks, cookies, and history, which enable them to function in a much more useful manner.",
                "The problem that occurs when a user moves between computers is that this data, which is specific to a web browser installation, cannot move with the user.",
                "Furthermore, web browsers often need helper applications to process different media content, and those applications may not be consistently available across all computers. pTHINC addresses this problem by enabling a user to remotely use the exact same web browser environment and helper applications from any computer.",
                "As a result, pTHINC can provide a common, consistent web browsing environment for mobile users across different devices without requiring them to attempt to repeatedly synchronize different web browsing environments across multiple machines.",
                "To enable a user to access the same web session on different devices, pTHINC must provide mechanisms to support different display sizes and resolutions.",
                "Toward this end, pTHINC provides a zoom feature that enables a user to zoom in and out of a display and allows the display of a web 144 Figure 1: pTHINC shortcut keys session to be resized to fit the screen of the device being used.",
                "For example, if the server is running a web session at 1024×768 but the client is a PDA with a display resolution of 640×480, pTHINC will resize the desktop display to fit the full display in the smaller screen of the PDA. pTHINC provides the PDA user with the option to increase the size of the display by zooming in to different parts of the display.",
                "Users are often familiar with the general layout of commonly visited websites, and are able to leverage this resizing feature to better navigate through web pages.",
                "For example, a user can zoom out of the display to view the entire page content and navigate hyperlinks, then zoom in to a region of interest for a better view.",
                "To enable a user to access the same web session on different devices, pTHINC must also provide mechanisms to support different display orientations.",
                "In a desktop environment, users are typically accustomed to having displays presented in landscape mode where the screen width is larger than its height.",
                "However, in a PDA environment, the choice is not always obvious.",
                "Some users may prefer having the display in portrait mode, as it is easier to hold the device in their hands, while others may prefer landscape mode in order to minimize the amount of side-scrolling necessary to view a web page.",
                "To accommodate PDA user preferences, pTHINC provides an orientation feature that enables it to seamless rotate the display between landscape and portrait mode.",
                "The landscape mode is particularly useful for pTHINC users who frequently access their web sessions on both desktop and PDA devices, providing those users with the same familiar landscape setting across different devices.",
                "Because screen space is a relatively scarce resource on PDAs, pTHINC runs in fullscreen mode to maximize the screen area available to display the web session.",
                "To be able to use all of the screen on the PDA and still allow the user to control and interact with it, pTHINC reuses the typical shortcut buttons found on PDAs to perform all the control functions available to the user.",
                "The buttons used by pTHINC do not require any OS environment changes; they are simply intercepted by the pTHINC client application when they are pressed.",
                "Figure 1 shows how pTHINC utilizes the shortcut buttons to provide easy navigation and improve the overall user experience.",
                "These buttons are not device specific, and the layout shown is common to widelyused PocketPC devices. pTHINC provides six shortcuts to support its usage model: • Rotate Screen: The record button on the left edge is used to rotate the screen between portrait and landscape mode each time the button is pressed. • Zoom Out: The leftmost button on the bottom front is used to zoom out the display of the web session providing a birds eye view of the web session. • Zoom In: The second leftmost button on the bottom front is used to zoom in the display of the web session to more clearly view content of interest. • Directional Scroll: The middle button on the bottom front is used to scroll around the display using a single control button in a way that is already familiar to PDA users.",
                "This feature is particularly useful when the user has zoomed in to a region of the display such that only part of the display is visible on the screen. • Show/Hide Keyboard: The second rightmost button on the bottom front is used to bring up a virtual keyboard drawn on the screen for devices which have no physical keyboard.",
                "The virtual keyboard uses standard PDA OS mechanisms, providing portability across different PDA environments. • Close Session: The rightmost button on the bottom front is used to disconnect from the pTHINC session. pTHINC uses the PDA touch screen, stylus, and standard user interface mechanisms to provide a user interface pointand-click metaphor similar to that provided by the mouse in a traditional desktop computing environment. pTHINC does not use a cursor since PDA environments do not provide one.",
                "Instead, a user can use the stylus to tap on different sections of the touch screen to indicate input focus.",
                "A single tap on the touch screen generates a corresponding single click mouse event.",
                "A double tap on the touch screen generates a corresponding double click mouse event. pTHINC provides two-button mouse emulation by using the stylus to press down on the screen for one second to generate a right mouse click.",
                "All of these actions are identical to the way users already interact with PDA applications in the common PocketPC environment.",
                "In web browsing, users can click on hyperlinks and focus on input boxes by simply tapping on the desired screen area of interest.",
                "Unlike local PDA web browsers and other PDA applications, pTHINC leverages more powerful desktop user interface metaphors to enable users to manipulate multiple open application windows instead of being limited to a single application window at any given moment.",
                "This provides increased browsing flexibility beyond what is currently available on PDA devices.",
                "Similar to a desktop environment, browser windows and other application windows can be moved around by pressing down and dragging the stylus similar to a mouse. 3.",
                "PTHINC SYSTEM ARCHITECTURE pTHINC builds on the THINC [1] remote display architecture to provide a thin-client system for PDAs. pTHINC virtualizes the display at the server by leveraging the video device abstraction layer, which sits below the window server and above the framebuffer.",
                "This is a well-defined, low-level, device-dependent layer that exposes the video hardware to the display system. pTHINC accomplishes this through a simple virtual display driver that intercepts drawing commands, packetizes, and sends them over the network. 145 While other thin-client approaches intercept display commands at other layers of the display subsystem, pTHINCs display virtualization approach provides some key benefits in efficiently supporting PDA clients.",
                "For example, intercepting display commands at a higher layer between applications and the window system as is done by X [17] requires replicating and running a great deal of functionality on the PDA that is traditionally provided by the desktop window system.",
                "Given both the size and complexity of traditional window systems, attempting to replicate this functionality in the restricted PDA environment would have proven to be a daunting, and perhaps unfeasible task.",
                "Furthermore, applications and the window system often require tight synchronization in their operation and imposing a wireless network between them by running the applications on the server and the window system on the client would significantly degrade performance.",
                "On the other hand, intercepting at a lower layer by extracting pixels out of the framebuffer as they are rendered provides a simple solution that requires very little functionality on the PDA client, but can also result in degraded performance.",
                "The reason is that by the time the remote display server attempts to send screen updates, it has lost all semantic information that may have helped it encode efficiently, and it must resort to using a generic and expensive encoding mechanism on the server, as well as a potentially expensive decoding mechanism on the limited PDA client.",
                "In contrast to both the high and low level interception approaches, pTHINCs approach of intercepting at the device driver provides an effective balance between client and server simplicity, and the ability to efficiently encode and decode screen updates.",
                "By using a low-level virtual display approach, pTHINC can efficiently encode application display commands using only a small set of low-level commands.",
                "In a PDA environment, this set of commands provides a crucial component in maintaining the simplicity of the client in the resourceconstrained PDA environment.",
                "The display commands are shown in Table 1, and work as follows.",
                "COPY instructs the client to copy a region of the screen from its local framebuffer to another location.",
                "This command improves the user experience by accelerating scrolling and opaque window movement without having to resend screen data from the server.",
                "SFILL, PFILL, and BITMAP are commands that paint a fixed-size region on the screen.",
                "They are useful for accelerating the display of solid window backgrounds, desktop patterns, backgrounds of web pages, text drawing, and certain operations in graphics manipulation programs.",
                "SFILL fills a sizable region on the screen with a single color.",
                "PFILL replicates a tile over a screen region.",
                "BITMAP performs a fill using a bitmap of ones and zeros as a stipple to apply a foreground and background color.",
                "Finally, RAW is used to transmit unencoded pixel data to be displayed verbatim on a region of the screen.",
                "This command is invoked as a last resort if the server is unable to employ any other command, and it is the only command that may be compressed to mitigate its impact on network bandwidth. pTHINC delivers its commands using a non-blocking, serverpush update mechanism, where as soon as display updates are generated on the server, they are sent to the client.",
                "Clients are not required to explicitly request display updates, thus minimizing the impact that the typical varying network latency of wireless links may have on the responsiveness of the system.",
                "Keeping in mind that resource Command Description COPY Copy a frame buffer area to specified coordinates SFILL Fill an area with a given pixel color value PFILL Tile an area with a given pixel pattern BITMAP Fill a region using a bit pattern RAW Display raw pixel data at a given location Table 1: pTHINC Protocol Display Commands constrained PDAs and wireless networks may not be able to keep up with a fast server generating a large number of updates, pTHINC is able to coalesce, clip, and discard updates automatically if network loss or congestion occurs, or the client cannot keep up with the rate of updates.",
                "This type of behavior proves crucial in a web browsing environment, where for example, a page may be redrawn multiple times as it is rendered on the fly by the browser.",
                "In this case, the PDA will only receive and render the final result, which clearly is all the user is interesting in seeing. pTHINC prioritizes the delivery of updates to the PDA using a Shortest-Remaining-Size-First (SRSF) preemptive update scheduler.",
                "SRSF is analogous to Shortest-RemainingProcessing-Time scheduling, which is known to be optimal for minimizing mean response time in an interactive system.",
                "In a web browsing environment, short jobs are associated with text and basic page layout components such as the pages background, which are critical web content for the user.",
                "On the other hand, large jobs are often lower priority beautifying elements, or, even worse, web page banners and advertisements, which are of questionable value to the user as he or she is browsing the page.",
                "Using SRSF, pTHINC is able to maximize the utilization of the relatively scarce bandwidth available on the wireless connection between the PDA and the server. 3.1 Display Management To enable users to just as easily access their web browser and helper applications from a desktop computer at home as from a PDA while on the road, pTHINC provides a resize mechanism to zoom in and out of the display of a web session. pTHINC resizing is completely supported by the server, not the client.",
                "The server resamples updates to fit within the PDAs viewport before they are transmitted over the network. pTHINC uses Fants resampling algorithm to resize pixel updates.",
                "This provides smooth, visually pleasing updates with properly antialiasing and has only modest computational requirements. pTHINCs resizing approach has a number of advantages.",
                "First, it allows the PDA to leverage the vastly superior computational power of the server to use high quality resampling algorithms and produce higher quality updates for the PDA to display.",
                "Second, resizing the screen does not translate into additional resource requirements for the PDA, since it does not need to perform any additional work.",
                "Finally, better utilization of the wireless network is attained since rescaling the updates reduces their bandwidth requirements.",
                "To enable users to orient their displays on a PDA to provide a viewing experience that best accommodates user preferences and the layout of web pages or applications, pTHINC provides a display rotation mechanism to switch between landscape and portrait viewing modes. pTHINC display rotation is completely supported by the client, not the server. pTHINC does not explicitly recalculate the ge146 ometry of display updates to perform rotation, which would be computationally expensive.",
                "Instead, pTHINC simply changes the way data is copied into the framebuffer to switch between display modes.",
                "When in portrait mode, data is copied along the rows of the framebuffer from left to right.",
                "When in landscape mode, data is copied along the columns of the framebuffer from top to bottom.",
                "These very fast and simple techniques replace one set of copy operations with another and impose no performance overhead. pTHINC provides its own rotation mechanism to support a wide range of devices without imposing additional feature requirements on the PDA.",
                "Although some newer PDA devices provide native support for different orientations, this mechanism is not dynamic and requires the user to rotate the PDAs entire user interface before starting the pTHINC client.",
                "Windows Mobile provides native API mechanisms for PDA applications to rotate their UI on the fly, but these mechanisms deliver poor performance and display quality as the rotation is performed naively and is not completely accurate. 3.2 Video Playback Video has gradually become an integral part of the World Wide Web, and its presence will only continue to increase.",
                "Web sites today not only use animated graphics and flash to deliver web content in an attractive manner, but also utilize streaming video to enrich the web interface.",
                "Users are able to view pre-recorded and live newscasts on CNN, watch sports highlights on ESPN, and even search through large collection of videos on Google Video.",
                "To allow applications to provide efficient video playback, interfaces have been created in display systems that allow video device drivers to expose their hardware capabilities back to the applications. pTHINC takes advantage of these interfaces and its virtual device driver approach to provide a virtual bridge between the remote client and its hardware and the applications, and transparently support video playback.",
                "On top of this architecture, pTHINC uses the YUV colorspace to encode the video content, which provides a number of benefits.",
                "First, it has become increasingly common for PDA video hardware to natively support YUV and be able to perform the colorspace conversion and scaling automatically.",
                "As a result, pTHINC is able to provide fullscreen video playback without any performance hits.",
                "Second, the use of YUV allows for a more efficient representation of RGB data without loss of quality, by taking advantage of the human eyes ability to better distinguish differences in brightness than in color.",
                "In particular, pTHINC uses the YV12 format, which allows full color RGB data to be encoded using just 12 bits per pixel.",
                "Third, YUV data is produced as one of the last steps of the decoding process of most video codecs, allowing pTHINC to provide video playback in a manner that is format independent.",
                "Finally, even if the PDAs video hardware is unable to accelerate playback, the colorspace conversion process is simple enough that it does not impose unreasonable requirements on the PDA.",
                "A more concrete example of how pTHINC leverages the PDA video hardware to support video playback can be seen in our prototype implementation on the popular Dell Axim X51v PDA, which is equipped with the Intel 2700G multimedia accelerator.",
                "In this case, pTHINC creates an offscreen buffer in video memory and writes and reads from this memory region data on the YV12 format.",
                "When a new video frame arrives, video data is copied from the buffer to Figure 2: Experimental Testbed an overlay surface in video memory, which is independent of the normal surface used for traditional drawing.",
                "As the YV12 data is put onto the overlay, the Intel accelerator automatically performs both colorspace conversion and scaling.",
                "By using the overlay surface, pTHINC has no need to redraw the screen once video playback is over since the overlapped surface is unaffected.",
                "In addition, specific overlay regions can be manipulated by leveraging the video hardware, for example to perform hardware linear interpolation to smooth out the frame and display it fullscreen, and to do automatic rotation when the client runs in landscape mode. 4.",
                "EXPERIMENTAL RESULTS We have implemented a pTHINC prototype that runs the client on widely-used Windows Mobile-based Pocket PC devices and the server on both Windows and Linux operating systems.",
                "To demonstrate its effectiveness in supporting mobile wireless web applications, we have measured its performance on web applications.",
                "We present experimental results on different PDA devices for two popular web applications, browsing web pages and playing video content from the web.",
                "We compared pTHINC against native web applications running locally on the PDA to demonstrate the improvement that pTHINC can provide over the traditional fat-client approach.",
                "We also compared pTHINC against three of the most widely used thin clients that can run on PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] and VNC (Virtual Network Computing) [16].",
                "We follow common practice and refer to Citrix MetaFrameXP and Microsoft Remote Desktop by their respective remote display protocols, ICA (Independent Computing Architecture) and RDP (Remote Desktop Protocol). 4.1 Experimental Testbed We conducted our web experiments using two different wireless Pocket PC PDAs in an isolated Wi-Fi network testbed, as shown in Figure 2.",
                "The testbed consisted of two PDA client devices, a packet monitor, a thin-client server, and a web server.",
                "Except for the PDAs, all of the other machines were IBM Netfinity 4500R servers with dual 933 MHz Intel PIII CPUs and 512 MB RAM and were connected on a switched 100 Mbps FastEthernet network.",
                "The web server used was Apache 1.3.27, the network emulator was NISTNet 2.0.12, and the packet monitor was Ethereal 0.10.9.",
                "The PDA clients connected to the testbed through a 802.11b Lucent Orinoco AP-2000 wireless access point.",
                "All experiments using the wireless network were conducted within ten feet of the access point, so we considered the amount of packet loss to be negligible in our experiments.",
                "Two Pocket PC PDAs were used to provide results across both older, less powerful models and newer higher performance models.",
                "The older model was a Dell Axim X5 with 147 Client 1024×768 640×480 Depth Resize Clip RDP no yes 8-bit no yes VNC yes yes 16-bit no no ICA yes yes 16-bit yes no pTHINC yes yes 24-bit yes no Table 2: Thin-client Testbed Configuration Setting a 400 MHz Intel XScale PXA255 CPU and 64 MB RAM running Windows Mobile 2003 and a Dell TrueMobile 1180 2.4Ghz CompactFlash card for wireless networking.",
                "The newer model was a Dell Axim X51v with a 624 MHz Intel XScale XPA270 CPU and 64 MB RAM running Windows Mobile 5.0 and integrated 802.11b wireless networking.",
                "The X51v has an Intel 2700G multimedia accelerator with 16MB video memory.",
                "Both PDAs are capable of 16-bit color but have different screen sizes and display resolutions.",
                "The X5 has a 3.5 inch diagonal screen with 240×320 resolution.",
                "The X51v has a 3.7 inch diagonal screen with 480×640.",
                "The four thin clients that we used support different levels of display quality as summarized in Table 2.",
                "The RDP client only supports a fixed 640×480 display resolution on the server with 8-bit color depth, while other platforms provide higher levels of display quality.",
                "To provide a fair comparison across all platforms, we conducted our experiments with thin-client sessions configured for two possible resolutions, 1024×768 and 640×480.",
                "Both ICA and VNC were configured to use the native PDA resolution of 16-bit color depth.",
                "The current pTHINC prototype uses 24-bit color directly and the client downsamples updates to the 16-bit color depth available on the PDA.",
                "RDP was configured using only 8-bit color depth since it does not support any better color depth.",
                "Since both pTHINC and ICA provide the ability to view the display resized to fit the screen, we measured both clients with and without the display resized to fit the PDA screen.",
                "Each thin client was tested using landscape rather than portrait mode when available.",
                "All systems run on the X51v could run in landscape mode because the hardware provides a landscape mode feature.",
                "However, the X5 does not provide this functionality.",
                "Only pTHINC directly supports landscape mode, so it was the only system that could run in landscape mode on both the X5 and X51v.",
                "To provide a fair comparison, we also standardized on common hardware and operating systems whenever possible.",
                "All of the systems used the Netfinity server as the thin-client server.",
                "For the two systems designed for Windows servers, ICA and RDP, we ran Windows 2003 Server on the server.",
                "For the other systems which support X-based servers, VNC and pTHINC, we ran the Debian Linux Unstable distribution with the Linux 2.6.10 kernel on the server.",
                "We used the latest thin-client server versions available on each platform at the time of our experiments, namely Citrix MetaFrame XP Server for Windows Feature Release 3, Microsoft Remote Desktop built into Windows XP and Windows 2003 using RDP 5.2, and VNC 4.0. 4.2 Application Benchmarks We used two web application benchmarks for our experiments based on two common application scenarios, browsing web pages and playing video content from the web.",
                "Since many thin-client systems including two of the ones tested are closed and proprietary, we measured their performance in a noninvasive manner by capturing network traffic with a packet monitor and using a variant of slow-motion benchmarking [13] previously developed to measure thin-client performance in PDA environments [10].",
                "This measurement methodology accounts for both the display decoupling that can occur between client and server in thin-client systems as well as client processing time, which may be significant in the case of PDAs.",
                "To measure web browsing performance, we used a web browsing benchmark based on the Web Text Page Load Test from the Ziff-Davis i-Bench benchmark suite [7].",
                "The benchmark consists of JavaScript controlled load of 55 pages from the web server.",
                "The pages contain both text and graphics with pages varying in size.",
                "The graphics are embedded images in GIF and JPEG formats.",
                "The original i-Bench benchmark was modified for slow-motion benchmarking by introducing delays of several seconds between the pages using JavaScript.",
                "Then two tests were run, one where delays where added between each page, and one where pages where loaded continuously without waiting for them to be displayed on the client.",
                "In the first test, delays were sufficiently adjusted in each case to ensure that each page could be received and displayed on the client completely without temporal overlap in transferring the data belonging to two consecutive pages.",
                "We used the packet monitor to record the packet traffic for each run of the benchmark, then used the timestamps of the first and last packet in the trace to obtain our latency measures [10].",
                "The packet monitor also recorded the amount of data transmitted between the client and the server.",
                "The ratio between the data traffic in the two tests yields a scale factor.",
                "This scale factor shows the loss of data between the server and the client due to inability of the client to process the data quickly enough.",
                "The product of the scale factor with the latency measurement produces the true latency accounting for client processing time.",
                "To run the web browsing benchmark, we used Mozilla Firefox 1.0.4 running on the thin-client server for the thin clients, and Windows Internet Explorer (IE) Mobile for 2003 and Mobile for 5.0 for the native browsers on the X5 and X51v PDAs, respectively.",
                "In all cases, the web browser used was sized to fill the entire display region available.",
                "To measure video playback performance, we used a video benchmark that consisted of playing a 34.75s MPEG-1 video clip containing a mix of news and entertainment programming at full-screen resolution.",
                "The video clip is 5.11 MB and consists of 834 352x240 pixel frames with an ideal frame rate of 24 frames/sec.",
                "We measured video performance using slow-motion benchmarking by monitoring resulting packet traffic at two playback rates, 1 frames/second (fps) and 24 fps, and comparing the results to determine playback delays and frame drops that occur at 24 fps to measure overall video quality [13].",
                "For example, 100% quality means that all video frames were played at real-time speed.",
                "On the other hand, 50% quality could mean that half the video data was dropped, or that the clip took twice as long to play even though all of the video data was displayed.",
                "To run the video benchmark, we used Windows Media Player 9 for Windows-based thin-client servers, MPlayer 1.0 pre 6 for X-based thin-client servers, and Windows Media Player 9 Mobile and 10 Mobile for the native video players running locally on the X5 and X51v PDAs, respectively.",
                "In all cases, the video player used was sized to fill the entire display region available. 4.3 Measurements Figures 3 and 4 show the results of running the web brows148 0 1 10 100 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL Latency(s) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 3: Browsing Benchmark: Average Page Latency ing benchmark.",
                "For each platform, we show results for up to four different configurations, two on the X5 and two on the X51v, depending on whether each configuration was supported.",
                "However, not all platforms could support all configurations.",
                "The local browser only runs at the display resolution of the PDA, 480×680 or less for the X51v and the X5.",
                "RDP only runs at 640×480.",
                "Neither platform could support 1024×768 display resolution.",
                "ICA only ran on the X5 and could not run on the X51v because it did not work on Windows Mobile 5.",
                "Figure 3 shows the average latency per web page for each platform. pTHINC provides the lowest average web browsing latency on both PDAs.",
                "On the X5, pTHINC performs up to 70 times better than other thin-client systems and 8 times better than the local browser.",
                "On the X51v, pTHINC performs up to 80 times better than other thin-client systems and 7 times better than the native browser.",
                "In fact, all of the thin clients except VNC outperform the local PDA browser, demonstrating the performance benefits of the thin-client approach.",
                "Usability studies have shown that web pages should take less than one second to download for the user to experience an uninterrupted web browsing experience [14].",
                "The measurements show that only the thin clients deliver subsecond web page latencies.",
                "In contrast, the local browser requires more than 3 seconds on average per web page.",
                "The local browser performs worse since it needs to run a more limited web browser to process the HTML, JavaScript, and do all the rendering using the limited capabilities of the PDA.",
                "The thin clients can take advantage of faster server hardware and a highly tuned web browser to process the web content much faster.",
                "Figure 3 shows that RDP is the next fastest platform after pTHINC.",
                "However, RDP is only able to run at a fixed resolution of 640×480 and 8-bit color depth.",
                "Furthermore, RDP also clips the display to the size of the PDA screen so that it does not need to send updates that are not visible on the PDA screen.",
                "This provides a performance benefit assuming the remaining web content is not viewed, but degrades performance when a user scrolls around the display to view other web content.",
                "RDP achieves its performance with significantly lower display quality compared to the other thin clients and with additional display clipping not used by other systems.",
                "As a result, RDP performance alone does not provide a complete comparison with the other platforms.",
                "In contrast, pTHINC provides the fastest performance while at the same time providing equal or better display quality than the other systems. 0 1 10 100 1000 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL DataSize(KB) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 4: Browsing Benchmark: Average Page Data Transferred Since VNC and ICA provide similar display quality to pTHINC, these systems provide a more fair comparison of different thin-client approaches.",
                "ICA performs worse in part because it uses higher-level display primitives that require additional client processing costs.",
                "VNC performs worse in part because it loses display data due to its client-pull delivery mechanism and because of the client processing costs in decompressing raw pixel primitives.",
                "In both cases, their performance was limited in part because their PDA clients were unable to keep up with the rate at which web pages were being displayed.",
                "Figure 3 also shows measurements for those thin clients that support resizing the display to fit the PDA screen, namely ICA and pTHINC.",
                "Resizing requires additional processing, which results in slower average web page latencies.",
                "The measurements show that the additional delay incurred by ICA when resizing versus not resizing is much more substantial than for pTHINC.",
                "ICA performs resizing on the slower PDA client.",
                "In contrast, pTHINC leverage the more powerful server to do resizing, reducing the performance difference between resizing and not resizing.",
                "Unlike ICA, pTHINC is able to provide subsecond web page download latencies in both cases.",
                "Figure 4 shows the data transferred in KB per page when running the slow-motion version of the tests.",
                "All of the platforms have modest data transfer requirements of roughly 100 KB per page or less.",
                "This is well within the bandwidth capacity of Wi-Fi networks.",
                "The measurements show that the local browser does not transfer the least amount of data.",
                "This is surprising as HTML is often considered to be a very compact representation of content.",
                "Instead, RDP is the most bandwidth efficient platform, largely as a result of using only 8-bit color depth and screen clipping so that it does not transfer the entire web page to the client. pTHINC overall has the largest data requirements, slightly more than VNC.",
                "This is largely a result of the current pTHINC prototypes lack of native support for 16-bit color data in the wire protocol.",
                "However, this result also highlights pTHINCs performance as it is faster than all other systems even while transferring more data.",
                "Furthermore, as newer PDA models support full 24-bit color, these results indicate that pTHINC will continue to provide good web browsing performance.",
                "Since display usability and quality are as important as performance, Figures 5 to 8 compare screenshots of the different thin clients when displaying a web page, in this case from the popular BBC news website.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode 149 Figure 5: Browser Screenshot: RDP 640x480 Figure 6: Browser Screenshot: VNC 1024x768 Figure 7: Browser Screenshot: ICA Resized 1024x768 Figure 8: Browser Screenshot: pTHINC Resized 1024x768 using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "While the screenshots lack the visual fidelity of the actual device display, several observations can be made.",
                "Figure 5 shows that RDP does not support fullscreen mode and wastes lots of screen space for controls and UI elements, requiring the user to scroll around in order to access the full contents of the web browsing session.",
                "Figure 6 shows that VNC makes better use of the screen space and provides better display quality, but still forces the user to scroll around to view the web page due to its lack of resizing support.",
                "Figure 7 shows ICAs ability to display the full web page given its resizing support, but that its lack of landscape capability and poorer resize algorithm significantly compromise display quality.",
                "In contrast, Figure 8 shows pTHINC using resizing to provide a high quality fullscreen display of the full width of the web page. pTHINC maximizes the entire viewing region by moving all controls to the PDA buttons.",
                "In addition, pTHINC leverages the server computational power to use a high quality resizing algorithm to resize the display to fit the PDA screen without significant overhead.",
                "Figures 9 and 10 show the results of running the video playback benchmark.",
                "For each platform except ICA, we show results for an X5 and X51v configuration.",
                "ICA could not run on the X51v as noted earlier.",
                "The measurements were done using settings that reflected the environment a user would have to access a web session from both a desktop computer and a PDA.",
                "As such, a 1024×768 server display resolution was used whenever possible and the video was shown at fullscreen.",
                "RDP was limited to 640×480 display resolution as noted earlier.",
                "Since viewing the entire video display is the only really usable option, we resized the display to fit the PDA screen for those platforms that supported this feature, namely ICA and pTHINC.",
                "Figure 9 shows the video quality for each platform. pTHINC is the only thin client able to provide perfect video playback quality, similar to the native PDA video player.",
                "All of the other thin clients deliver very poor video quality.",
                "With the exception of RDP on the X51v which provided unacceptable 35% video quality, none of the other systems were even able to achieve 10% video quality.",
                "VNC and ICA have the worst quality at 8% on the X5 device. pTHINCs native video support enables superior video performance, while other thin clients suffer from their inability to distinguish video from normal display updates.",
                "They attempt to apply ineffective and expensive compression algorithms on the video data and are unable to keep up with the stream of updates generated, resulting in dropped frames or long playback times.",
                "VNC suffers further from its client-pull update model because video frames are generated faster than the rate at which the client can process and send requests to the server to obtain the next display update.",
                "Figure 10 shows the total data transferred during 150 0% 20% 40% 60% 80% 100% pTHINCICAVNCRDPLOCAL VideoQuality Platform Axim X5 Axim X51v Figure 9: Video Benchmark: Fullscreen Video Quality 0 1 10 100 pTHINCICAVNCRDPLOCAL VideoDataSize(MB) Platform Axim X5 Axim X51v Figure 10: Video Benchmark: Fullscreen Video Data video playback for each system.",
                "The native player is the most bandwidth efficient platform, sending less than 6 MB of data, which corresponds to about 1.2 Mbps of bandwidth. pTHINCs 100% video quality requires about 25 MB of data which corresponds to a bandwidth usage of less than 6 Mbps.",
                "While the other thin clients send less data than THINC, they do so because they are dropping video data, resulting in degraded video quality.",
                "Figures 11 to 14 compare screenshots of the different thin clients when displaying the video clip.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "Figures 11 and 12 show that RDP and VNC are unable to display the entire video frame on the PDA screen.",
                "RDP wastes screen space for UI elements and VNC only shows the top corner of the video frame on the screen.",
                "Figure 13 shows that ICA provides resizing to display the entire video frame, but did not proportionally resize the video data, resulting in strange display artifacts.",
                "In contrast, Figure 14 shows pTHINC using resizing to provide a high quality fullscreen display of the entire video frame. pTHINC provides visually more appealing video display than RDP, VNC, or ICA. 5.",
                "RELATED WORK Several studies have examined the web browsing performance of thin-client computing [13, 19, 10].",
                "The ability for thin clients to improve web browsing performance on wireless PDAs was first quantitatively demonstrated in a previous study by one of the authors [10].",
                "This study demonstrated that thin clients can provide both faster web browsing performance and greater web browsing functionality.",
                "The study considered a wide range of web content including content from medical information systems.",
                "Our work builds on this previous study and consider important issues such as how usable existing thin clients are in PDA environments, the trade-offs between thin-client usability and performance, performance across different PDA devices, and the performance of thin clients on common web-related applications such as video.",
                "Many thin clients have been developed and some have PDA clients, including Microsofts Remote Desktop [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5], and Tarantella [18].",
                "These systems were first designed for desktop computing and retrofitted for PDAs.",
                "Unlike pTHINC, they do not address key system architecture and usability issues important for PDAs.",
                "This limits their display quality, system performance, available screen space, and overall usability on PDAs. pTHINC builds on previous work by two of the authors on THINC [1], extending the server architecture and introducing a client interface and usage model to efficiently support PDA devices for mobile web applications.",
                "Other approaches to improve the performance of mobile wireless web browsing have focused on using transcoding and caching proxies in conjunction with the fat client model [11, 9, 4, 8].",
                "They work by pushing functionality to external proxies, and using specialized browsing applications on the PDA device that communicate with the proxy.",
                "Our thinclient approach differs fundamentally from these fat-client approaches by pushing all web browser logic to the server, leveraging existing investments in desktop web browsers and helper applications to work seamlessly with production systems without any additional proxy configuration or web browser modifications.",
                "With the emergence of web browsing on small display devices, web sites have been redesigned using mechanisms like WAP and specialized native web browsers have been developed to tailor the needs of these devices.",
                "Recently, Opera has developed the Opera Mini [15] web browser, which uses an approach similar to the thin-client model to provide access across a number of mobile devices that would normally be incapable of running a web browser.",
                "Instead of requiring the device to process web pages, it uses a remote server to pre-process the page before sending it to the phone. 6.",
                "CONCLUSIONS We have introduced pTHINC, a thin-client architecture for wireless PDAs. pTHINC provides key architectural and usability mechanisms such as server-side screen resizing, clientside screen rotation using simple copy techniques, YUV video support, and maximizing screen space for display updates and leveraging existing PDA control buttons for UI elements. pTHINC transparently supports traditional desktop browsers and their helper applications on PDA devices and desktop machines, providing mobile users with ubiquitous access to a consistent, personalized, and full-featured web environment across heterogeneous devices.",
                "We have implemented pTHINC and measured its performance on web applications compared to existing thin-client systems and native web applications.",
                "Our results on multiple mobile wireless devices demonstrate that pTHINC delivers web browsing performance up to 80 times better than existing thin-client systems, and 8 times better than a native PDA browser.",
                "In addition, pTHINC is the only PDA thin client 151 Figure 11: Video Screenshot: RDP 640x480 Figure 12: Video Screenshot: VNC 1024x768 Figure 13: Video Screenshot: ICA Resized 1024x768 Figure 14: Video Screenshot: pTHINC Resized 1024x768 that transparently provides full-screen, full frame rate video playback, making web sites with multimedia content accessible to mobile web users. 7.",
                "ACKNOWLEDGEMENTS This work was supported in part by NSF ITR grants CCR0219943 and CNS-0426623, and an IBM SUR Award. 8.",
                "REFERENCES [1] R. Baratto, L. Kim, and J. Nieh.",
                "THINC: A Virtual Display Architecture for Thin-Client Computing.",
                "In Proceedings of the 20th ACM Symposium on Operating Systems Principles (SOSP), Oct. 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius, and A. Muir.",
                "Microsoft Windows NT Server 4.0, Terminal Server Edition: Technical Reference.",
                "Microsoft Press, Redmond, WA, 1999. [4] A.",
                "Fox, I. Goldberg, S. D. Gribble, and D. C. Lee.",
                "Experience With Top Gun Wingman: A Proxy-Based Graphical Web Browser for the 3Com PalmPilot.",
                "In Proceedings of Middleware 98, Lake District, England, September 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Health Insurance Portability and Accountability Act. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench version 1.5. http: //etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi.",
                "On proxy agents, mobility, and web access.",
                "Mobile Networks and Applications, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon, and A. Ortega.",
                "Design and Implementation of a Soft Caching Proxy.",
                "Computer Networks and ISDN Systems, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana, and S. Varshneya.",
                "Improving Web Browsing on Wireless PDAs Using Thin-Client Computing.",
                "In Proceedings of the 13th International World Wide Web Conference (WWW), May 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham, and P. Shenoy.",
                "TranSquid: Transcoding and caching proxy for heterogenous ecommerce environments.",
                "In Proceedings of the 12th IEEE Workshop on Research Issues in Data Engineering (RIDE 02), Feb. 2002. [12] .NET VNC Viewer for PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang, and N. Novik.",
                "Measuring Thin-Client Performance Using Slow-Motion Benchmarking.",
                "ACM Trans.",
                "Computer Systems, 21(1):87-115, Feb. 2003. [14] J. Nielsen.",
                "Designing Web Usability.",
                "New Riders Publishing, Indianapolis, IN, 2000. [15] Opera Mini Browser. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood, and A. Hopper.",
                "Virtual Network Computing.",
                "IEEE Internet Computing, 2(1), Jan./Feb. 1998. [17] R. W. Scheifler and J. Gettys.",
                "The X Window System.",
                "ACM Trans.",
                "Gr., 5(2):79-106, Apr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla, and M. Sajjadpour.",
                "Web Browsing Performance of Wireless Thin-Client Computing.",
                "In Proceedings of the 12th International World Wide Web Conference (WWW), May 2003. 152"
            ],
            "original_annotated_samples": [
                "We have developed pTHINC, a PDA thinclient solution that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide <br>high-fidelity display</br> and seamless mobility across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available screen resolution for application display."
            ],
            "translated_annotated_samples": [
                "Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una <br>visualización de alta fidelidad</br> y movilidad fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la resolución de pantalla disponible para la visualización de aplicaciones."
            ],
            "translated_text": "pTHINC: Una arquitectura de cliente ligero para la web inalámbrica móvil Joeng Kim, Ricardo A. Baratto y Jason Nieh Departamento de Ciencias de la Computación Universidad de Columbia, Nueva York, NY, EE. UU. {jk2438, ricardo, nieh}@cs.columbia.edu RESUMEN Aunque las aplicaciones web están ganando popularidad en las PDAs inalámbricas móviles, los navegadores web en estos sistemas pueden ser bastante lentos y a menudo carecen de funcionalidad adecuada para acceder a muchos sitios web. Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una <br>visualización de alta fidelidad</br> y movilidad fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la resolución de pantalla disponible para la visualización de aplicaciones. Hemos implementado pTHINC en Windows Mobile y evaluado su rendimiento en dispositivos móviles inalámbricos. Nuestros resultados comparados con los navegadores web PDA locales y otros enfoques de cliente ligero demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero PDA que soporta de manera efectiva aplicaciones de ayuda del navegador cruciales como la reproducción de video. Categorías y Descriptores de Asunto: C.2.4 Comunicación de Computadoras-Redes: Sistemas Distribuidos - cliente/servidor Términos Generales: Diseño, Experimentación, Rendimiento 1. La creciente ubicuidad de las redes inalámbricas y la disminución del costo del hardware están impulsando una proliferación de dispositivos móviles inalámbricos portátiles, tanto como asistentes digitales personales (PDA) inalámbricos independientes y dispositivos populares integrados de PDA/teléfono celular. Estos dispositivos están permitiendo nuevas formas de computación y comunicación móvil. Los proveedores de servicios están aprovechando estos dispositivos para ofrecer acceso web omnipresente, y los usuarios de la web móvil a menudo ya utilizan estos dispositivos para acceder a información habilitada para la web, como noticias, correo electrónico, guías de viaje localizadas y mapas. Es probable que en unos pocos años, la mayoría de los dispositivos que accedan a la web sean móviles. Los usuarios suelen acceder al contenido web ejecutando un navegador web y aplicaciones auxiliares asociadas localmente en la PDA. Aunque existen navegadores web nativos para PDAs, ofrecen un rendimiento deficiente y tienen un conjunto de funciones mucho más pequeño y una funcionalidad más limitada que sus contrapartes de computadoras de escritorio [10]. Como resultado, los navegadores web de PDA a menudo no pueden mostrar el contenido web de sitios web que utilizan tecnologías web más avanzadas para ofrecer una experiencia web más rica. Este problema fundamental surge por dos razones. Primero, debido a que las PDAs tienen un entorno de hardware/software completamente diferente de las computadoras de escritorio tradicionales, las aplicaciones web necesitan ser reescritas y personalizadas para las PDAs si es posible, duplicando los costos de desarrollo. Debido a que el mercado de aplicaciones de escritorio es más grande y maduro, la mayoría del esfuerzo de desarrollo generalmente se destina a las aplicaciones de escritorio, lo que resulta en una mayor funcionalidad y rendimiento que sus contrapartes de PDA. En segundo lugar, las PDAs tienen un entorno con recursos más limitados que las computadoras de escritorio tradicionales para ofrecer un factor de forma más pequeño y una vida útil de la batería más larga. Los navegadores web de escritorio son aplicaciones grandes y complejas que no pueden ejecutarse en una PDA. En cambio, los desarrolladores se ven obligados a reducir significativamente estas navegadores web para ofrecer un navegador web PDA utilizable, lo que limita la funcionalidad del navegador PDA. La computación de cliente ligero proporciona un enfoque alternativo para habilitar el acceso web ubicuo desde dispositivos móviles. Un sistema informático de cliente ligero consiste en un servidor y un cliente que se comunican a través de una red utilizando un protocolo de visualización remota. El protocolo permite que las pantallas gráficas se virtualicen y se sirvan a través de una red a un dispositivo cliente, mientras que la lógica de la aplicación se ejecuta en el servidor. Usando el protocolo de visualización remota, el cliente transmite la entrada del usuario al servidor, y el servidor devuelve actualizaciones de pantalla de las aplicaciones del servidor al cliente. Utilizando un modelo de cliente ligero para dispositivos móviles de mano, las PDAs pueden convertirse en clientes simples sin estado que aprovechan las capacidades del servidor remoto para ejecutar navegadores web y otras aplicaciones auxiliares. El modelo de cliente ligero proporciona varios beneficios importantes para la web inalámbrica móvil. Primero, las aplicaciones web estándar de escritorio pueden utilizarse para entregar contenido web a PDAs sin necesidad de reescribir o adaptar las aplicaciones para ejecutarse en una PDA, lo que reduce los costos de desarrollo y aprovecha las inversiones existentes en software. Segundo, las aplicaciones web complejas pueden ejecutarse en servidores potentes en lugar de ejecutarse en versiones simplificadas en PDAs con recursos más limitados, lo que proporciona una mayor funcionalidad y un mejor rendimiento [10]. Tercero, las aplicaciones web pueden aprovechar servidores con redes más rápidas y mejor conectividad, lo que mejora aún más el rendimiento de la aplicación. En cuarto lugar, las PDAs pueden ser dispositivos aún más simples ya que no necesitan realizar una lógica de aplicación compleja, lo que potencialmente reduce el consumo de energía y extiende la vida útil de la batería. Finalmente, los clientes ligeros PDA pueden ser dispositivos prácticamente sin estado que no necesitan ser respaldados o restaurados, requieren casi ningún mantenimiento o actualizaciones, y no almacenan datos sensibles que puedan perderse o ser robados. Este modelo proporciona una vía viable para que las organizaciones médicas cumplan con las regulaciones de HIPAA mientras incorporan dispositivos móviles en sus operaciones diarias. A pesar de estas posibles ventajas, los clientes ligeros no han podido ofrecer la gama completa de estos beneficios al entregar aplicaciones web a dispositivos móviles portátiles. Los thin clients existentes no fueron diseñados para PDAs y no tienen en cuenta problemas importantes de usabilidad en el contexto de dispositivos de factor de forma pequeño, lo que resulta en dificultades para navegar por el contenido web mostrado. Además, los clientes ligeros existentes son ineficaces para proporcionar movilidad fluida en la mezcla heterogénea de tamaños de pantalla y resoluciones de dispositivos. Si bien los clientes ligeros existentes ya pueden ofrecer un rendimiento más rápido que los navegadores web nativos de PDA al entregar contenido web HTML, no admiten de manera efectiva aplicaciones web auxiliares más intensivas en visualización, como videos multimedia, que cada vez son una parte integral del contenido web disponible. Para aprovechar todo el potencial de la informática de cliente ligero en la provisión de la web inalámbrica móvil en PDAs, hemos desarrollado pTHINC (PDA THin-client InterNet Computing). pTHINC se basa en nuestro trabajo previo en THINC [1] para proporcionar una arquitectura de cliente ligero para dispositivos móviles de mano. pTHINC virtualiza y redimensiona la pantalla en el servidor para entregar de manera eficiente actualizaciones de pantalla de alta fidelidad a una amplia gama de clientes diferentes, tamaños de pantalla y orientaciones de pantalla, incluidos los modos de visualización en vertical y horizontal. Esto permite a pTHINC proporcionar la misma sesión web persistente en diferentes dispositivos de cliente. Por ejemplo, pTHINC puede proporcionar la misma sesión de navegación web adecuadamente escalada para su visualización en una computadora de escritorio y una PDA, de modo que las mismas cookies, marcadores y otros metadatos estén disponibles continuamente en ambas máquinas simultáneamente. El enfoque de visualización virtual de pTHINC aprovecha la información semántica disponible en los comandos de visualización y el hardware de video del cliente para proporcionar mecanismos de visualización remota más eficientes que son cruciales para admitir aplicaciones web más intensivas en visualización. Dada la limitada resolución de pantalla en las PDA, pTHINC maximiza el uso del espacio de pantalla para la visualización remota al trasladar la funcionalidad de control de la pantalla a los botones de control de PDA fácilmente disponibles, mejorando la usabilidad del sistema. Hemos implementado pTHINC en Windows Mobile y demostrado que funciona de manera transparente con las aplicaciones existentes, sistemas de ventanas y sistemas operativos, y no requiere modificar, recompilar o volver a enlazar el software existente. Hemos evaluado cuantitativamente pTHINC frente a navegadores web PDA locales y otros enfoques de cliente ligero en dispositivos Pocket PC. Nuestros resultados experimentales demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero de PDA que soporta de manera efectiva aplicaciones esenciales de ayuda para el navegador, como la reproducción de video. Este documento presenta el diseño e implementación de pTHINC. La sección 2 describe el modelo de uso general y las características de usabilidad de pTHINC. La sección 3 presenta el diseño y la arquitectura del sistema de pTHINC. La sección 4 presenta resultados experimentales que miden el rendimiento de pTHINC en aplicaciones web y lo comparan con navegadores nativos de PDA y otros sistemas de cliente ligero de PDA populares. La sección 5 discute el trabajo relacionado. Finalmente, presentamos algunas observaciones finales. El MODELO DE USO DE pTHINC pTHINC es un sistema de cliente ligero que consiste en una aplicación de visualización de cliente simple que se ejecuta en la PDA y un servidor que se ejecuta en una PC estándar. El servidor aprovecha PCs más potentes para ejecutar navegadores web y otra lógica de aplicaciones. El cliente recibe la entrada del usuario desde el lápiz óptico y el teclado virtual de la PDA y los envía al servidor para pasarlos a las aplicaciones. Las actualizaciones de la pantalla son luego enviadas desde el servidor al cliente para mostrar al usuario. Cuando se inicia el cliente PDA pTHINC, se presenta al usuario una interfaz gráfica simple donde se pueden proporcionar información como la dirección y el puerto del servidor, la información de autenticación del usuario y la configuración de la sesión. pTHINC primero intenta conectarse al servidor y realizar el saludo necesario. Una vez que este proceso haya sido completado, pTHINC presenta al usuario la visualización más reciente de su sesión. Si la sesión no existe, se crea una nueva sesión. Las sesiones existentes pueden continuar sin problemas sin cambios en la configuración de la sesión o del servidor. A diferencia de otros sistemas de cliente ligero, pTHINC proporciona a un usuario un modelo de sesión web persistente en el que un usuario puede iniciar una sesión ejecutando un navegador web y aplicaciones asociadas en el servidor, luego desconectarse de esa sesión y volver a conectarse en cualquier momento. Cuando un usuario se reconecta a la sesión, todas las aplicaciones siguen funcionando desde donde el usuario las dejó, de modo que el usuario puede seguir trabajando como si nunca se hubiera desconectado. La capacidad de desconectarse y reconectarse a una sesión en cualquier momento es un beneficio importante para los usuarios de PDA inalámbricas móviles que pueden tener conectividad de red intermitente. El modelo de sesión web persistente de pTHINCs permite a un usuario reconectarse a una sesión web desde dispositivos distintos al que se inició originalmente la sesión web. Esto proporciona a los usuarios una movilidad fluida entre diferentes dispositivos. Si un usuario pierde su PDA, puede fácilmente usar otra PDA para acceder a su sesión web. Además, pTHINC permite a los usuarios utilizar dispositivos que no son PDA para acceder a sesiones web también. Un usuario puede acceder a la misma sesión web persistente en una PC de escritorio como en una PDA, lo que le permite al usuario utilizar la misma sesión web desde cualquier computadora. El modelo de sesión web persistente de pTHINCs aborda un problema clave encontrado por los usuarios de la web móvil, la falta de un entorno web común en diferentes computadoras. Los navegadores web a menudo almacenan información importante como marcadores, cookies e historial, lo que les permite funcionar de una manera mucho más útil. El problema que ocurre cuando un usuario se mueve entre computadoras es que estos datos, específicos de una instalación de un navegador web, no pueden moverse con el usuario. Además, los navegadores web a menudo necesitan aplicaciones auxiliares para procesar diferentes contenidos multimedia, y esas aplicaciones pueden no estar disponibles de manera consistente en todas las computadoras. pTHINC aborda este problema al permitir que un usuario utilice de forma remota el mismo entorno de navegador web y aplicaciones auxiliares desde cualquier computadora. Como resultado, pTHINC puede proporcionar un entorno de navegación web común y consistente para usuarios móviles en diferentes dispositivos sin requerirles intentar sincronizar repetidamente diferentes entornos de navegación web en múltiples máquinas. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC debe proporcionar mecanismos para admitir diferentes tamaños de pantalla y resoluciones. Con este fin, pTHINC proporciona una función de zoom que permite a un usuario acercar y alejar una pantalla y permite que la pantalla de una sesión web 144 Figura 1: teclas de acceso rápido de pTHINC se redimensione para adaptarse a la pantalla del dispositivo que se está utilizando. Por ejemplo, si el servidor está ejecutando una sesión web a 1024×768 pero el cliente es una PDA con una resolución de pantalla de 640×480, pTHINC redimensionará la pantalla del escritorio para que se ajuste a la pantalla más pequeña de la PDA. pTHINC proporciona al usuario de la PDA la opción de aumentar el tamaño de la pantalla haciendo zoom en diferentes partes de la pantalla. Los usuarios suelen estar familiarizados con el diseño general de los sitios web que visitan con frecuencia, y pueden aprovechar esta función de redimensionamiento para navegar mejor por las páginas web. Por ejemplo, un usuario puede alejarse de la pantalla para ver todo el contenido de la página y navegar por los hipervínculos, luego acercarse a una región de interés para obtener una mejor vista. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC también debe proporcionar mecanismos para admitir diferentes orientaciones de pantalla. En un entorno de escritorio, los usuarios suelen estar acostumbrados a tener las pantallas presentadas en modo horizontal, donde el ancho de la pantalla es mayor que su altura. Sin embargo, en un entorno de PDA, la elección no siempre es obvia. Algunos usuarios pueden preferir tener la pantalla en modo retrato, ya que es más fácil sostener el dispositivo en sus manos, mientras que otros pueden preferir el modo paisaje para minimizar la cantidad de desplazamiento lateral necesario para ver una página web. Para adaptarse a las preferencias de los usuarios de PDA, pTHINC proporciona una función de orientación que le permite rotar la pantalla de forma fluida entre el modo horizontal y vertical. El modo de paisaje es particularmente útil para los usuarios de pTHINC que acceden con frecuencia a sus sesiones web tanto en dispositivos de escritorio como en PDA, proporcionando a esos usuarios el mismo ajuste de paisaje familiar en diferentes dispositivos. Dado que el espacio de pantalla es un recurso relativamente escaso en las PDAs, pTHINC se ejecuta en modo de pantalla completa para maximizar el área de pantalla disponible para mostrar la sesión web. Para poder utilizar toda la pantalla en la PDA y aún así permitir al usuario controlar e interactuar con ella, pTHINC reutiliza los botones de acceso directo típicos que se encuentran en las PDAs para realizar todas las funciones de control disponibles para el usuario. Los botones utilizados por pTHINC no requieren ningún cambio en el entorno del sistema operativo; simplemente son interceptados por la aplicación cliente de pTHINC cuando se presionan. La Figura 1 muestra cómo pTHINC utiliza los botones de acceso directo para proporcionar una navegación sencilla y mejorar la experiencia del usuario en general. Estos botones no son específicos del dispositivo, y el diseño mostrado es común en dispositivos PocketPC ampliamente utilizados. pTHINC proporciona seis accesos directos para apoyar su modelo de uso: • Rotar pantalla: El botón de grabación en el borde izquierdo se utiliza para rotar la pantalla entre modo retrato y modo paisaje cada vez que se presiona el botón. • Alejar: El botón más a la izquierda en la parte inferior delantera se utiliza para alejar la visualización de la sesión web proporcionando una vista general de la sesión web. • Acercar: El segundo botón más a la izquierda en la parte inferior delantera se utiliza para acercar la visualización de la sesión web para ver más claramente el contenido de interés. • Desplazamiento direccional: El botón central en la parte inferior delantera se utiliza para desplazarse alrededor de la visualización utilizando un solo botón de control de una manera que ya es familiar para los usuarios de PDA. Esta función es particularmente útil cuando el usuario ha ampliado una región de la pantalla de tal manera que solo una parte de la pantalla es visible en la pantalla. • Mostrar/Ocultar Teclado: El segundo botón más a la derecha en la parte inferior frontal se utiliza para mostrar un teclado virtual dibujado en la pantalla para dispositivos que no tienen teclado físico. El teclado virtual utiliza mecanismos estándar del sistema operativo de PDA, proporcionando portabilidad entre diferentes entornos de PDA. • Cerrar sesión: El botón más a la derecha en la parte inferior frontal se utiliza para desconectarse de la sesión de pTHINC. pTHINC utiliza la pantalla táctil de la PDA, el lápiz óptico y mecanismos estándar de interfaz de usuario para proporcionar una metáfora de punto y clic de la interfaz de usuario similar a la proporcionada por el ratón en un entorno de computación de escritorio tradicional. pTHINC no utiliza un cursor ya que los entornos de PDA no lo proporcionan. En cambio, un usuario puede usar el lápiz táctil para tocar diferentes secciones de la pantalla táctil y señalar el enfoque de entrada. Un toque único en la pantalla táctil genera un evento de clic de ratón correspondiente. Un doble toque en la pantalla táctil genera un evento de doble clic del ratón correspondiente. pTHINC proporciona emulación de ratón de dos botones al usar el lápiz óptico para presionar la pantalla durante un segundo y generar un clic derecho del ratón. Todas estas acciones son idénticas a la forma en que los usuarios ya interactúan con las aplicaciones de PDA en el entorno común de PocketPC. En la navegación web, los usuarios pueden hacer clic en hipervínculos y enfocarse en cuadros de entrada simplemente tocando el área de interés deseada en la pantalla. A diferencia de los navegadores web PDA locales y otras aplicaciones PDA, pTHINC aprovecha metáforas de interfaz de usuario de escritorio más potentes para permitir a los usuarios manipular múltiples ventanas de aplicación abiertas en lugar de estar limitados a una sola ventana de aplicación en un momento dado. Esto proporciona una mayor flexibilidad de navegación más allá de lo que está actualmente disponible en los dispositivos PDA. Similar a un entorno de escritorio, las ventanas del navegador y otras ventanas de aplicaciones pueden ser movidas al presionar y arrastrar el lápiz óptico de manera similar a un ratón. 3. La arquitectura del sistema pTHINC se basa en la arquitectura de visualización remota THINC para proporcionar un sistema de cliente ligero para PDAs. pTHINC virtualiza la visualización en el servidor aprovechando la capa de abstracción del dispositivo de video, que se encuentra por debajo del servidor de ventanas y por encima del framebuffer. Este es un nivel de dispositivo bien definido y de bajo nivel que depende del dispositivo y expone el hardware de video al sistema de visualización. pTHINC logra esto a través de un controlador de pantalla virtual simple que intercepta comandos de dibujo, los empaqueta y los envía a través de la red. Mientras que otros enfoques de cliente ligero interceptan comandos de visualización en otras capas del subsistema de visualización, el enfoque de virtualización de pantalla de pTHINC proporciona algunos beneficios clave para admitir eficientemente a los clientes de PDA. Por ejemplo, interceptar comandos de visualización en una capa superior entre aplicaciones y el sistema de ventanas, como se hace en X [17], requiere replicar y ejecutar una gran cantidad de funcionalidades en la PDA que tradicionalmente son proporcionadas por el sistema de ventanas de escritorio. Dada la magnitud y complejidad de los sistemas de ventanas tradicionales, intentar replicar esta funcionalidad en el entorno restringido de una PDA habría resultado ser una tarea desafiante, y quizás inviable. Además, las aplicaciones y el sistema de ventanas a menudo requieren una sincronización precisa en su funcionamiento, y imponer una red inalámbrica entre ellos al ejecutar las aplicaciones en el servidor y el sistema de ventanas en el cliente degradaría significativamente el rendimiento. Por otro lado, interceptar en una capa inferior extrayendo píxeles del framebuffer a medida que se renderizan proporciona una solución simple que requiere muy poca funcionalidad en el cliente de PDA, pero también puede resultar en un rendimiento degradado. La razón es que para cuando el servidor de visualización remota intenta enviar actualizaciones de pantalla, ha perdido toda la información semántica que podría haberle ayudado a codificar de manera eficiente, y debe recurrir a utilizar un mecanismo de codificación genérico y costoso en el servidor, así como un mecanismo de decodificación potencialmente costoso en el cliente de PDA limitado. A diferencia de los enfoques de intercepción de alto y bajo nivel, el enfoque de pTHINCs de interceptar en el controlador del dispositivo proporciona un equilibrio efectivo entre la simplicidad del cliente y del servidor, y la capacidad de codificar y decodificar de manera eficiente las actualizaciones de pantalla. Al utilizar un enfoque de visualización virtual de bajo nivel, pTHINC puede codificar de manera eficiente los comandos de visualización de la aplicación utilizando solo un pequeño conjunto de comandos de bajo nivel. En un entorno de PDA, este conjunto de comandos proporciona un componente crucial para mantener la simplicidad del cliente en el entorno de PDA con recursos limitados. Los comandos de visualización se muestran en la Tabla 1 y funcionan de la siguiente manera. COPY instruye al cliente a copiar una región de la pantalla desde su framebuffer local a otra ubicación. Este comando mejora la experiencia del usuario al acelerar el desplazamiento y el movimiento de ventanas opacas sin necesidad de reenviar datos de pantalla desde el servidor. SFILL, PFILL y BITMAP son comandos que pintan una región de tamaño fijo en la pantalla. Son útiles para acelerar la visualización de fondos de ventanas sólidas, patrones de escritorio, fondos de páginas web, dibujo de texto y ciertas operaciones en programas de manipulación de gráficos. SFILL llena una región considerable en la pantalla con un solo color. PFILL replica una baldosa sobre una región de la pantalla. BITMAP realiza un relleno utilizando un mapa de bits de unos y ceros como un estipulado para aplicar un color de primer plano y de fondo. Finalmente, RAW se utiliza para transmitir datos de píxeles no codificados que se mostrarán textualmente en una región de la pantalla. Este comando se invoca como último recurso si el servidor no puede emplear ningún otro comando, y es el único comando que puede ser comprimido para mitigar su impacto en el ancho de banda de la red. pTHINC entrega sus comandos utilizando un mecanismo de actualización de servidor-push no bloqueante, donde tan pronto como se generan actualizaciones de pantalla en el servidor, se envían al cliente. Los clientes no están obligados a solicitar explícitamente actualizaciones de pantalla, minimizando así el impacto que la típica variabilidad de la latencia de la red inalámbrica puede tener en la capacidad de respuesta del sistema. Teniendo en cuenta que los recursos Descripción de Comando COPY Copiar un área de búfer de fotogramas en coordenadas especificadas SFILL Rellenar un área con un valor de color de píxel dado PFILL Azulejar un área con un patrón de píxeles dado BITMAP Rellenar una región usando un patrón de bits RAW Mostrar datos de píxeles en bruto en una ubicación dada Tabla 1: Comandos de visualización del protocolo pTHINC. Las PDAs y las redes inalámbricas limitadas pueden no ser capaces de mantenerse al día con un servidor rápido que genera una gran cantidad de actualizaciones, pTHINC es capaz de fusionar, recortar y descartar actualizaciones automáticamente si se produce pérdida o congestión de red, o si el cliente no puede mantenerse al día con la velocidad de las actualizaciones. Este tipo de comportamiento resulta crucial en un entorno de navegación web, donde por ejemplo, una página puede ser redibujada varias veces mientras se renderiza al vuelo por el navegador. En este caso, la PDA solo recibirá y mostrará el resultado final, que claramente es todo lo que al usuario le interesa ver. pTHINC prioriza la entrega de actualizaciones a la PDA utilizando un programador de actualizaciones preemptivo de Tamaño Restante Más Corto Primero (SRSF). SRSF es análogo a la programación de Tiempo de Procesamiento Restante más Corto, la cual se sabe que es óptima para minimizar el tiempo medio de respuesta en un sistema interactivo. En un entorno de navegación web, los trabajos cortos están asociados con el texto y los componentes básicos de diseño de página, como el fondo de las páginas, que son contenido web crítico para el usuario. Por otro lado, los trabajos grandes suelen ser elementos de embellecimiento de menor prioridad, o, incluso peor, banners y anuncios de página web, los cuales tienen un valor cuestionable para el usuario mientras navega por la página. Usando SRSF, pTHINC puede maximizar la utilización del ancho de banda relativamente escaso disponible en la conexión inalámbrica entre la PDA y el servidor. 3.1 Gestión de la Pantalla Para permitir a los usuarios acceder con la misma facilidad a su navegador web y aplicaciones auxiliares desde una computadora de escritorio en casa como desde una PDA mientras están en movimiento, pTHINC proporciona un mecanismo de redimensionamiento para hacer zoom dentro y fuera de la pantalla de una sesión web. El redimensionamiento de pTHINC es completamente compatible con el servidor, no con el cliente. El servidor vuelve a muestrear las actualizaciones para que se ajusten al área de visualización de las PDAs antes de ser transmitidas por la red. pTHINC utiliza el algoritmo de remuestreo de Fants para redimensionar las actualizaciones de píxeles. Esto proporciona actualizaciones suaves y visualmente agradables con un antialiasing adecuado y solo requiere modestos recursos computacionales. El enfoque de redimensionamiento de pTHINCs tiene varias ventajas. Primero, permite al PDA aprovechar la vastamente superior potencia computacional del servidor para utilizar algoritmos de re-muestreo de alta calidad y producir actualizaciones de mayor calidad para que el PDA las muestre. Segundo, cambiar el tamaño de la pantalla no se traduce en requisitos adicionales de recursos para la PDA, ya que no necesita realizar ningún trabajo adicional. Finalmente, se logra una mejor utilización de la red inalámbrica ya que al reescalar las actualizaciones se reducen sus requisitos de ancho de banda. Para permitir a los usuarios orientar sus pantallas en una PDA y así proporcionar una experiencia visual que se ajuste mejor a las preferencias del usuario y al diseño de páginas web o aplicaciones, pTHINC proporciona un mecanismo de rotación de pantalla para alternar entre los modos de visualización horizontal y vertical. La rotación de pantalla de pTHINC es completamente compatible con el cliente, no con el servidor. pTHINC no recalcula explícitamente la geometría de las actualizaciones de pantalla para realizar la rotación, lo cual sería computacionalmente costoso. En cambio, pTHINC simplemente cambia la forma en que los datos se copian en el framebuffer para cambiar entre los modos de visualización. Cuando está en modo retrato, los datos se copian a lo largo de las filas del framebuffer de izquierda a derecha. Cuando se encuentra en modo horizontal, los datos se copian a lo largo de las columnas del framebuffer de arriba hacia abajo. Estas técnicas muy rápidas y simples reemplazan un conjunto de operaciones de copia por otro y no imponen ningún sobrecosto de rendimiento. pTHINC proporciona su propio mecanismo de rotación para soportar una amplia gama de dispositivos sin imponer requisitos adicionales de funciones en la PDA. Aunque algunos dispositivos PDA más nuevos ofrecen soporte nativo para diferentes orientaciones, este mecanismo no es dinámico y requiere que el usuario rote toda la interfaz de usuario de la PDA antes de iniciar el cliente pTHINC. Windows Mobile proporciona mecanismos de API nativos para que las aplicaciones de PDA puedan rotar su interfaz de usuario sobre la marcha, pero estos mecanismos ofrecen un rendimiento deficiente y una calidad de visualización baja, ya que la rotación se realiza de manera ingenua y no es completamente precisa. 3.2 Reproducción de video El video se ha convertido gradualmente en una parte integral de la World Wide Web, y su presencia solo seguirá aumentando. Los sitios web de hoy en día no solo utilizan gráficos animados y flash para presentar el contenido web de manera atractiva, sino que también utilizan video en streaming para enriquecer la interfaz web. Los usuarios pueden ver noticias pregrabadas y en vivo en CNN, ver los momentos más destacados deportivos en ESPN e incluso buscar a través de una gran colección de videos en Google Video. Para permitir que las aplicaciones proporcionen una reproducción de video eficiente, se han creado interfaces en los sistemas de visualización que permiten a los controladores de dispositivos de video exponer sus capacidades de hardware a las aplicaciones. pTHINC aprovecha estas interfaces y su enfoque de controlador de dispositivo virtual para proporcionar un puente virtual entre el cliente remoto y su hardware y las aplicaciones, y admitir de manera transparente la reproducción de video. Sobre esta arquitectura, pTHINC utiliza el espacio de color YUV para codificar el contenido de video, lo cual proporciona una serie de beneficios. Primero, se ha vuelto cada vez más común que el hardware de video de las PDA admita nativamente YUV y pueda realizar la conversión del espacio de color y el escalado automáticamente. Como resultado, pTHINC puede proporcionar reproducción de video a pantalla completa sin afectar el rendimiento. Segundo, el uso de YUV permite una representación más eficiente de los datos RGB sin pérdida de calidad, aprovechando la capacidad de los ojos humanos para distinguir mejor las diferencias en brillo que en color. En particular, pTHINC utiliza el formato YV12, que permite codificar datos de color RGB completo utilizando solo 12 bits por píxel. Tercero, los datos YUV se producen como uno de los últimos pasos del proceso de decodificación de la mayoría de los códecs de video, lo que permite a pTHINC proporcionar la reproducción de video de una manera independiente del formato. Finalmente, aunque el hardware de video de las PDAs no pueda acelerar la reproducción, el proceso de conversión de espacio de color es lo suficientemente simple como para no imponer requisitos poco razonables en la PDA. Un ejemplo más concreto de cómo pTHINC aprovecha el hardware de video PDA para admitir la reproducción de video se puede ver en nuestra implementación de prototipo en la popular PDA Dell Axim X51v, que está equipada con el acelerador multimedia Intel 2700G. En este caso, pTHINC crea un búfer fuera de pantalla en la memoria de video y escribe y lee desde esta región de memoria datos en formato YV12. Cuando llega un nuevo fotograma de video, los datos de video se copian desde el búfer a una superficie superpuesta en la memoria de video, que es independiente de la superficie normal utilizada para el dibujo tradicional. A medida que los datos YV12 se colocan en la superposición, el acelerador de Intel realiza automáticamente la conversión de espacio de color y el escalado. Al utilizar la superficie de superposición, pTHINC no necesita volver a dibujar la pantalla una vez que la reproducción de video ha terminado, ya que la superficie superpuesta no se ve afectada. Además, las regiones de superposición específicas pueden ser manipuladas aprovechando el hardware de video, por ejemplo, para realizar interpolación lineal de hardware y suavizar el fotograma para mostrarlo a pantalla completa, y para realizar rotación automática cuando el cliente se ejecuta en modo horizontal. 4. RESULTADOS EXPERIMENTALES Hemos implementado un prototipo de pTHINC que ejecuta el cliente en dispositivos Pocket PC basados en Windows Mobile ampliamente utilizados y el servidor en sistemas operativos tanto Windows como Linux. Para demostrar su eficacia en el soporte de aplicaciones web inalámbricas móviles, hemos medido su rendimiento en aplicaciones web. Presentamos resultados experimentales sobre diferentes dispositivos PDA para dos aplicaciones web populares, navegar por páginas web y reproducir contenido de video desde la web. Comparamos pTHINC con aplicaciones web nativas que se ejecutan localmente en la PDA para demostrar la mejora que pTHINC puede proporcionar sobre el enfoque tradicional de cliente pesado. También comparamos pTHINC con tres de los clientes ligeros más utilizados que pueden ejecutarse en PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] y VNC (Virtual Network Computing) [16]. Seguimos la práctica común y nos referimos a Citrix MetaFrameXP y Microsoft Remote Desktop por sus respectivos protocolos de visualización remota, ICA (Independent Computing Architecture) y RDP (Remote Desktop Protocol). 4.1 Plataforma de Pruebas Experimental Realizamos nuestros experimentos web utilizando dos PDA Pocket PC inalámbricas diferentes en un entorno de prueba de red Wi-Fi aislado, como se muestra en la Figura 2. El banco de pruebas consistía en dos dispositivos cliente PDA, un monitor de paquetes, un servidor de cliente ligero y un servidor web. Excepto por las PDAs, todas las demás máquinas eran servidores IBM Netfinity 4500R con procesadores duales Intel PIII de 933 MHz y 512 MB de RAM, y estaban conectadas en una red FastEthernet de 100 Mbps conmutada. El servidor web utilizado fue Apache 1.3.27, el emulador de red fue NISTNet 2.0.12 y el monitor de paquetes fue Ethereal 0.10.9. Los clientes de PDA se conectaron al banco de pruebas a través de un punto de acceso inalámbrico Lucent Orinoco AP-2000 802.11b. Todos los experimentos utilizando la red inalámbrica se llevaron a cabo a una distancia de diez pies del punto de acceso, por lo que consideramos que la cantidad de pérdida de paquetes era insignificante en nuestros experimentos. Se utilizaron dos PDA Pocket PC para proporcionar resultados en modelos antiguos y menos potentes, así como en modelos más nuevos de mayor rendimiento. El modelo anterior era un Dell Axim X5 con 147 Cliente 1024×768 640×480 Profundidad Cambio de tamaño Clip RDP no sí 8 bits no sí VNC sí sí 16 bits no no ICA sí sí 16 bits sí no pTHINC sí sí 24 bits sí no Tabla 2: Configuración del banco de pruebas de cliente ligero con un CPU Intel XScale PXA255 de 400 MHz y 64 MB de RAM ejecutando Windows Mobile 2003 y una tarjeta Dell TrueMobile 1180 de 2.4 GHz CompactFlash para redes inalámbricas. El modelo más nuevo era un Dell Axim X51v con un procesador Intel XScale XPA270 de 624 MHz y 64 MB de RAM ejecutando Windows Mobile 5.0 y con red inalámbrica 802.11b integrada. El X51v tiene un acelerador multimedia Intel 2700G con 16MB de memoria de video. Ambas PDAs son capaces de mostrar colores de 16 bits pero tienen diferentes tamaños de pantalla y resoluciones de visualización. El X5 tiene una pantalla diagonal de 3.5 pulgadas con una resolución de 240×320. El X51v tiene una pantalla diagonal de 3.7 pulgadas con una resolución de 480×640. Los cuatro clientes ligeros que utilizamos admiten diferentes niveles de calidad de visualización, como se resume en la Tabla 2. El cliente de RDP solo admite una resolución de pantalla fija de 640×480 en el servidor con una profundidad de color de 8 bits, mientras que otras plataformas ofrecen niveles más altos de calidad de visualización. Para proporcionar una comparación justa en todas las plataformas, realizamos nuestros experimentos con sesiones de cliente ligero configuradas para dos posibles resoluciones, 1024×768 y 640×480. Tanto ICA como VNC se configuraron para usar la resolución nativa de PDA con una profundidad de color de 16 bits. El prototipo actual de pTHINC utiliza color de 24 bits directamente y el cliente reduce la resolución de las actualizaciones al nivel de color de 16 bits disponible en la PDA. RDP se configuró utilizando solo una profundidad de color de 8 bits ya que no admite ninguna profundidad de color mejor. Dado que tanto pTHINC como ICA ofrecen la capacidad de ver la pantalla redimensionada para ajustarse a la pantalla, medimos ambos clientes con y sin la pantalla redimensionada para ajustarse a la pantalla del PDA. Cada cliente ligero fue probado utilizando el modo de paisaje en lugar del modo retrato cuando estaba disponible. Todos los sistemas que se ejecutan en el X51v podrían funcionar en modo horizontal porque el hardware proporciona una función de modo horizontal. Sin embargo, el X5 no proporciona esta funcionalidad. Solo pTHINC admite directamente el modo paisaje, por lo que era el único sistema que podía ejecutarse en modo paisaje tanto en el X5 como en el X51v. Para proporcionar una comparación justa, también estandarizamos en hardware y sistemas operativos comunes siempre que sea posible. Todos los sistemas utilizaron el servidor Netfinity como servidor de cliente ligero. Para los dos sistemas diseñados para servidores Windows, ICA y RDP, ejecutamos Windows Server 2003 en el servidor. Para los otros sistemas que admiten servidores basados en X, ejecutamos la distribución Debian Linux Inestable con el kernel Linux 2.6.10 en el servidor. Utilizamos las últimas versiones de servidores de cliente ligero disponibles en cada plataforma en el momento de nuestros experimentos, a saber, Citrix MetaFrame XP Server para Windows Feature Release 3, Microsoft Remote Desktop integrado en Windows XP y Windows 2003 utilizando RDP 5.2, y VNC 4.0.4.2. Para los benchmarks de aplicaciones, utilizamos dos benchmarks de aplicaciones web para nuestros experimentos basados en dos escenarios de aplicación comunes, navegación por páginas web y reproducción de contenido de video desde la web. Dado que muchos sistemas de cliente ligero, incluidos dos de los probados, son cerrados y propietarios, medimos su rendimiento de manera no invasiva capturando el tráfico de red con un monitor de paquetes y utilizando una variante de benchmarking en cámara lenta [13] previamente desarrollada para medir el rendimiento de clientes ligeros en entornos de PDA [10]. Esta metodología de medición tiene en cuenta tanto el desacoplamiento de la visualización que puede ocurrir entre el cliente y el servidor en sistemas de cliente ligero, como el tiempo de procesamiento del cliente, que puede ser significativo en el caso de las PDAs. Para medir el rendimiento de la navegación web, utilizamos un benchmark de navegación web basado en la Prueba de Carga de Páginas de Texto Web del conjunto de benchmarks Ziff-Davis i-Bench [7]. El punto de referencia consiste en la carga controlada de 55 páginas desde el servidor web mediante JavaScript. Las páginas contienen tanto texto como gráficos, con páginas de diferentes tamaños. Los gráficos son imágenes incrustadas en formatos GIF y JPEG. El benchmark original i-Bench fue modificado para pruebas de rendimiento en cámara lenta al introducir retrasos de varios segundos entre las páginas utilizando JavaScript. Luego se realizaron dos pruebas, una en la que se agregaron retrasos entre cada página, y otra en la que las páginas se cargaron continuamente sin esperar a que se mostraran en el cliente. En la primera prueba, los retrasos se ajustaron lo suficiente en cada caso para garantizar que cada página pudiera ser recibida y mostrada en el cliente por completo sin solapamiento temporal en la transferencia de los datos pertenecientes a dos páginas consecutivas. Utilizamos el monitor de paquetes para registrar el tráfico de paquetes para cada ejecución de la prueba de referencia, luego utilizamos las marcas de tiempo del primer y último paquete en la traza para obtener nuestras medidas de latencia [10]. El monitor de paquetes también registró la cantidad de datos transmitidos entre el cliente y el servidor. La proporción entre el tráfico de datos en las dos pruebas produce un factor de escala. Este factor de escala muestra la pérdida de datos entre el servidor y el cliente debido a la incapacidad del cliente para procesar los datos lo suficientemente rápido. El producto del factor de escala con la medición de latencia produce la verdadera latencia teniendo en cuenta el tiempo de procesamiento del cliente. Para ejecutar la prueba de navegación web, utilizamos Mozilla Firefox 1.0.4 en el servidor de cliente ligero para los clientes ligeros, y Windows Internet Explorer (IE) Mobile para 2003 y Mobile para 5.0 para los navegadores nativos en las PDAs X5 y X51v, respectivamente. En todos los casos, el navegador web utilizado se ajustó para ocupar toda la región de visualización disponible. Para medir el rendimiento de reproducción de video, utilizamos un banco de pruebas de video que consistía en reproducir un clip de video MPEG-1 de 34.75 segundos que contenía una mezcla de noticias y programación de entretenimiento a resolución de pantalla completa. El videoclip tiene un tamaño de 5.11 MB y consta de 834 cuadros de píxeles de 352x240 con una velocidad de cuadro ideal de 24 cuadros por segundo. Medimos el rendimiento del video utilizando pruebas de referencia en cámara lenta al monitorear el tráfico de paquetes resultante a dos velocidades de reproducción, 1 cuadro por segundo (fps) y 24 fps, y comparando los resultados para determinar los retrasos en la reproducción y las caídas de cuadros que ocurren a 24 fps para medir la calidad general del video [13]. Por ejemplo, el 100% de calidad significa que todos los fotogramas del video se reprodujeron a velocidad en tiempo real. Por otro lado, una calidad del 50% podría significar que se eliminó la mitad de los datos del video, o que el clip tardó el doble en reproducirse a pesar de que se mostró toda la información del video. Para ejecutar la prueba de rendimiento de video, utilizamos Windows Media Player 9 para servidores de clientes ligeros basados en Windows, MPlayer 1.0 pre 6 para servidores de clientes ligeros basados en X, y Windows Media Player 9 Mobile y 10 Mobile para los reproductores de video nativos que se ejecutan localmente en las PDAs X5 y X51v, respectivamente. En todos los casos, el reproductor de video utilizado se dimensionó para llenar toda la región de visualización disponible. Las Figuras 3 y 4 muestran los resultados de ejecutar la prueba de navegación por la web. Para cada plataforma, mostramos resultados de hasta cuatro configuraciones diferentes, dos en el X5 y dos en el X51v, dependiendo de si cada configuración era compatible. Sin embargo, no todas las plataformas podrían admitir todas las configuraciones. El navegador local solo se ejecuta a la resolución de pantalla de la PDA, 480×680 o menos para el X51v y el X5. RDP solo funciona a 640×480. Ninguna plataforma podía soportar una resolución de pantalla de 1024×768. ICA solo funcionaba en el X5 y no podía ejecutarse en el X51v porque no era compatible con Windows Mobile 5. La Figura 3 muestra la latencia promedio por página web para cada plataforma. pTHINC proporciona la latencia promedio más baja en la navegación web en ambas PDAs. En el X5, pTHINC funciona hasta 70 veces mejor que otros sistemas de cliente ligero y 8 veces mejor que el navegador local. En el X51v, pTHINC funciona hasta 80 veces mejor que otros sistemas de cliente ligero y 7 veces mejor que el navegador nativo. De hecho, todos los clientes ligeros excepto VNC superan al navegador local de PDA, demostrando los beneficios de rendimiento del enfoque de cliente ligero. Los estudios de usabilidad han demostrado que las páginas web deben tardar menos de un segundo en descargarse para que el usuario experimente una navegación web ininterrumpida [14]. Las mediciones muestran que solo los clientes delgados ofrecen latencias de página web de menos de un segundo. Por el contrario, el navegador local requiere más de 3 segundos en promedio por página web. El navegador local funciona peor ya que necesita ejecutar un navegador web más limitado para procesar el HTML, JavaScript y realizar todo el renderizado utilizando las capacidades limitadas de la PDA. Los clientes ligeros pueden aprovecharse de hardware de servidor más rápido y un navegador web altamente optimizado para procesar el contenido web mucho más rápido. La Figura 3 muestra que RDP es la plataforma más rápida después de pTHINC. Sin embargo, RDP solo puede ejecutarse a una resolución fija de 640×480 y una profundidad de color de 8 bits. Además, RDP también recorta la pantalla al tamaño de la pantalla de la PDA para no tener que enviar actualizaciones que no son visibles en la pantalla de la PDA. Esto proporciona un beneficio de rendimiento siempre y cuando el resto del contenido web no se visualice, pero degrada el rendimiento cuando un usuario desplaza la pantalla para ver otro contenido web. RDP logra su rendimiento con una calidad de visualización significativamente inferior en comparación con otros clientes ligeros y con recortes adicionales en la visualización que no son utilizados por otros sistemas. Como resultado, el rendimiento de RDP por sí solo no proporciona una comparación completa con las otras plataformas. Por el contrario, pTHINC ofrece el mejor rendimiento al mismo tiempo que proporciona una calidad de visualización igual o mejor que los otros sistemas. Dado que VNC e ICA ofrecen una calidad de visualización similar a pTHINC, estos sistemas proporcionan una comparación más justa de diferentes enfoques de cliente ligero. ICA funciona peor en parte porque utiliza primitivas de visualización de nivel superior que requieren costos adicionales de procesamiento por parte del cliente. VNC funciona peor en parte porque pierde datos de visualización debido a su mecanismo de entrega de cliente-pull y debido a los costos de procesamiento del cliente en descomprimir primitivas de píxeles crudos. En ambos casos, su rendimiento se vio limitado en parte porque sus clientes de PDA no podían mantenerse al ritmo al que se mostraban las páginas web. La Figura 3 también muestra las medidas para aquellos clientes ligeros que admiten redimensionar la pantalla para ajustarse a la pantalla de la PDA, a saber, ICA y pTHINC. El redimensionamiento requiere un procesamiento adicional, lo que resulta en latencias promedio más lentas de las páginas web. Las mediciones muestran que el retraso adicional incurrido por ICA al cambiar el tamaño es mucho más sustancial que para pTHINC. ICA realiza redimensionamiento en el cliente PDA más lento. Por el contrario, pTHINC aprovecha el servidor más potente para redimensionar, reduciendo la diferencia de rendimiento entre redimensionar y no redimensionar. A diferencia de ICA, pTHINC es capaz de proporcionar latencias de descarga de páginas web en menos de un segundo en ambos casos. La Figura 4 muestra los datos transferidos en KB por página al ejecutar la versión de cámara lenta de las pruebas. Todas las plataformas tienen requisitos modestos de transferencia de datos de aproximadamente 100 KB por página o menos. Esto está bien dentro de la capacidad de ancho de banda de las redes Wi-Fi. Las mediciones muestran que el navegador local no transfiere la menor cantidad de datos. Esto es sorprendente ya que HTML suele considerarse una representación muy compacta del contenido. En cambio, RDP es la plataforma más eficiente en ancho de banda, en gran parte debido a que utiliza solo una profundidad de color de 8 bits y recorte de pantalla para no transferir la página web completa al cliente. En general, pTHINC tiene los mayores requisitos de datos, ligeramente más que VNC. Esto se debe en gran medida a la falta de soporte nativo de los prototipos actuales de pTHINC para datos de color de 16 bits en el protocolo de comunicación. Sin embargo, este resultado también destaca el rendimiento de pTHINCs, ya que es más rápido que todos los demás sistemas incluso al transferir más datos. Además, dado que los modelos más recientes de PDA admiten colores completos de 24 bits, estos resultados indican que pTHINC seguirá proporcionando un buen rendimiento en la navegación web. Dado que la usabilidad y la calidad de la pantalla son tan importantes como el rendimiento, las Figuras 5 a 8 comparan capturas de pantalla de los diferentes clientes ligeros al mostrar una página web, en este caso del popular sitio de noticias de la BBC. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo paisaje. Figura 5: Captura de pantalla del navegador: RDP 640x480. Figura 6: Captura de pantalla del navegador: VNC 1024x768. Figura 7: Captura de pantalla del navegador: ICA redimensionado 1024x768. Figura 8: Captura de pantalla del navegador: pTHINC redimensionado 1024x768 utilizando la configuración de resolución de pantalla máxima para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Si bien las capturas de pantalla carecen de la fidelidad visual de la pantalla real del dispositivo, se pueden hacer varias observaciones. La Figura 5 muestra que RDP no admite el modo de pantalla completa y desperdicia mucho espacio en pantalla para controles y elementos de la interfaz de usuario, lo que obliga al usuario a desplazarse para acceder a todo el contenido de la sesión de navegación web. La Figura 6 muestra que VNC aprovecha mejor el espacio de la pantalla y ofrece una mejor calidad de visualización, pero aún obliga al usuario a desplazarse para ver la página web debido a la falta de soporte para redimensionar. La Figura 7 muestra la capacidad de ICA para mostrar la página web completa dada su soporte de redimensionamiento, pero su falta de capacidad en modo paisaje y su algoritmo de redimensionamiento deficiente comprometen significativamente la calidad de visualización. Por el contrario, la Figura 8 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de pantalla completa de alta calidad del ancho completo de la página web. pTHINC maximiza toda la región de visualización moviendo todos los controles a los botones de la PDA. Además, pTHINC aprovecha la potencia computacional del servidor para utilizar un algoritmo de redimensionamiento de alta calidad y ajustar la pantalla al tamaño de la PDA sin un sobrecoste significativo. Las figuras 9 y 10 muestran los resultados de ejecutar la prueba de reproducción de video. Para cada plataforma excepto ICA, mostramos resultados para una configuración X5 y X51v. ICA no pudo ejecutarse en el X51v como se mencionó anteriormente. Las mediciones se realizaron utilizando configuraciones que reflejaban el entorno desde el cual un usuario tendría que acceder a una sesión web tanto desde una computadora de escritorio como desde una PDA. Por lo tanto, se utilizó una resolución de pantalla del servidor de 1024×768 siempre que fuera posible y el video se mostró a pantalla completa. La resolución de pantalla de RDP se limitaba a 640×480, como se mencionó anteriormente. Dado que ver toda la pantalla del video es la única opción realmente utilizable, redimensionamos la pantalla para que se ajustara a la pantalla de la PDA en aquellas plataformas que admitían esta función, a saber, ICA y pTHINC. La Figura 9 muestra la calidad de video para cada plataforma. pTHINC es el único cliente ligero capaz de proporcionar una calidad de reproducción de video perfecta, similar al reproductor de video nativo de PDA. Todos los demás clientes ligeros ofrecen una calidad de video muy pobre. Con la excepción de RDP en el X51v que proporcionó una calidad de video inaceptable del 35%, ninguno de los otros sistemas pudo siquiera alcanzar el 10% de calidad de video. VNC e ICA tienen la peor calidad al 8% en el dispositivo X5. El soporte de video nativo de pTHINCs permite un rendimiento de video superior, mientras que otros clientes ligeros sufren de su incapacidad para distinguir el video de las actualizaciones normales de la pantalla. Intentan aplicar algoritmos de compresión ineficaces y costosos en los datos de video y no pueden mantenerse al día con la corriente de actualizaciones generadas, lo que resulta en cuadros omitidos o largos tiempos de reproducción. VNC se ve aún más afectado por su modelo de actualización de cliente-pull porque los fotogramas de video se generan más rápido que la velocidad a la que el cliente puede procesar y enviar solicitudes al servidor para obtener la siguiente actualización de pantalla. La Figura 10 muestra los datos totales transferidos durante la reproducción de video a pantalla completa para cada sistema. El reproductor nativo es la plataforma más eficiente en ancho de banda, enviando menos de 6 MB de datos, lo que corresponde a aproximadamente 1.2 Mbps de ancho de banda. La calidad de video al 100% de pTHINCs requiere alrededor de 25 MB de datos, lo que corresponde a un uso de ancho de banda de menos de 6 Mbps. Mientras que los otros clientes ligeros envían menos datos que THINC, lo hacen porque están eliminando datos de video, lo que resulta en una calidad de video degradada. Las figuras 11 a 14 comparan capturas de pantalla de los distintos clientes ligeros al mostrar el videoclip. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo horizontal utilizando la configuración de resolución máxima de pantalla para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Las figuras 11 y 12 muestran que RDP y VNC no pueden mostrar el cuadro completo del video en la pantalla de la PDA. RDP desperdicia espacio en pantalla para los elementos de la interfaz de usuario y VNC solo muestra la esquina superior del marco de video en la pantalla. La Figura 13 muestra que el ICA proporciona redimensionamiento para mostrar todo el fotograma del video, pero no redimensiona proporcionalmente los datos del video, lo que resulta en artefactos de visualización extraños. Por el contrario, la Figura 14 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de alta calidad a pantalla completa de todo el fotograma del video. pTHINC ofrece una visualización de video visualmente más atractiva que RDP, VNC o ICA. 5. TRABAJOS RELACIONADOS Varios estudios han examinado el rendimiento de la navegación web en la computación de cliente ligero [13, 19, 10]. La capacidad de los clientes ligeros para mejorar el rendimiento de la navegación web en PDAs inalámbricas fue demostrada cuantitativamente por primera vez en un estudio previo realizado por uno de los autores [10]. Este estudio demostró que los clientes ligeros pueden ofrecer tanto un rendimiento de navegación web más rápido como una mayor funcionalidad de navegación web. El estudio consideró una amplia gama de contenido web, incluido el contenido de sistemas de información médica. Nuestro trabajo se basa en este estudio previo y considera temas importantes como la usabilidad de los clientes ligeros existentes en entornos de PDA, los compromisos entre la usabilidad y el rendimiento de los clientes ligeros, el rendimiento en diferentes dispositivos de PDA y el rendimiento de los clientes ligeros en aplicaciones web comunes como el video. Se han desarrollado muchos clientes ligeros y algunos tienen clientes de PDA, incluyendo Remote Desktop de Microsoft [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5] y Tarantella [18]. Estos sistemas fueron diseñados inicialmente para computadoras de escritorio y adaptados posteriormente para asistentes digitales personales (PDA). A diferencia de pTHINC, no abordan los problemas clave de arquitectura del sistema y usabilidad importantes para las PDAs. Esto limita la calidad de visualización, el rendimiento del sistema, el espacio de pantalla disponible y la usabilidad general en PDAs. pTHINC se basa en trabajos anteriores de dos de los autores sobre THINC [1], ampliando la arquitectura del servidor e introduciendo una interfaz de cliente y un modelo de uso para admitir eficientemente dispositivos PDA en aplicaciones web móviles. Otros enfoques para mejorar el rendimiento de la navegación web inalámbrica móvil se han centrado en el uso de proxies de transcodificación y almacenamiento en caché en conjunto con el modelo de cliente pesado [11, 9, 4, 8]. Trabajan mediante el envío de funcionalidades a proxies externos y utilizando aplicaciones de navegación especializadas en el dispositivo PDA que se comunican con el proxy. Nuestro enfoque de cliente ligero difiere fundamentalmente de estos enfoques de cliente pesado al trasladar toda la lógica del navegador web al servidor, aprovechando las inversiones existentes en navegadores web de escritorio y aplicaciones auxiliares para funcionar de manera integrada con los sistemas de producción sin necesidad de configuraciones adicionales de proxy o modificaciones en el navegador web. Con la aparición de la navegación web en dispositivos con pantallas pequeñas, los sitios web han sido rediseñados utilizando mecanismos como WAP y se han desarrollado navegadores web nativos especializados para adaptarse a las necesidades de estos dispositivos. Recientemente, Opera ha desarrollado el navegador web Opera Mini [15], que utiliza un enfoque similar al modelo de cliente ligero para proporcionar acceso a través de una serie de dispositivos móviles que normalmente no podrían ejecutar un navegador web. En lugar de requerir que el dispositivo procese las páginas web, utiliza un servidor remoto para preprocesar la página antes de enviarla al teléfono. CONCLUSIONES Hemos introducido pTHINC, una arquitectura de cliente ligero para PDAs inalámbricas. pTHINC proporciona mecanismos arquitectónicos y de usabilidad clave como el redimensionamiento de pantalla en el lado del servidor, rotación de pantalla en el lado del cliente utilizando técnicas simples de copia, soporte de video YUV, y maximización del espacio de pantalla para actualizaciones de visualización y aprovechamiento de los botones de control existentes en las PDAs para elementos de la interfaz de usuario. pTHINC soporta de manera transparente navegadores de escritorio tradicionales y sus aplicaciones auxiliares en dispositivos PDA y computadoras de escritorio, brindando a los usuarios móviles acceso ubicuo a un entorno web consistente, personalizado y completo en dispositivos heterogéneos. Hemos implementado pTHINC y medido su rendimiento en aplicaciones web en comparación con los sistemas de cliente ligero existentes y las aplicaciones web nativas. Nuestros resultados en múltiples dispositivos móviles inalámbricos demuestran que pTHINC ofrece un rendimiento de navegación web hasta 80 veces mejor que los sistemas de cliente ligero existentes, y 8 veces mejor que un navegador PDA nativo. Además, pTHINC es el único cliente ligero de PDA 151 Figura 11: Captura de pantalla de video: RDP 640x480 Figura 12: Captura de pantalla de video: VNC 1024x768 Figura 13: Captura de pantalla de video: ICA redimensionado 1024x768 Figura 14: Captura de pantalla de video: pTHINC redimensionado 1024x768 que proporciona de manera transparente la reproducción de video a pantalla completa y a velocidad de cuadro completa, haciendo que los sitios web con contenido multimedia sean accesibles para los usuarios de la web móvil. 7. AGRADECIMIENTOS Este trabajo fue apoyado en parte por las subvenciones NSF ITR CCR0219943 y CNS-0426623, y un premio IBM SUR. 8. REFERENCIAS [1] R. Baratto, L. Kim y J. Nieh. THINC: Una arquitectura de visualización virtual para la computación de cliente ligero. En Actas del 20º Simposio de Principios de Sistemas Operativos de la ACM (SOSP), octubre de 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius y A. Muir. Microsoft Windows NT Server 4.0, Terminal Server Edition: Referencia Técnica. Microsoft Press, Redmond, WA, 1999. [4] A.\nMicrosoft Press, Redmond, WA, 1999. [4] A. Fox, I. Goldberg, S. D. Gribble y D. C. Lee. Experiencia con Top Gun Wingman: un navegador web gráfico basado en proxy para el 3Com PalmPilot. En Actas de Middleware 98, Lake District, Inglaterra, septiembre de 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Ley de Portabilidad y Responsabilidad del Seguro de Salud. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench versión 1.5. http://etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi. Sobre agentes de proxy, movilidad y acceso web. Redes y aplicaciones móviles, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon y A. Ortega. Diseño e Implementación de un Proxy de Caché Blando. Redes de Computadoras y Sistemas ISDN, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana y S. Varshneya. Mejorando la navegación web en PDAs inalámbricas utilizando computación de cliente ligero. En Actas de la 13ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham y P. Shenoy. TranSquid: Proxy de transcodificación y almacenamiento en caché para entornos de comercio electrónico heterogéneos. En Actas del 12º Taller IEEE sobre Problemas de Investigación en Ingeniería de Datos (RIDE 02), febrero de 2002. [12] Visor VNC .NET para PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang y N. Novik. Midiendo el rendimiento de clientes ligeros utilizando pruebas de referencia en cámara lenta. ACM Trans. Sistemas de Computación, 21(1):87-115, Feb. 2003. [14] J. Nielsen. Diseño de Usabilidad en la Web. New Riders Publishing, Indianápolis, IN, 2000. [15] Navegador Opera Mini. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood y A. Hopper. Computación de Red Virtual. IEEE Internet Computing, 2(1), enero/febrero de 1998. [17] R. W. Scheifler y J. Gettys. El Sistema de Ventanas X. ACM Trans. Gr., 5(2):79-106, Abr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla y M. Sajjadpour. Rendimiento de la navegación web en computación inalámbrica de cliente ligero. En Actas de la 12ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2003. 152 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "seamless mobility": {
            "translated_key": "movilidad fluida",
            "is_in_text": true,
            "original_annotated_sentences": [
                "pTHINC: A Thin-Client Architecture for Mobile Wireless Web Joeng Kim, Ricardo A. Baratto, and Jason Nieh Department of Computer Science Columbia University, New York, NY, USA {jk2438, ricardo, nieh}@cs.columbia.edu ABSTRACT Although web applications are gaining popularity on mobile wireless PDAs, web browsers on these systems can be quite slow and often lack adequate functionality to access many web sites.",
                "We have developed pTHINC, a PDA thinclient solution that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide high-fidelity display and <br>seamless mobility</br> across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available screen resolution for application display.",
                "We have implemented pTHINC on Windows Mobile and evaluated its performance on mobile wireless devices.",
                "Our results compared to local PDA web browsers and other thin-client approaches demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "Categories and Subject Descriptors: C.2.4 ComputerCommunication-Networks: Distributed Systems - client/ server General Terms: Design, Experimentation, Performance 1.",
                "INTRODUCTION The increasing ubiquity of wireless networks and decreasing cost of hardware is fueling a proliferation of mobile wireless handheld devices, both as standalone wireless Personal Digital Assistants (PDA) and popular integrated PDA/cell phone devices.",
                "These devices are enabling new forms of mobile computing and communication.",
                "Service providers are leveraging these devices to deliver pervasive web access, and mobile web users already often use these devices to access web-enabled information such as news, email, and localized travel guides and maps.",
                "It is likely that within a few years, most of the devices accessing the web will be mobile.",
                "Users typically access web content by running a web browser and associated helper applications locally on the PDA.",
                "Although native web browsers exist for PDAs, they deliver subpar performance and have a much smaller feature set and more limited functionality than their desktop computing counterparts [10].",
                "As a result, PDA web browsers are often not able to display web content from web sites that leverage more advanced web technologies to deliver a richer web experience.",
                "This fundamental problem arises for two reasons.",
                "First, because PDAs have a completely different hardware/software environment from traditional desktop computers, web applications need to be rewritten and customized for PDAs if at all possible, duplicating development costs.",
                "Because the desktop application market is larger and more mature, most development effort generally ends up being spent on desktop applications, resulting in greater functionality and performance than their PDA counterparts.",
                "Second, PDAs have a more resource constrained environment than traditional desktop computers to provide a smaller form factor and longer battery life.",
                "Desktop web browsers are large, complex applications that are unable to run on a PDA.",
                "Instead, developers are forced to significantly strip down these web browsers to provide a usable PDA web browser, thereby crippling PDA browser functionality.",
                "Thin-client computing provides an alternative approach for enabling pervasive web access from handheld devices.",
                "A thin-client computing system consists of a server and a client that communicate over a network using a remote display protocol.",
                "The protocol enables graphical displays to be virtualized and served across a network to a client device, while application logic is executed on the server.",
                "Using the remote display protocol, the client transmits user input to the server, and the server returns screen updates of the applications from the server to the client.",
                "Using a thin-client model for mobile handheld devices, PDAs can become simple stateless clients that leverage the remote server capabilities to execute web browsers and other helper applications.",
                "The thin-client model provides several important benefits for mobile wireless web.",
                "First, standard desktop web applications can be used to deliver web content to PDAs without rewriting or adapting applications to execute on a PDA, reducing development costs and leveraging existing software investments.",
                "Second, complex web applications can be executed on powerful servers instead of running stripped down versions on more resource constrained PDAs, providing greater functionality and better performance [10].",
                "Third, web applications can take advantage of servers with faster networks and better connectivity, further boosting application performance.",
                "Fourth, PDAs can be even simpler devices since they do not need to perform complex application logic, potentially reducing energy consumption and extend143 ing battery life.",
                "Finally, PDA thin clients can be essentially stateless appliances that do not need to be backed up or restored, require almost no maintenance or upgrades, and do not store any sensitive data that can be lost or stolen.",
                "This model provides a viable avenue for medical organizations to comply with HIPAA regulations [6] while embracing mobile handhelds in their day to day operations.",
                "Despite these potential advantages, thin clients have been unable to provide the full range of these benefits in delivering web applications to mobile handheld devices.",
                "Existing thin clients were not designed for PDAs and do not account for important usability issues in the context of small form factor devices, resulting in difficulty in navigating displayed web content.",
                "Furthermore, existing thin clients are ineffective at providing <br>seamless mobility</br> across the heterogeneous mix of device display sizes and resolutions.",
                "While existing thin clients can already provide faster performance than native PDA web browsers in delivering HTML web content, they do not effectively support more display-intensive web helper applications such as multimedia video, which is increasingly an integral part of available web content.",
                "To harness the full potential of thin-client computing in providing mobile wireless web on PDAs, we have developed pTHINC (PDA THin-client InterNet Computing). pTHINC builds on our previous work on THINC [1] to provide a thinclient architecture for mobile handheld devices. pTHINC virtualizes and resizes the display on the server to efficiently deliver high-fidelity screen updates to a broad range of different clients, screen sizes, and screen orientations, including both portrait and landscape viewing modes.",
                "This enables pTHINC to provide the same persistent web session across different client devices.",
                "For example, pTHINC can provide the same web browsing session appropriately scaled for display on a desktop computer and a PDA so that the same cookies, bookmarks, and other meta-data are continuously available on both machines simultaneously. pTHINCs virtual display approach leverages semantic information available in display commands, and client-side video hardware to provide more efficient remote display mechanisms that are crucial for supporting more display-intensive web applications.",
                "Given limited display resolution on PDAs, pTHINC maximizes the use of screen real estate for remote display by moving control functionality from the screen to readily available PDA control buttons, improving system usability.",
                "We have implemented pTHINC on Windows Mobile and demonstrated that it works transparently with existing applications, window systems, and operating systems, and does not require modifying, recompiling, or relinking existing software.",
                "We have quantitatively evaluated pTHINC against local PDA web browsers and other thin-client approaches on Pocket PC devices.",
                "Our experimental results demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "This paper presents the design and implementation of pTHINC.",
                "Section 2 describes the overall usage model and usability characteristics of pTHINC.",
                "Section 3 presents the design and system architecture of pTHINC.",
                "Section 4 presents experimental results measuring the performance of pTHINC on web applications and comparing it against native PDA browsers and other popular PDA thin-client systems.",
                "Section 5 discusses related work.",
                "Finally, we present some concluding remarks. 2.",
                "PTHINC USAGE MODEL pTHINC is a thin-client system that consists of a simple client viewer application that runs on the PDA and a server that runs on a commodity PC.",
                "The server leverages more powerful PCs to to run web browsers and other application logic.",
                "The client takes user input from the PDA stylus and virtual keyboard and sends them to the server to pass to the applications.",
                "Screen updates are then sent back from the server to the client for display to the user.",
                "When the pTHINC PDA client is started, the user is presented with a simple graphical interface where information such as server address and port, user authentication information, and session settings can be provided. pTHINC first attempts to connect to the server and perform the necessary handshaking.",
                "Once this process has been completed, pTHINC presents the user with the most recent display of his session.",
                "If the session does not exist, a new session is created.",
                "Existing sessions can be seamlessly continued without changes in the session setting or server configuration.",
                "Unlike other thin-client systems, pTHINC provides a user with a persistent web session model in which a user can launch a session running a web browser and associated applications at the server, then disconnect from that session and reconnect to it again anytime.",
                "When a user reconnects to the session, all of the applications continue running where the user left off, so that the user can continue working as though he or she never disconnected.",
                "The ability to disconnect and reconnect to a session at anytime is an important benefit for mobile wireless PDA users which may have intermittent network connectivity. pTHINCs persistent web session model enables a user to reconnect to a web session from devices other than the one on which the web session was originally initiated.",
                "This provides users with <br>seamless mobility</br> across different devices.",
                "If a user loses his PDA, he can easily use another PDA to access his web session.",
                "Furthermore, pTHINC allows users to use non-PDA devices to access web sessions as well.",
                "A user can access the same persistent web session on a desktop PC as on a PDA, enabling a user to use the same web session from any computer. pTHINCs persistent web session model addresses a key problem encountered by mobile web users, the lack of a common web environment across computers.",
                "Web browsers often store important information such as bookmarks, cookies, and history, which enable them to function in a much more useful manner.",
                "The problem that occurs when a user moves between computers is that this data, which is specific to a web browser installation, cannot move with the user.",
                "Furthermore, web browsers often need helper applications to process different media content, and those applications may not be consistently available across all computers. pTHINC addresses this problem by enabling a user to remotely use the exact same web browser environment and helper applications from any computer.",
                "As a result, pTHINC can provide a common, consistent web browsing environment for mobile users across different devices without requiring them to attempt to repeatedly synchronize different web browsing environments across multiple machines.",
                "To enable a user to access the same web session on different devices, pTHINC must provide mechanisms to support different display sizes and resolutions.",
                "Toward this end, pTHINC provides a zoom feature that enables a user to zoom in and out of a display and allows the display of a web 144 Figure 1: pTHINC shortcut keys session to be resized to fit the screen of the device being used.",
                "For example, if the server is running a web session at 1024×768 but the client is a PDA with a display resolution of 640×480, pTHINC will resize the desktop display to fit the full display in the smaller screen of the PDA. pTHINC provides the PDA user with the option to increase the size of the display by zooming in to different parts of the display.",
                "Users are often familiar with the general layout of commonly visited websites, and are able to leverage this resizing feature to better navigate through web pages.",
                "For example, a user can zoom out of the display to view the entire page content and navigate hyperlinks, then zoom in to a region of interest for a better view.",
                "To enable a user to access the same web session on different devices, pTHINC must also provide mechanisms to support different display orientations.",
                "In a desktop environment, users are typically accustomed to having displays presented in landscape mode where the screen width is larger than its height.",
                "However, in a PDA environment, the choice is not always obvious.",
                "Some users may prefer having the display in portrait mode, as it is easier to hold the device in their hands, while others may prefer landscape mode in order to minimize the amount of side-scrolling necessary to view a web page.",
                "To accommodate PDA user preferences, pTHINC provides an orientation feature that enables it to seamless rotate the display between landscape and portrait mode.",
                "The landscape mode is particularly useful for pTHINC users who frequently access their web sessions on both desktop and PDA devices, providing those users with the same familiar landscape setting across different devices.",
                "Because screen space is a relatively scarce resource on PDAs, pTHINC runs in fullscreen mode to maximize the screen area available to display the web session.",
                "To be able to use all of the screen on the PDA and still allow the user to control and interact with it, pTHINC reuses the typical shortcut buttons found on PDAs to perform all the control functions available to the user.",
                "The buttons used by pTHINC do not require any OS environment changes; they are simply intercepted by the pTHINC client application when they are pressed.",
                "Figure 1 shows how pTHINC utilizes the shortcut buttons to provide easy navigation and improve the overall user experience.",
                "These buttons are not device specific, and the layout shown is common to widelyused PocketPC devices. pTHINC provides six shortcuts to support its usage model: • Rotate Screen: The record button on the left edge is used to rotate the screen between portrait and landscape mode each time the button is pressed. • Zoom Out: The leftmost button on the bottom front is used to zoom out the display of the web session providing a birds eye view of the web session. • Zoom In: The second leftmost button on the bottom front is used to zoom in the display of the web session to more clearly view content of interest. • Directional Scroll: The middle button on the bottom front is used to scroll around the display using a single control button in a way that is already familiar to PDA users.",
                "This feature is particularly useful when the user has zoomed in to a region of the display such that only part of the display is visible on the screen. • Show/Hide Keyboard: The second rightmost button on the bottom front is used to bring up a virtual keyboard drawn on the screen for devices which have no physical keyboard.",
                "The virtual keyboard uses standard PDA OS mechanisms, providing portability across different PDA environments. • Close Session: The rightmost button on the bottom front is used to disconnect from the pTHINC session. pTHINC uses the PDA touch screen, stylus, and standard user interface mechanisms to provide a user interface pointand-click metaphor similar to that provided by the mouse in a traditional desktop computing environment. pTHINC does not use a cursor since PDA environments do not provide one.",
                "Instead, a user can use the stylus to tap on different sections of the touch screen to indicate input focus.",
                "A single tap on the touch screen generates a corresponding single click mouse event.",
                "A double tap on the touch screen generates a corresponding double click mouse event. pTHINC provides two-button mouse emulation by using the stylus to press down on the screen for one second to generate a right mouse click.",
                "All of these actions are identical to the way users already interact with PDA applications in the common PocketPC environment.",
                "In web browsing, users can click on hyperlinks and focus on input boxes by simply tapping on the desired screen area of interest.",
                "Unlike local PDA web browsers and other PDA applications, pTHINC leverages more powerful desktop user interface metaphors to enable users to manipulate multiple open application windows instead of being limited to a single application window at any given moment.",
                "This provides increased browsing flexibility beyond what is currently available on PDA devices.",
                "Similar to a desktop environment, browser windows and other application windows can be moved around by pressing down and dragging the stylus similar to a mouse. 3.",
                "PTHINC SYSTEM ARCHITECTURE pTHINC builds on the THINC [1] remote display architecture to provide a thin-client system for PDAs. pTHINC virtualizes the display at the server by leveraging the video device abstraction layer, which sits below the window server and above the framebuffer.",
                "This is a well-defined, low-level, device-dependent layer that exposes the video hardware to the display system. pTHINC accomplishes this through a simple virtual display driver that intercepts drawing commands, packetizes, and sends them over the network. 145 While other thin-client approaches intercept display commands at other layers of the display subsystem, pTHINCs display virtualization approach provides some key benefits in efficiently supporting PDA clients.",
                "For example, intercepting display commands at a higher layer between applications and the window system as is done by X [17] requires replicating and running a great deal of functionality on the PDA that is traditionally provided by the desktop window system.",
                "Given both the size and complexity of traditional window systems, attempting to replicate this functionality in the restricted PDA environment would have proven to be a daunting, and perhaps unfeasible task.",
                "Furthermore, applications and the window system often require tight synchronization in their operation and imposing a wireless network between them by running the applications on the server and the window system on the client would significantly degrade performance.",
                "On the other hand, intercepting at a lower layer by extracting pixels out of the framebuffer as they are rendered provides a simple solution that requires very little functionality on the PDA client, but can also result in degraded performance.",
                "The reason is that by the time the remote display server attempts to send screen updates, it has lost all semantic information that may have helped it encode efficiently, and it must resort to using a generic and expensive encoding mechanism on the server, as well as a potentially expensive decoding mechanism on the limited PDA client.",
                "In contrast to both the high and low level interception approaches, pTHINCs approach of intercepting at the device driver provides an effective balance between client and server simplicity, and the ability to efficiently encode and decode screen updates.",
                "By using a low-level virtual display approach, pTHINC can efficiently encode application display commands using only a small set of low-level commands.",
                "In a PDA environment, this set of commands provides a crucial component in maintaining the simplicity of the client in the resourceconstrained PDA environment.",
                "The display commands are shown in Table 1, and work as follows.",
                "COPY instructs the client to copy a region of the screen from its local framebuffer to another location.",
                "This command improves the user experience by accelerating scrolling and opaque window movement without having to resend screen data from the server.",
                "SFILL, PFILL, and BITMAP are commands that paint a fixed-size region on the screen.",
                "They are useful for accelerating the display of solid window backgrounds, desktop patterns, backgrounds of web pages, text drawing, and certain operations in graphics manipulation programs.",
                "SFILL fills a sizable region on the screen with a single color.",
                "PFILL replicates a tile over a screen region.",
                "BITMAP performs a fill using a bitmap of ones and zeros as a stipple to apply a foreground and background color.",
                "Finally, RAW is used to transmit unencoded pixel data to be displayed verbatim on a region of the screen.",
                "This command is invoked as a last resort if the server is unable to employ any other command, and it is the only command that may be compressed to mitigate its impact on network bandwidth. pTHINC delivers its commands using a non-blocking, serverpush update mechanism, where as soon as display updates are generated on the server, they are sent to the client.",
                "Clients are not required to explicitly request display updates, thus minimizing the impact that the typical varying network latency of wireless links may have on the responsiveness of the system.",
                "Keeping in mind that resource Command Description COPY Copy a frame buffer area to specified coordinates SFILL Fill an area with a given pixel color value PFILL Tile an area with a given pixel pattern BITMAP Fill a region using a bit pattern RAW Display raw pixel data at a given location Table 1: pTHINC Protocol Display Commands constrained PDAs and wireless networks may not be able to keep up with a fast server generating a large number of updates, pTHINC is able to coalesce, clip, and discard updates automatically if network loss or congestion occurs, or the client cannot keep up with the rate of updates.",
                "This type of behavior proves crucial in a web browsing environment, where for example, a page may be redrawn multiple times as it is rendered on the fly by the browser.",
                "In this case, the PDA will only receive and render the final result, which clearly is all the user is interesting in seeing. pTHINC prioritizes the delivery of updates to the PDA using a Shortest-Remaining-Size-First (SRSF) preemptive update scheduler.",
                "SRSF is analogous to Shortest-RemainingProcessing-Time scheduling, which is known to be optimal for minimizing mean response time in an interactive system.",
                "In a web browsing environment, short jobs are associated with text and basic page layout components such as the pages background, which are critical web content for the user.",
                "On the other hand, large jobs are often lower priority beautifying elements, or, even worse, web page banners and advertisements, which are of questionable value to the user as he or she is browsing the page.",
                "Using SRSF, pTHINC is able to maximize the utilization of the relatively scarce bandwidth available on the wireless connection between the PDA and the server. 3.1 Display Management To enable users to just as easily access their web browser and helper applications from a desktop computer at home as from a PDA while on the road, pTHINC provides a resize mechanism to zoom in and out of the display of a web session. pTHINC resizing is completely supported by the server, not the client.",
                "The server resamples updates to fit within the PDAs viewport before they are transmitted over the network. pTHINC uses Fants resampling algorithm to resize pixel updates.",
                "This provides smooth, visually pleasing updates with properly antialiasing and has only modest computational requirements. pTHINCs resizing approach has a number of advantages.",
                "First, it allows the PDA to leverage the vastly superior computational power of the server to use high quality resampling algorithms and produce higher quality updates for the PDA to display.",
                "Second, resizing the screen does not translate into additional resource requirements for the PDA, since it does not need to perform any additional work.",
                "Finally, better utilization of the wireless network is attained since rescaling the updates reduces their bandwidth requirements.",
                "To enable users to orient their displays on a PDA to provide a viewing experience that best accommodates user preferences and the layout of web pages or applications, pTHINC provides a display rotation mechanism to switch between landscape and portrait viewing modes. pTHINC display rotation is completely supported by the client, not the server. pTHINC does not explicitly recalculate the ge146 ometry of display updates to perform rotation, which would be computationally expensive.",
                "Instead, pTHINC simply changes the way data is copied into the framebuffer to switch between display modes.",
                "When in portrait mode, data is copied along the rows of the framebuffer from left to right.",
                "When in landscape mode, data is copied along the columns of the framebuffer from top to bottom.",
                "These very fast and simple techniques replace one set of copy operations with another and impose no performance overhead. pTHINC provides its own rotation mechanism to support a wide range of devices without imposing additional feature requirements on the PDA.",
                "Although some newer PDA devices provide native support for different orientations, this mechanism is not dynamic and requires the user to rotate the PDAs entire user interface before starting the pTHINC client.",
                "Windows Mobile provides native API mechanisms for PDA applications to rotate their UI on the fly, but these mechanisms deliver poor performance and display quality as the rotation is performed naively and is not completely accurate. 3.2 Video Playback Video has gradually become an integral part of the World Wide Web, and its presence will only continue to increase.",
                "Web sites today not only use animated graphics and flash to deliver web content in an attractive manner, but also utilize streaming video to enrich the web interface.",
                "Users are able to view pre-recorded and live newscasts on CNN, watch sports highlights on ESPN, and even search through large collection of videos on Google Video.",
                "To allow applications to provide efficient video playback, interfaces have been created in display systems that allow video device drivers to expose their hardware capabilities back to the applications. pTHINC takes advantage of these interfaces and its virtual device driver approach to provide a virtual bridge between the remote client and its hardware and the applications, and transparently support video playback.",
                "On top of this architecture, pTHINC uses the YUV colorspace to encode the video content, which provides a number of benefits.",
                "First, it has become increasingly common for PDA video hardware to natively support YUV and be able to perform the colorspace conversion and scaling automatically.",
                "As a result, pTHINC is able to provide fullscreen video playback without any performance hits.",
                "Second, the use of YUV allows for a more efficient representation of RGB data without loss of quality, by taking advantage of the human eyes ability to better distinguish differences in brightness than in color.",
                "In particular, pTHINC uses the YV12 format, which allows full color RGB data to be encoded using just 12 bits per pixel.",
                "Third, YUV data is produced as one of the last steps of the decoding process of most video codecs, allowing pTHINC to provide video playback in a manner that is format independent.",
                "Finally, even if the PDAs video hardware is unable to accelerate playback, the colorspace conversion process is simple enough that it does not impose unreasonable requirements on the PDA.",
                "A more concrete example of how pTHINC leverages the PDA video hardware to support video playback can be seen in our prototype implementation on the popular Dell Axim X51v PDA, which is equipped with the Intel 2700G multimedia accelerator.",
                "In this case, pTHINC creates an offscreen buffer in video memory and writes and reads from this memory region data on the YV12 format.",
                "When a new video frame arrives, video data is copied from the buffer to Figure 2: Experimental Testbed an overlay surface in video memory, which is independent of the normal surface used for traditional drawing.",
                "As the YV12 data is put onto the overlay, the Intel accelerator automatically performs both colorspace conversion and scaling.",
                "By using the overlay surface, pTHINC has no need to redraw the screen once video playback is over since the overlapped surface is unaffected.",
                "In addition, specific overlay regions can be manipulated by leveraging the video hardware, for example to perform hardware linear interpolation to smooth out the frame and display it fullscreen, and to do automatic rotation when the client runs in landscape mode. 4.",
                "EXPERIMENTAL RESULTS We have implemented a pTHINC prototype that runs the client on widely-used Windows Mobile-based Pocket PC devices and the server on both Windows and Linux operating systems.",
                "To demonstrate its effectiveness in supporting mobile wireless web applications, we have measured its performance on web applications.",
                "We present experimental results on different PDA devices for two popular web applications, browsing web pages and playing video content from the web.",
                "We compared pTHINC against native web applications running locally on the PDA to demonstrate the improvement that pTHINC can provide over the traditional fat-client approach.",
                "We also compared pTHINC against three of the most widely used thin clients that can run on PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] and VNC (Virtual Network Computing) [16].",
                "We follow common practice and refer to Citrix MetaFrameXP and Microsoft Remote Desktop by their respective remote display protocols, ICA (Independent Computing Architecture) and RDP (Remote Desktop Protocol). 4.1 Experimental Testbed We conducted our web experiments using two different wireless Pocket PC PDAs in an isolated Wi-Fi network testbed, as shown in Figure 2.",
                "The testbed consisted of two PDA client devices, a packet monitor, a thin-client server, and a web server.",
                "Except for the PDAs, all of the other machines were IBM Netfinity 4500R servers with dual 933 MHz Intel PIII CPUs and 512 MB RAM and were connected on a switched 100 Mbps FastEthernet network.",
                "The web server used was Apache 1.3.27, the network emulator was NISTNet 2.0.12, and the packet monitor was Ethereal 0.10.9.",
                "The PDA clients connected to the testbed through a 802.11b Lucent Orinoco AP-2000 wireless access point.",
                "All experiments using the wireless network were conducted within ten feet of the access point, so we considered the amount of packet loss to be negligible in our experiments.",
                "Two Pocket PC PDAs were used to provide results across both older, less powerful models and newer higher performance models.",
                "The older model was a Dell Axim X5 with 147 Client 1024×768 640×480 Depth Resize Clip RDP no yes 8-bit no yes VNC yes yes 16-bit no no ICA yes yes 16-bit yes no pTHINC yes yes 24-bit yes no Table 2: Thin-client Testbed Configuration Setting a 400 MHz Intel XScale PXA255 CPU and 64 MB RAM running Windows Mobile 2003 and a Dell TrueMobile 1180 2.4Ghz CompactFlash card for wireless networking.",
                "The newer model was a Dell Axim X51v with a 624 MHz Intel XScale XPA270 CPU and 64 MB RAM running Windows Mobile 5.0 and integrated 802.11b wireless networking.",
                "The X51v has an Intel 2700G multimedia accelerator with 16MB video memory.",
                "Both PDAs are capable of 16-bit color but have different screen sizes and display resolutions.",
                "The X5 has a 3.5 inch diagonal screen with 240×320 resolution.",
                "The X51v has a 3.7 inch diagonal screen with 480×640.",
                "The four thin clients that we used support different levels of display quality as summarized in Table 2.",
                "The RDP client only supports a fixed 640×480 display resolution on the server with 8-bit color depth, while other platforms provide higher levels of display quality.",
                "To provide a fair comparison across all platforms, we conducted our experiments with thin-client sessions configured for two possible resolutions, 1024×768 and 640×480.",
                "Both ICA and VNC were configured to use the native PDA resolution of 16-bit color depth.",
                "The current pTHINC prototype uses 24-bit color directly and the client downsamples updates to the 16-bit color depth available on the PDA.",
                "RDP was configured using only 8-bit color depth since it does not support any better color depth.",
                "Since both pTHINC and ICA provide the ability to view the display resized to fit the screen, we measured both clients with and without the display resized to fit the PDA screen.",
                "Each thin client was tested using landscape rather than portrait mode when available.",
                "All systems run on the X51v could run in landscape mode because the hardware provides a landscape mode feature.",
                "However, the X5 does not provide this functionality.",
                "Only pTHINC directly supports landscape mode, so it was the only system that could run in landscape mode on both the X5 and X51v.",
                "To provide a fair comparison, we also standardized on common hardware and operating systems whenever possible.",
                "All of the systems used the Netfinity server as the thin-client server.",
                "For the two systems designed for Windows servers, ICA and RDP, we ran Windows 2003 Server on the server.",
                "For the other systems which support X-based servers, VNC and pTHINC, we ran the Debian Linux Unstable distribution with the Linux 2.6.10 kernel on the server.",
                "We used the latest thin-client server versions available on each platform at the time of our experiments, namely Citrix MetaFrame XP Server for Windows Feature Release 3, Microsoft Remote Desktop built into Windows XP and Windows 2003 using RDP 5.2, and VNC 4.0. 4.2 Application Benchmarks We used two web application benchmarks for our experiments based on two common application scenarios, browsing web pages and playing video content from the web.",
                "Since many thin-client systems including two of the ones tested are closed and proprietary, we measured their performance in a noninvasive manner by capturing network traffic with a packet monitor and using a variant of slow-motion benchmarking [13] previously developed to measure thin-client performance in PDA environments [10].",
                "This measurement methodology accounts for both the display decoupling that can occur between client and server in thin-client systems as well as client processing time, which may be significant in the case of PDAs.",
                "To measure web browsing performance, we used a web browsing benchmark based on the Web Text Page Load Test from the Ziff-Davis i-Bench benchmark suite [7].",
                "The benchmark consists of JavaScript controlled load of 55 pages from the web server.",
                "The pages contain both text and graphics with pages varying in size.",
                "The graphics are embedded images in GIF and JPEG formats.",
                "The original i-Bench benchmark was modified for slow-motion benchmarking by introducing delays of several seconds between the pages using JavaScript.",
                "Then two tests were run, one where delays where added between each page, and one where pages where loaded continuously without waiting for them to be displayed on the client.",
                "In the first test, delays were sufficiently adjusted in each case to ensure that each page could be received and displayed on the client completely without temporal overlap in transferring the data belonging to two consecutive pages.",
                "We used the packet monitor to record the packet traffic for each run of the benchmark, then used the timestamps of the first and last packet in the trace to obtain our latency measures [10].",
                "The packet monitor also recorded the amount of data transmitted between the client and the server.",
                "The ratio between the data traffic in the two tests yields a scale factor.",
                "This scale factor shows the loss of data between the server and the client due to inability of the client to process the data quickly enough.",
                "The product of the scale factor with the latency measurement produces the true latency accounting for client processing time.",
                "To run the web browsing benchmark, we used Mozilla Firefox 1.0.4 running on the thin-client server for the thin clients, and Windows Internet Explorer (IE) Mobile for 2003 and Mobile for 5.0 for the native browsers on the X5 and X51v PDAs, respectively.",
                "In all cases, the web browser used was sized to fill the entire display region available.",
                "To measure video playback performance, we used a video benchmark that consisted of playing a 34.75s MPEG-1 video clip containing a mix of news and entertainment programming at full-screen resolution.",
                "The video clip is 5.11 MB and consists of 834 352x240 pixel frames with an ideal frame rate of 24 frames/sec.",
                "We measured video performance using slow-motion benchmarking by monitoring resulting packet traffic at two playback rates, 1 frames/second (fps) and 24 fps, and comparing the results to determine playback delays and frame drops that occur at 24 fps to measure overall video quality [13].",
                "For example, 100% quality means that all video frames were played at real-time speed.",
                "On the other hand, 50% quality could mean that half the video data was dropped, or that the clip took twice as long to play even though all of the video data was displayed.",
                "To run the video benchmark, we used Windows Media Player 9 for Windows-based thin-client servers, MPlayer 1.0 pre 6 for X-based thin-client servers, and Windows Media Player 9 Mobile and 10 Mobile for the native video players running locally on the X5 and X51v PDAs, respectively.",
                "In all cases, the video player used was sized to fill the entire display region available. 4.3 Measurements Figures 3 and 4 show the results of running the web brows148 0 1 10 100 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL Latency(s) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 3: Browsing Benchmark: Average Page Latency ing benchmark.",
                "For each platform, we show results for up to four different configurations, two on the X5 and two on the X51v, depending on whether each configuration was supported.",
                "However, not all platforms could support all configurations.",
                "The local browser only runs at the display resolution of the PDA, 480×680 or less for the X51v and the X5.",
                "RDP only runs at 640×480.",
                "Neither platform could support 1024×768 display resolution.",
                "ICA only ran on the X5 and could not run on the X51v because it did not work on Windows Mobile 5.",
                "Figure 3 shows the average latency per web page for each platform. pTHINC provides the lowest average web browsing latency on both PDAs.",
                "On the X5, pTHINC performs up to 70 times better than other thin-client systems and 8 times better than the local browser.",
                "On the X51v, pTHINC performs up to 80 times better than other thin-client systems and 7 times better than the native browser.",
                "In fact, all of the thin clients except VNC outperform the local PDA browser, demonstrating the performance benefits of the thin-client approach.",
                "Usability studies have shown that web pages should take less than one second to download for the user to experience an uninterrupted web browsing experience [14].",
                "The measurements show that only the thin clients deliver subsecond web page latencies.",
                "In contrast, the local browser requires more than 3 seconds on average per web page.",
                "The local browser performs worse since it needs to run a more limited web browser to process the HTML, JavaScript, and do all the rendering using the limited capabilities of the PDA.",
                "The thin clients can take advantage of faster server hardware and a highly tuned web browser to process the web content much faster.",
                "Figure 3 shows that RDP is the next fastest platform after pTHINC.",
                "However, RDP is only able to run at a fixed resolution of 640×480 and 8-bit color depth.",
                "Furthermore, RDP also clips the display to the size of the PDA screen so that it does not need to send updates that are not visible on the PDA screen.",
                "This provides a performance benefit assuming the remaining web content is not viewed, but degrades performance when a user scrolls around the display to view other web content.",
                "RDP achieves its performance with significantly lower display quality compared to the other thin clients and with additional display clipping not used by other systems.",
                "As a result, RDP performance alone does not provide a complete comparison with the other platforms.",
                "In contrast, pTHINC provides the fastest performance while at the same time providing equal or better display quality than the other systems. 0 1 10 100 1000 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL DataSize(KB) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 4: Browsing Benchmark: Average Page Data Transferred Since VNC and ICA provide similar display quality to pTHINC, these systems provide a more fair comparison of different thin-client approaches.",
                "ICA performs worse in part because it uses higher-level display primitives that require additional client processing costs.",
                "VNC performs worse in part because it loses display data due to its client-pull delivery mechanism and because of the client processing costs in decompressing raw pixel primitives.",
                "In both cases, their performance was limited in part because their PDA clients were unable to keep up with the rate at which web pages were being displayed.",
                "Figure 3 also shows measurements for those thin clients that support resizing the display to fit the PDA screen, namely ICA and pTHINC.",
                "Resizing requires additional processing, which results in slower average web page latencies.",
                "The measurements show that the additional delay incurred by ICA when resizing versus not resizing is much more substantial than for pTHINC.",
                "ICA performs resizing on the slower PDA client.",
                "In contrast, pTHINC leverage the more powerful server to do resizing, reducing the performance difference between resizing and not resizing.",
                "Unlike ICA, pTHINC is able to provide subsecond web page download latencies in both cases.",
                "Figure 4 shows the data transferred in KB per page when running the slow-motion version of the tests.",
                "All of the platforms have modest data transfer requirements of roughly 100 KB per page or less.",
                "This is well within the bandwidth capacity of Wi-Fi networks.",
                "The measurements show that the local browser does not transfer the least amount of data.",
                "This is surprising as HTML is often considered to be a very compact representation of content.",
                "Instead, RDP is the most bandwidth efficient platform, largely as a result of using only 8-bit color depth and screen clipping so that it does not transfer the entire web page to the client. pTHINC overall has the largest data requirements, slightly more than VNC.",
                "This is largely a result of the current pTHINC prototypes lack of native support for 16-bit color data in the wire protocol.",
                "However, this result also highlights pTHINCs performance as it is faster than all other systems even while transferring more data.",
                "Furthermore, as newer PDA models support full 24-bit color, these results indicate that pTHINC will continue to provide good web browsing performance.",
                "Since display usability and quality are as important as performance, Figures 5 to 8 compare screenshots of the different thin clients when displaying a web page, in this case from the popular BBC news website.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode 149 Figure 5: Browser Screenshot: RDP 640x480 Figure 6: Browser Screenshot: VNC 1024x768 Figure 7: Browser Screenshot: ICA Resized 1024x768 Figure 8: Browser Screenshot: pTHINC Resized 1024x768 using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "While the screenshots lack the visual fidelity of the actual device display, several observations can be made.",
                "Figure 5 shows that RDP does not support fullscreen mode and wastes lots of screen space for controls and UI elements, requiring the user to scroll around in order to access the full contents of the web browsing session.",
                "Figure 6 shows that VNC makes better use of the screen space and provides better display quality, but still forces the user to scroll around to view the web page due to its lack of resizing support.",
                "Figure 7 shows ICAs ability to display the full web page given its resizing support, but that its lack of landscape capability and poorer resize algorithm significantly compromise display quality.",
                "In contrast, Figure 8 shows pTHINC using resizing to provide a high quality fullscreen display of the full width of the web page. pTHINC maximizes the entire viewing region by moving all controls to the PDA buttons.",
                "In addition, pTHINC leverages the server computational power to use a high quality resizing algorithm to resize the display to fit the PDA screen without significant overhead.",
                "Figures 9 and 10 show the results of running the video playback benchmark.",
                "For each platform except ICA, we show results for an X5 and X51v configuration.",
                "ICA could not run on the X51v as noted earlier.",
                "The measurements were done using settings that reflected the environment a user would have to access a web session from both a desktop computer and a PDA.",
                "As such, a 1024×768 server display resolution was used whenever possible and the video was shown at fullscreen.",
                "RDP was limited to 640×480 display resolution as noted earlier.",
                "Since viewing the entire video display is the only really usable option, we resized the display to fit the PDA screen for those platforms that supported this feature, namely ICA and pTHINC.",
                "Figure 9 shows the video quality for each platform. pTHINC is the only thin client able to provide perfect video playback quality, similar to the native PDA video player.",
                "All of the other thin clients deliver very poor video quality.",
                "With the exception of RDP on the X51v which provided unacceptable 35% video quality, none of the other systems were even able to achieve 10% video quality.",
                "VNC and ICA have the worst quality at 8% on the X5 device. pTHINCs native video support enables superior video performance, while other thin clients suffer from their inability to distinguish video from normal display updates.",
                "They attempt to apply ineffective and expensive compression algorithms on the video data and are unable to keep up with the stream of updates generated, resulting in dropped frames or long playback times.",
                "VNC suffers further from its client-pull update model because video frames are generated faster than the rate at which the client can process and send requests to the server to obtain the next display update.",
                "Figure 10 shows the total data transferred during 150 0% 20% 40% 60% 80% 100% pTHINCICAVNCRDPLOCAL VideoQuality Platform Axim X5 Axim X51v Figure 9: Video Benchmark: Fullscreen Video Quality 0 1 10 100 pTHINCICAVNCRDPLOCAL VideoDataSize(MB) Platform Axim X5 Axim X51v Figure 10: Video Benchmark: Fullscreen Video Data video playback for each system.",
                "The native player is the most bandwidth efficient platform, sending less than 6 MB of data, which corresponds to about 1.2 Mbps of bandwidth. pTHINCs 100% video quality requires about 25 MB of data which corresponds to a bandwidth usage of less than 6 Mbps.",
                "While the other thin clients send less data than THINC, they do so because they are dropping video data, resulting in degraded video quality.",
                "Figures 11 to 14 compare screenshots of the different thin clients when displaying the video clip.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "Figures 11 and 12 show that RDP and VNC are unable to display the entire video frame on the PDA screen.",
                "RDP wastes screen space for UI elements and VNC only shows the top corner of the video frame on the screen.",
                "Figure 13 shows that ICA provides resizing to display the entire video frame, but did not proportionally resize the video data, resulting in strange display artifacts.",
                "In contrast, Figure 14 shows pTHINC using resizing to provide a high quality fullscreen display of the entire video frame. pTHINC provides visually more appealing video display than RDP, VNC, or ICA. 5.",
                "RELATED WORK Several studies have examined the web browsing performance of thin-client computing [13, 19, 10].",
                "The ability for thin clients to improve web browsing performance on wireless PDAs was first quantitatively demonstrated in a previous study by one of the authors [10].",
                "This study demonstrated that thin clients can provide both faster web browsing performance and greater web browsing functionality.",
                "The study considered a wide range of web content including content from medical information systems.",
                "Our work builds on this previous study and consider important issues such as how usable existing thin clients are in PDA environments, the trade-offs between thin-client usability and performance, performance across different PDA devices, and the performance of thin clients on common web-related applications such as video.",
                "Many thin clients have been developed and some have PDA clients, including Microsofts Remote Desktop [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5], and Tarantella [18].",
                "These systems were first designed for desktop computing and retrofitted for PDAs.",
                "Unlike pTHINC, they do not address key system architecture and usability issues important for PDAs.",
                "This limits their display quality, system performance, available screen space, and overall usability on PDAs. pTHINC builds on previous work by two of the authors on THINC [1], extending the server architecture and introducing a client interface and usage model to efficiently support PDA devices for mobile web applications.",
                "Other approaches to improve the performance of mobile wireless web browsing have focused on using transcoding and caching proxies in conjunction with the fat client model [11, 9, 4, 8].",
                "They work by pushing functionality to external proxies, and using specialized browsing applications on the PDA device that communicate with the proxy.",
                "Our thinclient approach differs fundamentally from these fat-client approaches by pushing all web browser logic to the server, leveraging existing investments in desktop web browsers and helper applications to work seamlessly with production systems without any additional proxy configuration or web browser modifications.",
                "With the emergence of web browsing on small display devices, web sites have been redesigned using mechanisms like WAP and specialized native web browsers have been developed to tailor the needs of these devices.",
                "Recently, Opera has developed the Opera Mini [15] web browser, which uses an approach similar to the thin-client model to provide access across a number of mobile devices that would normally be incapable of running a web browser.",
                "Instead of requiring the device to process web pages, it uses a remote server to pre-process the page before sending it to the phone. 6.",
                "CONCLUSIONS We have introduced pTHINC, a thin-client architecture for wireless PDAs. pTHINC provides key architectural and usability mechanisms such as server-side screen resizing, clientside screen rotation using simple copy techniques, YUV video support, and maximizing screen space for display updates and leveraging existing PDA control buttons for UI elements. pTHINC transparently supports traditional desktop browsers and their helper applications on PDA devices and desktop machines, providing mobile users with ubiquitous access to a consistent, personalized, and full-featured web environment across heterogeneous devices.",
                "We have implemented pTHINC and measured its performance on web applications compared to existing thin-client systems and native web applications.",
                "Our results on multiple mobile wireless devices demonstrate that pTHINC delivers web browsing performance up to 80 times better than existing thin-client systems, and 8 times better than a native PDA browser.",
                "In addition, pTHINC is the only PDA thin client 151 Figure 11: Video Screenshot: RDP 640x480 Figure 12: Video Screenshot: VNC 1024x768 Figure 13: Video Screenshot: ICA Resized 1024x768 Figure 14: Video Screenshot: pTHINC Resized 1024x768 that transparently provides full-screen, full frame rate video playback, making web sites with multimedia content accessible to mobile web users. 7.",
                "ACKNOWLEDGEMENTS This work was supported in part by NSF ITR grants CCR0219943 and CNS-0426623, and an IBM SUR Award. 8.",
                "REFERENCES [1] R. Baratto, L. Kim, and J. Nieh.",
                "THINC: A Virtual Display Architecture for Thin-Client Computing.",
                "In Proceedings of the 20th ACM Symposium on Operating Systems Principles (SOSP), Oct. 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius, and A. Muir.",
                "Microsoft Windows NT Server 4.0, Terminal Server Edition: Technical Reference.",
                "Microsoft Press, Redmond, WA, 1999. [4] A.",
                "Fox, I. Goldberg, S. D. Gribble, and D. C. Lee.",
                "Experience With Top Gun Wingman: A Proxy-Based Graphical Web Browser for the 3Com PalmPilot.",
                "In Proceedings of Middleware 98, Lake District, England, September 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Health Insurance Portability and Accountability Act. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench version 1.5. http: //etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi.",
                "On proxy agents, mobility, and web access.",
                "Mobile Networks and Applications, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon, and A. Ortega.",
                "Design and Implementation of a Soft Caching Proxy.",
                "Computer Networks and ISDN Systems, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana, and S. Varshneya.",
                "Improving Web Browsing on Wireless PDAs Using Thin-Client Computing.",
                "In Proceedings of the 13th International World Wide Web Conference (WWW), May 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham, and P. Shenoy.",
                "TranSquid: Transcoding and caching proxy for heterogenous ecommerce environments.",
                "In Proceedings of the 12th IEEE Workshop on Research Issues in Data Engineering (RIDE 02), Feb. 2002. [12] .NET VNC Viewer for PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang, and N. Novik.",
                "Measuring Thin-Client Performance Using Slow-Motion Benchmarking.",
                "ACM Trans.",
                "Computer Systems, 21(1):87-115, Feb. 2003. [14] J. Nielsen.",
                "Designing Web Usability.",
                "New Riders Publishing, Indianapolis, IN, 2000. [15] Opera Mini Browser. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood, and A. Hopper.",
                "Virtual Network Computing.",
                "IEEE Internet Computing, 2(1), Jan./Feb. 1998. [17] R. W. Scheifler and J. Gettys.",
                "The X Window System.",
                "ACM Trans.",
                "Gr., 5(2):79-106, Apr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla, and M. Sajjadpour.",
                "Web Browsing Performance of Wireless Thin-Client Computing.",
                "In Proceedings of the 12th International World Wide Web Conference (WWW), May 2003. 152"
            ],
            "original_annotated_samples": [
                "We have developed pTHINC, a PDA thinclient solution that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide high-fidelity display and <br>seamless mobility</br> across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available screen resolution for application display.",
                "Furthermore, existing thin clients are ineffective at providing <br>seamless mobility</br> across the heterogeneous mix of device display sizes and resolutions.",
                "This provides users with <br>seamless mobility</br> across different devices."
            ],
            "translated_annotated_samples": [
                "Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y <br>movilidad fluida</br> en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la resolución de pantalla disponible para la visualización de aplicaciones.",
                "Además, los clientes ligeros existentes son ineficaces para proporcionar <br>movilidad fluida</br> en la mezcla heterogénea de tamaños de pantalla y resoluciones de dispositivos.",
                "Esto proporciona a los usuarios una <br>movilidad fluida</br> entre diferentes dispositivos."
            ],
            "translated_text": "pTHINC: Una arquitectura de cliente ligero para la web inalámbrica móvil Joeng Kim, Ricardo A. Baratto y Jason Nieh Departamento de Ciencias de la Computación Universidad de Columbia, Nueva York, NY, EE. UU. {jk2438, ricardo, nieh}@cs.columbia.edu RESUMEN Aunque las aplicaciones web están ganando popularidad en las PDAs inalámbricas móviles, los navegadores web en estos sistemas pueden ser bastante lentos y a menudo carecen de funcionalidad adecuada para acceder a muchos sitios web. Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y <br>movilidad fluida</br> en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la resolución de pantalla disponible para la visualización de aplicaciones. Hemos implementado pTHINC en Windows Mobile y evaluado su rendimiento en dispositivos móviles inalámbricos. Nuestros resultados comparados con los navegadores web PDA locales y otros enfoques de cliente ligero demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero PDA que soporta de manera efectiva aplicaciones de ayuda del navegador cruciales como la reproducción de video. Categorías y Descriptores de Asunto: C.2.4 Comunicación de Computadoras-Redes: Sistemas Distribuidos - cliente/servidor Términos Generales: Diseño, Experimentación, Rendimiento 1. La creciente ubicuidad de las redes inalámbricas y la disminución del costo del hardware están impulsando una proliferación de dispositivos móviles inalámbricos portátiles, tanto como asistentes digitales personales (PDA) inalámbricos independientes y dispositivos populares integrados de PDA/teléfono celular. Estos dispositivos están permitiendo nuevas formas de computación y comunicación móvil. Los proveedores de servicios están aprovechando estos dispositivos para ofrecer acceso web omnipresente, y los usuarios de la web móvil a menudo ya utilizan estos dispositivos para acceder a información habilitada para la web, como noticias, correo electrónico, guías de viaje localizadas y mapas. Es probable que en unos pocos años, la mayoría de los dispositivos que accedan a la web sean móviles. Los usuarios suelen acceder al contenido web ejecutando un navegador web y aplicaciones auxiliares asociadas localmente en la PDA. Aunque existen navegadores web nativos para PDAs, ofrecen un rendimiento deficiente y tienen un conjunto de funciones mucho más pequeño y una funcionalidad más limitada que sus contrapartes de computadoras de escritorio [10]. Como resultado, los navegadores web de PDA a menudo no pueden mostrar el contenido web de sitios web que utilizan tecnologías web más avanzadas para ofrecer una experiencia web más rica. Este problema fundamental surge por dos razones. Primero, debido a que las PDAs tienen un entorno de hardware/software completamente diferente de las computadoras de escritorio tradicionales, las aplicaciones web necesitan ser reescritas y personalizadas para las PDAs si es posible, duplicando los costos de desarrollo. Debido a que el mercado de aplicaciones de escritorio es más grande y maduro, la mayoría del esfuerzo de desarrollo generalmente se destina a las aplicaciones de escritorio, lo que resulta en una mayor funcionalidad y rendimiento que sus contrapartes de PDA. En segundo lugar, las PDAs tienen un entorno con recursos más limitados que las computadoras de escritorio tradicionales para ofrecer un factor de forma más pequeño y una vida útil de la batería más larga. Los navegadores web de escritorio son aplicaciones grandes y complejas que no pueden ejecutarse en una PDA. En cambio, los desarrolladores se ven obligados a reducir significativamente estas navegadores web para ofrecer un navegador web PDA utilizable, lo que limita la funcionalidad del navegador PDA. La computación de cliente ligero proporciona un enfoque alternativo para habilitar el acceso web ubicuo desde dispositivos móviles. Un sistema informático de cliente ligero consiste en un servidor y un cliente que se comunican a través de una red utilizando un protocolo de visualización remota. El protocolo permite que las pantallas gráficas se virtualicen y se sirvan a través de una red a un dispositivo cliente, mientras que la lógica de la aplicación se ejecuta en el servidor. Usando el protocolo de visualización remota, el cliente transmite la entrada del usuario al servidor, y el servidor devuelve actualizaciones de pantalla de las aplicaciones del servidor al cliente. Utilizando un modelo de cliente ligero para dispositivos móviles de mano, las PDAs pueden convertirse en clientes simples sin estado que aprovechan las capacidades del servidor remoto para ejecutar navegadores web y otras aplicaciones auxiliares. El modelo de cliente ligero proporciona varios beneficios importantes para la web inalámbrica móvil. Primero, las aplicaciones web estándar de escritorio pueden utilizarse para entregar contenido web a PDAs sin necesidad de reescribir o adaptar las aplicaciones para ejecutarse en una PDA, lo que reduce los costos de desarrollo y aprovecha las inversiones existentes en software. Segundo, las aplicaciones web complejas pueden ejecutarse en servidores potentes en lugar de ejecutarse en versiones simplificadas en PDAs con recursos más limitados, lo que proporciona una mayor funcionalidad y un mejor rendimiento [10]. Tercero, las aplicaciones web pueden aprovechar servidores con redes más rápidas y mejor conectividad, lo que mejora aún más el rendimiento de la aplicación. En cuarto lugar, las PDAs pueden ser dispositivos aún más simples ya que no necesitan realizar una lógica de aplicación compleja, lo que potencialmente reduce el consumo de energía y extiende la vida útil de la batería. Finalmente, los clientes ligeros PDA pueden ser dispositivos prácticamente sin estado que no necesitan ser respaldados o restaurados, requieren casi ningún mantenimiento o actualizaciones, y no almacenan datos sensibles que puedan perderse o ser robados. Este modelo proporciona una vía viable para que las organizaciones médicas cumplan con las regulaciones de HIPAA mientras incorporan dispositivos móviles en sus operaciones diarias. A pesar de estas posibles ventajas, los clientes ligeros no han podido ofrecer la gama completa de estos beneficios al entregar aplicaciones web a dispositivos móviles portátiles. Los thin clients existentes no fueron diseñados para PDAs y no tienen en cuenta problemas importantes de usabilidad en el contexto de dispositivos de factor de forma pequeño, lo que resulta en dificultades para navegar por el contenido web mostrado. Además, los clientes ligeros existentes son ineficaces para proporcionar <br>movilidad fluida</br> en la mezcla heterogénea de tamaños de pantalla y resoluciones de dispositivos. Si bien los clientes ligeros existentes ya pueden ofrecer un rendimiento más rápido que los navegadores web nativos de PDA al entregar contenido web HTML, no admiten de manera efectiva aplicaciones web auxiliares más intensivas en visualización, como videos multimedia, que cada vez son una parte integral del contenido web disponible. Para aprovechar todo el potencial de la informática de cliente ligero en la provisión de la web inalámbrica móvil en PDAs, hemos desarrollado pTHINC (PDA THin-client InterNet Computing). pTHINC se basa en nuestro trabajo previo en THINC [1] para proporcionar una arquitectura de cliente ligero para dispositivos móviles de mano. pTHINC virtualiza y redimensiona la pantalla en el servidor para entregar de manera eficiente actualizaciones de pantalla de alta fidelidad a una amplia gama de clientes diferentes, tamaños de pantalla y orientaciones de pantalla, incluidos los modos de visualización en vertical y horizontal. Esto permite a pTHINC proporcionar la misma sesión web persistente en diferentes dispositivos de cliente. Por ejemplo, pTHINC puede proporcionar la misma sesión de navegación web adecuadamente escalada para su visualización en una computadora de escritorio y una PDA, de modo que las mismas cookies, marcadores y otros metadatos estén disponibles continuamente en ambas máquinas simultáneamente. El enfoque de visualización virtual de pTHINC aprovecha la información semántica disponible en los comandos de visualización y el hardware de video del cliente para proporcionar mecanismos de visualización remota más eficientes que son cruciales para admitir aplicaciones web más intensivas en visualización. Dada la limitada resolución de pantalla en las PDA, pTHINC maximiza el uso del espacio de pantalla para la visualización remota al trasladar la funcionalidad de control de la pantalla a los botones de control de PDA fácilmente disponibles, mejorando la usabilidad del sistema. Hemos implementado pTHINC en Windows Mobile y demostrado que funciona de manera transparente con las aplicaciones existentes, sistemas de ventanas y sistemas operativos, y no requiere modificar, recompilar o volver a enlazar el software existente. Hemos evaluado cuantitativamente pTHINC frente a navegadores web PDA locales y otros enfoques de cliente ligero en dispositivos Pocket PC. Nuestros resultados experimentales demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero de PDA que soporta de manera efectiva aplicaciones esenciales de ayuda para el navegador, como la reproducción de video. Este documento presenta el diseño e implementación de pTHINC. La sección 2 describe el modelo de uso general y las características de usabilidad de pTHINC. La sección 3 presenta el diseño y la arquitectura del sistema de pTHINC. La sección 4 presenta resultados experimentales que miden el rendimiento de pTHINC en aplicaciones web y lo comparan con navegadores nativos de PDA y otros sistemas de cliente ligero de PDA populares. La sección 5 discute el trabajo relacionado. Finalmente, presentamos algunas observaciones finales. El MODELO DE USO DE pTHINC pTHINC es un sistema de cliente ligero que consiste en una aplicación de visualización de cliente simple que se ejecuta en la PDA y un servidor que se ejecuta en una PC estándar. El servidor aprovecha PCs más potentes para ejecutar navegadores web y otra lógica de aplicaciones. El cliente recibe la entrada del usuario desde el lápiz óptico y el teclado virtual de la PDA y los envía al servidor para pasarlos a las aplicaciones. Las actualizaciones de la pantalla son luego enviadas desde el servidor al cliente para mostrar al usuario. Cuando se inicia el cliente PDA pTHINC, se presenta al usuario una interfaz gráfica simple donde se pueden proporcionar información como la dirección y el puerto del servidor, la información de autenticación del usuario y la configuración de la sesión. pTHINC primero intenta conectarse al servidor y realizar el saludo necesario. Una vez que este proceso haya sido completado, pTHINC presenta al usuario la visualización más reciente de su sesión. Si la sesión no existe, se crea una nueva sesión. Las sesiones existentes pueden continuar sin problemas sin cambios en la configuración de la sesión o del servidor. A diferencia de otros sistemas de cliente ligero, pTHINC proporciona a un usuario un modelo de sesión web persistente en el que un usuario puede iniciar una sesión ejecutando un navegador web y aplicaciones asociadas en el servidor, luego desconectarse de esa sesión y volver a conectarse en cualquier momento. Cuando un usuario se reconecta a la sesión, todas las aplicaciones siguen funcionando desde donde el usuario las dejó, de modo que el usuario puede seguir trabajando como si nunca se hubiera desconectado. La capacidad de desconectarse y reconectarse a una sesión en cualquier momento es un beneficio importante para los usuarios de PDA inalámbricas móviles que pueden tener conectividad de red intermitente. El modelo de sesión web persistente de pTHINCs permite a un usuario reconectarse a una sesión web desde dispositivos distintos al que se inició originalmente la sesión web. Esto proporciona a los usuarios una <br>movilidad fluida</br> entre diferentes dispositivos. Si un usuario pierde su PDA, puede fácilmente usar otra PDA para acceder a su sesión web. Además, pTHINC permite a los usuarios utilizar dispositivos que no son PDA para acceder a sesiones web también. Un usuario puede acceder a la misma sesión web persistente en una PC de escritorio como en una PDA, lo que le permite al usuario utilizar la misma sesión web desde cualquier computadora. El modelo de sesión web persistente de pTHINCs aborda un problema clave encontrado por los usuarios de la web móvil, la falta de un entorno web común en diferentes computadoras. Los navegadores web a menudo almacenan información importante como marcadores, cookies e historial, lo que les permite funcionar de una manera mucho más útil. El problema que ocurre cuando un usuario se mueve entre computadoras es que estos datos, específicos de una instalación de un navegador web, no pueden moverse con el usuario. Además, los navegadores web a menudo necesitan aplicaciones auxiliares para procesar diferentes contenidos multimedia, y esas aplicaciones pueden no estar disponibles de manera consistente en todas las computadoras. pTHINC aborda este problema al permitir que un usuario utilice de forma remota el mismo entorno de navegador web y aplicaciones auxiliares desde cualquier computadora. Como resultado, pTHINC puede proporcionar un entorno de navegación web común y consistente para usuarios móviles en diferentes dispositivos sin requerirles intentar sincronizar repetidamente diferentes entornos de navegación web en múltiples máquinas. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC debe proporcionar mecanismos para admitir diferentes tamaños de pantalla y resoluciones. Con este fin, pTHINC proporciona una función de zoom que permite a un usuario acercar y alejar una pantalla y permite que la pantalla de una sesión web 144 Figura 1: teclas de acceso rápido de pTHINC se redimensione para adaptarse a la pantalla del dispositivo que se está utilizando. Por ejemplo, si el servidor está ejecutando una sesión web a 1024×768 pero el cliente es una PDA con una resolución de pantalla de 640×480, pTHINC redimensionará la pantalla del escritorio para que se ajuste a la pantalla más pequeña de la PDA. pTHINC proporciona al usuario de la PDA la opción de aumentar el tamaño de la pantalla haciendo zoom en diferentes partes de la pantalla. Los usuarios suelen estar familiarizados con el diseño general de los sitios web que visitan con frecuencia, y pueden aprovechar esta función de redimensionamiento para navegar mejor por las páginas web. Por ejemplo, un usuario puede alejarse de la pantalla para ver todo el contenido de la página y navegar por los hipervínculos, luego acercarse a una región de interés para obtener una mejor vista. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC también debe proporcionar mecanismos para admitir diferentes orientaciones de pantalla. En un entorno de escritorio, los usuarios suelen estar acostumbrados a tener las pantallas presentadas en modo horizontal, donde el ancho de la pantalla es mayor que su altura. Sin embargo, en un entorno de PDA, la elección no siempre es obvia. Algunos usuarios pueden preferir tener la pantalla en modo retrato, ya que es más fácil sostener el dispositivo en sus manos, mientras que otros pueden preferir el modo paisaje para minimizar la cantidad de desplazamiento lateral necesario para ver una página web. Para adaptarse a las preferencias de los usuarios de PDA, pTHINC proporciona una función de orientación que le permite rotar la pantalla de forma fluida entre el modo horizontal y vertical. El modo de paisaje es particularmente útil para los usuarios de pTHINC que acceden con frecuencia a sus sesiones web tanto en dispositivos de escritorio como en PDA, proporcionando a esos usuarios el mismo ajuste de paisaje familiar en diferentes dispositivos. Dado que el espacio de pantalla es un recurso relativamente escaso en las PDAs, pTHINC se ejecuta en modo de pantalla completa para maximizar el área de pantalla disponible para mostrar la sesión web. Para poder utilizar toda la pantalla en la PDA y aún así permitir al usuario controlar e interactuar con ella, pTHINC reutiliza los botones de acceso directo típicos que se encuentran en las PDAs para realizar todas las funciones de control disponibles para el usuario. Los botones utilizados por pTHINC no requieren ningún cambio en el entorno del sistema operativo; simplemente son interceptados por la aplicación cliente de pTHINC cuando se presionan. La Figura 1 muestra cómo pTHINC utiliza los botones de acceso directo para proporcionar una navegación sencilla y mejorar la experiencia del usuario en general. Estos botones no son específicos del dispositivo, y el diseño mostrado es común en dispositivos PocketPC ampliamente utilizados. pTHINC proporciona seis accesos directos para apoyar su modelo de uso: • Rotar pantalla: El botón de grabación en el borde izquierdo se utiliza para rotar la pantalla entre modo retrato y modo paisaje cada vez que se presiona el botón. • Alejar: El botón más a la izquierda en la parte inferior delantera se utiliza para alejar la visualización de la sesión web proporcionando una vista general de la sesión web. • Acercar: El segundo botón más a la izquierda en la parte inferior delantera se utiliza para acercar la visualización de la sesión web para ver más claramente el contenido de interés. • Desplazamiento direccional: El botón central en la parte inferior delantera se utiliza para desplazarse alrededor de la visualización utilizando un solo botón de control de una manera que ya es familiar para los usuarios de PDA. Esta función es particularmente útil cuando el usuario ha ampliado una región de la pantalla de tal manera que solo una parte de la pantalla es visible en la pantalla. • Mostrar/Ocultar Teclado: El segundo botón más a la derecha en la parte inferior frontal se utiliza para mostrar un teclado virtual dibujado en la pantalla para dispositivos que no tienen teclado físico. El teclado virtual utiliza mecanismos estándar del sistema operativo de PDA, proporcionando portabilidad entre diferentes entornos de PDA. • Cerrar sesión: El botón más a la derecha en la parte inferior frontal se utiliza para desconectarse de la sesión de pTHINC. pTHINC utiliza la pantalla táctil de la PDA, el lápiz óptico y mecanismos estándar de interfaz de usuario para proporcionar una metáfora de punto y clic de la interfaz de usuario similar a la proporcionada por el ratón en un entorno de computación de escritorio tradicional. pTHINC no utiliza un cursor ya que los entornos de PDA no lo proporcionan. En cambio, un usuario puede usar el lápiz táctil para tocar diferentes secciones de la pantalla táctil y señalar el enfoque de entrada. Un toque único en la pantalla táctil genera un evento de clic de ratón correspondiente. Un doble toque en la pantalla táctil genera un evento de doble clic del ratón correspondiente. pTHINC proporciona emulación de ratón de dos botones al usar el lápiz óptico para presionar la pantalla durante un segundo y generar un clic derecho del ratón. Todas estas acciones son idénticas a la forma en que los usuarios ya interactúan con las aplicaciones de PDA en el entorno común de PocketPC. En la navegación web, los usuarios pueden hacer clic en hipervínculos y enfocarse en cuadros de entrada simplemente tocando el área de interés deseada en la pantalla. A diferencia de los navegadores web PDA locales y otras aplicaciones PDA, pTHINC aprovecha metáforas de interfaz de usuario de escritorio más potentes para permitir a los usuarios manipular múltiples ventanas de aplicación abiertas en lugar de estar limitados a una sola ventana de aplicación en un momento dado. Esto proporciona una mayor flexibilidad de navegación más allá de lo que está actualmente disponible en los dispositivos PDA. Similar a un entorno de escritorio, las ventanas del navegador y otras ventanas de aplicaciones pueden ser movidas al presionar y arrastrar el lápiz óptico de manera similar a un ratón. 3. La arquitectura del sistema pTHINC se basa en la arquitectura de visualización remota THINC para proporcionar un sistema de cliente ligero para PDAs. pTHINC virtualiza la visualización en el servidor aprovechando la capa de abstracción del dispositivo de video, que se encuentra por debajo del servidor de ventanas y por encima del framebuffer. Este es un nivel de dispositivo bien definido y de bajo nivel que depende del dispositivo y expone el hardware de video al sistema de visualización. pTHINC logra esto a través de un controlador de pantalla virtual simple que intercepta comandos de dibujo, los empaqueta y los envía a través de la red. Mientras que otros enfoques de cliente ligero interceptan comandos de visualización en otras capas del subsistema de visualización, el enfoque de virtualización de pantalla de pTHINC proporciona algunos beneficios clave para admitir eficientemente a los clientes de PDA. Por ejemplo, interceptar comandos de visualización en una capa superior entre aplicaciones y el sistema de ventanas, como se hace en X [17], requiere replicar y ejecutar una gran cantidad de funcionalidades en la PDA que tradicionalmente son proporcionadas por el sistema de ventanas de escritorio. Dada la magnitud y complejidad de los sistemas de ventanas tradicionales, intentar replicar esta funcionalidad en el entorno restringido de una PDA habría resultado ser una tarea desafiante, y quizás inviable. Además, las aplicaciones y el sistema de ventanas a menudo requieren una sincronización precisa en su funcionamiento, y imponer una red inalámbrica entre ellos al ejecutar las aplicaciones en el servidor y el sistema de ventanas en el cliente degradaría significativamente el rendimiento. Por otro lado, interceptar en una capa inferior extrayendo píxeles del framebuffer a medida que se renderizan proporciona una solución simple que requiere muy poca funcionalidad en el cliente de PDA, pero también puede resultar en un rendimiento degradado. La razón es que para cuando el servidor de visualización remota intenta enviar actualizaciones de pantalla, ha perdido toda la información semántica que podría haberle ayudado a codificar de manera eficiente, y debe recurrir a utilizar un mecanismo de codificación genérico y costoso en el servidor, así como un mecanismo de decodificación potencialmente costoso en el cliente de PDA limitado. A diferencia de los enfoques de intercepción de alto y bajo nivel, el enfoque de pTHINCs de interceptar en el controlador del dispositivo proporciona un equilibrio efectivo entre la simplicidad del cliente y del servidor, y la capacidad de codificar y decodificar de manera eficiente las actualizaciones de pantalla. Al utilizar un enfoque de visualización virtual de bajo nivel, pTHINC puede codificar de manera eficiente los comandos de visualización de la aplicación utilizando solo un pequeño conjunto de comandos de bajo nivel. En un entorno de PDA, este conjunto de comandos proporciona un componente crucial para mantener la simplicidad del cliente en el entorno de PDA con recursos limitados. Los comandos de visualización se muestran en la Tabla 1 y funcionan de la siguiente manera. COPY instruye al cliente a copiar una región de la pantalla desde su framebuffer local a otra ubicación. Este comando mejora la experiencia del usuario al acelerar el desplazamiento y el movimiento de ventanas opacas sin necesidad de reenviar datos de pantalla desde el servidor. SFILL, PFILL y BITMAP son comandos que pintan una región de tamaño fijo en la pantalla. Son útiles para acelerar la visualización de fondos de ventanas sólidas, patrones de escritorio, fondos de páginas web, dibujo de texto y ciertas operaciones en programas de manipulación de gráficos. SFILL llena una región considerable en la pantalla con un solo color. PFILL replica una baldosa sobre una región de la pantalla. BITMAP realiza un relleno utilizando un mapa de bits de unos y ceros como un estipulado para aplicar un color de primer plano y de fondo. Finalmente, RAW se utiliza para transmitir datos de píxeles no codificados que se mostrarán textualmente en una región de la pantalla. Este comando se invoca como último recurso si el servidor no puede emplear ningún otro comando, y es el único comando que puede ser comprimido para mitigar su impacto en el ancho de banda de la red. pTHINC entrega sus comandos utilizando un mecanismo de actualización de servidor-push no bloqueante, donde tan pronto como se generan actualizaciones de pantalla en el servidor, se envían al cliente. Los clientes no están obligados a solicitar explícitamente actualizaciones de pantalla, minimizando así el impacto que la típica variabilidad de la latencia de la red inalámbrica puede tener en la capacidad de respuesta del sistema. Teniendo en cuenta que los recursos Descripción de Comando COPY Copiar un área de búfer de fotogramas en coordenadas especificadas SFILL Rellenar un área con un valor de color de píxel dado PFILL Azulejar un área con un patrón de píxeles dado BITMAP Rellenar una región usando un patrón de bits RAW Mostrar datos de píxeles en bruto en una ubicación dada Tabla 1: Comandos de visualización del protocolo pTHINC. Las PDAs y las redes inalámbricas limitadas pueden no ser capaces de mantenerse al día con un servidor rápido que genera una gran cantidad de actualizaciones, pTHINC es capaz de fusionar, recortar y descartar actualizaciones automáticamente si se produce pérdida o congestión de red, o si el cliente no puede mantenerse al día con la velocidad de las actualizaciones. Este tipo de comportamiento resulta crucial en un entorno de navegación web, donde por ejemplo, una página puede ser redibujada varias veces mientras se renderiza al vuelo por el navegador. En este caso, la PDA solo recibirá y mostrará el resultado final, que claramente es todo lo que al usuario le interesa ver. pTHINC prioriza la entrega de actualizaciones a la PDA utilizando un programador de actualizaciones preemptivo de Tamaño Restante Más Corto Primero (SRSF). SRSF es análogo a la programación de Tiempo de Procesamiento Restante más Corto, la cual se sabe que es óptima para minimizar el tiempo medio de respuesta en un sistema interactivo. En un entorno de navegación web, los trabajos cortos están asociados con el texto y los componentes básicos de diseño de página, como el fondo de las páginas, que son contenido web crítico para el usuario. Por otro lado, los trabajos grandes suelen ser elementos de embellecimiento de menor prioridad, o, incluso peor, banners y anuncios de página web, los cuales tienen un valor cuestionable para el usuario mientras navega por la página. Usando SRSF, pTHINC puede maximizar la utilización del ancho de banda relativamente escaso disponible en la conexión inalámbrica entre la PDA y el servidor. 3.1 Gestión de la Pantalla Para permitir a los usuarios acceder con la misma facilidad a su navegador web y aplicaciones auxiliares desde una computadora de escritorio en casa como desde una PDA mientras están en movimiento, pTHINC proporciona un mecanismo de redimensionamiento para hacer zoom dentro y fuera de la pantalla de una sesión web. El redimensionamiento de pTHINC es completamente compatible con el servidor, no con el cliente. El servidor vuelve a muestrear las actualizaciones para que se ajusten al área de visualización de las PDAs antes de ser transmitidas por la red. pTHINC utiliza el algoritmo de remuestreo de Fants para redimensionar las actualizaciones de píxeles. Esto proporciona actualizaciones suaves y visualmente agradables con un antialiasing adecuado y solo requiere modestos recursos computacionales. El enfoque de redimensionamiento de pTHINCs tiene varias ventajas. Primero, permite al PDA aprovechar la vastamente superior potencia computacional del servidor para utilizar algoritmos de re-muestreo de alta calidad y producir actualizaciones de mayor calidad para que el PDA las muestre. Segundo, cambiar el tamaño de la pantalla no se traduce en requisitos adicionales de recursos para la PDA, ya que no necesita realizar ningún trabajo adicional. Finalmente, se logra una mejor utilización de la red inalámbrica ya que al reescalar las actualizaciones se reducen sus requisitos de ancho de banda. Para permitir a los usuarios orientar sus pantallas en una PDA y así proporcionar una experiencia visual que se ajuste mejor a las preferencias del usuario y al diseño de páginas web o aplicaciones, pTHINC proporciona un mecanismo de rotación de pantalla para alternar entre los modos de visualización horizontal y vertical. La rotación de pantalla de pTHINC es completamente compatible con el cliente, no con el servidor. pTHINC no recalcula explícitamente la geometría de las actualizaciones de pantalla para realizar la rotación, lo cual sería computacionalmente costoso. En cambio, pTHINC simplemente cambia la forma en que los datos se copian en el framebuffer para cambiar entre los modos de visualización. Cuando está en modo retrato, los datos se copian a lo largo de las filas del framebuffer de izquierda a derecha. Cuando se encuentra en modo horizontal, los datos se copian a lo largo de las columnas del framebuffer de arriba hacia abajo. Estas técnicas muy rápidas y simples reemplazan un conjunto de operaciones de copia por otro y no imponen ningún sobrecosto de rendimiento. pTHINC proporciona su propio mecanismo de rotación para soportar una amplia gama de dispositivos sin imponer requisitos adicionales de funciones en la PDA. Aunque algunos dispositivos PDA más nuevos ofrecen soporte nativo para diferentes orientaciones, este mecanismo no es dinámico y requiere que el usuario rote toda la interfaz de usuario de la PDA antes de iniciar el cliente pTHINC. Windows Mobile proporciona mecanismos de API nativos para que las aplicaciones de PDA puedan rotar su interfaz de usuario sobre la marcha, pero estos mecanismos ofrecen un rendimiento deficiente y una calidad de visualización baja, ya que la rotación se realiza de manera ingenua y no es completamente precisa. 3.2 Reproducción de video El video se ha convertido gradualmente en una parte integral de la World Wide Web, y su presencia solo seguirá aumentando. Los sitios web de hoy en día no solo utilizan gráficos animados y flash para presentar el contenido web de manera atractiva, sino que también utilizan video en streaming para enriquecer la interfaz web. Los usuarios pueden ver noticias pregrabadas y en vivo en CNN, ver los momentos más destacados deportivos en ESPN e incluso buscar a través de una gran colección de videos en Google Video. Para permitir que las aplicaciones proporcionen una reproducción de video eficiente, se han creado interfaces en los sistemas de visualización que permiten a los controladores de dispositivos de video exponer sus capacidades de hardware a las aplicaciones. pTHINC aprovecha estas interfaces y su enfoque de controlador de dispositivo virtual para proporcionar un puente virtual entre el cliente remoto y su hardware y las aplicaciones, y admitir de manera transparente la reproducción de video. Sobre esta arquitectura, pTHINC utiliza el espacio de color YUV para codificar el contenido de video, lo cual proporciona una serie de beneficios. Primero, se ha vuelto cada vez más común que el hardware de video de las PDA admita nativamente YUV y pueda realizar la conversión del espacio de color y el escalado automáticamente. Como resultado, pTHINC puede proporcionar reproducción de video a pantalla completa sin afectar el rendimiento. Segundo, el uso de YUV permite una representación más eficiente de los datos RGB sin pérdida de calidad, aprovechando la capacidad de los ojos humanos para distinguir mejor las diferencias en brillo que en color. En particular, pTHINC utiliza el formato YV12, que permite codificar datos de color RGB completo utilizando solo 12 bits por píxel. Tercero, los datos YUV se producen como uno de los últimos pasos del proceso de decodificación de la mayoría de los códecs de video, lo que permite a pTHINC proporcionar la reproducción de video de una manera independiente del formato. Finalmente, aunque el hardware de video de las PDAs no pueda acelerar la reproducción, el proceso de conversión de espacio de color es lo suficientemente simple como para no imponer requisitos poco razonables en la PDA. Un ejemplo más concreto de cómo pTHINC aprovecha el hardware de video PDA para admitir la reproducción de video se puede ver en nuestra implementación de prototipo en la popular PDA Dell Axim X51v, que está equipada con el acelerador multimedia Intel 2700G. En este caso, pTHINC crea un búfer fuera de pantalla en la memoria de video y escribe y lee desde esta región de memoria datos en formato YV12. Cuando llega un nuevo fotograma de video, los datos de video se copian desde el búfer a una superficie superpuesta en la memoria de video, que es independiente de la superficie normal utilizada para el dibujo tradicional. A medida que los datos YV12 se colocan en la superposición, el acelerador de Intel realiza automáticamente la conversión de espacio de color y el escalado. Al utilizar la superficie de superposición, pTHINC no necesita volver a dibujar la pantalla una vez que la reproducción de video ha terminado, ya que la superficie superpuesta no se ve afectada. Además, las regiones de superposición específicas pueden ser manipuladas aprovechando el hardware de video, por ejemplo, para realizar interpolación lineal de hardware y suavizar el fotograma para mostrarlo a pantalla completa, y para realizar rotación automática cuando el cliente se ejecuta en modo horizontal. 4. RESULTADOS EXPERIMENTALES Hemos implementado un prototipo de pTHINC que ejecuta el cliente en dispositivos Pocket PC basados en Windows Mobile ampliamente utilizados y el servidor en sistemas operativos tanto Windows como Linux. Para demostrar su eficacia en el soporte de aplicaciones web inalámbricas móviles, hemos medido su rendimiento en aplicaciones web. Presentamos resultados experimentales sobre diferentes dispositivos PDA para dos aplicaciones web populares, navegar por páginas web y reproducir contenido de video desde la web. Comparamos pTHINC con aplicaciones web nativas que se ejecutan localmente en la PDA para demostrar la mejora que pTHINC puede proporcionar sobre el enfoque tradicional de cliente pesado. También comparamos pTHINC con tres de los clientes ligeros más utilizados que pueden ejecutarse en PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] y VNC (Virtual Network Computing) [16]. Seguimos la práctica común y nos referimos a Citrix MetaFrameXP y Microsoft Remote Desktop por sus respectivos protocolos de visualización remota, ICA (Independent Computing Architecture) y RDP (Remote Desktop Protocol). 4.1 Plataforma de Pruebas Experimental Realizamos nuestros experimentos web utilizando dos PDA Pocket PC inalámbricas diferentes en un entorno de prueba de red Wi-Fi aislado, como se muestra en la Figura 2. El banco de pruebas consistía en dos dispositivos cliente PDA, un monitor de paquetes, un servidor de cliente ligero y un servidor web. Excepto por las PDAs, todas las demás máquinas eran servidores IBM Netfinity 4500R con procesadores duales Intel PIII de 933 MHz y 512 MB de RAM, y estaban conectadas en una red FastEthernet de 100 Mbps conmutada. El servidor web utilizado fue Apache 1.3.27, el emulador de red fue NISTNet 2.0.12 y el monitor de paquetes fue Ethereal 0.10.9. Los clientes de PDA se conectaron al banco de pruebas a través de un punto de acceso inalámbrico Lucent Orinoco AP-2000 802.11b. Todos los experimentos utilizando la red inalámbrica se llevaron a cabo a una distancia de diez pies del punto de acceso, por lo que consideramos que la cantidad de pérdida de paquetes era insignificante en nuestros experimentos. Se utilizaron dos PDA Pocket PC para proporcionar resultados en modelos antiguos y menos potentes, así como en modelos más nuevos de mayor rendimiento. El modelo anterior era un Dell Axim X5 con 147 Cliente 1024×768 640×480 Profundidad Cambio de tamaño Clip RDP no sí 8 bits no sí VNC sí sí 16 bits no no ICA sí sí 16 bits sí no pTHINC sí sí 24 bits sí no Tabla 2: Configuración del banco de pruebas de cliente ligero con un CPU Intel XScale PXA255 de 400 MHz y 64 MB de RAM ejecutando Windows Mobile 2003 y una tarjeta Dell TrueMobile 1180 de 2.4 GHz CompactFlash para redes inalámbricas. El modelo más nuevo era un Dell Axim X51v con un procesador Intel XScale XPA270 de 624 MHz y 64 MB de RAM ejecutando Windows Mobile 5.0 y con red inalámbrica 802.11b integrada. El X51v tiene un acelerador multimedia Intel 2700G con 16MB de memoria de video. Ambas PDAs son capaces de mostrar colores de 16 bits pero tienen diferentes tamaños de pantalla y resoluciones de visualización. El X5 tiene una pantalla diagonal de 3.5 pulgadas con una resolución de 240×320. El X51v tiene una pantalla diagonal de 3.7 pulgadas con una resolución de 480×640. Los cuatro clientes ligeros que utilizamos admiten diferentes niveles de calidad de visualización, como se resume en la Tabla 2. El cliente de RDP solo admite una resolución de pantalla fija de 640×480 en el servidor con una profundidad de color de 8 bits, mientras que otras plataformas ofrecen niveles más altos de calidad de visualización. Para proporcionar una comparación justa en todas las plataformas, realizamos nuestros experimentos con sesiones de cliente ligero configuradas para dos posibles resoluciones, 1024×768 y 640×480. Tanto ICA como VNC se configuraron para usar la resolución nativa de PDA con una profundidad de color de 16 bits. El prototipo actual de pTHINC utiliza color de 24 bits directamente y el cliente reduce la resolución de las actualizaciones al nivel de color de 16 bits disponible en la PDA. RDP se configuró utilizando solo una profundidad de color de 8 bits ya que no admite ninguna profundidad de color mejor. Dado que tanto pTHINC como ICA ofrecen la capacidad de ver la pantalla redimensionada para ajustarse a la pantalla, medimos ambos clientes con y sin la pantalla redimensionada para ajustarse a la pantalla del PDA. Cada cliente ligero fue probado utilizando el modo de paisaje en lugar del modo retrato cuando estaba disponible. Todos los sistemas que se ejecutan en el X51v podrían funcionar en modo horizontal porque el hardware proporciona una función de modo horizontal. Sin embargo, el X5 no proporciona esta funcionalidad. Solo pTHINC admite directamente el modo paisaje, por lo que era el único sistema que podía ejecutarse en modo paisaje tanto en el X5 como en el X51v. Para proporcionar una comparación justa, también estandarizamos en hardware y sistemas operativos comunes siempre que sea posible. Todos los sistemas utilizaron el servidor Netfinity como servidor de cliente ligero. Para los dos sistemas diseñados para servidores Windows, ICA y RDP, ejecutamos Windows Server 2003 en el servidor. Para los otros sistemas que admiten servidores basados en X, ejecutamos la distribución Debian Linux Inestable con el kernel Linux 2.6.10 en el servidor. Utilizamos las últimas versiones de servidores de cliente ligero disponibles en cada plataforma en el momento de nuestros experimentos, a saber, Citrix MetaFrame XP Server para Windows Feature Release 3, Microsoft Remote Desktop integrado en Windows XP y Windows 2003 utilizando RDP 5.2, y VNC 4.0.4.2. Para los benchmarks de aplicaciones, utilizamos dos benchmarks de aplicaciones web para nuestros experimentos basados en dos escenarios de aplicación comunes, navegación por páginas web y reproducción de contenido de video desde la web. Dado que muchos sistemas de cliente ligero, incluidos dos de los probados, son cerrados y propietarios, medimos su rendimiento de manera no invasiva capturando el tráfico de red con un monitor de paquetes y utilizando una variante de benchmarking en cámara lenta [13] previamente desarrollada para medir el rendimiento de clientes ligeros en entornos de PDA [10]. Esta metodología de medición tiene en cuenta tanto el desacoplamiento de la visualización que puede ocurrir entre el cliente y el servidor en sistemas de cliente ligero, como el tiempo de procesamiento del cliente, que puede ser significativo en el caso de las PDAs. Para medir el rendimiento de la navegación web, utilizamos un benchmark de navegación web basado en la Prueba de Carga de Páginas de Texto Web del conjunto de benchmarks Ziff-Davis i-Bench [7]. El punto de referencia consiste en la carga controlada de 55 páginas desde el servidor web mediante JavaScript. Las páginas contienen tanto texto como gráficos, con páginas de diferentes tamaños. Los gráficos son imágenes incrustadas en formatos GIF y JPEG. El benchmark original i-Bench fue modificado para pruebas de rendimiento en cámara lenta al introducir retrasos de varios segundos entre las páginas utilizando JavaScript. Luego se realizaron dos pruebas, una en la que se agregaron retrasos entre cada página, y otra en la que las páginas se cargaron continuamente sin esperar a que se mostraran en el cliente. En la primera prueba, los retrasos se ajustaron lo suficiente en cada caso para garantizar que cada página pudiera ser recibida y mostrada en el cliente por completo sin solapamiento temporal en la transferencia de los datos pertenecientes a dos páginas consecutivas. Utilizamos el monitor de paquetes para registrar el tráfico de paquetes para cada ejecución de la prueba de referencia, luego utilizamos las marcas de tiempo del primer y último paquete en la traza para obtener nuestras medidas de latencia [10]. El monitor de paquetes también registró la cantidad de datos transmitidos entre el cliente y el servidor. La proporción entre el tráfico de datos en las dos pruebas produce un factor de escala. Este factor de escala muestra la pérdida de datos entre el servidor y el cliente debido a la incapacidad del cliente para procesar los datos lo suficientemente rápido. El producto del factor de escala con la medición de latencia produce la verdadera latencia teniendo en cuenta el tiempo de procesamiento del cliente. Para ejecutar la prueba de navegación web, utilizamos Mozilla Firefox 1.0.4 en el servidor de cliente ligero para los clientes ligeros, y Windows Internet Explorer (IE) Mobile para 2003 y Mobile para 5.0 para los navegadores nativos en las PDAs X5 y X51v, respectivamente. En todos los casos, el navegador web utilizado se ajustó para ocupar toda la región de visualización disponible. Para medir el rendimiento de reproducción de video, utilizamos un banco de pruebas de video que consistía en reproducir un clip de video MPEG-1 de 34.75 segundos que contenía una mezcla de noticias y programación de entretenimiento a resolución de pantalla completa. El videoclip tiene un tamaño de 5.11 MB y consta de 834 cuadros de píxeles de 352x240 con una velocidad de cuadro ideal de 24 cuadros por segundo. Medimos el rendimiento del video utilizando pruebas de referencia en cámara lenta al monitorear el tráfico de paquetes resultante a dos velocidades de reproducción, 1 cuadro por segundo (fps) y 24 fps, y comparando los resultados para determinar los retrasos en la reproducción y las caídas de cuadros que ocurren a 24 fps para medir la calidad general del video [13]. Por ejemplo, el 100% de calidad significa que todos los fotogramas del video se reprodujeron a velocidad en tiempo real. Por otro lado, una calidad del 50% podría significar que se eliminó la mitad de los datos del video, o que el clip tardó el doble en reproducirse a pesar de que se mostró toda la información del video. Para ejecutar la prueba de rendimiento de video, utilizamos Windows Media Player 9 para servidores de clientes ligeros basados en Windows, MPlayer 1.0 pre 6 para servidores de clientes ligeros basados en X, y Windows Media Player 9 Mobile y 10 Mobile para los reproductores de video nativos que se ejecutan localmente en las PDAs X5 y X51v, respectivamente. En todos los casos, el reproductor de video utilizado se dimensionó para llenar toda la región de visualización disponible. Las Figuras 3 y 4 muestran los resultados de ejecutar la prueba de navegación por la web. Para cada plataforma, mostramos resultados de hasta cuatro configuraciones diferentes, dos en el X5 y dos en el X51v, dependiendo de si cada configuración era compatible. Sin embargo, no todas las plataformas podrían admitir todas las configuraciones. El navegador local solo se ejecuta a la resolución de pantalla de la PDA, 480×680 o menos para el X51v y el X5. RDP solo funciona a 640×480. Ninguna plataforma podía soportar una resolución de pantalla de 1024×768. ICA solo funcionaba en el X5 y no podía ejecutarse en el X51v porque no era compatible con Windows Mobile 5. La Figura 3 muestra la latencia promedio por página web para cada plataforma. pTHINC proporciona la latencia promedio más baja en la navegación web en ambas PDAs. En el X5, pTHINC funciona hasta 70 veces mejor que otros sistemas de cliente ligero y 8 veces mejor que el navegador local. En el X51v, pTHINC funciona hasta 80 veces mejor que otros sistemas de cliente ligero y 7 veces mejor que el navegador nativo. De hecho, todos los clientes ligeros excepto VNC superan al navegador local de PDA, demostrando los beneficios de rendimiento del enfoque de cliente ligero. Los estudios de usabilidad han demostrado que las páginas web deben tardar menos de un segundo en descargarse para que el usuario experimente una navegación web ininterrumpida [14]. Las mediciones muestran que solo los clientes delgados ofrecen latencias de página web de menos de un segundo. Por el contrario, el navegador local requiere más de 3 segundos en promedio por página web. El navegador local funciona peor ya que necesita ejecutar un navegador web más limitado para procesar el HTML, JavaScript y realizar todo el renderizado utilizando las capacidades limitadas de la PDA. Los clientes ligeros pueden aprovecharse de hardware de servidor más rápido y un navegador web altamente optimizado para procesar el contenido web mucho más rápido. La Figura 3 muestra que RDP es la plataforma más rápida después de pTHINC. Sin embargo, RDP solo puede ejecutarse a una resolución fija de 640×480 y una profundidad de color de 8 bits. Además, RDP también recorta la pantalla al tamaño de la pantalla de la PDA para no tener que enviar actualizaciones que no son visibles en la pantalla de la PDA. Esto proporciona un beneficio de rendimiento siempre y cuando el resto del contenido web no se visualice, pero degrada el rendimiento cuando un usuario desplaza la pantalla para ver otro contenido web. RDP logra su rendimiento con una calidad de visualización significativamente inferior en comparación con otros clientes ligeros y con recortes adicionales en la visualización que no son utilizados por otros sistemas. Como resultado, el rendimiento de RDP por sí solo no proporciona una comparación completa con las otras plataformas. Por el contrario, pTHINC ofrece el mejor rendimiento al mismo tiempo que proporciona una calidad de visualización igual o mejor que los otros sistemas. Dado que VNC e ICA ofrecen una calidad de visualización similar a pTHINC, estos sistemas proporcionan una comparación más justa de diferentes enfoques de cliente ligero. ICA funciona peor en parte porque utiliza primitivas de visualización de nivel superior que requieren costos adicionales de procesamiento por parte del cliente. VNC funciona peor en parte porque pierde datos de visualización debido a su mecanismo de entrega de cliente-pull y debido a los costos de procesamiento del cliente en descomprimir primitivas de píxeles crudos. En ambos casos, su rendimiento se vio limitado en parte porque sus clientes de PDA no podían mantenerse al ritmo al que se mostraban las páginas web. La Figura 3 también muestra las medidas para aquellos clientes ligeros que admiten redimensionar la pantalla para ajustarse a la pantalla de la PDA, a saber, ICA y pTHINC. El redimensionamiento requiere un procesamiento adicional, lo que resulta en latencias promedio más lentas de las páginas web. Las mediciones muestran que el retraso adicional incurrido por ICA al cambiar el tamaño es mucho más sustancial que para pTHINC. ICA realiza redimensionamiento en el cliente PDA más lento. Por el contrario, pTHINC aprovecha el servidor más potente para redimensionar, reduciendo la diferencia de rendimiento entre redimensionar y no redimensionar. A diferencia de ICA, pTHINC es capaz de proporcionar latencias de descarga de páginas web en menos de un segundo en ambos casos. La Figura 4 muestra los datos transferidos en KB por página al ejecutar la versión de cámara lenta de las pruebas. Todas las plataformas tienen requisitos modestos de transferencia de datos de aproximadamente 100 KB por página o menos. Esto está bien dentro de la capacidad de ancho de banda de las redes Wi-Fi. Las mediciones muestran que el navegador local no transfiere la menor cantidad de datos. Esto es sorprendente ya que HTML suele considerarse una representación muy compacta del contenido. En cambio, RDP es la plataforma más eficiente en ancho de banda, en gran parte debido a que utiliza solo una profundidad de color de 8 bits y recorte de pantalla para no transferir la página web completa al cliente. En general, pTHINC tiene los mayores requisitos de datos, ligeramente más que VNC. Esto se debe en gran medida a la falta de soporte nativo de los prototipos actuales de pTHINC para datos de color de 16 bits en el protocolo de comunicación. Sin embargo, este resultado también destaca el rendimiento de pTHINCs, ya que es más rápido que todos los demás sistemas incluso al transferir más datos. Además, dado que los modelos más recientes de PDA admiten colores completos de 24 bits, estos resultados indican que pTHINC seguirá proporcionando un buen rendimiento en la navegación web. Dado que la usabilidad y la calidad de la pantalla son tan importantes como el rendimiento, las Figuras 5 a 8 comparan capturas de pantalla de los diferentes clientes ligeros al mostrar una página web, en este caso del popular sitio de noticias de la BBC. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo paisaje. Figura 5: Captura de pantalla del navegador: RDP 640x480. Figura 6: Captura de pantalla del navegador: VNC 1024x768. Figura 7: Captura de pantalla del navegador: ICA redimensionado 1024x768. Figura 8: Captura de pantalla del navegador: pTHINC redimensionado 1024x768 utilizando la configuración de resolución de pantalla máxima para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Si bien las capturas de pantalla carecen de la fidelidad visual de la pantalla real del dispositivo, se pueden hacer varias observaciones. La Figura 5 muestra que RDP no admite el modo de pantalla completa y desperdicia mucho espacio en pantalla para controles y elementos de la interfaz de usuario, lo que obliga al usuario a desplazarse para acceder a todo el contenido de la sesión de navegación web. La Figura 6 muestra que VNC aprovecha mejor el espacio de la pantalla y ofrece una mejor calidad de visualización, pero aún obliga al usuario a desplazarse para ver la página web debido a la falta de soporte para redimensionar. La Figura 7 muestra la capacidad de ICA para mostrar la página web completa dada su soporte de redimensionamiento, pero su falta de capacidad en modo paisaje y su algoritmo de redimensionamiento deficiente comprometen significativamente la calidad de visualización. Por el contrario, la Figura 8 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de pantalla completa de alta calidad del ancho completo de la página web. pTHINC maximiza toda la región de visualización moviendo todos los controles a los botones de la PDA. Además, pTHINC aprovecha la potencia computacional del servidor para utilizar un algoritmo de redimensionamiento de alta calidad y ajustar la pantalla al tamaño de la PDA sin un sobrecoste significativo. Las figuras 9 y 10 muestran los resultados de ejecutar la prueba de reproducción de video. Para cada plataforma excepto ICA, mostramos resultados para una configuración X5 y X51v. ICA no pudo ejecutarse en el X51v como se mencionó anteriormente. Las mediciones se realizaron utilizando configuraciones que reflejaban el entorno desde el cual un usuario tendría que acceder a una sesión web tanto desde una computadora de escritorio como desde una PDA. Por lo tanto, se utilizó una resolución de pantalla del servidor de 1024×768 siempre que fuera posible y el video se mostró a pantalla completa. La resolución de pantalla de RDP se limitaba a 640×480, como se mencionó anteriormente. Dado que ver toda la pantalla del video es la única opción realmente utilizable, redimensionamos la pantalla para que se ajustara a la pantalla de la PDA en aquellas plataformas que admitían esta función, a saber, ICA y pTHINC. La Figura 9 muestra la calidad de video para cada plataforma. pTHINC es el único cliente ligero capaz de proporcionar una calidad de reproducción de video perfecta, similar al reproductor de video nativo de PDA. Todos los demás clientes ligeros ofrecen una calidad de video muy pobre. Con la excepción de RDP en el X51v que proporcionó una calidad de video inaceptable del 35%, ninguno de los otros sistemas pudo siquiera alcanzar el 10% de calidad de video. VNC e ICA tienen la peor calidad al 8% en el dispositivo X5. El soporte de video nativo de pTHINCs permite un rendimiento de video superior, mientras que otros clientes ligeros sufren de su incapacidad para distinguir el video de las actualizaciones normales de la pantalla. Intentan aplicar algoritmos de compresión ineficaces y costosos en los datos de video y no pueden mantenerse al día con la corriente de actualizaciones generadas, lo que resulta en cuadros omitidos o largos tiempos de reproducción. VNC se ve aún más afectado por su modelo de actualización de cliente-pull porque los fotogramas de video se generan más rápido que la velocidad a la que el cliente puede procesar y enviar solicitudes al servidor para obtener la siguiente actualización de pantalla. La Figura 10 muestra los datos totales transferidos durante la reproducción de video a pantalla completa para cada sistema. El reproductor nativo es la plataforma más eficiente en ancho de banda, enviando menos de 6 MB de datos, lo que corresponde a aproximadamente 1.2 Mbps de ancho de banda. La calidad de video al 100% de pTHINCs requiere alrededor de 25 MB de datos, lo que corresponde a un uso de ancho de banda de menos de 6 Mbps. Mientras que los otros clientes ligeros envían menos datos que THINC, lo hacen porque están eliminando datos de video, lo que resulta en una calidad de video degradada. Las figuras 11 a 14 comparan capturas de pantalla de los distintos clientes ligeros al mostrar el videoclip. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo horizontal utilizando la configuración de resolución máxima de pantalla para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Las figuras 11 y 12 muestran que RDP y VNC no pueden mostrar el cuadro completo del video en la pantalla de la PDA. RDP desperdicia espacio en pantalla para los elementos de la interfaz de usuario y VNC solo muestra la esquina superior del marco de video en la pantalla. La Figura 13 muestra que el ICA proporciona redimensionamiento para mostrar todo el fotograma del video, pero no redimensiona proporcionalmente los datos del video, lo que resulta en artefactos de visualización extraños. Por el contrario, la Figura 14 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de alta calidad a pantalla completa de todo el fotograma del video. pTHINC ofrece una visualización de video visualmente más atractiva que RDP, VNC o ICA. 5. TRABAJOS RELACIONADOS Varios estudios han examinado el rendimiento de la navegación web en la computación de cliente ligero [13, 19, 10]. La capacidad de los clientes ligeros para mejorar el rendimiento de la navegación web en PDAs inalámbricas fue demostrada cuantitativamente por primera vez en un estudio previo realizado por uno de los autores [10]. Este estudio demostró que los clientes ligeros pueden ofrecer tanto un rendimiento de navegación web más rápido como una mayor funcionalidad de navegación web. El estudio consideró una amplia gama de contenido web, incluido el contenido de sistemas de información médica. Nuestro trabajo se basa en este estudio previo y considera temas importantes como la usabilidad de los clientes ligeros existentes en entornos de PDA, los compromisos entre la usabilidad y el rendimiento de los clientes ligeros, el rendimiento en diferentes dispositivos de PDA y el rendimiento de los clientes ligeros en aplicaciones web comunes como el video. Se han desarrollado muchos clientes ligeros y algunos tienen clientes de PDA, incluyendo Remote Desktop de Microsoft [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5] y Tarantella [18]. Estos sistemas fueron diseñados inicialmente para computadoras de escritorio y adaptados posteriormente para asistentes digitales personales (PDA). A diferencia de pTHINC, no abordan los problemas clave de arquitectura del sistema y usabilidad importantes para las PDAs. Esto limita la calidad de visualización, el rendimiento del sistema, el espacio de pantalla disponible y la usabilidad general en PDAs. pTHINC se basa en trabajos anteriores de dos de los autores sobre THINC [1], ampliando la arquitectura del servidor e introduciendo una interfaz de cliente y un modelo de uso para admitir eficientemente dispositivos PDA en aplicaciones web móviles. Otros enfoques para mejorar el rendimiento de la navegación web inalámbrica móvil se han centrado en el uso de proxies de transcodificación y almacenamiento en caché en conjunto con el modelo de cliente pesado [11, 9, 4, 8]. Trabajan mediante el envío de funcionalidades a proxies externos y utilizando aplicaciones de navegación especializadas en el dispositivo PDA que se comunican con el proxy. Nuestro enfoque de cliente ligero difiere fundamentalmente de estos enfoques de cliente pesado al trasladar toda la lógica del navegador web al servidor, aprovechando las inversiones existentes en navegadores web de escritorio y aplicaciones auxiliares para funcionar de manera integrada con los sistemas de producción sin necesidad de configuraciones adicionales de proxy o modificaciones en el navegador web. Con la aparición de la navegación web en dispositivos con pantallas pequeñas, los sitios web han sido rediseñados utilizando mecanismos como WAP y se han desarrollado navegadores web nativos especializados para adaptarse a las necesidades de estos dispositivos. Recientemente, Opera ha desarrollado el navegador web Opera Mini [15], que utiliza un enfoque similar al modelo de cliente ligero para proporcionar acceso a través de una serie de dispositivos móviles que normalmente no podrían ejecutar un navegador web. En lugar de requerir que el dispositivo procese las páginas web, utiliza un servidor remoto para preprocesar la página antes de enviarla al teléfono. CONCLUSIONES Hemos introducido pTHINC, una arquitectura de cliente ligero para PDAs inalámbricas. pTHINC proporciona mecanismos arquitectónicos y de usabilidad clave como el redimensionamiento de pantalla en el lado del servidor, rotación de pantalla en el lado del cliente utilizando técnicas simples de copia, soporte de video YUV, y maximización del espacio de pantalla para actualizaciones de visualización y aprovechamiento de los botones de control existentes en las PDAs para elementos de la interfaz de usuario. pTHINC soporta de manera transparente navegadores de escritorio tradicionales y sus aplicaciones auxiliares en dispositivos PDA y computadoras de escritorio, brindando a los usuarios móviles acceso ubicuo a un entorno web consistente, personalizado y completo en dispositivos heterogéneos. Hemos implementado pTHINC y medido su rendimiento en aplicaciones web en comparación con los sistemas de cliente ligero existentes y las aplicaciones web nativas. Nuestros resultados en múltiples dispositivos móviles inalámbricos demuestran que pTHINC ofrece un rendimiento de navegación web hasta 80 veces mejor que los sistemas de cliente ligero existentes, y 8 veces mejor que un navegador PDA nativo. Además, pTHINC es el único cliente ligero de PDA 151 Figura 11: Captura de pantalla de video: RDP 640x480 Figura 12: Captura de pantalla de video: VNC 1024x768 Figura 13: Captura de pantalla de video: ICA redimensionado 1024x768 Figura 14: Captura de pantalla de video: pTHINC redimensionado 1024x768 que proporciona de manera transparente la reproducción de video a pantalla completa y a velocidad de cuadro completa, haciendo que los sitios web con contenido multimedia sean accesibles para los usuarios de la web móvil. 7. AGRADECIMIENTOS Este trabajo fue apoyado en parte por las subvenciones NSF ITR CCR0219943 y CNS-0426623, y un premio IBM SUR. 8. REFERENCIAS [1] R. Baratto, L. Kim y J. Nieh. THINC: Una arquitectura de visualización virtual para la computación de cliente ligero. En Actas del 20º Simposio de Principios de Sistemas Operativos de la ACM (SOSP), octubre de 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius y A. Muir. Microsoft Windows NT Server 4.0, Terminal Server Edition: Referencia Técnica. Microsoft Press, Redmond, WA, 1999. [4] A.\nMicrosoft Press, Redmond, WA, 1999. [4] A. Fox, I. Goldberg, S. D. Gribble y D. C. Lee. Experiencia con Top Gun Wingman: un navegador web gráfico basado en proxy para el 3Com PalmPilot. En Actas de Middleware 98, Lake District, Inglaterra, septiembre de 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Ley de Portabilidad y Responsabilidad del Seguro de Salud. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench versión 1.5. http://etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi. Sobre agentes de proxy, movilidad y acceso web. Redes y aplicaciones móviles, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon y A. Ortega. Diseño e Implementación de un Proxy de Caché Blando. Redes de Computadoras y Sistemas ISDN, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana y S. Varshneya. Mejorando la navegación web en PDAs inalámbricas utilizando computación de cliente ligero. En Actas de la 13ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham y P. Shenoy. TranSquid: Proxy de transcodificación y almacenamiento en caché para entornos de comercio electrónico heterogéneos. En Actas del 12º Taller IEEE sobre Problemas de Investigación en Ingeniería de Datos (RIDE 02), febrero de 2002. [12] Visor VNC .NET para PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang y N. Novik. Midiendo el rendimiento de clientes ligeros utilizando pruebas de referencia en cámara lenta. ACM Trans. Sistemas de Computación, 21(1):87-115, Feb. 2003. [14] J. Nielsen. Diseño de Usabilidad en la Web. New Riders Publishing, Indianápolis, IN, 2000. [15] Navegador Opera Mini. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood y A. Hopper. Computación de Red Virtual. IEEE Internet Computing, 2(1), enero/febrero de 1998. [17] R. W. Scheifler y J. Gettys. El Sistema de Ventanas X. ACM Trans. Gr., 5(2):79-106, Abr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla y M. Sajjadpour. Rendimiento de la navegación web en computación inalámbrica de cliente ligero. En Actas de la 12ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2003. 152 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "system usability": {
            "translated_key": "usabilidad del sistema",
            "is_in_text": true,
            "original_annotated_sentences": [
                "pTHINC: A Thin-Client Architecture for Mobile Wireless Web Joeng Kim, Ricardo A. Baratto, and Jason Nieh Department of Computer Science Columbia University, New York, NY, USA {jk2438, ricardo, nieh}@cs.columbia.edu ABSTRACT Although web applications are gaining popularity on mobile wireless PDAs, web browsers on these systems can be quite slow and often lack adequate functionality to access many web sites.",
                "We have developed pTHINC, a PDA thinclient solution that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide high-fidelity display and seamless mobility across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve <br>system usability</br> and maximize available screen resolution for application display.",
                "We have implemented pTHINC on Windows Mobile and evaluated its performance on mobile wireless devices.",
                "Our results compared to local PDA web browsers and other thin-client approaches demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "Categories and Subject Descriptors: C.2.4 ComputerCommunication-Networks: Distributed Systems - client/ server General Terms: Design, Experimentation, Performance 1.",
                "INTRODUCTION The increasing ubiquity of wireless networks and decreasing cost of hardware is fueling a proliferation of mobile wireless handheld devices, both as standalone wireless Personal Digital Assistants (PDA) and popular integrated PDA/cell phone devices.",
                "These devices are enabling new forms of mobile computing and communication.",
                "Service providers are leveraging these devices to deliver pervasive web access, and mobile web users already often use these devices to access web-enabled information such as news, email, and localized travel guides and maps.",
                "It is likely that within a few years, most of the devices accessing the web will be mobile.",
                "Users typically access web content by running a web browser and associated helper applications locally on the PDA.",
                "Although native web browsers exist for PDAs, they deliver subpar performance and have a much smaller feature set and more limited functionality than their desktop computing counterparts [10].",
                "As a result, PDA web browsers are often not able to display web content from web sites that leverage more advanced web technologies to deliver a richer web experience.",
                "This fundamental problem arises for two reasons.",
                "First, because PDAs have a completely different hardware/software environment from traditional desktop computers, web applications need to be rewritten and customized for PDAs if at all possible, duplicating development costs.",
                "Because the desktop application market is larger and more mature, most development effort generally ends up being spent on desktop applications, resulting in greater functionality and performance than their PDA counterparts.",
                "Second, PDAs have a more resource constrained environment than traditional desktop computers to provide a smaller form factor and longer battery life.",
                "Desktop web browsers are large, complex applications that are unable to run on a PDA.",
                "Instead, developers are forced to significantly strip down these web browsers to provide a usable PDA web browser, thereby crippling PDA browser functionality.",
                "Thin-client computing provides an alternative approach for enabling pervasive web access from handheld devices.",
                "A thin-client computing system consists of a server and a client that communicate over a network using a remote display protocol.",
                "The protocol enables graphical displays to be virtualized and served across a network to a client device, while application logic is executed on the server.",
                "Using the remote display protocol, the client transmits user input to the server, and the server returns screen updates of the applications from the server to the client.",
                "Using a thin-client model for mobile handheld devices, PDAs can become simple stateless clients that leverage the remote server capabilities to execute web browsers and other helper applications.",
                "The thin-client model provides several important benefits for mobile wireless web.",
                "First, standard desktop web applications can be used to deliver web content to PDAs without rewriting or adapting applications to execute on a PDA, reducing development costs and leveraging existing software investments.",
                "Second, complex web applications can be executed on powerful servers instead of running stripped down versions on more resource constrained PDAs, providing greater functionality and better performance [10].",
                "Third, web applications can take advantage of servers with faster networks and better connectivity, further boosting application performance.",
                "Fourth, PDAs can be even simpler devices since they do not need to perform complex application logic, potentially reducing energy consumption and extend143 ing battery life.",
                "Finally, PDA thin clients can be essentially stateless appliances that do not need to be backed up or restored, require almost no maintenance or upgrades, and do not store any sensitive data that can be lost or stolen.",
                "This model provides a viable avenue for medical organizations to comply with HIPAA regulations [6] while embracing mobile handhelds in their day to day operations.",
                "Despite these potential advantages, thin clients have been unable to provide the full range of these benefits in delivering web applications to mobile handheld devices.",
                "Existing thin clients were not designed for PDAs and do not account for important usability issues in the context of small form factor devices, resulting in difficulty in navigating displayed web content.",
                "Furthermore, existing thin clients are ineffective at providing seamless mobility across the heterogeneous mix of device display sizes and resolutions.",
                "While existing thin clients can already provide faster performance than native PDA web browsers in delivering HTML web content, they do not effectively support more display-intensive web helper applications such as multimedia video, which is increasingly an integral part of available web content.",
                "To harness the full potential of thin-client computing in providing mobile wireless web on PDAs, we have developed pTHINC (PDA THin-client InterNet Computing). pTHINC builds on our previous work on THINC [1] to provide a thinclient architecture for mobile handheld devices. pTHINC virtualizes and resizes the display on the server to efficiently deliver high-fidelity screen updates to a broad range of different clients, screen sizes, and screen orientations, including both portrait and landscape viewing modes.",
                "This enables pTHINC to provide the same persistent web session across different client devices.",
                "For example, pTHINC can provide the same web browsing session appropriately scaled for display on a desktop computer and a PDA so that the same cookies, bookmarks, and other meta-data are continuously available on both machines simultaneously. pTHINCs virtual display approach leverages semantic information available in display commands, and client-side video hardware to provide more efficient remote display mechanisms that are crucial for supporting more display-intensive web applications.",
                "Given limited display resolution on PDAs, pTHINC maximizes the use of screen real estate for remote display by moving control functionality from the screen to readily available PDA control buttons, improving <br>system usability</br>.",
                "We have implemented pTHINC on Windows Mobile and demonstrated that it works transparently with existing applications, window systems, and operating systems, and does not require modifying, recompiling, or relinking existing software.",
                "We have quantitatively evaluated pTHINC against local PDA web browsers and other thin-client approaches on Pocket PC devices.",
                "Our experimental results demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "This paper presents the design and implementation of pTHINC.",
                "Section 2 describes the overall usage model and usability characteristics of pTHINC.",
                "Section 3 presents the design and system architecture of pTHINC.",
                "Section 4 presents experimental results measuring the performance of pTHINC on web applications and comparing it against native PDA browsers and other popular PDA thin-client systems.",
                "Section 5 discusses related work.",
                "Finally, we present some concluding remarks. 2.",
                "PTHINC USAGE MODEL pTHINC is a thin-client system that consists of a simple client viewer application that runs on the PDA and a server that runs on a commodity PC.",
                "The server leverages more powerful PCs to to run web browsers and other application logic.",
                "The client takes user input from the PDA stylus and virtual keyboard and sends them to the server to pass to the applications.",
                "Screen updates are then sent back from the server to the client for display to the user.",
                "When the pTHINC PDA client is started, the user is presented with a simple graphical interface where information such as server address and port, user authentication information, and session settings can be provided. pTHINC first attempts to connect to the server and perform the necessary handshaking.",
                "Once this process has been completed, pTHINC presents the user with the most recent display of his session.",
                "If the session does not exist, a new session is created.",
                "Existing sessions can be seamlessly continued without changes in the session setting or server configuration.",
                "Unlike other thin-client systems, pTHINC provides a user with a persistent web session model in which a user can launch a session running a web browser and associated applications at the server, then disconnect from that session and reconnect to it again anytime.",
                "When a user reconnects to the session, all of the applications continue running where the user left off, so that the user can continue working as though he or she never disconnected.",
                "The ability to disconnect and reconnect to a session at anytime is an important benefit for mobile wireless PDA users which may have intermittent network connectivity. pTHINCs persistent web session model enables a user to reconnect to a web session from devices other than the one on which the web session was originally initiated.",
                "This provides users with seamless mobility across different devices.",
                "If a user loses his PDA, he can easily use another PDA to access his web session.",
                "Furthermore, pTHINC allows users to use non-PDA devices to access web sessions as well.",
                "A user can access the same persistent web session on a desktop PC as on a PDA, enabling a user to use the same web session from any computer. pTHINCs persistent web session model addresses a key problem encountered by mobile web users, the lack of a common web environment across computers.",
                "Web browsers often store important information such as bookmarks, cookies, and history, which enable them to function in a much more useful manner.",
                "The problem that occurs when a user moves between computers is that this data, which is specific to a web browser installation, cannot move with the user.",
                "Furthermore, web browsers often need helper applications to process different media content, and those applications may not be consistently available across all computers. pTHINC addresses this problem by enabling a user to remotely use the exact same web browser environment and helper applications from any computer.",
                "As a result, pTHINC can provide a common, consistent web browsing environment for mobile users across different devices without requiring them to attempt to repeatedly synchronize different web browsing environments across multiple machines.",
                "To enable a user to access the same web session on different devices, pTHINC must provide mechanisms to support different display sizes and resolutions.",
                "Toward this end, pTHINC provides a zoom feature that enables a user to zoom in and out of a display and allows the display of a web 144 Figure 1: pTHINC shortcut keys session to be resized to fit the screen of the device being used.",
                "For example, if the server is running a web session at 1024×768 but the client is a PDA with a display resolution of 640×480, pTHINC will resize the desktop display to fit the full display in the smaller screen of the PDA. pTHINC provides the PDA user with the option to increase the size of the display by zooming in to different parts of the display.",
                "Users are often familiar with the general layout of commonly visited websites, and are able to leverage this resizing feature to better navigate through web pages.",
                "For example, a user can zoom out of the display to view the entire page content and navigate hyperlinks, then zoom in to a region of interest for a better view.",
                "To enable a user to access the same web session on different devices, pTHINC must also provide mechanisms to support different display orientations.",
                "In a desktop environment, users are typically accustomed to having displays presented in landscape mode where the screen width is larger than its height.",
                "However, in a PDA environment, the choice is not always obvious.",
                "Some users may prefer having the display in portrait mode, as it is easier to hold the device in their hands, while others may prefer landscape mode in order to minimize the amount of side-scrolling necessary to view a web page.",
                "To accommodate PDA user preferences, pTHINC provides an orientation feature that enables it to seamless rotate the display between landscape and portrait mode.",
                "The landscape mode is particularly useful for pTHINC users who frequently access their web sessions on both desktop and PDA devices, providing those users with the same familiar landscape setting across different devices.",
                "Because screen space is a relatively scarce resource on PDAs, pTHINC runs in fullscreen mode to maximize the screen area available to display the web session.",
                "To be able to use all of the screen on the PDA and still allow the user to control and interact with it, pTHINC reuses the typical shortcut buttons found on PDAs to perform all the control functions available to the user.",
                "The buttons used by pTHINC do not require any OS environment changes; they are simply intercepted by the pTHINC client application when they are pressed.",
                "Figure 1 shows how pTHINC utilizes the shortcut buttons to provide easy navigation and improve the overall user experience.",
                "These buttons are not device specific, and the layout shown is common to widelyused PocketPC devices. pTHINC provides six shortcuts to support its usage model: • Rotate Screen: The record button on the left edge is used to rotate the screen between portrait and landscape mode each time the button is pressed. • Zoom Out: The leftmost button on the bottom front is used to zoom out the display of the web session providing a birds eye view of the web session. • Zoom In: The second leftmost button on the bottom front is used to zoom in the display of the web session to more clearly view content of interest. • Directional Scroll: The middle button on the bottom front is used to scroll around the display using a single control button in a way that is already familiar to PDA users.",
                "This feature is particularly useful when the user has zoomed in to a region of the display such that only part of the display is visible on the screen. • Show/Hide Keyboard: The second rightmost button on the bottom front is used to bring up a virtual keyboard drawn on the screen for devices which have no physical keyboard.",
                "The virtual keyboard uses standard PDA OS mechanisms, providing portability across different PDA environments. • Close Session: The rightmost button on the bottom front is used to disconnect from the pTHINC session. pTHINC uses the PDA touch screen, stylus, and standard user interface mechanisms to provide a user interface pointand-click metaphor similar to that provided by the mouse in a traditional desktop computing environment. pTHINC does not use a cursor since PDA environments do not provide one.",
                "Instead, a user can use the stylus to tap on different sections of the touch screen to indicate input focus.",
                "A single tap on the touch screen generates a corresponding single click mouse event.",
                "A double tap on the touch screen generates a corresponding double click mouse event. pTHINC provides two-button mouse emulation by using the stylus to press down on the screen for one second to generate a right mouse click.",
                "All of these actions are identical to the way users already interact with PDA applications in the common PocketPC environment.",
                "In web browsing, users can click on hyperlinks and focus on input boxes by simply tapping on the desired screen area of interest.",
                "Unlike local PDA web browsers and other PDA applications, pTHINC leverages more powerful desktop user interface metaphors to enable users to manipulate multiple open application windows instead of being limited to a single application window at any given moment.",
                "This provides increased browsing flexibility beyond what is currently available on PDA devices.",
                "Similar to a desktop environment, browser windows and other application windows can be moved around by pressing down and dragging the stylus similar to a mouse. 3.",
                "PTHINC SYSTEM ARCHITECTURE pTHINC builds on the THINC [1] remote display architecture to provide a thin-client system for PDAs. pTHINC virtualizes the display at the server by leveraging the video device abstraction layer, which sits below the window server and above the framebuffer.",
                "This is a well-defined, low-level, device-dependent layer that exposes the video hardware to the display system. pTHINC accomplishes this through a simple virtual display driver that intercepts drawing commands, packetizes, and sends them over the network. 145 While other thin-client approaches intercept display commands at other layers of the display subsystem, pTHINCs display virtualization approach provides some key benefits in efficiently supporting PDA clients.",
                "For example, intercepting display commands at a higher layer between applications and the window system as is done by X [17] requires replicating and running a great deal of functionality on the PDA that is traditionally provided by the desktop window system.",
                "Given both the size and complexity of traditional window systems, attempting to replicate this functionality in the restricted PDA environment would have proven to be a daunting, and perhaps unfeasible task.",
                "Furthermore, applications and the window system often require tight synchronization in their operation and imposing a wireless network between them by running the applications on the server and the window system on the client would significantly degrade performance.",
                "On the other hand, intercepting at a lower layer by extracting pixels out of the framebuffer as they are rendered provides a simple solution that requires very little functionality on the PDA client, but can also result in degraded performance.",
                "The reason is that by the time the remote display server attempts to send screen updates, it has lost all semantic information that may have helped it encode efficiently, and it must resort to using a generic and expensive encoding mechanism on the server, as well as a potentially expensive decoding mechanism on the limited PDA client.",
                "In contrast to both the high and low level interception approaches, pTHINCs approach of intercepting at the device driver provides an effective balance between client and server simplicity, and the ability to efficiently encode and decode screen updates.",
                "By using a low-level virtual display approach, pTHINC can efficiently encode application display commands using only a small set of low-level commands.",
                "In a PDA environment, this set of commands provides a crucial component in maintaining the simplicity of the client in the resourceconstrained PDA environment.",
                "The display commands are shown in Table 1, and work as follows.",
                "COPY instructs the client to copy a region of the screen from its local framebuffer to another location.",
                "This command improves the user experience by accelerating scrolling and opaque window movement without having to resend screen data from the server.",
                "SFILL, PFILL, and BITMAP are commands that paint a fixed-size region on the screen.",
                "They are useful for accelerating the display of solid window backgrounds, desktop patterns, backgrounds of web pages, text drawing, and certain operations in graphics manipulation programs.",
                "SFILL fills a sizable region on the screen with a single color.",
                "PFILL replicates a tile over a screen region.",
                "BITMAP performs a fill using a bitmap of ones and zeros as a stipple to apply a foreground and background color.",
                "Finally, RAW is used to transmit unencoded pixel data to be displayed verbatim on a region of the screen.",
                "This command is invoked as a last resort if the server is unable to employ any other command, and it is the only command that may be compressed to mitigate its impact on network bandwidth. pTHINC delivers its commands using a non-blocking, serverpush update mechanism, where as soon as display updates are generated on the server, they are sent to the client.",
                "Clients are not required to explicitly request display updates, thus minimizing the impact that the typical varying network latency of wireless links may have on the responsiveness of the system.",
                "Keeping in mind that resource Command Description COPY Copy a frame buffer area to specified coordinates SFILL Fill an area with a given pixel color value PFILL Tile an area with a given pixel pattern BITMAP Fill a region using a bit pattern RAW Display raw pixel data at a given location Table 1: pTHINC Protocol Display Commands constrained PDAs and wireless networks may not be able to keep up with a fast server generating a large number of updates, pTHINC is able to coalesce, clip, and discard updates automatically if network loss or congestion occurs, or the client cannot keep up with the rate of updates.",
                "This type of behavior proves crucial in a web browsing environment, where for example, a page may be redrawn multiple times as it is rendered on the fly by the browser.",
                "In this case, the PDA will only receive and render the final result, which clearly is all the user is interesting in seeing. pTHINC prioritizes the delivery of updates to the PDA using a Shortest-Remaining-Size-First (SRSF) preemptive update scheduler.",
                "SRSF is analogous to Shortest-RemainingProcessing-Time scheduling, which is known to be optimal for minimizing mean response time in an interactive system.",
                "In a web browsing environment, short jobs are associated with text and basic page layout components such as the pages background, which are critical web content for the user.",
                "On the other hand, large jobs are often lower priority beautifying elements, or, even worse, web page banners and advertisements, which are of questionable value to the user as he or she is browsing the page.",
                "Using SRSF, pTHINC is able to maximize the utilization of the relatively scarce bandwidth available on the wireless connection between the PDA and the server. 3.1 Display Management To enable users to just as easily access their web browser and helper applications from a desktop computer at home as from a PDA while on the road, pTHINC provides a resize mechanism to zoom in and out of the display of a web session. pTHINC resizing is completely supported by the server, not the client.",
                "The server resamples updates to fit within the PDAs viewport before they are transmitted over the network. pTHINC uses Fants resampling algorithm to resize pixel updates.",
                "This provides smooth, visually pleasing updates with properly antialiasing and has only modest computational requirements. pTHINCs resizing approach has a number of advantages.",
                "First, it allows the PDA to leverage the vastly superior computational power of the server to use high quality resampling algorithms and produce higher quality updates for the PDA to display.",
                "Second, resizing the screen does not translate into additional resource requirements for the PDA, since it does not need to perform any additional work.",
                "Finally, better utilization of the wireless network is attained since rescaling the updates reduces their bandwidth requirements.",
                "To enable users to orient their displays on a PDA to provide a viewing experience that best accommodates user preferences and the layout of web pages or applications, pTHINC provides a display rotation mechanism to switch between landscape and portrait viewing modes. pTHINC display rotation is completely supported by the client, not the server. pTHINC does not explicitly recalculate the ge146 ometry of display updates to perform rotation, which would be computationally expensive.",
                "Instead, pTHINC simply changes the way data is copied into the framebuffer to switch between display modes.",
                "When in portrait mode, data is copied along the rows of the framebuffer from left to right.",
                "When in landscape mode, data is copied along the columns of the framebuffer from top to bottom.",
                "These very fast and simple techniques replace one set of copy operations with another and impose no performance overhead. pTHINC provides its own rotation mechanism to support a wide range of devices without imposing additional feature requirements on the PDA.",
                "Although some newer PDA devices provide native support for different orientations, this mechanism is not dynamic and requires the user to rotate the PDAs entire user interface before starting the pTHINC client.",
                "Windows Mobile provides native API mechanisms for PDA applications to rotate their UI on the fly, but these mechanisms deliver poor performance and display quality as the rotation is performed naively and is not completely accurate. 3.2 Video Playback Video has gradually become an integral part of the World Wide Web, and its presence will only continue to increase.",
                "Web sites today not only use animated graphics and flash to deliver web content in an attractive manner, but also utilize streaming video to enrich the web interface.",
                "Users are able to view pre-recorded and live newscasts on CNN, watch sports highlights on ESPN, and even search through large collection of videos on Google Video.",
                "To allow applications to provide efficient video playback, interfaces have been created in display systems that allow video device drivers to expose their hardware capabilities back to the applications. pTHINC takes advantage of these interfaces and its virtual device driver approach to provide a virtual bridge between the remote client and its hardware and the applications, and transparently support video playback.",
                "On top of this architecture, pTHINC uses the YUV colorspace to encode the video content, which provides a number of benefits.",
                "First, it has become increasingly common for PDA video hardware to natively support YUV and be able to perform the colorspace conversion and scaling automatically.",
                "As a result, pTHINC is able to provide fullscreen video playback without any performance hits.",
                "Second, the use of YUV allows for a more efficient representation of RGB data without loss of quality, by taking advantage of the human eyes ability to better distinguish differences in brightness than in color.",
                "In particular, pTHINC uses the YV12 format, which allows full color RGB data to be encoded using just 12 bits per pixel.",
                "Third, YUV data is produced as one of the last steps of the decoding process of most video codecs, allowing pTHINC to provide video playback in a manner that is format independent.",
                "Finally, even if the PDAs video hardware is unable to accelerate playback, the colorspace conversion process is simple enough that it does not impose unreasonable requirements on the PDA.",
                "A more concrete example of how pTHINC leverages the PDA video hardware to support video playback can be seen in our prototype implementation on the popular Dell Axim X51v PDA, which is equipped with the Intel 2700G multimedia accelerator.",
                "In this case, pTHINC creates an offscreen buffer in video memory and writes and reads from this memory region data on the YV12 format.",
                "When a new video frame arrives, video data is copied from the buffer to Figure 2: Experimental Testbed an overlay surface in video memory, which is independent of the normal surface used for traditional drawing.",
                "As the YV12 data is put onto the overlay, the Intel accelerator automatically performs both colorspace conversion and scaling.",
                "By using the overlay surface, pTHINC has no need to redraw the screen once video playback is over since the overlapped surface is unaffected.",
                "In addition, specific overlay regions can be manipulated by leveraging the video hardware, for example to perform hardware linear interpolation to smooth out the frame and display it fullscreen, and to do automatic rotation when the client runs in landscape mode. 4.",
                "EXPERIMENTAL RESULTS We have implemented a pTHINC prototype that runs the client on widely-used Windows Mobile-based Pocket PC devices and the server on both Windows and Linux operating systems.",
                "To demonstrate its effectiveness in supporting mobile wireless web applications, we have measured its performance on web applications.",
                "We present experimental results on different PDA devices for two popular web applications, browsing web pages and playing video content from the web.",
                "We compared pTHINC against native web applications running locally on the PDA to demonstrate the improvement that pTHINC can provide over the traditional fat-client approach.",
                "We also compared pTHINC against three of the most widely used thin clients that can run on PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] and VNC (Virtual Network Computing) [16].",
                "We follow common practice and refer to Citrix MetaFrameXP and Microsoft Remote Desktop by their respective remote display protocols, ICA (Independent Computing Architecture) and RDP (Remote Desktop Protocol). 4.1 Experimental Testbed We conducted our web experiments using two different wireless Pocket PC PDAs in an isolated Wi-Fi network testbed, as shown in Figure 2.",
                "The testbed consisted of two PDA client devices, a packet monitor, a thin-client server, and a web server.",
                "Except for the PDAs, all of the other machines were IBM Netfinity 4500R servers with dual 933 MHz Intel PIII CPUs and 512 MB RAM and were connected on a switched 100 Mbps FastEthernet network.",
                "The web server used was Apache 1.3.27, the network emulator was NISTNet 2.0.12, and the packet monitor was Ethereal 0.10.9.",
                "The PDA clients connected to the testbed through a 802.11b Lucent Orinoco AP-2000 wireless access point.",
                "All experiments using the wireless network were conducted within ten feet of the access point, so we considered the amount of packet loss to be negligible in our experiments.",
                "Two Pocket PC PDAs were used to provide results across both older, less powerful models and newer higher performance models.",
                "The older model was a Dell Axim X5 with 147 Client 1024×768 640×480 Depth Resize Clip RDP no yes 8-bit no yes VNC yes yes 16-bit no no ICA yes yes 16-bit yes no pTHINC yes yes 24-bit yes no Table 2: Thin-client Testbed Configuration Setting a 400 MHz Intel XScale PXA255 CPU and 64 MB RAM running Windows Mobile 2003 and a Dell TrueMobile 1180 2.4Ghz CompactFlash card for wireless networking.",
                "The newer model was a Dell Axim X51v with a 624 MHz Intel XScale XPA270 CPU and 64 MB RAM running Windows Mobile 5.0 and integrated 802.11b wireless networking.",
                "The X51v has an Intel 2700G multimedia accelerator with 16MB video memory.",
                "Both PDAs are capable of 16-bit color but have different screen sizes and display resolutions.",
                "The X5 has a 3.5 inch diagonal screen with 240×320 resolution.",
                "The X51v has a 3.7 inch diagonal screen with 480×640.",
                "The four thin clients that we used support different levels of display quality as summarized in Table 2.",
                "The RDP client only supports a fixed 640×480 display resolution on the server with 8-bit color depth, while other platforms provide higher levels of display quality.",
                "To provide a fair comparison across all platforms, we conducted our experiments with thin-client sessions configured for two possible resolutions, 1024×768 and 640×480.",
                "Both ICA and VNC were configured to use the native PDA resolution of 16-bit color depth.",
                "The current pTHINC prototype uses 24-bit color directly and the client downsamples updates to the 16-bit color depth available on the PDA.",
                "RDP was configured using only 8-bit color depth since it does not support any better color depth.",
                "Since both pTHINC and ICA provide the ability to view the display resized to fit the screen, we measured both clients with and without the display resized to fit the PDA screen.",
                "Each thin client was tested using landscape rather than portrait mode when available.",
                "All systems run on the X51v could run in landscape mode because the hardware provides a landscape mode feature.",
                "However, the X5 does not provide this functionality.",
                "Only pTHINC directly supports landscape mode, so it was the only system that could run in landscape mode on both the X5 and X51v.",
                "To provide a fair comparison, we also standardized on common hardware and operating systems whenever possible.",
                "All of the systems used the Netfinity server as the thin-client server.",
                "For the two systems designed for Windows servers, ICA and RDP, we ran Windows 2003 Server on the server.",
                "For the other systems which support X-based servers, VNC and pTHINC, we ran the Debian Linux Unstable distribution with the Linux 2.6.10 kernel on the server.",
                "We used the latest thin-client server versions available on each platform at the time of our experiments, namely Citrix MetaFrame XP Server for Windows Feature Release 3, Microsoft Remote Desktop built into Windows XP and Windows 2003 using RDP 5.2, and VNC 4.0. 4.2 Application Benchmarks We used two web application benchmarks for our experiments based on two common application scenarios, browsing web pages and playing video content from the web.",
                "Since many thin-client systems including two of the ones tested are closed and proprietary, we measured their performance in a noninvasive manner by capturing network traffic with a packet monitor and using a variant of slow-motion benchmarking [13] previously developed to measure thin-client performance in PDA environments [10].",
                "This measurement methodology accounts for both the display decoupling that can occur between client and server in thin-client systems as well as client processing time, which may be significant in the case of PDAs.",
                "To measure web browsing performance, we used a web browsing benchmark based on the Web Text Page Load Test from the Ziff-Davis i-Bench benchmark suite [7].",
                "The benchmark consists of JavaScript controlled load of 55 pages from the web server.",
                "The pages contain both text and graphics with pages varying in size.",
                "The graphics are embedded images in GIF and JPEG formats.",
                "The original i-Bench benchmark was modified for slow-motion benchmarking by introducing delays of several seconds between the pages using JavaScript.",
                "Then two tests were run, one where delays where added between each page, and one where pages where loaded continuously without waiting for them to be displayed on the client.",
                "In the first test, delays were sufficiently adjusted in each case to ensure that each page could be received and displayed on the client completely without temporal overlap in transferring the data belonging to two consecutive pages.",
                "We used the packet monitor to record the packet traffic for each run of the benchmark, then used the timestamps of the first and last packet in the trace to obtain our latency measures [10].",
                "The packet monitor also recorded the amount of data transmitted between the client and the server.",
                "The ratio between the data traffic in the two tests yields a scale factor.",
                "This scale factor shows the loss of data between the server and the client due to inability of the client to process the data quickly enough.",
                "The product of the scale factor with the latency measurement produces the true latency accounting for client processing time.",
                "To run the web browsing benchmark, we used Mozilla Firefox 1.0.4 running on the thin-client server for the thin clients, and Windows Internet Explorer (IE) Mobile for 2003 and Mobile for 5.0 for the native browsers on the X5 and X51v PDAs, respectively.",
                "In all cases, the web browser used was sized to fill the entire display region available.",
                "To measure video playback performance, we used a video benchmark that consisted of playing a 34.75s MPEG-1 video clip containing a mix of news and entertainment programming at full-screen resolution.",
                "The video clip is 5.11 MB and consists of 834 352x240 pixel frames with an ideal frame rate of 24 frames/sec.",
                "We measured video performance using slow-motion benchmarking by monitoring resulting packet traffic at two playback rates, 1 frames/second (fps) and 24 fps, and comparing the results to determine playback delays and frame drops that occur at 24 fps to measure overall video quality [13].",
                "For example, 100% quality means that all video frames were played at real-time speed.",
                "On the other hand, 50% quality could mean that half the video data was dropped, or that the clip took twice as long to play even though all of the video data was displayed.",
                "To run the video benchmark, we used Windows Media Player 9 for Windows-based thin-client servers, MPlayer 1.0 pre 6 for X-based thin-client servers, and Windows Media Player 9 Mobile and 10 Mobile for the native video players running locally on the X5 and X51v PDAs, respectively.",
                "In all cases, the video player used was sized to fill the entire display region available. 4.3 Measurements Figures 3 and 4 show the results of running the web brows148 0 1 10 100 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL Latency(s) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 3: Browsing Benchmark: Average Page Latency ing benchmark.",
                "For each platform, we show results for up to four different configurations, two on the X5 and two on the X51v, depending on whether each configuration was supported.",
                "However, not all platforms could support all configurations.",
                "The local browser only runs at the display resolution of the PDA, 480×680 or less for the X51v and the X5.",
                "RDP only runs at 640×480.",
                "Neither platform could support 1024×768 display resolution.",
                "ICA only ran on the X5 and could not run on the X51v because it did not work on Windows Mobile 5.",
                "Figure 3 shows the average latency per web page for each platform. pTHINC provides the lowest average web browsing latency on both PDAs.",
                "On the X5, pTHINC performs up to 70 times better than other thin-client systems and 8 times better than the local browser.",
                "On the X51v, pTHINC performs up to 80 times better than other thin-client systems and 7 times better than the native browser.",
                "In fact, all of the thin clients except VNC outperform the local PDA browser, demonstrating the performance benefits of the thin-client approach.",
                "Usability studies have shown that web pages should take less than one second to download for the user to experience an uninterrupted web browsing experience [14].",
                "The measurements show that only the thin clients deliver subsecond web page latencies.",
                "In contrast, the local browser requires more than 3 seconds on average per web page.",
                "The local browser performs worse since it needs to run a more limited web browser to process the HTML, JavaScript, and do all the rendering using the limited capabilities of the PDA.",
                "The thin clients can take advantage of faster server hardware and a highly tuned web browser to process the web content much faster.",
                "Figure 3 shows that RDP is the next fastest platform after pTHINC.",
                "However, RDP is only able to run at a fixed resolution of 640×480 and 8-bit color depth.",
                "Furthermore, RDP also clips the display to the size of the PDA screen so that it does not need to send updates that are not visible on the PDA screen.",
                "This provides a performance benefit assuming the remaining web content is not viewed, but degrades performance when a user scrolls around the display to view other web content.",
                "RDP achieves its performance with significantly lower display quality compared to the other thin clients and with additional display clipping not used by other systems.",
                "As a result, RDP performance alone does not provide a complete comparison with the other platforms.",
                "In contrast, pTHINC provides the fastest performance while at the same time providing equal or better display quality than the other systems. 0 1 10 100 1000 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL DataSize(KB) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 4: Browsing Benchmark: Average Page Data Transferred Since VNC and ICA provide similar display quality to pTHINC, these systems provide a more fair comparison of different thin-client approaches.",
                "ICA performs worse in part because it uses higher-level display primitives that require additional client processing costs.",
                "VNC performs worse in part because it loses display data due to its client-pull delivery mechanism and because of the client processing costs in decompressing raw pixel primitives.",
                "In both cases, their performance was limited in part because their PDA clients were unable to keep up with the rate at which web pages were being displayed.",
                "Figure 3 also shows measurements for those thin clients that support resizing the display to fit the PDA screen, namely ICA and pTHINC.",
                "Resizing requires additional processing, which results in slower average web page latencies.",
                "The measurements show that the additional delay incurred by ICA when resizing versus not resizing is much more substantial than for pTHINC.",
                "ICA performs resizing on the slower PDA client.",
                "In contrast, pTHINC leverage the more powerful server to do resizing, reducing the performance difference between resizing and not resizing.",
                "Unlike ICA, pTHINC is able to provide subsecond web page download latencies in both cases.",
                "Figure 4 shows the data transferred in KB per page when running the slow-motion version of the tests.",
                "All of the platforms have modest data transfer requirements of roughly 100 KB per page or less.",
                "This is well within the bandwidth capacity of Wi-Fi networks.",
                "The measurements show that the local browser does not transfer the least amount of data.",
                "This is surprising as HTML is often considered to be a very compact representation of content.",
                "Instead, RDP is the most bandwidth efficient platform, largely as a result of using only 8-bit color depth and screen clipping so that it does not transfer the entire web page to the client. pTHINC overall has the largest data requirements, slightly more than VNC.",
                "This is largely a result of the current pTHINC prototypes lack of native support for 16-bit color data in the wire protocol.",
                "However, this result also highlights pTHINCs performance as it is faster than all other systems even while transferring more data.",
                "Furthermore, as newer PDA models support full 24-bit color, these results indicate that pTHINC will continue to provide good web browsing performance.",
                "Since display usability and quality are as important as performance, Figures 5 to 8 compare screenshots of the different thin clients when displaying a web page, in this case from the popular BBC news website.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode 149 Figure 5: Browser Screenshot: RDP 640x480 Figure 6: Browser Screenshot: VNC 1024x768 Figure 7: Browser Screenshot: ICA Resized 1024x768 Figure 8: Browser Screenshot: pTHINC Resized 1024x768 using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "While the screenshots lack the visual fidelity of the actual device display, several observations can be made.",
                "Figure 5 shows that RDP does not support fullscreen mode and wastes lots of screen space for controls and UI elements, requiring the user to scroll around in order to access the full contents of the web browsing session.",
                "Figure 6 shows that VNC makes better use of the screen space and provides better display quality, but still forces the user to scroll around to view the web page due to its lack of resizing support.",
                "Figure 7 shows ICAs ability to display the full web page given its resizing support, but that its lack of landscape capability and poorer resize algorithm significantly compromise display quality.",
                "In contrast, Figure 8 shows pTHINC using resizing to provide a high quality fullscreen display of the full width of the web page. pTHINC maximizes the entire viewing region by moving all controls to the PDA buttons.",
                "In addition, pTHINC leverages the server computational power to use a high quality resizing algorithm to resize the display to fit the PDA screen without significant overhead.",
                "Figures 9 and 10 show the results of running the video playback benchmark.",
                "For each platform except ICA, we show results for an X5 and X51v configuration.",
                "ICA could not run on the X51v as noted earlier.",
                "The measurements were done using settings that reflected the environment a user would have to access a web session from both a desktop computer and a PDA.",
                "As such, a 1024×768 server display resolution was used whenever possible and the video was shown at fullscreen.",
                "RDP was limited to 640×480 display resolution as noted earlier.",
                "Since viewing the entire video display is the only really usable option, we resized the display to fit the PDA screen for those platforms that supported this feature, namely ICA and pTHINC.",
                "Figure 9 shows the video quality for each platform. pTHINC is the only thin client able to provide perfect video playback quality, similar to the native PDA video player.",
                "All of the other thin clients deliver very poor video quality.",
                "With the exception of RDP on the X51v which provided unacceptable 35% video quality, none of the other systems were even able to achieve 10% video quality.",
                "VNC and ICA have the worst quality at 8% on the X5 device. pTHINCs native video support enables superior video performance, while other thin clients suffer from their inability to distinguish video from normal display updates.",
                "They attempt to apply ineffective and expensive compression algorithms on the video data and are unable to keep up with the stream of updates generated, resulting in dropped frames or long playback times.",
                "VNC suffers further from its client-pull update model because video frames are generated faster than the rate at which the client can process and send requests to the server to obtain the next display update.",
                "Figure 10 shows the total data transferred during 150 0% 20% 40% 60% 80% 100% pTHINCICAVNCRDPLOCAL VideoQuality Platform Axim X5 Axim X51v Figure 9: Video Benchmark: Fullscreen Video Quality 0 1 10 100 pTHINCICAVNCRDPLOCAL VideoDataSize(MB) Platform Axim X5 Axim X51v Figure 10: Video Benchmark: Fullscreen Video Data video playback for each system.",
                "The native player is the most bandwidth efficient platform, sending less than 6 MB of data, which corresponds to about 1.2 Mbps of bandwidth. pTHINCs 100% video quality requires about 25 MB of data which corresponds to a bandwidth usage of less than 6 Mbps.",
                "While the other thin clients send less data than THINC, they do so because they are dropping video data, resulting in degraded video quality.",
                "Figures 11 to 14 compare screenshots of the different thin clients when displaying the video clip.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "Figures 11 and 12 show that RDP and VNC are unable to display the entire video frame on the PDA screen.",
                "RDP wastes screen space for UI elements and VNC only shows the top corner of the video frame on the screen.",
                "Figure 13 shows that ICA provides resizing to display the entire video frame, but did not proportionally resize the video data, resulting in strange display artifacts.",
                "In contrast, Figure 14 shows pTHINC using resizing to provide a high quality fullscreen display of the entire video frame. pTHINC provides visually more appealing video display than RDP, VNC, or ICA. 5.",
                "RELATED WORK Several studies have examined the web browsing performance of thin-client computing [13, 19, 10].",
                "The ability for thin clients to improve web browsing performance on wireless PDAs was first quantitatively demonstrated in a previous study by one of the authors [10].",
                "This study demonstrated that thin clients can provide both faster web browsing performance and greater web browsing functionality.",
                "The study considered a wide range of web content including content from medical information systems.",
                "Our work builds on this previous study and consider important issues such as how usable existing thin clients are in PDA environments, the trade-offs between thin-client usability and performance, performance across different PDA devices, and the performance of thin clients on common web-related applications such as video.",
                "Many thin clients have been developed and some have PDA clients, including Microsofts Remote Desktop [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5], and Tarantella [18].",
                "These systems were first designed for desktop computing and retrofitted for PDAs.",
                "Unlike pTHINC, they do not address key system architecture and usability issues important for PDAs.",
                "This limits their display quality, system performance, available screen space, and overall usability on PDAs. pTHINC builds on previous work by two of the authors on THINC [1], extending the server architecture and introducing a client interface and usage model to efficiently support PDA devices for mobile web applications.",
                "Other approaches to improve the performance of mobile wireless web browsing have focused on using transcoding and caching proxies in conjunction with the fat client model [11, 9, 4, 8].",
                "They work by pushing functionality to external proxies, and using specialized browsing applications on the PDA device that communicate with the proxy.",
                "Our thinclient approach differs fundamentally from these fat-client approaches by pushing all web browser logic to the server, leveraging existing investments in desktop web browsers and helper applications to work seamlessly with production systems without any additional proxy configuration or web browser modifications.",
                "With the emergence of web browsing on small display devices, web sites have been redesigned using mechanisms like WAP and specialized native web browsers have been developed to tailor the needs of these devices.",
                "Recently, Opera has developed the Opera Mini [15] web browser, which uses an approach similar to the thin-client model to provide access across a number of mobile devices that would normally be incapable of running a web browser.",
                "Instead of requiring the device to process web pages, it uses a remote server to pre-process the page before sending it to the phone. 6.",
                "CONCLUSIONS We have introduced pTHINC, a thin-client architecture for wireless PDAs. pTHINC provides key architectural and usability mechanisms such as server-side screen resizing, clientside screen rotation using simple copy techniques, YUV video support, and maximizing screen space for display updates and leveraging existing PDA control buttons for UI elements. pTHINC transparently supports traditional desktop browsers and their helper applications on PDA devices and desktop machines, providing mobile users with ubiquitous access to a consistent, personalized, and full-featured web environment across heterogeneous devices.",
                "We have implemented pTHINC and measured its performance on web applications compared to existing thin-client systems and native web applications.",
                "Our results on multiple mobile wireless devices demonstrate that pTHINC delivers web browsing performance up to 80 times better than existing thin-client systems, and 8 times better than a native PDA browser.",
                "In addition, pTHINC is the only PDA thin client 151 Figure 11: Video Screenshot: RDP 640x480 Figure 12: Video Screenshot: VNC 1024x768 Figure 13: Video Screenshot: ICA Resized 1024x768 Figure 14: Video Screenshot: pTHINC Resized 1024x768 that transparently provides full-screen, full frame rate video playback, making web sites with multimedia content accessible to mobile web users. 7.",
                "ACKNOWLEDGEMENTS This work was supported in part by NSF ITR grants CCR0219943 and CNS-0426623, and an IBM SUR Award. 8.",
                "REFERENCES [1] R. Baratto, L. Kim, and J. Nieh.",
                "THINC: A Virtual Display Architecture for Thin-Client Computing.",
                "In Proceedings of the 20th ACM Symposium on Operating Systems Principles (SOSP), Oct. 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius, and A. Muir.",
                "Microsoft Windows NT Server 4.0, Terminal Server Edition: Technical Reference.",
                "Microsoft Press, Redmond, WA, 1999. [4] A.",
                "Fox, I. Goldberg, S. D. Gribble, and D. C. Lee.",
                "Experience With Top Gun Wingman: A Proxy-Based Graphical Web Browser for the 3Com PalmPilot.",
                "In Proceedings of Middleware 98, Lake District, England, September 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Health Insurance Portability and Accountability Act. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench version 1.5. http: //etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi.",
                "On proxy agents, mobility, and web access.",
                "Mobile Networks and Applications, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon, and A. Ortega.",
                "Design and Implementation of a Soft Caching Proxy.",
                "Computer Networks and ISDN Systems, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana, and S. Varshneya.",
                "Improving Web Browsing on Wireless PDAs Using Thin-Client Computing.",
                "In Proceedings of the 13th International World Wide Web Conference (WWW), May 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham, and P. Shenoy.",
                "TranSquid: Transcoding and caching proxy for heterogenous ecommerce environments.",
                "In Proceedings of the 12th IEEE Workshop on Research Issues in Data Engineering (RIDE 02), Feb. 2002. [12] .NET VNC Viewer for PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang, and N. Novik.",
                "Measuring Thin-Client Performance Using Slow-Motion Benchmarking.",
                "ACM Trans.",
                "Computer Systems, 21(1):87-115, Feb. 2003. [14] J. Nielsen.",
                "Designing Web Usability.",
                "New Riders Publishing, Indianapolis, IN, 2000. [15] Opera Mini Browser. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood, and A. Hopper.",
                "Virtual Network Computing.",
                "IEEE Internet Computing, 2(1), Jan./Feb. 1998. [17] R. W. Scheifler and J. Gettys.",
                "The X Window System.",
                "ACM Trans.",
                "Gr., 5(2):79-106, Apr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla, and M. Sajjadpour.",
                "Web Browsing Performance of Wireless Thin-Client Computing.",
                "In Proceedings of the 12th International World Wide Web Conference (WWW), May 2003. 152"
            ],
            "original_annotated_samples": [
                "We have developed pTHINC, a PDA thinclient solution that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide high-fidelity display and seamless mobility across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve <br>system usability</br> and maximize available screen resolution for application display.",
                "Given limited display resolution on PDAs, pTHINC maximizes the use of screen real estate for remote display by moving control functionality from the screen to readily available PDA control buttons, improving <br>system usability</br>."
            ],
            "translated_annotated_samples": [
                "Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y movilidad fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la <br>usabilidad del sistema</br> y maximizar la resolución de pantalla disponible para la visualización de aplicaciones.",
                "Dada la limitada resolución de pantalla en las PDA, pTHINC maximiza el uso del espacio de pantalla para la visualización remota al trasladar la funcionalidad de control de la pantalla a los botones de control de PDA fácilmente disponibles, mejorando la <br>usabilidad del sistema</br>."
            ],
            "translated_text": "pTHINC: Una arquitectura de cliente ligero para la web inalámbrica móvil Joeng Kim, Ricardo A. Baratto y Jason Nieh Departamento de Ciencias de la Computación Universidad de Columbia, Nueva York, NY, EE. UU. {jk2438, ricardo, nieh}@cs.columbia.edu RESUMEN Aunque las aplicaciones web están ganando popularidad en las PDAs inalámbricas móviles, los navegadores web en estos sistemas pueden ser bastante lentos y a menudo carecen de funcionalidad adecuada para acceder a muchos sitios web. Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y movilidad fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la <br>usabilidad del sistema</br> y maximizar la resolución de pantalla disponible para la visualización de aplicaciones. Hemos implementado pTHINC en Windows Mobile y evaluado su rendimiento en dispositivos móviles inalámbricos. Nuestros resultados comparados con los navegadores web PDA locales y otros enfoques de cliente ligero demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero PDA que soporta de manera efectiva aplicaciones de ayuda del navegador cruciales como la reproducción de video. Categorías y Descriptores de Asunto: C.2.4 Comunicación de Computadoras-Redes: Sistemas Distribuidos - cliente/servidor Términos Generales: Diseño, Experimentación, Rendimiento 1. La creciente ubicuidad de las redes inalámbricas y la disminución del costo del hardware están impulsando una proliferación de dispositivos móviles inalámbricos portátiles, tanto como asistentes digitales personales (PDA) inalámbricos independientes y dispositivos populares integrados de PDA/teléfono celular. Estos dispositivos están permitiendo nuevas formas de computación y comunicación móvil. Los proveedores de servicios están aprovechando estos dispositivos para ofrecer acceso web omnipresente, y los usuarios de la web móvil a menudo ya utilizan estos dispositivos para acceder a información habilitada para la web, como noticias, correo electrónico, guías de viaje localizadas y mapas. Es probable que en unos pocos años, la mayoría de los dispositivos que accedan a la web sean móviles. Los usuarios suelen acceder al contenido web ejecutando un navegador web y aplicaciones auxiliares asociadas localmente en la PDA. Aunque existen navegadores web nativos para PDAs, ofrecen un rendimiento deficiente y tienen un conjunto de funciones mucho más pequeño y una funcionalidad más limitada que sus contrapartes de computadoras de escritorio [10]. Como resultado, los navegadores web de PDA a menudo no pueden mostrar el contenido web de sitios web que utilizan tecnologías web más avanzadas para ofrecer una experiencia web más rica. Este problema fundamental surge por dos razones. Primero, debido a que las PDAs tienen un entorno de hardware/software completamente diferente de las computadoras de escritorio tradicionales, las aplicaciones web necesitan ser reescritas y personalizadas para las PDAs si es posible, duplicando los costos de desarrollo. Debido a que el mercado de aplicaciones de escritorio es más grande y maduro, la mayoría del esfuerzo de desarrollo generalmente se destina a las aplicaciones de escritorio, lo que resulta en una mayor funcionalidad y rendimiento que sus contrapartes de PDA. En segundo lugar, las PDAs tienen un entorno con recursos más limitados que las computadoras de escritorio tradicionales para ofrecer un factor de forma más pequeño y una vida útil de la batería más larga. Los navegadores web de escritorio son aplicaciones grandes y complejas que no pueden ejecutarse en una PDA. En cambio, los desarrolladores se ven obligados a reducir significativamente estas navegadores web para ofrecer un navegador web PDA utilizable, lo que limita la funcionalidad del navegador PDA. La computación de cliente ligero proporciona un enfoque alternativo para habilitar el acceso web ubicuo desde dispositivos móviles. Un sistema informático de cliente ligero consiste en un servidor y un cliente que se comunican a través de una red utilizando un protocolo de visualización remota. El protocolo permite que las pantallas gráficas se virtualicen y se sirvan a través de una red a un dispositivo cliente, mientras que la lógica de la aplicación se ejecuta en el servidor. Usando el protocolo de visualización remota, el cliente transmite la entrada del usuario al servidor, y el servidor devuelve actualizaciones de pantalla de las aplicaciones del servidor al cliente. Utilizando un modelo de cliente ligero para dispositivos móviles de mano, las PDAs pueden convertirse en clientes simples sin estado que aprovechan las capacidades del servidor remoto para ejecutar navegadores web y otras aplicaciones auxiliares. El modelo de cliente ligero proporciona varios beneficios importantes para la web inalámbrica móvil. Primero, las aplicaciones web estándar de escritorio pueden utilizarse para entregar contenido web a PDAs sin necesidad de reescribir o adaptar las aplicaciones para ejecutarse en una PDA, lo que reduce los costos de desarrollo y aprovecha las inversiones existentes en software. Segundo, las aplicaciones web complejas pueden ejecutarse en servidores potentes en lugar de ejecutarse en versiones simplificadas en PDAs con recursos más limitados, lo que proporciona una mayor funcionalidad y un mejor rendimiento [10]. Tercero, las aplicaciones web pueden aprovechar servidores con redes más rápidas y mejor conectividad, lo que mejora aún más el rendimiento de la aplicación. En cuarto lugar, las PDAs pueden ser dispositivos aún más simples ya que no necesitan realizar una lógica de aplicación compleja, lo que potencialmente reduce el consumo de energía y extiende la vida útil de la batería. Finalmente, los clientes ligeros PDA pueden ser dispositivos prácticamente sin estado que no necesitan ser respaldados o restaurados, requieren casi ningún mantenimiento o actualizaciones, y no almacenan datos sensibles que puedan perderse o ser robados. Este modelo proporciona una vía viable para que las organizaciones médicas cumplan con las regulaciones de HIPAA mientras incorporan dispositivos móviles en sus operaciones diarias. A pesar de estas posibles ventajas, los clientes ligeros no han podido ofrecer la gama completa de estos beneficios al entregar aplicaciones web a dispositivos móviles portátiles. Los thin clients existentes no fueron diseñados para PDAs y no tienen en cuenta problemas importantes de usabilidad en el contexto de dispositivos de factor de forma pequeño, lo que resulta en dificultades para navegar por el contenido web mostrado. Además, los clientes ligeros existentes son ineficaces para proporcionar movilidad fluida en la mezcla heterogénea de tamaños de pantalla y resoluciones de dispositivos. Si bien los clientes ligeros existentes ya pueden ofrecer un rendimiento más rápido que los navegadores web nativos de PDA al entregar contenido web HTML, no admiten de manera efectiva aplicaciones web auxiliares más intensivas en visualización, como videos multimedia, que cada vez son una parte integral del contenido web disponible. Para aprovechar todo el potencial de la informática de cliente ligero en la provisión de la web inalámbrica móvil en PDAs, hemos desarrollado pTHINC (PDA THin-client InterNet Computing). pTHINC se basa en nuestro trabajo previo en THINC [1] para proporcionar una arquitectura de cliente ligero para dispositivos móviles de mano. pTHINC virtualiza y redimensiona la pantalla en el servidor para entregar de manera eficiente actualizaciones de pantalla de alta fidelidad a una amplia gama de clientes diferentes, tamaños de pantalla y orientaciones de pantalla, incluidos los modos de visualización en vertical y horizontal. Esto permite a pTHINC proporcionar la misma sesión web persistente en diferentes dispositivos de cliente. Por ejemplo, pTHINC puede proporcionar la misma sesión de navegación web adecuadamente escalada para su visualización en una computadora de escritorio y una PDA, de modo que las mismas cookies, marcadores y otros metadatos estén disponibles continuamente en ambas máquinas simultáneamente. El enfoque de visualización virtual de pTHINC aprovecha la información semántica disponible en los comandos de visualización y el hardware de video del cliente para proporcionar mecanismos de visualización remota más eficientes que son cruciales para admitir aplicaciones web más intensivas en visualización. Dada la limitada resolución de pantalla en las PDA, pTHINC maximiza el uso del espacio de pantalla para la visualización remota al trasladar la funcionalidad de control de la pantalla a los botones de control de PDA fácilmente disponibles, mejorando la <br>usabilidad del sistema</br>. Hemos implementado pTHINC en Windows Mobile y demostrado que funciona de manera transparente con las aplicaciones existentes, sistemas de ventanas y sistemas operativos, y no requiere modificar, recompilar o volver a enlazar el software existente. Hemos evaluado cuantitativamente pTHINC frente a navegadores web PDA locales y otros enfoques de cliente ligero en dispositivos Pocket PC. Nuestros resultados experimentales demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero de PDA que soporta de manera efectiva aplicaciones esenciales de ayuda para el navegador, como la reproducción de video. Este documento presenta el diseño e implementación de pTHINC. La sección 2 describe el modelo de uso general y las características de usabilidad de pTHINC. La sección 3 presenta el diseño y la arquitectura del sistema de pTHINC. La sección 4 presenta resultados experimentales que miden el rendimiento de pTHINC en aplicaciones web y lo comparan con navegadores nativos de PDA y otros sistemas de cliente ligero de PDA populares. La sección 5 discute el trabajo relacionado. Finalmente, presentamos algunas observaciones finales. El MODELO DE USO DE pTHINC pTHINC es un sistema de cliente ligero que consiste en una aplicación de visualización de cliente simple que se ejecuta en la PDA y un servidor que se ejecuta en una PC estándar. El servidor aprovecha PCs más potentes para ejecutar navegadores web y otra lógica de aplicaciones. El cliente recibe la entrada del usuario desde el lápiz óptico y el teclado virtual de la PDA y los envía al servidor para pasarlos a las aplicaciones. Las actualizaciones de la pantalla son luego enviadas desde el servidor al cliente para mostrar al usuario. Cuando se inicia el cliente PDA pTHINC, se presenta al usuario una interfaz gráfica simple donde se pueden proporcionar información como la dirección y el puerto del servidor, la información de autenticación del usuario y la configuración de la sesión. pTHINC primero intenta conectarse al servidor y realizar el saludo necesario. Una vez que este proceso haya sido completado, pTHINC presenta al usuario la visualización más reciente de su sesión. Si la sesión no existe, se crea una nueva sesión. Las sesiones existentes pueden continuar sin problemas sin cambios en la configuración de la sesión o del servidor. A diferencia de otros sistemas de cliente ligero, pTHINC proporciona a un usuario un modelo de sesión web persistente en el que un usuario puede iniciar una sesión ejecutando un navegador web y aplicaciones asociadas en el servidor, luego desconectarse de esa sesión y volver a conectarse en cualquier momento. Cuando un usuario se reconecta a la sesión, todas las aplicaciones siguen funcionando desde donde el usuario las dejó, de modo que el usuario puede seguir trabajando como si nunca se hubiera desconectado. La capacidad de desconectarse y reconectarse a una sesión en cualquier momento es un beneficio importante para los usuarios de PDA inalámbricas móviles que pueden tener conectividad de red intermitente. El modelo de sesión web persistente de pTHINCs permite a un usuario reconectarse a una sesión web desde dispositivos distintos al que se inició originalmente la sesión web. Esto proporciona a los usuarios una movilidad fluida entre diferentes dispositivos. Si un usuario pierde su PDA, puede fácilmente usar otra PDA para acceder a su sesión web. Además, pTHINC permite a los usuarios utilizar dispositivos que no son PDA para acceder a sesiones web también. Un usuario puede acceder a la misma sesión web persistente en una PC de escritorio como en una PDA, lo que le permite al usuario utilizar la misma sesión web desde cualquier computadora. El modelo de sesión web persistente de pTHINCs aborda un problema clave encontrado por los usuarios de la web móvil, la falta de un entorno web común en diferentes computadoras. Los navegadores web a menudo almacenan información importante como marcadores, cookies e historial, lo que les permite funcionar de una manera mucho más útil. El problema que ocurre cuando un usuario se mueve entre computadoras es que estos datos, específicos de una instalación de un navegador web, no pueden moverse con el usuario. Además, los navegadores web a menudo necesitan aplicaciones auxiliares para procesar diferentes contenidos multimedia, y esas aplicaciones pueden no estar disponibles de manera consistente en todas las computadoras. pTHINC aborda este problema al permitir que un usuario utilice de forma remota el mismo entorno de navegador web y aplicaciones auxiliares desde cualquier computadora. Como resultado, pTHINC puede proporcionar un entorno de navegación web común y consistente para usuarios móviles en diferentes dispositivos sin requerirles intentar sincronizar repetidamente diferentes entornos de navegación web en múltiples máquinas. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC debe proporcionar mecanismos para admitir diferentes tamaños de pantalla y resoluciones. Con este fin, pTHINC proporciona una función de zoom que permite a un usuario acercar y alejar una pantalla y permite que la pantalla de una sesión web 144 Figura 1: teclas de acceso rápido de pTHINC se redimensione para adaptarse a la pantalla del dispositivo que se está utilizando. Por ejemplo, si el servidor está ejecutando una sesión web a 1024×768 pero el cliente es una PDA con una resolución de pantalla de 640×480, pTHINC redimensionará la pantalla del escritorio para que se ajuste a la pantalla más pequeña de la PDA. pTHINC proporciona al usuario de la PDA la opción de aumentar el tamaño de la pantalla haciendo zoom en diferentes partes de la pantalla. Los usuarios suelen estar familiarizados con el diseño general de los sitios web que visitan con frecuencia, y pueden aprovechar esta función de redimensionamiento para navegar mejor por las páginas web. Por ejemplo, un usuario puede alejarse de la pantalla para ver todo el contenido de la página y navegar por los hipervínculos, luego acercarse a una región de interés para obtener una mejor vista. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC también debe proporcionar mecanismos para admitir diferentes orientaciones de pantalla. En un entorno de escritorio, los usuarios suelen estar acostumbrados a tener las pantallas presentadas en modo horizontal, donde el ancho de la pantalla es mayor que su altura. Sin embargo, en un entorno de PDA, la elección no siempre es obvia. Algunos usuarios pueden preferir tener la pantalla en modo retrato, ya que es más fácil sostener el dispositivo en sus manos, mientras que otros pueden preferir el modo paisaje para minimizar la cantidad de desplazamiento lateral necesario para ver una página web. Para adaptarse a las preferencias de los usuarios de PDA, pTHINC proporciona una función de orientación que le permite rotar la pantalla de forma fluida entre el modo horizontal y vertical. El modo de paisaje es particularmente útil para los usuarios de pTHINC que acceden con frecuencia a sus sesiones web tanto en dispositivos de escritorio como en PDA, proporcionando a esos usuarios el mismo ajuste de paisaje familiar en diferentes dispositivos. Dado que el espacio de pantalla es un recurso relativamente escaso en las PDAs, pTHINC se ejecuta en modo de pantalla completa para maximizar el área de pantalla disponible para mostrar la sesión web. Para poder utilizar toda la pantalla en la PDA y aún así permitir al usuario controlar e interactuar con ella, pTHINC reutiliza los botones de acceso directo típicos que se encuentran en las PDAs para realizar todas las funciones de control disponibles para el usuario. Los botones utilizados por pTHINC no requieren ningún cambio en el entorno del sistema operativo; simplemente son interceptados por la aplicación cliente de pTHINC cuando se presionan. La Figura 1 muestra cómo pTHINC utiliza los botones de acceso directo para proporcionar una navegación sencilla y mejorar la experiencia del usuario en general. Estos botones no son específicos del dispositivo, y el diseño mostrado es común en dispositivos PocketPC ampliamente utilizados. pTHINC proporciona seis accesos directos para apoyar su modelo de uso: • Rotar pantalla: El botón de grabación en el borde izquierdo se utiliza para rotar la pantalla entre modo retrato y modo paisaje cada vez que se presiona el botón. • Alejar: El botón más a la izquierda en la parte inferior delantera se utiliza para alejar la visualización de la sesión web proporcionando una vista general de la sesión web. • Acercar: El segundo botón más a la izquierda en la parte inferior delantera se utiliza para acercar la visualización de la sesión web para ver más claramente el contenido de interés. • Desplazamiento direccional: El botón central en la parte inferior delantera se utiliza para desplazarse alrededor de la visualización utilizando un solo botón de control de una manera que ya es familiar para los usuarios de PDA. Esta función es particularmente útil cuando el usuario ha ampliado una región de la pantalla de tal manera que solo una parte de la pantalla es visible en la pantalla. • Mostrar/Ocultar Teclado: El segundo botón más a la derecha en la parte inferior frontal se utiliza para mostrar un teclado virtual dibujado en la pantalla para dispositivos que no tienen teclado físico. El teclado virtual utiliza mecanismos estándar del sistema operativo de PDA, proporcionando portabilidad entre diferentes entornos de PDA. • Cerrar sesión: El botón más a la derecha en la parte inferior frontal se utiliza para desconectarse de la sesión de pTHINC. pTHINC utiliza la pantalla táctil de la PDA, el lápiz óptico y mecanismos estándar de interfaz de usuario para proporcionar una metáfora de punto y clic de la interfaz de usuario similar a la proporcionada por el ratón en un entorno de computación de escritorio tradicional. pTHINC no utiliza un cursor ya que los entornos de PDA no lo proporcionan. En cambio, un usuario puede usar el lápiz táctil para tocar diferentes secciones de la pantalla táctil y señalar el enfoque de entrada. Un toque único en la pantalla táctil genera un evento de clic de ratón correspondiente. Un doble toque en la pantalla táctil genera un evento de doble clic del ratón correspondiente. pTHINC proporciona emulación de ratón de dos botones al usar el lápiz óptico para presionar la pantalla durante un segundo y generar un clic derecho del ratón. Todas estas acciones son idénticas a la forma en que los usuarios ya interactúan con las aplicaciones de PDA en el entorno común de PocketPC. En la navegación web, los usuarios pueden hacer clic en hipervínculos y enfocarse en cuadros de entrada simplemente tocando el área de interés deseada en la pantalla. A diferencia de los navegadores web PDA locales y otras aplicaciones PDA, pTHINC aprovecha metáforas de interfaz de usuario de escritorio más potentes para permitir a los usuarios manipular múltiples ventanas de aplicación abiertas en lugar de estar limitados a una sola ventana de aplicación en un momento dado. Esto proporciona una mayor flexibilidad de navegación más allá de lo que está actualmente disponible en los dispositivos PDA. Similar a un entorno de escritorio, las ventanas del navegador y otras ventanas de aplicaciones pueden ser movidas al presionar y arrastrar el lápiz óptico de manera similar a un ratón. 3. La arquitectura del sistema pTHINC se basa en la arquitectura de visualización remota THINC para proporcionar un sistema de cliente ligero para PDAs. pTHINC virtualiza la visualización en el servidor aprovechando la capa de abstracción del dispositivo de video, que se encuentra por debajo del servidor de ventanas y por encima del framebuffer. Este es un nivel de dispositivo bien definido y de bajo nivel que depende del dispositivo y expone el hardware de video al sistema de visualización. pTHINC logra esto a través de un controlador de pantalla virtual simple que intercepta comandos de dibujo, los empaqueta y los envía a través de la red. Mientras que otros enfoques de cliente ligero interceptan comandos de visualización en otras capas del subsistema de visualización, el enfoque de virtualización de pantalla de pTHINC proporciona algunos beneficios clave para admitir eficientemente a los clientes de PDA. Por ejemplo, interceptar comandos de visualización en una capa superior entre aplicaciones y el sistema de ventanas, como se hace en X [17], requiere replicar y ejecutar una gran cantidad de funcionalidades en la PDA que tradicionalmente son proporcionadas por el sistema de ventanas de escritorio. Dada la magnitud y complejidad de los sistemas de ventanas tradicionales, intentar replicar esta funcionalidad en el entorno restringido de una PDA habría resultado ser una tarea desafiante, y quizás inviable. Además, las aplicaciones y el sistema de ventanas a menudo requieren una sincronización precisa en su funcionamiento, y imponer una red inalámbrica entre ellos al ejecutar las aplicaciones en el servidor y el sistema de ventanas en el cliente degradaría significativamente el rendimiento. Por otro lado, interceptar en una capa inferior extrayendo píxeles del framebuffer a medida que se renderizan proporciona una solución simple que requiere muy poca funcionalidad en el cliente de PDA, pero también puede resultar en un rendimiento degradado. La razón es que para cuando el servidor de visualización remota intenta enviar actualizaciones de pantalla, ha perdido toda la información semántica que podría haberle ayudado a codificar de manera eficiente, y debe recurrir a utilizar un mecanismo de codificación genérico y costoso en el servidor, así como un mecanismo de decodificación potencialmente costoso en el cliente de PDA limitado. A diferencia de los enfoques de intercepción de alto y bajo nivel, el enfoque de pTHINCs de interceptar en el controlador del dispositivo proporciona un equilibrio efectivo entre la simplicidad del cliente y del servidor, y la capacidad de codificar y decodificar de manera eficiente las actualizaciones de pantalla. Al utilizar un enfoque de visualización virtual de bajo nivel, pTHINC puede codificar de manera eficiente los comandos de visualización de la aplicación utilizando solo un pequeño conjunto de comandos de bajo nivel. En un entorno de PDA, este conjunto de comandos proporciona un componente crucial para mantener la simplicidad del cliente en el entorno de PDA con recursos limitados. Los comandos de visualización se muestran en la Tabla 1 y funcionan de la siguiente manera. COPY instruye al cliente a copiar una región de la pantalla desde su framebuffer local a otra ubicación. Este comando mejora la experiencia del usuario al acelerar el desplazamiento y el movimiento de ventanas opacas sin necesidad de reenviar datos de pantalla desde el servidor. SFILL, PFILL y BITMAP son comandos que pintan una región de tamaño fijo en la pantalla. Son útiles para acelerar la visualización de fondos de ventanas sólidas, patrones de escritorio, fondos de páginas web, dibujo de texto y ciertas operaciones en programas de manipulación de gráficos. SFILL llena una región considerable en la pantalla con un solo color. PFILL replica una baldosa sobre una región de la pantalla. BITMAP realiza un relleno utilizando un mapa de bits de unos y ceros como un estipulado para aplicar un color de primer plano y de fondo. Finalmente, RAW se utiliza para transmitir datos de píxeles no codificados que se mostrarán textualmente en una región de la pantalla. Este comando se invoca como último recurso si el servidor no puede emplear ningún otro comando, y es el único comando que puede ser comprimido para mitigar su impacto en el ancho de banda de la red. pTHINC entrega sus comandos utilizando un mecanismo de actualización de servidor-push no bloqueante, donde tan pronto como se generan actualizaciones de pantalla en el servidor, se envían al cliente. Los clientes no están obligados a solicitar explícitamente actualizaciones de pantalla, minimizando así el impacto que la típica variabilidad de la latencia de la red inalámbrica puede tener en la capacidad de respuesta del sistema. Teniendo en cuenta que los recursos Descripción de Comando COPY Copiar un área de búfer de fotogramas en coordenadas especificadas SFILL Rellenar un área con un valor de color de píxel dado PFILL Azulejar un área con un patrón de píxeles dado BITMAP Rellenar una región usando un patrón de bits RAW Mostrar datos de píxeles en bruto en una ubicación dada Tabla 1: Comandos de visualización del protocolo pTHINC. Las PDAs y las redes inalámbricas limitadas pueden no ser capaces de mantenerse al día con un servidor rápido que genera una gran cantidad de actualizaciones, pTHINC es capaz de fusionar, recortar y descartar actualizaciones automáticamente si se produce pérdida o congestión de red, o si el cliente no puede mantenerse al día con la velocidad de las actualizaciones. Este tipo de comportamiento resulta crucial en un entorno de navegación web, donde por ejemplo, una página puede ser redibujada varias veces mientras se renderiza al vuelo por el navegador. En este caso, la PDA solo recibirá y mostrará el resultado final, que claramente es todo lo que al usuario le interesa ver. pTHINC prioriza la entrega de actualizaciones a la PDA utilizando un programador de actualizaciones preemptivo de Tamaño Restante Más Corto Primero (SRSF). SRSF es análogo a la programación de Tiempo de Procesamiento Restante más Corto, la cual se sabe que es óptima para minimizar el tiempo medio de respuesta en un sistema interactivo. En un entorno de navegación web, los trabajos cortos están asociados con el texto y los componentes básicos de diseño de página, como el fondo de las páginas, que son contenido web crítico para el usuario. Por otro lado, los trabajos grandes suelen ser elementos de embellecimiento de menor prioridad, o, incluso peor, banners y anuncios de página web, los cuales tienen un valor cuestionable para el usuario mientras navega por la página. Usando SRSF, pTHINC puede maximizar la utilización del ancho de banda relativamente escaso disponible en la conexión inalámbrica entre la PDA y el servidor. 3.1 Gestión de la Pantalla Para permitir a los usuarios acceder con la misma facilidad a su navegador web y aplicaciones auxiliares desde una computadora de escritorio en casa como desde una PDA mientras están en movimiento, pTHINC proporciona un mecanismo de redimensionamiento para hacer zoom dentro y fuera de la pantalla de una sesión web. El redimensionamiento de pTHINC es completamente compatible con el servidor, no con el cliente. El servidor vuelve a muestrear las actualizaciones para que se ajusten al área de visualización de las PDAs antes de ser transmitidas por la red. pTHINC utiliza el algoritmo de remuestreo de Fants para redimensionar las actualizaciones de píxeles. Esto proporciona actualizaciones suaves y visualmente agradables con un antialiasing adecuado y solo requiere modestos recursos computacionales. El enfoque de redimensionamiento de pTHINCs tiene varias ventajas. Primero, permite al PDA aprovechar la vastamente superior potencia computacional del servidor para utilizar algoritmos de re-muestreo de alta calidad y producir actualizaciones de mayor calidad para que el PDA las muestre. Segundo, cambiar el tamaño de la pantalla no se traduce en requisitos adicionales de recursos para la PDA, ya que no necesita realizar ningún trabajo adicional. Finalmente, se logra una mejor utilización de la red inalámbrica ya que al reescalar las actualizaciones se reducen sus requisitos de ancho de banda. Para permitir a los usuarios orientar sus pantallas en una PDA y así proporcionar una experiencia visual que se ajuste mejor a las preferencias del usuario y al diseño de páginas web o aplicaciones, pTHINC proporciona un mecanismo de rotación de pantalla para alternar entre los modos de visualización horizontal y vertical. La rotación de pantalla de pTHINC es completamente compatible con el cliente, no con el servidor. pTHINC no recalcula explícitamente la geometría de las actualizaciones de pantalla para realizar la rotación, lo cual sería computacionalmente costoso. En cambio, pTHINC simplemente cambia la forma en que los datos se copian en el framebuffer para cambiar entre los modos de visualización. Cuando está en modo retrato, los datos se copian a lo largo de las filas del framebuffer de izquierda a derecha. Cuando se encuentra en modo horizontal, los datos se copian a lo largo de las columnas del framebuffer de arriba hacia abajo. Estas técnicas muy rápidas y simples reemplazan un conjunto de operaciones de copia por otro y no imponen ningún sobrecosto de rendimiento. pTHINC proporciona su propio mecanismo de rotación para soportar una amplia gama de dispositivos sin imponer requisitos adicionales de funciones en la PDA. Aunque algunos dispositivos PDA más nuevos ofrecen soporte nativo para diferentes orientaciones, este mecanismo no es dinámico y requiere que el usuario rote toda la interfaz de usuario de la PDA antes de iniciar el cliente pTHINC. Windows Mobile proporciona mecanismos de API nativos para que las aplicaciones de PDA puedan rotar su interfaz de usuario sobre la marcha, pero estos mecanismos ofrecen un rendimiento deficiente y una calidad de visualización baja, ya que la rotación se realiza de manera ingenua y no es completamente precisa. 3.2 Reproducción de video El video se ha convertido gradualmente en una parte integral de la World Wide Web, y su presencia solo seguirá aumentando. Los sitios web de hoy en día no solo utilizan gráficos animados y flash para presentar el contenido web de manera atractiva, sino que también utilizan video en streaming para enriquecer la interfaz web. Los usuarios pueden ver noticias pregrabadas y en vivo en CNN, ver los momentos más destacados deportivos en ESPN e incluso buscar a través de una gran colección de videos en Google Video. Para permitir que las aplicaciones proporcionen una reproducción de video eficiente, se han creado interfaces en los sistemas de visualización que permiten a los controladores de dispositivos de video exponer sus capacidades de hardware a las aplicaciones. pTHINC aprovecha estas interfaces y su enfoque de controlador de dispositivo virtual para proporcionar un puente virtual entre el cliente remoto y su hardware y las aplicaciones, y admitir de manera transparente la reproducción de video. Sobre esta arquitectura, pTHINC utiliza el espacio de color YUV para codificar el contenido de video, lo cual proporciona una serie de beneficios. Primero, se ha vuelto cada vez más común que el hardware de video de las PDA admita nativamente YUV y pueda realizar la conversión del espacio de color y el escalado automáticamente. Como resultado, pTHINC puede proporcionar reproducción de video a pantalla completa sin afectar el rendimiento. Segundo, el uso de YUV permite una representación más eficiente de los datos RGB sin pérdida de calidad, aprovechando la capacidad de los ojos humanos para distinguir mejor las diferencias en brillo que en color. En particular, pTHINC utiliza el formato YV12, que permite codificar datos de color RGB completo utilizando solo 12 bits por píxel. Tercero, los datos YUV se producen como uno de los últimos pasos del proceso de decodificación de la mayoría de los códecs de video, lo que permite a pTHINC proporcionar la reproducción de video de una manera independiente del formato. Finalmente, aunque el hardware de video de las PDAs no pueda acelerar la reproducción, el proceso de conversión de espacio de color es lo suficientemente simple como para no imponer requisitos poco razonables en la PDA. Un ejemplo más concreto de cómo pTHINC aprovecha el hardware de video PDA para admitir la reproducción de video se puede ver en nuestra implementación de prototipo en la popular PDA Dell Axim X51v, que está equipada con el acelerador multimedia Intel 2700G. En este caso, pTHINC crea un búfer fuera de pantalla en la memoria de video y escribe y lee desde esta región de memoria datos en formato YV12. Cuando llega un nuevo fotograma de video, los datos de video se copian desde el búfer a una superficie superpuesta en la memoria de video, que es independiente de la superficie normal utilizada para el dibujo tradicional. A medida que los datos YV12 se colocan en la superposición, el acelerador de Intel realiza automáticamente la conversión de espacio de color y el escalado. Al utilizar la superficie de superposición, pTHINC no necesita volver a dibujar la pantalla una vez que la reproducción de video ha terminado, ya que la superficie superpuesta no se ve afectada. Además, las regiones de superposición específicas pueden ser manipuladas aprovechando el hardware de video, por ejemplo, para realizar interpolación lineal de hardware y suavizar el fotograma para mostrarlo a pantalla completa, y para realizar rotación automática cuando el cliente se ejecuta en modo horizontal. 4. RESULTADOS EXPERIMENTALES Hemos implementado un prototipo de pTHINC que ejecuta el cliente en dispositivos Pocket PC basados en Windows Mobile ampliamente utilizados y el servidor en sistemas operativos tanto Windows como Linux. Para demostrar su eficacia en el soporte de aplicaciones web inalámbricas móviles, hemos medido su rendimiento en aplicaciones web. Presentamos resultados experimentales sobre diferentes dispositivos PDA para dos aplicaciones web populares, navegar por páginas web y reproducir contenido de video desde la web. Comparamos pTHINC con aplicaciones web nativas que se ejecutan localmente en la PDA para demostrar la mejora que pTHINC puede proporcionar sobre el enfoque tradicional de cliente pesado. También comparamos pTHINC con tres de los clientes ligeros más utilizados que pueden ejecutarse en PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] y VNC (Virtual Network Computing) [16]. Seguimos la práctica común y nos referimos a Citrix MetaFrameXP y Microsoft Remote Desktop por sus respectivos protocolos de visualización remota, ICA (Independent Computing Architecture) y RDP (Remote Desktop Protocol). 4.1 Plataforma de Pruebas Experimental Realizamos nuestros experimentos web utilizando dos PDA Pocket PC inalámbricas diferentes en un entorno de prueba de red Wi-Fi aislado, como se muestra en la Figura 2. El banco de pruebas consistía en dos dispositivos cliente PDA, un monitor de paquetes, un servidor de cliente ligero y un servidor web. Excepto por las PDAs, todas las demás máquinas eran servidores IBM Netfinity 4500R con procesadores duales Intel PIII de 933 MHz y 512 MB de RAM, y estaban conectadas en una red FastEthernet de 100 Mbps conmutada. El servidor web utilizado fue Apache 1.3.27, el emulador de red fue NISTNet 2.0.12 y el monitor de paquetes fue Ethereal 0.10.9. Los clientes de PDA se conectaron al banco de pruebas a través de un punto de acceso inalámbrico Lucent Orinoco AP-2000 802.11b. Todos los experimentos utilizando la red inalámbrica se llevaron a cabo a una distancia de diez pies del punto de acceso, por lo que consideramos que la cantidad de pérdida de paquetes era insignificante en nuestros experimentos. Se utilizaron dos PDA Pocket PC para proporcionar resultados en modelos antiguos y menos potentes, así como en modelos más nuevos de mayor rendimiento. El modelo anterior era un Dell Axim X5 con 147 Cliente 1024×768 640×480 Profundidad Cambio de tamaño Clip RDP no sí 8 bits no sí VNC sí sí 16 bits no no ICA sí sí 16 bits sí no pTHINC sí sí 24 bits sí no Tabla 2: Configuración del banco de pruebas de cliente ligero con un CPU Intel XScale PXA255 de 400 MHz y 64 MB de RAM ejecutando Windows Mobile 2003 y una tarjeta Dell TrueMobile 1180 de 2.4 GHz CompactFlash para redes inalámbricas. El modelo más nuevo era un Dell Axim X51v con un procesador Intel XScale XPA270 de 624 MHz y 64 MB de RAM ejecutando Windows Mobile 5.0 y con red inalámbrica 802.11b integrada. El X51v tiene un acelerador multimedia Intel 2700G con 16MB de memoria de video. Ambas PDAs son capaces de mostrar colores de 16 bits pero tienen diferentes tamaños de pantalla y resoluciones de visualización. El X5 tiene una pantalla diagonal de 3.5 pulgadas con una resolución de 240×320. El X51v tiene una pantalla diagonal de 3.7 pulgadas con una resolución de 480×640. Los cuatro clientes ligeros que utilizamos admiten diferentes niveles de calidad de visualización, como se resume en la Tabla 2. El cliente de RDP solo admite una resolución de pantalla fija de 640×480 en el servidor con una profundidad de color de 8 bits, mientras que otras plataformas ofrecen niveles más altos de calidad de visualización. Para proporcionar una comparación justa en todas las plataformas, realizamos nuestros experimentos con sesiones de cliente ligero configuradas para dos posibles resoluciones, 1024×768 y 640×480. Tanto ICA como VNC se configuraron para usar la resolución nativa de PDA con una profundidad de color de 16 bits. El prototipo actual de pTHINC utiliza color de 24 bits directamente y el cliente reduce la resolución de las actualizaciones al nivel de color de 16 bits disponible en la PDA. RDP se configuró utilizando solo una profundidad de color de 8 bits ya que no admite ninguna profundidad de color mejor. Dado que tanto pTHINC como ICA ofrecen la capacidad de ver la pantalla redimensionada para ajustarse a la pantalla, medimos ambos clientes con y sin la pantalla redimensionada para ajustarse a la pantalla del PDA. Cada cliente ligero fue probado utilizando el modo de paisaje en lugar del modo retrato cuando estaba disponible. Todos los sistemas que se ejecutan en el X51v podrían funcionar en modo horizontal porque el hardware proporciona una función de modo horizontal. Sin embargo, el X5 no proporciona esta funcionalidad. Solo pTHINC admite directamente el modo paisaje, por lo que era el único sistema que podía ejecutarse en modo paisaje tanto en el X5 como en el X51v. Para proporcionar una comparación justa, también estandarizamos en hardware y sistemas operativos comunes siempre que sea posible. Todos los sistemas utilizaron el servidor Netfinity como servidor de cliente ligero. Para los dos sistemas diseñados para servidores Windows, ICA y RDP, ejecutamos Windows Server 2003 en el servidor. Para los otros sistemas que admiten servidores basados en X, ejecutamos la distribución Debian Linux Inestable con el kernel Linux 2.6.10 en el servidor. Utilizamos las últimas versiones de servidores de cliente ligero disponibles en cada plataforma en el momento de nuestros experimentos, a saber, Citrix MetaFrame XP Server para Windows Feature Release 3, Microsoft Remote Desktop integrado en Windows XP y Windows 2003 utilizando RDP 5.2, y VNC 4.0.4.2. Para los benchmarks de aplicaciones, utilizamos dos benchmarks de aplicaciones web para nuestros experimentos basados en dos escenarios de aplicación comunes, navegación por páginas web y reproducción de contenido de video desde la web. Dado que muchos sistemas de cliente ligero, incluidos dos de los probados, son cerrados y propietarios, medimos su rendimiento de manera no invasiva capturando el tráfico de red con un monitor de paquetes y utilizando una variante de benchmarking en cámara lenta [13] previamente desarrollada para medir el rendimiento de clientes ligeros en entornos de PDA [10]. Esta metodología de medición tiene en cuenta tanto el desacoplamiento de la visualización que puede ocurrir entre el cliente y el servidor en sistemas de cliente ligero, como el tiempo de procesamiento del cliente, que puede ser significativo en el caso de las PDAs. Para medir el rendimiento de la navegación web, utilizamos un benchmark de navegación web basado en la Prueba de Carga de Páginas de Texto Web del conjunto de benchmarks Ziff-Davis i-Bench [7]. El punto de referencia consiste en la carga controlada de 55 páginas desde el servidor web mediante JavaScript. Las páginas contienen tanto texto como gráficos, con páginas de diferentes tamaños. Los gráficos son imágenes incrustadas en formatos GIF y JPEG. El benchmark original i-Bench fue modificado para pruebas de rendimiento en cámara lenta al introducir retrasos de varios segundos entre las páginas utilizando JavaScript. Luego se realizaron dos pruebas, una en la que se agregaron retrasos entre cada página, y otra en la que las páginas se cargaron continuamente sin esperar a que se mostraran en el cliente. En la primera prueba, los retrasos se ajustaron lo suficiente en cada caso para garantizar que cada página pudiera ser recibida y mostrada en el cliente por completo sin solapamiento temporal en la transferencia de los datos pertenecientes a dos páginas consecutivas. Utilizamos el monitor de paquetes para registrar el tráfico de paquetes para cada ejecución de la prueba de referencia, luego utilizamos las marcas de tiempo del primer y último paquete en la traza para obtener nuestras medidas de latencia [10]. El monitor de paquetes también registró la cantidad de datos transmitidos entre el cliente y el servidor. La proporción entre el tráfico de datos en las dos pruebas produce un factor de escala. Este factor de escala muestra la pérdida de datos entre el servidor y el cliente debido a la incapacidad del cliente para procesar los datos lo suficientemente rápido. El producto del factor de escala con la medición de latencia produce la verdadera latencia teniendo en cuenta el tiempo de procesamiento del cliente. Para ejecutar la prueba de navegación web, utilizamos Mozilla Firefox 1.0.4 en el servidor de cliente ligero para los clientes ligeros, y Windows Internet Explorer (IE) Mobile para 2003 y Mobile para 5.0 para los navegadores nativos en las PDAs X5 y X51v, respectivamente. En todos los casos, el navegador web utilizado se ajustó para ocupar toda la región de visualización disponible. Para medir el rendimiento de reproducción de video, utilizamos un banco de pruebas de video que consistía en reproducir un clip de video MPEG-1 de 34.75 segundos que contenía una mezcla de noticias y programación de entretenimiento a resolución de pantalla completa. El videoclip tiene un tamaño de 5.11 MB y consta de 834 cuadros de píxeles de 352x240 con una velocidad de cuadro ideal de 24 cuadros por segundo. Medimos el rendimiento del video utilizando pruebas de referencia en cámara lenta al monitorear el tráfico de paquetes resultante a dos velocidades de reproducción, 1 cuadro por segundo (fps) y 24 fps, y comparando los resultados para determinar los retrasos en la reproducción y las caídas de cuadros que ocurren a 24 fps para medir la calidad general del video [13]. Por ejemplo, el 100% de calidad significa que todos los fotogramas del video se reprodujeron a velocidad en tiempo real. Por otro lado, una calidad del 50% podría significar que se eliminó la mitad de los datos del video, o que el clip tardó el doble en reproducirse a pesar de que se mostró toda la información del video. Para ejecutar la prueba de rendimiento de video, utilizamos Windows Media Player 9 para servidores de clientes ligeros basados en Windows, MPlayer 1.0 pre 6 para servidores de clientes ligeros basados en X, y Windows Media Player 9 Mobile y 10 Mobile para los reproductores de video nativos que se ejecutan localmente en las PDAs X5 y X51v, respectivamente. En todos los casos, el reproductor de video utilizado se dimensionó para llenar toda la región de visualización disponible. Las Figuras 3 y 4 muestran los resultados de ejecutar la prueba de navegación por la web. Para cada plataforma, mostramos resultados de hasta cuatro configuraciones diferentes, dos en el X5 y dos en el X51v, dependiendo de si cada configuración era compatible. Sin embargo, no todas las plataformas podrían admitir todas las configuraciones. El navegador local solo se ejecuta a la resolución de pantalla de la PDA, 480×680 o menos para el X51v y el X5. RDP solo funciona a 640×480. Ninguna plataforma podía soportar una resolución de pantalla de 1024×768. ICA solo funcionaba en el X5 y no podía ejecutarse en el X51v porque no era compatible con Windows Mobile 5. La Figura 3 muestra la latencia promedio por página web para cada plataforma. pTHINC proporciona la latencia promedio más baja en la navegación web en ambas PDAs. En el X5, pTHINC funciona hasta 70 veces mejor que otros sistemas de cliente ligero y 8 veces mejor que el navegador local. En el X51v, pTHINC funciona hasta 80 veces mejor que otros sistemas de cliente ligero y 7 veces mejor que el navegador nativo. De hecho, todos los clientes ligeros excepto VNC superan al navegador local de PDA, demostrando los beneficios de rendimiento del enfoque de cliente ligero. Los estudios de usabilidad han demostrado que las páginas web deben tardar menos de un segundo en descargarse para que el usuario experimente una navegación web ininterrumpida [14]. Las mediciones muestran que solo los clientes delgados ofrecen latencias de página web de menos de un segundo. Por el contrario, el navegador local requiere más de 3 segundos en promedio por página web. El navegador local funciona peor ya que necesita ejecutar un navegador web más limitado para procesar el HTML, JavaScript y realizar todo el renderizado utilizando las capacidades limitadas de la PDA. Los clientes ligeros pueden aprovecharse de hardware de servidor más rápido y un navegador web altamente optimizado para procesar el contenido web mucho más rápido. La Figura 3 muestra que RDP es la plataforma más rápida después de pTHINC. Sin embargo, RDP solo puede ejecutarse a una resolución fija de 640×480 y una profundidad de color de 8 bits. Además, RDP también recorta la pantalla al tamaño de la pantalla de la PDA para no tener que enviar actualizaciones que no son visibles en la pantalla de la PDA. Esto proporciona un beneficio de rendimiento siempre y cuando el resto del contenido web no se visualice, pero degrada el rendimiento cuando un usuario desplaza la pantalla para ver otro contenido web. RDP logra su rendimiento con una calidad de visualización significativamente inferior en comparación con otros clientes ligeros y con recortes adicionales en la visualización que no son utilizados por otros sistemas. Como resultado, el rendimiento de RDP por sí solo no proporciona una comparación completa con las otras plataformas. Por el contrario, pTHINC ofrece el mejor rendimiento al mismo tiempo que proporciona una calidad de visualización igual o mejor que los otros sistemas. Dado que VNC e ICA ofrecen una calidad de visualización similar a pTHINC, estos sistemas proporcionan una comparación más justa de diferentes enfoques de cliente ligero. ICA funciona peor en parte porque utiliza primitivas de visualización de nivel superior que requieren costos adicionales de procesamiento por parte del cliente. VNC funciona peor en parte porque pierde datos de visualización debido a su mecanismo de entrega de cliente-pull y debido a los costos de procesamiento del cliente en descomprimir primitivas de píxeles crudos. En ambos casos, su rendimiento se vio limitado en parte porque sus clientes de PDA no podían mantenerse al ritmo al que se mostraban las páginas web. La Figura 3 también muestra las medidas para aquellos clientes ligeros que admiten redimensionar la pantalla para ajustarse a la pantalla de la PDA, a saber, ICA y pTHINC. El redimensionamiento requiere un procesamiento adicional, lo que resulta en latencias promedio más lentas de las páginas web. Las mediciones muestran que el retraso adicional incurrido por ICA al cambiar el tamaño es mucho más sustancial que para pTHINC. ICA realiza redimensionamiento en el cliente PDA más lento. Por el contrario, pTHINC aprovecha el servidor más potente para redimensionar, reduciendo la diferencia de rendimiento entre redimensionar y no redimensionar. A diferencia de ICA, pTHINC es capaz de proporcionar latencias de descarga de páginas web en menos de un segundo en ambos casos. La Figura 4 muestra los datos transferidos en KB por página al ejecutar la versión de cámara lenta de las pruebas. Todas las plataformas tienen requisitos modestos de transferencia de datos de aproximadamente 100 KB por página o menos. Esto está bien dentro de la capacidad de ancho de banda de las redes Wi-Fi. Las mediciones muestran que el navegador local no transfiere la menor cantidad de datos. Esto es sorprendente ya que HTML suele considerarse una representación muy compacta del contenido. En cambio, RDP es la plataforma más eficiente en ancho de banda, en gran parte debido a que utiliza solo una profundidad de color de 8 bits y recorte de pantalla para no transferir la página web completa al cliente. En general, pTHINC tiene los mayores requisitos de datos, ligeramente más que VNC. Esto se debe en gran medida a la falta de soporte nativo de los prototipos actuales de pTHINC para datos de color de 16 bits en el protocolo de comunicación. Sin embargo, este resultado también destaca el rendimiento de pTHINCs, ya que es más rápido que todos los demás sistemas incluso al transferir más datos. Además, dado que los modelos más recientes de PDA admiten colores completos de 24 bits, estos resultados indican que pTHINC seguirá proporcionando un buen rendimiento en la navegación web. Dado que la usabilidad y la calidad de la pantalla son tan importantes como el rendimiento, las Figuras 5 a 8 comparan capturas de pantalla de los diferentes clientes ligeros al mostrar una página web, en este caso del popular sitio de noticias de la BBC. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo paisaje. Figura 5: Captura de pantalla del navegador: RDP 640x480. Figura 6: Captura de pantalla del navegador: VNC 1024x768. Figura 7: Captura de pantalla del navegador: ICA redimensionado 1024x768. Figura 8: Captura de pantalla del navegador: pTHINC redimensionado 1024x768 utilizando la configuración de resolución de pantalla máxima para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Si bien las capturas de pantalla carecen de la fidelidad visual de la pantalla real del dispositivo, se pueden hacer varias observaciones. La Figura 5 muestra que RDP no admite el modo de pantalla completa y desperdicia mucho espacio en pantalla para controles y elementos de la interfaz de usuario, lo que obliga al usuario a desplazarse para acceder a todo el contenido de la sesión de navegación web. La Figura 6 muestra que VNC aprovecha mejor el espacio de la pantalla y ofrece una mejor calidad de visualización, pero aún obliga al usuario a desplazarse para ver la página web debido a la falta de soporte para redimensionar. La Figura 7 muestra la capacidad de ICA para mostrar la página web completa dada su soporte de redimensionamiento, pero su falta de capacidad en modo paisaje y su algoritmo de redimensionamiento deficiente comprometen significativamente la calidad de visualización. Por el contrario, la Figura 8 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de pantalla completa de alta calidad del ancho completo de la página web. pTHINC maximiza toda la región de visualización moviendo todos los controles a los botones de la PDA. Además, pTHINC aprovecha la potencia computacional del servidor para utilizar un algoritmo de redimensionamiento de alta calidad y ajustar la pantalla al tamaño de la PDA sin un sobrecoste significativo. Las figuras 9 y 10 muestran los resultados de ejecutar la prueba de reproducción de video. Para cada plataforma excepto ICA, mostramos resultados para una configuración X5 y X51v. ICA no pudo ejecutarse en el X51v como se mencionó anteriormente. Las mediciones se realizaron utilizando configuraciones que reflejaban el entorno desde el cual un usuario tendría que acceder a una sesión web tanto desde una computadora de escritorio como desde una PDA. Por lo tanto, se utilizó una resolución de pantalla del servidor de 1024×768 siempre que fuera posible y el video se mostró a pantalla completa. La resolución de pantalla de RDP se limitaba a 640×480, como se mencionó anteriormente. Dado que ver toda la pantalla del video es la única opción realmente utilizable, redimensionamos la pantalla para que se ajustara a la pantalla de la PDA en aquellas plataformas que admitían esta función, a saber, ICA y pTHINC. La Figura 9 muestra la calidad de video para cada plataforma. pTHINC es el único cliente ligero capaz de proporcionar una calidad de reproducción de video perfecta, similar al reproductor de video nativo de PDA. Todos los demás clientes ligeros ofrecen una calidad de video muy pobre. Con la excepción de RDP en el X51v que proporcionó una calidad de video inaceptable del 35%, ninguno de los otros sistemas pudo siquiera alcanzar el 10% de calidad de video. VNC e ICA tienen la peor calidad al 8% en el dispositivo X5. El soporte de video nativo de pTHINCs permite un rendimiento de video superior, mientras que otros clientes ligeros sufren de su incapacidad para distinguir el video de las actualizaciones normales de la pantalla. Intentan aplicar algoritmos de compresión ineficaces y costosos en los datos de video y no pueden mantenerse al día con la corriente de actualizaciones generadas, lo que resulta en cuadros omitidos o largos tiempos de reproducción. VNC se ve aún más afectado por su modelo de actualización de cliente-pull porque los fotogramas de video se generan más rápido que la velocidad a la que el cliente puede procesar y enviar solicitudes al servidor para obtener la siguiente actualización de pantalla. La Figura 10 muestra los datos totales transferidos durante la reproducción de video a pantalla completa para cada sistema. El reproductor nativo es la plataforma más eficiente en ancho de banda, enviando menos de 6 MB de datos, lo que corresponde a aproximadamente 1.2 Mbps de ancho de banda. La calidad de video al 100% de pTHINCs requiere alrededor de 25 MB de datos, lo que corresponde a un uso de ancho de banda de menos de 6 Mbps. Mientras que los otros clientes ligeros envían menos datos que THINC, lo hacen porque están eliminando datos de video, lo que resulta en una calidad de video degradada. Las figuras 11 a 14 comparan capturas de pantalla de los distintos clientes ligeros al mostrar el videoclip. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo horizontal utilizando la configuración de resolución máxima de pantalla para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Las figuras 11 y 12 muestran que RDP y VNC no pueden mostrar el cuadro completo del video en la pantalla de la PDA. RDP desperdicia espacio en pantalla para los elementos de la interfaz de usuario y VNC solo muestra la esquina superior del marco de video en la pantalla. La Figura 13 muestra que el ICA proporciona redimensionamiento para mostrar todo el fotograma del video, pero no redimensiona proporcionalmente los datos del video, lo que resulta en artefactos de visualización extraños. Por el contrario, la Figura 14 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de alta calidad a pantalla completa de todo el fotograma del video. pTHINC ofrece una visualización de video visualmente más atractiva que RDP, VNC o ICA. 5. TRABAJOS RELACIONADOS Varios estudios han examinado el rendimiento de la navegación web en la computación de cliente ligero [13, 19, 10]. La capacidad de los clientes ligeros para mejorar el rendimiento de la navegación web en PDAs inalámbricas fue demostrada cuantitativamente por primera vez en un estudio previo realizado por uno de los autores [10]. Este estudio demostró que los clientes ligeros pueden ofrecer tanto un rendimiento de navegación web más rápido como una mayor funcionalidad de navegación web. El estudio consideró una amplia gama de contenido web, incluido el contenido de sistemas de información médica. Nuestro trabajo se basa en este estudio previo y considera temas importantes como la usabilidad de los clientes ligeros existentes en entornos de PDA, los compromisos entre la usabilidad y el rendimiento de los clientes ligeros, el rendimiento en diferentes dispositivos de PDA y el rendimiento de los clientes ligeros en aplicaciones web comunes como el video. Se han desarrollado muchos clientes ligeros y algunos tienen clientes de PDA, incluyendo Remote Desktop de Microsoft [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5] y Tarantella [18]. Estos sistemas fueron diseñados inicialmente para computadoras de escritorio y adaptados posteriormente para asistentes digitales personales (PDA). A diferencia de pTHINC, no abordan los problemas clave de arquitectura del sistema y usabilidad importantes para las PDAs. Esto limita la calidad de visualización, el rendimiento del sistema, el espacio de pantalla disponible y la usabilidad general en PDAs. pTHINC se basa en trabajos anteriores de dos de los autores sobre THINC [1], ampliando la arquitectura del servidor e introduciendo una interfaz de cliente y un modelo de uso para admitir eficientemente dispositivos PDA en aplicaciones web móviles. Otros enfoques para mejorar el rendimiento de la navegación web inalámbrica móvil se han centrado en el uso de proxies de transcodificación y almacenamiento en caché en conjunto con el modelo de cliente pesado [11, 9, 4, 8]. Trabajan mediante el envío de funcionalidades a proxies externos y utilizando aplicaciones de navegación especializadas en el dispositivo PDA que se comunican con el proxy. Nuestro enfoque de cliente ligero difiere fundamentalmente de estos enfoques de cliente pesado al trasladar toda la lógica del navegador web al servidor, aprovechando las inversiones existentes en navegadores web de escritorio y aplicaciones auxiliares para funcionar de manera integrada con los sistemas de producción sin necesidad de configuraciones adicionales de proxy o modificaciones en el navegador web. Con la aparición de la navegación web en dispositivos con pantallas pequeñas, los sitios web han sido rediseñados utilizando mecanismos como WAP y se han desarrollado navegadores web nativos especializados para adaptarse a las necesidades de estos dispositivos. Recientemente, Opera ha desarrollado el navegador web Opera Mini [15], que utiliza un enfoque similar al modelo de cliente ligero para proporcionar acceso a través de una serie de dispositivos móviles que normalmente no podrían ejecutar un navegador web. En lugar de requerir que el dispositivo procese las páginas web, utiliza un servidor remoto para preprocesar la página antes de enviarla al teléfono. CONCLUSIONES Hemos introducido pTHINC, una arquitectura de cliente ligero para PDAs inalámbricas. pTHINC proporciona mecanismos arquitectónicos y de usabilidad clave como el redimensionamiento de pantalla en el lado del servidor, rotación de pantalla en el lado del cliente utilizando técnicas simples de copia, soporte de video YUV, y maximización del espacio de pantalla para actualizaciones de visualización y aprovechamiento de los botones de control existentes en las PDAs para elementos de la interfaz de usuario. pTHINC soporta de manera transparente navegadores de escritorio tradicionales y sus aplicaciones auxiliares en dispositivos PDA y computadoras de escritorio, brindando a los usuarios móviles acceso ubicuo a un entorno web consistente, personalizado y completo en dispositivos heterogéneos. Hemos implementado pTHINC y medido su rendimiento en aplicaciones web en comparación con los sistemas de cliente ligero existentes y las aplicaciones web nativas. Nuestros resultados en múltiples dispositivos móviles inalámbricos demuestran que pTHINC ofrece un rendimiento de navegación web hasta 80 veces mejor que los sistemas de cliente ligero existentes, y 8 veces mejor que un navegador PDA nativo. Además, pTHINC es el único cliente ligero de PDA 151 Figura 11: Captura de pantalla de video: RDP 640x480 Figura 12: Captura de pantalla de video: VNC 1024x768 Figura 13: Captura de pantalla de video: ICA redimensionado 1024x768 Figura 14: Captura de pantalla de video: pTHINC redimensionado 1024x768 que proporciona de manera transparente la reproducción de video a pantalla completa y a velocidad de cuadro completa, haciendo que los sitios web con contenido multimedia sean accesibles para los usuarios de la web móvil. 7. AGRADECIMIENTOS Este trabajo fue apoyado en parte por las subvenciones NSF ITR CCR0219943 y CNS-0426623, y un premio IBM SUR. 8. REFERENCIAS [1] R. Baratto, L. Kim y J. Nieh. THINC: Una arquitectura de visualización virtual para la computación de cliente ligero. En Actas del 20º Simposio de Principios de Sistemas Operativos de la ACM (SOSP), octubre de 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius y A. Muir. Microsoft Windows NT Server 4.0, Terminal Server Edition: Referencia Técnica. Microsoft Press, Redmond, WA, 1999. [4] A.\nMicrosoft Press, Redmond, WA, 1999. [4] A. Fox, I. Goldberg, S. D. Gribble y D. C. Lee. Experiencia con Top Gun Wingman: un navegador web gráfico basado en proxy para el 3Com PalmPilot. En Actas de Middleware 98, Lake District, Inglaterra, septiembre de 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Ley de Portabilidad y Responsabilidad del Seguro de Salud. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench versión 1.5. http://etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi. Sobre agentes de proxy, movilidad y acceso web. Redes y aplicaciones móviles, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon y A. Ortega. Diseño e Implementación de un Proxy de Caché Blando. Redes de Computadoras y Sistemas ISDN, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana y S. Varshneya. Mejorando la navegación web en PDAs inalámbricas utilizando computación de cliente ligero. En Actas de la 13ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham y P. Shenoy. TranSquid: Proxy de transcodificación y almacenamiento en caché para entornos de comercio electrónico heterogéneos. En Actas del 12º Taller IEEE sobre Problemas de Investigación en Ingeniería de Datos (RIDE 02), febrero de 2002. [12] Visor VNC .NET para PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang y N. Novik. Midiendo el rendimiento de clientes ligeros utilizando pruebas de referencia en cámara lenta. ACM Trans. Sistemas de Computación, 21(1):87-115, Feb. 2003. [14] J. Nielsen. Diseño de Usabilidad en la Web. New Riders Publishing, Indianápolis, IN, 2000. [15] Navegador Opera Mini. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood y A. Hopper. Computación de Red Virtual. IEEE Internet Computing, 2(1), enero/febrero de 1998. [17] R. W. Scheifler y J. Gettys. El Sistema de Ventanas X. ACM Trans. Gr., 5(2):79-106, Abr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla y M. Sajjadpour. Rendimiento de la navegación web en computación inalámbrica de cliente ligero. En Actas de la 12ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2003. 152 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "screen resolution": {
            "translated_key": "resolución de pantalla",
            "is_in_text": true,
            "original_annotated_sentences": [
                "pTHINC: A Thin-Client Architecture for Mobile Wireless Web Joeng Kim, Ricardo A. Baratto, and Jason Nieh Department of Computer Science Columbia University, New York, NY, USA {jk2438, ricardo, nieh}@cs.columbia.edu ABSTRACT Although web applications are gaining popularity on mobile wireless PDAs, web browsers on these systems can be quite slow and often lack adequate functionality to access many web sites.",
                "We have developed pTHINC, a PDA thinclient solution that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide high-fidelity display and seamless mobility across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available <br>screen resolution</br> for application display.",
                "We have implemented pTHINC on Windows Mobile and evaluated its performance on mobile wireless devices.",
                "Our results compared to local PDA web browsers and other thin-client approaches demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "Categories and Subject Descriptors: C.2.4 ComputerCommunication-Networks: Distributed Systems - client/ server General Terms: Design, Experimentation, Performance 1.",
                "INTRODUCTION The increasing ubiquity of wireless networks and decreasing cost of hardware is fueling a proliferation of mobile wireless handheld devices, both as standalone wireless Personal Digital Assistants (PDA) and popular integrated PDA/cell phone devices.",
                "These devices are enabling new forms of mobile computing and communication.",
                "Service providers are leveraging these devices to deliver pervasive web access, and mobile web users already often use these devices to access web-enabled information such as news, email, and localized travel guides and maps.",
                "It is likely that within a few years, most of the devices accessing the web will be mobile.",
                "Users typically access web content by running a web browser and associated helper applications locally on the PDA.",
                "Although native web browsers exist for PDAs, they deliver subpar performance and have a much smaller feature set and more limited functionality than their desktop computing counterparts [10].",
                "As a result, PDA web browsers are often not able to display web content from web sites that leverage more advanced web technologies to deliver a richer web experience.",
                "This fundamental problem arises for two reasons.",
                "First, because PDAs have a completely different hardware/software environment from traditional desktop computers, web applications need to be rewritten and customized for PDAs if at all possible, duplicating development costs.",
                "Because the desktop application market is larger and more mature, most development effort generally ends up being spent on desktop applications, resulting in greater functionality and performance than their PDA counterparts.",
                "Second, PDAs have a more resource constrained environment than traditional desktop computers to provide a smaller form factor and longer battery life.",
                "Desktop web browsers are large, complex applications that are unable to run on a PDA.",
                "Instead, developers are forced to significantly strip down these web browsers to provide a usable PDA web browser, thereby crippling PDA browser functionality.",
                "Thin-client computing provides an alternative approach for enabling pervasive web access from handheld devices.",
                "A thin-client computing system consists of a server and a client that communicate over a network using a remote display protocol.",
                "The protocol enables graphical displays to be virtualized and served across a network to a client device, while application logic is executed on the server.",
                "Using the remote display protocol, the client transmits user input to the server, and the server returns screen updates of the applications from the server to the client.",
                "Using a thin-client model for mobile handheld devices, PDAs can become simple stateless clients that leverage the remote server capabilities to execute web browsers and other helper applications.",
                "The thin-client model provides several important benefits for mobile wireless web.",
                "First, standard desktop web applications can be used to deliver web content to PDAs without rewriting or adapting applications to execute on a PDA, reducing development costs and leveraging existing software investments.",
                "Second, complex web applications can be executed on powerful servers instead of running stripped down versions on more resource constrained PDAs, providing greater functionality and better performance [10].",
                "Third, web applications can take advantage of servers with faster networks and better connectivity, further boosting application performance.",
                "Fourth, PDAs can be even simpler devices since they do not need to perform complex application logic, potentially reducing energy consumption and extend143 ing battery life.",
                "Finally, PDA thin clients can be essentially stateless appliances that do not need to be backed up or restored, require almost no maintenance or upgrades, and do not store any sensitive data that can be lost or stolen.",
                "This model provides a viable avenue for medical organizations to comply with HIPAA regulations [6] while embracing mobile handhelds in their day to day operations.",
                "Despite these potential advantages, thin clients have been unable to provide the full range of these benefits in delivering web applications to mobile handheld devices.",
                "Existing thin clients were not designed for PDAs and do not account for important usability issues in the context of small form factor devices, resulting in difficulty in navigating displayed web content.",
                "Furthermore, existing thin clients are ineffective at providing seamless mobility across the heterogeneous mix of device display sizes and resolutions.",
                "While existing thin clients can already provide faster performance than native PDA web browsers in delivering HTML web content, they do not effectively support more display-intensive web helper applications such as multimedia video, which is increasingly an integral part of available web content.",
                "To harness the full potential of thin-client computing in providing mobile wireless web on PDAs, we have developed pTHINC (PDA THin-client InterNet Computing). pTHINC builds on our previous work on THINC [1] to provide a thinclient architecture for mobile handheld devices. pTHINC virtualizes and resizes the display on the server to efficiently deliver high-fidelity screen updates to a broad range of different clients, screen sizes, and screen orientations, including both portrait and landscape viewing modes.",
                "This enables pTHINC to provide the same persistent web session across different client devices.",
                "For example, pTHINC can provide the same web browsing session appropriately scaled for display on a desktop computer and a PDA so that the same cookies, bookmarks, and other meta-data are continuously available on both machines simultaneously. pTHINCs virtual display approach leverages semantic information available in display commands, and client-side video hardware to provide more efficient remote display mechanisms that are crucial for supporting more display-intensive web applications.",
                "Given limited display resolution on PDAs, pTHINC maximizes the use of screen real estate for remote display by moving control functionality from the screen to readily available PDA control buttons, improving system usability.",
                "We have implemented pTHINC on Windows Mobile and demonstrated that it works transparently with existing applications, window systems, and operating systems, and does not require modifying, recompiling, or relinking existing software.",
                "We have quantitatively evaluated pTHINC against local PDA web browsers and other thin-client approaches on Pocket PC devices.",
                "Our experimental results demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "This paper presents the design and implementation of pTHINC.",
                "Section 2 describes the overall usage model and usability characteristics of pTHINC.",
                "Section 3 presents the design and system architecture of pTHINC.",
                "Section 4 presents experimental results measuring the performance of pTHINC on web applications and comparing it against native PDA browsers and other popular PDA thin-client systems.",
                "Section 5 discusses related work.",
                "Finally, we present some concluding remarks. 2.",
                "PTHINC USAGE MODEL pTHINC is a thin-client system that consists of a simple client viewer application that runs on the PDA and a server that runs on a commodity PC.",
                "The server leverages more powerful PCs to to run web browsers and other application logic.",
                "The client takes user input from the PDA stylus and virtual keyboard and sends them to the server to pass to the applications.",
                "Screen updates are then sent back from the server to the client for display to the user.",
                "When the pTHINC PDA client is started, the user is presented with a simple graphical interface where information such as server address and port, user authentication information, and session settings can be provided. pTHINC first attempts to connect to the server and perform the necessary handshaking.",
                "Once this process has been completed, pTHINC presents the user with the most recent display of his session.",
                "If the session does not exist, a new session is created.",
                "Existing sessions can be seamlessly continued without changes in the session setting or server configuration.",
                "Unlike other thin-client systems, pTHINC provides a user with a persistent web session model in which a user can launch a session running a web browser and associated applications at the server, then disconnect from that session and reconnect to it again anytime.",
                "When a user reconnects to the session, all of the applications continue running where the user left off, so that the user can continue working as though he or she never disconnected.",
                "The ability to disconnect and reconnect to a session at anytime is an important benefit for mobile wireless PDA users which may have intermittent network connectivity. pTHINCs persistent web session model enables a user to reconnect to a web session from devices other than the one on which the web session was originally initiated.",
                "This provides users with seamless mobility across different devices.",
                "If a user loses his PDA, he can easily use another PDA to access his web session.",
                "Furthermore, pTHINC allows users to use non-PDA devices to access web sessions as well.",
                "A user can access the same persistent web session on a desktop PC as on a PDA, enabling a user to use the same web session from any computer. pTHINCs persistent web session model addresses a key problem encountered by mobile web users, the lack of a common web environment across computers.",
                "Web browsers often store important information such as bookmarks, cookies, and history, which enable them to function in a much more useful manner.",
                "The problem that occurs when a user moves between computers is that this data, which is specific to a web browser installation, cannot move with the user.",
                "Furthermore, web browsers often need helper applications to process different media content, and those applications may not be consistently available across all computers. pTHINC addresses this problem by enabling a user to remotely use the exact same web browser environment and helper applications from any computer.",
                "As a result, pTHINC can provide a common, consistent web browsing environment for mobile users across different devices without requiring them to attempt to repeatedly synchronize different web browsing environments across multiple machines.",
                "To enable a user to access the same web session on different devices, pTHINC must provide mechanisms to support different display sizes and resolutions.",
                "Toward this end, pTHINC provides a zoom feature that enables a user to zoom in and out of a display and allows the display of a web 144 Figure 1: pTHINC shortcut keys session to be resized to fit the screen of the device being used.",
                "For example, if the server is running a web session at 1024×768 but the client is a PDA with a display resolution of 640×480, pTHINC will resize the desktop display to fit the full display in the smaller screen of the PDA. pTHINC provides the PDA user with the option to increase the size of the display by zooming in to different parts of the display.",
                "Users are often familiar with the general layout of commonly visited websites, and are able to leverage this resizing feature to better navigate through web pages.",
                "For example, a user can zoom out of the display to view the entire page content and navigate hyperlinks, then zoom in to a region of interest for a better view.",
                "To enable a user to access the same web session on different devices, pTHINC must also provide mechanisms to support different display orientations.",
                "In a desktop environment, users are typically accustomed to having displays presented in landscape mode where the screen width is larger than its height.",
                "However, in a PDA environment, the choice is not always obvious.",
                "Some users may prefer having the display in portrait mode, as it is easier to hold the device in their hands, while others may prefer landscape mode in order to minimize the amount of side-scrolling necessary to view a web page.",
                "To accommodate PDA user preferences, pTHINC provides an orientation feature that enables it to seamless rotate the display between landscape and portrait mode.",
                "The landscape mode is particularly useful for pTHINC users who frequently access their web sessions on both desktop and PDA devices, providing those users with the same familiar landscape setting across different devices.",
                "Because screen space is a relatively scarce resource on PDAs, pTHINC runs in fullscreen mode to maximize the screen area available to display the web session.",
                "To be able to use all of the screen on the PDA and still allow the user to control and interact with it, pTHINC reuses the typical shortcut buttons found on PDAs to perform all the control functions available to the user.",
                "The buttons used by pTHINC do not require any OS environment changes; they are simply intercepted by the pTHINC client application when they are pressed.",
                "Figure 1 shows how pTHINC utilizes the shortcut buttons to provide easy navigation and improve the overall user experience.",
                "These buttons are not device specific, and the layout shown is common to widelyused PocketPC devices. pTHINC provides six shortcuts to support its usage model: • Rotate Screen: The record button on the left edge is used to rotate the screen between portrait and landscape mode each time the button is pressed. • Zoom Out: The leftmost button on the bottom front is used to zoom out the display of the web session providing a birds eye view of the web session. • Zoom In: The second leftmost button on the bottom front is used to zoom in the display of the web session to more clearly view content of interest. • Directional Scroll: The middle button on the bottom front is used to scroll around the display using a single control button in a way that is already familiar to PDA users.",
                "This feature is particularly useful when the user has zoomed in to a region of the display such that only part of the display is visible on the screen. • Show/Hide Keyboard: The second rightmost button on the bottom front is used to bring up a virtual keyboard drawn on the screen for devices which have no physical keyboard.",
                "The virtual keyboard uses standard PDA OS mechanisms, providing portability across different PDA environments. • Close Session: The rightmost button on the bottom front is used to disconnect from the pTHINC session. pTHINC uses the PDA touch screen, stylus, and standard user interface mechanisms to provide a user interface pointand-click metaphor similar to that provided by the mouse in a traditional desktop computing environment. pTHINC does not use a cursor since PDA environments do not provide one.",
                "Instead, a user can use the stylus to tap on different sections of the touch screen to indicate input focus.",
                "A single tap on the touch screen generates a corresponding single click mouse event.",
                "A double tap on the touch screen generates a corresponding double click mouse event. pTHINC provides two-button mouse emulation by using the stylus to press down on the screen for one second to generate a right mouse click.",
                "All of these actions are identical to the way users already interact with PDA applications in the common PocketPC environment.",
                "In web browsing, users can click on hyperlinks and focus on input boxes by simply tapping on the desired screen area of interest.",
                "Unlike local PDA web browsers and other PDA applications, pTHINC leverages more powerful desktop user interface metaphors to enable users to manipulate multiple open application windows instead of being limited to a single application window at any given moment.",
                "This provides increased browsing flexibility beyond what is currently available on PDA devices.",
                "Similar to a desktop environment, browser windows and other application windows can be moved around by pressing down and dragging the stylus similar to a mouse. 3.",
                "PTHINC SYSTEM ARCHITECTURE pTHINC builds on the THINC [1] remote display architecture to provide a thin-client system for PDAs. pTHINC virtualizes the display at the server by leveraging the video device abstraction layer, which sits below the window server and above the framebuffer.",
                "This is a well-defined, low-level, device-dependent layer that exposes the video hardware to the display system. pTHINC accomplishes this through a simple virtual display driver that intercepts drawing commands, packetizes, and sends them over the network. 145 While other thin-client approaches intercept display commands at other layers of the display subsystem, pTHINCs display virtualization approach provides some key benefits in efficiently supporting PDA clients.",
                "For example, intercepting display commands at a higher layer between applications and the window system as is done by X [17] requires replicating and running a great deal of functionality on the PDA that is traditionally provided by the desktop window system.",
                "Given both the size and complexity of traditional window systems, attempting to replicate this functionality in the restricted PDA environment would have proven to be a daunting, and perhaps unfeasible task.",
                "Furthermore, applications and the window system often require tight synchronization in their operation and imposing a wireless network between them by running the applications on the server and the window system on the client would significantly degrade performance.",
                "On the other hand, intercepting at a lower layer by extracting pixels out of the framebuffer as they are rendered provides a simple solution that requires very little functionality on the PDA client, but can also result in degraded performance.",
                "The reason is that by the time the remote display server attempts to send screen updates, it has lost all semantic information that may have helped it encode efficiently, and it must resort to using a generic and expensive encoding mechanism on the server, as well as a potentially expensive decoding mechanism on the limited PDA client.",
                "In contrast to both the high and low level interception approaches, pTHINCs approach of intercepting at the device driver provides an effective balance between client and server simplicity, and the ability to efficiently encode and decode screen updates.",
                "By using a low-level virtual display approach, pTHINC can efficiently encode application display commands using only a small set of low-level commands.",
                "In a PDA environment, this set of commands provides a crucial component in maintaining the simplicity of the client in the resourceconstrained PDA environment.",
                "The display commands are shown in Table 1, and work as follows.",
                "COPY instructs the client to copy a region of the screen from its local framebuffer to another location.",
                "This command improves the user experience by accelerating scrolling and opaque window movement without having to resend screen data from the server.",
                "SFILL, PFILL, and BITMAP are commands that paint a fixed-size region on the screen.",
                "They are useful for accelerating the display of solid window backgrounds, desktop patterns, backgrounds of web pages, text drawing, and certain operations in graphics manipulation programs.",
                "SFILL fills a sizable region on the screen with a single color.",
                "PFILL replicates a tile over a screen region.",
                "BITMAP performs a fill using a bitmap of ones and zeros as a stipple to apply a foreground and background color.",
                "Finally, RAW is used to transmit unencoded pixel data to be displayed verbatim on a region of the screen.",
                "This command is invoked as a last resort if the server is unable to employ any other command, and it is the only command that may be compressed to mitigate its impact on network bandwidth. pTHINC delivers its commands using a non-blocking, serverpush update mechanism, where as soon as display updates are generated on the server, they are sent to the client.",
                "Clients are not required to explicitly request display updates, thus minimizing the impact that the typical varying network latency of wireless links may have on the responsiveness of the system.",
                "Keeping in mind that resource Command Description COPY Copy a frame buffer area to specified coordinates SFILL Fill an area with a given pixel color value PFILL Tile an area with a given pixel pattern BITMAP Fill a region using a bit pattern RAW Display raw pixel data at a given location Table 1: pTHINC Protocol Display Commands constrained PDAs and wireless networks may not be able to keep up with a fast server generating a large number of updates, pTHINC is able to coalesce, clip, and discard updates automatically if network loss or congestion occurs, or the client cannot keep up with the rate of updates.",
                "This type of behavior proves crucial in a web browsing environment, where for example, a page may be redrawn multiple times as it is rendered on the fly by the browser.",
                "In this case, the PDA will only receive and render the final result, which clearly is all the user is interesting in seeing. pTHINC prioritizes the delivery of updates to the PDA using a Shortest-Remaining-Size-First (SRSF) preemptive update scheduler.",
                "SRSF is analogous to Shortest-RemainingProcessing-Time scheduling, which is known to be optimal for minimizing mean response time in an interactive system.",
                "In a web browsing environment, short jobs are associated with text and basic page layout components such as the pages background, which are critical web content for the user.",
                "On the other hand, large jobs are often lower priority beautifying elements, or, even worse, web page banners and advertisements, which are of questionable value to the user as he or she is browsing the page.",
                "Using SRSF, pTHINC is able to maximize the utilization of the relatively scarce bandwidth available on the wireless connection between the PDA and the server. 3.1 Display Management To enable users to just as easily access their web browser and helper applications from a desktop computer at home as from a PDA while on the road, pTHINC provides a resize mechanism to zoom in and out of the display of a web session. pTHINC resizing is completely supported by the server, not the client.",
                "The server resamples updates to fit within the PDAs viewport before they are transmitted over the network. pTHINC uses Fants resampling algorithm to resize pixel updates.",
                "This provides smooth, visually pleasing updates with properly antialiasing and has only modest computational requirements. pTHINCs resizing approach has a number of advantages.",
                "First, it allows the PDA to leverage the vastly superior computational power of the server to use high quality resampling algorithms and produce higher quality updates for the PDA to display.",
                "Second, resizing the screen does not translate into additional resource requirements for the PDA, since it does not need to perform any additional work.",
                "Finally, better utilization of the wireless network is attained since rescaling the updates reduces their bandwidth requirements.",
                "To enable users to orient their displays on a PDA to provide a viewing experience that best accommodates user preferences and the layout of web pages or applications, pTHINC provides a display rotation mechanism to switch between landscape and portrait viewing modes. pTHINC display rotation is completely supported by the client, not the server. pTHINC does not explicitly recalculate the ge146 ometry of display updates to perform rotation, which would be computationally expensive.",
                "Instead, pTHINC simply changes the way data is copied into the framebuffer to switch between display modes.",
                "When in portrait mode, data is copied along the rows of the framebuffer from left to right.",
                "When in landscape mode, data is copied along the columns of the framebuffer from top to bottom.",
                "These very fast and simple techniques replace one set of copy operations with another and impose no performance overhead. pTHINC provides its own rotation mechanism to support a wide range of devices without imposing additional feature requirements on the PDA.",
                "Although some newer PDA devices provide native support for different orientations, this mechanism is not dynamic and requires the user to rotate the PDAs entire user interface before starting the pTHINC client.",
                "Windows Mobile provides native API mechanisms for PDA applications to rotate their UI on the fly, but these mechanisms deliver poor performance and display quality as the rotation is performed naively and is not completely accurate. 3.2 Video Playback Video has gradually become an integral part of the World Wide Web, and its presence will only continue to increase.",
                "Web sites today not only use animated graphics and flash to deliver web content in an attractive manner, but also utilize streaming video to enrich the web interface.",
                "Users are able to view pre-recorded and live newscasts on CNN, watch sports highlights on ESPN, and even search through large collection of videos on Google Video.",
                "To allow applications to provide efficient video playback, interfaces have been created in display systems that allow video device drivers to expose their hardware capabilities back to the applications. pTHINC takes advantage of these interfaces and its virtual device driver approach to provide a virtual bridge between the remote client and its hardware and the applications, and transparently support video playback.",
                "On top of this architecture, pTHINC uses the YUV colorspace to encode the video content, which provides a number of benefits.",
                "First, it has become increasingly common for PDA video hardware to natively support YUV and be able to perform the colorspace conversion and scaling automatically.",
                "As a result, pTHINC is able to provide fullscreen video playback without any performance hits.",
                "Second, the use of YUV allows for a more efficient representation of RGB data without loss of quality, by taking advantage of the human eyes ability to better distinguish differences in brightness than in color.",
                "In particular, pTHINC uses the YV12 format, which allows full color RGB data to be encoded using just 12 bits per pixel.",
                "Third, YUV data is produced as one of the last steps of the decoding process of most video codecs, allowing pTHINC to provide video playback in a manner that is format independent.",
                "Finally, even if the PDAs video hardware is unable to accelerate playback, the colorspace conversion process is simple enough that it does not impose unreasonable requirements on the PDA.",
                "A more concrete example of how pTHINC leverages the PDA video hardware to support video playback can be seen in our prototype implementation on the popular Dell Axim X51v PDA, which is equipped with the Intel 2700G multimedia accelerator.",
                "In this case, pTHINC creates an offscreen buffer in video memory and writes and reads from this memory region data on the YV12 format.",
                "When a new video frame arrives, video data is copied from the buffer to Figure 2: Experimental Testbed an overlay surface in video memory, which is independent of the normal surface used for traditional drawing.",
                "As the YV12 data is put onto the overlay, the Intel accelerator automatically performs both colorspace conversion and scaling.",
                "By using the overlay surface, pTHINC has no need to redraw the screen once video playback is over since the overlapped surface is unaffected.",
                "In addition, specific overlay regions can be manipulated by leveraging the video hardware, for example to perform hardware linear interpolation to smooth out the frame and display it fullscreen, and to do automatic rotation when the client runs in landscape mode. 4.",
                "EXPERIMENTAL RESULTS We have implemented a pTHINC prototype that runs the client on widely-used Windows Mobile-based Pocket PC devices and the server on both Windows and Linux operating systems.",
                "To demonstrate its effectiveness in supporting mobile wireless web applications, we have measured its performance on web applications.",
                "We present experimental results on different PDA devices for two popular web applications, browsing web pages and playing video content from the web.",
                "We compared pTHINC against native web applications running locally on the PDA to demonstrate the improvement that pTHINC can provide over the traditional fat-client approach.",
                "We also compared pTHINC against three of the most widely used thin clients that can run on PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] and VNC (Virtual Network Computing) [16].",
                "We follow common practice and refer to Citrix MetaFrameXP and Microsoft Remote Desktop by their respective remote display protocols, ICA (Independent Computing Architecture) and RDP (Remote Desktop Protocol). 4.1 Experimental Testbed We conducted our web experiments using two different wireless Pocket PC PDAs in an isolated Wi-Fi network testbed, as shown in Figure 2.",
                "The testbed consisted of two PDA client devices, a packet monitor, a thin-client server, and a web server.",
                "Except for the PDAs, all of the other machines were IBM Netfinity 4500R servers with dual 933 MHz Intel PIII CPUs and 512 MB RAM and were connected on a switched 100 Mbps FastEthernet network.",
                "The web server used was Apache 1.3.27, the network emulator was NISTNet 2.0.12, and the packet monitor was Ethereal 0.10.9.",
                "The PDA clients connected to the testbed through a 802.11b Lucent Orinoco AP-2000 wireless access point.",
                "All experiments using the wireless network were conducted within ten feet of the access point, so we considered the amount of packet loss to be negligible in our experiments.",
                "Two Pocket PC PDAs were used to provide results across both older, less powerful models and newer higher performance models.",
                "The older model was a Dell Axim X5 with 147 Client 1024×768 640×480 Depth Resize Clip RDP no yes 8-bit no yes VNC yes yes 16-bit no no ICA yes yes 16-bit yes no pTHINC yes yes 24-bit yes no Table 2: Thin-client Testbed Configuration Setting a 400 MHz Intel XScale PXA255 CPU and 64 MB RAM running Windows Mobile 2003 and a Dell TrueMobile 1180 2.4Ghz CompactFlash card for wireless networking.",
                "The newer model was a Dell Axim X51v with a 624 MHz Intel XScale XPA270 CPU and 64 MB RAM running Windows Mobile 5.0 and integrated 802.11b wireless networking.",
                "The X51v has an Intel 2700G multimedia accelerator with 16MB video memory.",
                "Both PDAs are capable of 16-bit color but have different screen sizes and display resolutions.",
                "The X5 has a 3.5 inch diagonal screen with 240×320 resolution.",
                "The X51v has a 3.7 inch diagonal screen with 480×640.",
                "The four thin clients that we used support different levels of display quality as summarized in Table 2.",
                "The RDP client only supports a fixed 640×480 display resolution on the server with 8-bit color depth, while other platforms provide higher levels of display quality.",
                "To provide a fair comparison across all platforms, we conducted our experiments with thin-client sessions configured for two possible resolutions, 1024×768 and 640×480.",
                "Both ICA and VNC were configured to use the native PDA resolution of 16-bit color depth.",
                "The current pTHINC prototype uses 24-bit color directly and the client downsamples updates to the 16-bit color depth available on the PDA.",
                "RDP was configured using only 8-bit color depth since it does not support any better color depth.",
                "Since both pTHINC and ICA provide the ability to view the display resized to fit the screen, we measured both clients with and without the display resized to fit the PDA screen.",
                "Each thin client was tested using landscape rather than portrait mode when available.",
                "All systems run on the X51v could run in landscape mode because the hardware provides a landscape mode feature.",
                "However, the X5 does not provide this functionality.",
                "Only pTHINC directly supports landscape mode, so it was the only system that could run in landscape mode on both the X5 and X51v.",
                "To provide a fair comparison, we also standardized on common hardware and operating systems whenever possible.",
                "All of the systems used the Netfinity server as the thin-client server.",
                "For the two systems designed for Windows servers, ICA and RDP, we ran Windows 2003 Server on the server.",
                "For the other systems which support X-based servers, VNC and pTHINC, we ran the Debian Linux Unstable distribution with the Linux 2.6.10 kernel on the server.",
                "We used the latest thin-client server versions available on each platform at the time of our experiments, namely Citrix MetaFrame XP Server for Windows Feature Release 3, Microsoft Remote Desktop built into Windows XP and Windows 2003 using RDP 5.2, and VNC 4.0. 4.2 Application Benchmarks We used two web application benchmarks for our experiments based on two common application scenarios, browsing web pages and playing video content from the web.",
                "Since many thin-client systems including two of the ones tested are closed and proprietary, we measured their performance in a noninvasive manner by capturing network traffic with a packet monitor and using a variant of slow-motion benchmarking [13] previously developed to measure thin-client performance in PDA environments [10].",
                "This measurement methodology accounts for both the display decoupling that can occur between client and server in thin-client systems as well as client processing time, which may be significant in the case of PDAs.",
                "To measure web browsing performance, we used a web browsing benchmark based on the Web Text Page Load Test from the Ziff-Davis i-Bench benchmark suite [7].",
                "The benchmark consists of JavaScript controlled load of 55 pages from the web server.",
                "The pages contain both text and graphics with pages varying in size.",
                "The graphics are embedded images in GIF and JPEG formats.",
                "The original i-Bench benchmark was modified for slow-motion benchmarking by introducing delays of several seconds between the pages using JavaScript.",
                "Then two tests were run, one where delays where added between each page, and one where pages where loaded continuously without waiting for them to be displayed on the client.",
                "In the first test, delays were sufficiently adjusted in each case to ensure that each page could be received and displayed on the client completely without temporal overlap in transferring the data belonging to two consecutive pages.",
                "We used the packet monitor to record the packet traffic for each run of the benchmark, then used the timestamps of the first and last packet in the trace to obtain our latency measures [10].",
                "The packet monitor also recorded the amount of data transmitted between the client and the server.",
                "The ratio between the data traffic in the two tests yields a scale factor.",
                "This scale factor shows the loss of data between the server and the client due to inability of the client to process the data quickly enough.",
                "The product of the scale factor with the latency measurement produces the true latency accounting for client processing time.",
                "To run the web browsing benchmark, we used Mozilla Firefox 1.0.4 running on the thin-client server for the thin clients, and Windows Internet Explorer (IE) Mobile for 2003 and Mobile for 5.0 for the native browsers on the X5 and X51v PDAs, respectively.",
                "In all cases, the web browser used was sized to fill the entire display region available.",
                "To measure video playback performance, we used a video benchmark that consisted of playing a 34.75s MPEG-1 video clip containing a mix of news and entertainment programming at full-<br>screen resolution</br>.",
                "The video clip is 5.11 MB and consists of 834 352x240 pixel frames with an ideal frame rate of 24 frames/sec.",
                "We measured video performance using slow-motion benchmarking by monitoring resulting packet traffic at two playback rates, 1 frames/second (fps) and 24 fps, and comparing the results to determine playback delays and frame drops that occur at 24 fps to measure overall video quality [13].",
                "For example, 100% quality means that all video frames were played at real-time speed.",
                "On the other hand, 50% quality could mean that half the video data was dropped, or that the clip took twice as long to play even though all of the video data was displayed.",
                "To run the video benchmark, we used Windows Media Player 9 for Windows-based thin-client servers, MPlayer 1.0 pre 6 for X-based thin-client servers, and Windows Media Player 9 Mobile and 10 Mobile for the native video players running locally on the X5 and X51v PDAs, respectively.",
                "In all cases, the video player used was sized to fill the entire display region available. 4.3 Measurements Figures 3 and 4 show the results of running the web brows148 0 1 10 100 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL Latency(s) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 3: Browsing Benchmark: Average Page Latency ing benchmark.",
                "For each platform, we show results for up to four different configurations, two on the X5 and two on the X51v, depending on whether each configuration was supported.",
                "However, not all platforms could support all configurations.",
                "The local browser only runs at the display resolution of the PDA, 480×680 or less for the X51v and the X5.",
                "RDP only runs at 640×480.",
                "Neither platform could support 1024×768 display resolution.",
                "ICA only ran on the X5 and could not run on the X51v because it did not work on Windows Mobile 5.",
                "Figure 3 shows the average latency per web page for each platform. pTHINC provides the lowest average web browsing latency on both PDAs.",
                "On the X5, pTHINC performs up to 70 times better than other thin-client systems and 8 times better than the local browser.",
                "On the X51v, pTHINC performs up to 80 times better than other thin-client systems and 7 times better than the native browser.",
                "In fact, all of the thin clients except VNC outperform the local PDA browser, demonstrating the performance benefits of the thin-client approach.",
                "Usability studies have shown that web pages should take less than one second to download for the user to experience an uninterrupted web browsing experience [14].",
                "The measurements show that only the thin clients deliver subsecond web page latencies.",
                "In contrast, the local browser requires more than 3 seconds on average per web page.",
                "The local browser performs worse since it needs to run a more limited web browser to process the HTML, JavaScript, and do all the rendering using the limited capabilities of the PDA.",
                "The thin clients can take advantage of faster server hardware and a highly tuned web browser to process the web content much faster.",
                "Figure 3 shows that RDP is the next fastest platform after pTHINC.",
                "However, RDP is only able to run at a fixed resolution of 640×480 and 8-bit color depth.",
                "Furthermore, RDP also clips the display to the size of the PDA screen so that it does not need to send updates that are not visible on the PDA screen.",
                "This provides a performance benefit assuming the remaining web content is not viewed, but degrades performance when a user scrolls around the display to view other web content.",
                "RDP achieves its performance with significantly lower display quality compared to the other thin clients and with additional display clipping not used by other systems.",
                "As a result, RDP performance alone does not provide a complete comparison with the other platforms.",
                "In contrast, pTHINC provides the fastest performance while at the same time providing equal or better display quality than the other systems. 0 1 10 100 1000 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL DataSize(KB) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 4: Browsing Benchmark: Average Page Data Transferred Since VNC and ICA provide similar display quality to pTHINC, these systems provide a more fair comparison of different thin-client approaches.",
                "ICA performs worse in part because it uses higher-level display primitives that require additional client processing costs.",
                "VNC performs worse in part because it loses display data due to its client-pull delivery mechanism and because of the client processing costs in decompressing raw pixel primitives.",
                "In both cases, their performance was limited in part because their PDA clients were unable to keep up with the rate at which web pages were being displayed.",
                "Figure 3 also shows measurements for those thin clients that support resizing the display to fit the PDA screen, namely ICA and pTHINC.",
                "Resizing requires additional processing, which results in slower average web page latencies.",
                "The measurements show that the additional delay incurred by ICA when resizing versus not resizing is much more substantial than for pTHINC.",
                "ICA performs resizing on the slower PDA client.",
                "In contrast, pTHINC leverage the more powerful server to do resizing, reducing the performance difference between resizing and not resizing.",
                "Unlike ICA, pTHINC is able to provide subsecond web page download latencies in both cases.",
                "Figure 4 shows the data transferred in KB per page when running the slow-motion version of the tests.",
                "All of the platforms have modest data transfer requirements of roughly 100 KB per page or less.",
                "This is well within the bandwidth capacity of Wi-Fi networks.",
                "The measurements show that the local browser does not transfer the least amount of data.",
                "This is surprising as HTML is often considered to be a very compact representation of content.",
                "Instead, RDP is the most bandwidth efficient platform, largely as a result of using only 8-bit color depth and screen clipping so that it does not transfer the entire web page to the client. pTHINC overall has the largest data requirements, slightly more than VNC.",
                "This is largely a result of the current pTHINC prototypes lack of native support for 16-bit color data in the wire protocol.",
                "However, this result also highlights pTHINCs performance as it is faster than all other systems even while transferring more data.",
                "Furthermore, as newer PDA models support full 24-bit color, these results indicate that pTHINC will continue to provide good web browsing performance.",
                "Since display usability and quality are as important as performance, Figures 5 to 8 compare screenshots of the different thin clients when displaying a web page, in this case from the popular BBC news website.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode 149 Figure 5: Browser Screenshot: RDP 640x480 Figure 6: Browser Screenshot: VNC 1024x768 Figure 7: Browser Screenshot: ICA Resized 1024x768 Figure 8: Browser Screenshot: pTHINC Resized 1024x768 using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "While the screenshots lack the visual fidelity of the actual device display, several observations can be made.",
                "Figure 5 shows that RDP does not support fullscreen mode and wastes lots of screen space for controls and UI elements, requiring the user to scroll around in order to access the full contents of the web browsing session.",
                "Figure 6 shows that VNC makes better use of the screen space and provides better display quality, but still forces the user to scroll around to view the web page due to its lack of resizing support.",
                "Figure 7 shows ICAs ability to display the full web page given its resizing support, but that its lack of landscape capability and poorer resize algorithm significantly compromise display quality.",
                "In contrast, Figure 8 shows pTHINC using resizing to provide a high quality fullscreen display of the full width of the web page. pTHINC maximizes the entire viewing region by moving all controls to the PDA buttons.",
                "In addition, pTHINC leverages the server computational power to use a high quality resizing algorithm to resize the display to fit the PDA screen without significant overhead.",
                "Figures 9 and 10 show the results of running the video playback benchmark.",
                "For each platform except ICA, we show results for an X5 and X51v configuration.",
                "ICA could not run on the X51v as noted earlier.",
                "The measurements were done using settings that reflected the environment a user would have to access a web session from both a desktop computer and a PDA.",
                "As such, a 1024×768 server display resolution was used whenever possible and the video was shown at fullscreen.",
                "RDP was limited to 640×480 display resolution as noted earlier.",
                "Since viewing the entire video display is the only really usable option, we resized the display to fit the PDA screen for those platforms that supported this feature, namely ICA and pTHINC.",
                "Figure 9 shows the video quality for each platform. pTHINC is the only thin client able to provide perfect video playback quality, similar to the native PDA video player.",
                "All of the other thin clients deliver very poor video quality.",
                "With the exception of RDP on the X51v which provided unacceptable 35% video quality, none of the other systems were even able to achieve 10% video quality.",
                "VNC and ICA have the worst quality at 8% on the X5 device. pTHINCs native video support enables superior video performance, while other thin clients suffer from their inability to distinguish video from normal display updates.",
                "They attempt to apply ineffective and expensive compression algorithms on the video data and are unable to keep up with the stream of updates generated, resulting in dropped frames or long playback times.",
                "VNC suffers further from its client-pull update model because video frames are generated faster than the rate at which the client can process and send requests to the server to obtain the next display update.",
                "Figure 10 shows the total data transferred during 150 0% 20% 40% 60% 80% 100% pTHINCICAVNCRDPLOCAL VideoQuality Platform Axim X5 Axim X51v Figure 9: Video Benchmark: Fullscreen Video Quality 0 1 10 100 pTHINCICAVNCRDPLOCAL VideoDataSize(MB) Platform Axim X5 Axim X51v Figure 10: Video Benchmark: Fullscreen Video Data video playback for each system.",
                "The native player is the most bandwidth efficient platform, sending less than 6 MB of data, which corresponds to about 1.2 Mbps of bandwidth. pTHINCs 100% video quality requires about 25 MB of data which corresponds to a bandwidth usage of less than 6 Mbps.",
                "While the other thin clients send less data than THINC, they do so because they are dropping video data, resulting in degraded video quality.",
                "Figures 11 to 14 compare screenshots of the different thin clients when displaying the video clip.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "Figures 11 and 12 show that RDP and VNC are unable to display the entire video frame on the PDA screen.",
                "RDP wastes screen space for UI elements and VNC only shows the top corner of the video frame on the screen.",
                "Figure 13 shows that ICA provides resizing to display the entire video frame, but did not proportionally resize the video data, resulting in strange display artifacts.",
                "In contrast, Figure 14 shows pTHINC using resizing to provide a high quality fullscreen display of the entire video frame. pTHINC provides visually more appealing video display than RDP, VNC, or ICA. 5.",
                "RELATED WORK Several studies have examined the web browsing performance of thin-client computing [13, 19, 10].",
                "The ability for thin clients to improve web browsing performance on wireless PDAs was first quantitatively demonstrated in a previous study by one of the authors [10].",
                "This study demonstrated that thin clients can provide both faster web browsing performance and greater web browsing functionality.",
                "The study considered a wide range of web content including content from medical information systems.",
                "Our work builds on this previous study and consider important issues such as how usable existing thin clients are in PDA environments, the trade-offs between thin-client usability and performance, performance across different PDA devices, and the performance of thin clients on common web-related applications such as video.",
                "Many thin clients have been developed and some have PDA clients, including Microsofts Remote Desktop [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5], and Tarantella [18].",
                "These systems were first designed for desktop computing and retrofitted for PDAs.",
                "Unlike pTHINC, they do not address key system architecture and usability issues important for PDAs.",
                "This limits their display quality, system performance, available screen space, and overall usability on PDAs. pTHINC builds on previous work by two of the authors on THINC [1], extending the server architecture and introducing a client interface and usage model to efficiently support PDA devices for mobile web applications.",
                "Other approaches to improve the performance of mobile wireless web browsing have focused on using transcoding and caching proxies in conjunction with the fat client model [11, 9, 4, 8].",
                "They work by pushing functionality to external proxies, and using specialized browsing applications on the PDA device that communicate with the proxy.",
                "Our thinclient approach differs fundamentally from these fat-client approaches by pushing all web browser logic to the server, leveraging existing investments in desktop web browsers and helper applications to work seamlessly with production systems without any additional proxy configuration or web browser modifications.",
                "With the emergence of web browsing on small display devices, web sites have been redesigned using mechanisms like WAP and specialized native web browsers have been developed to tailor the needs of these devices.",
                "Recently, Opera has developed the Opera Mini [15] web browser, which uses an approach similar to the thin-client model to provide access across a number of mobile devices that would normally be incapable of running a web browser.",
                "Instead of requiring the device to process web pages, it uses a remote server to pre-process the page before sending it to the phone. 6.",
                "CONCLUSIONS We have introduced pTHINC, a thin-client architecture for wireless PDAs. pTHINC provides key architectural and usability mechanisms such as server-side screen resizing, clientside screen rotation using simple copy techniques, YUV video support, and maximizing screen space for display updates and leveraging existing PDA control buttons for UI elements. pTHINC transparently supports traditional desktop browsers and their helper applications on PDA devices and desktop machines, providing mobile users with ubiquitous access to a consistent, personalized, and full-featured web environment across heterogeneous devices.",
                "We have implemented pTHINC and measured its performance on web applications compared to existing thin-client systems and native web applications.",
                "Our results on multiple mobile wireless devices demonstrate that pTHINC delivers web browsing performance up to 80 times better than existing thin-client systems, and 8 times better than a native PDA browser.",
                "In addition, pTHINC is the only PDA thin client 151 Figure 11: Video Screenshot: RDP 640x480 Figure 12: Video Screenshot: VNC 1024x768 Figure 13: Video Screenshot: ICA Resized 1024x768 Figure 14: Video Screenshot: pTHINC Resized 1024x768 that transparently provides full-screen, full frame rate video playback, making web sites with multimedia content accessible to mobile web users. 7.",
                "ACKNOWLEDGEMENTS This work was supported in part by NSF ITR grants CCR0219943 and CNS-0426623, and an IBM SUR Award. 8.",
                "REFERENCES [1] R. Baratto, L. Kim, and J. Nieh.",
                "THINC: A Virtual Display Architecture for Thin-Client Computing.",
                "In Proceedings of the 20th ACM Symposium on Operating Systems Principles (SOSP), Oct. 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius, and A. Muir.",
                "Microsoft Windows NT Server 4.0, Terminal Server Edition: Technical Reference.",
                "Microsoft Press, Redmond, WA, 1999. [4] A.",
                "Fox, I. Goldberg, S. D. Gribble, and D. C. Lee.",
                "Experience With Top Gun Wingman: A Proxy-Based Graphical Web Browser for the 3Com PalmPilot.",
                "In Proceedings of Middleware 98, Lake District, England, September 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Health Insurance Portability and Accountability Act. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench version 1.5. http: //etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi.",
                "On proxy agents, mobility, and web access.",
                "Mobile Networks and Applications, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon, and A. Ortega.",
                "Design and Implementation of a Soft Caching Proxy.",
                "Computer Networks and ISDN Systems, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana, and S. Varshneya.",
                "Improving Web Browsing on Wireless PDAs Using Thin-Client Computing.",
                "In Proceedings of the 13th International World Wide Web Conference (WWW), May 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham, and P. Shenoy.",
                "TranSquid: Transcoding and caching proxy for heterogenous ecommerce environments.",
                "In Proceedings of the 12th IEEE Workshop on Research Issues in Data Engineering (RIDE 02), Feb. 2002. [12] .NET VNC Viewer for PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang, and N. Novik.",
                "Measuring Thin-Client Performance Using Slow-Motion Benchmarking.",
                "ACM Trans.",
                "Computer Systems, 21(1):87-115, Feb. 2003. [14] J. Nielsen.",
                "Designing Web Usability.",
                "New Riders Publishing, Indianapolis, IN, 2000. [15] Opera Mini Browser. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood, and A. Hopper.",
                "Virtual Network Computing.",
                "IEEE Internet Computing, 2(1), Jan./Feb. 1998. [17] R. W. Scheifler and J. Gettys.",
                "The X Window System.",
                "ACM Trans.",
                "Gr., 5(2):79-106, Apr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla, and M. Sajjadpour.",
                "Web Browsing Performance of Wireless Thin-Client Computing.",
                "In Proceedings of the 12th International World Wide Web Conference (WWW), May 2003. 152"
            ],
            "original_annotated_samples": [
                "We have developed pTHINC, a PDA thinclient solution that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide high-fidelity display and seamless mobility across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available <br>screen resolution</br> for application display.",
                "To measure video playback performance, we used a video benchmark that consisted of playing a 34.75s MPEG-1 video clip containing a mix of news and entertainment programming at full-<br>screen resolution</br>."
            ],
            "translated_annotated_samples": [
                "Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y movilidad fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la <br>resolución de pantalla</br> disponible para la visualización de aplicaciones.",
                "Para medir el rendimiento de reproducción de video, utilizamos un banco de pruebas de video que consistía en reproducir un clip de video MPEG-1 de 34.75 segundos que contenía una mezcla de noticias y programación de entretenimiento a <br>resolución de pantalla completa</br>."
            ],
            "translated_text": "pTHINC: Una arquitectura de cliente ligero para la web inalámbrica móvil Joeng Kim, Ricardo A. Baratto y Jason Nieh Departamento de Ciencias de la Computación Universidad de Columbia, Nueva York, NY, EE. UU. {jk2438, ricardo, nieh}@cs.columbia.edu RESUMEN Aunque las aplicaciones web están ganando popularidad en las PDAs inalámbricas móviles, los navegadores web en estos sistemas pueden ser bastante lentos y a menudo carecen de funcionalidad adecuada para acceder a muchos sitios web. Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y movilidad fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la <br>resolución de pantalla</br> disponible para la visualización de aplicaciones. Hemos implementado pTHINC en Windows Mobile y evaluado su rendimiento en dispositivos móviles inalámbricos. Nuestros resultados comparados con los navegadores web PDA locales y otros enfoques de cliente ligero demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero PDA que soporta de manera efectiva aplicaciones de ayuda del navegador cruciales como la reproducción de video. Categorías y Descriptores de Asunto: C.2.4 Comunicación de Computadoras-Redes: Sistemas Distribuidos - cliente/servidor Términos Generales: Diseño, Experimentación, Rendimiento 1. La creciente ubicuidad de las redes inalámbricas y la disminución del costo del hardware están impulsando una proliferación de dispositivos móviles inalámbricos portátiles, tanto como asistentes digitales personales (PDA) inalámbricos independientes y dispositivos populares integrados de PDA/teléfono celular. Estos dispositivos están permitiendo nuevas formas de computación y comunicación móvil. Los proveedores de servicios están aprovechando estos dispositivos para ofrecer acceso web omnipresente, y los usuarios de la web móvil a menudo ya utilizan estos dispositivos para acceder a información habilitada para la web, como noticias, correo electrónico, guías de viaje localizadas y mapas. Es probable que en unos pocos años, la mayoría de los dispositivos que accedan a la web sean móviles. Los usuarios suelen acceder al contenido web ejecutando un navegador web y aplicaciones auxiliares asociadas localmente en la PDA. Aunque existen navegadores web nativos para PDAs, ofrecen un rendimiento deficiente y tienen un conjunto de funciones mucho más pequeño y una funcionalidad más limitada que sus contrapartes de computadoras de escritorio [10]. Como resultado, los navegadores web de PDA a menudo no pueden mostrar el contenido web de sitios web que utilizan tecnologías web más avanzadas para ofrecer una experiencia web más rica. Este problema fundamental surge por dos razones. Primero, debido a que las PDAs tienen un entorno de hardware/software completamente diferente de las computadoras de escritorio tradicionales, las aplicaciones web necesitan ser reescritas y personalizadas para las PDAs si es posible, duplicando los costos de desarrollo. Debido a que el mercado de aplicaciones de escritorio es más grande y maduro, la mayoría del esfuerzo de desarrollo generalmente se destina a las aplicaciones de escritorio, lo que resulta en una mayor funcionalidad y rendimiento que sus contrapartes de PDA. En segundo lugar, las PDAs tienen un entorno con recursos más limitados que las computadoras de escritorio tradicionales para ofrecer un factor de forma más pequeño y una vida útil de la batería más larga. Los navegadores web de escritorio son aplicaciones grandes y complejas que no pueden ejecutarse en una PDA. En cambio, los desarrolladores se ven obligados a reducir significativamente estas navegadores web para ofrecer un navegador web PDA utilizable, lo que limita la funcionalidad del navegador PDA. La computación de cliente ligero proporciona un enfoque alternativo para habilitar el acceso web ubicuo desde dispositivos móviles. Un sistema informático de cliente ligero consiste en un servidor y un cliente que se comunican a través de una red utilizando un protocolo de visualización remota. El protocolo permite que las pantallas gráficas se virtualicen y se sirvan a través de una red a un dispositivo cliente, mientras que la lógica de la aplicación se ejecuta en el servidor. Usando el protocolo de visualización remota, el cliente transmite la entrada del usuario al servidor, y el servidor devuelve actualizaciones de pantalla de las aplicaciones del servidor al cliente. Utilizando un modelo de cliente ligero para dispositivos móviles de mano, las PDAs pueden convertirse en clientes simples sin estado que aprovechan las capacidades del servidor remoto para ejecutar navegadores web y otras aplicaciones auxiliares. El modelo de cliente ligero proporciona varios beneficios importantes para la web inalámbrica móvil. Primero, las aplicaciones web estándar de escritorio pueden utilizarse para entregar contenido web a PDAs sin necesidad de reescribir o adaptar las aplicaciones para ejecutarse en una PDA, lo que reduce los costos de desarrollo y aprovecha las inversiones existentes en software. Segundo, las aplicaciones web complejas pueden ejecutarse en servidores potentes en lugar de ejecutarse en versiones simplificadas en PDAs con recursos más limitados, lo que proporciona una mayor funcionalidad y un mejor rendimiento [10]. Tercero, las aplicaciones web pueden aprovechar servidores con redes más rápidas y mejor conectividad, lo que mejora aún más el rendimiento de la aplicación. En cuarto lugar, las PDAs pueden ser dispositivos aún más simples ya que no necesitan realizar una lógica de aplicación compleja, lo que potencialmente reduce el consumo de energía y extiende la vida útil de la batería. Finalmente, los clientes ligeros PDA pueden ser dispositivos prácticamente sin estado que no necesitan ser respaldados o restaurados, requieren casi ningún mantenimiento o actualizaciones, y no almacenan datos sensibles que puedan perderse o ser robados. Este modelo proporciona una vía viable para que las organizaciones médicas cumplan con las regulaciones de HIPAA mientras incorporan dispositivos móviles en sus operaciones diarias. A pesar de estas posibles ventajas, los clientes ligeros no han podido ofrecer la gama completa de estos beneficios al entregar aplicaciones web a dispositivos móviles portátiles. Los thin clients existentes no fueron diseñados para PDAs y no tienen en cuenta problemas importantes de usabilidad en el contexto de dispositivos de factor de forma pequeño, lo que resulta en dificultades para navegar por el contenido web mostrado. Además, los clientes ligeros existentes son ineficaces para proporcionar movilidad fluida en la mezcla heterogénea de tamaños de pantalla y resoluciones de dispositivos. Si bien los clientes ligeros existentes ya pueden ofrecer un rendimiento más rápido que los navegadores web nativos de PDA al entregar contenido web HTML, no admiten de manera efectiva aplicaciones web auxiliares más intensivas en visualización, como videos multimedia, que cada vez son una parte integral del contenido web disponible. Para aprovechar todo el potencial de la informática de cliente ligero en la provisión de la web inalámbrica móvil en PDAs, hemos desarrollado pTHINC (PDA THin-client InterNet Computing). pTHINC se basa en nuestro trabajo previo en THINC [1] para proporcionar una arquitectura de cliente ligero para dispositivos móviles de mano. pTHINC virtualiza y redimensiona la pantalla en el servidor para entregar de manera eficiente actualizaciones de pantalla de alta fidelidad a una amplia gama de clientes diferentes, tamaños de pantalla y orientaciones de pantalla, incluidos los modos de visualización en vertical y horizontal. Esto permite a pTHINC proporcionar la misma sesión web persistente en diferentes dispositivos de cliente. Por ejemplo, pTHINC puede proporcionar la misma sesión de navegación web adecuadamente escalada para su visualización en una computadora de escritorio y una PDA, de modo que las mismas cookies, marcadores y otros metadatos estén disponibles continuamente en ambas máquinas simultáneamente. El enfoque de visualización virtual de pTHINC aprovecha la información semántica disponible en los comandos de visualización y el hardware de video del cliente para proporcionar mecanismos de visualización remota más eficientes que son cruciales para admitir aplicaciones web más intensivas en visualización. Dada la limitada resolución de pantalla en las PDA, pTHINC maximiza el uso del espacio de pantalla para la visualización remota al trasladar la funcionalidad de control de la pantalla a los botones de control de PDA fácilmente disponibles, mejorando la usabilidad del sistema. Hemos implementado pTHINC en Windows Mobile y demostrado que funciona de manera transparente con las aplicaciones existentes, sistemas de ventanas y sistemas operativos, y no requiere modificar, recompilar o volver a enlazar el software existente. Hemos evaluado cuantitativamente pTHINC frente a navegadores web PDA locales y otros enfoques de cliente ligero en dispositivos Pocket PC. Nuestros resultados experimentales demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero de PDA que soporta de manera efectiva aplicaciones esenciales de ayuda para el navegador, como la reproducción de video. Este documento presenta el diseño e implementación de pTHINC. La sección 2 describe el modelo de uso general y las características de usabilidad de pTHINC. La sección 3 presenta el diseño y la arquitectura del sistema de pTHINC. La sección 4 presenta resultados experimentales que miden el rendimiento de pTHINC en aplicaciones web y lo comparan con navegadores nativos de PDA y otros sistemas de cliente ligero de PDA populares. La sección 5 discute el trabajo relacionado. Finalmente, presentamos algunas observaciones finales. El MODELO DE USO DE pTHINC pTHINC es un sistema de cliente ligero que consiste en una aplicación de visualización de cliente simple que se ejecuta en la PDA y un servidor que se ejecuta en una PC estándar. El servidor aprovecha PCs más potentes para ejecutar navegadores web y otra lógica de aplicaciones. El cliente recibe la entrada del usuario desde el lápiz óptico y el teclado virtual de la PDA y los envía al servidor para pasarlos a las aplicaciones. Las actualizaciones de la pantalla son luego enviadas desde el servidor al cliente para mostrar al usuario. Cuando se inicia el cliente PDA pTHINC, se presenta al usuario una interfaz gráfica simple donde se pueden proporcionar información como la dirección y el puerto del servidor, la información de autenticación del usuario y la configuración de la sesión. pTHINC primero intenta conectarse al servidor y realizar el saludo necesario. Una vez que este proceso haya sido completado, pTHINC presenta al usuario la visualización más reciente de su sesión. Si la sesión no existe, se crea una nueva sesión. Las sesiones existentes pueden continuar sin problemas sin cambios en la configuración de la sesión o del servidor. A diferencia de otros sistemas de cliente ligero, pTHINC proporciona a un usuario un modelo de sesión web persistente en el que un usuario puede iniciar una sesión ejecutando un navegador web y aplicaciones asociadas en el servidor, luego desconectarse de esa sesión y volver a conectarse en cualquier momento. Cuando un usuario se reconecta a la sesión, todas las aplicaciones siguen funcionando desde donde el usuario las dejó, de modo que el usuario puede seguir trabajando como si nunca se hubiera desconectado. La capacidad de desconectarse y reconectarse a una sesión en cualquier momento es un beneficio importante para los usuarios de PDA inalámbricas móviles que pueden tener conectividad de red intermitente. El modelo de sesión web persistente de pTHINCs permite a un usuario reconectarse a una sesión web desde dispositivos distintos al que se inició originalmente la sesión web. Esto proporciona a los usuarios una movilidad fluida entre diferentes dispositivos. Si un usuario pierde su PDA, puede fácilmente usar otra PDA para acceder a su sesión web. Además, pTHINC permite a los usuarios utilizar dispositivos que no son PDA para acceder a sesiones web también. Un usuario puede acceder a la misma sesión web persistente en una PC de escritorio como en una PDA, lo que le permite al usuario utilizar la misma sesión web desde cualquier computadora. El modelo de sesión web persistente de pTHINCs aborda un problema clave encontrado por los usuarios de la web móvil, la falta de un entorno web común en diferentes computadoras. Los navegadores web a menudo almacenan información importante como marcadores, cookies e historial, lo que les permite funcionar de una manera mucho más útil. El problema que ocurre cuando un usuario se mueve entre computadoras es que estos datos, específicos de una instalación de un navegador web, no pueden moverse con el usuario. Además, los navegadores web a menudo necesitan aplicaciones auxiliares para procesar diferentes contenidos multimedia, y esas aplicaciones pueden no estar disponibles de manera consistente en todas las computadoras. pTHINC aborda este problema al permitir que un usuario utilice de forma remota el mismo entorno de navegador web y aplicaciones auxiliares desde cualquier computadora. Como resultado, pTHINC puede proporcionar un entorno de navegación web común y consistente para usuarios móviles en diferentes dispositivos sin requerirles intentar sincronizar repetidamente diferentes entornos de navegación web en múltiples máquinas. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC debe proporcionar mecanismos para admitir diferentes tamaños de pantalla y resoluciones. Con este fin, pTHINC proporciona una función de zoom que permite a un usuario acercar y alejar una pantalla y permite que la pantalla de una sesión web 144 Figura 1: teclas de acceso rápido de pTHINC se redimensione para adaptarse a la pantalla del dispositivo que se está utilizando. Por ejemplo, si el servidor está ejecutando una sesión web a 1024×768 pero el cliente es una PDA con una resolución de pantalla de 640×480, pTHINC redimensionará la pantalla del escritorio para que se ajuste a la pantalla más pequeña de la PDA. pTHINC proporciona al usuario de la PDA la opción de aumentar el tamaño de la pantalla haciendo zoom en diferentes partes de la pantalla. Los usuarios suelen estar familiarizados con el diseño general de los sitios web que visitan con frecuencia, y pueden aprovechar esta función de redimensionamiento para navegar mejor por las páginas web. Por ejemplo, un usuario puede alejarse de la pantalla para ver todo el contenido de la página y navegar por los hipervínculos, luego acercarse a una región de interés para obtener una mejor vista. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC también debe proporcionar mecanismos para admitir diferentes orientaciones de pantalla. En un entorno de escritorio, los usuarios suelen estar acostumbrados a tener las pantallas presentadas en modo horizontal, donde el ancho de la pantalla es mayor que su altura. Sin embargo, en un entorno de PDA, la elección no siempre es obvia. Algunos usuarios pueden preferir tener la pantalla en modo retrato, ya que es más fácil sostener el dispositivo en sus manos, mientras que otros pueden preferir el modo paisaje para minimizar la cantidad de desplazamiento lateral necesario para ver una página web. Para adaptarse a las preferencias de los usuarios de PDA, pTHINC proporciona una función de orientación que le permite rotar la pantalla de forma fluida entre el modo horizontal y vertical. El modo de paisaje es particularmente útil para los usuarios de pTHINC que acceden con frecuencia a sus sesiones web tanto en dispositivos de escritorio como en PDA, proporcionando a esos usuarios el mismo ajuste de paisaje familiar en diferentes dispositivos. Dado que el espacio de pantalla es un recurso relativamente escaso en las PDAs, pTHINC se ejecuta en modo de pantalla completa para maximizar el área de pantalla disponible para mostrar la sesión web. Para poder utilizar toda la pantalla en la PDA y aún así permitir al usuario controlar e interactuar con ella, pTHINC reutiliza los botones de acceso directo típicos que se encuentran en las PDAs para realizar todas las funciones de control disponibles para el usuario. Los botones utilizados por pTHINC no requieren ningún cambio en el entorno del sistema operativo; simplemente son interceptados por la aplicación cliente de pTHINC cuando se presionan. La Figura 1 muestra cómo pTHINC utiliza los botones de acceso directo para proporcionar una navegación sencilla y mejorar la experiencia del usuario en general. Estos botones no son específicos del dispositivo, y el diseño mostrado es común en dispositivos PocketPC ampliamente utilizados. pTHINC proporciona seis accesos directos para apoyar su modelo de uso: • Rotar pantalla: El botón de grabación en el borde izquierdo se utiliza para rotar la pantalla entre modo retrato y modo paisaje cada vez que se presiona el botón. • Alejar: El botón más a la izquierda en la parte inferior delantera se utiliza para alejar la visualización de la sesión web proporcionando una vista general de la sesión web. • Acercar: El segundo botón más a la izquierda en la parte inferior delantera se utiliza para acercar la visualización de la sesión web para ver más claramente el contenido de interés. • Desplazamiento direccional: El botón central en la parte inferior delantera se utiliza para desplazarse alrededor de la visualización utilizando un solo botón de control de una manera que ya es familiar para los usuarios de PDA. Esta función es particularmente útil cuando el usuario ha ampliado una región de la pantalla de tal manera que solo una parte de la pantalla es visible en la pantalla. • Mostrar/Ocultar Teclado: El segundo botón más a la derecha en la parte inferior frontal se utiliza para mostrar un teclado virtual dibujado en la pantalla para dispositivos que no tienen teclado físico. El teclado virtual utiliza mecanismos estándar del sistema operativo de PDA, proporcionando portabilidad entre diferentes entornos de PDA. • Cerrar sesión: El botón más a la derecha en la parte inferior frontal se utiliza para desconectarse de la sesión de pTHINC. pTHINC utiliza la pantalla táctil de la PDA, el lápiz óptico y mecanismos estándar de interfaz de usuario para proporcionar una metáfora de punto y clic de la interfaz de usuario similar a la proporcionada por el ratón en un entorno de computación de escritorio tradicional. pTHINC no utiliza un cursor ya que los entornos de PDA no lo proporcionan. En cambio, un usuario puede usar el lápiz táctil para tocar diferentes secciones de la pantalla táctil y señalar el enfoque de entrada. Un toque único en la pantalla táctil genera un evento de clic de ratón correspondiente. Un doble toque en la pantalla táctil genera un evento de doble clic del ratón correspondiente. pTHINC proporciona emulación de ratón de dos botones al usar el lápiz óptico para presionar la pantalla durante un segundo y generar un clic derecho del ratón. Todas estas acciones son idénticas a la forma en que los usuarios ya interactúan con las aplicaciones de PDA en el entorno común de PocketPC. En la navegación web, los usuarios pueden hacer clic en hipervínculos y enfocarse en cuadros de entrada simplemente tocando el área de interés deseada en la pantalla. A diferencia de los navegadores web PDA locales y otras aplicaciones PDA, pTHINC aprovecha metáforas de interfaz de usuario de escritorio más potentes para permitir a los usuarios manipular múltiples ventanas de aplicación abiertas en lugar de estar limitados a una sola ventana de aplicación en un momento dado. Esto proporciona una mayor flexibilidad de navegación más allá de lo que está actualmente disponible en los dispositivos PDA. Similar a un entorno de escritorio, las ventanas del navegador y otras ventanas de aplicaciones pueden ser movidas al presionar y arrastrar el lápiz óptico de manera similar a un ratón. 3. La arquitectura del sistema pTHINC se basa en la arquitectura de visualización remota THINC para proporcionar un sistema de cliente ligero para PDAs. pTHINC virtualiza la visualización en el servidor aprovechando la capa de abstracción del dispositivo de video, que se encuentra por debajo del servidor de ventanas y por encima del framebuffer. Este es un nivel de dispositivo bien definido y de bajo nivel que depende del dispositivo y expone el hardware de video al sistema de visualización. pTHINC logra esto a través de un controlador de pantalla virtual simple que intercepta comandos de dibujo, los empaqueta y los envía a través de la red. Mientras que otros enfoques de cliente ligero interceptan comandos de visualización en otras capas del subsistema de visualización, el enfoque de virtualización de pantalla de pTHINC proporciona algunos beneficios clave para admitir eficientemente a los clientes de PDA. Por ejemplo, interceptar comandos de visualización en una capa superior entre aplicaciones y el sistema de ventanas, como se hace en X [17], requiere replicar y ejecutar una gran cantidad de funcionalidades en la PDA que tradicionalmente son proporcionadas por el sistema de ventanas de escritorio. Dada la magnitud y complejidad de los sistemas de ventanas tradicionales, intentar replicar esta funcionalidad en el entorno restringido de una PDA habría resultado ser una tarea desafiante, y quizás inviable. Además, las aplicaciones y el sistema de ventanas a menudo requieren una sincronización precisa en su funcionamiento, y imponer una red inalámbrica entre ellos al ejecutar las aplicaciones en el servidor y el sistema de ventanas en el cliente degradaría significativamente el rendimiento. Por otro lado, interceptar en una capa inferior extrayendo píxeles del framebuffer a medida que se renderizan proporciona una solución simple que requiere muy poca funcionalidad en el cliente de PDA, pero también puede resultar en un rendimiento degradado. La razón es que para cuando el servidor de visualización remota intenta enviar actualizaciones de pantalla, ha perdido toda la información semántica que podría haberle ayudado a codificar de manera eficiente, y debe recurrir a utilizar un mecanismo de codificación genérico y costoso en el servidor, así como un mecanismo de decodificación potencialmente costoso en el cliente de PDA limitado. A diferencia de los enfoques de intercepción de alto y bajo nivel, el enfoque de pTHINCs de interceptar en el controlador del dispositivo proporciona un equilibrio efectivo entre la simplicidad del cliente y del servidor, y la capacidad de codificar y decodificar de manera eficiente las actualizaciones de pantalla. Al utilizar un enfoque de visualización virtual de bajo nivel, pTHINC puede codificar de manera eficiente los comandos de visualización de la aplicación utilizando solo un pequeño conjunto de comandos de bajo nivel. En un entorno de PDA, este conjunto de comandos proporciona un componente crucial para mantener la simplicidad del cliente en el entorno de PDA con recursos limitados. Los comandos de visualización se muestran en la Tabla 1 y funcionan de la siguiente manera. COPY instruye al cliente a copiar una región de la pantalla desde su framebuffer local a otra ubicación. Este comando mejora la experiencia del usuario al acelerar el desplazamiento y el movimiento de ventanas opacas sin necesidad de reenviar datos de pantalla desde el servidor. SFILL, PFILL y BITMAP son comandos que pintan una región de tamaño fijo en la pantalla. Son útiles para acelerar la visualización de fondos de ventanas sólidas, patrones de escritorio, fondos de páginas web, dibujo de texto y ciertas operaciones en programas de manipulación de gráficos. SFILL llena una región considerable en la pantalla con un solo color. PFILL replica una baldosa sobre una región de la pantalla. BITMAP realiza un relleno utilizando un mapa de bits de unos y ceros como un estipulado para aplicar un color de primer plano y de fondo. Finalmente, RAW se utiliza para transmitir datos de píxeles no codificados que se mostrarán textualmente en una región de la pantalla. Este comando se invoca como último recurso si el servidor no puede emplear ningún otro comando, y es el único comando que puede ser comprimido para mitigar su impacto en el ancho de banda de la red. pTHINC entrega sus comandos utilizando un mecanismo de actualización de servidor-push no bloqueante, donde tan pronto como se generan actualizaciones de pantalla en el servidor, se envían al cliente. Los clientes no están obligados a solicitar explícitamente actualizaciones de pantalla, minimizando así el impacto que la típica variabilidad de la latencia de la red inalámbrica puede tener en la capacidad de respuesta del sistema. Teniendo en cuenta que los recursos Descripción de Comando COPY Copiar un área de búfer de fotogramas en coordenadas especificadas SFILL Rellenar un área con un valor de color de píxel dado PFILL Azulejar un área con un patrón de píxeles dado BITMAP Rellenar una región usando un patrón de bits RAW Mostrar datos de píxeles en bruto en una ubicación dada Tabla 1: Comandos de visualización del protocolo pTHINC. Las PDAs y las redes inalámbricas limitadas pueden no ser capaces de mantenerse al día con un servidor rápido que genera una gran cantidad de actualizaciones, pTHINC es capaz de fusionar, recortar y descartar actualizaciones automáticamente si se produce pérdida o congestión de red, o si el cliente no puede mantenerse al día con la velocidad de las actualizaciones. Este tipo de comportamiento resulta crucial en un entorno de navegación web, donde por ejemplo, una página puede ser redibujada varias veces mientras se renderiza al vuelo por el navegador. En este caso, la PDA solo recibirá y mostrará el resultado final, que claramente es todo lo que al usuario le interesa ver. pTHINC prioriza la entrega de actualizaciones a la PDA utilizando un programador de actualizaciones preemptivo de Tamaño Restante Más Corto Primero (SRSF). SRSF es análogo a la programación de Tiempo de Procesamiento Restante más Corto, la cual se sabe que es óptima para minimizar el tiempo medio de respuesta en un sistema interactivo. En un entorno de navegación web, los trabajos cortos están asociados con el texto y los componentes básicos de diseño de página, como el fondo de las páginas, que son contenido web crítico para el usuario. Por otro lado, los trabajos grandes suelen ser elementos de embellecimiento de menor prioridad, o, incluso peor, banners y anuncios de página web, los cuales tienen un valor cuestionable para el usuario mientras navega por la página. Usando SRSF, pTHINC puede maximizar la utilización del ancho de banda relativamente escaso disponible en la conexión inalámbrica entre la PDA y el servidor. 3.1 Gestión de la Pantalla Para permitir a los usuarios acceder con la misma facilidad a su navegador web y aplicaciones auxiliares desde una computadora de escritorio en casa como desde una PDA mientras están en movimiento, pTHINC proporciona un mecanismo de redimensionamiento para hacer zoom dentro y fuera de la pantalla de una sesión web. El redimensionamiento de pTHINC es completamente compatible con el servidor, no con el cliente. El servidor vuelve a muestrear las actualizaciones para que se ajusten al área de visualización de las PDAs antes de ser transmitidas por la red. pTHINC utiliza el algoritmo de remuestreo de Fants para redimensionar las actualizaciones de píxeles. Esto proporciona actualizaciones suaves y visualmente agradables con un antialiasing adecuado y solo requiere modestos recursos computacionales. El enfoque de redimensionamiento de pTHINCs tiene varias ventajas. Primero, permite al PDA aprovechar la vastamente superior potencia computacional del servidor para utilizar algoritmos de re-muestreo de alta calidad y producir actualizaciones de mayor calidad para que el PDA las muestre. Segundo, cambiar el tamaño de la pantalla no se traduce en requisitos adicionales de recursos para la PDA, ya que no necesita realizar ningún trabajo adicional. Finalmente, se logra una mejor utilización de la red inalámbrica ya que al reescalar las actualizaciones se reducen sus requisitos de ancho de banda. Para permitir a los usuarios orientar sus pantallas en una PDA y así proporcionar una experiencia visual que se ajuste mejor a las preferencias del usuario y al diseño de páginas web o aplicaciones, pTHINC proporciona un mecanismo de rotación de pantalla para alternar entre los modos de visualización horizontal y vertical. La rotación de pantalla de pTHINC es completamente compatible con el cliente, no con el servidor. pTHINC no recalcula explícitamente la geometría de las actualizaciones de pantalla para realizar la rotación, lo cual sería computacionalmente costoso. En cambio, pTHINC simplemente cambia la forma en que los datos se copian en el framebuffer para cambiar entre los modos de visualización. Cuando está en modo retrato, los datos se copian a lo largo de las filas del framebuffer de izquierda a derecha. Cuando se encuentra en modo horizontal, los datos se copian a lo largo de las columnas del framebuffer de arriba hacia abajo. Estas técnicas muy rápidas y simples reemplazan un conjunto de operaciones de copia por otro y no imponen ningún sobrecosto de rendimiento. pTHINC proporciona su propio mecanismo de rotación para soportar una amplia gama de dispositivos sin imponer requisitos adicionales de funciones en la PDA. Aunque algunos dispositivos PDA más nuevos ofrecen soporte nativo para diferentes orientaciones, este mecanismo no es dinámico y requiere que el usuario rote toda la interfaz de usuario de la PDA antes de iniciar el cliente pTHINC. Windows Mobile proporciona mecanismos de API nativos para que las aplicaciones de PDA puedan rotar su interfaz de usuario sobre la marcha, pero estos mecanismos ofrecen un rendimiento deficiente y una calidad de visualización baja, ya que la rotación se realiza de manera ingenua y no es completamente precisa. 3.2 Reproducción de video El video se ha convertido gradualmente en una parte integral de la World Wide Web, y su presencia solo seguirá aumentando. Los sitios web de hoy en día no solo utilizan gráficos animados y flash para presentar el contenido web de manera atractiva, sino que también utilizan video en streaming para enriquecer la interfaz web. Los usuarios pueden ver noticias pregrabadas y en vivo en CNN, ver los momentos más destacados deportivos en ESPN e incluso buscar a través de una gran colección de videos en Google Video. Para permitir que las aplicaciones proporcionen una reproducción de video eficiente, se han creado interfaces en los sistemas de visualización que permiten a los controladores de dispositivos de video exponer sus capacidades de hardware a las aplicaciones. pTHINC aprovecha estas interfaces y su enfoque de controlador de dispositivo virtual para proporcionar un puente virtual entre el cliente remoto y su hardware y las aplicaciones, y admitir de manera transparente la reproducción de video. Sobre esta arquitectura, pTHINC utiliza el espacio de color YUV para codificar el contenido de video, lo cual proporciona una serie de beneficios. Primero, se ha vuelto cada vez más común que el hardware de video de las PDA admita nativamente YUV y pueda realizar la conversión del espacio de color y el escalado automáticamente. Como resultado, pTHINC puede proporcionar reproducción de video a pantalla completa sin afectar el rendimiento. Segundo, el uso de YUV permite una representación más eficiente de los datos RGB sin pérdida de calidad, aprovechando la capacidad de los ojos humanos para distinguir mejor las diferencias en brillo que en color. En particular, pTHINC utiliza el formato YV12, que permite codificar datos de color RGB completo utilizando solo 12 bits por píxel. Tercero, los datos YUV se producen como uno de los últimos pasos del proceso de decodificación de la mayoría de los códecs de video, lo que permite a pTHINC proporcionar la reproducción de video de una manera independiente del formato. Finalmente, aunque el hardware de video de las PDAs no pueda acelerar la reproducción, el proceso de conversión de espacio de color es lo suficientemente simple como para no imponer requisitos poco razonables en la PDA. Un ejemplo más concreto de cómo pTHINC aprovecha el hardware de video PDA para admitir la reproducción de video se puede ver en nuestra implementación de prototipo en la popular PDA Dell Axim X51v, que está equipada con el acelerador multimedia Intel 2700G. En este caso, pTHINC crea un búfer fuera de pantalla en la memoria de video y escribe y lee desde esta región de memoria datos en formato YV12. Cuando llega un nuevo fotograma de video, los datos de video se copian desde el búfer a una superficie superpuesta en la memoria de video, que es independiente de la superficie normal utilizada para el dibujo tradicional. A medida que los datos YV12 se colocan en la superposición, el acelerador de Intel realiza automáticamente la conversión de espacio de color y el escalado. Al utilizar la superficie de superposición, pTHINC no necesita volver a dibujar la pantalla una vez que la reproducción de video ha terminado, ya que la superficie superpuesta no se ve afectada. Además, las regiones de superposición específicas pueden ser manipuladas aprovechando el hardware de video, por ejemplo, para realizar interpolación lineal de hardware y suavizar el fotograma para mostrarlo a pantalla completa, y para realizar rotación automática cuando el cliente se ejecuta en modo horizontal. 4. RESULTADOS EXPERIMENTALES Hemos implementado un prototipo de pTHINC que ejecuta el cliente en dispositivos Pocket PC basados en Windows Mobile ampliamente utilizados y el servidor en sistemas operativos tanto Windows como Linux. Para demostrar su eficacia en el soporte de aplicaciones web inalámbricas móviles, hemos medido su rendimiento en aplicaciones web. Presentamos resultados experimentales sobre diferentes dispositivos PDA para dos aplicaciones web populares, navegar por páginas web y reproducir contenido de video desde la web. Comparamos pTHINC con aplicaciones web nativas que se ejecutan localmente en la PDA para demostrar la mejora que pTHINC puede proporcionar sobre el enfoque tradicional de cliente pesado. También comparamos pTHINC con tres de los clientes ligeros más utilizados que pueden ejecutarse en PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] y VNC (Virtual Network Computing) [16]. Seguimos la práctica común y nos referimos a Citrix MetaFrameXP y Microsoft Remote Desktop por sus respectivos protocolos de visualización remota, ICA (Independent Computing Architecture) y RDP (Remote Desktop Protocol). 4.1 Plataforma de Pruebas Experimental Realizamos nuestros experimentos web utilizando dos PDA Pocket PC inalámbricas diferentes en un entorno de prueba de red Wi-Fi aislado, como se muestra en la Figura 2. El banco de pruebas consistía en dos dispositivos cliente PDA, un monitor de paquetes, un servidor de cliente ligero y un servidor web. Excepto por las PDAs, todas las demás máquinas eran servidores IBM Netfinity 4500R con procesadores duales Intel PIII de 933 MHz y 512 MB de RAM, y estaban conectadas en una red FastEthernet de 100 Mbps conmutada. El servidor web utilizado fue Apache 1.3.27, el emulador de red fue NISTNet 2.0.12 y el monitor de paquetes fue Ethereal 0.10.9. Los clientes de PDA se conectaron al banco de pruebas a través de un punto de acceso inalámbrico Lucent Orinoco AP-2000 802.11b. Todos los experimentos utilizando la red inalámbrica se llevaron a cabo a una distancia de diez pies del punto de acceso, por lo que consideramos que la cantidad de pérdida de paquetes era insignificante en nuestros experimentos. Se utilizaron dos PDA Pocket PC para proporcionar resultados en modelos antiguos y menos potentes, así como en modelos más nuevos de mayor rendimiento. El modelo anterior era un Dell Axim X5 con 147 Cliente 1024×768 640×480 Profundidad Cambio de tamaño Clip RDP no sí 8 bits no sí VNC sí sí 16 bits no no ICA sí sí 16 bits sí no pTHINC sí sí 24 bits sí no Tabla 2: Configuración del banco de pruebas de cliente ligero con un CPU Intel XScale PXA255 de 400 MHz y 64 MB de RAM ejecutando Windows Mobile 2003 y una tarjeta Dell TrueMobile 1180 de 2.4 GHz CompactFlash para redes inalámbricas. El modelo más nuevo era un Dell Axim X51v con un procesador Intel XScale XPA270 de 624 MHz y 64 MB de RAM ejecutando Windows Mobile 5.0 y con red inalámbrica 802.11b integrada. El X51v tiene un acelerador multimedia Intel 2700G con 16MB de memoria de video. Ambas PDAs son capaces de mostrar colores de 16 bits pero tienen diferentes tamaños de pantalla y resoluciones de visualización. El X5 tiene una pantalla diagonal de 3.5 pulgadas con una resolución de 240×320. El X51v tiene una pantalla diagonal de 3.7 pulgadas con una resolución de 480×640. Los cuatro clientes ligeros que utilizamos admiten diferentes niveles de calidad de visualización, como se resume en la Tabla 2. El cliente de RDP solo admite una resolución de pantalla fija de 640×480 en el servidor con una profundidad de color de 8 bits, mientras que otras plataformas ofrecen niveles más altos de calidad de visualización. Para proporcionar una comparación justa en todas las plataformas, realizamos nuestros experimentos con sesiones de cliente ligero configuradas para dos posibles resoluciones, 1024×768 y 640×480. Tanto ICA como VNC se configuraron para usar la resolución nativa de PDA con una profundidad de color de 16 bits. El prototipo actual de pTHINC utiliza color de 24 bits directamente y el cliente reduce la resolución de las actualizaciones al nivel de color de 16 bits disponible en la PDA. RDP se configuró utilizando solo una profundidad de color de 8 bits ya que no admite ninguna profundidad de color mejor. Dado que tanto pTHINC como ICA ofrecen la capacidad de ver la pantalla redimensionada para ajustarse a la pantalla, medimos ambos clientes con y sin la pantalla redimensionada para ajustarse a la pantalla del PDA. Cada cliente ligero fue probado utilizando el modo de paisaje en lugar del modo retrato cuando estaba disponible. Todos los sistemas que se ejecutan en el X51v podrían funcionar en modo horizontal porque el hardware proporciona una función de modo horizontal. Sin embargo, el X5 no proporciona esta funcionalidad. Solo pTHINC admite directamente el modo paisaje, por lo que era el único sistema que podía ejecutarse en modo paisaje tanto en el X5 como en el X51v. Para proporcionar una comparación justa, también estandarizamos en hardware y sistemas operativos comunes siempre que sea posible. Todos los sistemas utilizaron el servidor Netfinity como servidor de cliente ligero. Para los dos sistemas diseñados para servidores Windows, ICA y RDP, ejecutamos Windows Server 2003 en el servidor. Para los otros sistemas que admiten servidores basados en X, ejecutamos la distribución Debian Linux Inestable con el kernel Linux 2.6.10 en el servidor. Utilizamos las últimas versiones de servidores de cliente ligero disponibles en cada plataforma en el momento de nuestros experimentos, a saber, Citrix MetaFrame XP Server para Windows Feature Release 3, Microsoft Remote Desktop integrado en Windows XP y Windows 2003 utilizando RDP 5.2, y VNC 4.0.4.2. Para los benchmarks de aplicaciones, utilizamos dos benchmarks de aplicaciones web para nuestros experimentos basados en dos escenarios de aplicación comunes, navegación por páginas web y reproducción de contenido de video desde la web. Dado que muchos sistemas de cliente ligero, incluidos dos de los probados, son cerrados y propietarios, medimos su rendimiento de manera no invasiva capturando el tráfico de red con un monitor de paquetes y utilizando una variante de benchmarking en cámara lenta [13] previamente desarrollada para medir el rendimiento de clientes ligeros en entornos de PDA [10]. Esta metodología de medición tiene en cuenta tanto el desacoplamiento de la visualización que puede ocurrir entre el cliente y el servidor en sistemas de cliente ligero, como el tiempo de procesamiento del cliente, que puede ser significativo en el caso de las PDAs. Para medir el rendimiento de la navegación web, utilizamos un benchmark de navegación web basado en la Prueba de Carga de Páginas de Texto Web del conjunto de benchmarks Ziff-Davis i-Bench [7]. El punto de referencia consiste en la carga controlada de 55 páginas desde el servidor web mediante JavaScript. Las páginas contienen tanto texto como gráficos, con páginas de diferentes tamaños. Los gráficos son imágenes incrustadas en formatos GIF y JPEG. El benchmark original i-Bench fue modificado para pruebas de rendimiento en cámara lenta al introducir retrasos de varios segundos entre las páginas utilizando JavaScript. Luego se realizaron dos pruebas, una en la que se agregaron retrasos entre cada página, y otra en la que las páginas se cargaron continuamente sin esperar a que se mostraran en el cliente. En la primera prueba, los retrasos se ajustaron lo suficiente en cada caso para garantizar que cada página pudiera ser recibida y mostrada en el cliente por completo sin solapamiento temporal en la transferencia de los datos pertenecientes a dos páginas consecutivas. Utilizamos el monitor de paquetes para registrar el tráfico de paquetes para cada ejecución de la prueba de referencia, luego utilizamos las marcas de tiempo del primer y último paquete en la traza para obtener nuestras medidas de latencia [10]. El monitor de paquetes también registró la cantidad de datos transmitidos entre el cliente y el servidor. La proporción entre el tráfico de datos en las dos pruebas produce un factor de escala. Este factor de escala muestra la pérdida de datos entre el servidor y el cliente debido a la incapacidad del cliente para procesar los datos lo suficientemente rápido. El producto del factor de escala con la medición de latencia produce la verdadera latencia teniendo en cuenta el tiempo de procesamiento del cliente. Para ejecutar la prueba de navegación web, utilizamos Mozilla Firefox 1.0.4 en el servidor de cliente ligero para los clientes ligeros, y Windows Internet Explorer (IE) Mobile para 2003 y Mobile para 5.0 para los navegadores nativos en las PDAs X5 y X51v, respectivamente. En todos los casos, el navegador web utilizado se ajustó para ocupar toda la región de visualización disponible. Para medir el rendimiento de reproducción de video, utilizamos un banco de pruebas de video que consistía en reproducir un clip de video MPEG-1 de 34.75 segundos que contenía una mezcla de noticias y programación de entretenimiento a <br>resolución de pantalla completa</br>. El videoclip tiene un tamaño de 5.11 MB y consta de 834 cuadros de píxeles de 352x240 con una velocidad de cuadro ideal de 24 cuadros por segundo. Medimos el rendimiento del video utilizando pruebas de referencia en cámara lenta al monitorear el tráfico de paquetes resultante a dos velocidades de reproducción, 1 cuadro por segundo (fps) y 24 fps, y comparando los resultados para determinar los retrasos en la reproducción y las caídas de cuadros que ocurren a 24 fps para medir la calidad general del video [13]. Por ejemplo, el 100% de calidad significa que todos los fotogramas del video se reprodujeron a velocidad en tiempo real. Por otro lado, una calidad del 50% podría significar que se eliminó la mitad de los datos del video, o que el clip tardó el doble en reproducirse a pesar de que se mostró toda la información del video. Para ejecutar la prueba de rendimiento de video, utilizamos Windows Media Player 9 para servidores de clientes ligeros basados en Windows, MPlayer 1.0 pre 6 para servidores de clientes ligeros basados en X, y Windows Media Player 9 Mobile y 10 Mobile para los reproductores de video nativos que se ejecutan localmente en las PDAs X5 y X51v, respectivamente. En todos los casos, el reproductor de video utilizado se dimensionó para llenar toda la región de visualización disponible. Las Figuras 3 y 4 muestran los resultados de ejecutar la prueba de navegación por la web. Para cada plataforma, mostramos resultados de hasta cuatro configuraciones diferentes, dos en el X5 y dos en el X51v, dependiendo de si cada configuración era compatible. Sin embargo, no todas las plataformas podrían admitir todas las configuraciones. El navegador local solo se ejecuta a la resolución de pantalla de la PDA, 480×680 o menos para el X51v y el X5. RDP solo funciona a 640×480. Ninguna plataforma podía soportar una resolución de pantalla de 1024×768. ICA solo funcionaba en el X5 y no podía ejecutarse en el X51v porque no era compatible con Windows Mobile 5. La Figura 3 muestra la latencia promedio por página web para cada plataforma. pTHINC proporciona la latencia promedio más baja en la navegación web en ambas PDAs. En el X5, pTHINC funciona hasta 70 veces mejor que otros sistemas de cliente ligero y 8 veces mejor que el navegador local. En el X51v, pTHINC funciona hasta 80 veces mejor que otros sistemas de cliente ligero y 7 veces mejor que el navegador nativo. De hecho, todos los clientes ligeros excepto VNC superan al navegador local de PDA, demostrando los beneficios de rendimiento del enfoque de cliente ligero. Los estudios de usabilidad han demostrado que las páginas web deben tardar menos de un segundo en descargarse para que el usuario experimente una navegación web ininterrumpida [14]. Las mediciones muestran que solo los clientes delgados ofrecen latencias de página web de menos de un segundo. Por el contrario, el navegador local requiere más de 3 segundos en promedio por página web. El navegador local funciona peor ya que necesita ejecutar un navegador web más limitado para procesar el HTML, JavaScript y realizar todo el renderizado utilizando las capacidades limitadas de la PDA. Los clientes ligeros pueden aprovecharse de hardware de servidor más rápido y un navegador web altamente optimizado para procesar el contenido web mucho más rápido. La Figura 3 muestra que RDP es la plataforma más rápida después de pTHINC. Sin embargo, RDP solo puede ejecutarse a una resolución fija de 640×480 y una profundidad de color de 8 bits. Además, RDP también recorta la pantalla al tamaño de la pantalla de la PDA para no tener que enviar actualizaciones que no son visibles en la pantalla de la PDA. Esto proporciona un beneficio de rendimiento siempre y cuando el resto del contenido web no se visualice, pero degrada el rendimiento cuando un usuario desplaza la pantalla para ver otro contenido web. RDP logra su rendimiento con una calidad de visualización significativamente inferior en comparación con otros clientes ligeros y con recortes adicionales en la visualización que no son utilizados por otros sistemas. Como resultado, el rendimiento de RDP por sí solo no proporciona una comparación completa con las otras plataformas. Por el contrario, pTHINC ofrece el mejor rendimiento al mismo tiempo que proporciona una calidad de visualización igual o mejor que los otros sistemas. Dado que VNC e ICA ofrecen una calidad de visualización similar a pTHINC, estos sistemas proporcionan una comparación más justa de diferentes enfoques de cliente ligero. ICA funciona peor en parte porque utiliza primitivas de visualización de nivel superior que requieren costos adicionales de procesamiento por parte del cliente. VNC funciona peor en parte porque pierde datos de visualización debido a su mecanismo de entrega de cliente-pull y debido a los costos de procesamiento del cliente en descomprimir primitivas de píxeles crudos. En ambos casos, su rendimiento se vio limitado en parte porque sus clientes de PDA no podían mantenerse al ritmo al que se mostraban las páginas web. La Figura 3 también muestra las medidas para aquellos clientes ligeros que admiten redimensionar la pantalla para ajustarse a la pantalla de la PDA, a saber, ICA y pTHINC. El redimensionamiento requiere un procesamiento adicional, lo que resulta en latencias promedio más lentas de las páginas web. Las mediciones muestran que el retraso adicional incurrido por ICA al cambiar el tamaño es mucho más sustancial que para pTHINC. ICA realiza redimensionamiento en el cliente PDA más lento. Por el contrario, pTHINC aprovecha el servidor más potente para redimensionar, reduciendo la diferencia de rendimiento entre redimensionar y no redimensionar. A diferencia de ICA, pTHINC es capaz de proporcionar latencias de descarga de páginas web en menos de un segundo en ambos casos. La Figura 4 muestra los datos transferidos en KB por página al ejecutar la versión de cámara lenta de las pruebas. Todas las plataformas tienen requisitos modestos de transferencia de datos de aproximadamente 100 KB por página o menos. Esto está bien dentro de la capacidad de ancho de banda de las redes Wi-Fi. Las mediciones muestran que el navegador local no transfiere la menor cantidad de datos. Esto es sorprendente ya que HTML suele considerarse una representación muy compacta del contenido. En cambio, RDP es la plataforma más eficiente en ancho de banda, en gran parte debido a que utiliza solo una profundidad de color de 8 bits y recorte de pantalla para no transferir la página web completa al cliente. En general, pTHINC tiene los mayores requisitos de datos, ligeramente más que VNC. Esto se debe en gran medida a la falta de soporte nativo de los prototipos actuales de pTHINC para datos de color de 16 bits en el protocolo de comunicación. Sin embargo, este resultado también destaca el rendimiento de pTHINCs, ya que es más rápido que todos los demás sistemas incluso al transferir más datos. Además, dado que los modelos más recientes de PDA admiten colores completos de 24 bits, estos resultados indican que pTHINC seguirá proporcionando un buen rendimiento en la navegación web. Dado que la usabilidad y la calidad de la pantalla son tan importantes como el rendimiento, las Figuras 5 a 8 comparan capturas de pantalla de los diferentes clientes ligeros al mostrar una página web, en este caso del popular sitio de noticias de la BBC. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo paisaje. Figura 5: Captura de pantalla del navegador: RDP 640x480. Figura 6: Captura de pantalla del navegador: VNC 1024x768. Figura 7: Captura de pantalla del navegador: ICA redimensionado 1024x768. Figura 8: Captura de pantalla del navegador: pTHINC redimensionado 1024x768 utilizando la configuración de resolución de pantalla máxima para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Si bien las capturas de pantalla carecen de la fidelidad visual de la pantalla real del dispositivo, se pueden hacer varias observaciones. La Figura 5 muestra que RDP no admite el modo de pantalla completa y desperdicia mucho espacio en pantalla para controles y elementos de la interfaz de usuario, lo que obliga al usuario a desplazarse para acceder a todo el contenido de la sesión de navegación web. La Figura 6 muestra que VNC aprovecha mejor el espacio de la pantalla y ofrece una mejor calidad de visualización, pero aún obliga al usuario a desplazarse para ver la página web debido a la falta de soporte para redimensionar. La Figura 7 muestra la capacidad de ICA para mostrar la página web completa dada su soporte de redimensionamiento, pero su falta de capacidad en modo paisaje y su algoritmo de redimensionamiento deficiente comprometen significativamente la calidad de visualización. Por el contrario, la Figura 8 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de pantalla completa de alta calidad del ancho completo de la página web. pTHINC maximiza toda la región de visualización moviendo todos los controles a los botones de la PDA. Además, pTHINC aprovecha la potencia computacional del servidor para utilizar un algoritmo de redimensionamiento de alta calidad y ajustar la pantalla al tamaño de la PDA sin un sobrecoste significativo. Las figuras 9 y 10 muestran los resultados de ejecutar la prueba de reproducción de video. Para cada plataforma excepto ICA, mostramos resultados para una configuración X5 y X51v. ICA no pudo ejecutarse en el X51v como se mencionó anteriormente. Las mediciones se realizaron utilizando configuraciones que reflejaban el entorno desde el cual un usuario tendría que acceder a una sesión web tanto desde una computadora de escritorio como desde una PDA. Por lo tanto, se utilizó una resolución de pantalla del servidor de 1024×768 siempre que fuera posible y el video se mostró a pantalla completa. La resolución de pantalla de RDP se limitaba a 640×480, como se mencionó anteriormente. Dado que ver toda la pantalla del video es la única opción realmente utilizable, redimensionamos la pantalla para que se ajustara a la pantalla de la PDA en aquellas plataformas que admitían esta función, a saber, ICA y pTHINC. La Figura 9 muestra la calidad de video para cada plataforma. pTHINC es el único cliente ligero capaz de proporcionar una calidad de reproducción de video perfecta, similar al reproductor de video nativo de PDA. Todos los demás clientes ligeros ofrecen una calidad de video muy pobre. Con la excepción de RDP en el X51v que proporcionó una calidad de video inaceptable del 35%, ninguno de los otros sistemas pudo siquiera alcanzar el 10% de calidad de video. VNC e ICA tienen la peor calidad al 8% en el dispositivo X5. El soporte de video nativo de pTHINCs permite un rendimiento de video superior, mientras que otros clientes ligeros sufren de su incapacidad para distinguir el video de las actualizaciones normales de la pantalla. Intentan aplicar algoritmos de compresión ineficaces y costosos en los datos de video y no pueden mantenerse al día con la corriente de actualizaciones generadas, lo que resulta en cuadros omitidos o largos tiempos de reproducción. VNC se ve aún más afectado por su modelo de actualización de cliente-pull porque los fotogramas de video se generan más rápido que la velocidad a la que el cliente puede procesar y enviar solicitudes al servidor para obtener la siguiente actualización de pantalla. La Figura 10 muestra los datos totales transferidos durante la reproducción de video a pantalla completa para cada sistema. El reproductor nativo es la plataforma más eficiente en ancho de banda, enviando menos de 6 MB de datos, lo que corresponde a aproximadamente 1.2 Mbps de ancho de banda. La calidad de video al 100% de pTHINCs requiere alrededor de 25 MB de datos, lo que corresponde a un uso de ancho de banda de menos de 6 Mbps. Mientras que los otros clientes ligeros envían menos datos que THINC, lo hacen porque están eliminando datos de video, lo que resulta en una calidad de video degradada. Las figuras 11 a 14 comparan capturas de pantalla de los distintos clientes ligeros al mostrar el videoclip. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo horizontal utilizando la configuración de resolución máxima de pantalla para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Las figuras 11 y 12 muestran que RDP y VNC no pueden mostrar el cuadro completo del video en la pantalla de la PDA. RDP desperdicia espacio en pantalla para los elementos de la interfaz de usuario y VNC solo muestra la esquina superior del marco de video en la pantalla. La Figura 13 muestra que el ICA proporciona redimensionamiento para mostrar todo el fotograma del video, pero no redimensiona proporcionalmente los datos del video, lo que resulta en artefactos de visualización extraños. Por el contrario, la Figura 14 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de alta calidad a pantalla completa de todo el fotograma del video. pTHINC ofrece una visualización de video visualmente más atractiva que RDP, VNC o ICA. 5. TRABAJOS RELACIONADOS Varios estudios han examinado el rendimiento de la navegación web en la computación de cliente ligero [13, 19, 10]. La capacidad de los clientes ligeros para mejorar el rendimiento de la navegación web en PDAs inalámbricas fue demostrada cuantitativamente por primera vez en un estudio previo realizado por uno de los autores [10]. Este estudio demostró que los clientes ligeros pueden ofrecer tanto un rendimiento de navegación web más rápido como una mayor funcionalidad de navegación web. El estudio consideró una amplia gama de contenido web, incluido el contenido de sistemas de información médica. Nuestro trabajo se basa en este estudio previo y considera temas importantes como la usabilidad de los clientes ligeros existentes en entornos de PDA, los compromisos entre la usabilidad y el rendimiento de los clientes ligeros, el rendimiento en diferentes dispositivos de PDA y el rendimiento de los clientes ligeros en aplicaciones web comunes como el video. Se han desarrollado muchos clientes ligeros y algunos tienen clientes de PDA, incluyendo Remote Desktop de Microsoft [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5] y Tarantella [18]. Estos sistemas fueron diseñados inicialmente para computadoras de escritorio y adaptados posteriormente para asistentes digitales personales (PDA). A diferencia de pTHINC, no abordan los problemas clave de arquitectura del sistema y usabilidad importantes para las PDAs. Esto limita la calidad de visualización, el rendimiento del sistema, el espacio de pantalla disponible y la usabilidad general en PDAs. pTHINC se basa en trabajos anteriores de dos de los autores sobre THINC [1], ampliando la arquitectura del servidor e introduciendo una interfaz de cliente y un modelo de uso para admitir eficientemente dispositivos PDA en aplicaciones web móviles. Otros enfoques para mejorar el rendimiento de la navegación web inalámbrica móvil se han centrado en el uso de proxies de transcodificación y almacenamiento en caché en conjunto con el modelo de cliente pesado [11, 9, 4, 8]. Trabajan mediante el envío de funcionalidades a proxies externos y utilizando aplicaciones de navegación especializadas en el dispositivo PDA que se comunican con el proxy. Nuestro enfoque de cliente ligero difiere fundamentalmente de estos enfoques de cliente pesado al trasladar toda la lógica del navegador web al servidor, aprovechando las inversiones existentes en navegadores web de escritorio y aplicaciones auxiliares para funcionar de manera integrada con los sistemas de producción sin necesidad de configuraciones adicionales de proxy o modificaciones en el navegador web. Con la aparición de la navegación web en dispositivos con pantallas pequeñas, los sitios web han sido rediseñados utilizando mecanismos como WAP y se han desarrollado navegadores web nativos especializados para adaptarse a las necesidades de estos dispositivos. Recientemente, Opera ha desarrollado el navegador web Opera Mini [15], que utiliza un enfoque similar al modelo de cliente ligero para proporcionar acceso a través de una serie de dispositivos móviles que normalmente no podrían ejecutar un navegador web. En lugar de requerir que el dispositivo procese las páginas web, utiliza un servidor remoto para preprocesar la página antes de enviarla al teléfono. CONCLUSIONES Hemos introducido pTHINC, una arquitectura de cliente ligero para PDAs inalámbricas. pTHINC proporciona mecanismos arquitectónicos y de usabilidad clave como el redimensionamiento de pantalla en el lado del servidor, rotación de pantalla en el lado del cliente utilizando técnicas simples de copia, soporte de video YUV, y maximización del espacio de pantalla para actualizaciones de visualización y aprovechamiento de los botones de control existentes en las PDAs para elementos de la interfaz de usuario. pTHINC soporta de manera transparente navegadores de escritorio tradicionales y sus aplicaciones auxiliares en dispositivos PDA y computadoras de escritorio, brindando a los usuarios móviles acceso ubicuo a un entorno web consistente, personalizado y completo en dispositivos heterogéneos. Hemos implementado pTHINC y medido su rendimiento en aplicaciones web en comparación con los sistemas de cliente ligero existentes y las aplicaciones web nativas. Nuestros resultados en múltiples dispositivos móviles inalámbricos demuestran que pTHINC ofrece un rendimiento de navegación web hasta 80 veces mejor que los sistemas de cliente ligero existentes, y 8 veces mejor que un navegador PDA nativo. Además, pTHINC es el único cliente ligero de PDA 151 Figura 11: Captura de pantalla de video: RDP 640x480 Figura 12: Captura de pantalla de video: VNC 1024x768 Figura 13: Captura de pantalla de video: ICA redimensionado 1024x768 Figura 14: Captura de pantalla de video: pTHINC redimensionado 1024x768 que proporciona de manera transparente la reproducción de video a pantalla completa y a velocidad de cuadro completa, haciendo que los sitios web con contenido multimedia sean accesibles para los usuarios de la web móvil. 7. AGRADECIMIENTOS Este trabajo fue apoyado en parte por las subvenciones NSF ITR CCR0219943 y CNS-0426623, y un premio IBM SUR. 8. REFERENCIAS [1] R. Baratto, L. Kim y J. Nieh. THINC: Una arquitectura de visualización virtual para la computación de cliente ligero. En Actas del 20º Simposio de Principios de Sistemas Operativos de la ACM (SOSP), octubre de 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius y A. Muir. Microsoft Windows NT Server 4.0, Terminal Server Edition: Referencia Técnica. Microsoft Press, Redmond, WA, 1999. [4] A.\nMicrosoft Press, Redmond, WA, 1999. [4] A. Fox, I. Goldberg, S. D. Gribble y D. C. Lee. Experiencia con Top Gun Wingman: un navegador web gráfico basado en proxy para el 3Com PalmPilot. En Actas de Middleware 98, Lake District, Inglaterra, septiembre de 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Ley de Portabilidad y Responsabilidad del Seguro de Salud. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench versión 1.5. http://etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi. Sobre agentes de proxy, movilidad y acceso web. Redes y aplicaciones móviles, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon y A. Ortega. Diseño e Implementación de un Proxy de Caché Blando. Redes de Computadoras y Sistemas ISDN, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana y S. Varshneya. Mejorando la navegación web en PDAs inalámbricas utilizando computación de cliente ligero. En Actas de la 13ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham y P. Shenoy. TranSquid: Proxy de transcodificación y almacenamiento en caché para entornos de comercio electrónico heterogéneos. En Actas del 12º Taller IEEE sobre Problemas de Investigación en Ingeniería de Datos (RIDE 02), febrero de 2002. [12] Visor VNC .NET para PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang y N. Novik. Midiendo el rendimiento de clientes ligeros utilizando pruebas de referencia en cámara lenta. ACM Trans. Sistemas de Computación, 21(1):87-115, Feb. 2003. [14] J. Nielsen. Diseño de Usabilidad en la Web. New Riders Publishing, Indianápolis, IN, 2000. [15] Navegador Opera Mini. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood y A. Hopper. Computación de Red Virtual. IEEE Internet Computing, 2(1), enero/febrero de 1998. [17] R. W. Scheifler y J. Gettys. El Sistema de Ventanas X. ACM Trans. Gr., 5(2):79-106, Abr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla y M. Sajjadpour. Rendimiento de la navegación web en computación inalámbrica de cliente ligero. En Actas de la 12ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2003. 152 ",
            "candidates": [],
            "error": [
                [
                    "resolución de pantalla",
                    "resolución de pantalla completa"
                ]
            ]
        },
        "thin-client computing": {
            "translated_key": "cliente ligero",
            "is_in_text": true,
            "original_annotated_sentences": [
                "pTHINC: A Thin-Client Architecture for Mobile Wireless Web Joeng Kim, Ricardo A. Baratto, and Jason Nieh Department of Computer Science Columbia University, New York, NY, USA {jk2438, ricardo, nieh}@cs.columbia.edu ABSTRACT Although web applications are gaining popularity on mobile wireless PDAs, web browsers on these systems can be quite slow and often lack adequate functionality to access many web sites.",
                "We have developed pTHINC, a PDA thinclient solution that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide high-fidelity display and seamless mobility across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available screen resolution for application display.",
                "We have implemented pTHINC on Windows Mobile and evaluated its performance on mobile wireless devices.",
                "Our results compared to local PDA web browsers and other thin-client approaches demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "Categories and Subject Descriptors: C.2.4 ComputerCommunication-Networks: Distributed Systems - client/ server General Terms: Design, Experimentation, Performance 1.",
                "INTRODUCTION The increasing ubiquity of wireless networks and decreasing cost of hardware is fueling a proliferation of mobile wireless handheld devices, both as standalone wireless Personal Digital Assistants (PDA) and popular integrated PDA/cell phone devices.",
                "These devices are enabling new forms of mobile computing and communication.",
                "Service providers are leveraging these devices to deliver pervasive web access, and mobile web users already often use these devices to access web-enabled information such as news, email, and localized travel guides and maps.",
                "It is likely that within a few years, most of the devices accessing the web will be mobile.",
                "Users typically access web content by running a web browser and associated helper applications locally on the PDA.",
                "Although native web browsers exist for PDAs, they deliver subpar performance and have a much smaller feature set and more limited functionality than their desktop computing counterparts [10].",
                "As a result, PDA web browsers are often not able to display web content from web sites that leverage more advanced web technologies to deliver a richer web experience.",
                "This fundamental problem arises for two reasons.",
                "First, because PDAs have a completely different hardware/software environment from traditional desktop computers, web applications need to be rewritten and customized for PDAs if at all possible, duplicating development costs.",
                "Because the desktop application market is larger and more mature, most development effort generally ends up being spent on desktop applications, resulting in greater functionality and performance than their PDA counterparts.",
                "Second, PDAs have a more resource constrained environment than traditional desktop computers to provide a smaller form factor and longer battery life.",
                "Desktop web browsers are large, complex applications that are unable to run on a PDA.",
                "Instead, developers are forced to significantly strip down these web browsers to provide a usable PDA web browser, thereby crippling PDA browser functionality.",
                "<br>thin-client computing</br> provides an alternative approach for enabling pervasive web access from handheld devices.",
                "A <br>thin-client computing</br> system consists of a server and a client that communicate over a network using a remote display protocol.",
                "The protocol enables graphical displays to be virtualized and served across a network to a client device, while application logic is executed on the server.",
                "Using the remote display protocol, the client transmits user input to the server, and the server returns screen updates of the applications from the server to the client.",
                "Using a thin-client model for mobile handheld devices, PDAs can become simple stateless clients that leverage the remote server capabilities to execute web browsers and other helper applications.",
                "The thin-client model provides several important benefits for mobile wireless web.",
                "First, standard desktop web applications can be used to deliver web content to PDAs without rewriting or adapting applications to execute on a PDA, reducing development costs and leveraging existing software investments.",
                "Second, complex web applications can be executed on powerful servers instead of running stripped down versions on more resource constrained PDAs, providing greater functionality and better performance [10].",
                "Third, web applications can take advantage of servers with faster networks and better connectivity, further boosting application performance.",
                "Fourth, PDAs can be even simpler devices since they do not need to perform complex application logic, potentially reducing energy consumption and extend143 ing battery life.",
                "Finally, PDA thin clients can be essentially stateless appliances that do not need to be backed up or restored, require almost no maintenance or upgrades, and do not store any sensitive data that can be lost or stolen.",
                "This model provides a viable avenue for medical organizations to comply with HIPAA regulations [6] while embracing mobile handhelds in their day to day operations.",
                "Despite these potential advantages, thin clients have been unable to provide the full range of these benefits in delivering web applications to mobile handheld devices.",
                "Existing thin clients were not designed for PDAs and do not account for important usability issues in the context of small form factor devices, resulting in difficulty in navigating displayed web content.",
                "Furthermore, existing thin clients are ineffective at providing seamless mobility across the heterogeneous mix of device display sizes and resolutions.",
                "While existing thin clients can already provide faster performance than native PDA web browsers in delivering HTML web content, they do not effectively support more display-intensive web helper applications such as multimedia video, which is increasingly an integral part of available web content.",
                "To harness the full potential of <br>thin-client computing</br> in providing mobile wireless web on PDAs, we have developed pTHINC (PDA THin-client InterNet Computing). pTHINC builds on our previous work on THINC [1] to provide a thinclient architecture for mobile handheld devices. pTHINC virtualizes and resizes the display on the server to efficiently deliver high-fidelity screen updates to a broad range of different clients, screen sizes, and screen orientations, including both portrait and landscape viewing modes.",
                "This enables pTHINC to provide the same persistent web session across different client devices.",
                "For example, pTHINC can provide the same web browsing session appropriately scaled for display on a desktop computer and a PDA so that the same cookies, bookmarks, and other meta-data are continuously available on both machines simultaneously. pTHINCs virtual display approach leverages semantic information available in display commands, and client-side video hardware to provide more efficient remote display mechanisms that are crucial for supporting more display-intensive web applications.",
                "Given limited display resolution on PDAs, pTHINC maximizes the use of screen real estate for remote display by moving control functionality from the screen to readily available PDA control buttons, improving system usability.",
                "We have implemented pTHINC on Windows Mobile and demonstrated that it works transparently with existing applications, window systems, and operating systems, and does not require modifying, recompiling, or relinking existing software.",
                "We have quantitatively evaluated pTHINC against local PDA web browsers and other thin-client approaches on Pocket PC devices.",
                "Our experimental results demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "This paper presents the design and implementation of pTHINC.",
                "Section 2 describes the overall usage model and usability characteristics of pTHINC.",
                "Section 3 presents the design and system architecture of pTHINC.",
                "Section 4 presents experimental results measuring the performance of pTHINC on web applications and comparing it against native PDA browsers and other popular PDA thin-client systems.",
                "Section 5 discusses related work.",
                "Finally, we present some concluding remarks. 2.",
                "PTHINC USAGE MODEL pTHINC is a thin-client system that consists of a simple client viewer application that runs on the PDA and a server that runs on a commodity PC.",
                "The server leverages more powerful PCs to to run web browsers and other application logic.",
                "The client takes user input from the PDA stylus and virtual keyboard and sends them to the server to pass to the applications.",
                "Screen updates are then sent back from the server to the client for display to the user.",
                "When the pTHINC PDA client is started, the user is presented with a simple graphical interface where information such as server address and port, user authentication information, and session settings can be provided. pTHINC first attempts to connect to the server and perform the necessary handshaking.",
                "Once this process has been completed, pTHINC presents the user with the most recent display of his session.",
                "If the session does not exist, a new session is created.",
                "Existing sessions can be seamlessly continued without changes in the session setting or server configuration.",
                "Unlike other thin-client systems, pTHINC provides a user with a persistent web session model in which a user can launch a session running a web browser and associated applications at the server, then disconnect from that session and reconnect to it again anytime.",
                "When a user reconnects to the session, all of the applications continue running where the user left off, so that the user can continue working as though he or she never disconnected.",
                "The ability to disconnect and reconnect to a session at anytime is an important benefit for mobile wireless PDA users which may have intermittent network connectivity. pTHINCs persistent web session model enables a user to reconnect to a web session from devices other than the one on which the web session was originally initiated.",
                "This provides users with seamless mobility across different devices.",
                "If a user loses his PDA, he can easily use another PDA to access his web session.",
                "Furthermore, pTHINC allows users to use non-PDA devices to access web sessions as well.",
                "A user can access the same persistent web session on a desktop PC as on a PDA, enabling a user to use the same web session from any computer. pTHINCs persistent web session model addresses a key problem encountered by mobile web users, the lack of a common web environment across computers.",
                "Web browsers often store important information such as bookmarks, cookies, and history, which enable them to function in a much more useful manner.",
                "The problem that occurs when a user moves between computers is that this data, which is specific to a web browser installation, cannot move with the user.",
                "Furthermore, web browsers often need helper applications to process different media content, and those applications may not be consistently available across all computers. pTHINC addresses this problem by enabling a user to remotely use the exact same web browser environment and helper applications from any computer.",
                "As a result, pTHINC can provide a common, consistent web browsing environment for mobile users across different devices without requiring them to attempt to repeatedly synchronize different web browsing environments across multiple machines.",
                "To enable a user to access the same web session on different devices, pTHINC must provide mechanisms to support different display sizes and resolutions.",
                "Toward this end, pTHINC provides a zoom feature that enables a user to zoom in and out of a display and allows the display of a web 144 Figure 1: pTHINC shortcut keys session to be resized to fit the screen of the device being used.",
                "For example, if the server is running a web session at 1024×768 but the client is a PDA with a display resolution of 640×480, pTHINC will resize the desktop display to fit the full display in the smaller screen of the PDA. pTHINC provides the PDA user with the option to increase the size of the display by zooming in to different parts of the display.",
                "Users are often familiar with the general layout of commonly visited websites, and are able to leverage this resizing feature to better navigate through web pages.",
                "For example, a user can zoom out of the display to view the entire page content and navigate hyperlinks, then zoom in to a region of interest for a better view.",
                "To enable a user to access the same web session on different devices, pTHINC must also provide mechanisms to support different display orientations.",
                "In a desktop environment, users are typically accustomed to having displays presented in landscape mode where the screen width is larger than its height.",
                "However, in a PDA environment, the choice is not always obvious.",
                "Some users may prefer having the display in portrait mode, as it is easier to hold the device in their hands, while others may prefer landscape mode in order to minimize the amount of side-scrolling necessary to view a web page.",
                "To accommodate PDA user preferences, pTHINC provides an orientation feature that enables it to seamless rotate the display between landscape and portrait mode.",
                "The landscape mode is particularly useful for pTHINC users who frequently access their web sessions on both desktop and PDA devices, providing those users with the same familiar landscape setting across different devices.",
                "Because screen space is a relatively scarce resource on PDAs, pTHINC runs in fullscreen mode to maximize the screen area available to display the web session.",
                "To be able to use all of the screen on the PDA and still allow the user to control and interact with it, pTHINC reuses the typical shortcut buttons found on PDAs to perform all the control functions available to the user.",
                "The buttons used by pTHINC do not require any OS environment changes; they are simply intercepted by the pTHINC client application when they are pressed.",
                "Figure 1 shows how pTHINC utilizes the shortcut buttons to provide easy navigation and improve the overall user experience.",
                "These buttons are not device specific, and the layout shown is common to widelyused PocketPC devices. pTHINC provides six shortcuts to support its usage model: • Rotate Screen: The record button on the left edge is used to rotate the screen between portrait and landscape mode each time the button is pressed. • Zoom Out: The leftmost button on the bottom front is used to zoom out the display of the web session providing a birds eye view of the web session. • Zoom In: The second leftmost button on the bottom front is used to zoom in the display of the web session to more clearly view content of interest. • Directional Scroll: The middle button on the bottom front is used to scroll around the display using a single control button in a way that is already familiar to PDA users.",
                "This feature is particularly useful when the user has zoomed in to a region of the display such that only part of the display is visible on the screen. • Show/Hide Keyboard: The second rightmost button on the bottom front is used to bring up a virtual keyboard drawn on the screen for devices which have no physical keyboard.",
                "The virtual keyboard uses standard PDA OS mechanisms, providing portability across different PDA environments. • Close Session: The rightmost button on the bottom front is used to disconnect from the pTHINC session. pTHINC uses the PDA touch screen, stylus, and standard user interface mechanisms to provide a user interface pointand-click metaphor similar to that provided by the mouse in a traditional desktop computing environment. pTHINC does not use a cursor since PDA environments do not provide one.",
                "Instead, a user can use the stylus to tap on different sections of the touch screen to indicate input focus.",
                "A single tap on the touch screen generates a corresponding single click mouse event.",
                "A double tap on the touch screen generates a corresponding double click mouse event. pTHINC provides two-button mouse emulation by using the stylus to press down on the screen for one second to generate a right mouse click.",
                "All of these actions are identical to the way users already interact with PDA applications in the common PocketPC environment.",
                "In web browsing, users can click on hyperlinks and focus on input boxes by simply tapping on the desired screen area of interest.",
                "Unlike local PDA web browsers and other PDA applications, pTHINC leverages more powerful desktop user interface metaphors to enable users to manipulate multiple open application windows instead of being limited to a single application window at any given moment.",
                "This provides increased browsing flexibility beyond what is currently available on PDA devices.",
                "Similar to a desktop environment, browser windows and other application windows can be moved around by pressing down and dragging the stylus similar to a mouse. 3.",
                "PTHINC SYSTEM ARCHITECTURE pTHINC builds on the THINC [1] remote display architecture to provide a thin-client system for PDAs. pTHINC virtualizes the display at the server by leveraging the video device abstraction layer, which sits below the window server and above the framebuffer.",
                "This is a well-defined, low-level, device-dependent layer that exposes the video hardware to the display system. pTHINC accomplishes this through a simple virtual display driver that intercepts drawing commands, packetizes, and sends them over the network. 145 While other thin-client approaches intercept display commands at other layers of the display subsystem, pTHINCs display virtualization approach provides some key benefits in efficiently supporting PDA clients.",
                "For example, intercepting display commands at a higher layer between applications and the window system as is done by X [17] requires replicating and running a great deal of functionality on the PDA that is traditionally provided by the desktop window system.",
                "Given both the size and complexity of traditional window systems, attempting to replicate this functionality in the restricted PDA environment would have proven to be a daunting, and perhaps unfeasible task.",
                "Furthermore, applications and the window system often require tight synchronization in their operation and imposing a wireless network between them by running the applications on the server and the window system on the client would significantly degrade performance.",
                "On the other hand, intercepting at a lower layer by extracting pixels out of the framebuffer as they are rendered provides a simple solution that requires very little functionality on the PDA client, but can also result in degraded performance.",
                "The reason is that by the time the remote display server attempts to send screen updates, it has lost all semantic information that may have helped it encode efficiently, and it must resort to using a generic and expensive encoding mechanism on the server, as well as a potentially expensive decoding mechanism on the limited PDA client.",
                "In contrast to both the high and low level interception approaches, pTHINCs approach of intercepting at the device driver provides an effective balance between client and server simplicity, and the ability to efficiently encode and decode screen updates.",
                "By using a low-level virtual display approach, pTHINC can efficiently encode application display commands using only a small set of low-level commands.",
                "In a PDA environment, this set of commands provides a crucial component in maintaining the simplicity of the client in the resourceconstrained PDA environment.",
                "The display commands are shown in Table 1, and work as follows.",
                "COPY instructs the client to copy a region of the screen from its local framebuffer to another location.",
                "This command improves the user experience by accelerating scrolling and opaque window movement without having to resend screen data from the server.",
                "SFILL, PFILL, and BITMAP are commands that paint a fixed-size region on the screen.",
                "They are useful for accelerating the display of solid window backgrounds, desktop patterns, backgrounds of web pages, text drawing, and certain operations in graphics manipulation programs.",
                "SFILL fills a sizable region on the screen with a single color.",
                "PFILL replicates a tile over a screen region.",
                "BITMAP performs a fill using a bitmap of ones and zeros as a stipple to apply a foreground and background color.",
                "Finally, RAW is used to transmit unencoded pixel data to be displayed verbatim on a region of the screen.",
                "This command is invoked as a last resort if the server is unable to employ any other command, and it is the only command that may be compressed to mitigate its impact on network bandwidth. pTHINC delivers its commands using a non-blocking, serverpush update mechanism, where as soon as display updates are generated on the server, they are sent to the client.",
                "Clients are not required to explicitly request display updates, thus minimizing the impact that the typical varying network latency of wireless links may have on the responsiveness of the system.",
                "Keeping in mind that resource Command Description COPY Copy a frame buffer area to specified coordinates SFILL Fill an area with a given pixel color value PFILL Tile an area with a given pixel pattern BITMAP Fill a region using a bit pattern RAW Display raw pixel data at a given location Table 1: pTHINC Protocol Display Commands constrained PDAs and wireless networks may not be able to keep up with a fast server generating a large number of updates, pTHINC is able to coalesce, clip, and discard updates automatically if network loss or congestion occurs, or the client cannot keep up with the rate of updates.",
                "This type of behavior proves crucial in a web browsing environment, where for example, a page may be redrawn multiple times as it is rendered on the fly by the browser.",
                "In this case, the PDA will only receive and render the final result, which clearly is all the user is interesting in seeing. pTHINC prioritizes the delivery of updates to the PDA using a Shortest-Remaining-Size-First (SRSF) preemptive update scheduler.",
                "SRSF is analogous to Shortest-RemainingProcessing-Time scheduling, which is known to be optimal for minimizing mean response time in an interactive system.",
                "In a web browsing environment, short jobs are associated with text and basic page layout components such as the pages background, which are critical web content for the user.",
                "On the other hand, large jobs are often lower priority beautifying elements, or, even worse, web page banners and advertisements, which are of questionable value to the user as he or she is browsing the page.",
                "Using SRSF, pTHINC is able to maximize the utilization of the relatively scarce bandwidth available on the wireless connection between the PDA and the server. 3.1 Display Management To enable users to just as easily access their web browser and helper applications from a desktop computer at home as from a PDA while on the road, pTHINC provides a resize mechanism to zoom in and out of the display of a web session. pTHINC resizing is completely supported by the server, not the client.",
                "The server resamples updates to fit within the PDAs viewport before they are transmitted over the network. pTHINC uses Fants resampling algorithm to resize pixel updates.",
                "This provides smooth, visually pleasing updates with properly antialiasing and has only modest computational requirements. pTHINCs resizing approach has a number of advantages.",
                "First, it allows the PDA to leverage the vastly superior computational power of the server to use high quality resampling algorithms and produce higher quality updates for the PDA to display.",
                "Second, resizing the screen does not translate into additional resource requirements for the PDA, since it does not need to perform any additional work.",
                "Finally, better utilization of the wireless network is attained since rescaling the updates reduces their bandwidth requirements.",
                "To enable users to orient their displays on a PDA to provide a viewing experience that best accommodates user preferences and the layout of web pages or applications, pTHINC provides a display rotation mechanism to switch between landscape and portrait viewing modes. pTHINC display rotation is completely supported by the client, not the server. pTHINC does not explicitly recalculate the ge146 ometry of display updates to perform rotation, which would be computationally expensive.",
                "Instead, pTHINC simply changes the way data is copied into the framebuffer to switch between display modes.",
                "When in portrait mode, data is copied along the rows of the framebuffer from left to right.",
                "When in landscape mode, data is copied along the columns of the framebuffer from top to bottom.",
                "These very fast and simple techniques replace one set of copy operations with another and impose no performance overhead. pTHINC provides its own rotation mechanism to support a wide range of devices without imposing additional feature requirements on the PDA.",
                "Although some newer PDA devices provide native support for different orientations, this mechanism is not dynamic and requires the user to rotate the PDAs entire user interface before starting the pTHINC client.",
                "Windows Mobile provides native API mechanisms for PDA applications to rotate their UI on the fly, but these mechanisms deliver poor performance and display quality as the rotation is performed naively and is not completely accurate. 3.2 Video Playback Video has gradually become an integral part of the World Wide Web, and its presence will only continue to increase.",
                "Web sites today not only use animated graphics and flash to deliver web content in an attractive manner, but also utilize streaming video to enrich the web interface.",
                "Users are able to view pre-recorded and live newscasts on CNN, watch sports highlights on ESPN, and even search through large collection of videos on Google Video.",
                "To allow applications to provide efficient video playback, interfaces have been created in display systems that allow video device drivers to expose their hardware capabilities back to the applications. pTHINC takes advantage of these interfaces and its virtual device driver approach to provide a virtual bridge between the remote client and its hardware and the applications, and transparently support video playback.",
                "On top of this architecture, pTHINC uses the YUV colorspace to encode the video content, which provides a number of benefits.",
                "First, it has become increasingly common for PDA video hardware to natively support YUV and be able to perform the colorspace conversion and scaling automatically.",
                "As a result, pTHINC is able to provide fullscreen video playback without any performance hits.",
                "Second, the use of YUV allows for a more efficient representation of RGB data without loss of quality, by taking advantage of the human eyes ability to better distinguish differences in brightness than in color.",
                "In particular, pTHINC uses the YV12 format, which allows full color RGB data to be encoded using just 12 bits per pixel.",
                "Third, YUV data is produced as one of the last steps of the decoding process of most video codecs, allowing pTHINC to provide video playback in a manner that is format independent.",
                "Finally, even if the PDAs video hardware is unable to accelerate playback, the colorspace conversion process is simple enough that it does not impose unreasonable requirements on the PDA.",
                "A more concrete example of how pTHINC leverages the PDA video hardware to support video playback can be seen in our prototype implementation on the popular Dell Axim X51v PDA, which is equipped with the Intel 2700G multimedia accelerator.",
                "In this case, pTHINC creates an offscreen buffer in video memory and writes and reads from this memory region data on the YV12 format.",
                "When a new video frame arrives, video data is copied from the buffer to Figure 2: Experimental Testbed an overlay surface in video memory, which is independent of the normal surface used for traditional drawing.",
                "As the YV12 data is put onto the overlay, the Intel accelerator automatically performs both colorspace conversion and scaling.",
                "By using the overlay surface, pTHINC has no need to redraw the screen once video playback is over since the overlapped surface is unaffected.",
                "In addition, specific overlay regions can be manipulated by leveraging the video hardware, for example to perform hardware linear interpolation to smooth out the frame and display it fullscreen, and to do automatic rotation when the client runs in landscape mode. 4.",
                "EXPERIMENTAL RESULTS We have implemented a pTHINC prototype that runs the client on widely-used Windows Mobile-based Pocket PC devices and the server on both Windows and Linux operating systems.",
                "To demonstrate its effectiveness in supporting mobile wireless web applications, we have measured its performance on web applications.",
                "We present experimental results on different PDA devices for two popular web applications, browsing web pages and playing video content from the web.",
                "We compared pTHINC against native web applications running locally on the PDA to demonstrate the improvement that pTHINC can provide over the traditional fat-client approach.",
                "We also compared pTHINC against three of the most widely used thin clients that can run on PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] and VNC (Virtual Network Computing) [16].",
                "We follow common practice and refer to Citrix MetaFrameXP and Microsoft Remote Desktop by their respective remote display protocols, ICA (Independent Computing Architecture) and RDP (Remote Desktop Protocol). 4.1 Experimental Testbed We conducted our web experiments using two different wireless Pocket PC PDAs in an isolated Wi-Fi network testbed, as shown in Figure 2.",
                "The testbed consisted of two PDA client devices, a packet monitor, a thin-client server, and a web server.",
                "Except for the PDAs, all of the other machines were IBM Netfinity 4500R servers with dual 933 MHz Intel PIII CPUs and 512 MB RAM and were connected on a switched 100 Mbps FastEthernet network.",
                "The web server used was Apache 1.3.27, the network emulator was NISTNet 2.0.12, and the packet monitor was Ethereal 0.10.9.",
                "The PDA clients connected to the testbed through a 802.11b Lucent Orinoco AP-2000 wireless access point.",
                "All experiments using the wireless network were conducted within ten feet of the access point, so we considered the amount of packet loss to be negligible in our experiments.",
                "Two Pocket PC PDAs were used to provide results across both older, less powerful models and newer higher performance models.",
                "The older model was a Dell Axim X5 with 147 Client 1024×768 640×480 Depth Resize Clip RDP no yes 8-bit no yes VNC yes yes 16-bit no no ICA yes yes 16-bit yes no pTHINC yes yes 24-bit yes no Table 2: Thin-client Testbed Configuration Setting a 400 MHz Intel XScale PXA255 CPU and 64 MB RAM running Windows Mobile 2003 and a Dell TrueMobile 1180 2.4Ghz CompactFlash card for wireless networking.",
                "The newer model was a Dell Axim X51v with a 624 MHz Intel XScale XPA270 CPU and 64 MB RAM running Windows Mobile 5.0 and integrated 802.11b wireless networking.",
                "The X51v has an Intel 2700G multimedia accelerator with 16MB video memory.",
                "Both PDAs are capable of 16-bit color but have different screen sizes and display resolutions.",
                "The X5 has a 3.5 inch diagonal screen with 240×320 resolution.",
                "The X51v has a 3.7 inch diagonal screen with 480×640.",
                "The four thin clients that we used support different levels of display quality as summarized in Table 2.",
                "The RDP client only supports a fixed 640×480 display resolution on the server with 8-bit color depth, while other platforms provide higher levels of display quality.",
                "To provide a fair comparison across all platforms, we conducted our experiments with thin-client sessions configured for two possible resolutions, 1024×768 and 640×480.",
                "Both ICA and VNC were configured to use the native PDA resolution of 16-bit color depth.",
                "The current pTHINC prototype uses 24-bit color directly and the client downsamples updates to the 16-bit color depth available on the PDA.",
                "RDP was configured using only 8-bit color depth since it does not support any better color depth.",
                "Since both pTHINC and ICA provide the ability to view the display resized to fit the screen, we measured both clients with and without the display resized to fit the PDA screen.",
                "Each thin client was tested using landscape rather than portrait mode when available.",
                "All systems run on the X51v could run in landscape mode because the hardware provides a landscape mode feature.",
                "However, the X5 does not provide this functionality.",
                "Only pTHINC directly supports landscape mode, so it was the only system that could run in landscape mode on both the X5 and X51v.",
                "To provide a fair comparison, we also standardized on common hardware and operating systems whenever possible.",
                "All of the systems used the Netfinity server as the thin-client server.",
                "For the two systems designed for Windows servers, ICA and RDP, we ran Windows 2003 Server on the server.",
                "For the other systems which support X-based servers, VNC and pTHINC, we ran the Debian Linux Unstable distribution with the Linux 2.6.10 kernel on the server.",
                "We used the latest thin-client server versions available on each platform at the time of our experiments, namely Citrix MetaFrame XP Server for Windows Feature Release 3, Microsoft Remote Desktop built into Windows XP and Windows 2003 using RDP 5.2, and VNC 4.0. 4.2 Application Benchmarks We used two web application benchmarks for our experiments based on two common application scenarios, browsing web pages and playing video content from the web.",
                "Since many thin-client systems including two of the ones tested are closed and proprietary, we measured their performance in a noninvasive manner by capturing network traffic with a packet monitor and using a variant of slow-motion benchmarking [13] previously developed to measure thin-client performance in PDA environments [10].",
                "This measurement methodology accounts for both the display decoupling that can occur between client and server in thin-client systems as well as client processing time, which may be significant in the case of PDAs.",
                "To measure web browsing performance, we used a web browsing benchmark based on the Web Text Page Load Test from the Ziff-Davis i-Bench benchmark suite [7].",
                "The benchmark consists of JavaScript controlled load of 55 pages from the web server.",
                "The pages contain both text and graphics with pages varying in size.",
                "The graphics are embedded images in GIF and JPEG formats.",
                "The original i-Bench benchmark was modified for slow-motion benchmarking by introducing delays of several seconds between the pages using JavaScript.",
                "Then two tests were run, one where delays where added between each page, and one where pages where loaded continuously without waiting for them to be displayed on the client.",
                "In the first test, delays were sufficiently adjusted in each case to ensure that each page could be received and displayed on the client completely without temporal overlap in transferring the data belonging to two consecutive pages.",
                "We used the packet monitor to record the packet traffic for each run of the benchmark, then used the timestamps of the first and last packet in the trace to obtain our latency measures [10].",
                "The packet monitor also recorded the amount of data transmitted between the client and the server.",
                "The ratio between the data traffic in the two tests yields a scale factor.",
                "This scale factor shows the loss of data between the server and the client due to inability of the client to process the data quickly enough.",
                "The product of the scale factor with the latency measurement produces the true latency accounting for client processing time.",
                "To run the web browsing benchmark, we used Mozilla Firefox 1.0.4 running on the thin-client server for the thin clients, and Windows Internet Explorer (IE) Mobile for 2003 and Mobile for 5.0 for the native browsers on the X5 and X51v PDAs, respectively.",
                "In all cases, the web browser used was sized to fill the entire display region available.",
                "To measure video playback performance, we used a video benchmark that consisted of playing a 34.75s MPEG-1 video clip containing a mix of news and entertainment programming at full-screen resolution.",
                "The video clip is 5.11 MB and consists of 834 352x240 pixel frames with an ideal frame rate of 24 frames/sec.",
                "We measured video performance using slow-motion benchmarking by monitoring resulting packet traffic at two playback rates, 1 frames/second (fps) and 24 fps, and comparing the results to determine playback delays and frame drops that occur at 24 fps to measure overall video quality [13].",
                "For example, 100% quality means that all video frames were played at real-time speed.",
                "On the other hand, 50% quality could mean that half the video data was dropped, or that the clip took twice as long to play even though all of the video data was displayed.",
                "To run the video benchmark, we used Windows Media Player 9 for Windows-based thin-client servers, MPlayer 1.0 pre 6 for X-based thin-client servers, and Windows Media Player 9 Mobile and 10 Mobile for the native video players running locally on the X5 and X51v PDAs, respectively.",
                "In all cases, the video player used was sized to fill the entire display region available. 4.3 Measurements Figures 3 and 4 show the results of running the web brows148 0 1 10 100 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL Latency(s) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 3: Browsing Benchmark: Average Page Latency ing benchmark.",
                "For each platform, we show results for up to four different configurations, two on the X5 and two on the X51v, depending on whether each configuration was supported.",
                "However, not all platforms could support all configurations.",
                "The local browser only runs at the display resolution of the PDA, 480×680 or less for the X51v and the X5.",
                "RDP only runs at 640×480.",
                "Neither platform could support 1024×768 display resolution.",
                "ICA only ran on the X5 and could not run on the X51v because it did not work on Windows Mobile 5.",
                "Figure 3 shows the average latency per web page for each platform. pTHINC provides the lowest average web browsing latency on both PDAs.",
                "On the X5, pTHINC performs up to 70 times better than other thin-client systems and 8 times better than the local browser.",
                "On the X51v, pTHINC performs up to 80 times better than other thin-client systems and 7 times better than the native browser.",
                "In fact, all of the thin clients except VNC outperform the local PDA browser, demonstrating the performance benefits of the thin-client approach.",
                "Usability studies have shown that web pages should take less than one second to download for the user to experience an uninterrupted web browsing experience [14].",
                "The measurements show that only the thin clients deliver subsecond web page latencies.",
                "In contrast, the local browser requires more than 3 seconds on average per web page.",
                "The local browser performs worse since it needs to run a more limited web browser to process the HTML, JavaScript, and do all the rendering using the limited capabilities of the PDA.",
                "The thin clients can take advantage of faster server hardware and a highly tuned web browser to process the web content much faster.",
                "Figure 3 shows that RDP is the next fastest platform after pTHINC.",
                "However, RDP is only able to run at a fixed resolution of 640×480 and 8-bit color depth.",
                "Furthermore, RDP also clips the display to the size of the PDA screen so that it does not need to send updates that are not visible on the PDA screen.",
                "This provides a performance benefit assuming the remaining web content is not viewed, but degrades performance when a user scrolls around the display to view other web content.",
                "RDP achieves its performance with significantly lower display quality compared to the other thin clients and with additional display clipping not used by other systems.",
                "As a result, RDP performance alone does not provide a complete comparison with the other platforms.",
                "In contrast, pTHINC provides the fastest performance while at the same time providing equal or better display quality than the other systems. 0 1 10 100 1000 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL DataSize(KB) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 4: Browsing Benchmark: Average Page Data Transferred Since VNC and ICA provide similar display quality to pTHINC, these systems provide a more fair comparison of different thin-client approaches.",
                "ICA performs worse in part because it uses higher-level display primitives that require additional client processing costs.",
                "VNC performs worse in part because it loses display data due to its client-pull delivery mechanism and because of the client processing costs in decompressing raw pixel primitives.",
                "In both cases, their performance was limited in part because their PDA clients were unable to keep up with the rate at which web pages were being displayed.",
                "Figure 3 also shows measurements for those thin clients that support resizing the display to fit the PDA screen, namely ICA and pTHINC.",
                "Resizing requires additional processing, which results in slower average web page latencies.",
                "The measurements show that the additional delay incurred by ICA when resizing versus not resizing is much more substantial than for pTHINC.",
                "ICA performs resizing on the slower PDA client.",
                "In contrast, pTHINC leverage the more powerful server to do resizing, reducing the performance difference between resizing and not resizing.",
                "Unlike ICA, pTHINC is able to provide subsecond web page download latencies in both cases.",
                "Figure 4 shows the data transferred in KB per page when running the slow-motion version of the tests.",
                "All of the platforms have modest data transfer requirements of roughly 100 KB per page or less.",
                "This is well within the bandwidth capacity of Wi-Fi networks.",
                "The measurements show that the local browser does not transfer the least amount of data.",
                "This is surprising as HTML is often considered to be a very compact representation of content.",
                "Instead, RDP is the most bandwidth efficient platform, largely as a result of using only 8-bit color depth and screen clipping so that it does not transfer the entire web page to the client. pTHINC overall has the largest data requirements, slightly more than VNC.",
                "This is largely a result of the current pTHINC prototypes lack of native support for 16-bit color data in the wire protocol.",
                "However, this result also highlights pTHINCs performance as it is faster than all other systems even while transferring more data.",
                "Furthermore, as newer PDA models support full 24-bit color, these results indicate that pTHINC will continue to provide good web browsing performance.",
                "Since display usability and quality are as important as performance, Figures 5 to 8 compare screenshots of the different thin clients when displaying a web page, in this case from the popular BBC news website.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode 149 Figure 5: Browser Screenshot: RDP 640x480 Figure 6: Browser Screenshot: VNC 1024x768 Figure 7: Browser Screenshot: ICA Resized 1024x768 Figure 8: Browser Screenshot: pTHINC Resized 1024x768 using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "While the screenshots lack the visual fidelity of the actual device display, several observations can be made.",
                "Figure 5 shows that RDP does not support fullscreen mode and wastes lots of screen space for controls and UI elements, requiring the user to scroll around in order to access the full contents of the web browsing session.",
                "Figure 6 shows that VNC makes better use of the screen space and provides better display quality, but still forces the user to scroll around to view the web page due to its lack of resizing support.",
                "Figure 7 shows ICAs ability to display the full web page given its resizing support, but that its lack of landscape capability and poorer resize algorithm significantly compromise display quality.",
                "In contrast, Figure 8 shows pTHINC using resizing to provide a high quality fullscreen display of the full width of the web page. pTHINC maximizes the entire viewing region by moving all controls to the PDA buttons.",
                "In addition, pTHINC leverages the server computational power to use a high quality resizing algorithm to resize the display to fit the PDA screen without significant overhead.",
                "Figures 9 and 10 show the results of running the video playback benchmark.",
                "For each platform except ICA, we show results for an X5 and X51v configuration.",
                "ICA could not run on the X51v as noted earlier.",
                "The measurements were done using settings that reflected the environment a user would have to access a web session from both a desktop computer and a PDA.",
                "As such, a 1024×768 server display resolution was used whenever possible and the video was shown at fullscreen.",
                "RDP was limited to 640×480 display resolution as noted earlier.",
                "Since viewing the entire video display is the only really usable option, we resized the display to fit the PDA screen for those platforms that supported this feature, namely ICA and pTHINC.",
                "Figure 9 shows the video quality for each platform. pTHINC is the only thin client able to provide perfect video playback quality, similar to the native PDA video player.",
                "All of the other thin clients deliver very poor video quality.",
                "With the exception of RDP on the X51v which provided unacceptable 35% video quality, none of the other systems were even able to achieve 10% video quality.",
                "VNC and ICA have the worst quality at 8% on the X5 device. pTHINCs native video support enables superior video performance, while other thin clients suffer from their inability to distinguish video from normal display updates.",
                "They attempt to apply ineffective and expensive compression algorithms on the video data and are unable to keep up with the stream of updates generated, resulting in dropped frames or long playback times.",
                "VNC suffers further from its client-pull update model because video frames are generated faster than the rate at which the client can process and send requests to the server to obtain the next display update.",
                "Figure 10 shows the total data transferred during 150 0% 20% 40% 60% 80% 100% pTHINCICAVNCRDPLOCAL VideoQuality Platform Axim X5 Axim X51v Figure 9: Video Benchmark: Fullscreen Video Quality 0 1 10 100 pTHINCICAVNCRDPLOCAL VideoDataSize(MB) Platform Axim X5 Axim X51v Figure 10: Video Benchmark: Fullscreen Video Data video playback for each system.",
                "The native player is the most bandwidth efficient platform, sending less than 6 MB of data, which corresponds to about 1.2 Mbps of bandwidth. pTHINCs 100% video quality requires about 25 MB of data which corresponds to a bandwidth usage of less than 6 Mbps.",
                "While the other thin clients send less data than THINC, they do so because they are dropping video data, resulting in degraded video quality.",
                "Figures 11 to 14 compare screenshots of the different thin clients when displaying the video clip.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "Figures 11 and 12 show that RDP and VNC are unable to display the entire video frame on the PDA screen.",
                "RDP wastes screen space for UI elements and VNC only shows the top corner of the video frame on the screen.",
                "Figure 13 shows that ICA provides resizing to display the entire video frame, but did not proportionally resize the video data, resulting in strange display artifacts.",
                "In contrast, Figure 14 shows pTHINC using resizing to provide a high quality fullscreen display of the entire video frame. pTHINC provides visually more appealing video display than RDP, VNC, or ICA. 5.",
                "RELATED WORK Several studies have examined the web browsing performance of <br>thin-client computing</br> [13, 19, 10].",
                "The ability for thin clients to improve web browsing performance on wireless PDAs was first quantitatively demonstrated in a previous study by one of the authors [10].",
                "This study demonstrated that thin clients can provide both faster web browsing performance and greater web browsing functionality.",
                "The study considered a wide range of web content including content from medical information systems.",
                "Our work builds on this previous study and consider important issues such as how usable existing thin clients are in PDA environments, the trade-offs between thin-client usability and performance, performance across different PDA devices, and the performance of thin clients on common web-related applications such as video.",
                "Many thin clients have been developed and some have PDA clients, including Microsofts Remote Desktop [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5], and Tarantella [18].",
                "These systems were first designed for desktop computing and retrofitted for PDAs.",
                "Unlike pTHINC, they do not address key system architecture and usability issues important for PDAs.",
                "This limits their display quality, system performance, available screen space, and overall usability on PDAs. pTHINC builds on previous work by two of the authors on THINC [1], extending the server architecture and introducing a client interface and usage model to efficiently support PDA devices for mobile web applications.",
                "Other approaches to improve the performance of mobile wireless web browsing have focused on using transcoding and caching proxies in conjunction with the fat client model [11, 9, 4, 8].",
                "They work by pushing functionality to external proxies, and using specialized browsing applications on the PDA device that communicate with the proxy.",
                "Our thinclient approach differs fundamentally from these fat-client approaches by pushing all web browser logic to the server, leveraging existing investments in desktop web browsers and helper applications to work seamlessly with production systems without any additional proxy configuration or web browser modifications.",
                "With the emergence of web browsing on small display devices, web sites have been redesigned using mechanisms like WAP and specialized native web browsers have been developed to tailor the needs of these devices.",
                "Recently, Opera has developed the Opera Mini [15] web browser, which uses an approach similar to the thin-client model to provide access across a number of mobile devices that would normally be incapable of running a web browser.",
                "Instead of requiring the device to process web pages, it uses a remote server to pre-process the page before sending it to the phone. 6.",
                "CONCLUSIONS We have introduced pTHINC, a thin-client architecture for wireless PDAs. pTHINC provides key architectural and usability mechanisms such as server-side screen resizing, clientside screen rotation using simple copy techniques, YUV video support, and maximizing screen space for display updates and leveraging existing PDA control buttons for UI elements. pTHINC transparently supports traditional desktop browsers and their helper applications on PDA devices and desktop machines, providing mobile users with ubiquitous access to a consistent, personalized, and full-featured web environment across heterogeneous devices.",
                "We have implemented pTHINC and measured its performance on web applications compared to existing thin-client systems and native web applications.",
                "Our results on multiple mobile wireless devices demonstrate that pTHINC delivers web browsing performance up to 80 times better than existing thin-client systems, and 8 times better than a native PDA browser.",
                "In addition, pTHINC is the only PDA thin client 151 Figure 11: Video Screenshot: RDP 640x480 Figure 12: Video Screenshot: VNC 1024x768 Figure 13: Video Screenshot: ICA Resized 1024x768 Figure 14: Video Screenshot: pTHINC Resized 1024x768 that transparently provides full-screen, full frame rate video playback, making web sites with multimedia content accessible to mobile web users. 7.",
                "ACKNOWLEDGEMENTS This work was supported in part by NSF ITR grants CCR0219943 and CNS-0426623, and an IBM SUR Award. 8.",
                "REFERENCES [1] R. Baratto, L. Kim, and J. Nieh.",
                "THINC: A Virtual Display Architecture for <br>thin-client computing</br>.",
                "In Proceedings of the 20th ACM Symposium on Operating Systems Principles (SOSP), Oct. 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius, and A. Muir.",
                "Microsoft Windows NT Server 4.0, Terminal Server Edition: Technical Reference.",
                "Microsoft Press, Redmond, WA, 1999. [4] A.",
                "Fox, I. Goldberg, S. D. Gribble, and D. C. Lee.",
                "Experience With Top Gun Wingman: A Proxy-Based Graphical Web Browser for the 3Com PalmPilot.",
                "In Proceedings of Middleware 98, Lake District, England, September 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Health Insurance Portability and Accountability Act. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench version 1.5. http: //etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi.",
                "On proxy agents, mobility, and web access.",
                "Mobile Networks and Applications, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon, and A. Ortega.",
                "Design and Implementation of a Soft Caching Proxy.",
                "Computer Networks and ISDN Systems, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana, and S. Varshneya.",
                "Improving Web Browsing on Wireless PDAs Using <br>thin-client computing</br>.",
                "In Proceedings of the 13th International World Wide Web Conference (WWW), May 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham, and P. Shenoy.",
                "TranSquid: Transcoding and caching proxy for heterogenous ecommerce environments.",
                "In Proceedings of the 12th IEEE Workshop on Research Issues in Data Engineering (RIDE 02), Feb. 2002. [12] .NET VNC Viewer for PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang, and N. Novik.",
                "Measuring Thin-Client Performance Using Slow-Motion Benchmarking.",
                "ACM Trans.",
                "Computer Systems, 21(1):87-115, Feb. 2003. [14] J. Nielsen.",
                "Designing Web Usability.",
                "New Riders Publishing, Indianapolis, IN, 2000. [15] Opera Mini Browser. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood, and A. Hopper.",
                "Virtual Network Computing.",
                "IEEE Internet Computing, 2(1), Jan./Feb. 1998. [17] R. W. Scheifler and J. Gettys.",
                "The X Window System.",
                "ACM Trans.",
                "Gr., 5(2):79-106, Apr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla, and M. Sajjadpour.",
                "Web Browsing Performance of Wireless <br>thin-client computing</br>.",
                "In Proceedings of the 12th International World Wide Web Conference (WWW), May 2003. 152"
            ],
            "original_annotated_samples": [
                "<br>thin-client computing</br> provides an alternative approach for enabling pervasive web access from handheld devices.",
                "A <br>thin-client computing</br> system consists of a server and a client that communicate over a network using a remote display protocol.",
                "To harness the full potential of <br>thin-client computing</br> in providing mobile wireless web on PDAs, we have developed pTHINC (PDA THin-client InterNet Computing). pTHINC builds on our previous work on THINC [1] to provide a thinclient architecture for mobile handheld devices. pTHINC virtualizes and resizes the display on the server to efficiently deliver high-fidelity screen updates to a broad range of different clients, screen sizes, and screen orientations, including both portrait and landscape viewing modes.",
                "RELATED WORK Several studies have examined the web browsing performance of <br>thin-client computing</br> [13, 19, 10].",
                "THINC: A Virtual Display Architecture for <br>thin-client computing</br>."
            ],
            "translated_annotated_samples": [
                "La computación de <br>cliente ligero</br> proporciona un enfoque alternativo para habilitar el acceso web ubicuo desde dispositivos móviles.",
                "Un sistema informático de <br>cliente ligero</br> consiste en un servidor y un cliente que se comunican a través de una red utilizando un protocolo de visualización remota.",
                "Para aprovechar todo el potencial de la <br>informática de cliente ligero</br> en la provisión de la web inalámbrica móvil en PDAs, hemos desarrollado pTHINC (PDA THin-client InterNet Computing). pTHINC se basa en nuestro trabajo previo en THINC [1] para proporcionar una arquitectura de cliente ligero para dispositivos móviles de mano. pTHINC virtualiza y redimensiona la pantalla en el servidor para entregar de manera eficiente actualizaciones de pantalla de alta fidelidad a una amplia gama de clientes diferentes, tamaños de pantalla y orientaciones de pantalla, incluidos los modos de visualización en vertical y horizontal.",
                "TRABAJOS RELACIONADOS Varios estudios han examinado el rendimiento de la navegación web en la <br>computación de cliente ligero</br> [13, 19, 10].",
                "THINC: Una arquitectura de visualización virtual para la <br>computación de cliente ligero</br>."
            ],
            "translated_text": "pTHINC: Una arquitectura de cliente ligero para la web inalámbrica móvil Joeng Kim, Ricardo A. Baratto y Jason Nieh Departamento de Ciencias de la Computación Universidad de Columbia, Nueva York, NY, EE. UU. {jk2438, ricardo, nieh}@cs.columbia.edu RESUMEN Aunque las aplicaciones web están ganando popularidad en las PDAs inalámbricas móviles, los navegadores web en estos sistemas pueden ser bastante lentos y a menudo carecen de funcionalidad adecuada para acceder a muchos sitios web. Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y movilidad fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la resolución de pantalla disponible para la visualización de aplicaciones. Hemos implementado pTHINC en Windows Mobile y evaluado su rendimiento en dispositivos móviles inalámbricos. Nuestros resultados comparados con los navegadores web PDA locales y otros enfoques de cliente ligero demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero PDA que soporta de manera efectiva aplicaciones de ayuda del navegador cruciales como la reproducción de video. Categorías y Descriptores de Asunto: C.2.4 Comunicación de Computadoras-Redes: Sistemas Distribuidos - cliente/servidor Términos Generales: Diseño, Experimentación, Rendimiento 1. La creciente ubicuidad de las redes inalámbricas y la disminución del costo del hardware están impulsando una proliferación de dispositivos móviles inalámbricos portátiles, tanto como asistentes digitales personales (PDA) inalámbricos independientes y dispositivos populares integrados de PDA/teléfono celular. Estos dispositivos están permitiendo nuevas formas de computación y comunicación móvil. Los proveedores de servicios están aprovechando estos dispositivos para ofrecer acceso web omnipresente, y los usuarios de la web móvil a menudo ya utilizan estos dispositivos para acceder a información habilitada para la web, como noticias, correo electrónico, guías de viaje localizadas y mapas. Es probable que en unos pocos años, la mayoría de los dispositivos que accedan a la web sean móviles. Los usuarios suelen acceder al contenido web ejecutando un navegador web y aplicaciones auxiliares asociadas localmente en la PDA. Aunque existen navegadores web nativos para PDAs, ofrecen un rendimiento deficiente y tienen un conjunto de funciones mucho más pequeño y una funcionalidad más limitada que sus contrapartes de computadoras de escritorio [10]. Como resultado, los navegadores web de PDA a menudo no pueden mostrar el contenido web de sitios web que utilizan tecnologías web más avanzadas para ofrecer una experiencia web más rica. Este problema fundamental surge por dos razones. Primero, debido a que las PDAs tienen un entorno de hardware/software completamente diferente de las computadoras de escritorio tradicionales, las aplicaciones web necesitan ser reescritas y personalizadas para las PDAs si es posible, duplicando los costos de desarrollo. Debido a que el mercado de aplicaciones de escritorio es más grande y maduro, la mayoría del esfuerzo de desarrollo generalmente se destina a las aplicaciones de escritorio, lo que resulta en una mayor funcionalidad y rendimiento que sus contrapartes de PDA. En segundo lugar, las PDAs tienen un entorno con recursos más limitados que las computadoras de escritorio tradicionales para ofrecer un factor de forma más pequeño y una vida útil de la batería más larga. Los navegadores web de escritorio son aplicaciones grandes y complejas que no pueden ejecutarse en una PDA. En cambio, los desarrolladores se ven obligados a reducir significativamente estas navegadores web para ofrecer un navegador web PDA utilizable, lo que limita la funcionalidad del navegador PDA. La computación de <br>cliente ligero</br> proporciona un enfoque alternativo para habilitar el acceso web ubicuo desde dispositivos móviles. Un sistema informático de <br>cliente ligero</br> consiste en un servidor y un cliente que se comunican a través de una red utilizando un protocolo de visualización remota. El protocolo permite que las pantallas gráficas se virtualicen y se sirvan a través de una red a un dispositivo cliente, mientras que la lógica de la aplicación se ejecuta en el servidor. Usando el protocolo de visualización remota, el cliente transmite la entrada del usuario al servidor, y el servidor devuelve actualizaciones de pantalla de las aplicaciones del servidor al cliente. Utilizando un modelo de cliente ligero para dispositivos móviles de mano, las PDAs pueden convertirse en clientes simples sin estado que aprovechan las capacidades del servidor remoto para ejecutar navegadores web y otras aplicaciones auxiliares. El modelo de cliente ligero proporciona varios beneficios importantes para la web inalámbrica móvil. Primero, las aplicaciones web estándar de escritorio pueden utilizarse para entregar contenido web a PDAs sin necesidad de reescribir o adaptar las aplicaciones para ejecutarse en una PDA, lo que reduce los costos de desarrollo y aprovecha las inversiones existentes en software. Segundo, las aplicaciones web complejas pueden ejecutarse en servidores potentes en lugar de ejecutarse en versiones simplificadas en PDAs con recursos más limitados, lo que proporciona una mayor funcionalidad y un mejor rendimiento [10]. Tercero, las aplicaciones web pueden aprovechar servidores con redes más rápidas y mejor conectividad, lo que mejora aún más el rendimiento de la aplicación. En cuarto lugar, las PDAs pueden ser dispositivos aún más simples ya que no necesitan realizar una lógica de aplicación compleja, lo que potencialmente reduce el consumo de energía y extiende la vida útil de la batería. Finalmente, los clientes ligeros PDA pueden ser dispositivos prácticamente sin estado que no necesitan ser respaldados o restaurados, requieren casi ningún mantenimiento o actualizaciones, y no almacenan datos sensibles que puedan perderse o ser robados. Este modelo proporciona una vía viable para que las organizaciones médicas cumplan con las regulaciones de HIPAA mientras incorporan dispositivos móviles en sus operaciones diarias. A pesar de estas posibles ventajas, los clientes ligeros no han podido ofrecer la gama completa de estos beneficios al entregar aplicaciones web a dispositivos móviles portátiles. Los thin clients existentes no fueron diseñados para PDAs y no tienen en cuenta problemas importantes de usabilidad en el contexto de dispositivos de factor de forma pequeño, lo que resulta en dificultades para navegar por el contenido web mostrado. Además, los clientes ligeros existentes son ineficaces para proporcionar movilidad fluida en la mezcla heterogénea de tamaños de pantalla y resoluciones de dispositivos. Si bien los clientes ligeros existentes ya pueden ofrecer un rendimiento más rápido que los navegadores web nativos de PDA al entregar contenido web HTML, no admiten de manera efectiva aplicaciones web auxiliares más intensivas en visualización, como videos multimedia, que cada vez son una parte integral del contenido web disponible. Para aprovechar todo el potencial de la <br>informática de cliente ligero</br> en la provisión de la web inalámbrica móvil en PDAs, hemos desarrollado pTHINC (PDA THin-client InterNet Computing). pTHINC se basa en nuestro trabajo previo en THINC [1] para proporcionar una arquitectura de cliente ligero para dispositivos móviles de mano. pTHINC virtualiza y redimensiona la pantalla en el servidor para entregar de manera eficiente actualizaciones de pantalla de alta fidelidad a una amplia gama de clientes diferentes, tamaños de pantalla y orientaciones de pantalla, incluidos los modos de visualización en vertical y horizontal. Esto permite a pTHINC proporcionar la misma sesión web persistente en diferentes dispositivos de cliente. Por ejemplo, pTHINC puede proporcionar la misma sesión de navegación web adecuadamente escalada para su visualización en una computadora de escritorio y una PDA, de modo que las mismas cookies, marcadores y otros metadatos estén disponibles continuamente en ambas máquinas simultáneamente. El enfoque de visualización virtual de pTHINC aprovecha la información semántica disponible en los comandos de visualización y el hardware de video del cliente para proporcionar mecanismos de visualización remota más eficientes que son cruciales para admitir aplicaciones web más intensivas en visualización. Dada la limitada resolución de pantalla en las PDA, pTHINC maximiza el uso del espacio de pantalla para la visualización remota al trasladar la funcionalidad de control de la pantalla a los botones de control de PDA fácilmente disponibles, mejorando la usabilidad del sistema. Hemos implementado pTHINC en Windows Mobile y demostrado que funciona de manera transparente con las aplicaciones existentes, sistemas de ventanas y sistemas operativos, y no requiere modificar, recompilar o volver a enlazar el software existente. Hemos evaluado cuantitativamente pTHINC frente a navegadores web PDA locales y otros enfoques de cliente ligero en dispositivos Pocket PC. Nuestros resultados experimentales demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero de PDA que soporta de manera efectiva aplicaciones esenciales de ayuda para el navegador, como la reproducción de video. Este documento presenta el diseño e implementación de pTHINC. La sección 2 describe el modelo de uso general y las características de usabilidad de pTHINC. La sección 3 presenta el diseño y la arquitectura del sistema de pTHINC. La sección 4 presenta resultados experimentales que miden el rendimiento de pTHINC en aplicaciones web y lo comparan con navegadores nativos de PDA y otros sistemas de cliente ligero de PDA populares. La sección 5 discute el trabajo relacionado. Finalmente, presentamos algunas observaciones finales. El MODELO DE USO DE pTHINC pTHINC es un sistema de cliente ligero que consiste en una aplicación de visualización de cliente simple que se ejecuta en la PDA y un servidor que se ejecuta en una PC estándar. El servidor aprovecha PCs más potentes para ejecutar navegadores web y otra lógica de aplicaciones. El cliente recibe la entrada del usuario desde el lápiz óptico y el teclado virtual de la PDA y los envía al servidor para pasarlos a las aplicaciones. Las actualizaciones de la pantalla son luego enviadas desde el servidor al cliente para mostrar al usuario. Cuando se inicia el cliente PDA pTHINC, se presenta al usuario una interfaz gráfica simple donde se pueden proporcionar información como la dirección y el puerto del servidor, la información de autenticación del usuario y la configuración de la sesión. pTHINC primero intenta conectarse al servidor y realizar el saludo necesario. Una vez que este proceso haya sido completado, pTHINC presenta al usuario la visualización más reciente de su sesión. Si la sesión no existe, se crea una nueva sesión. Las sesiones existentes pueden continuar sin problemas sin cambios en la configuración de la sesión o del servidor. A diferencia de otros sistemas de cliente ligero, pTHINC proporciona a un usuario un modelo de sesión web persistente en el que un usuario puede iniciar una sesión ejecutando un navegador web y aplicaciones asociadas en el servidor, luego desconectarse de esa sesión y volver a conectarse en cualquier momento. Cuando un usuario se reconecta a la sesión, todas las aplicaciones siguen funcionando desde donde el usuario las dejó, de modo que el usuario puede seguir trabajando como si nunca se hubiera desconectado. La capacidad de desconectarse y reconectarse a una sesión en cualquier momento es un beneficio importante para los usuarios de PDA inalámbricas móviles que pueden tener conectividad de red intermitente. El modelo de sesión web persistente de pTHINCs permite a un usuario reconectarse a una sesión web desde dispositivos distintos al que se inició originalmente la sesión web. Esto proporciona a los usuarios una movilidad fluida entre diferentes dispositivos. Si un usuario pierde su PDA, puede fácilmente usar otra PDA para acceder a su sesión web. Además, pTHINC permite a los usuarios utilizar dispositivos que no son PDA para acceder a sesiones web también. Un usuario puede acceder a la misma sesión web persistente en una PC de escritorio como en una PDA, lo que le permite al usuario utilizar la misma sesión web desde cualquier computadora. El modelo de sesión web persistente de pTHINCs aborda un problema clave encontrado por los usuarios de la web móvil, la falta de un entorno web común en diferentes computadoras. Los navegadores web a menudo almacenan información importante como marcadores, cookies e historial, lo que les permite funcionar de una manera mucho más útil. El problema que ocurre cuando un usuario se mueve entre computadoras es que estos datos, específicos de una instalación de un navegador web, no pueden moverse con el usuario. Además, los navegadores web a menudo necesitan aplicaciones auxiliares para procesar diferentes contenidos multimedia, y esas aplicaciones pueden no estar disponibles de manera consistente en todas las computadoras. pTHINC aborda este problema al permitir que un usuario utilice de forma remota el mismo entorno de navegador web y aplicaciones auxiliares desde cualquier computadora. Como resultado, pTHINC puede proporcionar un entorno de navegación web común y consistente para usuarios móviles en diferentes dispositivos sin requerirles intentar sincronizar repetidamente diferentes entornos de navegación web en múltiples máquinas. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC debe proporcionar mecanismos para admitir diferentes tamaños de pantalla y resoluciones. Con este fin, pTHINC proporciona una función de zoom que permite a un usuario acercar y alejar una pantalla y permite que la pantalla de una sesión web 144 Figura 1: teclas de acceso rápido de pTHINC se redimensione para adaptarse a la pantalla del dispositivo que se está utilizando. Por ejemplo, si el servidor está ejecutando una sesión web a 1024×768 pero el cliente es una PDA con una resolución de pantalla de 640×480, pTHINC redimensionará la pantalla del escritorio para que se ajuste a la pantalla más pequeña de la PDA. pTHINC proporciona al usuario de la PDA la opción de aumentar el tamaño de la pantalla haciendo zoom en diferentes partes de la pantalla. Los usuarios suelen estar familiarizados con el diseño general de los sitios web que visitan con frecuencia, y pueden aprovechar esta función de redimensionamiento para navegar mejor por las páginas web. Por ejemplo, un usuario puede alejarse de la pantalla para ver todo el contenido de la página y navegar por los hipervínculos, luego acercarse a una región de interés para obtener una mejor vista. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC también debe proporcionar mecanismos para admitir diferentes orientaciones de pantalla. En un entorno de escritorio, los usuarios suelen estar acostumbrados a tener las pantallas presentadas en modo horizontal, donde el ancho de la pantalla es mayor que su altura. Sin embargo, en un entorno de PDA, la elección no siempre es obvia. Algunos usuarios pueden preferir tener la pantalla en modo retrato, ya que es más fácil sostener el dispositivo en sus manos, mientras que otros pueden preferir el modo paisaje para minimizar la cantidad de desplazamiento lateral necesario para ver una página web. Para adaptarse a las preferencias de los usuarios de PDA, pTHINC proporciona una función de orientación que le permite rotar la pantalla de forma fluida entre el modo horizontal y vertical. El modo de paisaje es particularmente útil para los usuarios de pTHINC que acceden con frecuencia a sus sesiones web tanto en dispositivos de escritorio como en PDA, proporcionando a esos usuarios el mismo ajuste de paisaje familiar en diferentes dispositivos. Dado que el espacio de pantalla es un recurso relativamente escaso en las PDAs, pTHINC se ejecuta en modo de pantalla completa para maximizar el área de pantalla disponible para mostrar la sesión web. Para poder utilizar toda la pantalla en la PDA y aún así permitir al usuario controlar e interactuar con ella, pTHINC reutiliza los botones de acceso directo típicos que se encuentran en las PDAs para realizar todas las funciones de control disponibles para el usuario. Los botones utilizados por pTHINC no requieren ningún cambio en el entorno del sistema operativo; simplemente son interceptados por la aplicación cliente de pTHINC cuando se presionan. La Figura 1 muestra cómo pTHINC utiliza los botones de acceso directo para proporcionar una navegación sencilla y mejorar la experiencia del usuario en general. Estos botones no son específicos del dispositivo, y el diseño mostrado es común en dispositivos PocketPC ampliamente utilizados. pTHINC proporciona seis accesos directos para apoyar su modelo de uso: • Rotar pantalla: El botón de grabación en el borde izquierdo se utiliza para rotar la pantalla entre modo retrato y modo paisaje cada vez que se presiona el botón. • Alejar: El botón más a la izquierda en la parte inferior delantera se utiliza para alejar la visualización de la sesión web proporcionando una vista general de la sesión web. • Acercar: El segundo botón más a la izquierda en la parte inferior delantera se utiliza para acercar la visualización de la sesión web para ver más claramente el contenido de interés. • Desplazamiento direccional: El botón central en la parte inferior delantera se utiliza para desplazarse alrededor de la visualización utilizando un solo botón de control de una manera que ya es familiar para los usuarios de PDA. Esta función es particularmente útil cuando el usuario ha ampliado una región de la pantalla de tal manera que solo una parte de la pantalla es visible en la pantalla. • Mostrar/Ocultar Teclado: El segundo botón más a la derecha en la parte inferior frontal se utiliza para mostrar un teclado virtual dibujado en la pantalla para dispositivos que no tienen teclado físico. El teclado virtual utiliza mecanismos estándar del sistema operativo de PDA, proporcionando portabilidad entre diferentes entornos de PDA. • Cerrar sesión: El botón más a la derecha en la parte inferior frontal se utiliza para desconectarse de la sesión de pTHINC. pTHINC utiliza la pantalla táctil de la PDA, el lápiz óptico y mecanismos estándar de interfaz de usuario para proporcionar una metáfora de punto y clic de la interfaz de usuario similar a la proporcionada por el ratón en un entorno de computación de escritorio tradicional. pTHINC no utiliza un cursor ya que los entornos de PDA no lo proporcionan. En cambio, un usuario puede usar el lápiz táctil para tocar diferentes secciones de la pantalla táctil y señalar el enfoque de entrada. Un toque único en la pantalla táctil genera un evento de clic de ratón correspondiente. Un doble toque en la pantalla táctil genera un evento de doble clic del ratón correspondiente. pTHINC proporciona emulación de ratón de dos botones al usar el lápiz óptico para presionar la pantalla durante un segundo y generar un clic derecho del ratón. Todas estas acciones son idénticas a la forma en que los usuarios ya interactúan con las aplicaciones de PDA en el entorno común de PocketPC. En la navegación web, los usuarios pueden hacer clic en hipervínculos y enfocarse en cuadros de entrada simplemente tocando el área de interés deseada en la pantalla. A diferencia de los navegadores web PDA locales y otras aplicaciones PDA, pTHINC aprovecha metáforas de interfaz de usuario de escritorio más potentes para permitir a los usuarios manipular múltiples ventanas de aplicación abiertas en lugar de estar limitados a una sola ventana de aplicación en un momento dado. Esto proporciona una mayor flexibilidad de navegación más allá de lo que está actualmente disponible en los dispositivos PDA. Similar a un entorno de escritorio, las ventanas del navegador y otras ventanas de aplicaciones pueden ser movidas al presionar y arrastrar el lápiz óptico de manera similar a un ratón. 3. La arquitectura del sistema pTHINC se basa en la arquitectura de visualización remota THINC para proporcionar un sistema de cliente ligero para PDAs. pTHINC virtualiza la visualización en el servidor aprovechando la capa de abstracción del dispositivo de video, que se encuentra por debajo del servidor de ventanas y por encima del framebuffer. Este es un nivel de dispositivo bien definido y de bajo nivel que depende del dispositivo y expone el hardware de video al sistema de visualización. pTHINC logra esto a través de un controlador de pantalla virtual simple que intercepta comandos de dibujo, los empaqueta y los envía a través de la red. Mientras que otros enfoques de cliente ligero interceptan comandos de visualización en otras capas del subsistema de visualización, el enfoque de virtualización de pantalla de pTHINC proporciona algunos beneficios clave para admitir eficientemente a los clientes de PDA. Por ejemplo, interceptar comandos de visualización en una capa superior entre aplicaciones y el sistema de ventanas, como se hace en X [17], requiere replicar y ejecutar una gran cantidad de funcionalidades en la PDA que tradicionalmente son proporcionadas por el sistema de ventanas de escritorio. Dada la magnitud y complejidad de los sistemas de ventanas tradicionales, intentar replicar esta funcionalidad en el entorno restringido de una PDA habría resultado ser una tarea desafiante, y quizás inviable. Además, las aplicaciones y el sistema de ventanas a menudo requieren una sincronización precisa en su funcionamiento, y imponer una red inalámbrica entre ellos al ejecutar las aplicaciones en el servidor y el sistema de ventanas en el cliente degradaría significativamente el rendimiento. Por otro lado, interceptar en una capa inferior extrayendo píxeles del framebuffer a medida que se renderizan proporciona una solución simple que requiere muy poca funcionalidad en el cliente de PDA, pero también puede resultar en un rendimiento degradado. La razón es que para cuando el servidor de visualización remota intenta enviar actualizaciones de pantalla, ha perdido toda la información semántica que podría haberle ayudado a codificar de manera eficiente, y debe recurrir a utilizar un mecanismo de codificación genérico y costoso en el servidor, así como un mecanismo de decodificación potencialmente costoso en el cliente de PDA limitado. A diferencia de los enfoques de intercepción de alto y bajo nivel, el enfoque de pTHINCs de interceptar en el controlador del dispositivo proporciona un equilibrio efectivo entre la simplicidad del cliente y del servidor, y la capacidad de codificar y decodificar de manera eficiente las actualizaciones de pantalla. Al utilizar un enfoque de visualización virtual de bajo nivel, pTHINC puede codificar de manera eficiente los comandos de visualización de la aplicación utilizando solo un pequeño conjunto de comandos de bajo nivel. En un entorno de PDA, este conjunto de comandos proporciona un componente crucial para mantener la simplicidad del cliente en el entorno de PDA con recursos limitados. Los comandos de visualización se muestran en la Tabla 1 y funcionan de la siguiente manera. COPY instruye al cliente a copiar una región de la pantalla desde su framebuffer local a otra ubicación. Este comando mejora la experiencia del usuario al acelerar el desplazamiento y el movimiento de ventanas opacas sin necesidad de reenviar datos de pantalla desde el servidor. SFILL, PFILL y BITMAP son comandos que pintan una región de tamaño fijo en la pantalla. Son útiles para acelerar la visualización de fondos de ventanas sólidas, patrones de escritorio, fondos de páginas web, dibujo de texto y ciertas operaciones en programas de manipulación de gráficos. SFILL llena una región considerable en la pantalla con un solo color. PFILL replica una baldosa sobre una región de la pantalla. BITMAP realiza un relleno utilizando un mapa de bits de unos y ceros como un estipulado para aplicar un color de primer plano y de fondo. Finalmente, RAW se utiliza para transmitir datos de píxeles no codificados que se mostrarán textualmente en una región de la pantalla. Este comando se invoca como último recurso si el servidor no puede emplear ningún otro comando, y es el único comando que puede ser comprimido para mitigar su impacto en el ancho de banda de la red. pTHINC entrega sus comandos utilizando un mecanismo de actualización de servidor-push no bloqueante, donde tan pronto como se generan actualizaciones de pantalla en el servidor, se envían al cliente. Los clientes no están obligados a solicitar explícitamente actualizaciones de pantalla, minimizando así el impacto que la típica variabilidad de la latencia de la red inalámbrica puede tener en la capacidad de respuesta del sistema. Teniendo en cuenta que los recursos Descripción de Comando COPY Copiar un área de búfer de fotogramas en coordenadas especificadas SFILL Rellenar un área con un valor de color de píxel dado PFILL Azulejar un área con un patrón de píxeles dado BITMAP Rellenar una región usando un patrón de bits RAW Mostrar datos de píxeles en bruto en una ubicación dada Tabla 1: Comandos de visualización del protocolo pTHINC. Las PDAs y las redes inalámbricas limitadas pueden no ser capaces de mantenerse al día con un servidor rápido que genera una gran cantidad de actualizaciones, pTHINC es capaz de fusionar, recortar y descartar actualizaciones automáticamente si se produce pérdida o congestión de red, o si el cliente no puede mantenerse al día con la velocidad de las actualizaciones. Este tipo de comportamiento resulta crucial en un entorno de navegación web, donde por ejemplo, una página puede ser redibujada varias veces mientras se renderiza al vuelo por el navegador. En este caso, la PDA solo recibirá y mostrará el resultado final, que claramente es todo lo que al usuario le interesa ver. pTHINC prioriza la entrega de actualizaciones a la PDA utilizando un programador de actualizaciones preemptivo de Tamaño Restante Más Corto Primero (SRSF). SRSF es análogo a la programación de Tiempo de Procesamiento Restante más Corto, la cual se sabe que es óptima para minimizar el tiempo medio de respuesta en un sistema interactivo. En un entorno de navegación web, los trabajos cortos están asociados con el texto y los componentes básicos de diseño de página, como el fondo de las páginas, que son contenido web crítico para el usuario. Por otro lado, los trabajos grandes suelen ser elementos de embellecimiento de menor prioridad, o, incluso peor, banners y anuncios de página web, los cuales tienen un valor cuestionable para el usuario mientras navega por la página. Usando SRSF, pTHINC puede maximizar la utilización del ancho de banda relativamente escaso disponible en la conexión inalámbrica entre la PDA y el servidor. 3.1 Gestión de la Pantalla Para permitir a los usuarios acceder con la misma facilidad a su navegador web y aplicaciones auxiliares desde una computadora de escritorio en casa como desde una PDA mientras están en movimiento, pTHINC proporciona un mecanismo de redimensionamiento para hacer zoom dentro y fuera de la pantalla de una sesión web. El redimensionamiento de pTHINC es completamente compatible con el servidor, no con el cliente. El servidor vuelve a muestrear las actualizaciones para que se ajusten al área de visualización de las PDAs antes de ser transmitidas por la red. pTHINC utiliza el algoritmo de remuestreo de Fants para redimensionar las actualizaciones de píxeles. Esto proporciona actualizaciones suaves y visualmente agradables con un antialiasing adecuado y solo requiere modestos recursos computacionales. El enfoque de redimensionamiento de pTHINCs tiene varias ventajas. Primero, permite al PDA aprovechar la vastamente superior potencia computacional del servidor para utilizar algoritmos de re-muestreo de alta calidad y producir actualizaciones de mayor calidad para que el PDA las muestre. Segundo, cambiar el tamaño de la pantalla no se traduce en requisitos adicionales de recursos para la PDA, ya que no necesita realizar ningún trabajo adicional. Finalmente, se logra una mejor utilización de la red inalámbrica ya que al reescalar las actualizaciones se reducen sus requisitos de ancho de banda. Para permitir a los usuarios orientar sus pantallas en una PDA y así proporcionar una experiencia visual que se ajuste mejor a las preferencias del usuario y al diseño de páginas web o aplicaciones, pTHINC proporciona un mecanismo de rotación de pantalla para alternar entre los modos de visualización horizontal y vertical. La rotación de pantalla de pTHINC es completamente compatible con el cliente, no con el servidor. pTHINC no recalcula explícitamente la geometría de las actualizaciones de pantalla para realizar la rotación, lo cual sería computacionalmente costoso. En cambio, pTHINC simplemente cambia la forma en que los datos se copian en el framebuffer para cambiar entre los modos de visualización. Cuando está en modo retrato, los datos se copian a lo largo de las filas del framebuffer de izquierda a derecha. Cuando se encuentra en modo horizontal, los datos se copian a lo largo de las columnas del framebuffer de arriba hacia abajo. Estas técnicas muy rápidas y simples reemplazan un conjunto de operaciones de copia por otro y no imponen ningún sobrecosto de rendimiento. pTHINC proporciona su propio mecanismo de rotación para soportar una amplia gama de dispositivos sin imponer requisitos adicionales de funciones en la PDA. Aunque algunos dispositivos PDA más nuevos ofrecen soporte nativo para diferentes orientaciones, este mecanismo no es dinámico y requiere que el usuario rote toda la interfaz de usuario de la PDA antes de iniciar el cliente pTHINC. Windows Mobile proporciona mecanismos de API nativos para que las aplicaciones de PDA puedan rotar su interfaz de usuario sobre la marcha, pero estos mecanismos ofrecen un rendimiento deficiente y una calidad de visualización baja, ya que la rotación se realiza de manera ingenua y no es completamente precisa. 3.2 Reproducción de video El video se ha convertido gradualmente en una parte integral de la World Wide Web, y su presencia solo seguirá aumentando. Los sitios web de hoy en día no solo utilizan gráficos animados y flash para presentar el contenido web de manera atractiva, sino que también utilizan video en streaming para enriquecer la interfaz web. Los usuarios pueden ver noticias pregrabadas y en vivo en CNN, ver los momentos más destacados deportivos en ESPN e incluso buscar a través de una gran colección de videos en Google Video. Para permitir que las aplicaciones proporcionen una reproducción de video eficiente, se han creado interfaces en los sistemas de visualización que permiten a los controladores de dispositivos de video exponer sus capacidades de hardware a las aplicaciones. pTHINC aprovecha estas interfaces y su enfoque de controlador de dispositivo virtual para proporcionar un puente virtual entre el cliente remoto y su hardware y las aplicaciones, y admitir de manera transparente la reproducción de video. Sobre esta arquitectura, pTHINC utiliza el espacio de color YUV para codificar el contenido de video, lo cual proporciona una serie de beneficios. Primero, se ha vuelto cada vez más común que el hardware de video de las PDA admita nativamente YUV y pueda realizar la conversión del espacio de color y el escalado automáticamente. Como resultado, pTHINC puede proporcionar reproducción de video a pantalla completa sin afectar el rendimiento. Segundo, el uso de YUV permite una representación más eficiente de los datos RGB sin pérdida de calidad, aprovechando la capacidad de los ojos humanos para distinguir mejor las diferencias en brillo que en color. En particular, pTHINC utiliza el formato YV12, que permite codificar datos de color RGB completo utilizando solo 12 bits por píxel. Tercero, los datos YUV se producen como uno de los últimos pasos del proceso de decodificación de la mayoría de los códecs de video, lo que permite a pTHINC proporcionar la reproducción de video de una manera independiente del formato. Finalmente, aunque el hardware de video de las PDAs no pueda acelerar la reproducción, el proceso de conversión de espacio de color es lo suficientemente simple como para no imponer requisitos poco razonables en la PDA. Un ejemplo más concreto de cómo pTHINC aprovecha el hardware de video PDA para admitir la reproducción de video se puede ver en nuestra implementación de prototipo en la popular PDA Dell Axim X51v, que está equipada con el acelerador multimedia Intel 2700G. En este caso, pTHINC crea un búfer fuera de pantalla en la memoria de video y escribe y lee desde esta región de memoria datos en formato YV12. Cuando llega un nuevo fotograma de video, los datos de video se copian desde el búfer a una superficie superpuesta en la memoria de video, que es independiente de la superficie normal utilizada para el dibujo tradicional. A medida que los datos YV12 se colocan en la superposición, el acelerador de Intel realiza automáticamente la conversión de espacio de color y el escalado. Al utilizar la superficie de superposición, pTHINC no necesita volver a dibujar la pantalla una vez que la reproducción de video ha terminado, ya que la superficie superpuesta no se ve afectada. Además, las regiones de superposición específicas pueden ser manipuladas aprovechando el hardware de video, por ejemplo, para realizar interpolación lineal de hardware y suavizar el fotograma para mostrarlo a pantalla completa, y para realizar rotación automática cuando el cliente se ejecuta en modo horizontal. 4. RESULTADOS EXPERIMENTALES Hemos implementado un prototipo de pTHINC que ejecuta el cliente en dispositivos Pocket PC basados en Windows Mobile ampliamente utilizados y el servidor en sistemas operativos tanto Windows como Linux. Para demostrar su eficacia en el soporte de aplicaciones web inalámbricas móviles, hemos medido su rendimiento en aplicaciones web. Presentamos resultados experimentales sobre diferentes dispositivos PDA para dos aplicaciones web populares, navegar por páginas web y reproducir contenido de video desde la web. Comparamos pTHINC con aplicaciones web nativas que se ejecutan localmente en la PDA para demostrar la mejora que pTHINC puede proporcionar sobre el enfoque tradicional de cliente pesado. También comparamos pTHINC con tres de los clientes ligeros más utilizados que pueden ejecutarse en PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] y VNC (Virtual Network Computing) [16]. Seguimos la práctica común y nos referimos a Citrix MetaFrameXP y Microsoft Remote Desktop por sus respectivos protocolos de visualización remota, ICA (Independent Computing Architecture) y RDP (Remote Desktop Protocol). 4.1 Plataforma de Pruebas Experimental Realizamos nuestros experimentos web utilizando dos PDA Pocket PC inalámbricas diferentes en un entorno de prueba de red Wi-Fi aislado, como se muestra en la Figura 2. El banco de pruebas consistía en dos dispositivos cliente PDA, un monitor de paquetes, un servidor de cliente ligero y un servidor web. Excepto por las PDAs, todas las demás máquinas eran servidores IBM Netfinity 4500R con procesadores duales Intel PIII de 933 MHz y 512 MB de RAM, y estaban conectadas en una red FastEthernet de 100 Mbps conmutada. El servidor web utilizado fue Apache 1.3.27, el emulador de red fue NISTNet 2.0.12 y el monitor de paquetes fue Ethereal 0.10.9. Los clientes de PDA se conectaron al banco de pruebas a través de un punto de acceso inalámbrico Lucent Orinoco AP-2000 802.11b. Todos los experimentos utilizando la red inalámbrica se llevaron a cabo a una distancia de diez pies del punto de acceso, por lo que consideramos que la cantidad de pérdida de paquetes era insignificante en nuestros experimentos. Se utilizaron dos PDA Pocket PC para proporcionar resultados en modelos antiguos y menos potentes, así como en modelos más nuevos de mayor rendimiento. El modelo anterior era un Dell Axim X5 con 147 Cliente 1024×768 640×480 Profundidad Cambio de tamaño Clip RDP no sí 8 bits no sí VNC sí sí 16 bits no no ICA sí sí 16 bits sí no pTHINC sí sí 24 bits sí no Tabla 2: Configuración del banco de pruebas de cliente ligero con un CPU Intel XScale PXA255 de 400 MHz y 64 MB de RAM ejecutando Windows Mobile 2003 y una tarjeta Dell TrueMobile 1180 de 2.4 GHz CompactFlash para redes inalámbricas. El modelo más nuevo era un Dell Axim X51v con un procesador Intel XScale XPA270 de 624 MHz y 64 MB de RAM ejecutando Windows Mobile 5.0 y con red inalámbrica 802.11b integrada. El X51v tiene un acelerador multimedia Intel 2700G con 16MB de memoria de video. Ambas PDAs son capaces de mostrar colores de 16 bits pero tienen diferentes tamaños de pantalla y resoluciones de visualización. El X5 tiene una pantalla diagonal de 3.5 pulgadas con una resolución de 240×320. El X51v tiene una pantalla diagonal de 3.7 pulgadas con una resolución de 480×640. Los cuatro clientes ligeros que utilizamos admiten diferentes niveles de calidad de visualización, como se resume en la Tabla 2. El cliente de RDP solo admite una resolución de pantalla fija de 640×480 en el servidor con una profundidad de color de 8 bits, mientras que otras plataformas ofrecen niveles más altos de calidad de visualización. Para proporcionar una comparación justa en todas las plataformas, realizamos nuestros experimentos con sesiones de cliente ligero configuradas para dos posibles resoluciones, 1024×768 y 640×480. Tanto ICA como VNC se configuraron para usar la resolución nativa de PDA con una profundidad de color de 16 bits. El prototipo actual de pTHINC utiliza color de 24 bits directamente y el cliente reduce la resolución de las actualizaciones al nivel de color de 16 bits disponible en la PDA. RDP se configuró utilizando solo una profundidad de color de 8 bits ya que no admite ninguna profundidad de color mejor. Dado que tanto pTHINC como ICA ofrecen la capacidad de ver la pantalla redimensionada para ajustarse a la pantalla, medimos ambos clientes con y sin la pantalla redimensionada para ajustarse a la pantalla del PDA. Cada cliente ligero fue probado utilizando el modo de paisaje en lugar del modo retrato cuando estaba disponible. Todos los sistemas que se ejecutan en el X51v podrían funcionar en modo horizontal porque el hardware proporciona una función de modo horizontal. Sin embargo, el X5 no proporciona esta funcionalidad. Solo pTHINC admite directamente el modo paisaje, por lo que era el único sistema que podía ejecutarse en modo paisaje tanto en el X5 como en el X51v. Para proporcionar una comparación justa, también estandarizamos en hardware y sistemas operativos comunes siempre que sea posible. Todos los sistemas utilizaron el servidor Netfinity como servidor de cliente ligero. Para los dos sistemas diseñados para servidores Windows, ICA y RDP, ejecutamos Windows Server 2003 en el servidor. Para los otros sistemas que admiten servidores basados en X, ejecutamos la distribución Debian Linux Inestable con el kernel Linux 2.6.10 en el servidor. Utilizamos las últimas versiones de servidores de cliente ligero disponibles en cada plataforma en el momento de nuestros experimentos, a saber, Citrix MetaFrame XP Server para Windows Feature Release 3, Microsoft Remote Desktop integrado en Windows XP y Windows 2003 utilizando RDP 5.2, y VNC 4.0.4.2. Para los benchmarks de aplicaciones, utilizamos dos benchmarks de aplicaciones web para nuestros experimentos basados en dos escenarios de aplicación comunes, navegación por páginas web y reproducción de contenido de video desde la web. Dado que muchos sistemas de cliente ligero, incluidos dos de los probados, son cerrados y propietarios, medimos su rendimiento de manera no invasiva capturando el tráfico de red con un monitor de paquetes y utilizando una variante de benchmarking en cámara lenta [13] previamente desarrollada para medir el rendimiento de clientes ligeros en entornos de PDA [10]. Esta metodología de medición tiene en cuenta tanto el desacoplamiento de la visualización que puede ocurrir entre el cliente y el servidor en sistemas de cliente ligero, como el tiempo de procesamiento del cliente, que puede ser significativo en el caso de las PDAs. Para medir el rendimiento de la navegación web, utilizamos un benchmark de navegación web basado en la Prueba de Carga de Páginas de Texto Web del conjunto de benchmarks Ziff-Davis i-Bench [7]. El punto de referencia consiste en la carga controlada de 55 páginas desde el servidor web mediante JavaScript. Las páginas contienen tanto texto como gráficos, con páginas de diferentes tamaños. Los gráficos son imágenes incrustadas en formatos GIF y JPEG. El benchmark original i-Bench fue modificado para pruebas de rendimiento en cámara lenta al introducir retrasos de varios segundos entre las páginas utilizando JavaScript. Luego se realizaron dos pruebas, una en la que se agregaron retrasos entre cada página, y otra en la que las páginas se cargaron continuamente sin esperar a que se mostraran en el cliente. En la primera prueba, los retrasos se ajustaron lo suficiente en cada caso para garantizar que cada página pudiera ser recibida y mostrada en el cliente por completo sin solapamiento temporal en la transferencia de los datos pertenecientes a dos páginas consecutivas. Utilizamos el monitor de paquetes para registrar el tráfico de paquetes para cada ejecución de la prueba de referencia, luego utilizamos las marcas de tiempo del primer y último paquete en la traza para obtener nuestras medidas de latencia [10]. El monitor de paquetes también registró la cantidad de datos transmitidos entre el cliente y el servidor. La proporción entre el tráfico de datos en las dos pruebas produce un factor de escala. Este factor de escala muestra la pérdida de datos entre el servidor y el cliente debido a la incapacidad del cliente para procesar los datos lo suficientemente rápido. El producto del factor de escala con la medición de latencia produce la verdadera latencia teniendo en cuenta el tiempo de procesamiento del cliente. Para ejecutar la prueba de navegación web, utilizamos Mozilla Firefox 1.0.4 en el servidor de cliente ligero para los clientes ligeros, y Windows Internet Explorer (IE) Mobile para 2003 y Mobile para 5.0 para los navegadores nativos en las PDAs X5 y X51v, respectivamente. En todos los casos, el navegador web utilizado se ajustó para ocupar toda la región de visualización disponible. Para medir el rendimiento de reproducción de video, utilizamos un banco de pruebas de video que consistía en reproducir un clip de video MPEG-1 de 34.75 segundos que contenía una mezcla de noticias y programación de entretenimiento a resolución de pantalla completa. El videoclip tiene un tamaño de 5.11 MB y consta de 834 cuadros de píxeles de 352x240 con una velocidad de cuadro ideal de 24 cuadros por segundo. Medimos el rendimiento del video utilizando pruebas de referencia en cámara lenta al monitorear el tráfico de paquetes resultante a dos velocidades de reproducción, 1 cuadro por segundo (fps) y 24 fps, y comparando los resultados para determinar los retrasos en la reproducción y las caídas de cuadros que ocurren a 24 fps para medir la calidad general del video [13]. Por ejemplo, el 100% de calidad significa que todos los fotogramas del video se reprodujeron a velocidad en tiempo real. Por otro lado, una calidad del 50% podría significar que se eliminó la mitad de los datos del video, o que el clip tardó el doble en reproducirse a pesar de que se mostró toda la información del video. Para ejecutar la prueba de rendimiento de video, utilizamos Windows Media Player 9 para servidores de clientes ligeros basados en Windows, MPlayer 1.0 pre 6 para servidores de clientes ligeros basados en X, y Windows Media Player 9 Mobile y 10 Mobile para los reproductores de video nativos que se ejecutan localmente en las PDAs X5 y X51v, respectivamente. En todos los casos, el reproductor de video utilizado se dimensionó para llenar toda la región de visualización disponible. Las Figuras 3 y 4 muestran los resultados de ejecutar la prueba de navegación por la web. Para cada plataforma, mostramos resultados de hasta cuatro configuraciones diferentes, dos en el X5 y dos en el X51v, dependiendo de si cada configuración era compatible. Sin embargo, no todas las plataformas podrían admitir todas las configuraciones. El navegador local solo se ejecuta a la resolución de pantalla de la PDA, 480×680 o menos para el X51v y el X5. RDP solo funciona a 640×480. Ninguna plataforma podía soportar una resolución de pantalla de 1024×768. ICA solo funcionaba en el X5 y no podía ejecutarse en el X51v porque no era compatible con Windows Mobile 5. La Figura 3 muestra la latencia promedio por página web para cada plataforma. pTHINC proporciona la latencia promedio más baja en la navegación web en ambas PDAs. En el X5, pTHINC funciona hasta 70 veces mejor que otros sistemas de cliente ligero y 8 veces mejor que el navegador local. En el X51v, pTHINC funciona hasta 80 veces mejor que otros sistemas de cliente ligero y 7 veces mejor que el navegador nativo. De hecho, todos los clientes ligeros excepto VNC superan al navegador local de PDA, demostrando los beneficios de rendimiento del enfoque de cliente ligero. Los estudios de usabilidad han demostrado que las páginas web deben tardar menos de un segundo en descargarse para que el usuario experimente una navegación web ininterrumpida [14]. Las mediciones muestran que solo los clientes delgados ofrecen latencias de página web de menos de un segundo. Por el contrario, el navegador local requiere más de 3 segundos en promedio por página web. El navegador local funciona peor ya que necesita ejecutar un navegador web más limitado para procesar el HTML, JavaScript y realizar todo el renderizado utilizando las capacidades limitadas de la PDA. Los clientes ligeros pueden aprovecharse de hardware de servidor más rápido y un navegador web altamente optimizado para procesar el contenido web mucho más rápido. La Figura 3 muestra que RDP es la plataforma más rápida después de pTHINC. Sin embargo, RDP solo puede ejecutarse a una resolución fija de 640×480 y una profundidad de color de 8 bits. Además, RDP también recorta la pantalla al tamaño de la pantalla de la PDA para no tener que enviar actualizaciones que no son visibles en la pantalla de la PDA. Esto proporciona un beneficio de rendimiento siempre y cuando el resto del contenido web no se visualice, pero degrada el rendimiento cuando un usuario desplaza la pantalla para ver otro contenido web. RDP logra su rendimiento con una calidad de visualización significativamente inferior en comparación con otros clientes ligeros y con recortes adicionales en la visualización que no son utilizados por otros sistemas. Como resultado, el rendimiento de RDP por sí solo no proporciona una comparación completa con las otras plataformas. Por el contrario, pTHINC ofrece el mejor rendimiento al mismo tiempo que proporciona una calidad de visualización igual o mejor que los otros sistemas. Dado que VNC e ICA ofrecen una calidad de visualización similar a pTHINC, estos sistemas proporcionan una comparación más justa de diferentes enfoques de cliente ligero. ICA funciona peor en parte porque utiliza primitivas de visualización de nivel superior que requieren costos adicionales de procesamiento por parte del cliente. VNC funciona peor en parte porque pierde datos de visualización debido a su mecanismo de entrega de cliente-pull y debido a los costos de procesamiento del cliente en descomprimir primitivas de píxeles crudos. En ambos casos, su rendimiento se vio limitado en parte porque sus clientes de PDA no podían mantenerse al ritmo al que se mostraban las páginas web. La Figura 3 también muestra las medidas para aquellos clientes ligeros que admiten redimensionar la pantalla para ajustarse a la pantalla de la PDA, a saber, ICA y pTHINC. El redimensionamiento requiere un procesamiento adicional, lo que resulta en latencias promedio más lentas de las páginas web. Las mediciones muestran que el retraso adicional incurrido por ICA al cambiar el tamaño es mucho más sustancial que para pTHINC. ICA realiza redimensionamiento en el cliente PDA más lento. Por el contrario, pTHINC aprovecha el servidor más potente para redimensionar, reduciendo la diferencia de rendimiento entre redimensionar y no redimensionar. A diferencia de ICA, pTHINC es capaz de proporcionar latencias de descarga de páginas web en menos de un segundo en ambos casos. La Figura 4 muestra los datos transferidos en KB por página al ejecutar la versión de cámara lenta de las pruebas. Todas las plataformas tienen requisitos modestos de transferencia de datos de aproximadamente 100 KB por página o menos. Esto está bien dentro de la capacidad de ancho de banda de las redes Wi-Fi. Las mediciones muestran que el navegador local no transfiere la menor cantidad de datos. Esto es sorprendente ya que HTML suele considerarse una representación muy compacta del contenido. En cambio, RDP es la plataforma más eficiente en ancho de banda, en gran parte debido a que utiliza solo una profundidad de color de 8 bits y recorte de pantalla para no transferir la página web completa al cliente. En general, pTHINC tiene los mayores requisitos de datos, ligeramente más que VNC. Esto se debe en gran medida a la falta de soporte nativo de los prototipos actuales de pTHINC para datos de color de 16 bits en el protocolo de comunicación. Sin embargo, este resultado también destaca el rendimiento de pTHINCs, ya que es más rápido que todos los demás sistemas incluso al transferir más datos. Además, dado que los modelos más recientes de PDA admiten colores completos de 24 bits, estos resultados indican que pTHINC seguirá proporcionando un buen rendimiento en la navegación web. Dado que la usabilidad y la calidad de la pantalla son tan importantes como el rendimiento, las Figuras 5 a 8 comparan capturas de pantalla de los diferentes clientes ligeros al mostrar una página web, en este caso del popular sitio de noticias de la BBC. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo paisaje. Figura 5: Captura de pantalla del navegador: RDP 640x480. Figura 6: Captura de pantalla del navegador: VNC 1024x768. Figura 7: Captura de pantalla del navegador: ICA redimensionado 1024x768. Figura 8: Captura de pantalla del navegador: pTHINC redimensionado 1024x768 utilizando la configuración de resolución de pantalla máxima para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Si bien las capturas de pantalla carecen de la fidelidad visual de la pantalla real del dispositivo, se pueden hacer varias observaciones. La Figura 5 muestra que RDP no admite el modo de pantalla completa y desperdicia mucho espacio en pantalla para controles y elementos de la interfaz de usuario, lo que obliga al usuario a desplazarse para acceder a todo el contenido de la sesión de navegación web. La Figura 6 muestra que VNC aprovecha mejor el espacio de la pantalla y ofrece una mejor calidad de visualización, pero aún obliga al usuario a desplazarse para ver la página web debido a la falta de soporte para redimensionar. La Figura 7 muestra la capacidad de ICA para mostrar la página web completa dada su soporte de redimensionamiento, pero su falta de capacidad en modo paisaje y su algoritmo de redimensionamiento deficiente comprometen significativamente la calidad de visualización. Por el contrario, la Figura 8 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de pantalla completa de alta calidad del ancho completo de la página web. pTHINC maximiza toda la región de visualización moviendo todos los controles a los botones de la PDA. Además, pTHINC aprovecha la potencia computacional del servidor para utilizar un algoritmo de redimensionamiento de alta calidad y ajustar la pantalla al tamaño de la PDA sin un sobrecoste significativo. Las figuras 9 y 10 muestran los resultados de ejecutar la prueba de reproducción de video. Para cada plataforma excepto ICA, mostramos resultados para una configuración X5 y X51v. ICA no pudo ejecutarse en el X51v como se mencionó anteriormente. Las mediciones se realizaron utilizando configuraciones que reflejaban el entorno desde el cual un usuario tendría que acceder a una sesión web tanto desde una computadora de escritorio como desde una PDA. Por lo tanto, se utilizó una resolución de pantalla del servidor de 1024×768 siempre que fuera posible y el video se mostró a pantalla completa. La resolución de pantalla de RDP se limitaba a 640×480, como se mencionó anteriormente. Dado que ver toda la pantalla del video es la única opción realmente utilizable, redimensionamos la pantalla para que se ajustara a la pantalla de la PDA en aquellas plataformas que admitían esta función, a saber, ICA y pTHINC. La Figura 9 muestra la calidad de video para cada plataforma. pTHINC es el único cliente ligero capaz de proporcionar una calidad de reproducción de video perfecta, similar al reproductor de video nativo de PDA. Todos los demás clientes ligeros ofrecen una calidad de video muy pobre. Con la excepción de RDP en el X51v que proporcionó una calidad de video inaceptable del 35%, ninguno de los otros sistemas pudo siquiera alcanzar el 10% de calidad de video. VNC e ICA tienen la peor calidad al 8% en el dispositivo X5. El soporte de video nativo de pTHINCs permite un rendimiento de video superior, mientras que otros clientes ligeros sufren de su incapacidad para distinguir el video de las actualizaciones normales de la pantalla. Intentan aplicar algoritmos de compresión ineficaces y costosos en los datos de video y no pueden mantenerse al día con la corriente de actualizaciones generadas, lo que resulta en cuadros omitidos o largos tiempos de reproducción. VNC se ve aún más afectado por su modelo de actualización de cliente-pull porque los fotogramas de video se generan más rápido que la velocidad a la que el cliente puede procesar y enviar solicitudes al servidor para obtener la siguiente actualización de pantalla. La Figura 10 muestra los datos totales transferidos durante la reproducción de video a pantalla completa para cada sistema. El reproductor nativo es la plataforma más eficiente en ancho de banda, enviando menos de 6 MB de datos, lo que corresponde a aproximadamente 1.2 Mbps de ancho de banda. La calidad de video al 100% de pTHINCs requiere alrededor de 25 MB de datos, lo que corresponde a un uso de ancho de banda de menos de 6 Mbps. Mientras que los otros clientes ligeros envían menos datos que THINC, lo hacen porque están eliminando datos de video, lo que resulta en una calidad de video degradada. Las figuras 11 a 14 comparan capturas de pantalla de los distintos clientes ligeros al mostrar el videoclip. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo horizontal utilizando la configuración de resolución máxima de pantalla para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Las figuras 11 y 12 muestran que RDP y VNC no pueden mostrar el cuadro completo del video en la pantalla de la PDA. RDP desperdicia espacio en pantalla para los elementos de la interfaz de usuario y VNC solo muestra la esquina superior del marco de video en la pantalla. La Figura 13 muestra que el ICA proporciona redimensionamiento para mostrar todo el fotograma del video, pero no redimensiona proporcionalmente los datos del video, lo que resulta en artefactos de visualización extraños. Por el contrario, la Figura 14 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de alta calidad a pantalla completa de todo el fotograma del video. pTHINC ofrece una visualización de video visualmente más atractiva que RDP, VNC o ICA. 5. TRABAJOS RELACIONADOS Varios estudios han examinado el rendimiento de la navegación web en la <br>computación de cliente ligero</br> [13, 19, 10]. La capacidad de los clientes ligeros para mejorar el rendimiento de la navegación web en PDAs inalámbricas fue demostrada cuantitativamente por primera vez en un estudio previo realizado por uno de los autores [10]. Este estudio demostró que los clientes ligeros pueden ofrecer tanto un rendimiento de navegación web más rápido como una mayor funcionalidad de navegación web. El estudio consideró una amplia gama de contenido web, incluido el contenido de sistemas de información médica. Nuestro trabajo se basa en este estudio previo y considera temas importantes como la usabilidad de los clientes ligeros existentes en entornos de PDA, los compromisos entre la usabilidad y el rendimiento de los clientes ligeros, el rendimiento en diferentes dispositivos de PDA y el rendimiento de los clientes ligeros en aplicaciones web comunes como el video. Se han desarrollado muchos clientes ligeros y algunos tienen clientes de PDA, incluyendo Remote Desktop de Microsoft [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5] y Tarantella [18]. Estos sistemas fueron diseñados inicialmente para computadoras de escritorio y adaptados posteriormente para asistentes digitales personales (PDA). A diferencia de pTHINC, no abordan los problemas clave de arquitectura del sistema y usabilidad importantes para las PDAs. Esto limita la calidad de visualización, el rendimiento del sistema, el espacio de pantalla disponible y la usabilidad general en PDAs. pTHINC se basa en trabajos anteriores de dos de los autores sobre THINC [1], ampliando la arquitectura del servidor e introduciendo una interfaz de cliente y un modelo de uso para admitir eficientemente dispositivos PDA en aplicaciones web móviles. Otros enfoques para mejorar el rendimiento de la navegación web inalámbrica móvil se han centrado en el uso de proxies de transcodificación y almacenamiento en caché en conjunto con el modelo de cliente pesado [11, 9, 4, 8]. Trabajan mediante el envío de funcionalidades a proxies externos y utilizando aplicaciones de navegación especializadas en el dispositivo PDA que se comunican con el proxy. Nuestro enfoque de cliente ligero difiere fundamentalmente de estos enfoques de cliente pesado al trasladar toda la lógica del navegador web al servidor, aprovechando las inversiones existentes en navegadores web de escritorio y aplicaciones auxiliares para funcionar de manera integrada con los sistemas de producción sin necesidad de configuraciones adicionales de proxy o modificaciones en el navegador web. Con la aparición de la navegación web en dispositivos con pantallas pequeñas, los sitios web han sido rediseñados utilizando mecanismos como WAP y se han desarrollado navegadores web nativos especializados para adaptarse a las necesidades de estos dispositivos. Recientemente, Opera ha desarrollado el navegador web Opera Mini [15], que utiliza un enfoque similar al modelo de cliente ligero para proporcionar acceso a través de una serie de dispositivos móviles que normalmente no podrían ejecutar un navegador web. En lugar de requerir que el dispositivo procese las páginas web, utiliza un servidor remoto para preprocesar la página antes de enviarla al teléfono. CONCLUSIONES Hemos introducido pTHINC, una arquitectura de cliente ligero para PDAs inalámbricas. pTHINC proporciona mecanismos arquitectónicos y de usabilidad clave como el redimensionamiento de pantalla en el lado del servidor, rotación de pantalla en el lado del cliente utilizando técnicas simples de copia, soporte de video YUV, y maximización del espacio de pantalla para actualizaciones de visualización y aprovechamiento de los botones de control existentes en las PDAs para elementos de la interfaz de usuario. pTHINC soporta de manera transparente navegadores de escritorio tradicionales y sus aplicaciones auxiliares en dispositivos PDA y computadoras de escritorio, brindando a los usuarios móviles acceso ubicuo a un entorno web consistente, personalizado y completo en dispositivos heterogéneos. Hemos implementado pTHINC y medido su rendimiento en aplicaciones web en comparación con los sistemas de cliente ligero existentes y las aplicaciones web nativas. Nuestros resultados en múltiples dispositivos móviles inalámbricos demuestran que pTHINC ofrece un rendimiento de navegación web hasta 80 veces mejor que los sistemas de cliente ligero existentes, y 8 veces mejor que un navegador PDA nativo. Además, pTHINC es el único cliente ligero de PDA 151 Figura 11: Captura de pantalla de video: RDP 640x480 Figura 12: Captura de pantalla de video: VNC 1024x768 Figura 13: Captura de pantalla de video: ICA redimensionado 1024x768 Figura 14: Captura de pantalla de video: pTHINC redimensionado 1024x768 que proporciona de manera transparente la reproducción de video a pantalla completa y a velocidad de cuadro completa, haciendo que los sitios web con contenido multimedia sean accesibles para los usuarios de la web móvil. 7. AGRADECIMIENTOS Este trabajo fue apoyado en parte por las subvenciones NSF ITR CCR0219943 y CNS-0426623, y un premio IBM SUR. 8. REFERENCIAS [1] R. Baratto, L. Kim y J. Nieh. THINC: Una arquitectura de visualización virtual para la <br>computación de cliente ligero</br>. ",
            "candidates": [],
            "error": [
                [
                    "cliente ligero",
                    "cliente ligero",
                    "informática de cliente ligero",
                    "computación de cliente ligero",
                    "computación de cliente ligero"
                ]
            ]
        },
        "remote display": {
            "translated_key": "visualización remota",
            "is_in_text": true,
            "original_annotated_sentences": [
                "pTHINC: A Thin-Client Architecture for Mobile Wireless Web Joeng Kim, Ricardo A. Baratto, and Jason Nieh Department of Computer Science Columbia University, New York, NY, USA {jk2438, ricardo, nieh}@cs.columbia.edu ABSTRACT Although web applications are gaining popularity on mobile wireless PDAs, web browsers on these systems can be quite slow and often lack adequate functionality to access many web sites.",
                "We have developed pTHINC, a PDA thinclient solution that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide high-fidelity display and seamless mobility across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available screen resolution for application display.",
                "We have implemented pTHINC on Windows Mobile and evaluated its performance on mobile wireless devices.",
                "Our results compared to local PDA web browsers and other thin-client approaches demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "Categories and Subject Descriptors: C.2.4 ComputerCommunication-Networks: Distributed Systems - client/ server General Terms: Design, Experimentation, Performance 1.",
                "INTRODUCTION The increasing ubiquity of wireless networks and decreasing cost of hardware is fueling a proliferation of mobile wireless handheld devices, both as standalone wireless Personal Digital Assistants (PDA) and popular integrated PDA/cell phone devices.",
                "These devices are enabling new forms of mobile computing and communication.",
                "Service providers are leveraging these devices to deliver pervasive web access, and mobile web users already often use these devices to access web-enabled information such as news, email, and localized travel guides and maps.",
                "It is likely that within a few years, most of the devices accessing the web will be mobile.",
                "Users typically access web content by running a web browser and associated helper applications locally on the PDA.",
                "Although native web browsers exist for PDAs, they deliver subpar performance and have a much smaller feature set and more limited functionality than their desktop computing counterparts [10].",
                "As a result, PDA web browsers are often not able to display web content from web sites that leverage more advanced web technologies to deliver a richer web experience.",
                "This fundamental problem arises for two reasons.",
                "First, because PDAs have a completely different hardware/software environment from traditional desktop computers, web applications need to be rewritten and customized for PDAs if at all possible, duplicating development costs.",
                "Because the desktop application market is larger and more mature, most development effort generally ends up being spent on desktop applications, resulting in greater functionality and performance than their PDA counterparts.",
                "Second, PDAs have a more resource constrained environment than traditional desktop computers to provide a smaller form factor and longer battery life.",
                "Desktop web browsers are large, complex applications that are unable to run on a PDA.",
                "Instead, developers are forced to significantly strip down these web browsers to provide a usable PDA web browser, thereby crippling PDA browser functionality.",
                "Thin-client computing provides an alternative approach for enabling pervasive web access from handheld devices.",
                "A thin-client computing system consists of a server and a client that communicate over a network using a <br>remote display</br> protocol.",
                "The protocol enables graphical displays to be virtualized and served across a network to a client device, while application logic is executed on the server.",
                "Using the <br>remote display</br> protocol, the client transmits user input to the server, and the server returns screen updates of the applications from the server to the client.",
                "Using a thin-client model for mobile handheld devices, PDAs can become simple stateless clients that leverage the remote server capabilities to execute web browsers and other helper applications.",
                "The thin-client model provides several important benefits for mobile wireless web.",
                "First, standard desktop web applications can be used to deliver web content to PDAs without rewriting or adapting applications to execute on a PDA, reducing development costs and leveraging existing software investments.",
                "Second, complex web applications can be executed on powerful servers instead of running stripped down versions on more resource constrained PDAs, providing greater functionality and better performance [10].",
                "Third, web applications can take advantage of servers with faster networks and better connectivity, further boosting application performance.",
                "Fourth, PDAs can be even simpler devices since they do not need to perform complex application logic, potentially reducing energy consumption and extend143 ing battery life.",
                "Finally, PDA thin clients can be essentially stateless appliances that do not need to be backed up or restored, require almost no maintenance or upgrades, and do not store any sensitive data that can be lost or stolen.",
                "This model provides a viable avenue for medical organizations to comply with HIPAA regulations [6] while embracing mobile handhelds in their day to day operations.",
                "Despite these potential advantages, thin clients have been unable to provide the full range of these benefits in delivering web applications to mobile handheld devices.",
                "Existing thin clients were not designed for PDAs and do not account for important usability issues in the context of small form factor devices, resulting in difficulty in navigating displayed web content.",
                "Furthermore, existing thin clients are ineffective at providing seamless mobility across the heterogeneous mix of device display sizes and resolutions.",
                "While existing thin clients can already provide faster performance than native PDA web browsers in delivering HTML web content, they do not effectively support more display-intensive web helper applications such as multimedia video, which is increasingly an integral part of available web content.",
                "To harness the full potential of thin-client computing in providing mobile wireless web on PDAs, we have developed pTHINC (PDA THin-client InterNet Computing). pTHINC builds on our previous work on THINC [1] to provide a thinclient architecture for mobile handheld devices. pTHINC virtualizes and resizes the display on the server to efficiently deliver high-fidelity screen updates to a broad range of different clients, screen sizes, and screen orientations, including both portrait and landscape viewing modes.",
                "This enables pTHINC to provide the same persistent web session across different client devices.",
                "For example, pTHINC can provide the same web browsing session appropriately scaled for display on a desktop computer and a PDA so that the same cookies, bookmarks, and other meta-data are continuously available on both machines simultaneously. pTHINCs virtual display approach leverages semantic information available in display commands, and client-side video hardware to provide more efficient <br>remote display</br> mechanisms that are crucial for supporting more display-intensive web applications.",
                "Given limited display resolution on PDAs, pTHINC maximizes the use of screen real estate for <br>remote display</br> by moving control functionality from the screen to readily available PDA control buttons, improving system usability.",
                "We have implemented pTHINC on Windows Mobile and demonstrated that it works transparently with existing applications, window systems, and operating systems, and does not require modifying, recompiling, or relinking existing software.",
                "We have quantitatively evaluated pTHINC against local PDA web browsers and other thin-client approaches on Pocket PC devices.",
                "Our experimental results demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "This paper presents the design and implementation of pTHINC.",
                "Section 2 describes the overall usage model and usability characteristics of pTHINC.",
                "Section 3 presents the design and system architecture of pTHINC.",
                "Section 4 presents experimental results measuring the performance of pTHINC on web applications and comparing it against native PDA browsers and other popular PDA thin-client systems.",
                "Section 5 discusses related work.",
                "Finally, we present some concluding remarks. 2.",
                "PTHINC USAGE MODEL pTHINC is a thin-client system that consists of a simple client viewer application that runs on the PDA and a server that runs on a commodity PC.",
                "The server leverages more powerful PCs to to run web browsers and other application logic.",
                "The client takes user input from the PDA stylus and virtual keyboard and sends them to the server to pass to the applications.",
                "Screen updates are then sent back from the server to the client for display to the user.",
                "When the pTHINC PDA client is started, the user is presented with a simple graphical interface where information such as server address and port, user authentication information, and session settings can be provided. pTHINC first attempts to connect to the server and perform the necessary handshaking.",
                "Once this process has been completed, pTHINC presents the user with the most recent display of his session.",
                "If the session does not exist, a new session is created.",
                "Existing sessions can be seamlessly continued without changes in the session setting or server configuration.",
                "Unlike other thin-client systems, pTHINC provides a user with a persistent web session model in which a user can launch a session running a web browser and associated applications at the server, then disconnect from that session and reconnect to it again anytime.",
                "When a user reconnects to the session, all of the applications continue running where the user left off, so that the user can continue working as though he or she never disconnected.",
                "The ability to disconnect and reconnect to a session at anytime is an important benefit for mobile wireless PDA users which may have intermittent network connectivity. pTHINCs persistent web session model enables a user to reconnect to a web session from devices other than the one on which the web session was originally initiated.",
                "This provides users with seamless mobility across different devices.",
                "If a user loses his PDA, he can easily use another PDA to access his web session.",
                "Furthermore, pTHINC allows users to use non-PDA devices to access web sessions as well.",
                "A user can access the same persistent web session on a desktop PC as on a PDA, enabling a user to use the same web session from any computer. pTHINCs persistent web session model addresses a key problem encountered by mobile web users, the lack of a common web environment across computers.",
                "Web browsers often store important information such as bookmarks, cookies, and history, which enable them to function in a much more useful manner.",
                "The problem that occurs when a user moves between computers is that this data, which is specific to a web browser installation, cannot move with the user.",
                "Furthermore, web browsers often need helper applications to process different media content, and those applications may not be consistently available across all computers. pTHINC addresses this problem by enabling a user to remotely use the exact same web browser environment and helper applications from any computer.",
                "As a result, pTHINC can provide a common, consistent web browsing environment for mobile users across different devices without requiring them to attempt to repeatedly synchronize different web browsing environments across multiple machines.",
                "To enable a user to access the same web session on different devices, pTHINC must provide mechanisms to support different display sizes and resolutions.",
                "Toward this end, pTHINC provides a zoom feature that enables a user to zoom in and out of a display and allows the display of a web 144 Figure 1: pTHINC shortcut keys session to be resized to fit the screen of the device being used.",
                "For example, if the server is running a web session at 1024×768 but the client is a PDA with a display resolution of 640×480, pTHINC will resize the desktop display to fit the full display in the smaller screen of the PDA. pTHINC provides the PDA user with the option to increase the size of the display by zooming in to different parts of the display.",
                "Users are often familiar with the general layout of commonly visited websites, and are able to leverage this resizing feature to better navigate through web pages.",
                "For example, a user can zoom out of the display to view the entire page content and navigate hyperlinks, then zoom in to a region of interest for a better view.",
                "To enable a user to access the same web session on different devices, pTHINC must also provide mechanisms to support different display orientations.",
                "In a desktop environment, users are typically accustomed to having displays presented in landscape mode where the screen width is larger than its height.",
                "However, in a PDA environment, the choice is not always obvious.",
                "Some users may prefer having the display in portrait mode, as it is easier to hold the device in their hands, while others may prefer landscape mode in order to minimize the amount of side-scrolling necessary to view a web page.",
                "To accommodate PDA user preferences, pTHINC provides an orientation feature that enables it to seamless rotate the display between landscape and portrait mode.",
                "The landscape mode is particularly useful for pTHINC users who frequently access their web sessions on both desktop and PDA devices, providing those users with the same familiar landscape setting across different devices.",
                "Because screen space is a relatively scarce resource on PDAs, pTHINC runs in fullscreen mode to maximize the screen area available to display the web session.",
                "To be able to use all of the screen on the PDA and still allow the user to control and interact with it, pTHINC reuses the typical shortcut buttons found on PDAs to perform all the control functions available to the user.",
                "The buttons used by pTHINC do not require any OS environment changes; they are simply intercepted by the pTHINC client application when they are pressed.",
                "Figure 1 shows how pTHINC utilizes the shortcut buttons to provide easy navigation and improve the overall user experience.",
                "These buttons are not device specific, and the layout shown is common to widelyused PocketPC devices. pTHINC provides six shortcuts to support its usage model: • Rotate Screen: The record button on the left edge is used to rotate the screen between portrait and landscape mode each time the button is pressed. • Zoom Out: The leftmost button on the bottom front is used to zoom out the display of the web session providing a birds eye view of the web session. • Zoom In: The second leftmost button on the bottom front is used to zoom in the display of the web session to more clearly view content of interest. • Directional Scroll: The middle button on the bottom front is used to scroll around the display using a single control button in a way that is already familiar to PDA users.",
                "This feature is particularly useful when the user has zoomed in to a region of the display such that only part of the display is visible on the screen. • Show/Hide Keyboard: The second rightmost button on the bottom front is used to bring up a virtual keyboard drawn on the screen for devices which have no physical keyboard.",
                "The virtual keyboard uses standard PDA OS mechanisms, providing portability across different PDA environments. • Close Session: The rightmost button on the bottom front is used to disconnect from the pTHINC session. pTHINC uses the PDA touch screen, stylus, and standard user interface mechanisms to provide a user interface pointand-click metaphor similar to that provided by the mouse in a traditional desktop computing environment. pTHINC does not use a cursor since PDA environments do not provide one.",
                "Instead, a user can use the stylus to tap on different sections of the touch screen to indicate input focus.",
                "A single tap on the touch screen generates a corresponding single click mouse event.",
                "A double tap on the touch screen generates a corresponding double click mouse event. pTHINC provides two-button mouse emulation by using the stylus to press down on the screen for one second to generate a right mouse click.",
                "All of these actions are identical to the way users already interact with PDA applications in the common PocketPC environment.",
                "In web browsing, users can click on hyperlinks and focus on input boxes by simply tapping on the desired screen area of interest.",
                "Unlike local PDA web browsers and other PDA applications, pTHINC leverages more powerful desktop user interface metaphors to enable users to manipulate multiple open application windows instead of being limited to a single application window at any given moment.",
                "This provides increased browsing flexibility beyond what is currently available on PDA devices.",
                "Similar to a desktop environment, browser windows and other application windows can be moved around by pressing down and dragging the stylus similar to a mouse. 3.",
                "PTHINC SYSTEM ARCHITECTURE pTHINC builds on the THINC [1] <br>remote display</br> architecture to provide a thin-client system for PDAs. pTHINC virtualizes the display at the server by leveraging the video device abstraction layer, which sits below the window server and above the framebuffer.",
                "This is a well-defined, low-level, device-dependent layer that exposes the video hardware to the display system. pTHINC accomplishes this through a simple virtual display driver that intercepts drawing commands, packetizes, and sends them over the network. 145 While other thin-client approaches intercept display commands at other layers of the display subsystem, pTHINCs display virtualization approach provides some key benefits in efficiently supporting PDA clients.",
                "For example, intercepting display commands at a higher layer between applications and the window system as is done by X [17] requires replicating and running a great deal of functionality on the PDA that is traditionally provided by the desktop window system.",
                "Given both the size and complexity of traditional window systems, attempting to replicate this functionality in the restricted PDA environment would have proven to be a daunting, and perhaps unfeasible task.",
                "Furthermore, applications and the window system often require tight synchronization in their operation and imposing a wireless network between them by running the applications on the server and the window system on the client would significantly degrade performance.",
                "On the other hand, intercepting at a lower layer by extracting pixels out of the framebuffer as they are rendered provides a simple solution that requires very little functionality on the PDA client, but can also result in degraded performance.",
                "The reason is that by the time the <br>remote display</br> server attempts to send screen updates, it has lost all semantic information that may have helped it encode efficiently, and it must resort to using a generic and expensive encoding mechanism on the server, as well as a potentially expensive decoding mechanism on the limited PDA client.",
                "In contrast to both the high and low level interception approaches, pTHINCs approach of intercepting at the device driver provides an effective balance between client and server simplicity, and the ability to efficiently encode and decode screen updates.",
                "By using a low-level virtual display approach, pTHINC can efficiently encode application display commands using only a small set of low-level commands.",
                "In a PDA environment, this set of commands provides a crucial component in maintaining the simplicity of the client in the resourceconstrained PDA environment.",
                "The display commands are shown in Table 1, and work as follows.",
                "COPY instructs the client to copy a region of the screen from its local framebuffer to another location.",
                "This command improves the user experience by accelerating scrolling and opaque window movement without having to resend screen data from the server.",
                "SFILL, PFILL, and BITMAP are commands that paint a fixed-size region on the screen.",
                "They are useful for accelerating the display of solid window backgrounds, desktop patterns, backgrounds of web pages, text drawing, and certain operations in graphics manipulation programs.",
                "SFILL fills a sizable region on the screen with a single color.",
                "PFILL replicates a tile over a screen region.",
                "BITMAP performs a fill using a bitmap of ones and zeros as a stipple to apply a foreground and background color.",
                "Finally, RAW is used to transmit unencoded pixel data to be displayed verbatim on a region of the screen.",
                "This command is invoked as a last resort if the server is unable to employ any other command, and it is the only command that may be compressed to mitigate its impact on network bandwidth. pTHINC delivers its commands using a non-blocking, serverpush update mechanism, where as soon as display updates are generated on the server, they are sent to the client.",
                "Clients are not required to explicitly request display updates, thus minimizing the impact that the typical varying network latency of wireless links may have on the responsiveness of the system.",
                "Keeping in mind that resource Command Description COPY Copy a frame buffer area to specified coordinates SFILL Fill an area with a given pixel color value PFILL Tile an area with a given pixel pattern BITMAP Fill a region using a bit pattern RAW Display raw pixel data at a given location Table 1: pTHINC Protocol Display Commands constrained PDAs and wireless networks may not be able to keep up with a fast server generating a large number of updates, pTHINC is able to coalesce, clip, and discard updates automatically if network loss or congestion occurs, or the client cannot keep up with the rate of updates.",
                "This type of behavior proves crucial in a web browsing environment, where for example, a page may be redrawn multiple times as it is rendered on the fly by the browser.",
                "In this case, the PDA will only receive and render the final result, which clearly is all the user is interesting in seeing. pTHINC prioritizes the delivery of updates to the PDA using a Shortest-Remaining-Size-First (SRSF) preemptive update scheduler.",
                "SRSF is analogous to Shortest-RemainingProcessing-Time scheduling, which is known to be optimal for minimizing mean response time in an interactive system.",
                "In a web browsing environment, short jobs are associated with text and basic page layout components such as the pages background, which are critical web content for the user.",
                "On the other hand, large jobs are often lower priority beautifying elements, or, even worse, web page banners and advertisements, which are of questionable value to the user as he or she is browsing the page.",
                "Using SRSF, pTHINC is able to maximize the utilization of the relatively scarce bandwidth available on the wireless connection between the PDA and the server. 3.1 Display Management To enable users to just as easily access their web browser and helper applications from a desktop computer at home as from a PDA while on the road, pTHINC provides a resize mechanism to zoom in and out of the display of a web session. pTHINC resizing is completely supported by the server, not the client.",
                "The server resamples updates to fit within the PDAs viewport before they are transmitted over the network. pTHINC uses Fants resampling algorithm to resize pixel updates.",
                "This provides smooth, visually pleasing updates with properly antialiasing and has only modest computational requirements. pTHINCs resizing approach has a number of advantages.",
                "First, it allows the PDA to leverage the vastly superior computational power of the server to use high quality resampling algorithms and produce higher quality updates for the PDA to display.",
                "Second, resizing the screen does not translate into additional resource requirements for the PDA, since it does not need to perform any additional work.",
                "Finally, better utilization of the wireless network is attained since rescaling the updates reduces their bandwidth requirements.",
                "To enable users to orient their displays on a PDA to provide a viewing experience that best accommodates user preferences and the layout of web pages or applications, pTHINC provides a display rotation mechanism to switch between landscape and portrait viewing modes. pTHINC display rotation is completely supported by the client, not the server. pTHINC does not explicitly recalculate the ge146 ometry of display updates to perform rotation, which would be computationally expensive.",
                "Instead, pTHINC simply changes the way data is copied into the framebuffer to switch between display modes.",
                "When in portrait mode, data is copied along the rows of the framebuffer from left to right.",
                "When in landscape mode, data is copied along the columns of the framebuffer from top to bottom.",
                "These very fast and simple techniques replace one set of copy operations with another and impose no performance overhead. pTHINC provides its own rotation mechanism to support a wide range of devices without imposing additional feature requirements on the PDA.",
                "Although some newer PDA devices provide native support for different orientations, this mechanism is not dynamic and requires the user to rotate the PDAs entire user interface before starting the pTHINC client.",
                "Windows Mobile provides native API mechanisms for PDA applications to rotate their UI on the fly, but these mechanisms deliver poor performance and display quality as the rotation is performed naively and is not completely accurate. 3.2 Video Playback Video has gradually become an integral part of the World Wide Web, and its presence will only continue to increase.",
                "Web sites today not only use animated graphics and flash to deliver web content in an attractive manner, but also utilize streaming video to enrich the web interface.",
                "Users are able to view pre-recorded and live newscasts on CNN, watch sports highlights on ESPN, and even search through large collection of videos on Google Video.",
                "To allow applications to provide efficient video playback, interfaces have been created in display systems that allow video device drivers to expose their hardware capabilities back to the applications. pTHINC takes advantage of these interfaces and its virtual device driver approach to provide a virtual bridge between the remote client and its hardware and the applications, and transparently support video playback.",
                "On top of this architecture, pTHINC uses the YUV colorspace to encode the video content, which provides a number of benefits.",
                "First, it has become increasingly common for PDA video hardware to natively support YUV and be able to perform the colorspace conversion and scaling automatically.",
                "As a result, pTHINC is able to provide fullscreen video playback without any performance hits.",
                "Second, the use of YUV allows for a more efficient representation of RGB data without loss of quality, by taking advantage of the human eyes ability to better distinguish differences in brightness than in color.",
                "In particular, pTHINC uses the YV12 format, which allows full color RGB data to be encoded using just 12 bits per pixel.",
                "Third, YUV data is produced as one of the last steps of the decoding process of most video codecs, allowing pTHINC to provide video playback in a manner that is format independent.",
                "Finally, even if the PDAs video hardware is unable to accelerate playback, the colorspace conversion process is simple enough that it does not impose unreasonable requirements on the PDA.",
                "A more concrete example of how pTHINC leverages the PDA video hardware to support video playback can be seen in our prototype implementation on the popular Dell Axim X51v PDA, which is equipped with the Intel 2700G multimedia accelerator.",
                "In this case, pTHINC creates an offscreen buffer in video memory and writes and reads from this memory region data on the YV12 format.",
                "When a new video frame arrives, video data is copied from the buffer to Figure 2: Experimental Testbed an overlay surface in video memory, which is independent of the normal surface used for traditional drawing.",
                "As the YV12 data is put onto the overlay, the Intel accelerator automatically performs both colorspace conversion and scaling.",
                "By using the overlay surface, pTHINC has no need to redraw the screen once video playback is over since the overlapped surface is unaffected.",
                "In addition, specific overlay regions can be manipulated by leveraging the video hardware, for example to perform hardware linear interpolation to smooth out the frame and display it fullscreen, and to do automatic rotation when the client runs in landscape mode. 4.",
                "EXPERIMENTAL RESULTS We have implemented a pTHINC prototype that runs the client on widely-used Windows Mobile-based Pocket PC devices and the server on both Windows and Linux operating systems.",
                "To demonstrate its effectiveness in supporting mobile wireless web applications, we have measured its performance on web applications.",
                "We present experimental results on different PDA devices for two popular web applications, browsing web pages and playing video content from the web.",
                "We compared pTHINC against native web applications running locally on the PDA to demonstrate the improvement that pTHINC can provide over the traditional fat-client approach.",
                "We also compared pTHINC against three of the most widely used thin clients that can run on PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] and VNC (Virtual Network Computing) [16].",
                "We follow common practice and refer to Citrix MetaFrameXP and Microsoft Remote Desktop by their respective <br>remote display</br> protocols, ICA (Independent Computing Architecture) and RDP (Remote Desktop Protocol). 4.1 Experimental Testbed We conducted our web experiments using two different wireless Pocket PC PDAs in an isolated Wi-Fi network testbed, as shown in Figure 2.",
                "The testbed consisted of two PDA client devices, a packet monitor, a thin-client server, and a web server.",
                "Except for the PDAs, all of the other machines were IBM Netfinity 4500R servers with dual 933 MHz Intel PIII CPUs and 512 MB RAM and were connected on a switched 100 Mbps FastEthernet network.",
                "The web server used was Apache 1.3.27, the network emulator was NISTNet 2.0.12, and the packet monitor was Ethereal 0.10.9.",
                "The PDA clients connected to the testbed through a 802.11b Lucent Orinoco AP-2000 wireless access point.",
                "All experiments using the wireless network were conducted within ten feet of the access point, so we considered the amount of packet loss to be negligible in our experiments.",
                "Two Pocket PC PDAs were used to provide results across both older, less powerful models and newer higher performance models.",
                "The older model was a Dell Axim X5 with 147 Client 1024×768 640×480 Depth Resize Clip RDP no yes 8-bit no yes VNC yes yes 16-bit no no ICA yes yes 16-bit yes no pTHINC yes yes 24-bit yes no Table 2: Thin-client Testbed Configuration Setting a 400 MHz Intel XScale PXA255 CPU and 64 MB RAM running Windows Mobile 2003 and a Dell TrueMobile 1180 2.4Ghz CompactFlash card for wireless networking.",
                "The newer model was a Dell Axim X51v with a 624 MHz Intel XScale XPA270 CPU and 64 MB RAM running Windows Mobile 5.0 and integrated 802.11b wireless networking.",
                "The X51v has an Intel 2700G multimedia accelerator with 16MB video memory.",
                "Both PDAs are capable of 16-bit color but have different screen sizes and display resolutions.",
                "The X5 has a 3.5 inch diagonal screen with 240×320 resolution.",
                "The X51v has a 3.7 inch diagonal screen with 480×640.",
                "The four thin clients that we used support different levels of display quality as summarized in Table 2.",
                "The RDP client only supports a fixed 640×480 display resolution on the server with 8-bit color depth, while other platforms provide higher levels of display quality.",
                "To provide a fair comparison across all platforms, we conducted our experiments with thin-client sessions configured for two possible resolutions, 1024×768 and 640×480.",
                "Both ICA and VNC were configured to use the native PDA resolution of 16-bit color depth.",
                "The current pTHINC prototype uses 24-bit color directly and the client downsamples updates to the 16-bit color depth available on the PDA.",
                "RDP was configured using only 8-bit color depth since it does not support any better color depth.",
                "Since both pTHINC and ICA provide the ability to view the display resized to fit the screen, we measured both clients with and without the display resized to fit the PDA screen.",
                "Each thin client was tested using landscape rather than portrait mode when available.",
                "All systems run on the X51v could run in landscape mode because the hardware provides a landscape mode feature.",
                "However, the X5 does not provide this functionality.",
                "Only pTHINC directly supports landscape mode, so it was the only system that could run in landscape mode on both the X5 and X51v.",
                "To provide a fair comparison, we also standardized on common hardware and operating systems whenever possible.",
                "All of the systems used the Netfinity server as the thin-client server.",
                "For the two systems designed for Windows servers, ICA and RDP, we ran Windows 2003 Server on the server.",
                "For the other systems which support X-based servers, VNC and pTHINC, we ran the Debian Linux Unstable distribution with the Linux 2.6.10 kernel on the server.",
                "We used the latest thin-client server versions available on each platform at the time of our experiments, namely Citrix MetaFrame XP Server for Windows Feature Release 3, Microsoft Remote Desktop built into Windows XP and Windows 2003 using RDP 5.2, and VNC 4.0. 4.2 Application Benchmarks We used two web application benchmarks for our experiments based on two common application scenarios, browsing web pages and playing video content from the web.",
                "Since many thin-client systems including two of the ones tested are closed and proprietary, we measured their performance in a noninvasive manner by capturing network traffic with a packet monitor and using a variant of slow-motion benchmarking [13] previously developed to measure thin-client performance in PDA environments [10].",
                "This measurement methodology accounts for both the display decoupling that can occur between client and server in thin-client systems as well as client processing time, which may be significant in the case of PDAs.",
                "To measure web browsing performance, we used a web browsing benchmark based on the Web Text Page Load Test from the Ziff-Davis i-Bench benchmark suite [7].",
                "The benchmark consists of JavaScript controlled load of 55 pages from the web server.",
                "The pages contain both text and graphics with pages varying in size.",
                "The graphics are embedded images in GIF and JPEG formats.",
                "The original i-Bench benchmark was modified for slow-motion benchmarking by introducing delays of several seconds between the pages using JavaScript.",
                "Then two tests were run, one where delays where added between each page, and one where pages where loaded continuously without waiting for them to be displayed on the client.",
                "In the first test, delays were sufficiently adjusted in each case to ensure that each page could be received and displayed on the client completely without temporal overlap in transferring the data belonging to two consecutive pages.",
                "We used the packet monitor to record the packet traffic for each run of the benchmark, then used the timestamps of the first and last packet in the trace to obtain our latency measures [10].",
                "The packet monitor also recorded the amount of data transmitted between the client and the server.",
                "The ratio between the data traffic in the two tests yields a scale factor.",
                "This scale factor shows the loss of data between the server and the client due to inability of the client to process the data quickly enough.",
                "The product of the scale factor with the latency measurement produces the true latency accounting for client processing time.",
                "To run the web browsing benchmark, we used Mozilla Firefox 1.0.4 running on the thin-client server for the thin clients, and Windows Internet Explorer (IE) Mobile for 2003 and Mobile for 5.0 for the native browsers on the X5 and X51v PDAs, respectively.",
                "In all cases, the web browser used was sized to fill the entire display region available.",
                "To measure video playback performance, we used a video benchmark that consisted of playing a 34.75s MPEG-1 video clip containing a mix of news and entertainment programming at full-screen resolution.",
                "The video clip is 5.11 MB and consists of 834 352x240 pixel frames with an ideal frame rate of 24 frames/sec.",
                "We measured video performance using slow-motion benchmarking by monitoring resulting packet traffic at two playback rates, 1 frames/second (fps) and 24 fps, and comparing the results to determine playback delays and frame drops that occur at 24 fps to measure overall video quality [13].",
                "For example, 100% quality means that all video frames were played at real-time speed.",
                "On the other hand, 50% quality could mean that half the video data was dropped, or that the clip took twice as long to play even though all of the video data was displayed.",
                "To run the video benchmark, we used Windows Media Player 9 for Windows-based thin-client servers, MPlayer 1.0 pre 6 for X-based thin-client servers, and Windows Media Player 9 Mobile and 10 Mobile for the native video players running locally on the X5 and X51v PDAs, respectively.",
                "In all cases, the video player used was sized to fill the entire display region available. 4.3 Measurements Figures 3 and 4 show the results of running the web brows148 0 1 10 100 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL Latency(s) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 3: Browsing Benchmark: Average Page Latency ing benchmark.",
                "For each platform, we show results for up to four different configurations, two on the X5 and two on the X51v, depending on whether each configuration was supported.",
                "However, not all platforms could support all configurations.",
                "The local browser only runs at the display resolution of the PDA, 480×680 or less for the X51v and the X5.",
                "RDP only runs at 640×480.",
                "Neither platform could support 1024×768 display resolution.",
                "ICA only ran on the X5 and could not run on the X51v because it did not work on Windows Mobile 5.",
                "Figure 3 shows the average latency per web page for each platform. pTHINC provides the lowest average web browsing latency on both PDAs.",
                "On the X5, pTHINC performs up to 70 times better than other thin-client systems and 8 times better than the local browser.",
                "On the X51v, pTHINC performs up to 80 times better than other thin-client systems and 7 times better than the native browser.",
                "In fact, all of the thin clients except VNC outperform the local PDA browser, demonstrating the performance benefits of the thin-client approach.",
                "Usability studies have shown that web pages should take less than one second to download for the user to experience an uninterrupted web browsing experience [14].",
                "The measurements show that only the thin clients deliver subsecond web page latencies.",
                "In contrast, the local browser requires more than 3 seconds on average per web page.",
                "The local browser performs worse since it needs to run a more limited web browser to process the HTML, JavaScript, and do all the rendering using the limited capabilities of the PDA.",
                "The thin clients can take advantage of faster server hardware and a highly tuned web browser to process the web content much faster.",
                "Figure 3 shows that RDP is the next fastest platform after pTHINC.",
                "However, RDP is only able to run at a fixed resolution of 640×480 and 8-bit color depth.",
                "Furthermore, RDP also clips the display to the size of the PDA screen so that it does not need to send updates that are not visible on the PDA screen.",
                "This provides a performance benefit assuming the remaining web content is not viewed, but degrades performance when a user scrolls around the display to view other web content.",
                "RDP achieves its performance with significantly lower display quality compared to the other thin clients and with additional display clipping not used by other systems.",
                "As a result, RDP performance alone does not provide a complete comparison with the other platforms.",
                "In contrast, pTHINC provides the fastest performance while at the same time providing equal or better display quality than the other systems. 0 1 10 100 1000 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL DataSize(KB) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 4: Browsing Benchmark: Average Page Data Transferred Since VNC and ICA provide similar display quality to pTHINC, these systems provide a more fair comparison of different thin-client approaches.",
                "ICA performs worse in part because it uses higher-level display primitives that require additional client processing costs.",
                "VNC performs worse in part because it loses display data due to its client-pull delivery mechanism and because of the client processing costs in decompressing raw pixel primitives.",
                "In both cases, their performance was limited in part because their PDA clients were unable to keep up with the rate at which web pages were being displayed.",
                "Figure 3 also shows measurements for those thin clients that support resizing the display to fit the PDA screen, namely ICA and pTHINC.",
                "Resizing requires additional processing, which results in slower average web page latencies.",
                "The measurements show that the additional delay incurred by ICA when resizing versus not resizing is much more substantial than for pTHINC.",
                "ICA performs resizing on the slower PDA client.",
                "In contrast, pTHINC leverage the more powerful server to do resizing, reducing the performance difference between resizing and not resizing.",
                "Unlike ICA, pTHINC is able to provide subsecond web page download latencies in both cases.",
                "Figure 4 shows the data transferred in KB per page when running the slow-motion version of the tests.",
                "All of the platforms have modest data transfer requirements of roughly 100 KB per page or less.",
                "This is well within the bandwidth capacity of Wi-Fi networks.",
                "The measurements show that the local browser does not transfer the least amount of data.",
                "This is surprising as HTML is often considered to be a very compact representation of content.",
                "Instead, RDP is the most bandwidth efficient platform, largely as a result of using only 8-bit color depth and screen clipping so that it does not transfer the entire web page to the client. pTHINC overall has the largest data requirements, slightly more than VNC.",
                "This is largely a result of the current pTHINC prototypes lack of native support for 16-bit color data in the wire protocol.",
                "However, this result also highlights pTHINCs performance as it is faster than all other systems even while transferring more data.",
                "Furthermore, as newer PDA models support full 24-bit color, these results indicate that pTHINC will continue to provide good web browsing performance.",
                "Since display usability and quality are as important as performance, Figures 5 to 8 compare screenshots of the different thin clients when displaying a web page, in this case from the popular BBC news website.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode 149 Figure 5: Browser Screenshot: RDP 640x480 Figure 6: Browser Screenshot: VNC 1024x768 Figure 7: Browser Screenshot: ICA Resized 1024x768 Figure 8: Browser Screenshot: pTHINC Resized 1024x768 using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "While the screenshots lack the visual fidelity of the actual device display, several observations can be made.",
                "Figure 5 shows that RDP does not support fullscreen mode and wastes lots of screen space for controls and UI elements, requiring the user to scroll around in order to access the full contents of the web browsing session.",
                "Figure 6 shows that VNC makes better use of the screen space and provides better display quality, but still forces the user to scroll around to view the web page due to its lack of resizing support.",
                "Figure 7 shows ICAs ability to display the full web page given its resizing support, but that its lack of landscape capability and poorer resize algorithm significantly compromise display quality.",
                "In contrast, Figure 8 shows pTHINC using resizing to provide a high quality fullscreen display of the full width of the web page. pTHINC maximizes the entire viewing region by moving all controls to the PDA buttons.",
                "In addition, pTHINC leverages the server computational power to use a high quality resizing algorithm to resize the display to fit the PDA screen without significant overhead.",
                "Figures 9 and 10 show the results of running the video playback benchmark.",
                "For each platform except ICA, we show results for an X5 and X51v configuration.",
                "ICA could not run on the X51v as noted earlier.",
                "The measurements were done using settings that reflected the environment a user would have to access a web session from both a desktop computer and a PDA.",
                "As such, a 1024×768 server display resolution was used whenever possible and the video was shown at fullscreen.",
                "RDP was limited to 640×480 display resolution as noted earlier.",
                "Since viewing the entire video display is the only really usable option, we resized the display to fit the PDA screen for those platforms that supported this feature, namely ICA and pTHINC.",
                "Figure 9 shows the video quality for each platform. pTHINC is the only thin client able to provide perfect video playback quality, similar to the native PDA video player.",
                "All of the other thin clients deliver very poor video quality.",
                "With the exception of RDP on the X51v which provided unacceptable 35% video quality, none of the other systems were even able to achieve 10% video quality.",
                "VNC and ICA have the worst quality at 8% on the X5 device. pTHINCs native video support enables superior video performance, while other thin clients suffer from their inability to distinguish video from normal display updates.",
                "They attempt to apply ineffective and expensive compression algorithms on the video data and are unable to keep up with the stream of updates generated, resulting in dropped frames or long playback times.",
                "VNC suffers further from its client-pull update model because video frames are generated faster than the rate at which the client can process and send requests to the server to obtain the next display update.",
                "Figure 10 shows the total data transferred during 150 0% 20% 40% 60% 80% 100% pTHINCICAVNCRDPLOCAL VideoQuality Platform Axim X5 Axim X51v Figure 9: Video Benchmark: Fullscreen Video Quality 0 1 10 100 pTHINCICAVNCRDPLOCAL VideoDataSize(MB) Platform Axim X5 Axim X51v Figure 10: Video Benchmark: Fullscreen Video Data video playback for each system.",
                "The native player is the most bandwidth efficient platform, sending less than 6 MB of data, which corresponds to about 1.2 Mbps of bandwidth. pTHINCs 100% video quality requires about 25 MB of data which corresponds to a bandwidth usage of less than 6 Mbps.",
                "While the other thin clients send less data than THINC, they do so because they are dropping video data, resulting in degraded video quality.",
                "Figures 11 to 14 compare screenshots of the different thin clients when displaying the video clip.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "Figures 11 and 12 show that RDP and VNC are unable to display the entire video frame on the PDA screen.",
                "RDP wastes screen space for UI elements and VNC only shows the top corner of the video frame on the screen.",
                "Figure 13 shows that ICA provides resizing to display the entire video frame, but did not proportionally resize the video data, resulting in strange display artifacts.",
                "In contrast, Figure 14 shows pTHINC using resizing to provide a high quality fullscreen display of the entire video frame. pTHINC provides visually more appealing video display than RDP, VNC, or ICA. 5.",
                "RELATED WORK Several studies have examined the web browsing performance of thin-client computing [13, 19, 10].",
                "The ability for thin clients to improve web browsing performance on wireless PDAs was first quantitatively demonstrated in a previous study by one of the authors [10].",
                "This study demonstrated that thin clients can provide both faster web browsing performance and greater web browsing functionality.",
                "The study considered a wide range of web content including content from medical information systems.",
                "Our work builds on this previous study and consider important issues such as how usable existing thin clients are in PDA environments, the trade-offs between thin-client usability and performance, performance across different PDA devices, and the performance of thin clients on common web-related applications such as video.",
                "Many thin clients have been developed and some have PDA clients, including Microsofts Remote Desktop [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5], and Tarantella [18].",
                "These systems were first designed for desktop computing and retrofitted for PDAs.",
                "Unlike pTHINC, they do not address key system architecture and usability issues important for PDAs.",
                "This limits their display quality, system performance, available screen space, and overall usability on PDAs. pTHINC builds on previous work by two of the authors on THINC [1], extending the server architecture and introducing a client interface and usage model to efficiently support PDA devices for mobile web applications.",
                "Other approaches to improve the performance of mobile wireless web browsing have focused on using transcoding and caching proxies in conjunction with the fat client model [11, 9, 4, 8].",
                "They work by pushing functionality to external proxies, and using specialized browsing applications on the PDA device that communicate with the proxy.",
                "Our thinclient approach differs fundamentally from these fat-client approaches by pushing all web browser logic to the server, leveraging existing investments in desktop web browsers and helper applications to work seamlessly with production systems without any additional proxy configuration or web browser modifications.",
                "With the emergence of web browsing on small display devices, web sites have been redesigned using mechanisms like WAP and specialized native web browsers have been developed to tailor the needs of these devices.",
                "Recently, Opera has developed the Opera Mini [15] web browser, which uses an approach similar to the thin-client model to provide access across a number of mobile devices that would normally be incapable of running a web browser.",
                "Instead of requiring the device to process web pages, it uses a remote server to pre-process the page before sending it to the phone. 6.",
                "CONCLUSIONS We have introduced pTHINC, a thin-client architecture for wireless PDAs. pTHINC provides key architectural and usability mechanisms such as server-side screen resizing, clientside screen rotation using simple copy techniques, YUV video support, and maximizing screen space for display updates and leveraging existing PDA control buttons for UI elements. pTHINC transparently supports traditional desktop browsers and their helper applications on PDA devices and desktop machines, providing mobile users with ubiquitous access to a consistent, personalized, and full-featured web environment across heterogeneous devices.",
                "We have implemented pTHINC and measured its performance on web applications compared to existing thin-client systems and native web applications.",
                "Our results on multiple mobile wireless devices demonstrate that pTHINC delivers web browsing performance up to 80 times better than existing thin-client systems, and 8 times better than a native PDA browser.",
                "In addition, pTHINC is the only PDA thin client 151 Figure 11: Video Screenshot: RDP 640x480 Figure 12: Video Screenshot: VNC 1024x768 Figure 13: Video Screenshot: ICA Resized 1024x768 Figure 14: Video Screenshot: pTHINC Resized 1024x768 that transparently provides full-screen, full frame rate video playback, making web sites with multimedia content accessible to mobile web users. 7.",
                "ACKNOWLEDGEMENTS This work was supported in part by NSF ITR grants CCR0219943 and CNS-0426623, and an IBM SUR Award. 8.",
                "REFERENCES [1] R. Baratto, L. Kim, and J. Nieh.",
                "THINC: A Virtual Display Architecture for Thin-Client Computing.",
                "In Proceedings of the 20th ACM Symposium on Operating Systems Principles (SOSP), Oct. 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius, and A. Muir.",
                "Microsoft Windows NT Server 4.0, Terminal Server Edition: Technical Reference.",
                "Microsoft Press, Redmond, WA, 1999. [4] A.",
                "Fox, I. Goldberg, S. D. Gribble, and D. C. Lee.",
                "Experience With Top Gun Wingman: A Proxy-Based Graphical Web Browser for the 3Com PalmPilot.",
                "In Proceedings of Middleware 98, Lake District, England, September 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Health Insurance Portability and Accountability Act. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench version 1.5. http: //etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi.",
                "On proxy agents, mobility, and web access.",
                "Mobile Networks and Applications, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon, and A. Ortega.",
                "Design and Implementation of a Soft Caching Proxy.",
                "Computer Networks and ISDN Systems, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana, and S. Varshneya.",
                "Improving Web Browsing on Wireless PDAs Using Thin-Client Computing.",
                "In Proceedings of the 13th International World Wide Web Conference (WWW), May 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham, and P. Shenoy.",
                "TranSquid: Transcoding and caching proxy for heterogenous ecommerce environments.",
                "In Proceedings of the 12th IEEE Workshop on Research Issues in Data Engineering (RIDE 02), Feb. 2002. [12] .NET VNC Viewer for PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang, and N. Novik.",
                "Measuring Thin-Client Performance Using Slow-Motion Benchmarking.",
                "ACM Trans.",
                "Computer Systems, 21(1):87-115, Feb. 2003. [14] J. Nielsen.",
                "Designing Web Usability.",
                "New Riders Publishing, Indianapolis, IN, 2000. [15] Opera Mini Browser. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood, and A. Hopper.",
                "Virtual Network Computing.",
                "IEEE Internet Computing, 2(1), Jan./Feb. 1998. [17] R. W. Scheifler and J. Gettys.",
                "The X Window System.",
                "ACM Trans.",
                "Gr., 5(2):79-106, Apr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla, and M. Sajjadpour.",
                "Web Browsing Performance of Wireless Thin-Client Computing.",
                "In Proceedings of the 12th International World Wide Web Conference (WWW), May 2003. 152"
            ],
            "original_annotated_samples": [
                "A thin-client computing system consists of a server and a client that communicate over a network using a <br>remote display</br> protocol.",
                "Using the <br>remote display</br> protocol, the client transmits user input to the server, and the server returns screen updates of the applications from the server to the client.",
                "For example, pTHINC can provide the same web browsing session appropriately scaled for display on a desktop computer and a PDA so that the same cookies, bookmarks, and other meta-data are continuously available on both machines simultaneously. pTHINCs virtual display approach leverages semantic information available in display commands, and client-side video hardware to provide more efficient <br>remote display</br> mechanisms that are crucial for supporting more display-intensive web applications.",
                "Given limited display resolution on PDAs, pTHINC maximizes the use of screen real estate for <br>remote display</br> by moving control functionality from the screen to readily available PDA control buttons, improving system usability.",
                "PTHINC SYSTEM ARCHITECTURE pTHINC builds on the THINC [1] <br>remote display</br> architecture to provide a thin-client system for PDAs. pTHINC virtualizes the display at the server by leveraging the video device abstraction layer, which sits below the window server and above the framebuffer."
            ],
            "translated_annotated_samples": [
                "Un sistema informático de cliente ligero consiste en un servidor y un cliente que se comunican a través de una red utilizando un <br>protocolo de visualización remota</br>.",
                "Usando el protocolo de <br>visualización remota</br>, el cliente transmite la entrada del usuario al servidor, y el servidor devuelve actualizaciones de pantalla de las aplicaciones del servidor al cliente.",
                "Por ejemplo, pTHINC puede proporcionar la misma sesión de navegación web adecuadamente escalada para su visualización en una computadora de escritorio y una PDA, de modo que las mismas cookies, marcadores y otros metadatos estén disponibles continuamente en ambas máquinas simultáneamente. El enfoque de visualización virtual de pTHINC aprovecha la información semántica disponible en los comandos de visualización y el hardware de video del cliente para proporcionar mecanismos de <br>visualización remota</br> más eficientes que son cruciales para admitir aplicaciones web más intensivas en visualización.",
                "Dada la limitada resolución de pantalla en las PDA, pTHINC maximiza el uso del espacio de pantalla para la <br>visualización remota</br> al trasladar la funcionalidad de control de la pantalla a los botones de control de PDA fácilmente disponibles, mejorando la usabilidad del sistema.",
                "La arquitectura del sistema pTHINC se basa en la arquitectura de <br>visualización remota</br> THINC para proporcionar un sistema de cliente ligero para PDAs. pTHINC virtualiza la visualización en el servidor aprovechando la capa de abstracción del dispositivo de video, que se encuentra por debajo del servidor de ventanas y por encima del framebuffer."
            ],
            "translated_text": "pTHINC: Una arquitectura de cliente ligero para la web inalámbrica móvil Joeng Kim, Ricardo A. Baratto y Jason Nieh Departamento de Ciencias de la Computación Universidad de Columbia, Nueva York, NY, EE. UU. {jk2438, ricardo, nieh}@cs.columbia.edu RESUMEN Aunque las aplicaciones web están ganando popularidad en las PDAs inalámbricas móviles, los navegadores web en estos sistemas pueden ser bastante lentos y a menudo carecen de funcionalidad adecuada para acceder a muchos sitios web. Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y movilidad fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la resolución de pantalla disponible para la visualización de aplicaciones. Hemos implementado pTHINC en Windows Mobile y evaluado su rendimiento en dispositivos móviles inalámbricos. Nuestros resultados comparados con los navegadores web PDA locales y otros enfoques de cliente ligero demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero PDA que soporta de manera efectiva aplicaciones de ayuda del navegador cruciales como la reproducción de video. Categorías y Descriptores de Asunto: C.2.4 Comunicación de Computadoras-Redes: Sistemas Distribuidos - cliente/servidor Términos Generales: Diseño, Experimentación, Rendimiento 1. La creciente ubicuidad de las redes inalámbricas y la disminución del costo del hardware están impulsando una proliferación de dispositivos móviles inalámbricos portátiles, tanto como asistentes digitales personales (PDA) inalámbricos independientes y dispositivos populares integrados de PDA/teléfono celular. Estos dispositivos están permitiendo nuevas formas de computación y comunicación móvil. Los proveedores de servicios están aprovechando estos dispositivos para ofrecer acceso web omnipresente, y los usuarios de la web móvil a menudo ya utilizan estos dispositivos para acceder a información habilitada para la web, como noticias, correo electrónico, guías de viaje localizadas y mapas. Es probable que en unos pocos años, la mayoría de los dispositivos que accedan a la web sean móviles. Los usuarios suelen acceder al contenido web ejecutando un navegador web y aplicaciones auxiliares asociadas localmente en la PDA. Aunque existen navegadores web nativos para PDAs, ofrecen un rendimiento deficiente y tienen un conjunto de funciones mucho más pequeño y una funcionalidad más limitada que sus contrapartes de computadoras de escritorio [10]. Como resultado, los navegadores web de PDA a menudo no pueden mostrar el contenido web de sitios web que utilizan tecnologías web más avanzadas para ofrecer una experiencia web más rica. Este problema fundamental surge por dos razones. Primero, debido a que las PDAs tienen un entorno de hardware/software completamente diferente de las computadoras de escritorio tradicionales, las aplicaciones web necesitan ser reescritas y personalizadas para las PDAs si es posible, duplicando los costos de desarrollo. Debido a que el mercado de aplicaciones de escritorio es más grande y maduro, la mayoría del esfuerzo de desarrollo generalmente se destina a las aplicaciones de escritorio, lo que resulta en una mayor funcionalidad y rendimiento que sus contrapartes de PDA. En segundo lugar, las PDAs tienen un entorno con recursos más limitados que las computadoras de escritorio tradicionales para ofrecer un factor de forma más pequeño y una vida útil de la batería más larga. Los navegadores web de escritorio son aplicaciones grandes y complejas que no pueden ejecutarse en una PDA. En cambio, los desarrolladores se ven obligados a reducir significativamente estas navegadores web para ofrecer un navegador web PDA utilizable, lo que limita la funcionalidad del navegador PDA. La computación de cliente ligero proporciona un enfoque alternativo para habilitar el acceso web ubicuo desde dispositivos móviles. Un sistema informático de cliente ligero consiste en un servidor y un cliente que se comunican a través de una red utilizando un <br>protocolo de visualización remota</br>. El protocolo permite que las pantallas gráficas se virtualicen y se sirvan a través de una red a un dispositivo cliente, mientras que la lógica de la aplicación se ejecuta en el servidor. Usando el protocolo de <br>visualización remota</br>, el cliente transmite la entrada del usuario al servidor, y el servidor devuelve actualizaciones de pantalla de las aplicaciones del servidor al cliente. Utilizando un modelo de cliente ligero para dispositivos móviles de mano, las PDAs pueden convertirse en clientes simples sin estado que aprovechan las capacidades del servidor remoto para ejecutar navegadores web y otras aplicaciones auxiliares. El modelo de cliente ligero proporciona varios beneficios importantes para la web inalámbrica móvil. Primero, las aplicaciones web estándar de escritorio pueden utilizarse para entregar contenido web a PDAs sin necesidad de reescribir o adaptar las aplicaciones para ejecutarse en una PDA, lo que reduce los costos de desarrollo y aprovecha las inversiones existentes en software. Segundo, las aplicaciones web complejas pueden ejecutarse en servidores potentes en lugar de ejecutarse en versiones simplificadas en PDAs con recursos más limitados, lo que proporciona una mayor funcionalidad y un mejor rendimiento [10]. Tercero, las aplicaciones web pueden aprovechar servidores con redes más rápidas y mejor conectividad, lo que mejora aún más el rendimiento de la aplicación. En cuarto lugar, las PDAs pueden ser dispositivos aún más simples ya que no necesitan realizar una lógica de aplicación compleja, lo que potencialmente reduce el consumo de energía y extiende la vida útil de la batería. Finalmente, los clientes ligeros PDA pueden ser dispositivos prácticamente sin estado que no necesitan ser respaldados o restaurados, requieren casi ningún mantenimiento o actualizaciones, y no almacenan datos sensibles que puedan perderse o ser robados. Este modelo proporciona una vía viable para que las organizaciones médicas cumplan con las regulaciones de HIPAA mientras incorporan dispositivos móviles en sus operaciones diarias. A pesar de estas posibles ventajas, los clientes ligeros no han podido ofrecer la gama completa de estos beneficios al entregar aplicaciones web a dispositivos móviles portátiles. Los thin clients existentes no fueron diseñados para PDAs y no tienen en cuenta problemas importantes de usabilidad en el contexto de dispositivos de factor de forma pequeño, lo que resulta en dificultades para navegar por el contenido web mostrado. Además, los clientes ligeros existentes son ineficaces para proporcionar movilidad fluida en la mezcla heterogénea de tamaños de pantalla y resoluciones de dispositivos. Si bien los clientes ligeros existentes ya pueden ofrecer un rendimiento más rápido que los navegadores web nativos de PDA al entregar contenido web HTML, no admiten de manera efectiva aplicaciones web auxiliares más intensivas en visualización, como videos multimedia, que cada vez son una parte integral del contenido web disponible. Para aprovechar todo el potencial de la informática de cliente ligero en la provisión de la web inalámbrica móvil en PDAs, hemos desarrollado pTHINC (PDA THin-client InterNet Computing). pTHINC se basa en nuestro trabajo previo en THINC [1] para proporcionar una arquitectura de cliente ligero para dispositivos móviles de mano. pTHINC virtualiza y redimensiona la pantalla en el servidor para entregar de manera eficiente actualizaciones de pantalla de alta fidelidad a una amplia gama de clientes diferentes, tamaños de pantalla y orientaciones de pantalla, incluidos los modos de visualización en vertical y horizontal. Esto permite a pTHINC proporcionar la misma sesión web persistente en diferentes dispositivos de cliente. Por ejemplo, pTHINC puede proporcionar la misma sesión de navegación web adecuadamente escalada para su visualización en una computadora de escritorio y una PDA, de modo que las mismas cookies, marcadores y otros metadatos estén disponibles continuamente en ambas máquinas simultáneamente. El enfoque de visualización virtual de pTHINC aprovecha la información semántica disponible en los comandos de visualización y el hardware de video del cliente para proporcionar mecanismos de <br>visualización remota</br> más eficientes que son cruciales para admitir aplicaciones web más intensivas en visualización. Dada la limitada resolución de pantalla en las PDA, pTHINC maximiza el uso del espacio de pantalla para la <br>visualización remota</br> al trasladar la funcionalidad de control de la pantalla a los botones de control de PDA fácilmente disponibles, mejorando la usabilidad del sistema. Hemos implementado pTHINC en Windows Mobile y demostrado que funciona de manera transparente con las aplicaciones existentes, sistemas de ventanas y sistemas operativos, y no requiere modificar, recompilar o volver a enlazar el software existente. Hemos evaluado cuantitativamente pTHINC frente a navegadores web PDA locales y otros enfoques de cliente ligero en dispositivos Pocket PC. Nuestros resultados experimentales demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero de PDA que soporta de manera efectiva aplicaciones esenciales de ayuda para el navegador, como la reproducción de video. Este documento presenta el diseño e implementación de pTHINC. La sección 2 describe el modelo de uso general y las características de usabilidad de pTHINC. La sección 3 presenta el diseño y la arquitectura del sistema de pTHINC. La sección 4 presenta resultados experimentales que miden el rendimiento de pTHINC en aplicaciones web y lo comparan con navegadores nativos de PDA y otros sistemas de cliente ligero de PDA populares. La sección 5 discute el trabajo relacionado. Finalmente, presentamos algunas observaciones finales. El MODELO DE USO DE pTHINC pTHINC es un sistema de cliente ligero que consiste en una aplicación de visualización de cliente simple que se ejecuta en la PDA y un servidor que se ejecuta en una PC estándar. El servidor aprovecha PCs más potentes para ejecutar navegadores web y otra lógica de aplicaciones. El cliente recibe la entrada del usuario desde el lápiz óptico y el teclado virtual de la PDA y los envía al servidor para pasarlos a las aplicaciones. Las actualizaciones de la pantalla son luego enviadas desde el servidor al cliente para mostrar al usuario. Cuando se inicia el cliente PDA pTHINC, se presenta al usuario una interfaz gráfica simple donde se pueden proporcionar información como la dirección y el puerto del servidor, la información de autenticación del usuario y la configuración de la sesión. pTHINC primero intenta conectarse al servidor y realizar el saludo necesario. Una vez que este proceso haya sido completado, pTHINC presenta al usuario la visualización más reciente de su sesión. Si la sesión no existe, se crea una nueva sesión. Las sesiones existentes pueden continuar sin problemas sin cambios en la configuración de la sesión o del servidor. A diferencia de otros sistemas de cliente ligero, pTHINC proporciona a un usuario un modelo de sesión web persistente en el que un usuario puede iniciar una sesión ejecutando un navegador web y aplicaciones asociadas en el servidor, luego desconectarse de esa sesión y volver a conectarse en cualquier momento. Cuando un usuario se reconecta a la sesión, todas las aplicaciones siguen funcionando desde donde el usuario las dejó, de modo que el usuario puede seguir trabajando como si nunca se hubiera desconectado. La capacidad de desconectarse y reconectarse a una sesión en cualquier momento es un beneficio importante para los usuarios de PDA inalámbricas móviles que pueden tener conectividad de red intermitente. El modelo de sesión web persistente de pTHINCs permite a un usuario reconectarse a una sesión web desde dispositivos distintos al que se inició originalmente la sesión web. Esto proporciona a los usuarios una movilidad fluida entre diferentes dispositivos. Si un usuario pierde su PDA, puede fácilmente usar otra PDA para acceder a su sesión web. Además, pTHINC permite a los usuarios utilizar dispositivos que no son PDA para acceder a sesiones web también. Un usuario puede acceder a la misma sesión web persistente en una PC de escritorio como en una PDA, lo que le permite al usuario utilizar la misma sesión web desde cualquier computadora. El modelo de sesión web persistente de pTHINCs aborda un problema clave encontrado por los usuarios de la web móvil, la falta de un entorno web común en diferentes computadoras. Los navegadores web a menudo almacenan información importante como marcadores, cookies e historial, lo que les permite funcionar de una manera mucho más útil. El problema que ocurre cuando un usuario se mueve entre computadoras es que estos datos, específicos de una instalación de un navegador web, no pueden moverse con el usuario. Además, los navegadores web a menudo necesitan aplicaciones auxiliares para procesar diferentes contenidos multimedia, y esas aplicaciones pueden no estar disponibles de manera consistente en todas las computadoras. pTHINC aborda este problema al permitir que un usuario utilice de forma remota el mismo entorno de navegador web y aplicaciones auxiliares desde cualquier computadora. Como resultado, pTHINC puede proporcionar un entorno de navegación web común y consistente para usuarios móviles en diferentes dispositivos sin requerirles intentar sincronizar repetidamente diferentes entornos de navegación web en múltiples máquinas. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC debe proporcionar mecanismos para admitir diferentes tamaños de pantalla y resoluciones. Con este fin, pTHINC proporciona una función de zoom que permite a un usuario acercar y alejar una pantalla y permite que la pantalla de una sesión web 144 Figura 1: teclas de acceso rápido de pTHINC se redimensione para adaptarse a la pantalla del dispositivo que se está utilizando. Por ejemplo, si el servidor está ejecutando una sesión web a 1024×768 pero el cliente es una PDA con una resolución de pantalla de 640×480, pTHINC redimensionará la pantalla del escritorio para que se ajuste a la pantalla más pequeña de la PDA. pTHINC proporciona al usuario de la PDA la opción de aumentar el tamaño de la pantalla haciendo zoom en diferentes partes de la pantalla. Los usuarios suelen estar familiarizados con el diseño general de los sitios web que visitan con frecuencia, y pueden aprovechar esta función de redimensionamiento para navegar mejor por las páginas web. Por ejemplo, un usuario puede alejarse de la pantalla para ver todo el contenido de la página y navegar por los hipervínculos, luego acercarse a una región de interés para obtener una mejor vista. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC también debe proporcionar mecanismos para admitir diferentes orientaciones de pantalla. En un entorno de escritorio, los usuarios suelen estar acostumbrados a tener las pantallas presentadas en modo horizontal, donde el ancho de la pantalla es mayor que su altura. Sin embargo, en un entorno de PDA, la elección no siempre es obvia. Algunos usuarios pueden preferir tener la pantalla en modo retrato, ya que es más fácil sostener el dispositivo en sus manos, mientras que otros pueden preferir el modo paisaje para minimizar la cantidad de desplazamiento lateral necesario para ver una página web. Para adaptarse a las preferencias de los usuarios de PDA, pTHINC proporciona una función de orientación que le permite rotar la pantalla de forma fluida entre el modo horizontal y vertical. El modo de paisaje es particularmente útil para los usuarios de pTHINC que acceden con frecuencia a sus sesiones web tanto en dispositivos de escritorio como en PDA, proporcionando a esos usuarios el mismo ajuste de paisaje familiar en diferentes dispositivos. Dado que el espacio de pantalla es un recurso relativamente escaso en las PDAs, pTHINC se ejecuta en modo de pantalla completa para maximizar el área de pantalla disponible para mostrar la sesión web. Para poder utilizar toda la pantalla en la PDA y aún así permitir al usuario controlar e interactuar con ella, pTHINC reutiliza los botones de acceso directo típicos que se encuentran en las PDAs para realizar todas las funciones de control disponibles para el usuario. Los botones utilizados por pTHINC no requieren ningún cambio en el entorno del sistema operativo; simplemente son interceptados por la aplicación cliente de pTHINC cuando se presionan. La Figura 1 muestra cómo pTHINC utiliza los botones de acceso directo para proporcionar una navegación sencilla y mejorar la experiencia del usuario en general. Estos botones no son específicos del dispositivo, y el diseño mostrado es común en dispositivos PocketPC ampliamente utilizados. pTHINC proporciona seis accesos directos para apoyar su modelo de uso: • Rotar pantalla: El botón de grabación en el borde izquierdo se utiliza para rotar la pantalla entre modo retrato y modo paisaje cada vez que se presiona el botón. • Alejar: El botón más a la izquierda en la parte inferior delantera se utiliza para alejar la visualización de la sesión web proporcionando una vista general de la sesión web. • Acercar: El segundo botón más a la izquierda en la parte inferior delantera se utiliza para acercar la visualización de la sesión web para ver más claramente el contenido de interés. • Desplazamiento direccional: El botón central en la parte inferior delantera se utiliza para desplazarse alrededor de la visualización utilizando un solo botón de control de una manera que ya es familiar para los usuarios de PDA. Esta función es particularmente útil cuando el usuario ha ampliado una región de la pantalla de tal manera que solo una parte de la pantalla es visible en la pantalla. • Mostrar/Ocultar Teclado: El segundo botón más a la derecha en la parte inferior frontal se utiliza para mostrar un teclado virtual dibujado en la pantalla para dispositivos que no tienen teclado físico. El teclado virtual utiliza mecanismos estándar del sistema operativo de PDA, proporcionando portabilidad entre diferentes entornos de PDA. • Cerrar sesión: El botón más a la derecha en la parte inferior frontal se utiliza para desconectarse de la sesión de pTHINC. pTHINC utiliza la pantalla táctil de la PDA, el lápiz óptico y mecanismos estándar de interfaz de usuario para proporcionar una metáfora de punto y clic de la interfaz de usuario similar a la proporcionada por el ratón en un entorno de computación de escritorio tradicional. pTHINC no utiliza un cursor ya que los entornos de PDA no lo proporcionan. En cambio, un usuario puede usar el lápiz táctil para tocar diferentes secciones de la pantalla táctil y señalar el enfoque de entrada. Un toque único en la pantalla táctil genera un evento de clic de ratón correspondiente. Un doble toque en la pantalla táctil genera un evento de doble clic del ratón correspondiente. pTHINC proporciona emulación de ratón de dos botones al usar el lápiz óptico para presionar la pantalla durante un segundo y generar un clic derecho del ratón. Todas estas acciones son idénticas a la forma en que los usuarios ya interactúan con las aplicaciones de PDA en el entorno común de PocketPC. En la navegación web, los usuarios pueden hacer clic en hipervínculos y enfocarse en cuadros de entrada simplemente tocando el área de interés deseada en la pantalla. A diferencia de los navegadores web PDA locales y otras aplicaciones PDA, pTHINC aprovecha metáforas de interfaz de usuario de escritorio más potentes para permitir a los usuarios manipular múltiples ventanas de aplicación abiertas en lugar de estar limitados a una sola ventana de aplicación en un momento dado. Esto proporciona una mayor flexibilidad de navegación más allá de lo que está actualmente disponible en los dispositivos PDA. Similar a un entorno de escritorio, las ventanas del navegador y otras ventanas de aplicaciones pueden ser movidas al presionar y arrastrar el lápiz óptico de manera similar a un ratón. 3. La arquitectura del sistema pTHINC se basa en la arquitectura de <br>visualización remota</br> THINC para proporcionar un sistema de cliente ligero para PDAs. pTHINC virtualiza la visualización en el servidor aprovechando la capa de abstracción del dispositivo de video, que se encuentra por debajo del servidor de ventanas y por encima del framebuffer. ",
            "candidates": [],
            "error": [
                [
                    "protocolo de visualización remota",
                    "visualización remota",
                    "visualización remota",
                    "visualización remota",
                    "visualización remota"
                ]
            ]
        },
        "mobility": {
            "translated_key": "movilidad",
            "is_in_text": true,
            "original_annotated_sentences": [
                "pTHINC: A Thin-Client Architecture for Mobile Wireless Web Joeng Kim, Ricardo A. Baratto, and Jason Nieh Department of Computer Science Columbia University, New York, NY, USA {jk2438, ricardo, nieh}@cs.columbia.edu ABSTRACT Although web applications are gaining popularity on mobile wireless PDAs, web browsers on these systems can be quite slow and often lack adequate functionality to access many web sites.",
                "We have developed pTHINC, a PDA thinclient solution that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide high-fidelity display and seamless <br>mobility</br> across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available screen resolution for application display.",
                "We have implemented pTHINC on Windows Mobile and evaluated its performance on mobile wireless devices.",
                "Our results compared to local PDA web browsers and other thin-client approaches demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "Categories and Subject Descriptors: C.2.4 ComputerCommunication-Networks: Distributed Systems - client/ server General Terms: Design, Experimentation, Performance 1.",
                "INTRODUCTION The increasing ubiquity of wireless networks and decreasing cost of hardware is fueling a proliferation of mobile wireless handheld devices, both as standalone wireless Personal Digital Assistants (PDA) and popular integrated PDA/cell phone devices.",
                "These devices are enabling new forms of mobile computing and communication.",
                "Service providers are leveraging these devices to deliver pervasive web access, and mobile web users already often use these devices to access web-enabled information such as news, email, and localized travel guides and maps.",
                "It is likely that within a few years, most of the devices accessing the web will be mobile.",
                "Users typically access web content by running a web browser and associated helper applications locally on the PDA.",
                "Although native web browsers exist for PDAs, they deliver subpar performance and have a much smaller feature set and more limited functionality than their desktop computing counterparts [10].",
                "As a result, PDA web browsers are often not able to display web content from web sites that leverage more advanced web technologies to deliver a richer web experience.",
                "This fundamental problem arises for two reasons.",
                "First, because PDAs have a completely different hardware/software environment from traditional desktop computers, web applications need to be rewritten and customized for PDAs if at all possible, duplicating development costs.",
                "Because the desktop application market is larger and more mature, most development effort generally ends up being spent on desktop applications, resulting in greater functionality and performance than their PDA counterparts.",
                "Second, PDAs have a more resource constrained environment than traditional desktop computers to provide a smaller form factor and longer battery life.",
                "Desktop web browsers are large, complex applications that are unable to run on a PDA.",
                "Instead, developers are forced to significantly strip down these web browsers to provide a usable PDA web browser, thereby crippling PDA browser functionality.",
                "Thin-client computing provides an alternative approach for enabling pervasive web access from handheld devices.",
                "A thin-client computing system consists of a server and a client that communicate over a network using a remote display protocol.",
                "The protocol enables graphical displays to be virtualized and served across a network to a client device, while application logic is executed on the server.",
                "Using the remote display protocol, the client transmits user input to the server, and the server returns screen updates of the applications from the server to the client.",
                "Using a thin-client model for mobile handheld devices, PDAs can become simple stateless clients that leverage the remote server capabilities to execute web browsers and other helper applications.",
                "The thin-client model provides several important benefits for mobile wireless web.",
                "First, standard desktop web applications can be used to deliver web content to PDAs without rewriting or adapting applications to execute on a PDA, reducing development costs and leveraging existing software investments.",
                "Second, complex web applications can be executed on powerful servers instead of running stripped down versions on more resource constrained PDAs, providing greater functionality and better performance [10].",
                "Third, web applications can take advantage of servers with faster networks and better connectivity, further boosting application performance.",
                "Fourth, PDAs can be even simpler devices since they do not need to perform complex application logic, potentially reducing energy consumption and extend143 ing battery life.",
                "Finally, PDA thin clients can be essentially stateless appliances that do not need to be backed up or restored, require almost no maintenance or upgrades, and do not store any sensitive data that can be lost or stolen.",
                "This model provides a viable avenue for medical organizations to comply with HIPAA regulations [6] while embracing mobile handhelds in their day to day operations.",
                "Despite these potential advantages, thin clients have been unable to provide the full range of these benefits in delivering web applications to mobile handheld devices.",
                "Existing thin clients were not designed for PDAs and do not account for important usability issues in the context of small form factor devices, resulting in difficulty in navigating displayed web content.",
                "Furthermore, existing thin clients are ineffective at providing seamless <br>mobility</br> across the heterogeneous mix of device display sizes and resolutions.",
                "While existing thin clients can already provide faster performance than native PDA web browsers in delivering HTML web content, they do not effectively support more display-intensive web helper applications such as multimedia video, which is increasingly an integral part of available web content.",
                "To harness the full potential of thin-client computing in providing mobile wireless web on PDAs, we have developed pTHINC (PDA THin-client InterNet Computing). pTHINC builds on our previous work on THINC [1] to provide a thinclient architecture for mobile handheld devices. pTHINC virtualizes and resizes the display on the server to efficiently deliver high-fidelity screen updates to a broad range of different clients, screen sizes, and screen orientations, including both portrait and landscape viewing modes.",
                "This enables pTHINC to provide the same persistent web session across different client devices.",
                "For example, pTHINC can provide the same web browsing session appropriately scaled for display on a desktop computer and a PDA so that the same cookies, bookmarks, and other meta-data are continuously available on both machines simultaneously. pTHINCs virtual display approach leverages semantic information available in display commands, and client-side video hardware to provide more efficient remote display mechanisms that are crucial for supporting more display-intensive web applications.",
                "Given limited display resolution on PDAs, pTHINC maximizes the use of screen real estate for remote display by moving control functionality from the screen to readily available PDA control buttons, improving system usability.",
                "We have implemented pTHINC on Windows Mobile and demonstrated that it works transparently with existing applications, window systems, and operating systems, and does not require modifying, recompiling, or relinking existing software.",
                "We have quantitatively evaluated pTHINC against local PDA web browsers and other thin-client approaches on Pocket PC devices.",
                "Our experimental results demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "This paper presents the design and implementation of pTHINC.",
                "Section 2 describes the overall usage model and usability characteristics of pTHINC.",
                "Section 3 presents the design and system architecture of pTHINC.",
                "Section 4 presents experimental results measuring the performance of pTHINC on web applications and comparing it against native PDA browsers and other popular PDA thin-client systems.",
                "Section 5 discusses related work.",
                "Finally, we present some concluding remarks. 2.",
                "PTHINC USAGE MODEL pTHINC is a thin-client system that consists of a simple client viewer application that runs on the PDA and a server that runs on a commodity PC.",
                "The server leverages more powerful PCs to to run web browsers and other application logic.",
                "The client takes user input from the PDA stylus and virtual keyboard and sends them to the server to pass to the applications.",
                "Screen updates are then sent back from the server to the client for display to the user.",
                "When the pTHINC PDA client is started, the user is presented with a simple graphical interface where information such as server address and port, user authentication information, and session settings can be provided. pTHINC first attempts to connect to the server and perform the necessary handshaking.",
                "Once this process has been completed, pTHINC presents the user with the most recent display of his session.",
                "If the session does not exist, a new session is created.",
                "Existing sessions can be seamlessly continued without changes in the session setting or server configuration.",
                "Unlike other thin-client systems, pTHINC provides a user with a persistent web session model in which a user can launch a session running a web browser and associated applications at the server, then disconnect from that session and reconnect to it again anytime.",
                "When a user reconnects to the session, all of the applications continue running where the user left off, so that the user can continue working as though he or she never disconnected.",
                "The ability to disconnect and reconnect to a session at anytime is an important benefit for mobile wireless PDA users which may have intermittent network connectivity. pTHINCs persistent web session model enables a user to reconnect to a web session from devices other than the one on which the web session was originally initiated.",
                "This provides users with seamless <br>mobility</br> across different devices.",
                "If a user loses his PDA, he can easily use another PDA to access his web session.",
                "Furthermore, pTHINC allows users to use non-PDA devices to access web sessions as well.",
                "A user can access the same persistent web session on a desktop PC as on a PDA, enabling a user to use the same web session from any computer. pTHINCs persistent web session model addresses a key problem encountered by mobile web users, the lack of a common web environment across computers.",
                "Web browsers often store important information such as bookmarks, cookies, and history, which enable them to function in a much more useful manner.",
                "The problem that occurs when a user moves between computers is that this data, which is specific to a web browser installation, cannot move with the user.",
                "Furthermore, web browsers often need helper applications to process different media content, and those applications may not be consistently available across all computers. pTHINC addresses this problem by enabling a user to remotely use the exact same web browser environment and helper applications from any computer.",
                "As a result, pTHINC can provide a common, consistent web browsing environment for mobile users across different devices without requiring them to attempt to repeatedly synchronize different web browsing environments across multiple machines.",
                "To enable a user to access the same web session on different devices, pTHINC must provide mechanisms to support different display sizes and resolutions.",
                "Toward this end, pTHINC provides a zoom feature that enables a user to zoom in and out of a display and allows the display of a web 144 Figure 1: pTHINC shortcut keys session to be resized to fit the screen of the device being used.",
                "For example, if the server is running a web session at 1024×768 but the client is a PDA with a display resolution of 640×480, pTHINC will resize the desktop display to fit the full display in the smaller screen of the PDA. pTHINC provides the PDA user with the option to increase the size of the display by zooming in to different parts of the display.",
                "Users are often familiar with the general layout of commonly visited websites, and are able to leverage this resizing feature to better navigate through web pages.",
                "For example, a user can zoom out of the display to view the entire page content and navigate hyperlinks, then zoom in to a region of interest for a better view.",
                "To enable a user to access the same web session on different devices, pTHINC must also provide mechanisms to support different display orientations.",
                "In a desktop environment, users are typically accustomed to having displays presented in landscape mode where the screen width is larger than its height.",
                "However, in a PDA environment, the choice is not always obvious.",
                "Some users may prefer having the display in portrait mode, as it is easier to hold the device in their hands, while others may prefer landscape mode in order to minimize the amount of side-scrolling necessary to view a web page.",
                "To accommodate PDA user preferences, pTHINC provides an orientation feature that enables it to seamless rotate the display between landscape and portrait mode.",
                "The landscape mode is particularly useful for pTHINC users who frequently access their web sessions on both desktop and PDA devices, providing those users with the same familiar landscape setting across different devices.",
                "Because screen space is a relatively scarce resource on PDAs, pTHINC runs in fullscreen mode to maximize the screen area available to display the web session.",
                "To be able to use all of the screen on the PDA and still allow the user to control and interact with it, pTHINC reuses the typical shortcut buttons found on PDAs to perform all the control functions available to the user.",
                "The buttons used by pTHINC do not require any OS environment changes; they are simply intercepted by the pTHINC client application when they are pressed.",
                "Figure 1 shows how pTHINC utilizes the shortcut buttons to provide easy navigation and improve the overall user experience.",
                "These buttons are not device specific, and the layout shown is common to widelyused PocketPC devices. pTHINC provides six shortcuts to support its usage model: • Rotate Screen: The record button on the left edge is used to rotate the screen between portrait and landscape mode each time the button is pressed. • Zoom Out: The leftmost button on the bottom front is used to zoom out the display of the web session providing a birds eye view of the web session. • Zoom In: The second leftmost button on the bottom front is used to zoom in the display of the web session to more clearly view content of interest. • Directional Scroll: The middle button on the bottom front is used to scroll around the display using a single control button in a way that is already familiar to PDA users.",
                "This feature is particularly useful when the user has zoomed in to a region of the display such that only part of the display is visible on the screen. • Show/Hide Keyboard: The second rightmost button on the bottom front is used to bring up a virtual keyboard drawn on the screen for devices which have no physical keyboard.",
                "The virtual keyboard uses standard PDA OS mechanisms, providing portability across different PDA environments. • Close Session: The rightmost button on the bottom front is used to disconnect from the pTHINC session. pTHINC uses the PDA touch screen, stylus, and standard user interface mechanisms to provide a user interface pointand-click metaphor similar to that provided by the mouse in a traditional desktop computing environment. pTHINC does not use a cursor since PDA environments do not provide one.",
                "Instead, a user can use the stylus to tap on different sections of the touch screen to indicate input focus.",
                "A single tap on the touch screen generates a corresponding single click mouse event.",
                "A double tap on the touch screen generates a corresponding double click mouse event. pTHINC provides two-button mouse emulation by using the stylus to press down on the screen for one second to generate a right mouse click.",
                "All of these actions are identical to the way users already interact with PDA applications in the common PocketPC environment.",
                "In web browsing, users can click on hyperlinks and focus on input boxes by simply tapping on the desired screen area of interest.",
                "Unlike local PDA web browsers and other PDA applications, pTHINC leverages more powerful desktop user interface metaphors to enable users to manipulate multiple open application windows instead of being limited to a single application window at any given moment.",
                "This provides increased browsing flexibility beyond what is currently available on PDA devices.",
                "Similar to a desktop environment, browser windows and other application windows can be moved around by pressing down and dragging the stylus similar to a mouse. 3.",
                "PTHINC SYSTEM ARCHITECTURE pTHINC builds on the THINC [1] remote display architecture to provide a thin-client system for PDAs. pTHINC virtualizes the display at the server by leveraging the video device abstraction layer, which sits below the window server and above the framebuffer.",
                "This is a well-defined, low-level, device-dependent layer that exposes the video hardware to the display system. pTHINC accomplishes this through a simple virtual display driver that intercepts drawing commands, packetizes, and sends them over the network. 145 While other thin-client approaches intercept display commands at other layers of the display subsystem, pTHINCs display virtualization approach provides some key benefits in efficiently supporting PDA clients.",
                "For example, intercepting display commands at a higher layer between applications and the window system as is done by X [17] requires replicating and running a great deal of functionality on the PDA that is traditionally provided by the desktop window system.",
                "Given both the size and complexity of traditional window systems, attempting to replicate this functionality in the restricted PDA environment would have proven to be a daunting, and perhaps unfeasible task.",
                "Furthermore, applications and the window system often require tight synchronization in their operation and imposing a wireless network between them by running the applications on the server and the window system on the client would significantly degrade performance.",
                "On the other hand, intercepting at a lower layer by extracting pixels out of the framebuffer as they are rendered provides a simple solution that requires very little functionality on the PDA client, but can also result in degraded performance.",
                "The reason is that by the time the remote display server attempts to send screen updates, it has lost all semantic information that may have helped it encode efficiently, and it must resort to using a generic and expensive encoding mechanism on the server, as well as a potentially expensive decoding mechanism on the limited PDA client.",
                "In contrast to both the high and low level interception approaches, pTHINCs approach of intercepting at the device driver provides an effective balance between client and server simplicity, and the ability to efficiently encode and decode screen updates.",
                "By using a low-level virtual display approach, pTHINC can efficiently encode application display commands using only a small set of low-level commands.",
                "In a PDA environment, this set of commands provides a crucial component in maintaining the simplicity of the client in the resourceconstrained PDA environment.",
                "The display commands are shown in Table 1, and work as follows.",
                "COPY instructs the client to copy a region of the screen from its local framebuffer to another location.",
                "This command improves the user experience by accelerating scrolling and opaque window movement without having to resend screen data from the server.",
                "SFILL, PFILL, and BITMAP are commands that paint a fixed-size region on the screen.",
                "They are useful for accelerating the display of solid window backgrounds, desktop patterns, backgrounds of web pages, text drawing, and certain operations in graphics manipulation programs.",
                "SFILL fills a sizable region on the screen with a single color.",
                "PFILL replicates a tile over a screen region.",
                "BITMAP performs a fill using a bitmap of ones and zeros as a stipple to apply a foreground and background color.",
                "Finally, RAW is used to transmit unencoded pixel data to be displayed verbatim on a region of the screen.",
                "This command is invoked as a last resort if the server is unable to employ any other command, and it is the only command that may be compressed to mitigate its impact on network bandwidth. pTHINC delivers its commands using a non-blocking, serverpush update mechanism, where as soon as display updates are generated on the server, they are sent to the client.",
                "Clients are not required to explicitly request display updates, thus minimizing the impact that the typical varying network latency of wireless links may have on the responsiveness of the system.",
                "Keeping in mind that resource Command Description COPY Copy a frame buffer area to specified coordinates SFILL Fill an area with a given pixel color value PFILL Tile an area with a given pixel pattern BITMAP Fill a region using a bit pattern RAW Display raw pixel data at a given location Table 1: pTHINC Protocol Display Commands constrained PDAs and wireless networks may not be able to keep up with a fast server generating a large number of updates, pTHINC is able to coalesce, clip, and discard updates automatically if network loss or congestion occurs, or the client cannot keep up with the rate of updates.",
                "This type of behavior proves crucial in a web browsing environment, where for example, a page may be redrawn multiple times as it is rendered on the fly by the browser.",
                "In this case, the PDA will only receive and render the final result, which clearly is all the user is interesting in seeing. pTHINC prioritizes the delivery of updates to the PDA using a Shortest-Remaining-Size-First (SRSF) preemptive update scheduler.",
                "SRSF is analogous to Shortest-RemainingProcessing-Time scheduling, which is known to be optimal for minimizing mean response time in an interactive system.",
                "In a web browsing environment, short jobs are associated with text and basic page layout components such as the pages background, which are critical web content for the user.",
                "On the other hand, large jobs are often lower priority beautifying elements, or, even worse, web page banners and advertisements, which are of questionable value to the user as he or she is browsing the page.",
                "Using SRSF, pTHINC is able to maximize the utilization of the relatively scarce bandwidth available on the wireless connection between the PDA and the server. 3.1 Display Management To enable users to just as easily access their web browser and helper applications from a desktop computer at home as from a PDA while on the road, pTHINC provides a resize mechanism to zoom in and out of the display of a web session. pTHINC resizing is completely supported by the server, not the client.",
                "The server resamples updates to fit within the PDAs viewport before they are transmitted over the network. pTHINC uses Fants resampling algorithm to resize pixel updates.",
                "This provides smooth, visually pleasing updates with properly antialiasing and has only modest computational requirements. pTHINCs resizing approach has a number of advantages.",
                "First, it allows the PDA to leverage the vastly superior computational power of the server to use high quality resampling algorithms and produce higher quality updates for the PDA to display.",
                "Second, resizing the screen does not translate into additional resource requirements for the PDA, since it does not need to perform any additional work.",
                "Finally, better utilization of the wireless network is attained since rescaling the updates reduces their bandwidth requirements.",
                "To enable users to orient their displays on a PDA to provide a viewing experience that best accommodates user preferences and the layout of web pages or applications, pTHINC provides a display rotation mechanism to switch between landscape and portrait viewing modes. pTHINC display rotation is completely supported by the client, not the server. pTHINC does not explicitly recalculate the ge146 ometry of display updates to perform rotation, which would be computationally expensive.",
                "Instead, pTHINC simply changes the way data is copied into the framebuffer to switch between display modes.",
                "When in portrait mode, data is copied along the rows of the framebuffer from left to right.",
                "When in landscape mode, data is copied along the columns of the framebuffer from top to bottom.",
                "These very fast and simple techniques replace one set of copy operations with another and impose no performance overhead. pTHINC provides its own rotation mechanism to support a wide range of devices without imposing additional feature requirements on the PDA.",
                "Although some newer PDA devices provide native support for different orientations, this mechanism is not dynamic and requires the user to rotate the PDAs entire user interface before starting the pTHINC client.",
                "Windows Mobile provides native API mechanisms for PDA applications to rotate their UI on the fly, but these mechanisms deliver poor performance and display quality as the rotation is performed naively and is not completely accurate. 3.2 Video Playback Video has gradually become an integral part of the World Wide Web, and its presence will only continue to increase.",
                "Web sites today not only use animated graphics and flash to deliver web content in an attractive manner, but also utilize streaming video to enrich the web interface.",
                "Users are able to view pre-recorded and live newscasts on CNN, watch sports highlights on ESPN, and even search through large collection of videos on Google Video.",
                "To allow applications to provide efficient video playback, interfaces have been created in display systems that allow video device drivers to expose their hardware capabilities back to the applications. pTHINC takes advantage of these interfaces and its virtual device driver approach to provide a virtual bridge between the remote client and its hardware and the applications, and transparently support video playback.",
                "On top of this architecture, pTHINC uses the YUV colorspace to encode the video content, which provides a number of benefits.",
                "First, it has become increasingly common for PDA video hardware to natively support YUV and be able to perform the colorspace conversion and scaling automatically.",
                "As a result, pTHINC is able to provide fullscreen video playback without any performance hits.",
                "Second, the use of YUV allows for a more efficient representation of RGB data without loss of quality, by taking advantage of the human eyes ability to better distinguish differences in brightness than in color.",
                "In particular, pTHINC uses the YV12 format, which allows full color RGB data to be encoded using just 12 bits per pixel.",
                "Third, YUV data is produced as one of the last steps of the decoding process of most video codecs, allowing pTHINC to provide video playback in a manner that is format independent.",
                "Finally, even if the PDAs video hardware is unable to accelerate playback, the colorspace conversion process is simple enough that it does not impose unreasonable requirements on the PDA.",
                "A more concrete example of how pTHINC leverages the PDA video hardware to support video playback can be seen in our prototype implementation on the popular Dell Axim X51v PDA, which is equipped with the Intel 2700G multimedia accelerator.",
                "In this case, pTHINC creates an offscreen buffer in video memory and writes and reads from this memory region data on the YV12 format.",
                "When a new video frame arrives, video data is copied from the buffer to Figure 2: Experimental Testbed an overlay surface in video memory, which is independent of the normal surface used for traditional drawing.",
                "As the YV12 data is put onto the overlay, the Intel accelerator automatically performs both colorspace conversion and scaling.",
                "By using the overlay surface, pTHINC has no need to redraw the screen once video playback is over since the overlapped surface is unaffected.",
                "In addition, specific overlay regions can be manipulated by leveraging the video hardware, for example to perform hardware linear interpolation to smooth out the frame and display it fullscreen, and to do automatic rotation when the client runs in landscape mode. 4.",
                "EXPERIMENTAL RESULTS We have implemented a pTHINC prototype that runs the client on widely-used Windows Mobile-based Pocket PC devices and the server on both Windows and Linux operating systems.",
                "To demonstrate its effectiveness in supporting mobile wireless web applications, we have measured its performance on web applications.",
                "We present experimental results on different PDA devices for two popular web applications, browsing web pages and playing video content from the web.",
                "We compared pTHINC against native web applications running locally on the PDA to demonstrate the improvement that pTHINC can provide over the traditional fat-client approach.",
                "We also compared pTHINC against three of the most widely used thin clients that can run on PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] and VNC (Virtual Network Computing) [16].",
                "We follow common practice and refer to Citrix MetaFrameXP and Microsoft Remote Desktop by their respective remote display protocols, ICA (Independent Computing Architecture) and RDP (Remote Desktop Protocol). 4.1 Experimental Testbed We conducted our web experiments using two different wireless Pocket PC PDAs in an isolated Wi-Fi network testbed, as shown in Figure 2.",
                "The testbed consisted of two PDA client devices, a packet monitor, a thin-client server, and a web server.",
                "Except for the PDAs, all of the other machines were IBM Netfinity 4500R servers with dual 933 MHz Intel PIII CPUs and 512 MB RAM and were connected on a switched 100 Mbps FastEthernet network.",
                "The web server used was Apache 1.3.27, the network emulator was NISTNet 2.0.12, and the packet monitor was Ethereal 0.10.9.",
                "The PDA clients connected to the testbed through a 802.11b Lucent Orinoco AP-2000 wireless access point.",
                "All experiments using the wireless network were conducted within ten feet of the access point, so we considered the amount of packet loss to be negligible in our experiments.",
                "Two Pocket PC PDAs were used to provide results across both older, less powerful models and newer higher performance models.",
                "The older model was a Dell Axim X5 with 147 Client 1024×768 640×480 Depth Resize Clip RDP no yes 8-bit no yes VNC yes yes 16-bit no no ICA yes yes 16-bit yes no pTHINC yes yes 24-bit yes no Table 2: Thin-client Testbed Configuration Setting a 400 MHz Intel XScale PXA255 CPU and 64 MB RAM running Windows Mobile 2003 and a Dell TrueMobile 1180 2.4Ghz CompactFlash card for wireless networking.",
                "The newer model was a Dell Axim X51v with a 624 MHz Intel XScale XPA270 CPU and 64 MB RAM running Windows Mobile 5.0 and integrated 802.11b wireless networking.",
                "The X51v has an Intel 2700G multimedia accelerator with 16MB video memory.",
                "Both PDAs are capable of 16-bit color but have different screen sizes and display resolutions.",
                "The X5 has a 3.5 inch diagonal screen with 240×320 resolution.",
                "The X51v has a 3.7 inch diagonal screen with 480×640.",
                "The four thin clients that we used support different levels of display quality as summarized in Table 2.",
                "The RDP client only supports a fixed 640×480 display resolution on the server with 8-bit color depth, while other platforms provide higher levels of display quality.",
                "To provide a fair comparison across all platforms, we conducted our experiments with thin-client sessions configured for two possible resolutions, 1024×768 and 640×480.",
                "Both ICA and VNC were configured to use the native PDA resolution of 16-bit color depth.",
                "The current pTHINC prototype uses 24-bit color directly and the client downsamples updates to the 16-bit color depth available on the PDA.",
                "RDP was configured using only 8-bit color depth since it does not support any better color depth.",
                "Since both pTHINC and ICA provide the ability to view the display resized to fit the screen, we measured both clients with and without the display resized to fit the PDA screen.",
                "Each thin client was tested using landscape rather than portrait mode when available.",
                "All systems run on the X51v could run in landscape mode because the hardware provides a landscape mode feature.",
                "However, the X5 does not provide this functionality.",
                "Only pTHINC directly supports landscape mode, so it was the only system that could run in landscape mode on both the X5 and X51v.",
                "To provide a fair comparison, we also standardized on common hardware and operating systems whenever possible.",
                "All of the systems used the Netfinity server as the thin-client server.",
                "For the two systems designed for Windows servers, ICA and RDP, we ran Windows 2003 Server on the server.",
                "For the other systems which support X-based servers, VNC and pTHINC, we ran the Debian Linux Unstable distribution with the Linux 2.6.10 kernel on the server.",
                "We used the latest thin-client server versions available on each platform at the time of our experiments, namely Citrix MetaFrame XP Server for Windows Feature Release 3, Microsoft Remote Desktop built into Windows XP and Windows 2003 using RDP 5.2, and VNC 4.0. 4.2 Application Benchmarks We used two web application benchmarks for our experiments based on two common application scenarios, browsing web pages and playing video content from the web.",
                "Since many thin-client systems including two of the ones tested are closed and proprietary, we measured their performance in a noninvasive manner by capturing network traffic with a packet monitor and using a variant of slow-motion benchmarking [13] previously developed to measure thin-client performance in PDA environments [10].",
                "This measurement methodology accounts for both the display decoupling that can occur between client and server in thin-client systems as well as client processing time, which may be significant in the case of PDAs.",
                "To measure web browsing performance, we used a web browsing benchmark based on the Web Text Page Load Test from the Ziff-Davis i-Bench benchmark suite [7].",
                "The benchmark consists of JavaScript controlled load of 55 pages from the web server.",
                "The pages contain both text and graphics with pages varying in size.",
                "The graphics are embedded images in GIF and JPEG formats.",
                "The original i-Bench benchmark was modified for slow-motion benchmarking by introducing delays of several seconds between the pages using JavaScript.",
                "Then two tests were run, one where delays where added between each page, and one where pages where loaded continuously without waiting for them to be displayed on the client.",
                "In the first test, delays were sufficiently adjusted in each case to ensure that each page could be received and displayed on the client completely without temporal overlap in transferring the data belonging to two consecutive pages.",
                "We used the packet monitor to record the packet traffic for each run of the benchmark, then used the timestamps of the first and last packet in the trace to obtain our latency measures [10].",
                "The packet monitor also recorded the amount of data transmitted between the client and the server.",
                "The ratio between the data traffic in the two tests yields a scale factor.",
                "This scale factor shows the loss of data between the server and the client due to inability of the client to process the data quickly enough.",
                "The product of the scale factor with the latency measurement produces the true latency accounting for client processing time.",
                "To run the web browsing benchmark, we used Mozilla Firefox 1.0.4 running on the thin-client server for the thin clients, and Windows Internet Explorer (IE) Mobile for 2003 and Mobile for 5.0 for the native browsers on the X5 and X51v PDAs, respectively.",
                "In all cases, the web browser used was sized to fill the entire display region available.",
                "To measure video playback performance, we used a video benchmark that consisted of playing a 34.75s MPEG-1 video clip containing a mix of news and entertainment programming at full-screen resolution.",
                "The video clip is 5.11 MB and consists of 834 352x240 pixel frames with an ideal frame rate of 24 frames/sec.",
                "We measured video performance using slow-motion benchmarking by monitoring resulting packet traffic at two playback rates, 1 frames/second (fps) and 24 fps, and comparing the results to determine playback delays and frame drops that occur at 24 fps to measure overall video quality [13].",
                "For example, 100% quality means that all video frames were played at real-time speed.",
                "On the other hand, 50% quality could mean that half the video data was dropped, or that the clip took twice as long to play even though all of the video data was displayed.",
                "To run the video benchmark, we used Windows Media Player 9 for Windows-based thin-client servers, MPlayer 1.0 pre 6 for X-based thin-client servers, and Windows Media Player 9 Mobile and 10 Mobile for the native video players running locally on the X5 and X51v PDAs, respectively.",
                "In all cases, the video player used was sized to fill the entire display region available. 4.3 Measurements Figures 3 and 4 show the results of running the web brows148 0 1 10 100 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL Latency(s) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 3: Browsing Benchmark: Average Page Latency ing benchmark.",
                "For each platform, we show results for up to four different configurations, two on the X5 and two on the X51v, depending on whether each configuration was supported.",
                "However, not all platforms could support all configurations.",
                "The local browser only runs at the display resolution of the PDA, 480×680 or less for the X51v and the X5.",
                "RDP only runs at 640×480.",
                "Neither platform could support 1024×768 display resolution.",
                "ICA only ran on the X5 and could not run on the X51v because it did not work on Windows Mobile 5.",
                "Figure 3 shows the average latency per web page for each platform. pTHINC provides the lowest average web browsing latency on both PDAs.",
                "On the X5, pTHINC performs up to 70 times better than other thin-client systems and 8 times better than the local browser.",
                "On the X51v, pTHINC performs up to 80 times better than other thin-client systems and 7 times better than the native browser.",
                "In fact, all of the thin clients except VNC outperform the local PDA browser, demonstrating the performance benefits of the thin-client approach.",
                "Usability studies have shown that web pages should take less than one second to download for the user to experience an uninterrupted web browsing experience [14].",
                "The measurements show that only the thin clients deliver subsecond web page latencies.",
                "In contrast, the local browser requires more than 3 seconds on average per web page.",
                "The local browser performs worse since it needs to run a more limited web browser to process the HTML, JavaScript, and do all the rendering using the limited capabilities of the PDA.",
                "The thin clients can take advantage of faster server hardware and a highly tuned web browser to process the web content much faster.",
                "Figure 3 shows that RDP is the next fastest platform after pTHINC.",
                "However, RDP is only able to run at a fixed resolution of 640×480 and 8-bit color depth.",
                "Furthermore, RDP also clips the display to the size of the PDA screen so that it does not need to send updates that are not visible on the PDA screen.",
                "This provides a performance benefit assuming the remaining web content is not viewed, but degrades performance when a user scrolls around the display to view other web content.",
                "RDP achieves its performance with significantly lower display quality compared to the other thin clients and with additional display clipping not used by other systems.",
                "As a result, RDP performance alone does not provide a complete comparison with the other platforms.",
                "In contrast, pTHINC provides the fastest performance while at the same time providing equal or better display quality than the other systems. 0 1 10 100 1000 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL DataSize(KB) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 4: Browsing Benchmark: Average Page Data Transferred Since VNC and ICA provide similar display quality to pTHINC, these systems provide a more fair comparison of different thin-client approaches.",
                "ICA performs worse in part because it uses higher-level display primitives that require additional client processing costs.",
                "VNC performs worse in part because it loses display data due to its client-pull delivery mechanism and because of the client processing costs in decompressing raw pixel primitives.",
                "In both cases, their performance was limited in part because their PDA clients were unable to keep up with the rate at which web pages were being displayed.",
                "Figure 3 also shows measurements for those thin clients that support resizing the display to fit the PDA screen, namely ICA and pTHINC.",
                "Resizing requires additional processing, which results in slower average web page latencies.",
                "The measurements show that the additional delay incurred by ICA when resizing versus not resizing is much more substantial than for pTHINC.",
                "ICA performs resizing on the slower PDA client.",
                "In contrast, pTHINC leverage the more powerful server to do resizing, reducing the performance difference between resizing and not resizing.",
                "Unlike ICA, pTHINC is able to provide subsecond web page download latencies in both cases.",
                "Figure 4 shows the data transferred in KB per page when running the slow-motion version of the tests.",
                "All of the platforms have modest data transfer requirements of roughly 100 KB per page or less.",
                "This is well within the bandwidth capacity of Wi-Fi networks.",
                "The measurements show that the local browser does not transfer the least amount of data.",
                "This is surprising as HTML is often considered to be a very compact representation of content.",
                "Instead, RDP is the most bandwidth efficient platform, largely as a result of using only 8-bit color depth and screen clipping so that it does not transfer the entire web page to the client. pTHINC overall has the largest data requirements, slightly more than VNC.",
                "This is largely a result of the current pTHINC prototypes lack of native support for 16-bit color data in the wire protocol.",
                "However, this result also highlights pTHINCs performance as it is faster than all other systems even while transferring more data.",
                "Furthermore, as newer PDA models support full 24-bit color, these results indicate that pTHINC will continue to provide good web browsing performance.",
                "Since display usability and quality are as important as performance, Figures 5 to 8 compare screenshots of the different thin clients when displaying a web page, in this case from the popular BBC news website.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode 149 Figure 5: Browser Screenshot: RDP 640x480 Figure 6: Browser Screenshot: VNC 1024x768 Figure 7: Browser Screenshot: ICA Resized 1024x768 Figure 8: Browser Screenshot: pTHINC Resized 1024x768 using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "While the screenshots lack the visual fidelity of the actual device display, several observations can be made.",
                "Figure 5 shows that RDP does not support fullscreen mode and wastes lots of screen space for controls and UI elements, requiring the user to scroll around in order to access the full contents of the web browsing session.",
                "Figure 6 shows that VNC makes better use of the screen space and provides better display quality, but still forces the user to scroll around to view the web page due to its lack of resizing support.",
                "Figure 7 shows ICAs ability to display the full web page given its resizing support, but that its lack of landscape capability and poorer resize algorithm significantly compromise display quality.",
                "In contrast, Figure 8 shows pTHINC using resizing to provide a high quality fullscreen display of the full width of the web page. pTHINC maximizes the entire viewing region by moving all controls to the PDA buttons.",
                "In addition, pTHINC leverages the server computational power to use a high quality resizing algorithm to resize the display to fit the PDA screen without significant overhead.",
                "Figures 9 and 10 show the results of running the video playback benchmark.",
                "For each platform except ICA, we show results for an X5 and X51v configuration.",
                "ICA could not run on the X51v as noted earlier.",
                "The measurements were done using settings that reflected the environment a user would have to access a web session from both a desktop computer and a PDA.",
                "As such, a 1024×768 server display resolution was used whenever possible and the video was shown at fullscreen.",
                "RDP was limited to 640×480 display resolution as noted earlier.",
                "Since viewing the entire video display is the only really usable option, we resized the display to fit the PDA screen for those platforms that supported this feature, namely ICA and pTHINC.",
                "Figure 9 shows the video quality for each platform. pTHINC is the only thin client able to provide perfect video playback quality, similar to the native PDA video player.",
                "All of the other thin clients deliver very poor video quality.",
                "With the exception of RDP on the X51v which provided unacceptable 35% video quality, none of the other systems were even able to achieve 10% video quality.",
                "VNC and ICA have the worst quality at 8% on the X5 device. pTHINCs native video support enables superior video performance, while other thin clients suffer from their inability to distinguish video from normal display updates.",
                "They attempt to apply ineffective and expensive compression algorithms on the video data and are unable to keep up with the stream of updates generated, resulting in dropped frames or long playback times.",
                "VNC suffers further from its client-pull update model because video frames are generated faster than the rate at which the client can process and send requests to the server to obtain the next display update.",
                "Figure 10 shows the total data transferred during 150 0% 20% 40% 60% 80% 100% pTHINCICAVNCRDPLOCAL VideoQuality Platform Axim X5 Axim X51v Figure 9: Video Benchmark: Fullscreen Video Quality 0 1 10 100 pTHINCICAVNCRDPLOCAL VideoDataSize(MB) Platform Axim X5 Axim X51v Figure 10: Video Benchmark: Fullscreen Video Data video playback for each system.",
                "The native player is the most bandwidth efficient platform, sending less than 6 MB of data, which corresponds to about 1.2 Mbps of bandwidth. pTHINCs 100% video quality requires about 25 MB of data which corresponds to a bandwidth usage of less than 6 Mbps.",
                "While the other thin clients send less data than THINC, they do so because they are dropping video data, resulting in degraded video quality.",
                "Figures 11 to 14 compare screenshots of the different thin clients when displaying the video clip.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "Figures 11 and 12 show that RDP and VNC are unable to display the entire video frame on the PDA screen.",
                "RDP wastes screen space for UI elements and VNC only shows the top corner of the video frame on the screen.",
                "Figure 13 shows that ICA provides resizing to display the entire video frame, but did not proportionally resize the video data, resulting in strange display artifacts.",
                "In contrast, Figure 14 shows pTHINC using resizing to provide a high quality fullscreen display of the entire video frame. pTHINC provides visually more appealing video display than RDP, VNC, or ICA. 5.",
                "RELATED WORK Several studies have examined the web browsing performance of thin-client computing [13, 19, 10].",
                "The ability for thin clients to improve web browsing performance on wireless PDAs was first quantitatively demonstrated in a previous study by one of the authors [10].",
                "This study demonstrated that thin clients can provide both faster web browsing performance and greater web browsing functionality.",
                "The study considered a wide range of web content including content from medical information systems.",
                "Our work builds on this previous study and consider important issues such as how usable existing thin clients are in PDA environments, the trade-offs between thin-client usability and performance, performance across different PDA devices, and the performance of thin clients on common web-related applications such as video.",
                "Many thin clients have been developed and some have PDA clients, including Microsofts Remote Desktop [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5], and Tarantella [18].",
                "These systems were first designed for desktop computing and retrofitted for PDAs.",
                "Unlike pTHINC, they do not address key system architecture and usability issues important for PDAs.",
                "This limits their display quality, system performance, available screen space, and overall usability on PDAs. pTHINC builds on previous work by two of the authors on THINC [1], extending the server architecture and introducing a client interface and usage model to efficiently support PDA devices for mobile web applications.",
                "Other approaches to improve the performance of mobile wireless web browsing have focused on using transcoding and caching proxies in conjunction with the fat client model [11, 9, 4, 8].",
                "They work by pushing functionality to external proxies, and using specialized browsing applications on the PDA device that communicate with the proxy.",
                "Our thinclient approach differs fundamentally from these fat-client approaches by pushing all web browser logic to the server, leveraging existing investments in desktop web browsers and helper applications to work seamlessly with production systems without any additional proxy configuration or web browser modifications.",
                "With the emergence of web browsing on small display devices, web sites have been redesigned using mechanisms like WAP and specialized native web browsers have been developed to tailor the needs of these devices.",
                "Recently, Opera has developed the Opera Mini [15] web browser, which uses an approach similar to the thin-client model to provide access across a number of mobile devices that would normally be incapable of running a web browser.",
                "Instead of requiring the device to process web pages, it uses a remote server to pre-process the page before sending it to the phone. 6.",
                "CONCLUSIONS We have introduced pTHINC, a thin-client architecture for wireless PDAs. pTHINC provides key architectural and usability mechanisms such as server-side screen resizing, clientside screen rotation using simple copy techniques, YUV video support, and maximizing screen space for display updates and leveraging existing PDA control buttons for UI elements. pTHINC transparently supports traditional desktop browsers and their helper applications on PDA devices and desktop machines, providing mobile users with ubiquitous access to a consistent, personalized, and full-featured web environment across heterogeneous devices.",
                "We have implemented pTHINC and measured its performance on web applications compared to existing thin-client systems and native web applications.",
                "Our results on multiple mobile wireless devices demonstrate that pTHINC delivers web browsing performance up to 80 times better than existing thin-client systems, and 8 times better than a native PDA browser.",
                "In addition, pTHINC is the only PDA thin client 151 Figure 11: Video Screenshot: RDP 640x480 Figure 12: Video Screenshot: VNC 1024x768 Figure 13: Video Screenshot: ICA Resized 1024x768 Figure 14: Video Screenshot: pTHINC Resized 1024x768 that transparently provides full-screen, full frame rate video playback, making web sites with multimedia content accessible to mobile web users. 7.",
                "ACKNOWLEDGEMENTS This work was supported in part by NSF ITR grants CCR0219943 and CNS-0426623, and an IBM SUR Award. 8.",
                "REFERENCES [1] R. Baratto, L. Kim, and J. Nieh.",
                "THINC: A Virtual Display Architecture for Thin-Client Computing.",
                "In Proceedings of the 20th ACM Symposium on Operating Systems Principles (SOSP), Oct. 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius, and A. Muir.",
                "Microsoft Windows NT Server 4.0, Terminal Server Edition: Technical Reference.",
                "Microsoft Press, Redmond, WA, 1999. [4] A.",
                "Fox, I. Goldberg, S. D. Gribble, and D. C. Lee.",
                "Experience With Top Gun Wingman: A Proxy-Based Graphical Web Browser for the 3Com PalmPilot.",
                "In Proceedings of Middleware 98, Lake District, England, September 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Health Insurance Portability and Accountability Act. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench version 1.5. http: //etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi.",
                "On proxy agents, <br>mobility</br>, and web access.",
                "Mobile Networks and Applications, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon, and A. Ortega.",
                "Design and Implementation of a Soft Caching Proxy.",
                "Computer Networks and ISDN Systems, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana, and S. Varshneya.",
                "Improving Web Browsing on Wireless PDAs Using Thin-Client Computing.",
                "In Proceedings of the 13th International World Wide Web Conference (WWW), May 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham, and P. Shenoy.",
                "TranSquid: Transcoding and caching proxy for heterogenous ecommerce environments.",
                "In Proceedings of the 12th IEEE Workshop on Research Issues in Data Engineering (RIDE 02), Feb. 2002. [12] .NET VNC Viewer for PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang, and N. Novik.",
                "Measuring Thin-Client Performance Using Slow-Motion Benchmarking.",
                "ACM Trans.",
                "Computer Systems, 21(1):87-115, Feb. 2003. [14] J. Nielsen.",
                "Designing Web Usability.",
                "New Riders Publishing, Indianapolis, IN, 2000. [15] Opera Mini Browser. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood, and A. Hopper.",
                "Virtual Network Computing.",
                "IEEE Internet Computing, 2(1), Jan./Feb. 1998. [17] R. W. Scheifler and J. Gettys.",
                "The X Window System.",
                "ACM Trans.",
                "Gr., 5(2):79-106, Apr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla, and M. Sajjadpour.",
                "Web Browsing Performance of Wireless Thin-Client Computing.",
                "In Proceedings of the 12th International World Wide Web Conference (WWW), May 2003. 152"
            ],
            "original_annotated_samples": [
                "We have developed pTHINC, a PDA thinclient solution that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide high-fidelity display and seamless <br>mobility</br> across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available screen resolution for application display.",
                "Furthermore, existing thin clients are ineffective at providing seamless <br>mobility</br> across the heterogeneous mix of device display sizes and resolutions.",
                "This provides users with seamless <br>mobility</br> across different devices.",
                "On proxy agents, <br>mobility</br>, and web access."
            ],
            "translated_annotated_samples": [
                "Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y <br>movilidad</br> fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la resolución de pantalla disponible para la visualización de aplicaciones.",
                "Además, los clientes ligeros existentes son ineficaces para proporcionar <br>movilidad</br> fluida en la mezcla heterogénea de tamaños de pantalla y resoluciones de dispositivos.",
                "Esto proporciona a los usuarios una <br>movilidad</br> fluida entre diferentes dispositivos.",
                "Sobre agentes de proxy, <br>movilidad</br> y acceso web."
            ],
            "translated_text": "pTHINC: Una arquitectura de cliente ligero para la web inalámbrica móvil Joeng Kim, Ricardo A. Baratto y Jason Nieh Departamento de Ciencias de la Computación Universidad de Columbia, Nueva York, NY, EE. UU. {jk2438, ricardo, nieh}@cs.columbia.edu RESUMEN Aunque las aplicaciones web están ganando popularidad en las PDAs inalámbricas móviles, los navegadores web en estos sistemas pueden ser bastante lentos y a menudo carecen de funcionalidad adecuada para acceder a muchos sitios web. Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y <br>movilidad</br> fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la resolución de pantalla disponible para la visualización de aplicaciones. Hemos implementado pTHINC en Windows Mobile y evaluado su rendimiento en dispositivos móviles inalámbricos. Nuestros resultados comparados con los navegadores web PDA locales y otros enfoques de cliente ligero demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero PDA que soporta de manera efectiva aplicaciones de ayuda del navegador cruciales como la reproducción de video. Categorías y Descriptores de Asunto: C.2.4 Comunicación de Computadoras-Redes: Sistemas Distribuidos - cliente/servidor Términos Generales: Diseño, Experimentación, Rendimiento 1. La creciente ubicuidad de las redes inalámbricas y la disminución del costo del hardware están impulsando una proliferación de dispositivos móviles inalámbricos portátiles, tanto como asistentes digitales personales (PDA) inalámbricos independientes y dispositivos populares integrados de PDA/teléfono celular. Estos dispositivos están permitiendo nuevas formas de computación y comunicación móvil. Los proveedores de servicios están aprovechando estos dispositivos para ofrecer acceso web omnipresente, y los usuarios de la web móvil a menudo ya utilizan estos dispositivos para acceder a información habilitada para la web, como noticias, correo electrónico, guías de viaje localizadas y mapas. Es probable que en unos pocos años, la mayoría de los dispositivos que accedan a la web sean móviles. Los usuarios suelen acceder al contenido web ejecutando un navegador web y aplicaciones auxiliares asociadas localmente en la PDA. Aunque existen navegadores web nativos para PDAs, ofrecen un rendimiento deficiente y tienen un conjunto de funciones mucho más pequeño y una funcionalidad más limitada que sus contrapartes de computadoras de escritorio [10]. Como resultado, los navegadores web de PDA a menudo no pueden mostrar el contenido web de sitios web que utilizan tecnologías web más avanzadas para ofrecer una experiencia web más rica. Este problema fundamental surge por dos razones. Primero, debido a que las PDAs tienen un entorno de hardware/software completamente diferente de las computadoras de escritorio tradicionales, las aplicaciones web necesitan ser reescritas y personalizadas para las PDAs si es posible, duplicando los costos de desarrollo. Debido a que el mercado de aplicaciones de escritorio es más grande y maduro, la mayoría del esfuerzo de desarrollo generalmente se destina a las aplicaciones de escritorio, lo que resulta en una mayor funcionalidad y rendimiento que sus contrapartes de PDA. En segundo lugar, las PDAs tienen un entorno con recursos más limitados que las computadoras de escritorio tradicionales para ofrecer un factor de forma más pequeño y una vida útil de la batería más larga. Los navegadores web de escritorio son aplicaciones grandes y complejas que no pueden ejecutarse en una PDA. En cambio, los desarrolladores se ven obligados a reducir significativamente estas navegadores web para ofrecer un navegador web PDA utilizable, lo que limita la funcionalidad del navegador PDA. La computación de cliente ligero proporciona un enfoque alternativo para habilitar el acceso web ubicuo desde dispositivos móviles. Un sistema informático de cliente ligero consiste en un servidor y un cliente que se comunican a través de una red utilizando un protocolo de visualización remota. El protocolo permite que las pantallas gráficas se virtualicen y se sirvan a través de una red a un dispositivo cliente, mientras que la lógica de la aplicación se ejecuta en el servidor. Usando el protocolo de visualización remota, el cliente transmite la entrada del usuario al servidor, y el servidor devuelve actualizaciones de pantalla de las aplicaciones del servidor al cliente. Utilizando un modelo de cliente ligero para dispositivos móviles de mano, las PDAs pueden convertirse en clientes simples sin estado que aprovechan las capacidades del servidor remoto para ejecutar navegadores web y otras aplicaciones auxiliares. El modelo de cliente ligero proporciona varios beneficios importantes para la web inalámbrica móvil. Primero, las aplicaciones web estándar de escritorio pueden utilizarse para entregar contenido web a PDAs sin necesidad de reescribir o adaptar las aplicaciones para ejecutarse en una PDA, lo que reduce los costos de desarrollo y aprovecha las inversiones existentes en software. Segundo, las aplicaciones web complejas pueden ejecutarse en servidores potentes en lugar de ejecutarse en versiones simplificadas en PDAs con recursos más limitados, lo que proporciona una mayor funcionalidad y un mejor rendimiento [10]. Tercero, las aplicaciones web pueden aprovechar servidores con redes más rápidas y mejor conectividad, lo que mejora aún más el rendimiento de la aplicación. En cuarto lugar, las PDAs pueden ser dispositivos aún más simples ya que no necesitan realizar una lógica de aplicación compleja, lo que potencialmente reduce el consumo de energía y extiende la vida útil de la batería. Finalmente, los clientes ligeros PDA pueden ser dispositivos prácticamente sin estado que no necesitan ser respaldados o restaurados, requieren casi ningún mantenimiento o actualizaciones, y no almacenan datos sensibles que puedan perderse o ser robados. Este modelo proporciona una vía viable para que las organizaciones médicas cumplan con las regulaciones de HIPAA mientras incorporan dispositivos móviles en sus operaciones diarias. A pesar de estas posibles ventajas, los clientes ligeros no han podido ofrecer la gama completa de estos beneficios al entregar aplicaciones web a dispositivos móviles portátiles. Los thin clients existentes no fueron diseñados para PDAs y no tienen en cuenta problemas importantes de usabilidad en el contexto de dispositivos de factor de forma pequeño, lo que resulta en dificultades para navegar por el contenido web mostrado. Además, los clientes ligeros existentes son ineficaces para proporcionar <br>movilidad</br> fluida en la mezcla heterogénea de tamaños de pantalla y resoluciones de dispositivos. Si bien los clientes ligeros existentes ya pueden ofrecer un rendimiento más rápido que los navegadores web nativos de PDA al entregar contenido web HTML, no admiten de manera efectiva aplicaciones web auxiliares más intensivas en visualización, como videos multimedia, que cada vez son una parte integral del contenido web disponible. Para aprovechar todo el potencial de la informática de cliente ligero en la provisión de la web inalámbrica móvil en PDAs, hemos desarrollado pTHINC (PDA THin-client InterNet Computing). pTHINC se basa en nuestro trabajo previo en THINC [1] para proporcionar una arquitectura de cliente ligero para dispositivos móviles de mano. pTHINC virtualiza y redimensiona la pantalla en el servidor para entregar de manera eficiente actualizaciones de pantalla de alta fidelidad a una amplia gama de clientes diferentes, tamaños de pantalla y orientaciones de pantalla, incluidos los modos de visualización en vertical y horizontal. Esto permite a pTHINC proporcionar la misma sesión web persistente en diferentes dispositivos de cliente. Por ejemplo, pTHINC puede proporcionar la misma sesión de navegación web adecuadamente escalada para su visualización en una computadora de escritorio y una PDA, de modo que las mismas cookies, marcadores y otros metadatos estén disponibles continuamente en ambas máquinas simultáneamente. El enfoque de visualización virtual de pTHINC aprovecha la información semántica disponible en los comandos de visualización y el hardware de video del cliente para proporcionar mecanismos de visualización remota más eficientes que son cruciales para admitir aplicaciones web más intensivas en visualización. Dada la limitada resolución de pantalla en las PDA, pTHINC maximiza el uso del espacio de pantalla para la visualización remota al trasladar la funcionalidad de control de la pantalla a los botones de control de PDA fácilmente disponibles, mejorando la usabilidad del sistema. Hemos implementado pTHINC en Windows Mobile y demostrado que funciona de manera transparente con las aplicaciones existentes, sistemas de ventanas y sistemas operativos, y no requiere modificar, recompilar o volver a enlazar el software existente. Hemos evaluado cuantitativamente pTHINC frente a navegadores web PDA locales y otros enfoques de cliente ligero en dispositivos Pocket PC. Nuestros resultados experimentales demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero de PDA que soporta de manera efectiva aplicaciones esenciales de ayuda para el navegador, como la reproducción de video. Este documento presenta el diseño e implementación de pTHINC. La sección 2 describe el modelo de uso general y las características de usabilidad de pTHINC. La sección 3 presenta el diseño y la arquitectura del sistema de pTHINC. La sección 4 presenta resultados experimentales que miden el rendimiento de pTHINC en aplicaciones web y lo comparan con navegadores nativos de PDA y otros sistemas de cliente ligero de PDA populares. La sección 5 discute el trabajo relacionado. Finalmente, presentamos algunas observaciones finales. El MODELO DE USO DE pTHINC pTHINC es un sistema de cliente ligero que consiste en una aplicación de visualización de cliente simple que se ejecuta en la PDA y un servidor que se ejecuta en una PC estándar. El servidor aprovecha PCs más potentes para ejecutar navegadores web y otra lógica de aplicaciones. El cliente recibe la entrada del usuario desde el lápiz óptico y el teclado virtual de la PDA y los envía al servidor para pasarlos a las aplicaciones. Las actualizaciones de la pantalla son luego enviadas desde el servidor al cliente para mostrar al usuario. Cuando se inicia el cliente PDA pTHINC, se presenta al usuario una interfaz gráfica simple donde se pueden proporcionar información como la dirección y el puerto del servidor, la información de autenticación del usuario y la configuración de la sesión. pTHINC primero intenta conectarse al servidor y realizar el saludo necesario. Una vez que este proceso haya sido completado, pTHINC presenta al usuario la visualización más reciente de su sesión. Si la sesión no existe, se crea una nueva sesión. Las sesiones existentes pueden continuar sin problemas sin cambios en la configuración de la sesión o del servidor. A diferencia de otros sistemas de cliente ligero, pTHINC proporciona a un usuario un modelo de sesión web persistente en el que un usuario puede iniciar una sesión ejecutando un navegador web y aplicaciones asociadas en el servidor, luego desconectarse de esa sesión y volver a conectarse en cualquier momento. Cuando un usuario se reconecta a la sesión, todas las aplicaciones siguen funcionando desde donde el usuario las dejó, de modo que el usuario puede seguir trabajando como si nunca se hubiera desconectado. La capacidad de desconectarse y reconectarse a una sesión en cualquier momento es un beneficio importante para los usuarios de PDA inalámbricas móviles que pueden tener conectividad de red intermitente. El modelo de sesión web persistente de pTHINCs permite a un usuario reconectarse a una sesión web desde dispositivos distintos al que se inició originalmente la sesión web. Esto proporciona a los usuarios una <br>movilidad</br> fluida entre diferentes dispositivos. Si un usuario pierde su PDA, puede fácilmente usar otra PDA para acceder a su sesión web. Además, pTHINC permite a los usuarios utilizar dispositivos que no son PDA para acceder a sesiones web también. Un usuario puede acceder a la misma sesión web persistente en una PC de escritorio como en una PDA, lo que le permite al usuario utilizar la misma sesión web desde cualquier computadora. El modelo de sesión web persistente de pTHINCs aborda un problema clave encontrado por los usuarios de la web móvil, la falta de un entorno web común en diferentes computadoras. Los navegadores web a menudo almacenan información importante como marcadores, cookies e historial, lo que les permite funcionar de una manera mucho más útil. El problema que ocurre cuando un usuario se mueve entre computadoras es que estos datos, específicos de una instalación de un navegador web, no pueden moverse con el usuario. Además, los navegadores web a menudo necesitan aplicaciones auxiliares para procesar diferentes contenidos multimedia, y esas aplicaciones pueden no estar disponibles de manera consistente en todas las computadoras. pTHINC aborda este problema al permitir que un usuario utilice de forma remota el mismo entorno de navegador web y aplicaciones auxiliares desde cualquier computadora. Como resultado, pTHINC puede proporcionar un entorno de navegación web común y consistente para usuarios móviles en diferentes dispositivos sin requerirles intentar sincronizar repetidamente diferentes entornos de navegación web en múltiples máquinas. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC debe proporcionar mecanismos para admitir diferentes tamaños de pantalla y resoluciones. Con este fin, pTHINC proporciona una función de zoom que permite a un usuario acercar y alejar una pantalla y permite que la pantalla de una sesión web 144 Figura 1: teclas de acceso rápido de pTHINC se redimensione para adaptarse a la pantalla del dispositivo que se está utilizando. Por ejemplo, si el servidor está ejecutando una sesión web a 1024×768 pero el cliente es una PDA con una resolución de pantalla de 640×480, pTHINC redimensionará la pantalla del escritorio para que se ajuste a la pantalla más pequeña de la PDA. pTHINC proporciona al usuario de la PDA la opción de aumentar el tamaño de la pantalla haciendo zoom en diferentes partes de la pantalla. Los usuarios suelen estar familiarizados con el diseño general de los sitios web que visitan con frecuencia, y pueden aprovechar esta función de redimensionamiento para navegar mejor por las páginas web. Por ejemplo, un usuario puede alejarse de la pantalla para ver todo el contenido de la página y navegar por los hipervínculos, luego acercarse a una región de interés para obtener una mejor vista. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC también debe proporcionar mecanismos para admitir diferentes orientaciones de pantalla. En un entorno de escritorio, los usuarios suelen estar acostumbrados a tener las pantallas presentadas en modo horizontal, donde el ancho de la pantalla es mayor que su altura. Sin embargo, en un entorno de PDA, la elección no siempre es obvia. Algunos usuarios pueden preferir tener la pantalla en modo retrato, ya que es más fácil sostener el dispositivo en sus manos, mientras que otros pueden preferir el modo paisaje para minimizar la cantidad de desplazamiento lateral necesario para ver una página web. Para adaptarse a las preferencias de los usuarios de PDA, pTHINC proporciona una función de orientación que le permite rotar la pantalla de forma fluida entre el modo horizontal y vertical. El modo de paisaje es particularmente útil para los usuarios de pTHINC que acceden con frecuencia a sus sesiones web tanto en dispositivos de escritorio como en PDA, proporcionando a esos usuarios el mismo ajuste de paisaje familiar en diferentes dispositivos. Dado que el espacio de pantalla es un recurso relativamente escaso en las PDAs, pTHINC se ejecuta en modo de pantalla completa para maximizar el área de pantalla disponible para mostrar la sesión web. Para poder utilizar toda la pantalla en la PDA y aún así permitir al usuario controlar e interactuar con ella, pTHINC reutiliza los botones de acceso directo típicos que se encuentran en las PDAs para realizar todas las funciones de control disponibles para el usuario. Los botones utilizados por pTHINC no requieren ningún cambio en el entorno del sistema operativo; simplemente son interceptados por la aplicación cliente de pTHINC cuando se presionan. La Figura 1 muestra cómo pTHINC utiliza los botones de acceso directo para proporcionar una navegación sencilla y mejorar la experiencia del usuario en general. Estos botones no son específicos del dispositivo, y el diseño mostrado es común en dispositivos PocketPC ampliamente utilizados. pTHINC proporciona seis accesos directos para apoyar su modelo de uso: • Rotar pantalla: El botón de grabación en el borde izquierdo se utiliza para rotar la pantalla entre modo retrato y modo paisaje cada vez que se presiona el botón. • Alejar: El botón más a la izquierda en la parte inferior delantera se utiliza para alejar la visualización de la sesión web proporcionando una vista general de la sesión web. • Acercar: El segundo botón más a la izquierda en la parte inferior delantera se utiliza para acercar la visualización de la sesión web para ver más claramente el contenido de interés. • Desplazamiento direccional: El botón central en la parte inferior delantera se utiliza para desplazarse alrededor de la visualización utilizando un solo botón de control de una manera que ya es familiar para los usuarios de PDA. Esta función es particularmente útil cuando el usuario ha ampliado una región de la pantalla de tal manera que solo una parte de la pantalla es visible en la pantalla. • Mostrar/Ocultar Teclado: El segundo botón más a la derecha en la parte inferior frontal se utiliza para mostrar un teclado virtual dibujado en la pantalla para dispositivos que no tienen teclado físico. El teclado virtual utiliza mecanismos estándar del sistema operativo de PDA, proporcionando portabilidad entre diferentes entornos de PDA. • Cerrar sesión: El botón más a la derecha en la parte inferior frontal se utiliza para desconectarse de la sesión de pTHINC. pTHINC utiliza la pantalla táctil de la PDA, el lápiz óptico y mecanismos estándar de interfaz de usuario para proporcionar una metáfora de punto y clic de la interfaz de usuario similar a la proporcionada por el ratón en un entorno de computación de escritorio tradicional. pTHINC no utiliza un cursor ya que los entornos de PDA no lo proporcionan. En cambio, un usuario puede usar el lápiz táctil para tocar diferentes secciones de la pantalla táctil y señalar el enfoque de entrada. Un toque único en la pantalla táctil genera un evento de clic de ratón correspondiente. Un doble toque en la pantalla táctil genera un evento de doble clic del ratón correspondiente. pTHINC proporciona emulación de ratón de dos botones al usar el lápiz óptico para presionar la pantalla durante un segundo y generar un clic derecho del ratón. Todas estas acciones son idénticas a la forma en que los usuarios ya interactúan con las aplicaciones de PDA en el entorno común de PocketPC. En la navegación web, los usuarios pueden hacer clic en hipervínculos y enfocarse en cuadros de entrada simplemente tocando el área de interés deseada en la pantalla. A diferencia de los navegadores web PDA locales y otras aplicaciones PDA, pTHINC aprovecha metáforas de interfaz de usuario de escritorio más potentes para permitir a los usuarios manipular múltiples ventanas de aplicación abiertas en lugar de estar limitados a una sola ventana de aplicación en un momento dado. Esto proporciona una mayor flexibilidad de navegación más allá de lo que está actualmente disponible en los dispositivos PDA. Similar a un entorno de escritorio, las ventanas del navegador y otras ventanas de aplicaciones pueden ser movidas al presionar y arrastrar el lápiz óptico de manera similar a un ratón. 3. La arquitectura del sistema pTHINC se basa en la arquitectura de visualización remota THINC para proporcionar un sistema de cliente ligero para PDAs. pTHINC virtualiza la visualización en el servidor aprovechando la capa de abstracción del dispositivo de video, que se encuentra por debajo del servidor de ventanas y por encima del framebuffer. Este es un nivel de dispositivo bien definido y de bajo nivel que depende del dispositivo y expone el hardware de video al sistema de visualización. pTHINC logra esto a través de un controlador de pantalla virtual simple que intercepta comandos de dibujo, los empaqueta y los envía a través de la red. Mientras que otros enfoques de cliente ligero interceptan comandos de visualización en otras capas del subsistema de visualización, el enfoque de virtualización de pantalla de pTHINC proporciona algunos beneficios clave para admitir eficientemente a los clientes de PDA. Por ejemplo, interceptar comandos de visualización en una capa superior entre aplicaciones y el sistema de ventanas, como se hace en X [17], requiere replicar y ejecutar una gran cantidad de funcionalidades en la PDA que tradicionalmente son proporcionadas por el sistema de ventanas de escritorio. Dada la magnitud y complejidad de los sistemas de ventanas tradicionales, intentar replicar esta funcionalidad en el entorno restringido de una PDA habría resultado ser una tarea desafiante, y quizás inviable. Además, las aplicaciones y el sistema de ventanas a menudo requieren una sincronización precisa en su funcionamiento, y imponer una red inalámbrica entre ellos al ejecutar las aplicaciones en el servidor y el sistema de ventanas en el cliente degradaría significativamente el rendimiento. Por otro lado, interceptar en una capa inferior extrayendo píxeles del framebuffer a medida que se renderizan proporciona una solución simple que requiere muy poca funcionalidad en el cliente de PDA, pero también puede resultar en un rendimiento degradado. La razón es que para cuando el servidor de visualización remota intenta enviar actualizaciones de pantalla, ha perdido toda la información semántica que podría haberle ayudado a codificar de manera eficiente, y debe recurrir a utilizar un mecanismo de codificación genérico y costoso en el servidor, así como un mecanismo de decodificación potencialmente costoso en el cliente de PDA limitado. A diferencia de los enfoques de intercepción de alto y bajo nivel, el enfoque de pTHINCs de interceptar en el controlador del dispositivo proporciona un equilibrio efectivo entre la simplicidad del cliente y del servidor, y la capacidad de codificar y decodificar de manera eficiente las actualizaciones de pantalla. Al utilizar un enfoque de visualización virtual de bajo nivel, pTHINC puede codificar de manera eficiente los comandos de visualización de la aplicación utilizando solo un pequeño conjunto de comandos de bajo nivel. En un entorno de PDA, este conjunto de comandos proporciona un componente crucial para mantener la simplicidad del cliente en el entorno de PDA con recursos limitados. Los comandos de visualización se muestran en la Tabla 1 y funcionan de la siguiente manera. COPY instruye al cliente a copiar una región de la pantalla desde su framebuffer local a otra ubicación. Este comando mejora la experiencia del usuario al acelerar el desplazamiento y el movimiento de ventanas opacas sin necesidad de reenviar datos de pantalla desde el servidor. SFILL, PFILL y BITMAP son comandos que pintan una región de tamaño fijo en la pantalla. Son útiles para acelerar la visualización de fondos de ventanas sólidas, patrones de escritorio, fondos de páginas web, dibujo de texto y ciertas operaciones en programas de manipulación de gráficos. SFILL llena una región considerable en la pantalla con un solo color. PFILL replica una baldosa sobre una región de la pantalla. BITMAP realiza un relleno utilizando un mapa de bits de unos y ceros como un estipulado para aplicar un color de primer plano y de fondo. Finalmente, RAW se utiliza para transmitir datos de píxeles no codificados que se mostrarán textualmente en una región de la pantalla. Este comando se invoca como último recurso si el servidor no puede emplear ningún otro comando, y es el único comando que puede ser comprimido para mitigar su impacto en el ancho de banda de la red. pTHINC entrega sus comandos utilizando un mecanismo de actualización de servidor-push no bloqueante, donde tan pronto como se generan actualizaciones de pantalla en el servidor, se envían al cliente. Los clientes no están obligados a solicitar explícitamente actualizaciones de pantalla, minimizando así el impacto que la típica variabilidad de la latencia de la red inalámbrica puede tener en la capacidad de respuesta del sistema. Teniendo en cuenta que los recursos Descripción de Comando COPY Copiar un área de búfer de fotogramas en coordenadas especificadas SFILL Rellenar un área con un valor de color de píxel dado PFILL Azulejar un área con un patrón de píxeles dado BITMAP Rellenar una región usando un patrón de bits RAW Mostrar datos de píxeles en bruto en una ubicación dada Tabla 1: Comandos de visualización del protocolo pTHINC. Las PDAs y las redes inalámbricas limitadas pueden no ser capaces de mantenerse al día con un servidor rápido que genera una gran cantidad de actualizaciones, pTHINC es capaz de fusionar, recortar y descartar actualizaciones automáticamente si se produce pérdida o congestión de red, o si el cliente no puede mantenerse al día con la velocidad de las actualizaciones. Este tipo de comportamiento resulta crucial en un entorno de navegación web, donde por ejemplo, una página puede ser redibujada varias veces mientras se renderiza al vuelo por el navegador. En este caso, la PDA solo recibirá y mostrará el resultado final, que claramente es todo lo que al usuario le interesa ver. pTHINC prioriza la entrega de actualizaciones a la PDA utilizando un programador de actualizaciones preemptivo de Tamaño Restante Más Corto Primero (SRSF). SRSF es análogo a la programación de Tiempo de Procesamiento Restante más Corto, la cual se sabe que es óptima para minimizar el tiempo medio de respuesta en un sistema interactivo. En un entorno de navegación web, los trabajos cortos están asociados con el texto y los componentes básicos de diseño de página, como el fondo de las páginas, que son contenido web crítico para el usuario. Por otro lado, los trabajos grandes suelen ser elementos de embellecimiento de menor prioridad, o, incluso peor, banners y anuncios de página web, los cuales tienen un valor cuestionable para el usuario mientras navega por la página. Usando SRSF, pTHINC puede maximizar la utilización del ancho de banda relativamente escaso disponible en la conexión inalámbrica entre la PDA y el servidor. 3.1 Gestión de la Pantalla Para permitir a los usuarios acceder con la misma facilidad a su navegador web y aplicaciones auxiliares desde una computadora de escritorio en casa como desde una PDA mientras están en movimiento, pTHINC proporciona un mecanismo de redimensionamiento para hacer zoom dentro y fuera de la pantalla de una sesión web. El redimensionamiento de pTHINC es completamente compatible con el servidor, no con el cliente. El servidor vuelve a muestrear las actualizaciones para que se ajusten al área de visualización de las PDAs antes de ser transmitidas por la red. pTHINC utiliza el algoritmo de remuestreo de Fants para redimensionar las actualizaciones de píxeles. Esto proporciona actualizaciones suaves y visualmente agradables con un antialiasing adecuado y solo requiere modestos recursos computacionales. El enfoque de redimensionamiento de pTHINCs tiene varias ventajas. Primero, permite al PDA aprovechar la vastamente superior potencia computacional del servidor para utilizar algoritmos de re-muestreo de alta calidad y producir actualizaciones de mayor calidad para que el PDA las muestre. Segundo, cambiar el tamaño de la pantalla no se traduce en requisitos adicionales de recursos para la PDA, ya que no necesita realizar ningún trabajo adicional. Finalmente, se logra una mejor utilización de la red inalámbrica ya que al reescalar las actualizaciones se reducen sus requisitos de ancho de banda. Para permitir a los usuarios orientar sus pantallas en una PDA y así proporcionar una experiencia visual que se ajuste mejor a las preferencias del usuario y al diseño de páginas web o aplicaciones, pTHINC proporciona un mecanismo de rotación de pantalla para alternar entre los modos de visualización horizontal y vertical. La rotación de pantalla de pTHINC es completamente compatible con el cliente, no con el servidor. pTHINC no recalcula explícitamente la geometría de las actualizaciones de pantalla para realizar la rotación, lo cual sería computacionalmente costoso. En cambio, pTHINC simplemente cambia la forma en que los datos se copian en el framebuffer para cambiar entre los modos de visualización. Cuando está en modo retrato, los datos se copian a lo largo de las filas del framebuffer de izquierda a derecha. Cuando se encuentra en modo horizontal, los datos se copian a lo largo de las columnas del framebuffer de arriba hacia abajo. Estas técnicas muy rápidas y simples reemplazan un conjunto de operaciones de copia por otro y no imponen ningún sobrecosto de rendimiento. pTHINC proporciona su propio mecanismo de rotación para soportar una amplia gama de dispositivos sin imponer requisitos adicionales de funciones en la PDA. Aunque algunos dispositivos PDA más nuevos ofrecen soporte nativo para diferentes orientaciones, este mecanismo no es dinámico y requiere que el usuario rote toda la interfaz de usuario de la PDA antes de iniciar el cliente pTHINC. Windows Mobile proporciona mecanismos de API nativos para que las aplicaciones de PDA puedan rotar su interfaz de usuario sobre la marcha, pero estos mecanismos ofrecen un rendimiento deficiente y una calidad de visualización baja, ya que la rotación se realiza de manera ingenua y no es completamente precisa. 3.2 Reproducción de video El video se ha convertido gradualmente en una parte integral de la World Wide Web, y su presencia solo seguirá aumentando. Los sitios web de hoy en día no solo utilizan gráficos animados y flash para presentar el contenido web de manera atractiva, sino que también utilizan video en streaming para enriquecer la interfaz web. Los usuarios pueden ver noticias pregrabadas y en vivo en CNN, ver los momentos más destacados deportivos en ESPN e incluso buscar a través de una gran colección de videos en Google Video. Para permitir que las aplicaciones proporcionen una reproducción de video eficiente, se han creado interfaces en los sistemas de visualización que permiten a los controladores de dispositivos de video exponer sus capacidades de hardware a las aplicaciones. pTHINC aprovecha estas interfaces y su enfoque de controlador de dispositivo virtual para proporcionar un puente virtual entre el cliente remoto y su hardware y las aplicaciones, y admitir de manera transparente la reproducción de video. Sobre esta arquitectura, pTHINC utiliza el espacio de color YUV para codificar el contenido de video, lo cual proporciona una serie de beneficios. Primero, se ha vuelto cada vez más común que el hardware de video de las PDA admita nativamente YUV y pueda realizar la conversión del espacio de color y el escalado automáticamente. Como resultado, pTHINC puede proporcionar reproducción de video a pantalla completa sin afectar el rendimiento. Segundo, el uso de YUV permite una representación más eficiente de los datos RGB sin pérdida de calidad, aprovechando la capacidad de los ojos humanos para distinguir mejor las diferencias en brillo que en color. En particular, pTHINC utiliza el formato YV12, que permite codificar datos de color RGB completo utilizando solo 12 bits por píxel. Tercero, los datos YUV se producen como uno de los últimos pasos del proceso de decodificación de la mayoría de los códecs de video, lo que permite a pTHINC proporcionar la reproducción de video de una manera independiente del formato. Finalmente, aunque el hardware de video de las PDAs no pueda acelerar la reproducción, el proceso de conversión de espacio de color es lo suficientemente simple como para no imponer requisitos poco razonables en la PDA. Un ejemplo más concreto de cómo pTHINC aprovecha el hardware de video PDA para admitir la reproducción de video se puede ver en nuestra implementación de prototipo en la popular PDA Dell Axim X51v, que está equipada con el acelerador multimedia Intel 2700G. En este caso, pTHINC crea un búfer fuera de pantalla en la memoria de video y escribe y lee desde esta región de memoria datos en formato YV12. Cuando llega un nuevo fotograma de video, los datos de video se copian desde el búfer a una superficie superpuesta en la memoria de video, que es independiente de la superficie normal utilizada para el dibujo tradicional. A medida que los datos YV12 se colocan en la superposición, el acelerador de Intel realiza automáticamente la conversión de espacio de color y el escalado. Al utilizar la superficie de superposición, pTHINC no necesita volver a dibujar la pantalla una vez que la reproducción de video ha terminado, ya que la superficie superpuesta no se ve afectada. Además, las regiones de superposición específicas pueden ser manipuladas aprovechando el hardware de video, por ejemplo, para realizar interpolación lineal de hardware y suavizar el fotograma para mostrarlo a pantalla completa, y para realizar rotación automática cuando el cliente se ejecuta en modo horizontal. 4. RESULTADOS EXPERIMENTALES Hemos implementado un prototipo de pTHINC que ejecuta el cliente en dispositivos Pocket PC basados en Windows Mobile ampliamente utilizados y el servidor en sistemas operativos tanto Windows como Linux. Para demostrar su eficacia en el soporte de aplicaciones web inalámbricas móviles, hemos medido su rendimiento en aplicaciones web. Presentamos resultados experimentales sobre diferentes dispositivos PDA para dos aplicaciones web populares, navegar por páginas web y reproducir contenido de video desde la web. Comparamos pTHINC con aplicaciones web nativas que se ejecutan localmente en la PDA para demostrar la mejora que pTHINC puede proporcionar sobre el enfoque tradicional de cliente pesado. También comparamos pTHINC con tres de los clientes ligeros más utilizados que pueden ejecutarse en PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] y VNC (Virtual Network Computing) [16]. Seguimos la práctica común y nos referimos a Citrix MetaFrameXP y Microsoft Remote Desktop por sus respectivos protocolos de visualización remota, ICA (Independent Computing Architecture) y RDP (Remote Desktop Protocol). 4.1 Plataforma de Pruebas Experimental Realizamos nuestros experimentos web utilizando dos PDA Pocket PC inalámbricas diferentes en un entorno de prueba de red Wi-Fi aislado, como se muestra en la Figura 2. El banco de pruebas consistía en dos dispositivos cliente PDA, un monitor de paquetes, un servidor de cliente ligero y un servidor web. Excepto por las PDAs, todas las demás máquinas eran servidores IBM Netfinity 4500R con procesadores duales Intel PIII de 933 MHz y 512 MB de RAM, y estaban conectadas en una red FastEthernet de 100 Mbps conmutada. El servidor web utilizado fue Apache 1.3.27, el emulador de red fue NISTNet 2.0.12 y el monitor de paquetes fue Ethereal 0.10.9. Los clientes de PDA se conectaron al banco de pruebas a través de un punto de acceso inalámbrico Lucent Orinoco AP-2000 802.11b. Todos los experimentos utilizando la red inalámbrica se llevaron a cabo a una distancia de diez pies del punto de acceso, por lo que consideramos que la cantidad de pérdida de paquetes era insignificante en nuestros experimentos. Se utilizaron dos PDA Pocket PC para proporcionar resultados en modelos antiguos y menos potentes, así como en modelos más nuevos de mayor rendimiento. El modelo anterior era un Dell Axim X5 con 147 Cliente 1024×768 640×480 Profundidad Cambio de tamaño Clip RDP no sí 8 bits no sí VNC sí sí 16 bits no no ICA sí sí 16 bits sí no pTHINC sí sí 24 bits sí no Tabla 2: Configuración del banco de pruebas de cliente ligero con un CPU Intel XScale PXA255 de 400 MHz y 64 MB de RAM ejecutando Windows Mobile 2003 y una tarjeta Dell TrueMobile 1180 de 2.4 GHz CompactFlash para redes inalámbricas. El modelo más nuevo era un Dell Axim X51v con un procesador Intel XScale XPA270 de 624 MHz y 64 MB de RAM ejecutando Windows Mobile 5.0 y con red inalámbrica 802.11b integrada. El X51v tiene un acelerador multimedia Intel 2700G con 16MB de memoria de video. Ambas PDAs son capaces de mostrar colores de 16 bits pero tienen diferentes tamaños de pantalla y resoluciones de visualización. El X5 tiene una pantalla diagonal de 3.5 pulgadas con una resolución de 240×320. El X51v tiene una pantalla diagonal de 3.7 pulgadas con una resolución de 480×640. Los cuatro clientes ligeros que utilizamos admiten diferentes niveles de calidad de visualización, como se resume en la Tabla 2. El cliente de RDP solo admite una resolución de pantalla fija de 640×480 en el servidor con una profundidad de color de 8 bits, mientras que otras plataformas ofrecen niveles más altos de calidad de visualización. Para proporcionar una comparación justa en todas las plataformas, realizamos nuestros experimentos con sesiones de cliente ligero configuradas para dos posibles resoluciones, 1024×768 y 640×480. Tanto ICA como VNC se configuraron para usar la resolución nativa de PDA con una profundidad de color de 16 bits. El prototipo actual de pTHINC utiliza color de 24 bits directamente y el cliente reduce la resolución de las actualizaciones al nivel de color de 16 bits disponible en la PDA. RDP se configuró utilizando solo una profundidad de color de 8 bits ya que no admite ninguna profundidad de color mejor. Dado que tanto pTHINC como ICA ofrecen la capacidad de ver la pantalla redimensionada para ajustarse a la pantalla, medimos ambos clientes con y sin la pantalla redimensionada para ajustarse a la pantalla del PDA. Cada cliente ligero fue probado utilizando el modo de paisaje en lugar del modo retrato cuando estaba disponible. Todos los sistemas que se ejecutan en el X51v podrían funcionar en modo horizontal porque el hardware proporciona una función de modo horizontal. Sin embargo, el X5 no proporciona esta funcionalidad. Solo pTHINC admite directamente el modo paisaje, por lo que era el único sistema que podía ejecutarse en modo paisaje tanto en el X5 como en el X51v. Para proporcionar una comparación justa, también estandarizamos en hardware y sistemas operativos comunes siempre que sea posible. Todos los sistemas utilizaron el servidor Netfinity como servidor de cliente ligero. Para los dos sistemas diseñados para servidores Windows, ICA y RDP, ejecutamos Windows Server 2003 en el servidor. Para los otros sistemas que admiten servidores basados en X, ejecutamos la distribución Debian Linux Inestable con el kernel Linux 2.6.10 en el servidor. Utilizamos las últimas versiones de servidores de cliente ligero disponibles en cada plataforma en el momento de nuestros experimentos, a saber, Citrix MetaFrame XP Server para Windows Feature Release 3, Microsoft Remote Desktop integrado en Windows XP y Windows 2003 utilizando RDP 5.2, y VNC 4.0.4.2. Para los benchmarks de aplicaciones, utilizamos dos benchmarks de aplicaciones web para nuestros experimentos basados en dos escenarios de aplicación comunes, navegación por páginas web y reproducción de contenido de video desde la web. Dado que muchos sistemas de cliente ligero, incluidos dos de los probados, son cerrados y propietarios, medimos su rendimiento de manera no invasiva capturando el tráfico de red con un monitor de paquetes y utilizando una variante de benchmarking en cámara lenta [13] previamente desarrollada para medir el rendimiento de clientes ligeros en entornos de PDA [10]. Esta metodología de medición tiene en cuenta tanto el desacoplamiento de la visualización que puede ocurrir entre el cliente y el servidor en sistemas de cliente ligero, como el tiempo de procesamiento del cliente, que puede ser significativo en el caso de las PDAs. Para medir el rendimiento de la navegación web, utilizamos un benchmark de navegación web basado en la Prueba de Carga de Páginas de Texto Web del conjunto de benchmarks Ziff-Davis i-Bench [7]. El punto de referencia consiste en la carga controlada de 55 páginas desde el servidor web mediante JavaScript. Las páginas contienen tanto texto como gráficos, con páginas de diferentes tamaños. Los gráficos son imágenes incrustadas en formatos GIF y JPEG. El benchmark original i-Bench fue modificado para pruebas de rendimiento en cámara lenta al introducir retrasos de varios segundos entre las páginas utilizando JavaScript. Luego se realizaron dos pruebas, una en la que se agregaron retrasos entre cada página, y otra en la que las páginas se cargaron continuamente sin esperar a que se mostraran en el cliente. En la primera prueba, los retrasos se ajustaron lo suficiente en cada caso para garantizar que cada página pudiera ser recibida y mostrada en el cliente por completo sin solapamiento temporal en la transferencia de los datos pertenecientes a dos páginas consecutivas. Utilizamos el monitor de paquetes para registrar el tráfico de paquetes para cada ejecución de la prueba de referencia, luego utilizamos las marcas de tiempo del primer y último paquete en la traza para obtener nuestras medidas de latencia [10]. El monitor de paquetes también registró la cantidad de datos transmitidos entre el cliente y el servidor. La proporción entre el tráfico de datos en las dos pruebas produce un factor de escala. Este factor de escala muestra la pérdida de datos entre el servidor y el cliente debido a la incapacidad del cliente para procesar los datos lo suficientemente rápido. El producto del factor de escala con la medición de latencia produce la verdadera latencia teniendo en cuenta el tiempo de procesamiento del cliente. Para ejecutar la prueba de navegación web, utilizamos Mozilla Firefox 1.0.4 en el servidor de cliente ligero para los clientes ligeros, y Windows Internet Explorer (IE) Mobile para 2003 y Mobile para 5.0 para los navegadores nativos en las PDAs X5 y X51v, respectivamente. En todos los casos, el navegador web utilizado se ajustó para ocupar toda la región de visualización disponible. Para medir el rendimiento de reproducción de video, utilizamos un banco de pruebas de video que consistía en reproducir un clip de video MPEG-1 de 34.75 segundos que contenía una mezcla de noticias y programación de entretenimiento a resolución de pantalla completa. El videoclip tiene un tamaño de 5.11 MB y consta de 834 cuadros de píxeles de 352x240 con una velocidad de cuadro ideal de 24 cuadros por segundo. Medimos el rendimiento del video utilizando pruebas de referencia en cámara lenta al monitorear el tráfico de paquetes resultante a dos velocidades de reproducción, 1 cuadro por segundo (fps) y 24 fps, y comparando los resultados para determinar los retrasos en la reproducción y las caídas de cuadros que ocurren a 24 fps para medir la calidad general del video [13]. Por ejemplo, el 100% de calidad significa que todos los fotogramas del video se reprodujeron a velocidad en tiempo real. Por otro lado, una calidad del 50% podría significar que se eliminó la mitad de los datos del video, o que el clip tardó el doble en reproducirse a pesar de que se mostró toda la información del video. Para ejecutar la prueba de rendimiento de video, utilizamos Windows Media Player 9 para servidores de clientes ligeros basados en Windows, MPlayer 1.0 pre 6 para servidores de clientes ligeros basados en X, y Windows Media Player 9 Mobile y 10 Mobile para los reproductores de video nativos que se ejecutan localmente en las PDAs X5 y X51v, respectivamente. En todos los casos, el reproductor de video utilizado se dimensionó para llenar toda la región de visualización disponible. Las Figuras 3 y 4 muestran los resultados de ejecutar la prueba de navegación por la web. Para cada plataforma, mostramos resultados de hasta cuatro configuraciones diferentes, dos en el X5 y dos en el X51v, dependiendo de si cada configuración era compatible. Sin embargo, no todas las plataformas podrían admitir todas las configuraciones. El navegador local solo se ejecuta a la resolución de pantalla de la PDA, 480×680 o menos para el X51v y el X5. RDP solo funciona a 640×480. Ninguna plataforma podía soportar una resolución de pantalla de 1024×768. ICA solo funcionaba en el X5 y no podía ejecutarse en el X51v porque no era compatible con Windows Mobile 5. La Figura 3 muestra la latencia promedio por página web para cada plataforma. pTHINC proporciona la latencia promedio más baja en la navegación web en ambas PDAs. En el X5, pTHINC funciona hasta 70 veces mejor que otros sistemas de cliente ligero y 8 veces mejor que el navegador local. En el X51v, pTHINC funciona hasta 80 veces mejor que otros sistemas de cliente ligero y 7 veces mejor que el navegador nativo. De hecho, todos los clientes ligeros excepto VNC superan al navegador local de PDA, demostrando los beneficios de rendimiento del enfoque de cliente ligero. Los estudios de usabilidad han demostrado que las páginas web deben tardar menos de un segundo en descargarse para que el usuario experimente una navegación web ininterrumpida [14]. Las mediciones muestran que solo los clientes delgados ofrecen latencias de página web de menos de un segundo. Por el contrario, el navegador local requiere más de 3 segundos en promedio por página web. El navegador local funciona peor ya que necesita ejecutar un navegador web más limitado para procesar el HTML, JavaScript y realizar todo el renderizado utilizando las capacidades limitadas de la PDA. Los clientes ligeros pueden aprovecharse de hardware de servidor más rápido y un navegador web altamente optimizado para procesar el contenido web mucho más rápido. La Figura 3 muestra que RDP es la plataforma más rápida después de pTHINC. Sin embargo, RDP solo puede ejecutarse a una resolución fija de 640×480 y una profundidad de color de 8 bits. Además, RDP también recorta la pantalla al tamaño de la pantalla de la PDA para no tener que enviar actualizaciones que no son visibles en la pantalla de la PDA. Esto proporciona un beneficio de rendimiento siempre y cuando el resto del contenido web no se visualice, pero degrada el rendimiento cuando un usuario desplaza la pantalla para ver otro contenido web. RDP logra su rendimiento con una calidad de visualización significativamente inferior en comparación con otros clientes ligeros y con recortes adicionales en la visualización que no son utilizados por otros sistemas. Como resultado, el rendimiento de RDP por sí solo no proporciona una comparación completa con las otras plataformas. Por el contrario, pTHINC ofrece el mejor rendimiento al mismo tiempo que proporciona una calidad de visualización igual o mejor que los otros sistemas. Dado que VNC e ICA ofrecen una calidad de visualización similar a pTHINC, estos sistemas proporcionan una comparación más justa de diferentes enfoques de cliente ligero. ICA funciona peor en parte porque utiliza primitivas de visualización de nivel superior que requieren costos adicionales de procesamiento por parte del cliente. VNC funciona peor en parte porque pierde datos de visualización debido a su mecanismo de entrega de cliente-pull y debido a los costos de procesamiento del cliente en descomprimir primitivas de píxeles crudos. En ambos casos, su rendimiento se vio limitado en parte porque sus clientes de PDA no podían mantenerse al ritmo al que se mostraban las páginas web. La Figura 3 también muestra las medidas para aquellos clientes ligeros que admiten redimensionar la pantalla para ajustarse a la pantalla de la PDA, a saber, ICA y pTHINC. El redimensionamiento requiere un procesamiento adicional, lo que resulta en latencias promedio más lentas de las páginas web. Las mediciones muestran que el retraso adicional incurrido por ICA al cambiar el tamaño es mucho más sustancial que para pTHINC. ICA realiza redimensionamiento en el cliente PDA más lento. Por el contrario, pTHINC aprovecha el servidor más potente para redimensionar, reduciendo la diferencia de rendimiento entre redimensionar y no redimensionar. A diferencia de ICA, pTHINC es capaz de proporcionar latencias de descarga de páginas web en menos de un segundo en ambos casos. La Figura 4 muestra los datos transferidos en KB por página al ejecutar la versión de cámara lenta de las pruebas. Todas las plataformas tienen requisitos modestos de transferencia de datos de aproximadamente 100 KB por página o menos. Esto está bien dentro de la capacidad de ancho de banda de las redes Wi-Fi. Las mediciones muestran que el navegador local no transfiere la menor cantidad de datos. Esto es sorprendente ya que HTML suele considerarse una representación muy compacta del contenido. En cambio, RDP es la plataforma más eficiente en ancho de banda, en gran parte debido a que utiliza solo una profundidad de color de 8 bits y recorte de pantalla para no transferir la página web completa al cliente. En general, pTHINC tiene los mayores requisitos de datos, ligeramente más que VNC. Esto se debe en gran medida a la falta de soporte nativo de los prototipos actuales de pTHINC para datos de color de 16 bits en el protocolo de comunicación. Sin embargo, este resultado también destaca el rendimiento de pTHINCs, ya que es más rápido que todos los demás sistemas incluso al transferir más datos. Además, dado que los modelos más recientes de PDA admiten colores completos de 24 bits, estos resultados indican que pTHINC seguirá proporcionando un buen rendimiento en la navegación web. Dado que la usabilidad y la calidad de la pantalla son tan importantes como el rendimiento, las Figuras 5 a 8 comparan capturas de pantalla de los diferentes clientes ligeros al mostrar una página web, en este caso del popular sitio de noticias de la BBC. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo paisaje. Figura 5: Captura de pantalla del navegador: RDP 640x480. Figura 6: Captura de pantalla del navegador: VNC 1024x768. Figura 7: Captura de pantalla del navegador: ICA redimensionado 1024x768. Figura 8: Captura de pantalla del navegador: pTHINC redimensionado 1024x768 utilizando la configuración de resolución de pantalla máxima para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Si bien las capturas de pantalla carecen de la fidelidad visual de la pantalla real del dispositivo, se pueden hacer varias observaciones. La Figura 5 muestra que RDP no admite el modo de pantalla completa y desperdicia mucho espacio en pantalla para controles y elementos de la interfaz de usuario, lo que obliga al usuario a desplazarse para acceder a todo el contenido de la sesión de navegación web. La Figura 6 muestra que VNC aprovecha mejor el espacio de la pantalla y ofrece una mejor calidad de visualización, pero aún obliga al usuario a desplazarse para ver la página web debido a la falta de soporte para redimensionar. La Figura 7 muestra la capacidad de ICA para mostrar la página web completa dada su soporte de redimensionamiento, pero su falta de capacidad en modo paisaje y su algoritmo de redimensionamiento deficiente comprometen significativamente la calidad de visualización. Por el contrario, la Figura 8 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de pantalla completa de alta calidad del ancho completo de la página web. pTHINC maximiza toda la región de visualización moviendo todos los controles a los botones de la PDA. Además, pTHINC aprovecha la potencia computacional del servidor para utilizar un algoritmo de redimensionamiento de alta calidad y ajustar la pantalla al tamaño de la PDA sin un sobrecoste significativo. Las figuras 9 y 10 muestran los resultados de ejecutar la prueba de reproducción de video. Para cada plataforma excepto ICA, mostramos resultados para una configuración X5 y X51v. ICA no pudo ejecutarse en el X51v como se mencionó anteriormente. Las mediciones se realizaron utilizando configuraciones que reflejaban el entorno desde el cual un usuario tendría que acceder a una sesión web tanto desde una computadora de escritorio como desde una PDA. Por lo tanto, se utilizó una resolución de pantalla del servidor de 1024×768 siempre que fuera posible y el video se mostró a pantalla completa. La resolución de pantalla de RDP se limitaba a 640×480, como se mencionó anteriormente. Dado que ver toda la pantalla del video es la única opción realmente utilizable, redimensionamos la pantalla para que se ajustara a la pantalla de la PDA en aquellas plataformas que admitían esta función, a saber, ICA y pTHINC. La Figura 9 muestra la calidad de video para cada plataforma. pTHINC es el único cliente ligero capaz de proporcionar una calidad de reproducción de video perfecta, similar al reproductor de video nativo de PDA. Todos los demás clientes ligeros ofrecen una calidad de video muy pobre. Con la excepción de RDP en el X51v que proporcionó una calidad de video inaceptable del 35%, ninguno de los otros sistemas pudo siquiera alcanzar el 10% de calidad de video. VNC e ICA tienen la peor calidad al 8% en el dispositivo X5. El soporte de video nativo de pTHINCs permite un rendimiento de video superior, mientras que otros clientes ligeros sufren de su incapacidad para distinguir el video de las actualizaciones normales de la pantalla. Intentan aplicar algoritmos de compresión ineficaces y costosos en los datos de video y no pueden mantenerse al día con la corriente de actualizaciones generadas, lo que resulta en cuadros omitidos o largos tiempos de reproducción. VNC se ve aún más afectado por su modelo de actualización de cliente-pull porque los fotogramas de video se generan más rápido que la velocidad a la que el cliente puede procesar y enviar solicitudes al servidor para obtener la siguiente actualización de pantalla. La Figura 10 muestra los datos totales transferidos durante la reproducción de video a pantalla completa para cada sistema. El reproductor nativo es la plataforma más eficiente en ancho de banda, enviando menos de 6 MB de datos, lo que corresponde a aproximadamente 1.2 Mbps de ancho de banda. La calidad de video al 100% de pTHINCs requiere alrededor de 25 MB de datos, lo que corresponde a un uso de ancho de banda de menos de 6 Mbps. Mientras que los otros clientes ligeros envían menos datos que THINC, lo hacen porque están eliminando datos de video, lo que resulta en una calidad de video degradada. Las figuras 11 a 14 comparan capturas de pantalla de los distintos clientes ligeros al mostrar el videoclip. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo horizontal utilizando la configuración de resolución máxima de pantalla para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Las figuras 11 y 12 muestran que RDP y VNC no pueden mostrar el cuadro completo del video en la pantalla de la PDA. RDP desperdicia espacio en pantalla para los elementos de la interfaz de usuario y VNC solo muestra la esquina superior del marco de video en la pantalla. La Figura 13 muestra que el ICA proporciona redimensionamiento para mostrar todo el fotograma del video, pero no redimensiona proporcionalmente los datos del video, lo que resulta en artefactos de visualización extraños. Por el contrario, la Figura 14 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de alta calidad a pantalla completa de todo el fotograma del video. pTHINC ofrece una visualización de video visualmente más atractiva que RDP, VNC o ICA. 5. TRABAJOS RELACIONADOS Varios estudios han examinado el rendimiento de la navegación web en la computación de cliente ligero [13, 19, 10]. La capacidad de los clientes ligeros para mejorar el rendimiento de la navegación web en PDAs inalámbricas fue demostrada cuantitativamente por primera vez en un estudio previo realizado por uno de los autores [10]. Este estudio demostró que los clientes ligeros pueden ofrecer tanto un rendimiento de navegación web más rápido como una mayor funcionalidad de navegación web. El estudio consideró una amplia gama de contenido web, incluido el contenido de sistemas de información médica. Nuestro trabajo se basa en este estudio previo y considera temas importantes como la usabilidad de los clientes ligeros existentes en entornos de PDA, los compromisos entre la usabilidad y el rendimiento de los clientes ligeros, el rendimiento en diferentes dispositivos de PDA y el rendimiento de los clientes ligeros en aplicaciones web comunes como el video. Se han desarrollado muchos clientes ligeros y algunos tienen clientes de PDA, incluyendo Remote Desktop de Microsoft [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5] y Tarantella [18]. Estos sistemas fueron diseñados inicialmente para computadoras de escritorio y adaptados posteriormente para asistentes digitales personales (PDA). A diferencia de pTHINC, no abordan los problemas clave de arquitectura del sistema y usabilidad importantes para las PDAs. Esto limita la calidad de visualización, el rendimiento del sistema, el espacio de pantalla disponible y la usabilidad general en PDAs. pTHINC se basa en trabajos anteriores de dos de los autores sobre THINC [1], ampliando la arquitectura del servidor e introduciendo una interfaz de cliente y un modelo de uso para admitir eficientemente dispositivos PDA en aplicaciones web móviles. Otros enfoques para mejorar el rendimiento de la navegación web inalámbrica móvil se han centrado en el uso de proxies de transcodificación y almacenamiento en caché en conjunto con el modelo de cliente pesado [11, 9, 4, 8]. Trabajan mediante el envío de funcionalidades a proxies externos y utilizando aplicaciones de navegación especializadas en el dispositivo PDA que se comunican con el proxy. Nuestro enfoque de cliente ligero difiere fundamentalmente de estos enfoques de cliente pesado al trasladar toda la lógica del navegador web al servidor, aprovechando las inversiones existentes en navegadores web de escritorio y aplicaciones auxiliares para funcionar de manera integrada con los sistemas de producción sin necesidad de configuraciones adicionales de proxy o modificaciones en el navegador web. Con la aparición de la navegación web en dispositivos con pantallas pequeñas, los sitios web han sido rediseñados utilizando mecanismos como WAP y se han desarrollado navegadores web nativos especializados para adaptarse a las necesidades de estos dispositivos. Recientemente, Opera ha desarrollado el navegador web Opera Mini [15], que utiliza un enfoque similar al modelo de cliente ligero para proporcionar acceso a través de una serie de dispositivos móviles que normalmente no podrían ejecutar un navegador web. En lugar de requerir que el dispositivo procese las páginas web, utiliza un servidor remoto para preprocesar la página antes de enviarla al teléfono. CONCLUSIONES Hemos introducido pTHINC, una arquitectura de cliente ligero para PDAs inalámbricas. pTHINC proporciona mecanismos arquitectónicos y de usabilidad clave como el redimensionamiento de pantalla en el lado del servidor, rotación de pantalla en el lado del cliente utilizando técnicas simples de copia, soporte de video YUV, y maximización del espacio de pantalla para actualizaciones de visualización y aprovechamiento de los botones de control existentes en las PDAs para elementos de la interfaz de usuario. pTHINC soporta de manera transparente navegadores de escritorio tradicionales y sus aplicaciones auxiliares en dispositivos PDA y computadoras de escritorio, brindando a los usuarios móviles acceso ubicuo a un entorno web consistente, personalizado y completo en dispositivos heterogéneos. Hemos implementado pTHINC y medido su rendimiento en aplicaciones web en comparación con los sistemas de cliente ligero existentes y las aplicaciones web nativas. Nuestros resultados en múltiples dispositivos móviles inalámbricos demuestran que pTHINC ofrece un rendimiento de navegación web hasta 80 veces mejor que los sistemas de cliente ligero existentes, y 8 veces mejor que un navegador PDA nativo. Además, pTHINC es el único cliente ligero de PDA 151 Figura 11: Captura de pantalla de video: RDP 640x480 Figura 12: Captura de pantalla de video: VNC 1024x768 Figura 13: Captura de pantalla de video: ICA redimensionado 1024x768 Figura 14: Captura de pantalla de video: pTHINC redimensionado 1024x768 que proporciona de manera transparente la reproducción de video a pantalla completa y a velocidad de cuadro completa, haciendo que los sitios web con contenido multimedia sean accesibles para los usuarios de la web móvil. 7. AGRADECIMIENTOS Este trabajo fue apoyado en parte por las subvenciones NSF ITR CCR0219943 y CNS-0426623, y un premio IBM SUR. 8. REFERENCIAS [1] R. Baratto, L. Kim y J. Nieh. THINC: Una arquitectura de visualización virtual para la computación de cliente ligero. En Actas del 20º Simposio de Principios de Sistemas Operativos de la ACM (SOSP), octubre de 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius y A. Muir. Microsoft Windows NT Server 4.0, Terminal Server Edition: Referencia Técnica. Microsoft Press, Redmond, WA, 1999. [4] A.\nMicrosoft Press, Redmond, WA, 1999. [4] A. Fox, I. Goldberg, S. D. Gribble y D. C. Lee. Experiencia con Top Gun Wingman: un navegador web gráfico basado en proxy para el 3Com PalmPilot. En Actas de Middleware 98, Lake District, Inglaterra, septiembre de 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Ley de Portabilidad y Responsabilidad del Seguro de Salud. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench versión 1.5. http://etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi. Sobre agentes de proxy, <br>movilidad</br> y acceso web. Redes y aplicaciones móviles, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon y A. Ortega. Diseño e Implementación de un Proxy de Caché Blando. Redes de Computadoras y Sistemas ISDN, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana y S. Varshneya. Mejorando la navegación web en PDAs inalámbricas utilizando computación de cliente ligero. En Actas de la 13ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham y P. Shenoy. TranSquid: Proxy de transcodificación y almacenamiento en caché para entornos de comercio electrónico heterogéneos. En Actas del 12º Taller IEEE sobre Problemas de Investigación en Ingeniería de Datos (RIDE 02), febrero de 2002. [12] Visor VNC .NET para PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang y N. Novik. Midiendo el rendimiento de clientes ligeros utilizando pruebas de referencia en cámara lenta. ACM Trans. Sistemas de Computación, 21(1):87-115, Feb. 2003. [14] J. Nielsen. Diseño de Usabilidad en la Web. New Riders Publishing, Indianápolis, IN, 2000. [15] Navegador Opera Mini. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood y A. Hopper. Computación de Red Virtual. IEEE Internet Computing, 2(1), enero/febrero de 1998. [17] R. W. Scheifler y J. Gettys. El Sistema de Ventanas X. ACM Trans. Gr., 5(2):79-106, Abr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla y M. Sajjadpour. Rendimiento de la navegación web en computación inalámbrica de cliente ligero. En Actas de la 12ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2003. 152 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "pervasive web": {
            "translated_key": "web omnipresente",
            "is_in_text": true,
            "original_annotated_sentences": [
                "pTHINC: A Thin-Client Architecture for Mobile Wireless Web Joeng Kim, Ricardo A. Baratto, and Jason Nieh Department of Computer Science Columbia University, New York, NY, USA {jk2438, ricardo, nieh}@cs.columbia.edu ABSTRACT Although web applications are gaining popularity on mobile wireless PDAs, web browsers on these systems can be quite slow and often lack adequate functionality to access many web sites.",
                "We have developed pTHINC, a PDA thinclient solution that leverages more powerful servers to run full-function web browsers and other application logic, then sends simple screen updates to the PDA for display. pTHINC uses server-side screen scaling to provide high-fidelity display and seamless mobility across a broad range of different clients and screen sizes, including both portrait and landscape viewing modes. pTHINC also leverages existing PDA control buttons to improve system usability and maximize available screen resolution for application display.",
                "We have implemented pTHINC on Windows Mobile and evaluated its performance on mobile wireless devices.",
                "Our results compared to local PDA web browsers and other thin-client approaches demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "Categories and Subject Descriptors: C.2.4 ComputerCommunication-Networks: Distributed Systems - client/ server General Terms: Design, Experimentation, Performance 1.",
                "INTRODUCTION The increasing ubiquity of wireless networks and decreasing cost of hardware is fueling a proliferation of mobile wireless handheld devices, both as standalone wireless Personal Digital Assistants (PDA) and popular integrated PDA/cell phone devices.",
                "These devices are enabling new forms of mobile computing and communication.",
                "Service providers are leveraging these devices to deliver <br>pervasive web</br> access, and mobile web users already often use these devices to access web-enabled information such as news, email, and localized travel guides and maps.",
                "It is likely that within a few years, most of the devices accessing the web will be mobile.",
                "Users typically access web content by running a web browser and associated helper applications locally on the PDA.",
                "Although native web browsers exist for PDAs, they deliver subpar performance and have a much smaller feature set and more limited functionality than their desktop computing counterparts [10].",
                "As a result, PDA web browsers are often not able to display web content from web sites that leverage more advanced web technologies to deliver a richer web experience.",
                "This fundamental problem arises for two reasons.",
                "First, because PDAs have a completely different hardware/software environment from traditional desktop computers, web applications need to be rewritten and customized for PDAs if at all possible, duplicating development costs.",
                "Because the desktop application market is larger and more mature, most development effort generally ends up being spent on desktop applications, resulting in greater functionality and performance than their PDA counterparts.",
                "Second, PDAs have a more resource constrained environment than traditional desktop computers to provide a smaller form factor and longer battery life.",
                "Desktop web browsers are large, complex applications that are unable to run on a PDA.",
                "Instead, developers are forced to significantly strip down these web browsers to provide a usable PDA web browser, thereby crippling PDA browser functionality.",
                "Thin-client computing provides an alternative approach for enabling <br>pervasive web</br> access from handheld devices.",
                "A thin-client computing system consists of a server and a client that communicate over a network using a remote display protocol.",
                "The protocol enables graphical displays to be virtualized and served across a network to a client device, while application logic is executed on the server.",
                "Using the remote display protocol, the client transmits user input to the server, and the server returns screen updates of the applications from the server to the client.",
                "Using a thin-client model for mobile handheld devices, PDAs can become simple stateless clients that leverage the remote server capabilities to execute web browsers and other helper applications.",
                "The thin-client model provides several important benefits for mobile wireless web.",
                "First, standard desktop web applications can be used to deliver web content to PDAs without rewriting or adapting applications to execute on a PDA, reducing development costs and leveraging existing software investments.",
                "Second, complex web applications can be executed on powerful servers instead of running stripped down versions on more resource constrained PDAs, providing greater functionality and better performance [10].",
                "Third, web applications can take advantage of servers with faster networks and better connectivity, further boosting application performance.",
                "Fourth, PDAs can be even simpler devices since they do not need to perform complex application logic, potentially reducing energy consumption and extend143 ing battery life.",
                "Finally, PDA thin clients can be essentially stateless appliances that do not need to be backed up or restored, require almost no maintenance or upgrades, and do not store any sensitive data that can be lost or stolen.",
                "This model provides a viable avenue for medical organizations to comply with HIPAA regulations [6] while embracing mobile handhelds in their day to day operations.",
                "Despite these potential advantages, thin clients have been unable to provide the full range of these benefits in delivering web applications to mobile handheld devices.",
                "Existing thin clients were not designed for PDAs and do not account for important usability issues in the context of small form factor devices, resulting in difficulty in navigating displayed web content.",
                "Furthermore, existing thin clients are ineffective at providing seamless mobility across the heterogeneous mix of device display sizes and resolutions.",
                "While existing thin clients can already provide faster performance than native PDA web browsers in delivering HTML web content, they do not effectively support more display-intensive web helper applications such as multimedia video, which is increasingly an integral part of available web content.",
                "To harness the full potential of thin-client computing in providing mobile wireless web on PDAs, we have developed pTHINC (PDA THin-client InterNet Computing). pTHINC builds on our previous work on THINC [1] to provide a thinclient architecture for mobile handheld devices. pTHINC virtualizes and resizes the display on the server to efficiently deliver high-fidelity screen updates to a broad range of different clients, screen sizes, and screen orientations, including both portrait and landscape viewing modes.",
                "This enables pTHINC to provide the same persistent web session across different client devices.",
                "For example, pTHINC can provide the same web browsing session appropriately scaled for display on a desktop computer and a PDA so that the same cookies, bookmarks, and other meta-data are continuously available on both machines simultaneously. pTHINCs virtual display approach leverages semantic information available in display commands, and client-side video hardware to provide more efficient remote display mechanisms that are crucial for supporting more display-intensive web applications.",
                "Given limited display resolution on PDAs, pTHINC maximizes the use of screen real estate for remote display by moving control functionality from the screen to readily available PDA control buttons, improving system usability.",
                "We have implemented pTHINC on Windows Mobile and demonstrated that it works transparently with existing applications, window systems, and operating systems, and does not require modifying, recompiling, or relinking existing software.",
                "We have quantitatively evaluated pTHINC against local PDA web browsers and other thin-client approaches on Pocket PC devices.",
                "Our experimental results demonstrate that pTHINC provides superior web browsing performance and is the only PDA thin client that effectively supports crucial browser helper applications such as video playback.",
                "This paper presents the design and implementation of pTHINC.",
                "Section 2 describes the overall usage model and usability characteristics of pTHINC.",
                "Section 3 presents the design and system architecture of pTHINC.",
                "Section 4 presents experimental results measuring the performance of pTHINC on web applications and comparing it against native PDA browsers and other popular PDA thin-client systems.",
                "Section 5 discusses related work.",
                "Finally, we present some concluding remarks. 2.",
                "PTHINC USAGE MODEL pTHINC is a thin-client system that consists of a simple client viewer application that runs on the PDA and a server that runs on a commodity PC.",
                "The server leverages more powerful PCs to to run web browsers and other application logic.",
                "The client takes user input from the PDA stylus and virtual keyboard and sends them to the server to pass to the applications.",
                "Screen updates are then sent back from the server to the client for display to the user.",
                "When the pTHINC PDA client is started, the user is presented with a simple graphical interface where information such as server address and port, user authentication information, and session settings can be provided. pTHINC first attempts to connect to the server and perform the necessary handshaking.",
                "Once this process has been completed, pTHINC presents the user with the most recent display of his session.",
                "If the session does not exist, a new session is created.",
                "Existing sessions can be seamlessly continued without changes in the session setting or server configuration.",
                "Unlike other thin-client systems, pTHINC provides a user with a persistent web session model in which a user can launch a session running a web browser and associated applications at the server, then disconnect from that session and reconnect to it again anytime.",
                "When a user reconnects to the session, all of the applications continue running where the user left off, so that the user can continue working as though he or she never disconnected.",
                "The ability to disconnect and reconnect to a session at anytime is an important benefit for mobile wireless PDA users which may have intermittent network connectivity. pTHINCs persistent web session model enables a user to reconnect to a web session from devices other than the one on which the web session was originally initiated.",
                "This provides users with seamless mobility across different devices.",
                "If a user loses his PDA, he can easily use another PDA to access his web session.",
                "Furthermore, pTHINC allows users to use non-PDA devices to access web sessions as well.",
                "A user can access the same persistent web session on a desktop PC as on a PDA, enabling a user to use the same web session from any computer. pTHINCs persistent web session model addresses a key problem encountered by mobile web users, the lack of a common web environment across computers.",
                "Web browsers often store important information such as bookmarks, cookies, and history, which enable them to function in a much more useful manner.",
                "The problem that occurs when a user moves between computers is that this data, which is specific to a web browser installation, cannot move with the user.",
                "Furthermore, web browsers often need helper applications to process different media content, and those applications may not be consistently available across all computers. pTHINC addresses this problem by enabling a user to remotely use the exact same web browser environment and helper applications from any computer.",
                "As a result, pTHINC can provide a common, consistent web browsing environment for mobile users across different devices without requiring them to attempt to repeatedly synchronize different web browsing environments across multiple machines.",
                "To enable a user to access the same web session on different devices, pTHINC must provide mechanisms to support different display sizes and resolutions.",
                "Toward this end, pTHINC provides a zoom feature that enables a user to zoom in and out of a display and allows the display of a web 144 Figure 1: pTHINC shortcut keys session to be resized to fit the screen of the device being used.",
                "For example, if the server is running a web session at 1024×768 but the client is a PDA with a display resolution of 640×480, pTHINC will resize the desktop display to fit the full display in the smaller screen of the PDA. pTHINC provides the PDA user with the option to increase the size of the display by zooming in to different parts of the display.",
                "Users are often familiar with the general layout of commonly visited websites, and are able to leverage this resizing feature to better navigate through web pages.",
                "For example, a user can zoom out of the display to view the entire page content and navigate hyperlinks, then zoom in to a region of interest for a better view.",
                "To enable a user to access the same web session on different devices, pTHINC must also provide mechanisms to support different display orientations.",
                "In a desktop environment, users are typically accustomed to having displays presented in landscape mode where the screen width is larger than its height.",
                "However, in a PDA environment, the choice is not always obvious.",
                "Some users may prefer having the display in portrait mode, as it is easier to hold the device in their hands, while others may prefer landscape mode in order to minimize the amount of side-scrolling necessary to view a web page.",
                "To accommodate PDA user preferences, pTHINC provides an orientation feature that enables it to seamless rotate the display between landscape and portrait mode.",
                "The landscape mode is particularly useful for pTHINC users who frequently access their web sessions on both desktop and PDA devices, providing those users with the same familiar landscape setting across different devices.",
                "Because screen space is a relatively scarce resource on PDAs, pTHINC runs in fullscreen mode to maximize the screen area available to display the web session.",
                "To be able to use all of the screen on the PDA and still allow the user to control and interact with it, pTHINC reuses the typical shortcut buttons found on PDAs to perform all the control functions available to the user.",
                "The buttons used by pTHINC do not require any OS environment changes; they are simply intercepted by the pTHINC client application when they are pressed.",
                "Figure 1 shows how pTHINC utilizes the shortcut buttons to provide easy navigation and improve the overall user experience.",
                "These buttons are not device specific, and the layout shown is common to widelyused PocketPC devices. pTHINC provides six shortcuts to support its usage model: • Rotate Screen: The record button on the left edge is used to rotate the screen between portrait and landscape mode each time the button is pressed. • Zoom Out: The leftmost button on the bottom front is used to zoom out the display of the web session providing a birds eye view of the web session. • Zoom In: The second leftmost button on the bottom front is used to zoom in the display of the web session to more clearly view content of interest. • Directional Scroll: The middle button on the bottom front is used to scroll around the display using a single control button in a way that is already familiar to PDA users.",
                "This feature is particularly useful when the user has zoomed in to a region of the display such that only part of the display is visible on the screen. • Show/Hide Keyboard: The second rightmost button on the bottom front is used to bring up a virtual keyboard drawn on the screen for devices which have no physical keyboard.",
                "The virtual keyboard uses standard PDA OS mechanisms, providing portability across different PDA environments. • Close Session: The rightmost button on the bottom front is used to disconnect from the pTHINC session. pTHINC uses the PDA touch screen, stylus, and standard user interface mechanisms to provide a user interface pointand-click metaphor similar to that provided by the mouse in a traditional desktop computing environment. pTHINC does not use a cursor since PDA environments do not provide one.",
                "Instead, a user can use the stylus to tap on different sections of the touch screen to indicate input focus.",
                "A single tap on the touch screen generates a corresponding single click mouse event.",
                "A double tap on the touch screen generates a corresponding double click mouse event. pTHINC provides two-button mouse emulation by using the stylus to press down on the screen for one second to generate a right mouse click.",
                "All of these actions are identical to the way users already interact with PDA applications in the common PocketPC environment.",
                "In web browsing, users can click on hyperlinks and focus on input boxes by simply tapping on the desired screen area of interest.",
                "Unlike local PDA web browsers and other PDA applications, pTHINC leverages more powerful desktop user interface metaphors to enable users to manipulate multiple open application windows instead of being limited to a single application window at any given moment.",
                "This provides increased browsing flexibility beyond what is currently available on PDA devices.",
                "Similar to a desktop environment, browser windows and other application windows can be moved around by pressing down and dragging the stylus similar to a mouse. 3.",
                "PTHINC SYSTEM ARCHITECTURE pTHINC builds on the THINC [1] remote display architecture to provide a thin-client system for PDAs. pTHINC virtualizes the display at the server by leveraging the video device abstraction layer, which sits below the window server and above the framebuffer.",
                "This is a well-defined, low-level, device-dependent layer that exposes the video hardware to the display system. pTHINC accomplishes this through a simple virtual display driver that intercepts drawing commands, packetizes, and sends them over the network. 145 While other thin-client approaches intercept display commands at other layers of the display subsystem, pTHINCs display virtualization approach provides some key benefits in efficiently supporting PDA clients.",
                "For example, intercepting display commands at a higher layer between applications and the window system as is done by X [17] requires replicating and running a great deal of functionality on the PDA that is traditionally provided by the desktop window system.",
                "Given both the size and complexity of traditional window systems, attempting to replicate this functionality in the restricted PDA environment would have proven to be a daunting, and perhaps unfeasible task.",
                "Furthermore, applications and the window system often require tight synchronization in their operation and imposing a wireless network between them by running the applications on the server and the window system on the client would significantly degrade performance.",
                "On the other hand, intercepting at a lower layer by extracting pixels out of the framebuffer as they are rendered provides a simple solution that requires very little functionality on the PDA client, but can also result in degraded performance.",
                "The reason is that by the time the remote display server attempts to send screen updates, it has lost all semantic information that may have helped it encode efficiently, and it must resort to using a generic and expensive encoding mechanism on the server, as well as a potentially expensive decoding mechanism on the limited PDA client.",
                "In contrast to both the high and low level interception approaches, pTHINCs approach of intercepting at the device driver provides an effective balance between client and server simplicity, and the ability to efficiently encode and decode screen updates.",
                "By using a low-level virtual display approach, pTHINC can efficiently encode application display commands using only a small set of low-level commands.",
                "In a PDA environment, this set of commands provides a crucial component in maintaining the simplicity of the client in the resourceconstrained PDA environment.",
                "The display commands are shown in Table 1, and work as follows.",
                "COPY instructs the client to copy a region of the screen from its local framebuffer to another location.",
                "This command improves the user experience by accelerating scrolling and opaque window movement without having to resend screen data from the server.",
                "SFILL, PFILL, and BITMAP are commands that paint a fixed-size region on the screen.",
                "They are useful for accelerating the display of solid window backgrounds, desktop patterns, backgrounds of web pages, text drawing, and certain operations in graphics manipulation programs.",
                "SFILL fills a sizable region on the screen with a single color.",
                "PFILL replicates a tile over a screen region.",
                "BITMAP performs a fill using a bitmap of ones and zeros as a stipple to apply a foreground and background color.",
                "Finally, RAW is used to transmit unencoded pixel data to be displayed verbatim on a region of the screen.",
                "This command is invoked as a last resort if the server is unable to employ any other command, and it is the only command that may be compressed to mitigate its impact on network bandwidth. pTHINC delivers its commands using a non-blocking, serverpush update mechanism, where as soon as display updates are generated on the server, they are sent to the client.",
                "Clients are not required to explicitly request display updates, thus minimizing the impact that the typical varying network latency of wireless links may have on the responsiveness of the system.",
                "Keeping in mind that resource Command Description COPY Copy a frame buffer area to specified coordinates SFILL Fill an area with a given pixel color value PFILL Tile an area with a given pixel pattern BITMAP Fill a region using a bit pattern RAW Display raw pixel data at a given location Table 1: pTHINC Protocol Display Commands constrained PDAs and wireless networks may not be able to keep up with a fast server generating a large number of updates, pTHINC is able to coalesce, clip, and discard updates automatically if network loss or congestion occurs, or the client cannot keep up with the rate of updates.",
                "This type of behavior proves crucial in a web browsing environment, where for example, a page may be redrawn multiple times as it is rendered on the fly by the browser.",
                "In this case, the PDA will only receive and render the final result, which clearly is all the user is interesting in seeing. pTHINC prioritizes the delivery of updates to the PDA using a Shortest-Remaining-Size-First (SRSF) preemptive update scheduler.",
                "SRSF is analogous to Shortest-RemainingProcessing-Time scheduling, which is known to be optimal for minimizing mean response time in an interactive system.",
                "In a web browsing environment, short jobs are associated with text and basic page layout components such as the pages background, which are critical web content for the user.",
                "On the other hand, large jobs are often lower priority beautifying elements, or, even worse, web page banners and advertisements, which are of questionable value to the user as he or she is browsing the page.",
                "Using SRSF, pTHINC is able to maximize the utilization of the relatively scarce bandwidth available on the wireless connection between the PDA and the server. 3.1 Display Management To enable users to just as easily access their web browser and helper applications from a desktop computer at home as from a PDA while on the road, pTHINC provides a resize mechanism to zoom in and out of the display of a web session. pTHINC resizing is completely supported by the server, not the client.",
                "The server resamples updates to fit within the PDAs viewport before they are transmitted over the network. pTHINC uses Fants resampling algorithm to resize pixel updates.",
                "This provides smooth, visually pleasing updates with properly antialiasing and has only modest computational requirements. pTHINCs resizing approach has a number of advantages.",
                "First, it allows the PDA to leverage the vastly superior computational power of the server to use high quality resampling algorithms and produce higher quality updates for the PDA to display.",
                "Second, resizing the screen does not translate into additional resource requirements for the PDA, since it does not need to perform any additional work.",
                "Finally, better utilization of the wireless network is attained since rescaling the updates reduces their bandwidth requirements.",
                "To enable users to orient their displays on a PDA to provide a viewing experience that best accommodates user preferences and the layout of web pages or applications, pTHINC provides a display rotation mechanism to switch between landscape and portrait viewing modes. pTHINC display rotation is completely supported by the client, not the server. pTHINC does not explicitly recalculate the ge146 ometry of display updates to perform rotation, which would be computationally expensive.",
                "Instead, pTHINC simply changes the way data is copied into the framebuffer to switch between display modes.",
                "When in portrait mode, data is copied along the rows of the framebuffer from left to right.",
                "When in landscape mode, data is copied along the columns of the framebuffer from top to bottom.",
                "These very fast and simple techniques replace one set of copy operations with another and impose no performance overhead. pTHINC provides its own rotation mechanism to support a wide range of devices without imposing additional feature requirements on the PDA.",
                "Although some newer PDA devices provide native support for different orientations, this mechanism is not dynamic and requires the user to rotate the PDAs entire user interface before starting the pTHINC client.",
                "Windows Mobile provides native API mechanisms for PDA applications to rotate their UI on the fly, but these mechanisms deliver poor performance and display quality as the rotation is performed naively and is not completely accurate. 3.2 Video Playback Video has gradually become an integral part of the World Wide Web, and its presence will only continue to increase.",
                "Web sites today not only use animated graphics and flash to deliver web content in an attractive manner, but also utilize streaming video to enrich the web interface.",
                "Users are able to view pre-recorded and live newscasts on CNN, watch sports highlights on ESPN, and even search through large collection of videos on Google Video.",
                "To allow applications to provide efficient video playback, interfaces have been created in display systems that allow video device drivers to expose their hardware capabilities back to the applications. pTHINC takes advantage of these interfaces and its virtual device driver approach to provide a virtual bridge between the remote client and its hardware and the applications, and transparently support video playback.",
                "On top of this architecture, pTHINC uses the YUV colorspace to encode the video content, which provides a number of benefits.",
                "First, it has become increasingly common for PDA video hardware to natively support YUV and be able to perform the colorspace conversion and scaling automatically.",
                "As a result, pTHINC is able to provide fullscreen video playback without any performance hits.",
                "Second, the use of YUV allows for a more efficient representation of RGB data without loss of quality, by taking advantage of the human eyes ability to better distinguish differences in brightness than in color.",
                "In particular, pTHINC uses the YV12 format, which allows full color RGB data to be encoded using just 12 bits per pixel.",
                "Third, YUV data is produced as one of the last steps of the decoding process of most video codecs, allowing pTHINC to provide video playback in a manner that is format independent.",
                "Finally, even if the PDAs video hardware is unable to accelerate playback, the colorspace conversion process is simple enough that it does not impose unreasonable requirements on the PDA.",
                "A more concrete example of how pTHINC leverages the PDA video hardware to support video playback can be seen in our prototype implementation on the popular Dell Axim X51v PDA, which is equipped with the Intel 2700G multimedia accelerator.",
                "In this case, pTHINC creates an offscreen buffer in video memory and writes and reads from this memory region data on the YV12 format.",
                "When a new video frame arrives, video data is copied from the buffer to Figure 2: Experimental Testbed an overlay surface in video memory, which is independent of the normal surface used for traditional drawing.",
                "As the YV12 data is put onto the overlay, the Intel accelerator automatically performs both colorspace conversion and scaling.",
                "By using the overlay surface, pTHINC has no need to redraw the screen once video playback is over since the overlapped surface is unaffected.",
                "In addition, specific overlay regions can be manipulated by leveraging the video hardware, for example to perform hardware linear interpolation to smooth out the frame and display it fullscreen, and to do automatic rotation when the client runs in landscape mode. 4.",
                "EXPERIMENTAL RESULTS We have implemented a pTHINC prototype that runs the client on widely-used Windows Mobile-based Pocket PC devices and the server on both Windows and Linux operating systems.",
                "To demonstrate its effectiveness in supporting mobile wireless web applications, we have measured its performance on web applications.",
                "We present experimental results on different PDA devices for two popular web applications, browsing web pages and playing video content from the web.",
                "We compared pTHINC against native web applications running locally on the PDA to demonstrate the improvement that pTHINC can provide over the traditional fat-client approach.",
                "We also compared pTHINC against three of the most widely used thin clients that can run on PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] and VNC (Virtual Network Computing) [16].",
                "We follow common practice and refer to Citrix MetaFrameXP and Microsoft Remote Desktop by their respective remote display protocols, ICA (Independent Computing Architecture) and RDP (Remote Desktop Protocol). 4.1 Experimental Testbed We conducted our web experiments using two different wireless Pocket PC PDAs in an isolated Wi-Fi network testbed, as shown in Figure 2.",
                "The testbed consisted of two PDA client devices, a packet monitor, a thin-client server, and a web server.",
                "Except for the PDAs, all of the other machines were IBM Netfinity 4500R servers with dual 933 MHz Intel PIII CPUs and 512 MB RAM and were connected on a switched 100 Mbps FastEthernet network.",
                "The web server used was Apache 1.3.27, the network emulator was NISTNet 2.0.12, and the packet monitor was Ethereal 0.10.9.",
                "The PDA clients connected to the testbed through a 802.11b Lucent Orinoco AP-2000 wireless access point.",
                "All experiments using the wireless network were conducted within ten feet of the access point, so we considered the amount of packet loss to be negligible in our experiments.",
                "Two Pocket PC PDAs were used to provide results across both older, less powerful models and newer higher performance models.",
                "The older model was a Dell Axim X5 with 147 Client 1024×768 640×480 Depth Resize Clip RDP no yes 8-bit no yes VNC yes yes 16-bit no no ICA yes yes 16-bit yes no pTHINC yes yes 24-bit yes no Table 2: Thin-client Testbed Configuration Setting a 400 MHz Intel XScale PXA255 CPU and 64 MB RAM running Windows Mobile 2003 and a Dell TrueMobile 1180 2.4Ghz CompactFlash card for wireless networking.",
                "The newer model was a Dell Axim X51v with a 624 MHz Intel XScale XPA270 CPU and 64 MB RAM running Windows Mobile 5.0 and integrated 802.11b wireless networking.",
                "The X51v has an Intel 2700G multimedia accelerator with 16MB video memory.",
                "Both PDAs are capable of 16-bit color but have different screen sizes and display resolutions.",
                "The X5 has a 3.5 inch diagonal screen with 240×320 resolution.",
                "The X51v has a 3.7 inch diagonal screen with 480×640.",
                "The four thin clients that we used support different levels of display quality as summarized in Table 2.",
                "The RDP client only supports a fixed 640×480 display resolution on the server with 8-bit color depth, while other platforms provide higher levels of display quality.",
                "To provide a fair comparison across all platforms, we conducted our experiments with thin-client sessions configured for two possible resolutions, 1024×768 and 640×480.",
                "Both ICA and VNC were configured to use the native PDA resolution of 16-bit color depth.",
                "The current pTHINC prototype uses 24-bit color directly and the client downsamples updates to the 16-bit color depth available on the PDA.",
                "RDP was configured using only 8-bit color depth since it does not support any better color depth.",
                "Since both pTHINC and ICA provide the ability to view the display resized to fit the screen, we measured both clients with and without the display resized to fit the PDA screen.",
                "Each thin client was tested using landscape rather than portrait mode when available.",
                "All systems run on the X51v could run in landscape mode because the hardware provides a landscape mode feature.",
                "However, the X5 does not provide this functionality.",
                "Only pTHINC directly supports landscape mode, so it was the only system that could run in landscape mode on both the X5 and X51v.",
                "To provide a fair comparison, we also standardized on common hardware and operating systems whenever possible.",
                "All of the systems used the Netfinity server as the thin-client server.",
                "For the two systems designed for Windows servers, ICA and RDP, we ran Windows 2003 Server on the server.",
                "For the other systems which support X-based servers, VNC and pTHINC, we ran the Debian Linux Unstable distribution with the Linux 2.6.10 kernel on the server.",
                "We used the latest thin-client server versions available on each platform at the time of our experiments, namely Citrix MetaFrame XP Server for Windows Feature Release 3, Microsoft Remote Desktop built into Windows XP and Windows 2003 using RDP 5.2, and VNC 4.0. 4.2 Application Benchmarks We used two web application benchmarks for our experiments based on two common application scenarios, browsing web pages and playing video content from the web.",
                "Since many thin-client systems including two of the ones tested are closed and proprietary, we measured their performance in a noninvasive manner by capturing network traffic with a packet monitor and using a variant of slow-motion benchmarking [13] previously developed to measure thin-client performance in PDA environments [10].",
                "This measurement methodology accounts for both the display decoupling that can occur between client and server in thin-client systems as well as client processing time, which may be significant in the case of PDAs.",
                "To measure web browsing performance, we used a web browsing benchmark based on the Web Text Page Load Test from the Ziff-Davis i-Bench benchmark suite [7].",
                "The benchmark consists of JavaScript controlled load of 55 pages from the web server.",
                "The pages contain both text and graphics with pages varying in size.",
                "The graphics are embedded images in GIF and JPEG formats.",
                "The original i-Bench benchmark was modified for slow-motion benchmarking by introducing delays of several seconds between the pages using JavaScript.",
                "Then two tests were run, one where delays where added between each page, and one where pages where loaded continuously without waiting for them to be displayed on the client.",
                "In the first test, delays were sufficiently adjusted in each case to ensure that each page could be received and displayed on the client completely without temporal overlap in transferring the data belonging to two consecutive pages.",
                "We used the packet monitor to record the packet traffic for each run of the benchmark, then used the timestamps of the first and last packet in the trace to obtain our latency measures [10].",
                "The packet monitor also recorded the amount of data transmitted between the client and the server.",
                "The ratio between the data traffic in the two tests yields a scale factor.",
                "This scale factor shows the loss of data between the server and the client due to inability of the client to process the data quickly enough.",
                "The product of the scale factor with the latency measurement produces the true latency accounting for client processing time.",
                "To run the web browsing benchmark, we used Mozilla Firefox 1.0.4 running on the thin-client server for the thin clients, and Windows Internet Explorer (IE) Mobile for 2003 and Mobile for 5.0 for the native browsers on the X5 and X51v PDAs, respectively.",
                "In all cases, the web browser used was sized to fill the entire display region available.",
                "To measure video playback performance, we used a video benchmark that consisted of playing a 34.75s MPEG-1 video clip containing a mix of news and entertainment programming at full-screen resolution.",
                "The video clip is 5.11 MB and consists of 834 352x240 pixel frames with an ideal frame rate of 24 frames/sec.",
                "We measured video performance using slow-motion benchmarking by monitoring resulting packet traffic at two playback rates, 1 frames/second (fps) and 24 fps, and comparing the results to determine playback delays and frame drops that occur at 24 fps to measure overall video quality [13].",
                "For example, 100% quality means that all video frames were played at real-time speed.",
                "On the other hand, 50% quality could mean that half the video data was dropped, or that the clip took twice as long to play even though all of the video data was displayed.",
                "To run the video benchmark, we used Windows Media Player 9 for Windows-based thin-client servers, MPlayer 1.0 pre 6 for X-based thin-client servers, and Windows Media Player 9 Mobile and 10 Mobile for the native video players running locally on the X5 and X51v PDAs, respectively.",
                "In all cases, the video player used was sized to fill the entire display region available. 4.3 Measurements Figures 3 and 4 show the results of running the web brows148 0 1 10 100 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL Latency(s) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 3: Browsing Benchmark: Average Page Latency ing benchmark.",
                "For each platform, we show results for up to four different configurations, two on the X5 and two on the X51v, depending on whether each configuration was supported.",
                "However, not all platforms could support all configurations.",
                "The local browser only runs at the display resolution of the PDA, 480×680 or less for the X51v and the X5.",
                "RDP only runs at 640×480.",
                "Neither platform could support 1024×768 display resolution.",
                "ICA only ran on the X5 and could not run on the X51v because it did not work on Windows Mobile 5.",
                "Figure 3 shows the average latency per web page for each platform. pTHINC provides the lowest average web browsing latency on both PDAs.",
                "On the X5, pTHINC performs up to 70 times better than other thin-client systems and 8 times better than the local browser.",
                "On the X51v, pTHINC performs up to 80 times better than other thin-client systems and 7 times better than the native browser.",
                "In fact, all of the thin clients except VNC outperform the local PDA browser, demonstrating the performance benefits of the thin-client approach.",
                "Usability studies have shown that web pages should take less than one second to download for the user to experience an uninterrupted web browsing experience [14].",
                "The measurements show that only the thin clients deliver subsecond web page latencies.",
                "In contrast, the local browser requires more than 3 seconds on average per web page.",
                "The local browser performs worse since it needs to run a more limited web browser to process the HTML, JavaScript, and do all the rendering using the limited capabilities of the PDA.",
                "The thin clients can take advantage of faster server hardware and a highly tuned web browser to process the web content much faster.",
                "Figure 3 shows that RDP is the next fastest platform after pTHINC.",
                "However, RDP is only able to run at a fixed resolution of 640×480 and 8-bit color depth.",
                "Furthermore, RDP also clips the display to the size of the PDA screen so that it does not need to send updates that are not visible on the PDA screen.",
                "This provides a performance benefit assuming the remaining web content is not viewed, but degrades performance when a user scrolls around the display to view other web content.",
                "RDP achieves its performance with significantly lower display quality compared to the other thin clients and with additional display clipping not used by other systems.",
                "As a result, RDP performance alone does not provide a complete comparison with the other platforms.",
                "In contrast, pTHINC provides the fastest performance while at the same time providing equal or better display quality than the other systems. 0 1 10 100 1000 pTHINC Resized pTHINCICA Resized ICAVNCRDPLOCAL DataSize(KB) Platform Axim X5 (640x480 or less) Axim X51v (640x480) Axim X5 (1024x768) Axim X51v (1024x768) Figure 4: Browsing Benchmark: Average Page Data Transferred Since VNC and ICA provide similar display quality to pTHINC, these systems provide a more fair comparison of different thin-client approaches.",
                "ICA performs worse in part because it uses higher-level display primitives that require additional client processing costs.",
                "VNC performs worse in part because it loses display data due to its client-pull delivery mechanism and because of the client processing costs in decompressing raw pixel primitives.",
                "In both cases, their performance was limited in part because their PDA clients were unable to keep up with the rate at which web pages were being displayed.",
                "Figure 3 also shows measurements for those thin clients that support resizing the display to fit the PDA screen, namely ICA and pTHINC.",
                "Resizing requires additional processing, which results in slower average web page latencies.",
                "The measurements show that the additional delay incurred by ICA when resizing versus not resizing is much more substantial than for pTHINC.",
                "ICA performs resizing on the slower PDA client.",
                "In contrast, pTHINC leverage the more powerful server to do resizing, reducing the performance difference between resizing and not resizing.",
                "Unlike ICA, pTHINC is able to provide subsecond web page download latencies in both cases.",
                "Figure 4 shows the data transferred in KB per page when running the slow-motion version of the tests.",
                "All of the platforms have modest data transfer requirements of roughly 100 KB per page or less.",
                "This is well within the bandwidth capacity of Wi-Fi networks.",
                "The measurements show that the local browser does not transfer the least amount of data.",
                "This is surprising as HTML is often considered to be a very compact representation of content.",
                "Instead, RDP is the most bandwidth efficient platform, largely as a result of using only 8-bit color depth and screen clipping so that it does not transfer the entire web page to the client. pTHINC overall has the largest data requirements, slightly more than VNC.",
                "This is largely a result of the current pTHINC prototypes lack of native support for 16-bit color data in the wire protocol.",
                "However, this result also highlights pTHINCs performance as it is faster than all other systems even while transferring more data.",
                "Furthermore, as newer PDA models support full 24-bit color, these results indicate that pTHINC will continue to provide good web browsing performance.",
                "Since display usability and quality are as important as performance, Figures 5 to 8 compare screenshots of the different thin clients when displaying a web page, in this case from the popular BBC news website.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode 149 Figure 5: Browser Screenshot: RDP 640x480 Figure 6: Browser Screenshot: VNC 1024x768 Figure 7: Browser Screenshot: ICA Resized 1024x768 Figure 8: Browser Screenshot: pTHINC Resized 1024x768 using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "While the screenshots lack the visual fidelity of the actual device display, several observations can be made.",
                "Figure 5 shows that RDP does not support fullscreen mode and wastes lots of screen space for controls and UI elements, requiring the user to scroll around in order to access the full contents of the web browsing session.",
                "Figure 6 shows that VNC makes better use of the screen space and provides better display quality, but still forces the user to scroll around to view the web page due to its lack of resizing support.",
                "Figure 7 shows ICAs ability to display the full web page given its resizing support, but that its lack of landscape capability and poorer resize algorithm significantly compromise display quality.",
                "In contrast, Figure 8 shows pTHINC using resizing to provide a high quality fullscreen display of the full width of the web page. pTHINC maximizes the entire viewing region by moving all controls to the PDA buttons.",
                "In addition, pTHINC leverages the server computational power to use a high quality resizing algorithm to resize the display to fit the PDA screen without significant overhead.",
                "Figures 9 and 10 show the results of running the video playback benchmark.",
                "For each platform except ICA, we show results for an X5 and X51v configuration.",
                "ICA could not run on the X51v as noted earlier.",
                "The measurements were done using settings that reflected the environment a user would have to access a web session from both a desktop computer and a PDA.",
                "As such, a 1024×768 server display resolution was used whenever possible and the video was shown at fullscreen.",
                "RDP was limited to 640×480 display resolution as noted earlier.",
                "Since viewing the entire video display is the only really usable option, we resized the display to fit the PDA screen for those platforms that supported this feature, namely ICA and pTHINC.",
                "Figure 9 shows the video quality for each platform. pTHINC is the only thin client able to provide perfect video playback quality, similar to the native PDA video player.",
                "All of the other thin clients deliver very poor video quality.",
                "With the exception of RDP on the X51v which provided unacceptable 35% video quality, none of the other systems were even able to achieve 10% video quality.",
                "VNC and ICA have the worst quality at 8% on the X5 device. pTHINCs native video support enables superior video performance, while other thin clients suffer from their inability to distinguish video from normal display updates.",
                "They attempt to apply ineffective and expensive compression algorithms on the video data and are unable to keep up with the stream of updates generated, resulting in dropped frames or long playback times.",
                "VNC suffers further from its client-pull update model because video frames are generated faster than the rate at which the client can process and send requests to the server to obtain the next display update.",
                "Figure 10 shows the total data transferred during 150 0% 20% 40% 60% 80% 100% pTHINCICAVNCRDPLOCAL VideoQuality Platform Axim X5 Axim X51v Figure 9: Video Benchmark: Fullscreen Video Quality 0 1 10 100 pTHINCICAVNCRDPLOCAL VideoDataSize(MB) Platform Axim X5 Axim X51v Figure 10: Video Benchmark: Fullscreen Video Data video playback for each system.",
                "The native player is the most bandwidth efficient platform, sending less than 6 MB of data, which corresponds to about 1.2 Mbps of bandwidth. pTHINCs 100% video quality requires about 25 MB of data which corresponds to a bandwidth usage of less than 6 Mbps.",
                "While the other thin clients send less data than THINC, they do so because they are dropping video data, resulting in degraded video quality.",
                "Figures 11 to 14 compare screenshots of the different thin clients when displaying the video clip.",
                "Except for ICA, all of the screenshots were taken on the X51v in landscape mode using the maximum display resolution settings for each platform given in Table 2.",
                "The ICA screenshot was taken on the X5 since ICA does not run on the X51v.",
                "Figures 11 and 12 show that RDP and VNC are unable to display the entire video frame on the PDA screen.",
                "RDP wastes screen space for UI elements and VNC only shows the top corner of the video frame on the screen.",
                "Figure 13 shows that ICA provides resizing to display the entire video frame, but did not proportionally resize the video data, resulting in strange display artifacts.",
                "In contrast, Figure 14 shows pTHINC using resizing to provide a high quality fullscreen display of the entire video frame. pTHINC provides visually more appealing video display than RDP, VNC, or ICA. 5.",
                "RELATED WORK Several studies have examined the web browsing performance of thin-client computing [13, 19, 10].",
                "The ability for thin clients to improve web browsing performance on wireless PDAs was first quantitatively demonstrated in a previous study by one of the authors [10].",
                "This study demonstrated that thin clients can provide both faster web browsing performance and greater web browsing functionality.",
                "The study considered a wide range of web content including content from medical information systems.",
                "Our work builds on this previous study and consider important issues such as how usable existing thin clients are in PDA environments, the trade-offs between thin-client usability and performance, performance across different PDA devices, and the performance of thin clients on common web-related applications such as video.",
                "Many thin clients have been developed and some have PDA clients, including Microsofts Remote Desktop [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5], and Tarantella [18].",
                "These systems were first designed for desktop computing and retrofitted for PDAs.",
                "Unlike pTHINC, they do not address key system architecture and usability issues important for PDAs.",
                "This limits their display quality, system performance, available screen space, and overall usability on PDAs. pTHINC builds on previous work by two of the authors on THINC [1], extending the server architecture and introducing a client interface and usage model to efficiently support PDA devices for mobile web applications.",
                "Other approaches to improve the performance of mobile wireless web browsing have focused on using transcoding and caching proxies in conjunction with the fat client model [11, 9, 4, 8].",
                "They work by pushing functionality to external proxies, and using specialized browsing applications on the PDA device that communicate with the proxy.",
                "Our thinclient approach differs fundamentally from these fat-client approaches by pushing all web browser logic to the server, leveraging existing investments in desktop web browsers and helper applications to work seamlessly with production systems without any additional proxy configuration or web browser modifications.",
                "With the emergence of web browsing on small display devices, web sites have been redesigned using mechanisms like WAP and specialized native web browsers have been developed to tailor the needs of these devices.",
                "Recently, Opera has developed the Opera Mini [15] web browser, which uses an approach similar to the thin-client model to provide access across a number of mobile devices that would normally be incapable of running a web browser.",
                "Instead of requiring the device to process web pages, it uses a remote server to pre-process the page before sending it to the phone. 6.",
                "CONCLUSIONS We have introduced pTHINC, a thin-client architecture for wireless PDAs. pTHINC provides key architectural and usability mechanisms such as server-side screen resizing, clientside screen rotation using simple copy techniques, YUV video support, and maximizing screen space for display updates and leveraging existing PDA control buttons for UI elements. pTHINC transparently supports traditional desktop browsers and their helper applications on PDA devices and desktop machines, providing mobile users with ubiquitous access to a consistent, personalized, and full-featured web environment across heterogeneous devices.",
                "We have implemented pTHINC and measured its performance on web applications compared to existing thin-client systems and native web applications.",
                "Our results on multiple mobile wireless devices demonstrate that pTHINC delivers web browsing performance up to 80 times better than existing thin-client systems, and 8 times better than a native PDA browser.",
                "In addition, pTHINC is the only PDA thin client 151 Figure 11: Video Screenshot: RDP 640x480 Figure 12: Video Screenshot: VNC 1024x768 Figure 13: Video Screenshot: ICA Resized 1024x768 Figure 14: Video Screenshot: pTHINC Resized 1024x768 that transparently provides full-screen, full frame rate video playback, making web sites with multimedia content accessible to mobile web users. 7.",
                "ACKNOWLEDGEMENTS This work was supported in part by NSF ITR grants CCR0219943 and CNS-0426623, and an IBM SUR Award. 8.",
                "REFERENCES [1] R. Baratto, L. Kim, and J. Nieh.",
                "THINC: A Virtual Display Architecture for Thin-Client Computing.",
                "In Proceedings of the 20th ACM Symposium on Operating Systems Principles (SOSP), Oct. 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius, and A. Muir.",
                "Microsoft Windows NT Server 4.0, Terminal Server Edition: Technical Reference.",
                "Microsoft Press, Redmond, WA, 1999. [4] A.",
                "Fox, I. Goldberg, S. D. Gribble, and D. C. Lee.",
                "Experience With Top Gun Wingman: A Proxy-Based Graphical Web Browser for the 3Com PalmPilot.",
                "In Proceedings of Middleware 98, Lake District, England, September 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Health Insurance Portability and Accountability Act. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench version 1.5. http: //etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi.",
                "On proxy agents, mobility, and web access.",
                "Mobile Networks and Applications, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon, and A. Ortega.",
                "Design and Implementation of a Soft Caching Proxy.",
                "Computer Networks and ISDN Systems, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana, and S. Varshneya.",
                "Improving Web Browsing on Wireless PDAs Using Thin-Client Computing.",
                "In Proceedings of the 13th International World Wide Web Conference (WWW), May 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham, and P. Shenoy.",
                "TranSquid: Transcoding and caching proxy for heterogenous ecommerce environments.",
                "In Proceedings of the 12th IEEE Workshop on Research Issues in Data Engineering (RIDE 02), Feb. 2002. [12] .NET VNC Viewer for PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang, and N. Novik.",
                "Measuring Thin-Client Performance Using Slow-Motion Benchmarking.",
                "ACM Trans.",
                "Computer Systems, 21(1):87-115, Feb. 2003. [14] J. Nielsen.",
                "Designing Web Usability.",
                "New Riders Publishing, Indianapolis, IN, 2000. [15] Opera Mini Browser. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood, and A. Hopper.",
                "Virtual Network Computing.",
                "IEEE Internet Computing, 2(1), Jan./Feb. 1998. [17] R. W. Scheifler and J. Gettys.",
                "The X Window System.",
                "ACM Trans.",
                "Gr., 5(2):79-106, Apr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla, and M. Sajjadpour.",
                "Web Browsing Performance of Wireless Thin-Client Computing.",
                "In Proceedings of the 12th International World Wide Web Conference (WWW), May 2003. 152"
            ],
            "original_annotated_samples": [
                "Service providers are leveraging these devices to deliver <br>pervasive web</br> access, and mobile web users already often use these devices to access web-enabled information such as news, email, and localized travel guides and maps.",
                "Thin-client computing provides an alternative approach for enabling <br>pervasive web</br> access from handheld devices."
            ],
            "translated_annotated_samples": [
                "Los proveedores de servicios están aprovechando estos dispositivos para ofrecer acceso <br>web omnipresente</br>, y los usuarios de la web móvil a menudo ya utilizan estos dispositivos para acceder a información habilitada para la web, como noticias, correo electrónico, guías de viaje localizadas y mapas.",
                "La computación de cliente ligero proporciona un enfoque alternativo para habilitar el <br>acceso web ubicuo</br> desde dispositivos móviles."
            ],
            "translated_text": "pTHINC: Una arquitectura de cliente ligero para la web inalámbrica móvil Joeng Kim, Ricardo A. Baratto y Jason Nieh Departamento de Ciencias de la Computación Universidad de Columbia, Nueva York, NY, EE. UU. {jk2438, ricardo, nieh}@cs.columbia.edu RESUMEN Aunque las aplicaciones web están ganando popularidad en las PDAs inalámbricas móviles, los navegadores web en estos sistemas pueden ser bastante lentos y a menudo carecen de funcionalidad adecuada para acceder a muchos sitios web. Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y movilidad fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la resolución de pantalla disponible para la visualización de aplicaciones. Hemos implementado pTHINC en Windows Mobile y evaluado su rendimiento en dispositivos móviles inalámbricos. Nuestros resultados comparados con los navegadores web PDA locales y otros enfoques de cliente ligero demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero PDA que soporta de manera efectiva aplicaciones de ayuda del navegador cruciales como la reproducción de video. Categorías y Descriptores de Asunto: C.2.4 Comunicación de Computadoras-Redes: Sistemas Distribuidos - cliente/servidor Términos Generales: Diseño, Experimentación, Rendimiento 1. La creciente ubicuidad de las redes inalámbricas y la disminución del costo del hardware están impulsando una proliferación de dispositivos móviles inalámbricos portátiles, tanto como asistentes digitales personales (PDA) inalámbricos independientes y dispositivos populares integrados de PDA/teléfono celular. Estos dispositivos están permitiendo nuevas formas de computación y comunicación móvil. Los proveedores de servicios están aprovechando estos dispositivos para ofrecer acceso <br>web omnipresente</br>, y los usuarios de la web móvil a menudo ya utilizan estos dispositivos para acceder a información habilitada para la web, como noticias, correo electrónico, guías de viaje localizadas y mapas. Es probable que en unos pocos años, la mayoría de los dispositivos que accedan a la web sean móviles. Los usuarios suelen acceder al contenido web ejecutando un navegador web y aplicaciones auxiliares asociadas localmente en la PDA. Aunque existen navegadores web nativos para PDAs, ofrecen un rendimiento deficiente y tienen un conjunto de funciones mucho más pequeño y una funcionalidad más limitada que sus contrapartes de computadoras de escritorio [10]. Como resultado, los navegadores web de PDA a menudo no pueden mostrar el contenido web de sitios web que utilizan tecnologías web más avanzadas para ofrecer una experiencia web más rica. Este problema fundamental surge por dos razones. Primero, debido a que las PDAs tienen un entorno de hardware/software completamente diferente de las computadoras de escritorio tradicionales, las aplicaciones web necesitan ser reescritas y personalizadas para las PDAs si es posible, duplicando los costos de desarrollo. Debido a que el mercado de aplicaciones de escritorio es más grande y maduro, la mayoría del esfuerzo de desarrollo generalmente se destina a las aplicaciones de escritorio, lo que resulta en una mayor funcionalidad y rendimiento que sus contrapartes de PDA. En segundo lugar, las PDAs tienen un entorno con recursos más limitados que las computadoras de escritorio tradicionales para ofrecer un factor de forma más pequeño y una vida útil de la batería más larga. Los navegadores web de escritorio son aplicaciones grandes y complejas que no pueden ejecutarse en una PDA. En cambio, los desarrolladores se ven obligados a reducir significativamente estas navegadores web para ofrecer un navegador web PDA utilizable, lo que limita la funcionalidad del navegador PDA. La computación de cliente ligero proporciona un enfoque alternativo para habilitar el <br>acceso web ubicuo</br> desde dispositivos móviles. Un sistema informático de cliente ligero consiste en un servidor y un cliente que se comunican a través de una red utilizando un protocolo de visualización remota. El protocolo permite que las pantallas gráficas se virtualicen y se sirvan a través de una red a un dispositivo cliente, mientras que la lógica de la aplicación se ejecuta en el servidor. Usando el protocolo de visualización remota, el cliente transmite la entrada del usuario al servidor, y el servidor devuelve actualizaciones de pantalla de las aplicaciones del servidor al cliente. Utilizando un modelo de cliente ligero para dispositivos móviles de mano, las PDAs pueden convertirse en clientes simples sin estado que aprovechan las capacidades del servidor remoto para ejecutar navegadores web y otras aplicaciones auxiliares. El modelo de cliente ligero proporciona varios beneficios importantes para la web inalámbrica móvil. Primero, las aplicaciones web estándar de escritorio pueden utilizarse para entregar contenido web a PDAs sin necesidad de reescribir o adaptar las aplicaciones para ejecutarse en una PDA, lo que reduce los costos de desarrollo y aprovecha las inversiones existentes en software. Segundo, las aplicaciones web complejas pueden ejecutarse en servidores potentes en lugar de ejecutarse en versiones simplificadas en PDAs con recursos más limitados, lo que proporciona una mayor funcionalidad y un mejor rendimiento [10]. Tercero, las aplicaciones web pueden aprovechar servidores con redes más rápidas y mejor conectividad, lo que mejora aún más el rendimiento de la aplicación. En cuarto lugar, las PDAs pueden ser dispositivos aún más simples ya que no necesitan realizar una lógica de aplicación compleja, lo que potencialmente reduce el consumo de energía y extiende la vida útil de la batería. Finalmente, los clientes ligeros PDA pueden ser dispositivos prácticamente sin estado que no necesitan ser respaldados o restaurados, requieren casi ningún mantenimiento o actualizaciones, y no almacenan datos sensibles que puedan perderse o ser robados. Este modelo proporciona una vía viable para que las organizaciones médicas cumplan con las regulaciones de HIPAA mientras incorporan dispositivos móviles en sus operaciones diarias. A pesar de estas posibles ventajas, los clientes ligeros no han podido ofrecer la gama completa de estos beneficios al entregar aplicaciones web a dispositivos móviles portátiles. Los thin clients existentes no fueron diseñados para PDAs y no tienen en cuenta problemas importantes de usabilidad en el contexto de dispositivos de factor de forma pequeño, lo que resulta en dificultades para navegar por el contenido web mostrado. Además, los clientes ligeros existentes son ineficaces para proporcionar movilidad fluida en la mezcla heterogénea de tamaños de pantalla y resoluciones de dispositivos. Si bien los clientes ligeros existentes ya pueden ofrecer un rendimiento más rápido que los navegadores web nativos de PDA al entregar contenido web HTML, no admiten de manera efectiva aplicaciones web auxiliares más intensivas en visualización, como videos multimedia, que cada vez son una parte integral del contenido web disponible. Para aprovechar todo el potencial de la informática de cliente ligero en la provisión de la web inalámbrica móvil en PDAs, hemos desarrollado pTHINC (PDA THin-client InterNet Computing). pTHINC se basa en nuestro trabajo previo en THINC [1] para proporcionar una arquitectura de cliente ligero para dispositivos móviles de mano. pTHINC virtualiza y redimensiona la pantalla en el servidor para entregar de manera eficiente actualizaciones de pantalla de alta fidelidad a una amplia gama de clientes diferentes, tamaños de pantalla y orientaciones de pantalla, incluidos los modos de visualización en vertical y horizontal. Esto permite a pTHINC proporcionar la misma sesión web persistente en diferentes dispositivos de cliente. Por ejemplo, pTHINC puede proporcionar la misma sesión de navegación web adecuadamente escalada para su visualización en una computadora de escritorio y una PDA, de modo que las mismas cookies, marcadores y otros metadatos estén disponibles continuamente en ambas máquinas simultáneamente. El enfoque de visualización virtual de pTHINC aprovecha la información semántica disponible en los comandos de visualización y el hardware de video del cliente para proporcionar mecanismos de visualización remota más eficientes que son cruciales para admitir aplicaciones web más intensivas en visualización. Dada la limitada resolución de pantalla en las PDA, pTHINC maximiza el uso del espacio de pantalla para la visualización remota al trasladar la funcionalidad de control de la pantalla a los botones de control de PDA fácilmente disponibles, mejorando la usabilidad del sistema. Hemos implementado pTHINC en Windows Mobile y demostrado que funciona de manera transparente con las aplicaciones existentes, sistemas de ventanas y sistemas operativos, y no requiere modificar, recompilar o volver a enlazar el software existente. Hemos evaluado cuantitativamente pTHINC frente a navegadores web PDA locales y otros enfoques de cliente ligero en dispositivos Pocket PC. Nuestros resultados experimentales demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero de PDA que soporta de manera efectiva aplicaciones esenciales de ayuda para el navegador, como la reproducción de video. Este documento presenta el diseño e implementación de pTHINC. La sección 2 describe el modelo de uso general y las características de usabilidad de pTHINC. La sección 3 presenta el diseño y la arquitectura del sistema de pTHINC. La sección 4 presenta resultados experimentales que miden el rendimiento de pTHINC en aplicaciones web y lo comparan con navegadores nativos de PDA y otros sistemas de cliente ligero de PDA populares. La sección 5 discute el trabajo relacionado. Finalmente, presentamos algunas observaciones finales. El MODELO DE USO DE pTHINC pTHINC es un sistema de cliente ligero que consiste en una aplicación de visualización de cliente simple que se ejecuta en la PDA y un servidor que se ejecuta en una PC estándar. El servidor aprovecha PCs más potentes para ejecutar navegadores web y otra lógica de aplicaciones. El cliente recibe la entrada del usuario desde el lápiz óptico y el teclado virtual de la PDA y los envía al servidor para pasarlos a las aplicaciones. Las actualizaciones de la pantalla son luego enviadas desde el servidor al cliente para mostrar al usuario. Cuando se inicia el cliente PDA pTHINC, se presenta al usuario una interfaz gráfica simple donde se pueden proporcionar información como la dirección y el puerto del servidor, la información de autenticación del usuario y la configuración de la sesión. pTHINC primero intenta conectarse al servidor y realizar el saludo necesario. Una vez que este proceso haya sido completado, pTHINC presenta al usuario la visualización más reciente de su sesión. Si la sesión no existe, se crea una nueva sesión. Las sesiones existentes pueden continuar sin problemas sin cambios en la configuración de la sesión o del servidor. A diferencia de otros sistemas de cliente ligero, pTHINC proporciona a un usuario un modelo de sesión web persistente en el que un usuario puede iniciar una sesión ejecutando un navegador web y aplicaciones asociadas en el servidor, luego desconectarse de esa sesión y volver a conectarse en cualquier momento. Cuando un usuario se reconecta a la sesión, todas las aplicaciones siguen funcionando desde donde el usuario las dejó, de modo que el usuario puede seguir trabajando como si nunca se hubiera desconectado. La capacidad de desconectarse y reconectarse a una sesión en cualquier momento es un beneficio importante para los usuarios de PDA inalámbricas móviles que pueden tener conectividad de red intermitente. El modelo de sesión web persistente de pTHINCs permite a un usuario reconectarse a una sesión web desde dispositivos distintos al que se inició originalmente la sesión web. Esto proporciona a los usuarios una movilidad fluida entre diferentes dispositivos. Si un usuario pierde su PDA, puede fácilmente usar otra PDA para acceder a su sesión web. Además, pTHINC permite a los usuarios utilizar dispositivos que no son PDA para acceder a sesiones web también. Un usuario puede acceder a la misma sesión web persistente en una PC de escritorio como en una PDA, lo que le permite al usuario utilizar la misma sesión web desde cualquier computadora. El modelo de sesión web persistente de pTHINCs aborda un problema clave encontrado por los usuarios de la web móvil, la falta de un entorno web común en diferentes computadoras. Los navegadores web a menudo almacenan información importante como marcadores, cookies e historial, lo que les permite funcionar de una manera mucho más útil. El problema que ocurre cuando un usuario se mueve entre computadoras es que estos datos, específicos de una instalación de un navegador web, no pueden moverse con el usuario. Además, los navegadores web a menudo necesitan aplicaciones auxiliares para procesar diferentes contenidos multimedia, y esas aplicaciones pueden no estar disponibles de manera consistente en todas las computadoras. pTHINC aborda este problema al permitir que un usuario utilice de forma remota el mismo entorno de navegador web y aplicaciones auxiliares desde cualquier computadora. Como resultado, pTHINC puede proporcionar un entorno de navegación web común y consistente para usuarios móviles en diferentes dispositivos sin requerirles intentar sincronizar repetidamente diferentes entornos de navegación web en múltiples máquinas. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC debe proporcionar mecanismos para admitir diferentes tamaños de pantalla y resoluciones. Con este fin, pTHINC proporciona una función de zoom que permite a un usuario acercar y alejar una pantalla y permite que la pantalla de una sesión web 144 Figura 1: teclas de acceso rápido de pTHINC se redimensione para adaptarse a la pantalla del dispositivo que se está utilizando. Por ejemplo, si el servidor está ejecutando una sesión web a 1024×768 pero el cliente es una PDA con una resolución de pantalla de 640×480, pTHINC redimensionará la pantalla del escritorio para que se ajuste a la pantalla más pequeña de la PDA. pTHINC proporciona al usuario de la PDA la opción de aumentar el tamaño de la pantalla haciendo zoom en diferentes partes de la pantalla. Los usuarios suelen estar familiarizados con el diseño general de los sitios web que visitan con frecuencia, y pueden aprovechar esta función de redimensionamiento para navegar mejor por las páginas web. Por ejemplo, un usuario puede alejarse de la pantalla para ver todo el contenido de la página y navegar por los hipervínculos, luego acercarse a una región de interés para obtener una mejor vista. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC también debe proporcionar mecanismos para admitir diferentes orientaciones de pantalla. En un entorno de escritorio, los usuarios suelen estar acostumbrados a tener las pantallas presentadas en modo horizontal, donde el ancho de la pantalla es mayor que su altura. Sin embargo, en un entorno de PDA, la elección no siempre es obvia. Algunos usuarios pueden preferir tener la pantalla en modo retrato, ya que es más fácil sostener el dispositivo en sus manos, mientras que otros pueden preferir el modo paisaje para minimizar la cantidad de desplazamiento lateral necesario para ver una página web. Para adaptarse a las preferencias de los usuarios de PDA, pTHINC proporciona una función de orientación que le permite rotar la pantalla de forma fluida entre el modo horizontal y vertical. El modo de paisaje es particularmente útil para los usuarios de pTHINC que acceden con frecuencia a sus sesiones web tanto en dispositivos de escritorio como en PDA, proporcionando a esos usuarios el mismo ajuste de paisaje familiar en diferentes dispositivos. Dado que el espacio de pantalla es un recurso relativamente escaso en las PDAs, pTHINC se ejecuta en modo de pantalla completa para maximizar el área de pantalla disponible para mostrar la sesión web. Para poder utilizar toda la pantalla en la PDA y aún así permitir al usuario controlar e interactuar con ella, pTHINC reutiliza los botones de acceso directo típicos que se encuentran en las PDAs para realizar todas las funciones de control disponibles para el usuario. Los botones utilizados por pTHINC no requieren ningún cambio en el entorno del sistema operativo; simplemente son interceptados por la aplicación cliente de pTHINC cuando se presionan. La Figura 1 muestra cómo pTHINC utiliza los botones de acceso directo para proporcionar una navegación sencilla y mejorar la experiencia del usuario en general. Estos botones no son específicos del dispositivo, y el diseño mostrado es común en dispositivos PocketPC ampliamente utilizados. pTHINC proporciona seis accesos directos para apoyar su modelo de uso: • Rotar pantalla: El botón de grabación en el borde izquierdo se utiliza para rotar la pantalla entre modo retrato y modo paisaje cada vez que se presiona el botón. • Alejar: El botón más a la izquierda en la parte inferior delantera se utiliza para alejar la visualización de la sesión web proporcionando una vista general de la sesión web. • Acercar: El segundo botón más a la izquierda en la parte inferior delantera se utiliza para acercar la visualización de la sesión web para ver más claramente el contenido de interés. • Desplazamiento direccional: El botón central en la parte inferior delantera se utiliza para desplazarse alrededor de la visualización utilizando un solo botón de control de una manera que ya es familiar para los usuarios de PDA. Esta función es particularmente útil cuando el usuario ha ampliado una región de la pantalla de tal manera que solo una parte de la pantalla es visible en la pantalla. • Mostrar/Ocultar Teclado: El segundo botón más a la derecha en la parte inferior frontal se utiliza para mostrar un teclado virtual dibujado en la pantalla para dispositivos que no tienen teclado físico. El teclado virtual utiliza mecanismos estándar del sistema operativo de PDA, proporcionando portabilidad entre diferentes entornos de PDA. • Cerrar sesión: El botón más a la derecha en la parte inferior frontal se utiliza para desconectarse de la sesión de pTHINC. pTHINC utiliza la pantalla táctil de la PDA, el lápiz óptico y mecanismos estándar de interfaz de usuario para proporcionar una metáfora de punto y clic de la interfaz de usuario similar a la proporcionada por el ratón en un entorno de computación de escritorio tradicional. pTHINC no utiliza un cursor ya que los entornos de PDA no lo proporcionan. En cambio, un usuario puede usar el lápiz táctil para tocar diferentes secciones de la pantalla táctil y señalar el enfoque de entrada. Un toque único en la pantalla táctil genera un evento de clic de ratón correspondiente. Un doble toque en la pantalla táctil genera un evento de doble clic del ratón correspondiente. pTHINC proporciona emulación de ratón de dos botones al usar el lápiz óptico para presionar la pantalla durante un segundo y generar un clic derecho del ratón. Todas estas acciones son idénticas a la forma en que los usuarios ya interactúan con las aplicaciones de PDA en el entorno común de PocketPC. En la navegación web, los usuarios pueden hacer clic en hipervínculos y enfocarse en cuadros de entrada simplemente tocando el área de interés deseada en la pantalla. A diferencia de los navegadores web PDA locales y otras aplicaciones PDA, pTHINC aprovecha metáforas de interfaz de usuario de escritorio más potentes para permitir a los usuarios manipular múltiples ventanas de aplicación abiertas en lugar de estar limitados a una sola ventana de aplicación en un momento dado. Esto proporciona una mayor flexibilidad de navegación más allá de lo que está actualmente disponible en los dispositivos PDA. Similar a un entorno de escritorio, las ventanas del navegador y otras ventanas de aplicaciones pueden ser movidas al presionar y arrastrar el lápiz óptico de manera similar a un ratón. 3. La arquitectura del sistema pTHINC se basa en la arquitectura de visualización remota THINC para proporcionar un sistema de cliente ligero para PDAs. pTHINC virtualiza la visualización en el servidor aprovechando la capa de abstracción del dispositivo de video, que se encuentra por debajo del servidor de ventanas y por encima del framebuffer. Este es un nivel de dispositivo bien definido y de bajo nivel que depende del dispositivo y expone el hardware de video al sistema de visualización. pTHINC logra esto a través de un controlador de pantalla virtual simple que intercepta comandos de dibujo, los empaqueta y los envía a través de la red. Mientras que otros enfoques de cliente ligero interceptan comandos de visualización en otras capas del subsistema de visualización, el enfoque de virtualización de pantalla de pTHINC proporciona algunos beneficios clave para admitir eficientemente a los clientes de PDA. Por ejemplo, interceptar comandos de visualización en una capa superior entre aplicaciones y el sistema de ventanas, como se hace en X [17], requiere replicar y ejecutar una gran cantidad de funcionalidades en la PDA que tradicionalmente son proporcionadas por el sistema de ventanas de escritorio. Dada la magnitud y complejidad de los sistemas de ventanas tradicionales, intentar replicar esta funcionalidad en el entorno restringido de una PDA habría resultado ser una tarea desafiante, y quizás inviable. Además, las aplicaciones y el sistema de ventanas a menudo requieren una sincronización precisa en su funcionamiento, y imponer una red inalámbrica entre ellos al ejecutar las aplicaciones en el servidor y el sistema de ventanas en el cliente degradaría significativamente el rendimiento. Por otro lado, interceptar en una capa inferior extrayendo píxeles del framebuffer a medida que se renderizan proporciona una solución simple que requiere muy poca funcionalidad en el cliente de PDA, pero también puede resultar en un rendimiento degradado. La razón es que para cuando el servidor de visualización remota intenta enviar actualizaciones de pantalla, ha perdido toda la información semántica que podría haberle ayudado a codificar de manera eficiente, y debe recurrir a utilizar un mecanismo de codificación genérico y costoso en el servidor, así como un mecanismo de decodificación potencialmente costoso en el cliente de PDA limitado. A diferencia de los enfoques de intercepción de alto y bajo nivel, el enfoque de pTHINCs de interceptar en el controlador del dispositivo proporciona un equilibrio efectivo entre la simplicidad del cliente y del servidor, y la capacidad de codificar y decodificar de manera eficiente las actualizaciones de pantalla. Al utilizar un enfoque de visualización virtual de bajo nivel, pTHINC puede codificar de manera eficiente los comandos de visualización de la aplicación utilizando solo un pequeño conjunto de comandos de bajo nivel. En un entorno de PDA, este conjunto de comandos proporciona un componente crucial para mantener la simplicidad del cliente en el entorno de PDA con recursos limitados. Los comandos de visualización se muestran en la Tabla 1 y funcionan de la siguiente manera. COPY instruye al cliente a copiar una región de la pantalla desde su framebuffer local a otra ubicación. Este comando mejora la experiencia del usuario al acelerar el desplazamiento y el movimiento de ventanas opacas sin necesidad de reenviar datos de pantalla desde el servidor. SFILL, PFILL y BITMAP son comandos que pintan una región de tamaño fijo en la pantalla. Son útiles para acelerar la visualización de fondos de ventanas sólidas, patrones de escritorio, fondos de páginas web, dibujo de texto y ciertas operaciones en programas de manipulación de gráficos. SFILL llena una región considerable en la pantalla con un solo color. PFILL replica una baldosa sobre una región de la pantalla. BITMAP realiza un relleno utilizando un mapa de bits de unos y ceros como un estipulado para aplicar un color de primer plano y de fondo. Finalmente, RAW se utiliza para transmitir datos de píxeles no codificados que se mostrarán textualmente en una región de la pantalla. Este comando se invoca como último recurso si el servidor no puede emplear ningún otro comando, y es el único comando que puede ser comprimido para mitigar su impacto en el ancho de banda de la red. pTHINC entrega sus comandos utilizando un mecanismo de actualización de servidor-push no bloqueante, donde tan pronto como se generan actualizaciones de pantalla en el servidor, se envían al cliente. Los clientes no están obligados a solicitar explícitamente actualizaciones de pantalla, minimizando así el impacto que la típica variabilidad de la latencia de la red inalámbrica puede tener en la capacidad de respuesta del sistema. Teniendo en cuenta que los recursos Descripción de Comando COPY Copiar un área de búfer de fotogramas en coordenadas especificadas SFILL Rellenar un área con un valor de color de píxel dado PFILL Azulejar un área con un patrón de píxeles dado BITMAP Rellenar una región usando un patrón de bits RAW Mostrar datos de píxeles en bruto en una ubicación dada Tabla 1: Comandos de visualización del protocolo pTHINC. Las PDAs y las redes inalámbricas limitadas pueden no ser capaces de mantenerse al día con un servidor rápido que genera una gran cantidad de actualizaciones, pTHINC es capaz de fusionar, recortar y descartar actualizaciones automáticamente si se produce pérdida o congestión de red, o si el cliente no puede mantenerse al día con la velocidad de las actualizaciones. Este tipo de comportamiento resulta crucial en un entorno de navegación web, donde por ejemplo, una página puede ser redibujada varias veces mientras se renderiza al vuelo por el navegador. En este caso, la PDA solo recibirá y mostrará el resultado final, que claramente es todo lo que al usuario le interesa ver. pTHINC prioriza la entrega de actualizaciones a la PDA utilizando un programador de actualizaciones preemptivo de Tamaño Restante Más Corto Primero (SRSF). SRSF es análogo a la programación de Tiempo de Procesamiento Restante más Corto, la cual se sabe que es óptima para minimizar el tiempo medio de respuesta en un sistema interactivo. En un entorno de navegación web, los trabajos cortos están asociados con el texto y los componentes básicos de diseño de página, como el fondo de las páginas, que son contenido web crítico para el usuario. Por otro lado, los trabajos grandes suelen ser elementos de embellecimiento de menor prioridad, o, incluso peor, banners y anuncios de página web, los cuales tienen un valor cuestionable para el usuario mientras navega por la página. Usando SRSF, pTHINC puede maximizar la utilización del ancho de banda relativamente escaso disponible en la conexión inalámbrica entre la PDA y el servidor. 3.1 Gestión de la Pantalla Para permitir a los usuarios acceder con la misma facilidad a su navegador web y aplicaciones auxiliares desde una computadora de escritorio en casa como desde una PDA mientras están en movimiento, pTHINC proporciona un mecanismo de redimensionamiento para hacer zoom dentro y fuera de la pantalla de una sesión web. El redimensionamiento de pTHINC es completamente compatible con el servidor, no con el cliente. El servidor vuelve a muestrear las actualizaciones para que se ajusten al área de visualización de las PDAs antes de ser transmitidas por la red. pTHINC utiliza el algoritmo de remuestreo de Fants para redimensionar las actualizaciones de píxeles. Esto proporciona actualizaciones suaves y visualmente agradables con un antialiasing adecuado y solo requiere modestos recursos computacionales. El enfoque de redimensionamiento de pTHINCs tiene varias ventajas. Primero, permite al PDA aprovechar la vastamente superior potencia computacional del servidor para utilizar algoritmos de re-muestreo de alta calidad y producir actualizaciones de mayor calidad para que el PDA las muestre. Segundo, cambiar el tamaño de la pantalla no se traduce en requisitos adicionales de recursos para la PDA, ya que no necesita realizar ningún trabajo adicional. Finalmente, se logra una mejor utilización de la red inalámbrica ya que al reescalar las actualizaciones se reducen sus requisitos de ancho de banda. Para permitir a los usuarios orientar sus pantallas en una PDA y así proporcionar una experiencia visual que se ajuste mejor a las preferencias del usuario y al diseño de páginas web o aplicaciones, pTHINC proporciona un mecanismo de rotación de pantalla para alternar entre los modos de visualización horizontal y vertical. La rotación de pantalla de pTHINC es completamente compatible con el cliente, no con el servidor. pTHINC no recalcula explícitamente la geometría de las actualizaciones de pantalla para realizar la rotación, lo cual sería computacionalmente costoso. En cambio, pTHINC simplemente cambia la forma en que los datos se copian en el framebuffer para cambiar entre los modos de visualización. Cuando está en modo retrato, los datos se copian a lo largo de las filas del framebuffer de izquierda a derecha. Cuando se encuentra en modo horizontal, los datos se copian a lo largo de las columnas del framebuffer de arriba hacia abajo. Estas técnicas muy rápidas y simples reemplazan un conjunto de operaciones de copia por otro y no imponen ningún sobrecosto de rendimiento. pTHINC proporciona su propio mecanismo de rotación para soportar una amplia gama de dispositivos sin imponer requisitos adicionales de funciones en la PDA. Aunque algunos dispositivos PDA más nuevos ofrecen soporte nativo para diferentes orientaciones, este mecanismo no es dinámico y requiere que el usuario rote toda la interfaz de usuario de la PDA antes de iniciar el cliente pTHINC. Windows Mobile proporciona mecanismos de API nativos para que las aplicaciones de PDA puedan rotar su interfaz de usuario sobre la marcha, pero estos mecanismos ofrecen un rendimiento deficiente y una calidad de visualización baja, ya que la rotación se realiza de manera ingenua y no es completamente precisa. 3.2 Reproducción de video El video se ha convertido gradualmente en una parte integral de la World Wide Web, y su presencia solo seguirá aumentando. Los sitios web de hoy en día no solo utilizan gráficos animados y flash para presentar el contenido web de manera atractiva, sino que también utilizan video en streaming para enriquecer la interfaz web. Los usuarios pueden ver noticias pregrabadas y en vivo en CNN, ver los momentos más destacados deportivos en ESPN e incluso buscar a través de una gran colección de videos en Google Video. Para permitir que las aplicaciones proporcionen una reproducción de video eficiente, se han creado interfaces en los sistemas de visualización que permiten a los controladores de dispositivos de video exponer sus capacidades de hardware a las aplicaciones. pTHINC aprovecha estas interfaces y su enfoque de controlador de dispositivo virtual para proporcionar un puente virtual entre el cliente remoto y su hardware y las aplicaciones, y admitir de manera transparente la reproducción de video. Sobre esta arquitectura, pTHINC utiliza el espacio de color YUV para codificar el contenido de video, lo cual proporciona una serie de beneficios. Primero, se ha vuelto cada vez más común que el hardware de video de las PDA admita nativamente YUV y pueda realizar la conversión del espacio de color y el escalado automáticamente. Como resultado, pTHINC puede proporcionar reproducción de video a pantalla completa sin afectar el rendimiento. Segundo, el uso de YUV permite una representación más eficiente de los datos RGB sin pérdida de calidad, aprovechando la capacidad de los ojos humanos para distinguir mejor las diferencias en brillo que en color. En particular, pTHINC utiliza el formato YV12, que permite codificar datos de color RGB completo utilizando solo 12 bits por píxel. Tercero, los datos YUV se producen como uno de los últimos pasos del proceso de decodificación de la mayoría de los códecs de video, lo que permite a pTHINC proporcionar la reproducción de video de una manera independiente del formato. Finalmente, aunque el hardware de video de las PDAs no pueda acelerar la reproducción, el proceso de conversión de espacio de color es lo suficientemente simple como para no imponer requisitos poco razonables en la PDA. Un ejemplo más concreto de cómo pTHINC aprovecha el hardware de video PDA para admitir la reproducción de video se puede ver en nuestra implementación de prototipo en la popular PDA Dell Axim X51v, que está equipada con el acelerador multimedia Intel 2700G. En este caso, pTHINC crea un búfer fuera de pantalla en la memoria de video y escribe y lee desde esta región de memoria datos en formato YV12. Cuando llega un nuevo fotograma de video, los datos de video se copian desde el búfer a una superficie superpuesta en la memoria de video, que es independiente de la superficie normal utilizada para el dibujo tradicional. A medida que los datos YV12 se colocan en la superposición, el acelerador de Intel realiza automáticamente la conversión de espacio de color y el escalado. Al utilizar la superficie de superposición, pTHINC no necesita volver a dibujar la pantalla una vez que la reproducción de video ha terminado, ya que la superficie superpuesta no se ve afectada. Además, las regiones de superposición específicas pueden ser manipuladas aprovechando el hardware de video, por ejemplo, para realizar interpolación lineal de hardware y suavizar el fotograma para mostrarlo a pantalla completa, y para realizar rotación automática cuando el cliente se ejecuta en modo horizontal. 4. RESULTADOS EXPERIMENTALES Hemos implementado un prototipo de pTHINC que ejecuta el cliente en dispositivos Pocket PC basados en Windows Mobile ampliamente utilizados y el servidor en sistemas operativos tanto Windows como Linux. Para demostrar su eficacia en el soporte de aplicaciones web inalámbricas móviles, hemos medido su rendimiento en aplicaciones web. Presentamos resultados experimentales sobre diferentes dispositivos PDA para dos aplicaciones web populares, navegar por páginas web y reproducir contenido de video desde la web. Comparamos pTHINC con aplicaciones web nativas que se ejecutan localmente en la PDA para demostrar la mejora que pTHINC puede proporcionar sobre el enfoque tradicional de cliente pesado. También comparamos pTHINC con tres de los clientes ligeros más utilizados que pueden ejecutarse en PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] y VNC (Virtual Network Computing) [16]. Seguimos la práctica común y nos referimos a Citrix MetaFrameXP y Microsoft Remote Desktop por sus respectivos protocolos de visualización remota, ICA (Independent Computing Architecture) y RDP (Remote Desktop Protocol). 4.1 Plataforma de Pruebas Experimental Realizamos nuestros experimentos web utilizando dos PDA Pocket PC inalámbricas diferentes en un entorno de prueba de red Wi-Fi aislado, como se muestra en la Figura 2. El banco de pruebas consistía en dos dispositivos cliente PDA, un monitor de paquetes, un servidor de cliente ligero y un servidor web. Excepto por las PDAs, todas las demás máquinas eran servidores IBM Netfinity 4500R con procesadores duales Intel PIII de 933 MHz y 512 MB de RAM, y estaban conectadas en una red FastEthernet de 100 Mbps conmutada. El servidor web utilizado fue Apache 1.3.27, el emulador de red fue NISTNet 2.0.12 y el monitor de paquetes fue Ethereal 0.10.9. Los clientes de PDA se conectaron al banco de pruebas a través de un punto de acceso inalámbrico Lucent Orinoco AP-2000 802.11b. Todos los experimentos utilizando la red inalámbrica se llevaron a cabo a una distancia de diez pies del punto de acceso, por lo que consideramos que la cantidad de pérdida de paquetes era insignificante en nuestros experimentos. Se utilizaron dos PDA Pocket PC para proporcionar resultados en modelos antiguos y menos potentes, así como en modelos más nuevos de mayor rendimiento. El modelo anterior era un Dell Axim X5 con 147 Cliente 1024×768 640×480 Profundidad Cambio de tamaño Clip RDP no sí 8 bits no sí VNC sí sí 16 bits no no ICA sí sí 16 bits sí no pTHINC sí sí 24 bits sí no Tabla 2: Configuración del banco de pruebas de cliente ligero con un CPU Intel XScale PXA255 de 400 MHz y 64 MB de RAM ejecutando Windows Mobile 2003 y una tarjeta Dell TrueMobile 1180 de 2.4 GHz CompactFlash para redes inalámbricas. El modelo más nuevo era un Dell Axim X51v con un procesador Intel XScale XPA270 de 624 MHz y 64 MB de RAM ejecutando Windows Mobile 5.0 y con red inalámbrica 802.11b integrada. El X51v tiene un acelerador multimedia Intel 2700G con 16MB de memoria de video. Ambas PDAs son capaces de mostrar colores de 16 bits pero tienen diferentes tamaños de pantalla y resoluciones de visualización. El X5 tiene una pantalla diagonal de 3.5 pulgadas con una resolución de 240×320. El X51v tiene una pantalla diagonal de 3.7 pulgadas con una resolución de 480×640. Los cuatro clientes ligeros que utilizamos admiten diferentes niveles de calidad de visualización, como se resume en la Tabla 2. El cliente de RDP solo admite una resolución de pantalla fija de 640×480 en el servidor con una profundidad de color de 8 bits, mientras que otras plataformas ofrecen niveles más altos de calidad de visualización. Para proporcionar una comparación justa en todas las plataformas, realizamos nuestros experimentos con sesiones de cliente ligero configuradas para dos posibles resoluciones, 1024×768 y 640×480. Tanto ICA como VNC se configuraron para usar la resolución nativa de PDA con una profundidad de color de 16 bits. El prototipo actual de pTHINC utiliza color de 24 bits directamente y el cliente reduce la resolución de las actualizaciones al nivel de color de 16 bits disponible en la PDA. RDP se configuró utilizando solo una profundidad de color de 8 bits ya que no admite ninguna profundidad de color mejor. Dado que tanto pTHINC como ICA ofrecen la capacidad de ver la pantalla redimensionada para ajustarse a la pantalla, medimos ambos clientes con y sin la pantalla redimensionada para ajustarse a la pantalla del PDA. Cada cliente ligero fue probado utilizando el modo de paisaje en lugar del modo retrato cuando estaba disponible. Todos los sistemas que se ejecutan en el X51v podrían funcionar en modo horizontal porque el hardware proporciona una función de modo horizontal. Sin embargo, el X5 no proporciona esta funcionalidad. Solo pTHINC admite directamente el modo paisaje, por lo que era el único sistema que podía ejecutarse en modo paisaje tanto en el X5 como en el X51v. Para proporcionar una comparación justa, también estandarizamos en hardware y sistemas operativos comunes siempre que sea posible. Todos los sistemas utilizaron el servidor Netfinity como servidor de cliente ligero. Para los dos sistemas diseñados para servidores Windows, ICA y RDP, ejecutamos Windows Server 2003 en el servidor. Para los otros sistemas que admiten servidores basados en X, ejecutamos la distribución Debian Linux Inestable con el kernel Linux 2.6.10 en el servidor. Utilizamos las últimas versiones de servidores de cliente ligero disponibles en cada plataforma en el momento de nuestros experimentos, a saber, Citrix MetaFrame XP Server para Windows Feature Release 3, Microsoft Remote Desktop integrado en Windows XP y Windows 2003 utilizando RDP 5.2, y VNC 4.0.4.2. Para los benchmarks de aplicaciones, utilizamos dos benchmarks de aplicaciones web para nuestros experimentos basados en dos escenarios de aplicación comunes, navegación por páginas web y reproducción de contenido de video desde la web. Dado que muchos sistemas de cliente ligero, incluidos dos de los probados, son cerrados y propietarios, medimos su rendimiento de manera no invasiva capturando el tráfico de red con un monitor de paquetes y utilizando una variante de benchmarking en cámara lenta [13] previamente desarrollada para medir el rendimiento de clientes ligeros en entornos de PDA [10]. Esta metodología de medición tiene en cuenta tanto el desacoplamiento de la visualización que puede ocurrir entre el cliente y el servidor en sistemas de cliente ligero, como el tiempo de procesamiento del cliente, que puede ser significativo en el caso de las PDAs. Para medir el rendimiento de la navegación web, utilizamos un benchmark de navegación web basado en la Prueba de Carga de Páginas de Texto Web del conjunto de benchmarks Ziff-Davis i-Bench [7]. El punto de referencia consiste en la carga controlada de 55 páginas desde el servidor web mediante JavaScript. Las páginas contienen tanto texto como gráficos, con páginas de diferentes tamaños. Los gráficos son imágenes incrustadas en formatos GIF y JPEG. El benchmark original i-Bench fue modificado para pruebas de rendimiento en cámara lenta al introducir retrasos de varios segundos entre las páginas utilizando JavaScript. Luego se realizaron dos pruebas, una en la que se agregaron retrasos entre cada página, y otra en la que las páginas se cargaron continuamente sin esperar a que se mostraran en el cliente. En la primera prueba, los retrasos se ajustaron lo suficiente en cada caso para garantizar que cada página pudiera ser recibida y mostrada en el cliente por completo sin solapamiento temporal en la transferencia de los datos pertenecientes a dos páginas consecutivas. Utilizamos el monitor de paquetes para registrar el tráfico de paquetes para cada ejecución de la prueba de referencia, luego utilizamos las marcas de tiempo del primer y último paquete en la traza para obtener nuestras medidas de latencia [10]. El monitor de paquetes también registró la cantidad de datos transmitidos entre el cliente y el servidor. La proporción entre el tráfico de datos en las dos pruebas produce un factor de escala. Este factor de escala muestra la pérdida de datos entre el servidor y el cliente debido a la incapacidad del cliente para procesar los datos lo suficientemente rápido. El producto del factor de escala con la medición de latencia produce la verdadera latencia teniendo en cuenta el tiempo de procesamiento del cliente. Para ejecutar la prueba de navegación web, utilizamos Mozilla Firefox 1.0.4 en el servidor de cliente ligero para los clientes ligeros, y Windows Internet Explorer (IE) Mobile para 2003 y Mobile para 5.0 para los navegadores nativos en las PDAs X5 y X51v, respectivamente. En todos los casos, el navegador web utilizado se ajustó para ocupar toda la región de visualización disponible. Para medir el rendimiento de reproducción de video, utilizamos un banco de pruebas de video que consistía en reproducir un clip de video MPEG-1 de 34.75 segundos que contenía una mezcla de noticias y programación de entretenimiento a resolución de pantalla completa. El videoclip tiene un tamaño de 5.11 MB y consta de 834 cuadros de píxeles de 352x240 con una velocidad de cuadro ideal de 24 cuadros por segundo. Medimos el rendimiento del video utilizando pruebas de referencia en cámara lenta al monitorear el tráfico de paquetes resultante a dos velocidades de reproducción, 1 cuadro por segundo (fps) y 24 fps, y comparando los resultados para determinar los retrasos en la reproducción y las caídas de cuadros que ocurren a 24 fps para medir la calidad general del video [13]. Por ejemplo, el 100% de calidad significa que todos los fotogramas del video se reprodujeron a velocidad en tiempo real. Por otro lado, una calidad del 50% podría significar que se eliminó la mitad de los datos del video, o que el clip tardó el doble en reproducirse a pesar de que se mostró toda la información del video. Para ejecutar la prueba de rendimiento de video, utilizamos Windows Media Player 9 para servidores de clientes ligeros basados en Windows, MPlayer 1.0 pre 6 para servidores de clientes ligeros basados en X, y Windows Media Player 9 Mobile y 10 Mobile para los reproductores de video nativos que se ejecutan localmente en las PDAs X5 y X51v, respectivamente. En todos los casos, el reproductor de video utilizado se dimensionó para llenar toda la región de visualización disponible. Las Figuras 3 y 4 muestran los resultados de ejecutar la prueba de navegación por la web. Para cada plataforma, mostramos resultados de hasta cuatro configuraciones diferentes, dos en el X5 y dos en el X51v, dependiendo de si cada configuración era compatible. Sin embargo, no todas las plataformas podrían admitir todas las configuraciones. El navegador local solo se ejecuta a la resolución de pantalla de la PDA, 480×680 o menos para el X51v y el X5. RDP solo funciona a 640×480. Ninguna plataforma podía soportar una resolución de pantalla de 1024×768. ICA solo funcionaba en el X5 y no podía ejecutarse en el X51v porque no era compatible con Windows Mobile 5. La Figura 3 muestra la latencia promedio por página web para cada plataforma. pTHINC proporciona la latencia promedio más baja en la navegación web en ambas PDAs. En el X5, pTHINC funciona hasta 70 veces mejor que otros sistemas de cliente ligero y 8 veces mejor que el navegador local. En el X51v, pTHINC funciona hasta 80 veces mejor que otros sistemas de cliente ligero y 7 veces mejor que el navegador nativo. De hecho, todos los clientes ligeros excepto VNC superan al navegador local de PDA, demostrando los beneficios de rendimiento del enfoque de cliente ligero. Los estudios de usabilidad han demostrado que las páginas web deben tardar menos de un segundo en descargarse para que el usuario experimente una navegación web ininterrumpida [14]. Las mediciones muestran que solo los clientes delgados ofrecen latencias de página web de menos de un segundo. Por el contrario, el navegador local requiere más de 3 segundos en promedio por página web. El navegador local funciona peor ya que necesita ejecutar un navegador web más limitado para procesar el HTML, JavaScript y realizar todo el renderizado utilizando las capacidades limitadas de la PDA. Los clientes ligeros pueden aprovecharse de hardware de servidor más rápido y un navegador web altamente optimizado para procesar el contenido web mucho más rápido. La Figura 3 muestra que RDP es la plataforma más rápida después de pTHINC. Sin embargo, RDP solo puede ejecutarse a una resolución fija de 640×480 y una profundidad de color de 8 bits. Además, RDP también recorta la pantalla al tamaño de la pantalla de la PDA para no tener que enviar actualizaciones que no son visibles en la pantalla de la PDA. Esto proporciona un beneficio de rendimiento siempre y cuando el resto del contenido web no se visualice, pero degrada el rendimiento cuando un usuario desplaza la pantalla para ver otro contenido web. RDP logra su rendimiento con una calidad de visualización significativamente inferior en comparación con otros clientes ligeros y con recortes adicionales en la visualización que no son utilizados por otros sistemas. Como resultado, el rendimiento de RDP por sí solo no proporciona una comparación completa con las otras plataformas. Por el contrario, pTHINC ofrece el mejor rendimiento al mismo tiempo que proporciona una calidad de visualización igual o mejor que los otros sistemas. Dado que VNC e ICA ofrecen una calidad de visualización similar a pTHINC, estos sistemas proporcionan una comparación más justa de diferentes enfoques de cliente ligero. ICA funciona peor en parte porque utiliza primitivas de visualización de nivel superior que requieren costos adicionales de procesamiento por parte del cliente. VNC funciona peor en parte porque pierde datos de visualización debido a su mecanismo de entrega de cliente-pull y debido a los costos de procesamiento del cliente en descomprimir primitivas de píxeles crudos. En ambos casos, su rendimiento se vio limitado en parte porque sus clientes de PDA no podían mantenerse al ritmo al que se mostraban las páginas web. La Figura 3 también muestra las medidas para aquellos clientes ligeros que admiten redimensionar la pantalla para ajustarse a la pantalla de la PDA, a saber, ICA y pTHINC. El redimensionamiento requiere un procesamiento adicional, lo que resulta en latencias promedio más lentas de las páginas web. Las mediciones muestran que el retraso adicional incurrido por ICA al cambiar el tamaño es mucho más sustancial que para pTHINC. ICA realiza redimensionamiento en el cliente PDA más lento. Por el contrario, pTHINC aprovecha el servidor más potente para redimensionar, reduciendo la diferencia de rendimiento entre redimensionar y no redimensionar. A diferencia de ICA, pTHINC es capaz de proporcionar latencias de descarga de páginas web en menos de un segundo en ambos casos. La Figura 4 muestra los datos transferidos en KB por página al ejecutar la versión de cámara lenta de las pruebas. Todas las plataformas tienen requisitos modestos de transferencia de datos de aproximadamente 100 KB por página o menos. Esto está bien dentro de la capacidad de ancho de banda de las redes Wi-Fi. Las mediciones muestran que el navegador local no transfiere la menor cantidad de datos. Esto es sorprendente ya que HTML suele considerarse una representación muy compacta del contenido. En cambio, RDP es la plataforma más eficiente en ancho de banda, en gran parte debido a que utiliza solo una profundidad de color de 8 bits y recorte de pantalla para no transferir la página web completa al cliente. En general, pTHINC tiene los mayores requisitos de datos, ligeramente más que VNC. Esto se debe en gran medida a la falta de soporte nativo de los prototipos actuales de pTHINC para datos de color de 16 bits en el protocolo de comunicación. Sin embargo, este resultado también destaca el rendimiento de pTHINCs, ya que es más rápido que todos los demás sistemas incluso al transferir más datos. Además, dado que los modelos más recientes de PDA admiten colores completos de 24 bits, estos resultados indican que pTHINC seguirá proporcionando un buen rendimiento en la navegación web. Dado que la usabilidad y la calidad de la pantalla son tan importantes como el rendimiento, las Figuras 5 a 8 comparan capturas de pantalla de los diferentes clientes ligeros al mostrar una página web, en este caso del popular sitio de noticias de la BBC. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo paisaje. Figura 5: Captura de pantalla del navegador: RDP 640x480. Figura 6: Captura de pantalla del navegador: VNC 1024x768. Figura 7: Captura de pantalla del navegador: ICA redimensionado 1024x768. Figura 8: Captura de pantalla del navegador: pTHINC redimensionado 1024x768 utilizando la configuración de resolución de pantalla máxima para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Si bien las capturas de pantalla carecen de la fidelidad visual de la pantalla real del dispositivo, se pueden hacer varias observaciones. La Figura 5 muestra que RDP no admite el modo de pantalla completa y desperdicia mucho espacio en pantalla para controles y elementos de la interfaz de usuario, lo que obliga al usuario a desplazarse para acceder a todo el contenido de la sesión de navegación web. La Figura 6 muestra que VNC aprovecha mejor el espacio de la pantalla y ofrece una mejor calidad de visualización, pero aún obliga al usuario a desplazarse para ver la página web debido a la falta de soporte para redimensionar. La Figura 7 muestra la capacidad de ICA para mostrar la página web completa dada su soporte de redimensionamiento, pero su falta de capacidad en modo paisaje y su algoritmo de redimensionamiento deficiente comprometen significativamente la calidad de visualización. Por el contrario, la Figura 8 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de pantalla completa de alta calidad del ancho completo de la página web. pTHINC maximiza toda la región de visualización moviendo todos los controles a los botones de la PDA. Además, pTHINC aprovecha la potencia computacional del servidor para utilizar un algoritmo de redimensionamiento de alta calidad y ajustar la pantalla al tamaño de la PDA sin un sobrecoste significativo. Las figuras 9 y 10 muestran los resultados de ejecutar la prueba de reproducción de video. Para cada plataforma excepto ICA, mostramos resultados para una configuración X5 y X51v. ICA no pudo ejecutarse en el X51v como se mencionó anteriormente. Las mediciones se realizaron utilizando configuraciones que reflejaban el entorno desde el cual un usuario tendría que acceder a una sesión web tanto desde una computadora de escritorio como desde una PDA. Por lo tanto, se utilizó una resolución de pantalla del servidor de 1024×768 siempre que fuera posible y el video se mostró a pantalla completa. La resolución de pantalla de RDP se limitaba a 640×480, como se mencionó anteriormente. Dado que ver toda la pantalla del video es la única opción realmente utilizable, redimensionamos la pantalla para que se ajustara a la pantalla de la PDA en aquellas plataformas que admitían esta función, a saber, ICA y pTHINC. La Figura 9 muestra la calidad de video para cada plataforma. pTHINC es el único cliente ligero capaz de proporcionar una calidad de reproducción de video perfecta, similar al reproductor de video nativo de PDA. Todos los demás clientes ligeros ofrecen una calidad de video muy pobre. Con la excepción de RDP en el X51v que proporcionó una calidad de video inaceptable del 35%, ninguno de los otros sistemas pudo siquiera alcanzar el 10% de calidad de video. VNC e ICA tienen la peor calidad al 8% en el dispositivo X5. El soporte de video nativo de pTHINCs permite un rendimiento de video superior, mientras que otros clientes ligeros sufren de su incapacidad para distinguir el video de las actualizaciones normales de la pantalla. Intentan aplicar algoritmos de compresión ineficaces y costosos en los datos de video y no pueden mantenerse al día con la corriente de actualizaciones generadas, lo que resulta en cuadros omitidos o largos tiempos de reproducción. VNC se ve aún más afectado por su modelo de actualización de cliente-pull porque los fotogramas de video se generan más rápido que la velocidad a la que el cliente puede procesar y enviar solicitudes al servidor para obtener la siguiente actualización de pantalla. La Figura 10 muestra los datos totales transferidos durante la reproducción de video a pantalla completa para cada sistema. El reproductor nativo es la plataforma más eficiente en ancho de banda, enviando menos de 6 MB de datos, lo que corresponde a aproximadamente 1.2 Mbps de ancho de banda. La calidad de video al 100% de pTHINCs requiere alrededor de 25 MB de datos, lo que corresponde a un uso de ancho de banda de menos de 6 Mbps. Mientras que los otros clientes ligeros envían menos datos que THINC, lo hacen porque están eliminando datos de video, lo que resulta en una calidad de video degradada. Las figuras 11 a 14 comparan capturas de pantalla de los distintos clientes ligeros al mostrar el videoclip. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo horizontal utilizando la configuración de resolución máxima de pantalla para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Las figuras 11 y 12 muestran que RDP y VNC no pueden mostrar el cuadro completo del video en la pantalla de la PDA. RDP desperdicia espacio en pantalla para los elementos de la interfaz de usuario y VNC solo muestra la esquina superior del marco de video en la pantalla. La Figura 13 muestra que el ICA proporciona redimensionamiento para mostrar todo el fotograma del video, pero no redimensiona proporcionalmente los datos del video, lo que resulta en artefactos de visualización extraños. Por el contrario, la Figura 14 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de alta calidad a pantalla completa de todo el fotograma del video. pTHINC ofrece una visualización de video visualmente más atractiva que RDP, VNC o ICA. 5. TRABAJOS RELACIONADOS Varios estudios han examinado el rendimiento de la navegación web en la computación de cliente ligero [13, 19, 10]. La capacidad de los clientes ligeros para mejorar el rendimiento de la navegación web en PDAs inalámbricas fue demostrada cuantitativamente por primera vez en un estudio previo realizado por uno de los autores [10]. Este estudio demostró que los clientes ligeros pueden ofrecer tanto un rendimiento de navegación web más rápido como una mayor funcionalidad de navegación web. El estudio consideró una amplia gama de contenido web, incluido el contenido de sistemas de información médica. Nuestro trabajo se basa en este estudio previo y considera temas importantes como la usabilidad de los clientes ligeros existentes en entornos de PDA, los compromisos entre la usabilidad y el rendimiento de los clientes ligeros, el rendimiento en diferentes dispositivos de PDA y el rendimiento de los clientes ligeros en aplicaciones web comunes como el video. Se han desarrollado muchos clientes ligeros y algunos tienen clientes de PDA, incluyendo Remote Desktop de Microsoft [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5] y Tarantella [18]. Estos sistemas fueron diseñados inicialmente para computadoras de escritorio y adaptados posteriormente para asistentes digitales personales (PDA). A diferencia de pTHINC, no abordan los problemas clave de arquitectura del sistema y usabilidad importantes para las PDAs. Esto limita la calidad de visualización, el rendimiento del sistema, el espacio de pantalla disponible y la usabilidad general en PDAs. pTHINC se basa en trabajos anteriores de dos de los autores sobre THINC [1], ampliando la arquitectura del servidor e introduciendo una interfaz de cliente y un modelo de uso para admitir eficientemente dispositivos PDA en aplicaciones web móviles. Otros enfoques para mejorar el rendimiento de la navegación web inalámbrica móvil se han centrado en el uso de proxies de transcodificación y almacenamiento en caché en conjunto con el modelo de cliente pesado [11, 9, 4, 8]. Trabajan mediante el envío de funcionalidades a proxies externos y utilizando aplicaciones de navegación especializadas en el dispositivo PDA que se comunican con el proxy. Nuestro enfoque de cliente ligero difiere fundamentalmente de estos enfoques de cliente pesado al trasladar toda la lógica del navegador web al servidor, aprovechando las inversiones existentes en navegadores web de escritorio y aplicaciones auxiliares para funcionar de manera integrada con los sistemas de producción sin necesidad de configuraciones adicionales de proxy o modificaciones en el navegador web. Con la aparición de la navegación web en dispositivos con pantallas pequeñas, los sitios web han sido rediseñados utilizando mecanismos como WAP y se han desarrollado navegadores web nativos especializados para adaptarse a las necesidades de estos dispositivos. Recientemente, Opera ha desarrollado el navegador web Opera Mini [15], que utiliza un enfoque similar al modelo de cliente ligero para proporcionar acceso a través de una serie de dispositivos móviles que normalmente no podrían ejecutar un navegador web. En lugar de requerir que el dispositivo procese las páginas web, utiliza un servidor remoto para preprocesar la página antes de enviarla al teléfono. CONCLUSIONES Hemos introducido pTHINC, una arquitectura de cliente ligero para PDAs inalámbricas. pTHINC proporciona mecanismos arquitectónicos y de usabilidad clave como el redimensionamiento de pantalla en el lado del servidor, rotación de pantalla en el lado del cliente utilizando técnicas simples de copia, soporte de video YUV, y maximización del espacio de pantalla para actualizaciones de visualización y aprovechamiento de los botones de control existentes en las PDAs para elementos de la interfaz de usuario. pTHINC soporta de manera transparente navegadores de escritorio tradicionales y sus aplicaciones auxiliares en dispositivos PDA y computadoras de escritorio, brindando a los usuarios móviles acceso ubicuo a un entorno web consistente, personalizado y completo en dispositivos heterogéneos. Hemos implementado pTHINC y medido su rendimiento en aplicaciones web en comparación con los sistemas de cliente ligero existentes y las aplicaciones web nativas. Nuestros resultados en múltiples dispositivos móviles inalámbricos demuestran que pTHINC ofrece un rendimiento de navegación web hasta 80 veces mejor que los sistemas de cliente ligero existentes, y 8 veces mejor que un navegador PDA nativo. Además, pTHINC es el único cliente ligero de PDA 151 Figura 11: Captura de pantalla de video: RDP 640x480 Figura 12: Captura de pantalla de video: VNC 1024x768 Figura 13: Captura de pantalla de video: ICA redimensionado 1024x768 Figura 14: Captura de pantalla de video: pTHINC redimensionado 1024x768 que proporciona de manera transparente la reproducción de video a pantalla completa y a velocidad de cuadro completa, haciendo que los sitios web con contenido multimedia sean accesibles para los usuarios de la web móvil. 7. AGRADECIMIENTOS Este trabajo fue apoyado en parte por las subvenciones NSF ITR CCR0219943 y CNS-0426623, y un premio IBM SUR. 8. REFERENCIAS [1] R. Baratto, L. Kim y J. Nieh. THINC: Una arquitectura de visualización virtual para la computación de cliente ligero. En Actas del 20º Simposio de Principios de Sistemas Operativos de la ACM (SOSP), octubre de 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius y A. Muir. Microsoft Windows NT Server 4.0, Terminal Server Edition: Referencia Técnica. Microsoft Press, Redmond, WA, 1999. [4] A.\nMicrosoft Press, Redmond, WA, 1999. [4] A. Fox, I. Goldberg, S. D. Gribble y D. C. Lee. Experiencia con Top Gun Wingman: un navegador web gráfico basado en proxy para el 3Com PalmPilot. En Actas de Middleware 98, Lake District, Inglaterra, septiembre de 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Ley de Portabilidad y Responsabilidad del Seguro de Salud. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench versión 1.5. http://etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi. Sobre agentes de proxy, movilidad y acceso web. Redes y aplicaciones móviles, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon y A. Ortega. Diseño e Implementación de un Proxy de Caché Blando. Redes de Computadoras y Sistemas ISDN, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana y S. Varshneya. Mejorando la navegación web en PDAs inalámbricas utilizando computación de cliente ligero. En Actas de la 13ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham y P. Shenoy. TranSquid: Proxy de transcodificación y almacenamiento en caché para entornos de comercio electrónico heterogéneos. En Actas del 12º Taller IEEE sobre Problemas de Investigación en Ingeniería de Datos (RIDE 02), febrero de 2002. [12] Visor VNC .NET para PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang y N. Novik. Midiendo el rendimiento de clientes ligeros utilizando pruebas de referencia en cámara lenta. ACM Trans. Sistemas de Computación, 21(1):87-115, Feb. 2003. [14] J. Nielsen. Diseño de Usabilidad en la Web. New Riders Publishing, Indianápolis, IN, 2000. [15] Navegador Opera Mini. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood y A. Hopper. Computación de Red Virtual. IEEE Internet Computing, 2(1), enero/febrero de 1998. [17] R. W. Scheifler y J. Gettys. El Sistema de Ventanas X. ACM Trans. Gr., 5(2):79-106, Abr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla y M. Sajjadpour. Rendimiento de la navegación web en computación inalámbrica de cliente ligero. En Actas de la 12ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2003. 152 ",
            "candidates": [],
            "error": [
                [
                    "web omnipresente",
                    "acceso web ubicuo"
                ]
            ]
        }
    }
}