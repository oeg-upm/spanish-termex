{
    "id": "J-51",
    "original_text": "Complexity of (Iterated) Dominance∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using dominance and iterated dominance. We first study both strict and weak dominance (not iterated), and show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve. We then move on to iterated dominance. We show that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance. This allows us to also show that determining whether there is a path that leads to a unique solution is NP-complete. Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].) Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time. We then study what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies. First, we show that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance). Then, we show that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3). Finally, we study Bayesian games. We show that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak ∗ This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858, and a Sloan Fellowship. dominance). Finally, we show that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance). Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1. INTRODUCTION In multiagent systems with self-interested agents, the optimal action for one agent may depend on the actions taken by other agents. In such settings, the agents require tools from game theory to rationally decide on an action. Game theory offers various formal models of strategic settings-the best-known of which is a game in normal (or matrix) form, specifying a utility (payoff) for each agent for each combination of strategies that the agents choose-as well as solution concepts, which, given a game, specify which outcomes are reasonable (under various assumptions of rationality and common knowledge). Probably the best-known (and certainly the most-studied) solution concept is that of Nash equilibrium. A Nash equilibrium specifies a strategy for each player, in such a way that no player has an incentive to (unilaterally) deviate from the prescribed strategy. Recently, numerous papers have studied computing Nash equilibria in various settings [9, 4, 12, 3, 13, 14], and the complexity of constructing a Nash equilibrium in normal form games has been labeled one of the two most important open problems on the boundary of P today [20]. The problem of computing solutions according to the perhaps more elementary solution concepts of dominance and iterated dominance has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the game theory community [7].1 ) A strategy strictly dominates another strategy if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one. The idea is that dominated strategies can be eliminated from consideration. In iterated dominance, the elimination proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating strategy no longer needs to perform better than or as well as the dominated strategy against opponent strategies that were eliminated in earlier rounds. Computing solutions according to (iterated) dominance is important for at least the following reasons: 1) it can be computationally easier than computing (for instance) a Nash equilibrium (and therefore it can be useful as a preprocessing step in computing a Nash equilibrium), and 2) (iterated) dominance requires a weaker rationality assumption on the players than (for instance) Nash equilibrium, and therefore solutions derived according to it are more likely to occur. In this paper, we study some fundamental computational questions concerning dominance and iterated dominance, including how hard it is to check whether a given strategy can be eliminated by each of the variants of these notions. The rest of the paper is organized as follows. In Section 2, we briefly review definitions and basic properties of normal form games, strict and weak dominance, and iterated strict and weak dominance. In the remaining sections, we study computational aspects of dominance and iterated dominance. In Section 3, we study one-shot (not iterated) dominance. In Section 4, we study iterated dominance. In Section 5, we study dominance and iterated dominance when the dominating strategy can only place probability on a few pure strategies. Finally, in Section 6, we study dominance and iterated dominance in Bayesian games. 2. DEFINITIONS AND BASIC PROPERTIES In this section, we briefly review normal form games, as well as dominance and iterated dominance (both strict and weak). An n-player normal form game is defined as follows. Definition 1. A normal form game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of pure strategies Σi and a utility function ui : Σ1 × Σ2 × . . . × Σn → R (where ui(σ1, σ2, . . . , σn) denotes player is utility when each player j plays action σj). The two main notions of dominance are defined as follows. Definition 2. Player is strategy σi is said to be strictly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i). Player is strategy σi is said to be weakly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) ≥ ui(σi, σ−i), and for at least one vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i). In this definition, it is sometimes allowed for the dominating strategy σi to be a mixed strategy, that is, a probability distribution over pure strategies. In this case, the utilities in dominance altogether. For example, simple dominance checks are sometimes used as a subroutine in searching for Nash equilibria [21]. the definition are the expected utilities.2 There are other notions of dominance, such as very weak dominance (in which no strict inequality is required, so two strategies can dominate each other), but we will not study them here. When we are looking at the dominance relations for player i, the other players (−i) can be thought of as a single player.3 Therefore, in the rest of the paper, when we study one-shot (not iterated) dominance, we will focus without loss of generality on two-player games.4 In two-player games, we will generally refer to the players as r (row) and c (column) rather than 1 and 2. In iterated dominance, dominated strategies are removed from the game, and no longer have any effect on future dominance relations. Iterated dominance can eliminate more strategies than dominance, as follows. σr may originally not dominate σr because the latter performs better against σc; but then, once σc is removed because it is dominated by σc, σr dominates σr, and the latter can be removed. For example, in the following game, R can be removed first, after which D is dominated. L R U 1, 1 0, 0 D 0, 1 1, 0 Either strict or weak dominance can be used in the definition of iterated dominance. We note that the process of iterated dominance is never helped by removing a dominated mixed strategy, for the following reason. If σi gives player i a higher utility than σi against mixed strategy σj for player j = i (and strategies σ−{i,j} for the other players), then for at least one pure strategy σj that σj places positive probability on, σi must perform better than σi against σj (and strategies σ−{i,j} for the other players). Thus, removing the mixed strategy σj does not introduce any new dominances. More detailed discussions and examples can be found in standard texts on microeconomics or game theory [17, 5]. We are now ready to move on to the core of this paper. 3. DOMINANCE (NOT ITERATED) In this section, we study the notion of one-shot (not iterated) dominance. As a first observation, checking whether a given strategy is strictly (weakly) dominated by some pure strategy is straightforward, by checking, for every pure strategy for that player, whether the latter strategy performs strictly better against all the opponents strategies (at least as well against all the opponents strategies, and strictly 2 The dominated strategy σi is, of course, also allowed to be mixed, but this has no technical implications for the paper: when we study one-shot dominance, we ask whether a given strategy is dominated, and it does not matter whether the given strategy is pure or mixed; when we study iterated dominance, there is no use in eliminating mixed strategies, as we will see shortly. 3 This player may have a very large strategy space (one pure strategy for every vector of pure strategies for the players that are being replaced). Nevertheless, this will not result in an increase in our representation size, because the original representation already had to specify utilities for each of these vectors. 4 We note that a restriction to two-player games would not be without loss of generality for iterated dominance. This is because for iterated dominance, we need to look at the dominated strategies of each individual player, so we cannot merge any players. 89 better against at least one).5 Next, we show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time by solving a single linear program. (Similar linear programs have been given before [18]; we present the result here for completeness, and because we will build on the linear programs given below in Theorem 6.) Proposition 1. Given the row players utilities, a subset Dr of the row players pure strategies Σr, and a distinguished strategy σ∗ r for the row player, we can check in time polynomial in the size of the game (by solving a single linear program of polynomial size) whether there exists some mixed strategy σr, that places positive probability only on strategies in Dr and dominates σ∗ r , both for strict and for weak dominance. Proof. Let pdr be the probability that σr places on dr ∈ Dr. We will solve a single linear program in each of our algorithms; linear programs can be solved in polynomial time [10]. For strict dominance, the question is whether the pdr can be set so that for every pure strategy for the column player σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc). Because the inequality must be strict, we cannot solve this directly by linear programming. We proceed as follows. Because the game is finite, we may assume without loss of generality that all utilities are positive (if not, simply add a constant to all utilities.) Solve the following linear program: minimize dr∈Dr pdr such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc). If σ∗ r is strictly dominated by some mixed strategy, this linear program has a solution with objective value < 1. (The dominating strategy is a feasible solution with objective value exactly 1. Because no constraint is binding for this solution, we can reduce one of the probabilities slightly without affecting feasibility, thereby obtaining a solution with objective value < 1.) Moreover, if this linear program has a solution with objective value < 1, there is a mixed strategy strictly dominating σ∗ r , which can be obtained by taking the LP solution and adding the remaining probability to any strategy (because all the utilities are positive, this will add to the left side of any inequality, so all inequalities will become strict). For weak dominance, we can solve the following linear program: maximize σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1. If σ∗ r is weakly dominated by some mixed strategy, then that mixed strategy is a feasible solution to this program with objective value > 0, because for at least one strategy σc ∈ Σc we have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0. On the other hand, if this program has a solution with objective value > 0, then for at least one strategy σc ∈ Σc we 5 Recall that the assumption of a single opponent (that is, the assumption of two players) is without loss of generality for one-shot dominance. must have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, and thus the linear programs solution is a weakly dominating mixed strategy. 4. ITERATED DOMINANCE We now move on to iterated dominance. It is well-known that iterated strict dominance is path-independent [6, 19]that is, if we remove dominated strategies until no more dominated strategies remain, in the end the remaining strategies for each player will be the same, regardless of the order in which strategies are removed. Because of this, to see whether a given strategy can be eliminated by iterated strict dominance, all that needs to be done is to repeatedly remove strategies that are strictly dominated, until no more dominated strategies remain. Because we can check in polynomial time whether any given strategy is dominated (whether or not dominance by mixed strategies is allowed, as described in Section 3), this whole procedure takes only polynomial time. In the case of iterated dominance by pure strategies with two players, Knuth et al. [11] slightly improve on (speed up) the straightforward implementation of this procedure by keeping track of, for each ordered pair of strategies for a player, the number of opponent strategies that prevent the first strategy from dominating the second. Hereby the runtime for an m × n game is reduced from O((m + n)4 ) to O((m + n)3 ). (Actually, they only study very weak dominance (for which no strict inequalities are required), but the approach is easily extended.) In contrast, iterated weak dominance is known to be pathdependent.6 For example, in the following game, using iterated weak dominance we can eliminate M first, and then D, or R first, and then U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Therefore, while the procedure of removing weakly dominated strategies until no more weakly dominated strategies remain can certainly be executed in polynomial time, which strategies survive in the end depends on the order in which we remove the dominated strategies. We will investigate two questions for iterated weak dominance: whether a given strategy is eliminated in some path, and whether there is a path to a unique solution (one pure strategy left per player). We will show that both of these problems are computationally hard. Definition 3. Given a game in normal form and a distinguished strategy σ∗ , IWD-STRATEGY-ELIMINATION asks whether there is some path of iterated weak dominance that eliminates σ∗ . Given a game in normal form, IWDUNIQUE-SOLUTION asks whether there is some path of iterated weak dominance that leads to a unique solution (one strategy left per player). The following lemma shows a special case of normal form games in which allowing for weak dominance by mixed strategies (in addition to weak dominance by pure strategies) does 6 There is, however, a restriction of weak dominance called nice weak dominance which is path-independent [15, 16]. For an overview of path-independence results, see Apt [1]. 90 not help. We will prove the hardness results in this setting, so that they will hold whether or not dominance by mixed strategies is allowed. Lemma 1. Suppose that all the utilities in a game are in {0, 1}. Then every pure strategy that is weakly dominated by a mixed strategy is also weakly dominated by a pure strategy. Proof. Suppose pure strategy σ is weakly dominated by mixed strategy σ∗ . If σ gets a utility of 1 against some opponent strategy (or vector of opponent strategies if there are more than 2 players), then all the pure strategies that σ∗ places positive probability on must also get a utility of 1 against that opponent strategy (or else the expected utility would be smaller than 1). Moreover, at least one of the pure strategies that σ∗ places positive probability on must get a utility of 1 against an opponent strategy that σ gets 0 against (or else the inequality would never be strict). It follows that this pure strategy weakly dominates σ. We are now ready to prove the main results of this section. Theorem 1. IWD-STRATEGY-ELIMINATION is NPcomplete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed. Proof. The problem is in NP because given a sequence of strategies to be eliminated, we can easily check whether this is a valid sequence of eliminations (even when dominance by mixed strategies is allowed, using Proposition 1). To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following IWD-STRATEGY-ELIMINATION instance. (In this instance, we will specify that certain strategies are uneliminable. A strategy σr can be made uneliminable, even when 0 and 1 are the only allowed utilities, by adding another strategy σr and another opponent strategy σc, so that: 1. σr and σr are the only strategies that give the row player a utility of 1 against σc. 2. σr and σr always give the row player the same utility. 3. σc is the only strategy that gives the column player a utility of 1 against σr, but otherwise σc always gives the column player utility 0. This makes it impossible to eliminate any of these three strategies. We will not explicitly specify the additional strategies to make the proof more legible.) In this proof, we will denote row player strategies by s, and column player strategies by t, to improve legibility. Let the row players pure strategy set be given as follows. For every variable v ∈ V , the row player has corresponding strategies s1 +v, s2 +v, s1 −v, s2 −v. Additionally, the row player has the following 2 strategies: s1 0 and s2 0, where s2 0 = σ∗ r (that is, it is the strategy we seek to eliminate). Finally, for every clause c ∈ C, the row player has corresponding strategies s1 c (uneliminable) and s2 c. Let the column players pure strategy set be given as follows. For every variable v ∈ V , the column player has a corresponding strategy tv. For every clause c ∈ C, the column player has a corresponding strategy tc, and additionally, for every literal l ∈ L that occurs in c, a strategy tc,l. For every variable v ∈ V , the column player has corresponding strategies t+v, t−v (both uneliminable). Finally, the column player has three additional strategies: t1 0 (uneliminable), t2 0, and t1. The utility function for the row player is given as follows: • ur(s1 +v, tv) = 0 for all v ∈ V ; • ur(s2 +v, tv) = 1 for all v ∈ V ; • ur(s1 −v, tv) = 1 for all v ∈ V ; • ur(s2 −v, tv) = 0 for all v ∈ V ; • ur(s1 +v, t1) = 1 for all v ∈ V ; • ur(s2 +v, t1) = 0 for all v ∈ V ; • ur(s1 −v, t1) = 0 for all v ∈ V ; • ur(s2 −v, t1) = 1 for all v ∈ V ; • ur(sb +v, t+v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sb −v, t−v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sl, t) = 0 otherwise for all l ∈ L and t ∈ S2; • ur(s1 0, tc) = 0 for all c ∈ C; • ur(s2 0, tc) = 1 for all c ∈ C; • ur(sb 0, t1 0) = 1 for all b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 otherwise for all b ∈ {1, 2} and t ∈ S2; • ur(sb c, t) = 0 otherwise for all c ∈ C and b ∈ {1, 2}; and the row players utility is 0 in every other case. The utility function for the column player is given as follows: • uc(s, tv) = 0 for all v ∈ V and s ∈ S1; • uc(s, t1) = 0 for all s ∈ S1; • uc(s2 l , tc) = 1 for all c ∈ C and l ∈ L where l ∈ c (literal l occurs in clause c); • uc(s2 l2 , tc,l1 ) = 1 for all c ∈ C and l1, l2 ∈ L, l1 = l2 where l2 ∈ c; • uc(s1 c, tc) = 1 for all c ∈ C; • uc(s2 c, tc) = 0 for all c ∈ C; • uc(sb c, tc,l) = 1 for all c ∈ C, l ∈ L, and b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 otherwise for all c ∈ C and l ∈ L; and the column players utility is 0 in every other case. We now show that the two instances are equivalent. First, suppose there is a solution to the satisfiability instance: that is, a truth-value assignment to the variables in V such that all clauses are satisfied. Then, consider the following sequence of eliminations in our game: 1. For every variable v that is set to true in the assignment, eliminate tv (which gives the column player utility 0 everywhere). 2. Then, for every variable v that is set to true in the assignment, eliminate s2 +v using s1 +v (which is possible because tv has been eliminated, and because t1 has not been eliminated (yet)). 3. Now eliminate t1 (which gives the column player utility 0 everywhere). 4. Next, for every variable v that is set to false in the assignment, eliminate s2 −v using s1 −v (which is possible because t1 has been eliminated, and because tv has not been eliminated (yet)). 5. For every clause c which has the variable corresponding to one of its positive literals l = +v set to true in the assignment, eliminate tc using tc,l (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 6. For every clause c which has the variable corresponding to one of its negative literals l = −v set to false in the assignment, eliminate tc using tc,l 91 (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 7. Because the assignment satisfied the formula, all the tc have now been eliminated. Thus, we can eliminate s2 0 = σ∗ r using s1 0. It follows that there is a solution to the IWD-STRATEGY-ELIMINATION instance. Now suppose there is a solution to the IWD-STRATEGYELIMINATION instance. By Lemma 1, we can assume that all the dominances are by pure strategies. We first observe that only s1 0 can eliminate s2 0 = σ∗ r , because it is the only other strategy that gets the row player a utility of 1 against t1 0, and t1 0 is uneliminable. However, because s2 0 performs better than s1 0 against the tc strategies, it follows that all of the tc strategies must be eliminated. For each c ∈ C, the strategy tc can only be eliminated by one of the strategies tc,l (with the same c), because these are the only other strategies that get the column player a utility of 1 against s1 c, and s1 c is uneliminable. But, in order for some tc,l to eliminate tc, s2 l must be eliminated first. Only s1 l can eliminate s2 l , because it is the only other strategy that gets the row player a utility of 1 against tl, and tl is uneliminable. We next show that for every v ∈ V only one of s2 +v, s2 −v can be eliminated. This is because in order for s1 +v to eliminate s2 +v, tv needs to have been eliminated and t1, not (so tv must be eliminated before t1); but in order for s1 −v to eliminate s2 −v, t1 needs to have been eliminated and tv, not (so t1 must be eliminated before tv). So, set v to true if s2 +v is eliminated, and to false otherwise Because by the above, for every clause c, one of the s2 l with l ∈ c must be eliminated, it follows that this is a satisfying assignment to the satisfiability instance. Using Theorem 1, it is now (relatively) easy to show that IWD-UNIQUE-SOLUTION is also NP-complete under the same restrictions. Theorem 2. IWD-UNIQUE-SOLUTION is NP-complete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed. Proof. Again, the problem is in NP because we can nondeterministically choose the sequence of eliminations and verify whether it is correct. To show NP-hardness, we reduce an arbitrary IWD-STRATEGY-ELIMINATION instance to the following IWD-UNIQUE-SOLUTION instance. Let all the strategies for each player from the original instance remain part of the new instance, and let the utilities resulting from the players playing a pair of these strategies be the same. We add three additional strategies σ1 r , σ2 r , σ3 r for the row player, and three additional strategies σ1 c , σ2 c , σ3 c for the column player. Let the additional utilities be as follows: • ur(σr, σj c) = 1 for all σr /∈ {σ1 r , σ2 r , σ3 r } and j ∈ {2, 3}; • ur(σi r, σc) = 1 for all i ∈ {1, 2, 3} and σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 for all i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • and the row players utility is 0 in all other cases involving a new strategy. • uc(σ3 r , σc) = 1 for all σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 for all j ∈ {2, 3} (σ∗ r is the strategy to be eliminated in the original instance); • uc(σi r, σ1 c ) = 1 for all i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • and the column players utility is 0 in all other cases involving a new strategy. We proceed to show that the two instances are equivalent. First suppose there exists a solution to the original IWDSTRATEGY-ELIMINATION instance. Then, perform the same sequence of eliminations to eliminate σ∗ r in the new IWD-UNIQUE-SOLUTION instance. (This is possible because at any stage, any weak dominance for the row player in the original instance is still a weak dominance in the new instance, because the two strategies utilities for the row player are the same when the column player plays one of the new strategies; and the same is true for the column player.) Once σ∗ r is eliminated, let σ1 c eliminate σ2 c . (It performs better against σ2 r .) Then, let σ1 r eliminate all the other remaining strategies for the row player. (It always performs better against either σ1 c or σ3 c .) Finally, σ1 c is the unique best response against σ1 r among the column players remaining strategies, so let it eliminate all the other remaining strategies for the column player. Thus, there exists a solution to the IWD-UNIQUE-SOLUTION instance. Now suppose there exists a solution to the IWD-UNIQUESOLUTION instance. By Lemma 1, we can assume that all the dominances are by pure strategies. We will show that none of the new strategies (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) can either eliminate another strategy, or be eliminated before σ∗ r is eliminated. Thus, there must be a sequence of eliminations ending in the elimination of σ∗ r , which does not involve any of the new strategies, and is therefore a valid sequence of eliminations in the original game (because all original strategies perform the same against each new strategy). We now show that this is true by exhausting all possibilities for the first elimination before σ∗ r is eliminated that involves a new strategy. None of the σi r can be eliminated by a σr /∈ {σ1 r , σ2 r , σ3 r }, because the σi r perform better against σ1 c . σ1 r cannot eliminate any other strategy, because it always performs poorer against σ2 c . σ2 r and σ3 r are equivalent from the row players perspective (and thus cannot eliminate each other), and cannot eliminate any other strategy because they always perform poorer against σ3 c . None of the σj c can be eliminated by a σc /∈ {σ1 c , σ2 c , σ3 c }, because the σj c always perform better against either σ1 r or σ2 r . σ1 c cannot eliminate any other strategy, because it always performs poorer against either σ∗ r or σ3 r . σ2 c cannot eliminate any other strategy, because it always performs poorer against σ2 r or σ3 r . σ3 c cannot eliminate any other strategy, because it always performs poorer against σ1 r or σ3 r . Thus, there exists a solution to the IWDSTRATEGY-ELIMINATION instance. A slightly weaker version of the part of Theorem 2 concerning dominance by pure strategies only is the main result of Gilboa et al. [7]. (Besides not proving the result for dominance by mixed strategies, the original result was weaker because it required utilities {0, 1, 2, 3, 4, 5, 6, 7, 8} rather than just {0, 1} (and because of this, our Lemma 1 cannot be applied to it to get the result for mixed strategies).) 5. (ITERATED) DOMINANCE USING MIXED STRATEGIES WITH SMALL SUPPORTS When showing that a strategy is dominated by a mixed strategy, there are several reasons to prefer exhibiting a 92 dominating strategy that places positive probability on as few pure strategies as possible. First, this will reduce the number of bits required to specify the dominating strategy (and thus the proof of dominance can be communicated quicker): if the dominating mixed strategy places positive probability on only k strategies, then it can be specified using k real numbers for the probabilities, plus k log m (where m is the number of strategies for the player under consideration) bits to indicate which strategies are used. Second, the proof of dominance will be cleaner: for a dominating mixed strategy, it is typically (always in the case of strict dominance) possible to spread some of the probability onto any unused pure strategy and still have a dominating strategy, but this obscures which pure strategies are the ones that are key in making the mixed strategy dominating. Third, because (by the previous) the argument for eliminating the dominated strategy is simpler and easier to understand, it is more likely to be accepted. Fourth, the level of risk neutrality required for the argument to work is reduced, at least in the extreme case where dominance by a single pure strategy can be exhibited (no risk neutrality is required here). This motivates the following problem. Definition 4 (MINIMUM-DOMINATING-SET). We are given the row players utilities of a game in normal form, a distinguished strategy σ∗ for the row player, a specification of whether the dominance should be strict or weak, and a number k. We are asked whether there exists a mixed strategy σ for the row player that places positive probability on at most k pure strategies, and dominates σ∗ in the required sense. Unfortunately, this problem is NP-complete. Theorem 3. MINIMUM-DOMINATING-SET is NPcomplete, both for strict and for weak dominance. Proof. The problem is in NP because we can nondeterministically choose a set of at most k strategies to give positive probability, and decide whether we can dominate σ∗ with these k strategies as described in Proposition 1. To show NP-hardness, we reduce an arbitrary SET-COVER instance (given a set S, subsets S1, S2, . . . , Sr, and a number t, can all of S be covered by at most t of the subsets?) to the following MINIMUM-DOMINATING-SET instance. For every element s ∈ S, there is a pure strategy σs for the column player. For every subset Si, there is a pure strategy σSi for the row player. Finally, there is the distinguished pure strategy σ∗ for the row player. The row players utilities are as follows: ur(σSi , σs) = t + 1 if s ∈ Si; ur(σSi , σs) = 0 if s /∈ Si; ur(σ∗ , σs) = 1 for all s ∈ S. Finally, we let k = t. We now proceed to show that the two instances are equivalent. First suppose there exists a solution to the SET-COVER instance. Without loss of generality, we can assume that there are exactly k subsets in the cover. Then, for every Si that is in the cover, let the dominating strategy σ place exactly 1 k probability on the corresponding pure strategy σSi . Now, if we let n(s) be the number of subsets in the cover containing s (we observe that that n(s) ≥ 1), then for every strategy σs for the column player, the row players expected utility for playing σ when the column player is playing σs is u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs). So σ strictly (and thus also weakly) dominates σ∗ , and there exists a solution to the MINIMUM-DOMINATING-SET instance. Now suppose there exists a solution to the MINIMUMDOMINATING-SET instance. Consider the (at most k) pure strategies of the form σSi on which the dominating mixed strategy σ places positive probability, and let T be the collection of the corresponding subsets Si. We claim that T is a cover. For suppose there is some s ∈ S that is not in any of the subsets in T . Then, if the column player plays σs, the row player (when playing σ) will always receive utility 0-as opposed to the utility of 1 the row player would receive for playing σ∗ , contradicting the fact that σ dominates σ∗ (whether this dominance is weak or strict). It follows that there exists a solution to the SET-COVER instance. On the other hand, if we require that the dominating strategy only places positive probability on a very small number of pure strategies, then it once again becomes easy to check whether a strategy is dominated. Specifically, to find out whether player is strategy σ∗ is dominated by a strategy that places positive probability on only k pure strategies, we can simply check, for every subset of k of player is pure strategies, whether there is a strategy that places positive probability only on these k strategies and dominates σ∗ , using Proposition 1. This requires only O(|Σi|k ) such checks. Thus, if k is a constant, this constitutes a polynomial-time algorithm. A natural question to ask next is whether iterated strict dominance remains computationally easy when dominating strategies are required to place positive probability on at most k pure strategies, where k is a small constant. (We have already shown in Section 4 that iterated weak dominance is hard even when k = 1, that is, only dominance by pure strategies is allowed.) Of course, if iterated strict dominance were path-independent under this restriction, computational easiness would follow as it did in Section 4. However, it turns out that this is not the case. Observation 1. If we restrict the dominating strategies to place positive probability on at most two pure strategies, iterated strict dominance becomes path-dependent. Proof. Consider the following game: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Let (i, j) denote the outcome in which the row player plays the ith row and the column player plays the jth column. Because (1, 1), (2, 2), and (4, 3) are all Nash equilibria, none of the column players pure strategies will ever be eliminated, and neither will rows 1, 2, and 4. We now observe that randomizing uniformly over rows 1 and 2 dominates row 3, and randomizing uniformly over rows 3 and 4 dominates row 5. However, if we eliminate row 3 first, it becomes impossible to dominate row 5 without randomizing over at least 3 pure strategies. Indeed, iterated strict dominance turns out to be hard even when k = 3. Theorem 4. If we restrict the dominating strategies to place positive probability on at most three pure strategies, it becomes NP-complete to decide whether a given strategy can be eliminated using iterated strict dominance. 93 Proof. The problem is in NP because given a sequence of strategies to be eliminated, we can check in polynomial time whether this is a valid sequence of eliminations (for any strategy to be eliminated, we can check, for every subset of three other strategies, whether there is a strategy placing positive probability on only these three strategies that dominates the strategy to be eliminated, using Proposition 1). To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following two-player game. For every variable v ∈ V , the row player has strategies s+v, s−v, s1 v, s2 v, s3 v, s4 v, and the column player has strategies t1 v, t2 v, t3 v, t4 v. For every clause c ∈ C, the row player has a strategy sc, and the column player has a strategy tc, as well as, for every literal l occurring in c, an additional strategy tl c. The row player has two additional strategies s1 and s2. (s2 is the strategy that we are seeking to eliminate.) Finally, the column player has one additional strategy t1. The utility function for the row player is given as follows (where is some sufficiently small number): • ur(s+v, tj v) = 4 if j ∈ {1, 2}, for all v ∈ V ; • ur(s+v, tj v) = 1 if j ∈ {3, 4}, for all v ∈ V ; • ur(s−v, tj v) = 1 if j ∈ {1, 2}, for all v ∈ V ; • ur(s−v, tj v) = 4 if j ∈ {3, 4}, for all v ∈ V ; • ur(s+v, t) = ur(s−v, t) = 0 for all v ∈ V and t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 for all v ∈ V and i ∈ {1, 2, 3, 4}; • ur(si v, t) = for all v ∈ V , i ∈ {1, 2, 3, 4}, and t = ti v; • ur(sc, tc) = 2 for all c ∈ C; • ur(sc, t) = 0 for all c ∈ C and t = tc; • ur(s1, t1) = 1 + ; • ur(s1, t) = for all t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 for all c ∈ C; • ur(s2, t) = 0 for all t /∈ {t1} ∪ {tc : c ∈ C}. The utility function for the column player is given as follows: • uc(si v, ti v) = 1 for all v ∈ V and i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 for all v ∈ V , i ∈ {1, 2, 3, 4}, and s = si v; • uc(sc, tc) = 1 for all c ∈ C; • uc(sl, tc) = 1 for all c ∈ C and l ∈ L occurring in c; • uc(s, tc) = 0 for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + for all c ∈ C; • uc(sl , tl c) = 1 + for all c ∈ C and l = l occurring in c; • uc(s, tl c) = for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c, l = l }; • uc(s2, t1) = 1; • uc(s, t1) = 0 for all s = s2. We now show that the two instances are equivalent. First, suppose that there is a solution to the satisfiability instance. Then, consider the following sequence of eliminations in our game: 1. For every variable v that is set to true in the satisfying assignment, eliminate s+v with the mixed strategy σr that places probability 1/3 on s−v, probability 1/3 on s1 v, and probability 1/3 on s2 v. (The expected utility of playing σr against t1 v or t2 v is 14/3 > 4; against t3 v or t4 v, it is 4/3 > 1; and against anything else it is 2 /3 > 0. Hence the dominance is valid.) 2. Similarly, for every variable v that is set to false in the satisfying assignment, eliminate s−v with the mixed strategy σr that places probability 1/3 on s+v, probability 1/3 on s3 v, and probability 1/3 on s4 v. (The expected utility of playing σr against t1 v or t2 v is 4/3 > 1; against t3 v or t4 v, it is 14/3 > 4; and against anything else it is 2 /3 > 0. Hence the dominance is valid.) 3. For every c ∈ C, eliminate tc with any tl c for which l was set to true in the satisfying assignment. (This is a valid dominance because tl c performs better than tc against any strategy other than sl, and we eliminated sl in step 1 or in step 2.) 4. Finally, eliminate s2 with s1. (This is a valid dominance because s1 performs better than s2 against any strategy other than those in {tc : c ∈ C}, which we eliminated in step 3.) Hence, there is an elimination path that eliminates s2. Now, suppose that there is an elimination path that eliminates s2. The strategy that eventually dominates s2 must place most of its probability on s1, because s1 is the only other strategy that performs well against t1, which cannot be eliminated before s2. But, s1 performs significantly worse than s2 against any strategy tc with c ∈ C, so it follows that all these strategies must be eliminated first. Each strategy tc can only be eliminated by a strategy that places most of its weight on the corresponding strategies tl c with l ∈ c, because they are the only other strategies that perform well against sc, which cannot be eliminated before tc. But, each strategy tl c performs significantly worse than tc against sl, so it follows that for every clause c, for one of the literals l occurring in it, sl must be eliminated first. Now, strategies of the form tj v will never be eliminated because they are the unique best responses to the corresponding strategies sj v (which are, in turn, the best responses to the corresponding tj v). As a result, if strategy s+v (respectively, s−v) is eliminated, then its opposite strategy s−v (respectively, s+v) can no longer be eliminated, for the following reason. There is no other pure strategy remaining that gets a significant utility against more than one of the strategies t1 v, t2 v, t3 v, t4 v, but s−v (respectively, s+v) gets significant utility against all 4, and therefore cannot be dominated by a mixed strategy placing positive probability on at most 3 strategies. It follows that for each v ∈ V , at most one of the strategies s+v, s−v is eliminated, in such a way that for every clause c, for one of the literals l occurring in it, sl must be eliminated. But then setting all the literals l such that sl is eliminated to true constitutes a solution to the satisfiability instance. In the next section, we return to the setting where there is no restriction on the number of pure strategies on which a dominating mixed strategy can place positive probability. 6. (ITERATED) DOMINANCE IN BAYESIAN GAMES So far, we have focused on normal form games that are flatly represented (that is, every matrix entry is given ex94 plicitly). However, for many games, the flat representation is too large to write down explicitly, and instead, some representation that exploits the structure of the game needs to be used. Bayesian games, besides being of interest in their own right, can be thought of as a useful structured representation of normal form games, and we will study them in this section. In a Bayesian game, each player first receives privately held preference information (the players type) from a distribution, which determines the utility that that player receives for every outcome of (that is, vector of actions played in) the game. After receiving this type, the player plays an action based on it.7 Definition 5. A Bayesian game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of actions Ai, a (finite) type space Θi with a probability distribution πi over it, and a utility function ui : Θi × A1 × A2 × . . . × An → R (where ui(θi, a1, a2, . . . , an) denotes player is utility when is type is θi and each player j plays action aj). A pure strategy in a Bayesian game is a mapping from types to actions, σi : Θi → Ai, where σi(θi) denotes the action that player i plays for type θi. Any vector of pure strategies in a Bayesian game defines an (expected) utility for each player, and therefore we can translate a Bayesian game into a normal form game. In this normal form game, the notions of dominance and iterated dominance are defined as before. However, the normal form representation of the game is exponentially larger than the Bayesian representation, because each player i has |Ai||Θi| distinct pure strategies. Thus, any algorithm for Bayesian games that relies on expanding the game to its normal form will require exponential time. Specifically, our easiness results for normal form games do not directly transfer to this setting. In fact, it turns out that checking whether a strategy is dominated by a pure strategy is hard in Bayesian games. Theorem 5. In a Bayesian game, it is NP-complete to decide whether a given pure strategy σr : Θr → Ar is dominated by some other pure strategy (both for strict and weak dominance), even when the row players distribution over types is uniform. Proof. The problem is in NP because it is easy to verify whether a candidate dominating strategy is indeed a dominating strategy. To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a set of clauses C using variables from V ) to the following Bayesian game. Let the row players action set be Ar = {t, f, 0} and let the column players action set be Ac = {ac : c ∈ C}. Let the row players type set be Θr = {θv : v ∈ V }, with a distribution πr that is uniform. Let the row players utility function be as follows: • ur(θv, 0, ac) = 0 for all v ∈ V and c ∈ C; • ur(θv, b, ac) = |V | for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b satisfies c; • ur(θv, b, ac) = −1 for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b does not satisfy c. 7 In general, a player can also receive a signal about the other players preferences, but we will not concern ourselves with that here. Let the pure strategy to be dominated be the one that plays 0 for every type. We show that the strategy is dominated by a pure strategy if and only if there is a solution to the satisfiability instance. First, suppose there is a solution to the satisfiability instance. Then, let σd r be given by: σd r (θv) = t if v is set to true in the solution to the satisfiability instance, and σd r (θv) = f otherwise. Then, against any action ac by the column player, there is at least one type θv such that either +v ∈ c and σd r (θv) = t, or −v ∈ c and σd r (θv) = f. Thus, the row players expected utility against action ac is at least |V | |V | − |V |−1 |V | = 1 |V | > 0. So, σd r is a dominating strategy. Now, suppose there is a dominating pure strategy σd r . This dominating strategy must play t or f for at least one type. Thus, against any ac by the column player, there must at least be some type θv for which ur(θv, σd r (θv), ac) > 0. That is, there must be at least one variable v such that setting v to σd r (θv) satifies c. But then, setting each v to σd r (θv) must satisfy all the clauses. So a satisfying assignment exists. However, it turns out that we can modify the linear programs from Proposition 1 to obtain a polynomial time algorithm for checking whether a strategy is dominated by a mixed strategy in Bayesian games. Theorem 6. In a Bayesian game, it can be decided in polynomial time whether a given (possibly mixed) strategy σr is dominated by some other mixed strategy, using linear programming (both for strict and weak dominance). Proof. We can modify the linear programs presented in Proposition 1 as follows. For strict dominance, again assuming without loss of generality that all the utilities in the game are positive, use the following linear program (in which pσr r (θr, ar) is the probability that σr, the strategy to be dominated, places on ar for type θr): minimize θr∈Θr ar∈Ar pr(ar) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1. Assuming that π(θr) > 0 for all θr ∈ Θr, this program will return an objective value smaller than |Θr| if and only if σr is strictly dominated, by reasoning similar to that done in Proposition 1. For weak dominance, use the following linear program: maximize ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) = 1. This program will return an objective value greater than 0 if and only if σr is weakly dominated, by reasoning similar to that done in Proposition 1. We now turn to iterated dominance in Bayesian games. Na¨ıvely, one might argue that iterated dominance in Bayesian 95 games always requires an exponential number of steps when a significant fraction of the games pure strategies can be eliminated, because there are exponentially many pure strategies. However, this is not a very strong argument because oftentimes we can eliminate exponentially many pure strategies in one step. For example, if for some type θr ∈ Θr we have, for all ac ∈ Ac, that u(θr, a1 r, ac) > u(θr, a2 r, ac), then any pure strategy for the row player which plays action a2 r for type θr is dominated (by the strategy that plays action a1 r for type θr instead)-and there are exponentially many (|Ar||Θr|−1 ) such strategies. It is therefore conceivable that we need only polynomially many eliminations of collections of a players strategies. However, the following theorem shows that this is not the case, by giving an example where an exponential number of iterations (that is, alternations between the players in eliminating strategies) is required. (We emphasize that this is not a result about computational complexity.) Theorem 7. Even in symmetric 3-player Bayesian games, iterated dominance by pure strategies can require an exponential number of iterations (both for strict and weak dominance), even with only three actions per player. Proof. Let each player i ∈ {1, 2, 3} have n + 1 types θ1 i , θ2 i , . . . , θn+1 i . Let each player i have 3 actions ai, bi, ci, and let the utility function of each player be defined as follows. (In the below, i + 1 and i + 2 are shorthand for i + 1(mod 3) and i + 2(mod 3) when used as player indices. Also, −∞ can be replaced by a sufficiently negative number. Finally, δ and should be chosen to be very small (even compared to 2−(n+1) ), and should be more than twice as large as δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 for si+1 = ci+1 or si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − for si+1 = ai+1 and si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ for si+1 = ai+1 or si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ for all si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ for all si+1, si+2 when j > 1; • ui(θj i ; bi, si+1, si+2) = − for all si+1, si+2 when j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 for all si+1 when j > 1; • ui(θj i ; ci, si+1, si+2) = δ− for all si+1 and si+2 = ci+2 when j > 1. Let the distribution over each players types be given by p(θj i ) = 2−j (with the exception that p(θ2 i ) = 2−2 +2−(n+1) ). We will be interested in eliminating strategies of the following form: play bi for type θ1 i , and play one of bi or ci otherwise. Because the utility function is the same for any type θj i with j > 1, these strategies are effectively defined by the total probability that they place on ci,8 which is t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j where tj i = 1 if player i 8 Note that the strategies are still pure strategies; the probability placed on an action by a strategy here is simply the sum of the probabilities of the types for which the strategy chooses that action. plays ci for type θj i , and 0 otherwise. This probability is different for any two different strategies of the given form, and we have exponentially many different strategies of the given form. For any probability q which can be expressed as t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (with all tj ∈ {0, 1}), let σi(q) denote the (unique) strategy of the given form for player i which places a total probability of q on ci. Any strategy that plays ci for type θ1 i or ai for some type θj i with j > 1 can immediately be eliminated. We will show that, after that, we must eliminate the strategies σi(q) with high q first, slowly working down to those with lower q. Claim 1: If σi+1(q ) and σi+2(q ) have not yet been eliminated, and q < q , then σi(q) cannot yet be eliminated. Proof: First, we show that no strategy σi(q ) can eliminate σi(q). Against σi+1(q ), σi+2(q ), the utility of playing σi(p) is − + p · δ − p · q /2. Thus, when q = 0, it is best to set p as high as possible (and we note that σi+1(0) and σi+2(0) have not been eliminated), but when q > 0, it is best to set p as low as possible because δ < q /2. Thus, whether q > q or q < q , σi(q) will always do strictly better than σi(q ) against some remaining opponent strategies. Hence, no strategy σi(q ) can eliminate σi(q). The only other pure strategies that could dominate σi(q) are strategies that play ai for type θ1 i , and bi or ci for all other types. Let us take such a strategy and suppose that it plays c with probability p. Against σi+1(q ), σi+2(q ) (which have not yet been eliminated), the utility of playing this strategy is −(q )2 /2 − /2 + p · δ − p · q /2. On the other hand, playing σi(q) gives − + q · δ − q · q /2. Because q > q, we have −(q )2 /2 < −q · q /2, and because δ and are small, it follows that σi(q) receives a higher utility. Therefore, no strategy dominates σi(q), proving the claim. Claim 2: If for all q > q, σi+1(q ) and σi+2(q ) have been eliminated, then σi(q) can be eliminated. Proof: Consider the strategy for player i that plays ai for type θ1 i , and bi for all other types (call this strategy σi); we claim σi dominates σi(q). First, if either of the other players k plays ak for θ1 k, then σi performs better than σi(q) (which receives −∞ in some cases). Because the strategies for player k that play ck for type θ1 k, or ak for some type θj k with j > 1, have already been eliminated, all that remains to check is that σi performs better than σi(q) whenever both of the other two players play strategies of the following form: play bk for type θ1 k, and play one of bk or ck otherwise. We note that among these strategies, there are none left that place probability greater than q on ck. Letting qk denote the probability with which player k plays ck, the expected utility of playing σi is −qi+1 · qi+2/2 − /2. On the other hand, the utility of playing σi(q) is − + q · δ − q · qi+2/2. Because qi+1 ≤ q, the difference between these two expressions is at least /2 − δ, which is positive. It follows that σi dominates σi(q). From Claim 2, it follows that all strategies of the form σi(q) will eventually be eliminated. However, Claim 1 shows that we cannot go ahead and eliminate multiple such strategies for one player, unless at least one other player simultaneously keeps up in the eliminated strategies: every time a σi(q) is eliminated such that σi+1(q) and σi+2(q) have not yet been eliminated, we need to eliminate one of the latter two strategies before any σi(q ) with q > q can be eliminated-that is, we need to alternate between players. Because there are exponentially many strategies of the form σi(q), it follows that iterated elimination will require exponentially many iterations to complete. 96 It follows that an efficient algorithm for iterated dominance (strict or weak) by pure strategies in Bayesian games, if it exists, must somehow be able to perform (at least part of) many iterations in a single step of the algorithm (because if each step only performed a single iteration, we would need exponentially many steps). Interestingly, Knuth et al. [11] argue that iterated dominance appears to be an inherently sequential problem (in light of their result that iterated very weak dominance is P-complete, that is, apparently not efficiently parallelizable), suggesting that aggregating many iterations may be difficult. 7. CONCLUSIONS While the Nash equilibrium solution concept is studied more and more intensely in our community, the perhaps more elementary concept of (iterated) dominance has received much less attention. In this paper we studied various computational aspects of this concept. We first studied both strict and weak dominance (not iterated), and showed that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve. We then moved on to iterated dominance. We showed that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance. This allowed us to also show that determining whether there is a path that leads to a unique solution is NP-complete. Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].) Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time. We then studied what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies. First, we showed that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance). Then, we showed that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3). Finally, we studied dominance and iterated dominance in Bayesian games, as an example of a concise representation language for normal form games that is interesting in its own right. We showed that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak dominance). Finally, we showed that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance). There are various avenues for future research. First, there is the open question of whether it is possible to complete iterated dominance in Bayesian games in polynomial time (even though we showed that an exponential number of alternations between the players in eliminating strategies is sometimes required). Second, we can study computational aspects of (iterated) dominance in concise representations of normal form games other than Bayesian games-for example, in graphical games [9] or local-effect/action graph games [12, 2]. (How to efficiently perform iterated very weak dominance has already been studied for partially observable stochastic games [8].) Finally, we can ask whether some of the algorithms we described (such as the one for iterated strict dominance with mixed strategies) can be made faster. 8. REFERENCES [1] Krzysztof R. Apt. Uniform proofs of order independence for various strategy elimination procedures. Contributions to Theoretical Economics, 4(1), 2004. [2] Nivan A. R. Bhat and Kevin Leyton-Brown. Computing Nash equilibria of action-graph games. In UAI, 2004. [3] Ben Blum, Christian R. Shelton, and Daphne Koller. A continuation method for Nash equilibria in structured games. In IJCAI, 2003. [4] Vincent Conitzer and Tuomas Sandholm. Complexity results about Nash equilibria. In IJCAI, pages 765-771, 2003. [5] Drew Fudenberg and Jean Tirole. Game Theory. MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel. On the order of eliminating dominated strategies. Operations Research Letters, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel. The complexity of eliminating dominated strategies. Mathematics of Operation Research, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein, and Shlomo Zilberstein. Dynamic programming for partially observable stochastic games. In AAAI, pages 709-715, 2004. [9] Michael Kearns, Michael Littman, and Satinder Singh. Graphical models for game theory. In UAI, 2001. [10] Leonid Khachiyan. A polynomial algorithm in linear programming. Soviet Math. Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou, and John N Tsitsiklis. A note on strategy elimination in bimatrix games. Operations Research Letters, 7(3):103-107, 1988. [12] Kevin Leyton-Brown and Moshe Tennenholtz. Local-effect games. In IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis, and Aranyak Mehta. Playing large games using simple strategies. In ACM-EC, pages 36-41, 2003. [14] Michael Littman and Peter Stone. A polynomial-time Nash equilibrium algorithm for repeated games. In ACM-EC, pages 48-54, 2003. [15] Leslie M. Marx and Jeroen M. Swinkels. Order independence for iterated weak dominance. Games and Economic Behavior, 18:219-245, 1997. [16] Leslie M. Marx and Jeroen M. Swinkels. Corrigendum, order independence for iterated weak dominance. Games and Economic Behavior, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston, and Jerry R. Green. Microeconomic Theory. Oxford University Press, 1995. [18] Roger Myerson. Game Theory: Analysis of Conflict. Harvard University Press, Cambridge, 1991. [19] Martin J Osborne and Ariel Rubinstein. A Course in Game Theory. MIT Press, 1994. [20] Christos Papadimitriou. Algorithms, games and the Internet. In STOC, pages 749-753, 2001. [21] Ryan Porter, Eugene Nudelman, and Yoav Shoham. Simple search methods for finding a Nash equilibrium. In AAAI, pages 664-669, 2004. 97",
    "original_translation": "Estudiamos varios aspectos computacionales de la resolución de juegos utilizando la dominancia y la dominancia iterada. Primero estudiamos tanto la dominancia estricta como la débil (no iterada), y demostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta se puede hacer en tiempo polinómico utilizando la resolución de un único programa lineal. Luego pasamos a la dominancia iterada. Mostramos que determinar si existe algún camino que elimine una estrategia dada es NP-completo con dominancia débil iterada. Esto nos permite también demostrar que determinar si existe un camino que conduce a una solución única es NP-completo. Ambos resultados se mantienen tanto con como sin dominancia de estrategias mixtas. (Una versión más débil del segundo resultado (solo sin dominancia de estrategias mixtas) ya se conocía [7].) La dominancia estricta iterada, por otro lado, es independiente de la ruta (tanto con como sin dominancia por estrategias mixtas) y, por lo tanto, se puede realizar en tiempo polinómico. Luego estudiamos qué sucede cuando la estrategia dominante puede asignar una probabilidad positiva solo a unas pocas estrategias puras. Primero, demostramos que encontrar la estrategia dominante con el tamaño de soporte mínimo es NP-completo (tanto para dominancia estricta como débil). Luego, demostramos que la dominancia estricta iterada se vuelve dependiente del camino cuando hay un límite en el tamaño del soporte de las estrategias dominantes, y que decidir si una estrategia dada puede ser eliminada por dominancia estricta iterada bajo esta restricción es NP-completo (incluso cuando el límite en el tamaño del soporte es 3). Finalmente, estudiamos juegos bayesianos. Mostramos que, a diferencia de los juegos en forma normal, decidir si una estrategia pura dada está dominada por otra estrategia pura en un juego bayesiano es NP-completo (tanto con dominancia estricta como débil); sin embargo, decidir si una estrategia está dominada por alguna estrategia mixta aún puede hacerse en tiempo polinómico con la resolución de un único programa lineal (tanto con dominancia estricta como débil). Finalmente, demostramos que la dominancia iterada utilizando estrategias puras puede requerir un número exponencial de iteraciones en un juego bayesiano (tanto con dominancia estricta como débil). Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN En sistemas multiagentes con agentes auto-interesados, la acción óptima para un agente puede depender de las acciones tomadas por otros agentes. En tales contextos, los agentes necesitan herramientas de teoría de juegos para decidir racionalmente sobre una acción. La teoría de juegos ofrece varios modelos formales de escenarios estratégicos, el más conocido de los cuales es un juego en forma normal (o matriz), que especifica una utilidad (pago) para cada agente en cada combinación de estrategias que los agentes eligen, así como conceptos de solución que, dados un juego, especifican qué resultados son razonables (bajo varias suposiciones de racionalidad y conocimiento común). Probablemente el concepto de solución más conocido (y ciertamente el más estudiado) es el equilibrio de Nash. Un equilibrio de Nash especifica una estrategia para cada jugador, de tal manera que ningún jugador tiene un incentivo para desviarse (unilateralmente) de la estrategia prescrita. Recientemente, numerosos artículos han estudiado el cálculo de equilibrios de Nash en diferentes contextos [9, 4, 12, 3, 13, 14], y la complejidad de construir un equilibrio de Nash en juegos en forma normal ha sido etiquetada como uno de los dos problemas abiertos más importantes en el límite de P hoy en día [20]. El problema de calcular soluciones de acuerdo con los conceptos de solución quizás más elementales de dominancia y dominancia iterada ha recibido mucha menos atención. (Después de un breve artículo temprano sobre un caso sencillo [11], el principal estudio computacional de estos conceptos ha tenido lugar en realidad en un artículo de la comunidad de teoría de juegos [7].) Una estrategia domina estrictamente a otra estrategia si tiene un rendimiento estrictamente mejor contra todos los vectores de estrategias del oponente, y la domina débilmente si tiene al menos el mismo rendimiento contra todos los vectores de estrategias del oponente, y estrictamente mejor contra al menos uno. La idea es que las estrategias dominadas pueden ser eliminadas de consideración. En la dominancia iterada, la eliminación avanza en rondas y se vuelve más fácil a medida que se eliminan más estrategias: en cualquier ronda dada, la estrategia dominante ya no necesita desempeñarse mejor que o igual que la estrategia dominada contra las estrategias oponentes que fueron eliminadas en rondas anteriores. Calcular soluciones según la dominancia (iterada) es importante por al menos las siguientes razones: 1) puede ser computacionalmente más fácil que calcular (por ejemplo) un equilibrio de Nash (y por lo tanto puede ser útil como paso de preprocesamiento en el cálculo de un equilibrio de Nash), y 2) la dominancia (iterada) requiere una suposición de racionalidad más débil en los jugadores que (por ejemplo) el equilibrio de Nash, y por lo tanto las soluciones derivadas según ella son más propensas a ocurrir. En este artículo, estudiamos algunas preguntas computacionales fundamentales relacionadas con la dominancia y la dominancia iterada, incluyendo qué tan difícil es verificar si una estrategia dada puede ser eliminada por cada una de las variantes de estos conceptos. El resto del documento está organizado de la siguiente manera. En la Sección 2, revisamos brevemente las definiciones y propiedades básicas de los juegos en forma normal, la dominancia estricta y débil, y la dominancia estricta y débil iterada. En las secciones restantes, estudiamos los aspectos computacionales de la dominancia y la dominancia iterada. En la Sección 3, estudiamos la dominancia de un solo disparo (no iterada). En la Sección 4, estudiamos la dominancia iterada. En la Sección 5, estudiamos la dominancia y la dominancia iterada cuando la estrategia dominante solo puede asignar probabilidad a unas pocas estrategias puras. Finalmente, en la Sección 6, estudiamos la dominancia y la dominancia iterada en juegos bayesianos. 2. DEFINICIONES Y PROPIEDADES BÁSICAS En esta sección, revisamos brevemente los juegos en forma normal, así como la dominancia y la dominancia iterada (tanto estricta como débil). Un juego de forma normal de n jugadores se define de la siguiente manera. Definición 1. Un juego en forma normal está dado por un conjunto de jugadores {1, 2, . . . , n}; y, para cada jugador i, un conjunto (finito) de estrategias puras Σi y una función de utilidad ui : Σ1 × Σ2 × . . . × Σn → R (donde ui(σ1, σ2, . . . , σn) denota la utilidad del jugador i cuando cada jugador j juega la acción σj). Las dos principales nociones de dominancia se definen de la siguiente manera. Definición 2. La estrategia σi del jugador se dice que está estrictamente dominada por la estrategia σi del jugador si, para cualquier vector de estrategias σ−i de los otros jugadores, ui(σi, σ−i) > ui(σi, σ−i). La estrategia σi del jugador se dice que está débilmente dominada por la estrategia σi del jugador si, para cualquier vector de estrategias σ−i para los otros jugadores, ui(σi, σ−i) ≥ ui(σi, σ−i), y para al menos un vector de estrategias σ−i para los otros jugadores, ui(σi, σ−i) > ui(σi, σ−i). En esta definición, a veces se permite que la estrategia dominante σi sea una estrategia mixta, es decir, una distribución de probabilidad sobre estrategias puras. En este caso, las utilidades están en dominancia en conjunto. Por ejemplo, a veces se utilizan comprobaciones de dominancia simple como una subrutina en la búsqueda de equilibrios de Nash [21]. Las definiciones son las utilidades esperadas. Hay otras nociones de dominancia, como la dominancia muy débil (en la que no se requiere ninguna desigualdad estricta, por lo que dos estrategias pueden dominarse mutuamente), pero no las estudiaremos aquí. Cuando estamos analizando las relaciones de dominancia para el jugador i, los otros jugadores (−i) pueden ser considerados como un solo jugador. Por lo tanto, en el resto del documento, cuando estudiamos la dominancia de un solo paso (no iterada), nos centraremos sin pérdida de generalidad en juegos de dos jugadores. En juegos de dos jugadores, generalmente nos referiremos a los jugadores como r (fila) y c (columna) en lugar de 1 y 2. En la dominancia iterada, las estrategias dominadas son eliminadas del juego y ya no tienen ningún efecto en las relaciones de dominancia futuras. La dominancia iterada puede eliminar más estrategias que la dominancia, de la siguiente manera. σr puede originalmente no dominar a σr porque este último tiene un mejor desempeño contra σc; pero luego, una vez que σc es eliminado porque es dominado por σc, σr domina a σr, y este último puede ser eliminado. Por ejemplo, en el siguiente juego, se puede eliminar primero a R, después de lo cual D queda dominado. Tanto la dominancia estricta como la dominancia débil pueden ser utilizadas en la definición de la dominancia iterada. Observamos que el proceso de dominancia iterada nunca se ve favorecido al eliminar una estrategia mixta dominada, por la siguiente razón. Si σi le da al jugador i una utilidad mayor que σi contra la estrategia mixta σj para el jugador j = i (y estrategias σ−{i,j} para los otros jugadores), entonces para al menos una estrategia pura σj en la que σj coloque probabilidad positiva, σi debe desempeñarse mejor que σi contra σj (y estrategias σ−{i,j} para los otros jugadores). Por lo tanto, eliminar la estrategia mixta σj no introduce nuevas dominancias. Discusiones más detalladas y ejemplos se pueden encontrar en textos estándar sobre microeconomía o teoría de juegos [17, 5]. Ahora estamos listos para pasar al núcleo de este documento. 3. En esta sección, estudiamos la noción de dominancia de un solo turno (no iterada). Como primera observación, verificar si una estrategia dada está estrictamente (débilmente) dominada por alguna estrategia pura es sencillo, al comprobar, para cada estrategia pura de ese jugador, si la última estrategia tiene un rendimiento estrictamente mejor contra todas las estrategias de los oponentes (al menos igual de bien contra todas las estrategias de los oponentes, y estrictamente 2 La estrategia dominada σi, por supuesto, también puede ser mixta, pero esto no tiene implicaciones técnicas para el documento: cuando estudiamos la dominancia de un solo disparo, preguntamos si una estrategia dada está dominada, y no importa si la estrategia dada es pura o mixta; cuando estudiamos la dominancia iterada, no tiene sentido eliminar las estrategias mixtas, como veremos en breve. 3 Este jugador puede tener un espacio de estrategias muy grande (una estrategia pura para cada vector de estrategias puras de los jugadores que están siendo reemplazados). Sin embargo, esto no resultará en un aumento en el tamaño de nuestra representación, ya que la representación original ya tenía que especificar las utilidades para cada uno de estos vectores. Observamos que una restricción a juegos de dos jugadores no sería sin pérdida de generalidad para la dominancia iterada. Esto se debe a que para la dominancia iterada, necesitamos analizar las estrategias dominadas de cada jugador individual, por lo que no podemos fusionar a ningún jugador. A continuación, mostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta se puede hacer en tiempo polinómico resolviendo un único programa lineal. (Programas lineales similares se han presentado anteriormente [18]; presentamos el resultado aquí por completitud, y porque construiremos sobre los programas lineales dados a continuación en el Teorema 6.) Proposición 1. Dadas las utilidades de los jugadores de fila, un subconjunto Dr de las estrategias puras de los jugadores de fila Σr, y una estrategia distinguida σ∗ r para el jugador de fila, podemos verificar en tiempo polinómico en el tamaño del juego (resolviendo un único programa lineal de tamaño polinómico) si existe alguna estrategia mixta σr, que coloque probabilidad positiva solo en estrategias en Dr y domine a σ∗ r, tanto en dominancia estricta como débil. Prueba. Sea pdr la probabilidad que σr asigna a dr ∈ Dr. Resolveremos un único programa lineal en cada uno de nuestros algoritmos; los programas lineales pueden resolverse en tiempo polinómico [10]. Para la dominancia estricta, la pregunta es si se puede establecer el pdr de manera que para cada estrategia pura del jugador de la columna σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc). Debido a que la desigualdad debe ser estricta, no podemos resolver esto directamente mediante programación lineal. Procedemos de la siguiente manera. Dado que el juego es finito, podemos asumir sin pérdida de generalidad que todas las utilidades son positivas (si no lo son, simplemente añade una constante a todas las utilidades). Resolver el siguiente programa lineal: minimizar dr∈Dr pdr tal que para cualquier σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc). Si σ∗ r es estrictamente dominada por alguna estrategia mixta, este programa lineal tiene una solución con un valor objetivo < 1. (La estrategia dominante es una solución factible con un valor objetivo exactamente igual a 1. Dado que ninguna restricción es vinculante para esta solución, podemos reducir ligeramente una de las probabilidades sin afectar la viabilidad, obteniendo así una solución con un valor objetivo < 1. Además, si este programa lineal tiene una solución con un valor objetivo < 1, existe una estrategia mixta que domina estrictamente a σ∗ r, la cual se puede obtener tomando la solución del PL y agregando la probabilidad restante a cualquier estrategia (debido a que todas las utilidades son positivas, esto sumará al lado izquierdo de cualquier desigualdad, por lo que todas las desigualdades se volverán estrictas). Para la dominancia débil, podemos resolver el siguiente programa lineal: maximizar σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) tal que para cualquier σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1. Si σ∗ r está débilmente dominado por alguna estrategia mixta, entonces esa estrategia mixta es una solución factible para este programa con un valor objetivo > 0, porque para al menos una estrategia σc ∈ Σc tenemos ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0. Por otro lado, si este programa tiene una solución con un valor objetivo > 0, entonces para al menos una estrategia σc ∈ Σc debemos tener ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, y por lo tanto la solución de los programas lineales es una estrategia mixta débilmente dominante. 4. DOMINANCIA ITERADA Ahora pasamos a la dominancia iterada. Es bien sabido que la dominancia estricta iterada es independiente del camino [6, 19], es decir, si eliminamos las estrategias dominadas hasta que ya no queden más estrategias dominadas, al final las estrategias restantes para cada jugador serán las mismas, independientemente del orden en que se eliminen las estrategias. Por lo tanto, para determinar si una estrategia dada puede ser eliminada por dominancia estricta iterada, todo lo que se necesita hacer es eliminar repetidamente las estrategias que son estrictamente dominadas, hasta que no queden más estrategias dominadas. Dado que podemos verificar en tiempo polinómico si alguna estrategia dada está dominada (ya sea que se permita o no la dominancia por estrategias mixtas, como se describe en la Sección 3), todo este procedimiento toma solo tiempo polinómico. En el caso de la dominancia iterada por estrategias puras con dos jugadores, Knuth et al. [11] mejoran ligeramente (aceleran) la implementación directa de este procedimiento al llevar un registro, para cada par ordenado de estrategias de un jugador, del número de estrategias del oponente que impiden que la primera estrategia domine a la segunda. Por lo tanto, el tiempo de ejecución para un juego m × n se reduce de O((m + n)4 ) a O((m + n)3 ). (En realidad, solo estudian dominancia muy débil (para la cual no se requieren desigualdades estrictas), pero el enfoque se puede extender fácilmente). Por el contrario, se sabe que la dominancia débil iterada es dependiente del camino. Por ejemplo, en el siguiente juego, utilizando la dominancia débil iterada podemos eliminar primero M y luego D, o primero R y luego U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Por lo tanto, si bien el procedimiento de eliminar estrategias débilmente dominadas hasta que no queden más estrategias débilmente dominadas puede ciertamente ejecutarse en tiempo polinómico, qué estrategias sobreviven al final depende del orden en el que eliminamos las estrategias dominadas. Investigaremos dos preguntas para la dominancia débil iterada: si una estrategia dada es eliminada en algún camino, y si hay un camino hacia una solución única (una única estrategia pura por jugador). Mostraremos que ambos de estos problemas son computacionalmente difíciles. Definición 3. Dada un juego en forma normal y una estrategia distinguida σ∗ , la ELIMINACIÓN DE ESTRATEGIAS POR DOMINANCIA DÉBIL (IWD-STRATEGY-ELIMINATION) pregunta si existe algún camino de dominancia débil iterada que elimine σ∗ . Dada un juego en forma normal, IWDUNIQUE-SOLUTION pregunta si existe algún camino de dominancia débil iterada que conduzca a una solución única (una estrategia restante por jugador). El siguiente lema muestra un caso especial de juegos en forma normal en el que permitir la dominancia débil a través de estrategias mixtas (además de la dominancia débil a través de estrategias puras) hace 6. Sin embargo, existe una restricción de dominancia débil llamada dominancia débil agradable que es independiente de la ruta [15, 16]. Para obtener una visión general de los resultados de independencia de la ruta, consulte Apt [1]. 90 no ayuda. Demostraremos los resultados de dificultad en este contexto, de modo que se mantengan independientemente de si se permite o no la dominancia por estrategias mixtas. Lema 1. Supongamos que todas las utilidades en un juego están en {0, 1}. Entonces, toda estrategia pura que es débilmente dominada por una estrategia mixta también es débilmente dominada por una estrategia pura. Prueba. Se supone que la estrategia pura σ es débilmente dominada por la estrategia mixta σ∗. Si σ obtiene una utilidad de 1 contra alguna estrategia o vector de estrategias del oponente (si hay más de 2 jugadores), entonces todas las estrategias puras en las que σ∗ asigna una probabilidad positiva también deben obtener una utilidad de 1 contra esa estrategia del oponente (de lo contrario, la utilidad esperada sería menor que 1). Además, al menos una de las estrategias puras en las que σ∗ coloca probabilidad positiva debe obtener una utilidad de 1 contra una estrategia del oponente que σ obtiene 0 (de lo contrario, la desigualdad nunca sería estricta). Se deduce que esta estrategia pura domina débilmente a σ. Ahora estamos listos para demostrar los resultados principales de esta sección. Teorema 1. IWD-STRATEGY-ELIMINATION es NPcompleto, incluso con 2 jugadores, y con 0 y 1 siendo las únicas utilidades que ocurren en la matriz, ya sea que se permita o no la dominancia por estrategias mixtas. Prueba. El problema está en NP porque, dado una secuencia de estrategias a ser eliminadas, podemos verificar fácilmente si esta es una secuencia válida de eliminaciones (incluso cuando se permite la dominancia por estrategias mixtas, utilizando la Proposición 1). Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto no vacío de cláusulas C sobre un conjunto no vacío de variables V, con literales correspondientes L = {+v : v ∈ V} ∪ {−v : v ∈ V}) a la siguiente instancia de ELIMINACIÓN DE ESTRATEGIA IWD. (En esta instancia, especificaremos que ciertas estrategias son ineliminables. Una estrategia σr puede hacerse ineliminable, incluso cuando 0 y 1 son las únicas utilidades permitidas, al agregar otra estrategia σr y otra estrategia del oponente σc, de modo que: 1. σr y σr son las únicas estrategias que le dan al jugador de la fila una utilidad de 1 contra σc. 2. σr y σr siempre le dan al jugador de la fila la misma utilidad. 3. σc es la única estrategia que le da al jugador de la columna una utilidad de 1 contra σr, pero de lo contrario σc siempre le da al jugador de la columna una utilidad de 0. Esto hace imposible eliminar cualquiera de estas tres estrategias. No especificaremos explícitamente las estrategias adicionales para hacer la prueba más legible. En esta demostración, designaremos las estrategias del jugador de fila como s, y las estrategias del jugador de columna como t, para mejorar la legibilidad. Que se dé el conjunto de estrategias puras de los jugadores de fila como sigue. Para cada variable v ∈ V, el jugador de la fila tiene estrategias correspondientes s1 +v, s2 +v, s1 −v, s2 −v. Además, el jugador de la fila tiene las siguientes 2 estrategias: s1 0 y s2 0, donde s2 0 = σ∗ r (es decir, es la estrategia que buscamos eliminar). Finalmente, para cada cláusula c ∈ C, el jugador de la fila tiene estrategias correspondientes s1 c (ineliminables) y s2 c. Dado el conjunto de estrategias puras de los jugadores de la columna de la siguiente manera. Para cada variable v ∈ V, el jugador de la columna tiene una estrategia correspondiente tv. Para cada cláusula c ∈ C, el jugador de la columna tiene una estrategia correspondiente tc, y además, para cada literal l ∈ L que ocurre en c, una estrategia tc,l. Para cada variable v ∈ V, el jugador de la columna tiene estrategias correspondientes t+v, t−v (ambas no eliminables). Finalmente, el jugador de la columna tiene tres estrategias adicionales: t1 0 (ineliminable), t2 0 y t1. La función de utilidad para el jugador de la fila se da de la siguiente manera: • ur(s1 +v, tv) = 0 para todo v ∈ V ; • ur(s2 +v, tv) = 1 para todo v ∈ V ; • ur(s1 −v, tv) = 1 para todo v ∈ V ; • ur(s2 −v, tv) = 0 para todo v ∈ V ; • ur(s1 +v, t1) = 1 para todo v ∈ V ; • ur(s2 +v, t1) = 0 para todo v ∈ V ; • ur(s1 −v, t1) = 0 para todo v ∈ V ; • ur(s2 −v, t1) = 1 para todo v ∈ V ; • ur(sb +v, t+v) = 1 para todo v ∈ V y b ∈ {1, 2}; • ur(sb −v, t−v) = 1 para todo v ∈ V y b ∈ {1, 2}; • ur(sl, t) = 0 de lo contrario para todo l ∈ L y t ∈ S2; • ur(s1 0, tc) = 0 para todo c ∈ C; • ur(s2 0, tc) = 1 para todo c ∈ C; • ur(sb 0, t1 0) = 1 para todo b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 de lo contrario para todo b ∈ {1, 2} y t ∈ S2; • ur(sb c, t) = 0 de lo contrario para todo c ∈ C y b ∈ {1, 2}; y la utilidad del jugador de la fila es 0 en todos los demás casos. La función de utilidad para el jugador de la columna se da de la siguiente manera: • uc(s, tv) = 0 para todo v ∈ V y s ∈ S1; • uc(s, t1) = 0 para todo s ∈ S1; • uc(s2 l , tc) = 1 para todo c ∈ C y l ∈ L donde l ∈ c (literal l ocurre en la cláusula c); • uc(s2 l2 , tc,l1 ) = 1 para todo c ∈ C y l1, l2 ∈ L, l1 = l2 donde l2 ∈ c; • uc(s1 c, tc) = 1 para todo c ∈ C; • uc(s2 c, tc) = 0 para todo c ∈ C; • uc(sb c, tc,l) = 1 para todo c ∈ C, l ∈ L, y b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 en otro caso para todo c ∈ C y l ∈ L; y la utilidad del jugador de la columna es 0 en todos los demás casos. Ahora demostramos que las dos instancias son equivalentes. Primero, supongamos que hay una solución para la instancia de satisfactibilidad: es decir, una asignación de valores de verdad a las variables en V tal que todas las cláusulas se satisfacen. Entonces, considera la siguiente secuencia de eliminaciones en nuestro juego: 1. Para cada variable v que se establezca como verdadera en la asignación, elimine tv (lo que da como resultado una utilidad de 0 para el jugador de la columna en todas partes). 2. Entonces, para cada variable v que se establezca como verdadera en la asignación, elimine s2 +v usando s1 +v (lo cual es posible porque tv ha sido eliminado, y porque t1 no ha sido eliminado (aún)). 3. Ahora elimina t1 (lo cual da como resultado una utilidad de 0 para el jugador de la columna). 4. A continuación, para cada variable v que se establezca como falso en la asignación, elimine s2 −v usando s1 −v (lo cual es posible porque t1 ha sido eliminado, y porque tv no ha sido eliminado (aún)). 5. Para cada cláusula c que tenga la variable correspondiente a uno de sus literales positivos l = +v establecido como verdadero en la asignación, elimine tc utilizando tc,l (lo cual es posible porque s2 l ha sido eliminado, y s2 c no ha sido eliminado (aún)). 6. Para cada cláusula c en la que la variable correspondiente a uno de sus literales negativos l = −v se establece en falso en la asignación, elimine tc utilizando tc,l 91 (lo cual es posible porque s2 l ha sido eliminado, y s2 c no ha sido eliminado (aún)). 7. Debido a que la tarea cumplió con la fórmula, todos los tc han sido eliminados ahora. Por lo tanto, podemos eliminar s2 0 = σ∗ r usando s1 0. Se deduce que hay una solución para la instancia IWD-STRATEGY-ELIMINATION. Ahora supongamos que hay una solución para la instancia IWD-STRATEGYELIMINATION. Por el Lema 1, podemos asumir que todas las dominancias son por estrategias puras. Primero observamos que solo s1 0 puede eliminar s2 0 = σ∗ r, porque es la única otra estrategia que le da al jugador de la fila una utilidad de 1 contra t1 0, y t1 0 es ineliminable. Sin embargo, dado que s2 0 tiene un mejor rendimiento que s1 0 contra las estrategias de tc, se deduce que todas las estrategias de tc deben ser eliminadas. Para cada c ∈ C, la estrategia tc solo puede ser eliminada por una de las estrategias tc,l (con el mismo c), ya que estas son las únicas otras estrategias que le dan al jugador de la columna una utilidad de 1 contra s1 c, y s1 c es ineliminable. Pero, para que algún tc,l elimine tc, primero se debe eliminar s2 l. Solo s1 l puede eliminar s2 l, porque es la única otra estrategia que le otorga al jugador de la fila una utilidad de 1 contra tl, y tl es ineliminable. A continuación mostramos que para cada v ∈ V solo se puede eliminar uno de s2 +v, s2 −v. Esto se debe a que para que s1 +v elimine s2 +v, tv debe haber sido eliminado y t1, no (por lo tanto, tv debe ser eliminado antes que t1); pero para que s1 -v elimine s2 -v, t1 debe haber sido eliminado y tv, no (por lo tanto, t1 debe ser eliminado antes que tv). Por lo tanto, establezca v en verdadero si s2 + v es eliminado, y en falso de lo contrario. Debido a lo anterior, para cada cláusula c, uno de los s2 con l ∈ c debe ser eliminado, por lo que se deduce que esta es una asignación satisfactoria para la instancia de satisfactibilidad. Usando el Teorema 1, ahora es (relativamente) fácil demostrar que IWD-UNIQUE-SOLUTION también es NP-completo bajo las mismas restricciones. Teorema 2. IWD-UNIQUE-SOLUTION es NP-completo, incluso con 2 jugadores, y con 0 y 1 siendo las únicas utilidades que ocurren en la matriz, ya sea que se permita o no la dominancia por estrategias mixtas. Prueba. Nuevamente, el problema está en NP porque podemos elegir de manera no determinista la secuencia de eliminaciones y verificar si es correcta. Para demostrar la NP-dificultad, reducimos una instancia arbitraria de IWD-STRATEGY-ELIMINATION a la siguiente instancia de IWD-UNIQUE-SOLUTION. Que todas las estrategias de cada jugador de la instancia original formen parte de la nueva instancia, y que las utilidades resultantes de los jugadores al jugar un par de estas estrategias sean las mismas. Añadimos tres estrategias adicionales σ1 r , σ2 r , σ3 r para el jugador de fila, y tres estrategias adicionales σ1 c , σ2 c , σ3 c para el jugador de columna. Que las utilidades adicionales sean las siguientes: • ur(σr, σj c) = 1 para todo σr /∈ {σ1 r , σ2 r , σ3 r } y j ∈ {2, 3}; • ur(σi r, σc) = 1 para todo i ∈ {1, 2, 3} y σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 para todo i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • y la utilidad de los jugadores de fila es 0 en todos los demás casos que involucren una nueva estrategia. • uc(σ3 r , σc) = 1 para todo σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 para todo j ∈ {2, 3} (σ∗ r es la estrategia a ser eliminada en la instancia original); • uc(σi r, σ1 c ) = 1 para todo i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • y la utilidad de los jugadores de columna es 0 en todos los demás casos que involucren una nueva estrategia. Procedemos a demostrar que las dos instancias son equivalentes. Primero supongamos que existe una solución para la instancia original de IWDSTRATEGY-ELIMINATION. Luego, realiza la misma secuencia de eliminaciones para eliminar σ∗ r en la nueva instancia IWD-UNIQUE-SOLUTION. (Esto es posible porque en cualquier etapa, cualquier dominancia débil para el jugador de fila en la instancia original sigue siendo una dominancia débil en la nueva instancia, ya que las utilidades de las dos estrategias para el jugador de fila son las mismas cuando el jugador de columna juega una de las nuevas estrategias; y lo mismo ocurre para el jugador de columna). Una vez que σ∗ r sea eliminado, permita que σ1 c elimine a σ2 c. (Se desempeña mejor contra σ2 r.) Entonces, dejemos que σ1 r elimine todas las demás estrategias restantes para el jugador de la fila. (Siempre tiene un mejor desempeño contra σ1 c o σ3 c.) Finalmente, σ1 c es la mejor respuesta única contra σ1 r entre las estrategias restantes de los jugadores de columna, así que permitamos que elimine todas las demás estrategias restantes para el jugador de columna. Por lo tanto, existe una solución para la instancia IWD-UNIQUE-SOLUTION. Ahora supongamos que existe una solución para la instancia IWD-UNIQUESOLUTION. Por el Lema 1, podemos asumir que todas las dominancias son por estrategias puras. Mostraremos que ninguna de las nuevas estrategias (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) puede eliminar a otra estrategia, ni ser eliminada antes de que σ∗ r sea eliminada. Por lo tanto, debe haber una secuencia de eliminaciones que termine con la eliminación de σ∗ r, la cual no involucre ninguna de las nuevas estrategias y, por lo tanto, sea una secuencia válida de eliminaciones en el juego original (porque todas las estrategias originales tienen el mismo rendimiento contra cada nueva estrategia). Ahora demostramos que esto es cierto agotando todas las posibilidades para la primera eliminación antes de que se elimine σ∗ r que implica una nueva estrategia. Ninguno de los σi r puede ser eliminado por un σr /∈ {σ1 r , σ2 r , σ3 r}, porque los σi r tienen un mejor desempeño contra σ1 c. σ1 r no puede eliminar ninguna otra estrategia, porque siempre tiene un desempeño inferior contra σ2 c. σ2 r y σ3 r son equivalentes desde la perspectiva de los jugadores de fila (y por lo tanto no pueden eliminarse entre sí), y no pueden eliminar ninguna otra estrategia porque siempre tienen un desempeño inferior contra σ3 c. Ninguno de los σj c puede ser eliminado por un σc /∈ {σ1 c , σ2 c , σ3 c}, porque los σj c siempre tienen un mejor desempeño contra σ1 r o σ2 r. σ1 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ∗ r o σ3 r. σ2 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ2 r o σ3 r. σ3 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ1 r o σ3 r. Por lo tanto, existe una solución para la instancia IWDSTRATEGY-ELIMINATION. Una versión ligeramente más débil de la parte del Teorema 2 que concierne la dominancia solo por estrategias puras es el resultado principal de Gilboa et al. [7]. (Además de no demostrar el resultado para la dominancia por estrategias mixtas, el resultado original era más débil porque requería utilidades {0, 1, 2, 3, 4, 5, 6, 7, 8} en lugar de solo {0, 1} (y debido a esto, nuestro Lema 1 no se puede aplicar para obtener el resultado para estrategias mixtas).) 5. DOMINANCIA (ITERADA) USANDO ESTRATEGIAS MIXTAS CON SOPORTES PEQUEÑOS Al demostrar que una estrategia es dominada por una estrategia mixta, hay varias razones para preferir exhibir una estrategia dominante que coloque probabilidad positiva en la menor cantidad posible de estrategias puras. Primero, esto reducirá el número de bits necesarios para especificar la estrategia dominante (y así la prueba de dominancia se puede comunicar más rápido): si la estrategia mixta dominante coloca probabilidad positiva en solo k estrategias, entonces se puede especificar usando k números reales para las probabilidades, más k log m (donde m es el número de estrategias para el jugador en consideración) bits para indicar qué estrategias se utilizan. Segundo, la prueba de dominancia será más clara: para una estrategia mixta dominante, es típicamente (siempre en el caso de dominancia estricta) posible distribuir parte de la probabilidad en cualquier estrategia pura no utilizada y aún así tener una estrategia dominante, pero esto oscurece cuáles estrategias puras son las clave para hacer que la estrategia mixta sea dominante. Tercero, debido a que el argumento para eliminar la estrategia dominada es más simple y fácil de entender, es más probable que sea aceptado. En cuarto lugar, el nivel de neutralidad al riesgo requerido para que el argumento funcione se reduce, al menos en el caso extremo donde se puede exhibir la dominancia de una única estrategia pura (no se requiere neutralidad al riesgo aquí). Esto motiva el siguiente problema. Definición 4 (CONJUNTO DOMINANTE MÍNIMO). Se nos dan las utilidades de los jugadores de fila de un juego en forma normal, una estrategia distinguida σ∗ para el jugador de fila, una especificación de si la dominancia debe ser estricta o débil, y un número k. Se nos pregunta si existe una estrategia mixta σ para el jugador de fila que coloque probabilidad positiva en como máximo k estrategias puras, y domine a σ∗ en el sentido requerido. Lamentablemente, este problema es NP-completo. Teorema 3. El problema del CONJUNTO DOMINANTE MÍNIMO es NP-completo, tanto para dominancia estricta como para dominancia débil. Prueba. El problema está en NP porque podemos elegir de manera no determinista un conjunto de a lo sumo k estrategias para dar probabilidad positiva, y decidir si podemos dominar a σ∗ con estas k estrategias como se describe en la Proposición 1. Para demostrar la NP-dificultad, reducimos una instancia arbitraria de COBERTURA-DE-CONJUNTOS (dado un conjunto S, subconjuntos S1, S2, . . . , Sr, y un número t, ¿puede S ser cubierto por a lo sumo t de los subconjuntos?) a la siguiente instancia de CONJUNTO-DOMINANTE-MÍNIMO. Para cada elemento s ∈ S, hay una estrategia pura σs para el jugador de la columna. Para cada subconjunto Si, hay una estrategia pura σSi para el jugador de la fila. Finalmente, está la distinguida estrategia pura σ∗ para el jugador de la fila. Las utilidades de los jugadores de la fila son las siguientes: ur(σSi , σs) = t + 1 si s ∈ Si; ur(σSi , σs) = 0 si s /∈ Si; ur(σ∗ , σs) = 1 para todo s ∈ S. Finalmente, dejamos que k = t. Ahora procedemos a demostrar que las dos instancias son equivalentes. Primero supongamos que existe una solución para la instancia de COBERTURA-CONJUNTO. Sin pérdida de generalidad, podemos asumir que hay exactamente k subconjuntos en la cobertura. Entonces, para cada Si que esté en la cobertura, dejemos que la estrategia dominante σ coloque exactamente 1 k de probabilidad en la estrategia pura correspondiente σSi. Ahora, si dejamos que n(s) sea el número de subconjuntos en la cobertura que contienen a s (observamos que n(s) ≥ 1), entonces para cada estrategia σs del jugador de la columna, la utilidad esperada de los jugadores de la fila al jugar σ cuando el jugador de la columna está jugando σs es u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs). Entonces, σ domina estrictamente (y por lo tanto también débilmente) a σ∗, y existe una solución para la instancia del conjunto de dominación mínimo. Ahora supongamos que existe una solución para la instancia de CONJUNTO-DOMINANTE-MÍNIMO. Considera las estrategias puras (a lo sumo k) de la forma σSi en las que la estrategia mixta dominante σ asigna probabilidad positiva, y deja que T sea la colección de los subconjuntos correspondientes Si. Sostenemos que T es una cubierta. Supongamos que hay algún s ∈ S que no está en ninguno de los subconjuntos en T. Entonces, si el jugador de la columna juega σs, el jugador de la fila (cuando juega σ) siempre recibirá una utilidad de 0, en contraposición a la utilidad de 1 que el jugador de la fila recibiría al jugar σ∗, contradiciendo el hecho de que σ domina a σ∗ (ya sea esta dominancia débil o estricta). Se deduce que existe una solución para la instancia de COBERTURA-DE-CONJUNTOS. Por otro lado, si requerimos que la estrategia dominante solo coloque probabilidad positiva en un número muy pequeño de estrategias puras, entonces una vez más resulta fácil verificar si una estrategia está dominada. Específicamente, para determinar si la estrategia σ∗ del jugador está dominada por una estrategia que coloca probabilidad positiva solo en k estrategias puras, simplemente podemos verificar, para cada subconjunto de k de las estrategias puras del jugador, si hay una estrategia que coloca probabilidad positiva solo en esas k estrategias y domina a σ∗, utilizando la Proposición 1. Esto solo requiere O(|Σi|k) comprobaciones. Por lo tanto, si k es una constante, esto constituye un algoritmo de tiempo polinómico. Una pregunta natural que surge a continuación es si la dominancia estricta iterada sigue siendo computacionalmente fácil cuando se requiere que las estrategias dominantes coloquen una probabilidad positiva en como máximo k estrategias puras, donde k es una constante pequeña. (Ya hemos demostrado en la Sección 4 que la dominancia débil iterada es difícil incluso cuando k = 1, es decir, solo se permite la dominancia por estrategias puras). Por supuesto, si la dominancia estricta iterada fuera independiente del camino bajo esta restricción, la facilidad computacional seguiría como lo hizo en la Sección 4. Sin embargo, resulta que esto no es así. Observación 1. Si restringimos las estrategias dominantes para asignar probabilidad positiva a lo sumo a dos estrategias puras, la dominancia estricta iterada se vuelve dependiente del camino. Prueba. Considera el siguiente juego: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Sea (i, j) el resultado en el que el jugador de la fila juega en la fila i y el jugador de la columna juega en la columna j. Dado que (1, 1), (2, 2) y (4, 3) son todos equilibrios de Nash, ninguna de las estrategias puras de los jugadores de columna será eliminada, al igual que las filas 1, 2 y 4. Ahora observamos que la aleatorización uniforme entre las filas 1 y 2 domina a la fila 3, y la aleatorización uniforme entre las filas 3 y 4 domina a la fila 5. Sin embargo, si eliminamos la fila 3 primero, se vuelve imposible dominar la fila 5 sin aleatorizar al menos 3 estrategias puras. De hecho, la dominancia estricta iterada resulta ser difícil incluso cuando k = 3. Teorema 4. Si restringimos las estrategias dominantes para colocar una probabilidad positiva en como máximo tres estrategias puras, se vuelve NP-completo decidir si una estrategia dada puede ser eliminada usando dominancia estricta iterada. 93 Prueba. El problema está en NP porque, dado una secuencia de estrategias a ser eliminadas, podemos verificar en tiempo polinómico si esta es una secuencia válida de eliminaciones (para cualquier estrategia a ser eliminada, podemos verificar, para cada subconjunto de tres otras estrategias, si hay una estrategia que coloca probabilidad positiva solo en estas tres estrategias que domina a la estrategia a ser eliminada, utilizando la Proposición 1). Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto no vacío de cláusulas C sobre un conjunto no vacío de variables V, con literales correspondientes L = {+v : v ∈ V} ∪ {−v : v ∈ V}) al siguiente juego de dos jugadores. Para cada variable v ∈ V, el jugador de la fila tiene estrategias s+v, s−v, s1 v, s2 v, s3 v, s4 v, y el jugador de la columna tiene estrategias t1 v, t2 v, t3 v, t4 v. Para cada cláusula c ∈ C, el jugador de la fila tiene una estrategia sc, y el jugador de la columna tiene una estrategia tc, así como, para cada literal l que ocurre en c, una estrategia adicional tl c. El jugador de la fila tiene dos estrategias adicionales s1 y s2. (s2 es la estrategia que estamos buscando eliminar). Finalmente, el jugador de la columna tiene una estrategia adicional t1. La función de utilidad para el jugador de la fila se da de la siguiente manera (donde ε es algún número suficientemente pequeño): • ur(s+v, tj v) = 4 si j ∈ {1, 2}, para todo v ∈ V; • ur(s+v, tj v) = 1 si j ∈ {3, 4}, para todo v ∈ V; • ur(s−v, tj v) = 1 si j ∈ {1, 2}, para todo v ∈ V; • ur(s−v, tj v) = 4 si j ∈ {3, 4}, para todo v ∈ V; • ur(s+v, t) = ur(s−v, t) = 0 para todo v ∈ V y t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 para todo v ∈ V e i ∈ {1, 2, 3, 4}; • ur(si v, t) = para todo v ∈ V, i ∈ {1, 2, 3, 4}, y t = ti v; • ur(sc, tc) = 2 para todo c ∈ C; • ur(sc, t) = 0 para todo c ∈ C y t = tc; • ur(s1, t1) = 1 + ε; • ur(s1, t) = para todo t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 para todo c ∈ C; • ur(s2, t) = 0 para todo t /∈ {t1} ∪ {tc : c ∈ C}. La función de utilidad para el jugador de la columna se da de la siguiente manera: • uc(si v, ti v) = 1 para todo v ∈ V e i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 para todo v ∈ V, i ∈ {1, 2, 3, 4}, y s = si v; • uc(sc, tc) = 1 para todo c ∈ C; • uc(sl, tc) = 1 para todo c ∈ C y l ∈ L que ocurre en c; • uc(s, tc) = 0 para todo c ∈ C y s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + para todo c ∈ C; • uc(sl, tl c) = 1 + para todo c ∈ C y l = l que ocurre en c; • uc(s, tl c) = para todo c ∈ C y s /∈ {sc} ∪ {sl : l ∈ c, l = l}; • uc(s2, t1) = 1; • uc(s, t1) = 0 para todo s = s2. Ahora demostramos que las dos instancias son equivalentes. Primero, supongamos que hay una solución para la instancia de satisfactibilidad. Entonces, considera la siguiente secuencia de eliminaciones en nuestro juego: 1. Para cada variable v que se establezca como verdadera en la asignación satisfactoria, elimine s+v con la estrategia mixta σr que coloca probabilidad 1/3 en s−v, probabilidad 1/3 en s1 v y probabilidad 1/3 en s2 v. (La utilidad esperada de jugar σr contra t1 v o t2 v es 14/3 > 4; contra t3 v o t4 v, es 4/3 > 1; y contra cualquier otra cosa es 2/3 > 0. Por lo tanto, la dominancia es válida. De manera similar, para cada variable v que se establezca como falso en la asignación satisfactoria, elimine s−v con la estrategia mixta σr que coloca probabilidad 1/3 en s+v, probabilidad 1/3 en s3 v, y probabilidad 1/3 en s4 v. (La utilidad esperada de jugar σr contra t1 v o t2 v es 4/3 > 1; contra t3 v o t4 v, es 14/3 > 4; y contra cualquier otra cosa es 2/3 > 0. Por lo tanto, la dominancia es válida. Para cada c ∈ C, elimine tc con cualquier tl c para el cual l se haya establecido como verdadero en la asignación satisfactoria. (Esta es una dominancia válida porque tl c funciona mejor que tc contra cualquier estrategia que no sea sl, y eliminamos sl en el paso 1 o en el paso 2.) 4. Finalmente, elimina s2 con s1. (Esta es una dominancia válida porque s1 tiene un mejor rendimiento que s2 contra cualquier estrategia que no esté en {tc : c ∈ C}, la cual eliminamos en el paso 3.) Por lo tanto, hay un camino de eliminación que elimina s2. Ahora, supongamos que hay un camino de eliminación que elimina s2. La estrategia que eventualmente domina a s2 debe colocar la mayor parte de su probabilidad en s1, ya que s1 es la única otra estrategia que se desempeña bien contra t1, la cual no puede ser eliminada antes que s2. Sin embargo, s1 tiene un rendimiento significativamente peor que s2 contra cualquier estrategia tc con c ∈ C, por lo que se deduce que todas estas estrategias deben ser eliminadas primero. Cada estrategia tc solo puede ser eliminada por una estrategia que coloque la mayor parte de su peso en las estrategias correspondientes tl c con l ∈ c, ya que son las únicas otras estrategias que funcionan bien contra sc, las cuales no pueden ser eliminadas antes de tc. Sin embargo, cada estrategia tl c funciona significativamente peor que tc contra sl, por lo que se deduce que para cada cláusula c, para uno de los literales l que aparecen en ella, sl debe ser eliminado primero. Ahora, las estrategias de la forma tj v nunca serán eliminadas porque son las únicas mejores respuestas a las estrategias correspondientes sj v (que, a su vez, son las mejores respuestas a las tj v correspondientes). Como resultado, si la estrategia s+v (respectivamente, s−v) es eliminada, entonces su estrategia opuesta s−v (respectivamente, s+v) ya no puede ser eliminada, por la siguiente razón. No hay otra estrategia pura restante que obtenga una utilidad significativa contra más de una de las estrategias t1 v, t2 v, t3 v, t4 v, pero s−v (respectivamente, s+v) obtiene una utilidad significativa contra las 4, y por lo tanto no puede ser dominada por una estrategia mixta que coloque una probabilidad positiva en como máximo 3 estrategias. Se deduce que para cada v ∈ V, a lo sumo una de las estrategias s+v, s−v es eliminada, de tal manera que para cada cláusula c, para uno de los literales l que aparece en ella, sl debe ser eliminada. Pero luego, establecer todas las literales l de manera que sl sea eliminado a verdadero constituye una solución a la instancia de satisfactibilidad. En la siguiente sección, regresamos al escenario donde no hay restricción en el número de estrategias puras en las que una estrategia mixta dominante puede colocar probabilidad positiva. 6. DOMINANCIA (ITERADA) EN JUEGOS BAYESIANOS Hasta ahora, nos hemos enfocado en juegos de forma normal que están representados de manera plana (es decir, cada entrada de la matriz se da explícitamente). Sin embargo, para muchos juegos, la representación plana es demasiado grande para escribirse explícitamente, y en su lugar, se necesita utilizar alguna representación que aproveche la estructura del juego. Los juegos bayesianos, además de ser de interés por sí mismos, pueden considerarse como una representación estructurada útil de los juegos en forma normal, y los estudiaremos en esta sección. En un juego bayesiano, cada jugador recibe primero información de preferencia de manera privada (el tipo de jugador) de una distribución, la cual determina la utilidad que ese jugador recibe por cada resultado del juego (es decir, el vector de acciones jugadas en el juego). Después de recibir este tipo, el jugador realiza una acción basada en él. Definición 7. Un juego bayesiano está dado por un conjunto de jugadores {1, 2, . . . , n}; y, para cada jugador i, un conjunto (finito) de acciones Ai, un espacio de tipos (finito) Θi con una distribución de probabilidad πi sobre él, y una función de utilidad ui : Θi × A1 × A2 × . . . × An → R (donde ui(θi, a1, a2, . . . , an) denota la utilidad del jugador i cuando su tipo es θi y cada jugador j juega la acción aj). Una estrategia pura en un juego bayesiano es una asignación de tipos a acciones, σi: Θi → Ai, donde σi(θi) denota la acción que el jugador i elige para el tipo θi. Cualquier vector de estrategias puras en un juego bayesiano define una utilidad (esperada) para cada jugador, y por lo tanto podemos traducir un juego bayesiano en un juego en forma normal. En este juego en forma normal, las nociones de dominancia y dominancia iterada se definen como antes. Sin embargo, la representación en forma normal del juego es exponencialmente más grande que la representación bayesiana, ya que cada jugador i tiene |Ai||Θi| estrategias puras distintas. Por lo tanto, cualquier algoritmo para juegos bayesianos que dependa de expandir el juego a su forma normal requerirá tiempo exponencial. Específicamente, nuestros resultados de facilidad para juegos en forma normal no se transfieren directamente a esta configuración. De hecho, resulta que verificar si una estrategia está dominada por una estrategia pura es difícil en juegos bayesianos. Teorema 5. En un juego bayesiano, es NP-completo decidir si una estrategia pura dada σr : Θr → Ar está dominada por alguna otra estrategia pura (tanto para la dominancia estricta como débil), incluso cuando la distribución de los jugadores de fila sobre los tipos es uniforme. Prueba. El problema está en NP porque es fácil verificar si una estrategia dominante candidata es realmente una estrategia dominante. Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto de cláusulas C utilizando variables de V) al siguiente juego bayesiano. Que el conjunto de acciones de los jugadores de la fila sea Ar = {t, f, 0} y que el conjunto de acciones de los jugadores de la columna sea Ac = {ac : c ∈ C}. Que el conjunto de tipos de jugadores de fila sea Θr = {θv : v ∈ V}, con una distribución πr que es uniforme. Que la función de utilidad de los jugadores de la fila sea la siguiente: • ur(θv, 0, ac) = 0 para todo v ∈ V y c ∈ C; • ur(θv, b, ac) = |V | para todo v ∈ V, c ∈ C y b ∈ {t, f} tal que establecer v como b satisface c; • ur(θv, b, ac) = −1 para todo v ∈ V, c ∈ C y b ∈ {t, f} tal que establecer v como b no satisface c. En general, un jugador también puede recibir una señal sobre las preferencias de los otros jugadores, pero aquí no nos ocuparemos de eso. Que la estrategia pura que se va a dominar sea aquella que juega 0 para cada tipo. Mostramos que la estrategia está dominada por una estrategia pura si y solo si hay una solución a la instancia de satisfactibilidad. Primero, supongamos que hay una solución para la instancia de satisfactibilidad. Entonces, sea σd r dado por: σd r (θv) = t si v se establece como verdadero en la solución de la instancia de satisfactibilidad, y σd r (θv) = f en caso contrario. Entonces, en contra de cualquier acción ac realizada por el jugador de la columna, existe al menos un tipo θv tal que o bien +v ∈ c y σd r (θv) = t, o bien −v ∈ c y σd r (θv) = f. Por lo tanto, la utilidad esperada de los jugadores de la fila contra la acción ac es al menos |V| |V| − |V|−1 |V| = 1 |V| > 0. Entonces, σd r es una estrategia dominante. Ahora, supongamos que existe una estrategia pura dominante σd r. Esta estrategia dominante debe jugar t o f al menos para un tipo. Por lo tanto, en contra de cualquier ac por el jugador de la columna, debe haber al menos algún tipo θv para el cual ur(θv, σd r (θv), ac) > 0. Es decir, debe haber al menos una variable v tal que al establecer v en σd r (θv) satisfaga c. Pero entonces, al establecer cada v en σd r (θv) deben satisfacerse todas las cláusulas. Entonces, existe una asignación satisfactoria. Sin embargo, resulta que podemos modificar los programas lineales de la Proposición 1 para obtener un algoritmo de tiempo polinómico para verificar si una estrategia está dominada por una estrategia mixta en juegos bayesianos. Teorema 6. En un juego bayesiano, se puede decidir en tiempo polinómico si una estrategia dada (posiblemente mixta) σr está dominada por alguna otra estrategia mixta, utilizando programación lineal (tanto para dominancia estricta como débil). Prueba. Podemos modificar los programas lineales presentados en la Proposición 1 de la siguiente manera. Para la dominancia estricta, asumiendo nuevamente sin pérdida de generalidad que todas las utilidades en el juego son positivas, utilice el siguiente programa lineal (en el cual pσr r (θr, ar) es la probabilidad de que σr, la estrategia a ser dominada, coloque en ar para el tipo θr): minimizar θr∈Θr ar∈Ar pr(ar) tal que para cualquier ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); para cualquier θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1. Suponiendo que π(θr) > 0 para todo θr ∈ Θr, este programa devolverá un valor objetivo menor que |Θr| si y solo si σr está estrictamente dominado, mediante un razonamiento similar al realizado en la Proposición 1. Para la dominancia débil, utiliza el siguiente programa lineal: maximizar ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) tal que para cualquier ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); para cualquier θr ∈ Θr, ar∈Ar pr(θr, ar) = 1. Este programa devolverá un valor objetivo mayor que 0 si y solo si σr está débilmente dominado, mediante un razonamiento similar al realizado en la Proposición 1. Ahora pasamos al dominio iterado en juegos bayesianos. Ingenuamente, uno podría argumentar que la dominancia iterada en juegos bayesianos de 95 siempre requiere un número exponencial de pasos cuando se puede eliminar una fracción significativa de las estrategias puras de los juegos, ya que hay un número exponencial de estrategias puras. Sin embargo, este no es un argumento muy sólido porque muchas veces podemos eliminar exponencialmente muchas estrategias puras en un solo paso. Por ejemplo, si para algún tipo θr ∈ Θr tenemos, para todo ac ∈ Ac, que u(θr, a1 r, ac) > u(θr, a2 r, ac), entonces cualquier estrategia pura para el jugador de la fila que juega la acción a2 r para el tipo θr está dominada (por la estrategia que juega la acción a1 r para el tipo θr en su lugar) - y hay exponencialmente muchas (|Ar||Θr|−1) tales estrategias. Por lo tanto, es concebible que solo necesitemos un número polinomial de eliminaciones de colecciones de estrategias de un jugador. Sin embargo, el siguiente teorema muestra que este no es el caso, al dar un ejemplo donde se requiere un número exponencial de iteraciones (es decir, alternancias entre los jugadores en la eliminación de estrategias). (Enfatizamos que este no es un resultado sobre complejidad computacional). Teorema 7. Incluso en juegos bayesianos simétricos de 3 jugadores, la dominancia iterada por estrategias puras puede requerir un número exponencial de iteraciones (tanto para la dominancia estricta como débil), incluso con solo tres acciones por jugador. Prueba. Que cada jugador i ∈ {1, 2, 3} tenga n + 1 tipos θ1 i , θ2 i , . . . , θn+1 i. Que cada jugador i tenga 3 acciones ai, bi, ci, y que la función de utilidad de cada jugador esté definida de la siguiente manera. (En lo siguiente, i + 1 e i + 2 son abreviaturas de i + 1 (mod 3) e i + 2 (mod 3) cuando se utilizan como índices de jugador. Además, −∞ puede ser reemplazado por un número suficientemente negativo. Finalmente, δ y deberían elegirse muy pequeños (incluso en comparación con 2−(n+1)), y deberían ser más del doble de grandes que δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 para si+1 = ci+1 o si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − para si+1 = ai+1 y si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ para si+1 = ai+1 o si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ para todos los si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ para todos los si+1, si+2 cuando j > 1; • ui(θj i ; bi, si+1, si+2) = − para todos los si+1, si+2 cuando j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 para todos los si+1 cuando j > 1; • ui(θj i ; ci, si+1, si+2) = δ− para todos los si+1 y si+2 = ci+2 cuando j > 1. Que la distribución sobre los tipos de cada jugador esté dada por p(θj i ) = 2−j (con la excepción de que p(θ2 i ) = 2−2 +2−(n+1) ). Estaremos interesados en eliminar estrategias de la siguiente forma: jugar bi para el tipo θ1 i, y jugar bi o ci de lo contrario. Dado que la función de utilidad es la misma para cualquier tipo θj i con j > 1, estas estrategias están efectivamente definidas por la probabilidad total que asignan a ci,8, que es t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j donde tj i = 1 si el jugador i 8. Observa que las estrategias siguen siendo estrategias puras; la probabilidad asignada a una acción por una estrategia aquí es simplemente la suma de las probabilidades de los tipos para los cuales la estrategia elige esa acción. juega ci para el tipo θj i, y 0 en caso contrario. Esta probabilidad es diferente para cualquier par de estrategias diferentes de la forma dada, y tenemos exponencialmente muchas estrategias diferentes de la forma dada. Para cualquier probabilidad q que pueda expresarse como t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (con todos los tj ∈ {0, 1}), dejemos que σi(q) denote la estrategia (única) de la forma dada para el jugador i que coloca una probabilidad total de q en ci. Cualquier estrategia que juegue ci para el tipo θ1 i o ai para algún tipo θj i con j > 1 puede ser eliminada inmediatamente. Mostraremos que, después de eso, debemos eliminar primero las estrategias σi(q) con q alto, trabajando lentamente hacia abajo hasta aquellas con q más bajo. Reclamo 1: Si σi+1(q) y σi+2(q) aún no han sido eliminados, y q < q, entonces σi(q) aún no puede ser eliminado. Prueba: Primero, demostramos que ninguna estrategia σi(q) puede eliminar a σi(q). Contra σi+1(q), σi+2(q), la utilidad de jugar σi(p) es − + p · δ − p · q /2. Por lo tanto, cuando q = 0, es mejor establecer p lo más alto posible (y observamos que σi+1(0) y σi+2(0) no han sido eliminados), pero cuando q > 0, es mejor establecer p lo más bajo posible porque δ < q /2. Por lo tanto, ya sea que q > q o q < q, σi(q) siempre será estrictamente mejor que σi(q) contra algunas estrategias restantes de los oponentes. Por lo tanto, ninguna estrategia σi(q) puede eliminar a σi(q). Las únicas otras estrategias puras que podrían dominar a σi(q) son estrategias que juegan ai para el tipo θ1 i, y bi o ci para todos los demás tipos. Tomemos tal estrategia y supongamos que juega c con probabilidad p. Contra σi+1(q), σi+2(q) (que aún no han sido eliminadas), la utilidad de jugar esta estrategia es −(q)2 /2 − /2 + p · δ − p · q /2. Por otro lado, jugar σi(q) da como resultado − + q · δ − q · q /2. Dado que q > q, tenemos −(q )2 /2 < −q · q /2, y dado que δ y son pequeños, se deduce que σi(q) recibe una utilidad mayor. Por lo tanto, ninguna estrategia domina a σi(q), lo que demuestra la afirmación. Afirmación 2: Si para todo q > q, σi+1(q) y σi+2(q) han sido eliminados, entonces σi(q) puede ser eliminado. Prueba: Considera la estrategia para el jugador i que juega ai para el tipo θ1 i, y bi para todos los demás tipos (llamemos a esta estrategia σi); afirmamos que σi domina a σi(q). Primero, si alguno de los otros jugadores k juega ak para θ1 k, entonces σi se desempeña mejor que σi(q) (que recibe −∞ en algunos casos). Dado que las estrategias para el jugador k que juega ck para el tipo θ1 k, o ak para algún tipo θj k con j > 1, ya han sido eliminadas, todo lo que queda por comprobar es que σi sea mejor que σi(q) siempre que los otros dos jugadores jueguen estrategias de la siguiente forma: jugar bk para el tipo θ1 k, y jugar uno de bk o ck en caso contrario. Observamos que entre estas estrategias, no queda ninguna que coloque una probabilidad mayor que q en ck. Si dejamos que qk denote la probabilidad con la que el jugador k juega ck, la utilidad esperada de jugar σi es −qi+1 · qi+2/2 − /2. Por otro lado, la utilidad de jugar σi(q) es − + q · δ − q · qi+2/2. Dado que qi+1 ≤ q, la diferencia entre estas dos expresiones es al menos /2 − δ, la cual es positiva. Se deduce que σi domina a σi(q). A partir de la Reclamación 2, se deduce que todas las estrategias de la forma σi(q) serán eliminadas eventualmente. Sin embargo, la Reclamación 1 muestra que no podemos avanzar y eliminar múltiples estrategias de este tipo para un jugador, a menos que al menos otro jugador mantenga simultáneamente las estrategias eliminadas: cada vez que se elimina un σi(q) tal que σi+1(q) y σi+2(q) aún no han sido eliminados, necesitamos eliminar una de las dos últimas estrategias antes de que se pueda eliminar cualquier σi(q) con q > q, es decir, necesitamos alternar entre jugadores. Dado que hay exponencialmente muchas estrategias de la forma σi(q), se sigue que la eliminación iterada requerirá exponencialmente muchas iteraciones para completarse. Por lo tanto, un algoritmo eficiente para la dominancia iterada (estricta o débil) por estrategias puras en juegos bayesianos, si existe, debe ser capaz de realizar (al menos parte de) muchas iteraciones en un solo paso del algoritmo (porque si cada paso solo realizara una sola iteración, necesitaríamos exponencialmente muchos pasos). Interesantemente, Knuth et al. [11] argumentan que la dominancia iterada parece ser un problema inherentemente secuencial (a la luz de su resultado de que la dominancia muy débil iterada es P-completa, es decir, aparentemente no paralelizable de manera eficiente), lo que sugiere que la agregación de muchas iteraciones puede ser difícil. 7. CONCLUSIONES Aunque el concepto de equilibrio de Nash se estudia cada vez más intensamente en nuestra comunidad, el concepto quizás más elemental de dominancia (iterada) ha recibido mucha menos atención. En este artículo estudiamos varios aspectos computacionales de este concepto. Primero estudiamos tanto la dominancia estricta como la débil (no iterada), y demostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta puede hacerse en tiempo polinómico utilizando la resolución de un único programa lineal. Luego pasamos a la dominancia iterada. Mostramos que determinar si existe algún camino que elimine una estrategia dada es NP-completo con dominancia débil iterada. Esto nos permitió también demostrar que determinar si existe un camino que conduzca a una solución única es NP-completo. Ambos resultados se mantienen tanto con como sin dominancia de estrategias mixtas. (Una versión más débil del segundo resultado (solo sin dominancia de estrategias mixtas) ya se conocía [7].) La dominancia estricta iterada, por otro lado, es independiente del camino (tanto con como sin dominancia por estrategias mixtas) y, por lo tanto, puede realizarse en tiempo polinómico. Luego estudiamos qué sucede cuando la estrategia dominante puede asignar una probabilidad positiva solo a unas pocas estrategias puras. Primero, demostramos que encontrar la estrategia dominante con el tamaño de soporte mínimo es NP-completo (tanto para dominancia estricta como débil). Luego, demostramos que la dominancia estricta iterada se vuelve dependiente del camino cuando hay un límite en el tamaño del soporte de las estrategias dominantes, y que decidir si una estrategia dada puede ser eliminada por dominancia estricta iterada bajo esta restricción es NP-completo (incluso cuando el límite en el tamaño del soporte es 3). Finalmente, estudiamos la dominancia y la dominancia iterada en juegos bayesianos, como un ejemplo de un lenguaje de representación conciso para juegos en forma normal que es interesante por sí mismo. Mostramos que, a diferencia de los juegos en forma normal, decidir si una estrategia pura dada está dominada por otra estrategia pura en un juego bayesiano es NP-completo (tanto con dominancia estricta como débil); sin embargo, decidir si una estrategia está dominada por alguna estrategia mixta aún se puede hacer en tiempo polinómico con la resolución de un único programa lineal (tanto con dominancia estricta como débil). Finalmente, demostramos que la dominancia iterada utilizando estrategias puras puede requerir un número exponencial de iteraciones en un juego bayesiano (tanto con dominancia estricta como débil). Hay varias vías para investigaciones futuras. Primero, está la pregunta abierta de si es posible completar la dominancia iterada en juegos bayesianos en tiempo polinómico (aunque demostramos que a veces se requiere un número exponencial de alternancias entre los jugadores para eliminar estrategias). Segundo, podemos estudiar los aspectos computacionales del dominio (iterado) en representaciones concisas de juegos de forma normal que no sean juegos bayesianos, por ejemplo, en juegos gráficos o juegos de grafo de efecto local/acción. (Ya se ha estudiado cómo realizar eficientemente el dominio muy débil iterado en juegos estocásticos parcialmente observables). Finalmente, podemos preguntarnos si algunos de los algoritmos que describimos (como el de dominancia estricta iterada con estrategias mixtas) pueden ser optimizados para ser más rápidos. 8. REFERENCIAS [1] Krzysztof R. Apt. Pruebas uniformes de independencia del orden para varios procedimientos de eliminación de estrategias. Contribuciones a la Economía Teórica, 4(1), 2004. [2] Nivan A. R. Bhat y Kevin Leyton-Brown. Calculando equilibrios de Nash de juegos de gráficos de acción. En UAI, 2004. [3] Ben Blum, Christian R. Shelton y Daphne Koller. Un método de continuación para equilibrios de Nash en juegos estructurados. En IJCAI, 2003. [4] Vincent Conitzer y Tuomas Sandholm. Resultados de complejidad sobre equilibrios de Nash. En IJCAI, páginas 765-771, 2003. [5] Drew Fudenberg y Jean Tirole. Teoría de juegos. MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, y Eitan Zemel. En el orden de eliminar estrategias dominadas. Cartas de Investigación Operativa, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai y Eitan Zemel. La complejidad de eliminar estrategias dominadas. Matemáticas de la Investigación de Operaciones, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein y Shlomo Zilberstein. Programación dinámica para juegos estocásticos parcialmente observables. En AAAI, páginas 709-715, 2004. [9] Michael Kearns, Michael Littman y Satinder Singh. Modelos gráficos para teoría de juegos. En UAI, 2001. [10] Leonid Khachiyan. Un algoritmo polinómico en programación lineal. Matemática soviética. Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou y John N Tsitsiklis. Una nota sobre la eliminación de estrategias en juegos bimatrix. Cartas de Investigación Operativa, 7(3):103-107, 1988. [12] Kevin Leyton-Brown y Moshe Tennenholtz. Juegos de efecto local. En IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis y Aranyak Mehta. Jugando juegos grandes utilizando estrategias simples. En ACM-EC, páginas 36-41, 2003. [14] Michael Littman y Peter Stone. Un algoritmo de equilibrio de Nash de tiempo polinómico para juegos repetidos. En ACM-EC, páginas 48-54, 2003. [15] Leslie M. Marx y Jeroen M. Swinkels. Independencia del orden para la dominancia débil iterada. Juegos y Comportamiento Económico, 18:219-245, 1997. [16] Leslie M. Marx y Jeroen M. Swinkels. Corrección, independencia del orden para la dominancia débil iterada. Juegos y Comportamiento Económico, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston y Jerry R. Green. Teoría microeconómica. Oxford University Press, 1995. [18] Roger Myerson.\nEditorial de la Universidad de Oxford, 1995. [18] Roger Myerson. Teoría de juegos: Análisis de conflictos. Harvard University Press, Cambridge, 1991. [19] Martin J Osborne y Ariel Rubinstein. Un curso de Teoría de Juegos. MIT Press, 1994. [20] Christos Papadimitriou. \n\nMIT Press, 1994. [20] Christos Papadimitriou. Algoritmos, juegos e Internet. En STOC, páginas 749-753, 2001. [21] Ryan Porter, Eugene Nudelman y Yoav Shoham. Métodos de búsqueda simples para encontrar un equilibrio de Nash. En AAAI, páginas 664-669, 2004. 97",
    "original_sentences": [
        "Complexity of (Iterated) Dominance∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using dominance and iterated dominance.",
        "We first study both strict and weak dominance (not iterated), and show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
        "We then move on to iterated dominance.",
        "We show that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
        "This allows us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
        "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
        "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
        "We then study what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
        "First, we show that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
        "Then, we show that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
        "Finally, we study Bayesian games.",
        "We show that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak ∗ This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858, and a Sloan Fellowship. dominance).",
        "Finally, we show that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
        "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
        "INTRODUCTION In multiagent systems with self-interested agents, the optimal action for one agent may depend on the actions taken by other agents.",
        "In such settings, the agents require tools from game theory to rationally decide on an action.",
        "Game theory offers various formal models of strategic settings-the best-known of which is a game in normal (or matrix) form, specifying a utility (payoff) for each agent for each combination of strategies that the agents choose-as well as solution concepts, which, given a game, specify which outcomes are reasonable (under various assumptions of rationality and common knowledge).",
        "Probably the best-known (and certainly the most-studied) solution concept is that of Nash equilibrium.",
        "A Nash equilibrium specifies a strategy for each player, in such a way that no player has an incentive to (unilaterally) deviate from the prescribed strategy.",
        "Recently, numerous papers have studied computing Nash equilibria in various settings [9, 4, 12, 3, 13, 14], and the complexity of constructing a Nash equilibrium in normal form games has been labeled one of the two most important open problems on the boundary of P today [20].",
        "The problem of computing solutions according to the perhaps more elementary solution concepts of dominance and iterated dominance has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the game theory community [7].1 ) A strategy strictly dominates another strategy if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one.",
        "The idea is that dominated strategies can be eliminated from consideration.",
        "In iterated dominance, the elimination proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating strategy no longer needs to perform better than or as well as the dominated strategy against opponent strategies that were eliminated in earlier rounds.",
        "Computing solutions according to (iterated) dominance is important for at least the following reasons: 1) it can be computationally easier than computing (for instance) a Nash equilibrium (and therefore it can be useful as a preprocessing step in computing a Nash equilibrium), and 2) (iterated) dominance requires a weaker rationality assumption on the players than (for instance) Nash equilibrium, and therefore solutions derived according to it are more likely to occur.",
        "In this paper, we study some fundamental computational questions concerning dominance and iterated dominance, including how hard it is to check whether a given strategy can be eliminated by each of the variants of these notions.",
        "The rest of the paper is organized as follows.",
        "In Section 2, we briefly review definitions and basic properties of normal form games, strict and weak dominance, and iterated strict and weak dominance.",
        "In the remaining sections, we study computational aspects of dominance and iterated dominance.",
        "In Section 3, we study one-shot (not iterated) dominance.",
        "In Section 4, we study iterated dominance.",
        "In Section 5, we study dominance and iterated dominance when the dominating strategy can only place probability on a few pure strategies.",
        "Finally, in Section 6, we study dominance and iterated dominance in Bayesian games. 2.",
        "DEFINITIONS AND BASIC PROPERTIES In this section, we briefly review normal form games, as well as dominance and iterated dominance (both strict and weak).",
        "An n-player normal form game is defined as follows.",
        "Definition 1.",
        "A normal form game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of pure strategies Σi and a utility function ui : Σ1 × Σ2 × . . . × Σn → R (where ui(σ1, σ2, . . . , σn) denotes player is utility when each player j plays action σj).",
        "The two main notions of dominance are defined as follows.",
        "Definition 2.",
        "Player is strategy σi is said to be strictly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
        "Player is strategy σi is said to be weakly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) ≥ ui(σi, σ−i), and for at least one vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
        "In this definition, it is sometimes allowed for the dominating strategy σi to be a mixed strategy, that is, a probability distribution over pure strategies.",
        "In this case, the utilities in dominance altogether.",
        "For example, simple dominance checks are sometimes used as a subroutine in searching for Nash equilibria [21]. the definition are the expected utilities.2 There are other notions of dominance, such as very weak dominance (in which no strict inequality is required, so two strategies can dominate each other), but we will not study them here.",
        "When we are looking at the dominance relations for player i, the other players (−i) can be thought of as a single player.3 Therefore, in the rest of the paper, when we study one-shot (not iterated) dominance, we will focus without loss of generality on two-player games.4 In two-player games, we will generally refer to the players as r (row) and c (column) rather than 1 and 2.",
        "In iterated dominance, dominated strategies are removed from the game, and no longer have any effect on future dominance relations.",
        "Iterated dominance can eliminate more strategies than dominance, as follows. σr may originally not dominate σr because the latter performs better against σc; but then, once σc is removed because it is dominated by σc, σr dominates σr, and the latter can be removed.",
        "For example, in the following game, R can be removed first, after which D is dominated.",
        "L R U 1, 1 0, 0 D 0, 1 1, 0 Either strict or weak dominance can be used in the definition of iterated dominance.",
        "We note that the process of iterated dominance is never helped by removing a dominated mixed strategy, for the following reason.",
        "If σi gives player i a higher utility than σi against mixed strategy σj for player j = i (and strategies σ−{i,j} for the other players), then for at least one pure strategy σj that σj places positive probability on, σi must perform better than σi against σj (and strategies σ−{i,j} for the other players).",
        "Thus, removing the mixed strategy σj does not introduce any new dominances.",
        "More detailed discussions and examples can be found in standard texts on microeconomics or game theory [17, 5].",
        "We are now ready to move on to the core of this paper. 3.",
        "DOMINANCE (NOT ITERATED) In this section, we study the notion of one-shot (not iterated) dominance.",
        "As a first observation, checking whether a given strategy is strictly (weakly) dominated by some pure strategy is straightforward, by checking, for every pure strategy for that player, whether the latter strategy performs strictly better against all the opponents strategies (at least as well against all the opponents strategies, and strictly 2 The dominated strategy σi is, of course, also allowed to be mixed, but this has no technical implications for the paper: when we study one-shot dominance, we ask whether a given strategy is dominated, and it does not matter whether the given strategy is pure or mixed; when we study iterated dominance, there is no use in eliminating mixed strategies, as we will see shortly. 3 This player may have a very large strategy space (one pure strategy for every vector of pure strategies for the players that are being replaced).",
        "Nevertheless, this will not result in an increase in our representation size, because the original representation already had to specify utilities for each of these vectors. 4 We note that a restriction to two-player games would not be without loss of generality for iterated dominance.",
        "This is because for iterated dominance, we need to look at the dominated strategies of each individual player, so we cannot merge any players. 89 better against at least one).5 Next, we show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time by solving a single linear program. (Similar linear programs have been given before [18]; we present the result here for completeness, and because we will build on the linear programs given below in Theorem 6.)",
        "Proposition 1.",
        "Given the row players utilities, a subset Dr of the row players pure strategies Σr, and a distinguished strategy σ∗ r for the row player, we can check in time polynomial in the size of the game (by solving a single linear program of polynomial size) whether there exists some mixed strategy σr, that places positive probability only on strategies in Dr and dominates σ∗ r , both for strict and for weak dominance.",
        "Proof.",
        "Let pdr be the probability that σr places on dr ∈ Dr. We will solve a single linear program in each of our algorithms; linear programs can be solved in polynomial time [10].",
        "For strict dominance, the question is whether the pdr can be set so that for every pure strategy for the column player σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc).",
        "Because the inequality must be strict, we cannot solve this directly by linear programming.",
        "We proceed as follows.",
        "Because the game is finite, we may assume without loss of generality that all utilities are positive (if not, simply add a constant to all utilities.)",
        "Solve the following linear program: minimize dr∈Dr pdr such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc).",
        "If σ∗ r is strictly dominated by some mixed strategy, this linear program has a solution with objective value < 1. (The dominating strategy is a feasible solution with objective value exactly 1.",
        "Because no constraint is binding for this solution, we can reduce one of the probabilities slightly without affecting feasibility, thereby obtaining a solution with objective value < 1.)",
        "Moreover, if this linear program has a solution with objective value < 1, there is a mixed strategy strictly dominating σ∗ r , which can be obtained by taking the LP solution and adding the remaining probability to any strategy (because all the utilities are positive, this will add to the left side of any inequality, so all inequalities will become strict).",
        "For weak dominance, we can solve the following linear program: maximize σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1.",
        "If σ∗ r is weakly dominated by some mixed strategy, then that mixed strategy is a feasible solution to this program with objective value > 0, because for at least one strategy σc ∈ Σc we have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0.",
        "On the other hand, if this program has a solution with objective value > 0, then for at least one strategy σc ∈ Σc we 5 Recall that the assumption of a single opponent (that is, the assumption of two players) is without loss of generality for one-shot dominance. must have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, and thus the linear programs solution is a weakly dominating mixed strategy. 4.",
        "ITERATED DOMINANCE We now move on to iterated dominance.",
        "It is well-known that iterated strict dominance is path-independent [6, 19]that is, if we remove dominated strategies until no more dominated strategies remain, in the end the remaining strategies for each player will be the same, regardless of the order in which strategies are removed.",
        "Because of this, to see whether a given strategy can be eliminated by iterated strict dominance, all that needs to be done is to repeatedly remove strategies that are strictly dominated, until no more dominated strategies remain.",
        "Because we can check in polynomial time whether any given strategy is dominated (whether or not dominance by mixed strategies is allowed, as described in Section 3), this whole procedure takes only polynomial time.",
        "In the case of iterated dominance by pure strategies with two players, Knuth et al. [11] slightly improve on (speed up) the straightforward implementation of this procedure by keeping track of, for each ordered pair of strategies for a player, the number of opponent strategies that prevent the first strategy from dominating the second.",
        "Hereby the runtime for an m × n game is reduced from O((m + n)4 ) to O((m + n)3 ). (Actually, they only study very weak dominance (for which no strict inequalities are required), but the approach is easily extended.)",
        "In contrast, iterated weak dominance is known to be pathdependent.6 For example, in the following game, using iterated weak dominance we can eliminate M first, and then D, or R first, and then U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Therefore, while the procedure of removing weakly dominated strategies until no more weakly dominated strategies remain can certainly be executed in polynomial time, which strategies survive in the end depends on the order in which we remove the dominated strategies.",
        "We will investigate two questions for iterated weak dominance: whether a given strategy is eliminated in some path, and whether there is a path to a unique solution (one pure strategy left per player).",
        "We will show that both of these problems are computationally hard.",
        "Definition 3.",
        "Given a game in normal form and a distinguished strategy σ∗ , IWD-STRATEGY-ELIMINATION asks whether there is some path of iterated weak dominance that eliminates σ∗ .",
        "Given a game in normal form, IWDUNIQUE-SOLUTION asks whether there is some path of iterated weak dominance that leads to a unique solution (one strategy left per player).",
        "The following lemma shows a special case of normal form games in which allowing for weak dominance by mixed strategies (in addition to weak dominance by pure strategies) does 6 There is, however, a restriction of weak dominance called nice weak dominance which is path-independent [15, 16].",
        "For an overview of path-independence results, see Apt [1]. 90 not help.",
        "We will prove the hardness results in this setting, so that they will hold whether or not dominance by mixed strategies is allowed.",
        "Lemma 1.",
        "Suppose that all the utilities in a game are in {0, 1}.",
        "Then every pure strategy that is weakly dominated by a mixed strategy is also weakly dominated by a pure strategy.",
        "Proof.",
        "Suppose pure strategy σ is weakly dominated by mixed strategy σ∗ .",
        "If σ gets a utility of 1 against some opponent strategy (or vector of opponent strategies if there are more than 2 players), then all the pure strategies that σ∗ places positive probability on must also get a utility of 1 against that opponent strategy (or else the expected utility would be smaller than 1).",
        "Moreover, at least one of the pure strategies that σ∗ places positive probability on must get a utility of 1 against an opponent strategy that σ gets 0 against (or else the inequality would never be strict).",
        "It follows that this pure strategy weakly dominates σ.",
        "We are now ready to prove the main results of this section.",
        "Theorem 1.",
        "IWD-STRATEGY-ELIMINATION is NPcomplete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
        "Proof.",
        "The problem is in NP because given a sequence of strategies to be eliminated, we can easily check whether this is a valid sequence of eliminations (even when dominance by mixed strategies is allowed, using Proposition 1).",
        "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following IWD-STRATEGY-ELIMINATION instance. (In this instance, we will specify that certain strategies are uneliminable.",
        "A strategy σr can be made uneliminable, even when 0 and 1 are the only allowed utilities, by adding another strategy σr and another opponent strategy σc, so that: 1. σr and σr are the only strategies that give the row player a utility of 1 against σc. 2. σr and σr always give the row player the same utility. 3. σc is the only strategy that gives the column player a utility of 1 against σr, but otherwise σc always gives the column player utility 0.",
        "This makes it impossible to eliminate any of these three strategies.",
        "We will not explicitly specify the additional strategies to make the proof more legible.)",
        "In this proof, we will denote row player strategies by s, and column player strategies by t, to improve legibility.",
        "Let the row players pure strategy set be given as follows.",
        "For every variable v ∈ V , the row player has corresponding strategies s1 +v, s2 +v, s1 −v, s2 −v.",
        "Additionally, the row player has the following 2 strategies: s1 0 and s2 0, where s2 0 = σ∗ r (that is, it is the strategy we seek to eliminate).",
        "Finally, for every clause c ∈ C, the row player has corresponding strategies s1 c (uneliminable) and s2 c. Let the column players pure strategy set be given as follows.",
        "For every variable v ∈ V , the column player has a corresponding strategy tv.",
        "For every clause c ∈ C, the column player has a corresponding strategy tc, and additionally, for every literal l ∈ L that occurs in c, a strategy tc,l.",
        "For every variable v ∈ V , the column player has corresponding strategies t+v, t−v (both uneliminable).",
        "Finally, the column player has three additional strategies: t1 0 (uneliminable), t2 0, and t1.",
        "The utility function for the row player is given as follows: • ur(s1 +v, tv) = 0 for all v ∈ V ; • ur(s2 +v, tv) = 1 for all v ∈ V ; • ur(s1 −v, tv) = 1 for all v ∈ V ; • ur(s2 −v, tv) = 0 for all v ∈ V ; • ur(s1 +v, t1) = 1 for all v ∈ V ; • ur(s2 +v, t1) = 0 for all v ∈ V ; • ur(s1 −v, t1) = 0 for all v ∈ V ; • ur(s2 −v, t1) = 1 for all v ∈ V ; • ur(sb +v, t+v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sb −v, t−v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sl, t) = 0 otherwise for all l ∈ L and t ∈ S2; • ur(s1 0, tc) = 0 for all c ∈ C; • ur(s2 0, tc) = 1 for all c ∈ C; • ur(sb 0, t1 0) = 1 for all b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 otherwise for all b ∈ {1, 2} and t ∈ S2; • ur(sb c, t) = 0 otherwise for all c ∈ C and b ∈ {1, 2}; and the row players utility is 0 in every other case.",
        "The utility function for the column player is given as follows: • uc(s, tv) = 0 for all v ∈ V and s ∈ S1; • uc(s, t1) = 0 for all s ∈ S1; • uc(s2 l , tc) = 1 for all c ∈ C and l ∈ L where l ∈ c (literal l occurs in clause c); • uc(s2 l2 , tc,l1 ) = 1 for all c ∈ C and l1, l2 ∈ L, l1 = l2 where l2 ∈ c; • uc(s1 c, tc) = 1 for all c ∈ C; • uc(s2 c, tc) = 0 for all c ∈ C; • uc(sb c, tc,l) = 1 for all c ∈ C, l ∈ L, and b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 otherwise for all c ∈ C and l ∈ L; and the column players utility is 0 in every other case.",
        "We now show that the two instances are equivalent.",
        "First, suppose there is a solution to the satisfiability instance: that is, a truth-value assignment to the variables in V such that all clauses are satisfied.",
        "Then, consider the following sequence of eliminations in our game: 1.",
        "For every variable v that is set to true in the assignment, eliminate tv (which gives the column player utility 0 everywhere). 2.",
        "Then, for every variable v that is set to true in the assignment, eliminate s2 +v using s1 +v (which is possible because tv has been eliminated, and because t1 has not been eliminated (yet)). 3.",
        "Now eliminate t1 (which gives the column player utility 0 everywhere). 4.",
        "Next, for every variable v that is set to false in the assignment, eliminate s2 −v using s1 −v (which is possible because t1 has been eliminated, and because tv has not been eliminated (yet)). 5.",
        "For every clause c which has the variable corresponding to one of its positive literals l = +v set to true in the assignment, eliminate tc using tc,l (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 6.",
        "For every clause c which has the variable corresponding to one of its negative literals l = −v set to false in the assignment, eliminate tc using tc,l 91 (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 7.",
        "Because the assignment satisfied the formula, all the tc have now been eliminated.",
        "Thus, we can eliminate s2 0 = σ∗ r using s1 0.",
        "It follows that there is a solution to the IWD-STRATEGY-ELIMINATION instance.",
        "Now suppose there is a solution to the IWD-STRATEGYELIMINATION instance.",
        "By Lemma 1, we can assume that all the dominances are by pure strategies.",
        "We first observe that only s1 0 can eliminate s2 0 = σ∗ r , because it is the only other strategy that gets the row player a utility of 1 against t1 0, and t1 0 is uneliminable.",
        "However, because s2 0 performs better than s1 0 against the tc strategies, it follows that all of the tc strategies must be eliminated.",
        "For each c ∈ C, the strategy tc can only be eliminated by one of the strategies tc,l (with the same c), because these are the only other strategies that get the column player a utility of 1 against s1 c, and s1 c is uneliminable.",
        "But, in order for some tc,l to eliminate tc, s2 l must be eliminated first.",
        "Only s1 l can eliminate s2 l , because it is the only other strategy that gets the row player a utility of 1 against tl, and tl is uneliminable.",
        "We next show that for every v ∈ V only one of s2 +v, s2 −v can be eliminated.",
        "This is because in order for s1 +v to eliminate s2 +v, tv needs to have been eliminated and t1, not (so tv must be eliminated before t1); but in order for s1 −v to eliminate s2 −v, t1 needs to have been eliminated and tv, not (so t1 must be eliminated before tv).",
        "So, set v to true if s2 +v is eliminated, and to false otherwise Because by the above, for every clause c, one of the s2 l with l ∈ c must be eliminated, it follows that this is a satisfying assignment to the satisfiability instance.",
        "Using Theorem 1, it is now (relatively) easy to show that IWD-UNIQUE-SOLUTION is also NP-complete under the same restrictions.",
        "Theorem 2.",
        "IWD-UNIQUE-SOLUTION is NP-complete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
        "Proof.",
        "Again, the problem is in NP because we can nondeterministically choose the sequence of eliminations and verify whether it is correct.",
        "To show NP-hardness, we reduce an arbitrary IWD-STRATEGY-ELIMINATION instance to the following IWD-UNIQUE-SOLUTION instance.",
        "Let all the strategies for each player from the original instance remain part of the new instance, and let the utilities resulting from the players playing a pair of these strategies be the same.",
        "We add three additional strategies σ1 r , σ2 r , σ3 r for the row player, and three additional strategies σ1 c , σ2 c , σ3 c for the column player.",
        "Let the additional utilities be as follows: • ur(σr, σj c) = 1 for all σr /∈ {σ1 r , σ2 r , σ3 r } and j ∈ {2, 3}; • ur(σi r, σc) = 1 for all i ∈ {1, 2, 3} and σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 for all i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • and the row players utility is 0 in all other cases involving a new strategy. • uc(σ3 r , σc) = 1 for all σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 for all j ∈ {2, 3} (σ∗ r is the strategy to be eliminated in the original instance); • uc(σi r, σ1 c ) = 1 for all i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • and the column players utility is 0 in all other cases involving a new strategy.",
        "We proceed to show that the two instances are equivalent.",
        "First suppose there exists a solution to the original IWDSTRATEGY-ELIMINATION instance.",
        "Then, perform the same sequence of eliminations to eliminate σ∗ r in the new IWD-UNIQUE-SOLUTION instance. (This is possible because at any stage, any weak dominance for the row player in the original instance is still a weak dominance in the new instance, because the two strategies utilities for the row player are the same when the column player plays one of the new strategies; and the same is true for the column player.)",
        "Once σ∗ r is eliminated, let σ1 c eliminate σ2 c . (It performs better against σ2 r .)",
        "Then, let σ1 r eliminate all the other remaining strategies for the row player. (It always performs better against either σ1 c or σ3 c .)",
        "Finally, σ1 c is the unique best response against σ1 r among the column players remaining strategies, so let it eliminate all the other remaining strategies for the column player.",
        "Thus, there exists a solution to the IWD-UNIQUE-SOLUTION instance.",
        "Now suppose there exists a solution to the IWD-UNIQUESOLUTION instance.",
        "By Lemma 1, we can assume that all the dominances are by pure strategies.",
        "We will show that none of the new strategies (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) can either eliminate another strategy, or be eliminated before σ∗ r is eliminated.",
        "Thus, there must be a sequence of eliminations ending in the elimination of σ∗ r , which does not involve any of the new strategies, and is therefore a valid sequence of eliminations in the original game (because all original strategies perform the same against each new strategy).",
        "We now show that this is true by exhausting all possibilities for the first elimination before σ∗ r is eliminated that involves a new strategy.",
        "None of the σi r can be eliminated by a σr /∈ {σ1 r , σ2 r , σ3 r }, because the σi r perform better against σ1 c . σ1 r cannot eliminate any other strategy, because it always performs poorer against σ2 c . σ2 r and σ3 r are equivalent from the row players perspective (and thus cannot eliminate each other), and cannot eliminate any other strategy because they always perform poorer against σ3 c .",
        "None of the σj c can be eliminated by a σc /∈ {σ1 c , σ2 c , σ3 c }, because the σj c always perform better against either σ1 r or σ2 r . σ1 c cannot eliminate any other strategy, because it always performs poorer against either σ∗ r or σ3 r . σ2 c cannot eliminate any other strategy, because it always performs poorer against σ2 r or σ3 r . σ3 c cannot eliminate any other strategy, because it always performs poorer against σ1 r or σ3 r .",
        "Thus, there exists a solution to the IWDSTRATEGY-ELIMINATION instance.",
        "A slightly weaker version of the part of Theorem 2 concerning dominance by pure strategies only is the main result of Gilboa et al. [7]. (Besides not proving the result for dominance by mixed strategies, the original result was weaker because it required utilities {0, 1, 2, 3, 4, 5, 6, 7, 8} rather than just {0, 1} (and because of this, our Lemma 1 cannot be applied to it to get the result for mixed strategies).) 5. (ITERATED) DOMINANCE USING MIXED STRATEGIES WITH SMALL SUPPORTS When showing that a strategy is dominated by a mixed strategy, there are several reasons to prefer exhibiting a 92 dominating strategy that places positive probability on as few pure strategies as possible.",
        "First, this will reduce the number of bits required to specify the dominating strategy (and thus the proof of dominance can be communicated quicker): if the dominating mixed strategy places positive probability on only k strategies, then it can be specified using k real numbers for the probabilities, plus k log m (where m is the number of strategies for the player under consideration) bits to indicate which strategies are used.",
        "Second, the proof of dominance will be cleaner: for a dominating mixed strategy, it is typically (always in the case of strict dominance) possible to spread some of the probability onto any unused pure strategy and still have a dominating strategy, but this obscures which pure strategies are the ones that are key in making the mixed strategy dominating.",
        "Third, because (by the previous) the argument for eliminating the dominated strategy is simpler and easier to understand, it is more likely to be accepted.",
        "Fourth, the level of risk neutrality required for the argument to work is reduced, at least in the extreme case where dominance by a single pure strategy can be exhibited (no risk neutrality is required here).",
        "This motivates the following problem.",
        "Definition 4 (MINIMUM-DOMINATING-SET).",
        "We are given the row players utilities of a game in normal form, a distinguished strategy σ∗ for the row player, a specification of whether the dominance should be strict or weak, and a number k. We are asked whether there exists a mixed strategy σ for the row player that places positive probability on at most k pure strategies, and dominates σ∗ in the required sense.",
        "Unfortunately, this problem is NP-complete.",
        "Theorem 3.",
        "MINIMUM-DOMINATING-SET is NPcomplete, both for strict and for weak dominance.",
        "Proof.",
        "The problem is in NP because we can nondeterministically choose a set of at most k strategies to give positive probability, and decide whether we can dominate σ∗ with these k strategies as described in Proposition 1.",
        "To show NP-hardness, we reduce an arbitrary SET-COVER instance (given a set S, subsets S1, S2, . . . , Sr, and a number t, can all of S be covered by at most t of the subsets?) to the following MINIMUM-DOMINATING-SET instance.",
        "For every element s ∈ S, there is a pure strategy σs for the column player.",
        "For every subset Si, there is a pure strategy σSi for the row player.",
        "Finally, there is the distinguished pure strategy σ∗ for the row player.",
        "The row players utilities are as follows: ur(σSi , σs) = t + 1 if s ∈ Si; ur(σSi , σs) = 0 if s /∈ Si; ur(σ∗ , σs) = 1 for all s ∈ S. Finally, we let k = t. We now proceed to show that the two instances are equivalent.",
        "First suppose there exists a solution to the SET-COVER instance.",
        "Without loss of generality, we can assume that there are exactly k subsets in the cover.",
        "Then, for every Si that is in the cover, let the dominating strategy σ place exactly 1 k probability on the corresponding pure strategy σSi .",
        "Now, if we let n(s) be the number of subsets in the cover containing s (we observe that that n(s) ≥ 1), then for every strategy σs for the column player, the row players expected utility for playing σ when the column player is playing σs is u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs).",
        "So σ strictly (and thus also weakly) dominates σ∗ , and there exists a solution to the MINIMUM-DOMINATING-SET instance.",
        "Now suppose there exists a solution to the MINIMUMDOMINATING-SET instance.",
        "Consider the (at most k) pure strategies of the form σSi on which the dominating mixed strategy σ places positive probability, and let T be the collection of the corresponding subsets Si.",
        "We claim that T is a cover.",
        "For suppose there is some s ∈ S that is not in any of the subsets in T .",
        "Then, if the column player plays σs, the row player (when playing σ) will always receive utility 0-as opposed to the utility of 1 the row player would receive for playing σ∗ , contradicting the fact that σ dominates σ∗ (whether this dominance is weak or strict).",
        "It follows that there exists a solution to the SET-COVER instance.",
        "On the other hand, if we require that the dominating strategy only places positive probability on a very small number of pure strategies, then it once again becomes easy to check whether a strategy is dominated.",
        "Specifically, to find out whether player is strategy σ∗ is dominated by a strategy that places positive probability on only k pure strategies, we can simply check, for every subset of k of player is pure strategies, whether there is a strategy that places positive probability only on these k strategies and dominates σ∗ , using Proposition 1.",
        "This requires only O(|Σi|k ) such checks.",
        "Thus, if k is a constant, this constitutes a polynomial-time algorithm.",
        "A natural question to ask next is whether iterated strict dominance remains computationally easy when dominating strategies are required to place positive probability on at most k pure strategies, where k is a small constant. (We have already shown in Section 4 that iterated weak dominance is hard even when k = 1, that is, only dominance by pure strategies is allowed.)",
        "Of course, if iterated strict dominance were path-independent under this restriction, computational easiness would follow as it did in Section 4.",
        "However, it turns out that this is not the case.",
        "Observation 1.",
        "If we restrict the dominating strategies to place positive probability on at most two pure strategies, iterated strict dominance becomes path-dependent.",
        "Proof.",
        "Consider the following game: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Let (i, j) denote the outcome in which the row player plays the ith row and the column player plays the jth column.",
        "Because (1, 1), (2, 2), and (4, 3) are all Nash equilibria, none of the column players pure strategies will ever be eliminated, and neither will rows 1, 2, and 4.",
        "We now observe that randomizing uniformly over rows 1 and 2 dominates row 3, and randomizing uniformly over rows 3 and 4 dominates row 5.",
        "However, if we eliminate row 3 first, it becomes impossible to dominate row 5 without randomizing over at least 3 pure strategies.",
        "Indeed, iterated strict dominance turns out to be hard even when k = 3.",
        "Theorem 4.",
        "If we restrict the dominating strategies to place positive probability on at most three pure strategies, it becomes NP-complete to decide whether a given strategy can be eliminated using iterated strict dominance. 93 Proof.",
        "The problem is in NP because given a sequence of strategies to be eliminated, we can check in polynomial time whether this is a valid sequence of eliminations (for any strategy to be eliminated, we can check, for every subset of three other strategies, whether there is a strategy placing positive probability on only these three strategies that dominates the strategy to be eliminated, using Proposition 1).",
        "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following two-player game.",
        "For every variable v ∈ V , the row player has strategies s+v, s−v, s1 v, s2 v, s3 v, s4 v, and the column player has strategies t1 v, t2 v, t3 v, t4 v. For every clause c ∈ C, the row player has a strategy sc, and the column player has a strategy tc, as well as, for every literal l occurring in c, an additional strategy tl c. The row player has two additional strategies s1 and s2. (s2 is the strategy that we are seeking to eliminate.)",
        "Finally, the column player has one additional strategy t1.",
        "The utility function for the row player is given as follows (where is some sufficiently small number): • ur(s+v, tj v) = 4 if j ∈ {1, 2}, for all v ∈ V ; • ur(s+v, tj v) = 1 if j ∈ {3, 4}, for all v ∈ V ; • ur(s−v, tj v) = 1 if j ∈ {1, 2}, for all v ∈ V ; • ur(s−v, tj v) = 4 if j ∈ {3, 4}, for all v ∈ V ; • ur(s+v, t) = ur(s−v, t) = 0 for all v ∈ V and t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 for all v ∈ V and i ∈ {1, 2, 3, 4}; • ur(si v, t) = for all v ∈ V , i ∈ {1, 2, 3, 4}, and t = ti v; • ur(sc, tc) = 2 for all c ∈ C; • ur(sc, t) = 0 for all c ∈ C and t = tc; • ur(s1, t1) = 1 + ; • ur(s1, t) = for all t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 for all c ∈ C; • ur(s2, t) = 0 for all t /∈ {t1} ∪ {tc : c ∈ C}.",
        "The utility function for the column player is given as follows: • uc(si v, ti v) = 1 for all v ∈ V and i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 for all v ∈ V , i ∈ {1, 2, 3, 4}, and s = si v; • uc(sc, tc) = 1 for all c ∈ C; • uc(sl, tc) = 1 for all c ∈ C and l ∈ L occurring in c; • uc(s, tc) = 0 for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + for all c ∈ C; • uc(sl , tl c) = 1 + for all c ∈ C and l = l occurring in c; • uc(s, tl c) = for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c, l = l }; • uc(s2, t1) = 1; • uc(s, t1) = 0 for all s = s2.",
        "We now show that the two instances are equivalent.",
        "First, suppose that there is a solution to the satisfiability instance.",
        "Then, consider the following sequence of eliminations in our game: 1.",
        "For every variable v that is set to true in the satisfying assignment, eliminate s+v with the mixed strategy σr that places probability 1/3 on s−v, probability 1/3 on s1 v, and probability 1/3 on s2 v. (The expected utility of playing σr against t1 v or t2 v is 14/3 > 4; against t3 v or t4 v, it is 4/3 > 1; and against anything else it is 2 /3 > 0.",
        "Hence the dominance is valid.) 2.",
        "Similarly, for every variable v that is set to false in the satisfying assignment, eliminate s−v with the mixed strategy σr that places probability 1/3 on s+v, probability 1/3 on s3 v, and probability 1/3 on s4 v. (The expected utility of playing σr against t1 v or t2 v is 4/3 > 1; against t3 v or t4 v, it is 14/3 > 4; and against anything else it is 2 /3 > 0.",
        "Hence the dominance is valid.) 3.",
        "For every c ∈ C, eliminate tc with any tl c for which l was set to true in the satisfying assignment. (This is a valid dominance because tl c performs better than tc against any strategy other than sl, and we eliminated sl in step 1 or in step 2.) 4.",
        "Finally, eliminate s2 with s1. (This is a valid dominance because s1 performs better than s2 against any strategy other than those in {tc : c ∈ C}, which we eliminated in step 3.)",
        "Hence, there is an elimination path that eliminates s2.",
        "Now, suppose that there is an elimination path that eliminates s2.",
        "The strategy that eventually dominates s2 must place most of its probability on s1, because s1 is the only other strategy that performs well against t1, which cannot be eliminated before s2.",
        "But, s1 performs significantly worse than s2 against any strategy tc with c ∈ C, so it follows that all these strategies must be eliminated first.",
        "Each strategy tc can only be eliminated by a strategy that places most of its weight on the corresponding strategies tl c with l ∈ c, because they are the only other strategies that perform well against sc, which cannot be eliminated before tc.",
        "But, each strategy tl c performs significantly worse than tc against sl, so it follows that for every clause c, for one of the literals l occurring in it, sl must be eliminated first.",
        "Now, strategies of the form tj v will never be eliminated because they are the unique best responses to the corresponding strategies sj v (which are, in turn, the best responses to the corresponding tj v).",
        "As a result, if strategy s+v (respectively, s−v) is eliminated, then its opposite strategy s−v (respectively, s+v) can no longer be eliminated, for the following reason.",
        "There is no other pure strategy remaining that gets a significant utility against more than one of the strategies t1 v, t2 v, t3 v, t4 v, but s−v (respectively, s+v) gets significant utility against all 4, and therefore cannot be dominated by a mixed strategy placing positive probability on at most 3 strategies.",
        "It follows that for each v ∈ V , at most one of the strategies s+v, s−v is eliminated, in such a way that for every clause c, for one of the literals l occurring in it, sl must be eliminated.",
        "But then setting all the literals l such that sl is eliminated to true constitutes a solution to the satisfiability instance.",
        "In the next section, we return to the setting where there is no restriction on the number of pure strategies on which a dominating mixed strategy can place positive probability. 6. (ITERATED) DOMINANCE IN BAYESIAN GAMES So far, we have focused on normal form games that are flatly represented (that is, every matrix entry is given ex94 plicitly).",
        "However, for many games, the flat representation is too large to write down explicitly, and instead, some representation that exploits the structure of the game needs to be used.",
        "Bayesian games, besides being of interest in their own right, can be thought of as a useful structured representation of normal form games, and we will study them in this section.",
        "In a Bayesian game, each player first receives privately held preference information (the players type) from a distribution, which determines the utility that that player receives for every outcome of (that is, vector of actions played in) the game.",
        "After receiving this type, the player plays an action based on it.7 Definition 5.",
        "A Bayesian game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of actions Ai, a (finite) type space Θi with a probability distribution πi over it, and a utility function ui : Θi × A1 × A2 × . . . × An → R (where ui(θi, a1, a2, . . . , an) denotes player is utility when is type is θi and each player j plays action aj).",
        "A pure strategy in a Bayesian game is a mapping from types to actions, σi : Θi → Ai, where σi(θi) denotes the action that player i plays for type θi.",
        "Any vector of pure strategies in a Bayesian game defines an (expected) utility for each player, and therefore we can translate a Bayesian game into a normal form game.",
        "In this normal form game, the notions of dominance and iterated dominance are defined as before.",
        "However, the normal form representation of the game is exponentially larger than the Bayesian representation, because each player i has |Ai||Θi| distinct pure strategies.",
        "Thus, any algorithm for Bayesian games that relies on expanding the game to its normal form will require exponential time.",
        "Specifically, our easiness results for normal form games do not directly transfer to this setting.",
        "In fact, it turns out that checking whether a strategy is dominated by a pure strategy is hard in Bayesian games.",
        "Theorem 5.",
        "In a Bayesian game, it is NP-complete to decide whether a given pure strategy σr : Θr → Ar is dominated by some other pure strategy (both for strict and weak dominance), even when the row players distribution over types is uniform.",
        "Proof.",
        "The problem is in NP because it is easy to verify whether a candidate dominating strategy is indeed a dominating strategy.",
        "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a set of clauses C using variables from V ) to the following Bayesian game.",
        "Let the row players action set be Ar = {t, f, 0} and let the column players action set be Ac = {ac : c ∈ C}.",
        "Let the row players type set be Θr = {θv : v ∈ V }, with a distribution πr that is uniform.",
        "Let the row players utility function be as follows: • ur(θv, 0, ac) = 0 for all v ∈ V and c ∈ C; • ur(θv, b, ac) = |V | for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b satisfies c; • ur(θv, b, ac) = −1 for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b does not satisfy c. 7 In general, a player can also receive a signal about the other players preferences, but we will not concern ourselves with that here.",
        "Let the pure strategy to be dominated be the one that plays 0 for every type.",
        "We show that the strategy is dominated by a pure strategy if and only if there is a solution to the satisfiability instance.",
        "First, suppose there is a solution to the satisfiability instance.",
        "Then, let σd r be given by: σd r (θv) = t if v is set to true in the solution to the satisfiability instance, and σd r (θv) = f otherwise.",
        "Then, against any action ac by the column player, there is at least one type θv such that either +v ∈ c and σd r (θv) = t, or −v ∈ c and σd r (θv) = f. Thus, the row players expected utility against action ac is at least |V | |V | − |V |−1 |V | = 1 |V | > 0.",
        "So, σd r is a dominating strategy.",
        "Now, suppose there is a dominating pure strategy σd r .",
        "This dominating strategy must play t or f for at least one type.",
        "Thus, against any ac by the column player, there must at least be some type θv for which ur(θv, σd r (θv), ac) > 0.",
        "That is, there must be at least one variable v such that setting v to σd r (θv) satifies c. But then, setting each v to σd r (θv) must satisfy all the clauses.",
        "So a satisfying assignment exists.",
        "However, it turns out that we can modify the linear programs from Proposition 1 to obtain a polynomial time algorithm for checking whether a strategy is dominated by a mixed strategy in Bayesian games.",
        "Theorem 6.",
        "In a Bayesian game, it can be decided in polynomial time whether a given (possibly mixed) strategy σr is dominated by some other mixed strategy, using linear programming (both for strict and weak dominance).",
        "Proof.",
        "We can modify the linear programs presented in Proposition 1 as follows.",
        "For strict dominance, again assuming without loss of generality that all the utilities in the game are positive, use the following linear program (in which pσr r (θr, ar) is the probability that σr, the strategy to be dominated, places on ar for type θr): minimize θr∈Θr ar∈Ar pr(ar) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1.",
        "Assuming that π(θr) > 0 for all θr ∈ Θr, this program will return an objective value smaller than |Θr| if and only if σr is strictly dominated, by reasoning similar to that done in Proposition 1.",
        "For weak dominance, use the following linear program: maximize ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) = 1.",
        "This program will return an objective value greater than 0 if and only if σr is weakly dominated, by reasoning similar to that done in Proposition 1.",
        "We now turn to iterated dominance in Bayesian games.",
        "Na¨ıvely, one might argue that iterated dominance in Bayesian 95 games always requires an exponential number of steps when a significant fraction of the games pure strategies can be eliminated, because there are exponentially many pure strategies.",
        "However, this is not a very strong argument because oftentimes we can eliminate exponentially many pure strategies in one step.",
        "For example, if for some type θr ∈ Θr we have, for all ac ∈ Ac, that u(θr, a1 r, ac) > u(θr, a2 r, ac), then any pure strategy for the row player which plays action a2 r for type θr is dominated (by the strategy that plays action a1 r for type θr instead)-and there are exponentially many (|Ar||Θr|−1 ) such strategies.",
        "It is therefore conceivable that we need only polynomially many eliminations of collections of a players strategies.",
        "However, the following theorem shows that this is not the case, by giving an example where an exponential number of iterations (that is, alternations between the players in eliminating strategies) is required. (We emphasize that this is not a result about computational complexity.)",
        "Theorem 7.",
        "Even in symmetric 3-player Bayesian games, iterated dominance by pure strategies can require an exponential number of iterations (both for strict and weak dominance), even with only three actions per player.",
        "Proof.",
        "Let each player i ∈ {1, 2, 3} have n + 1 types θ1 i , θ2 i , . . . , θn+1 i .",
        "Let each player i have 3 actions ai, bi, ci, and let the utility function of each player be defined as follows. (In the below, i + 1 and i + 2 are shorthand for i + 1(mod 3) and i + 2(mod 3) when used as player indices.",
        "Also, −∞ can be replaced by a sufficiently negative number.",
        "Finally, δ and should be chosen to be very small (even compared to 2−(n+1) ), and should be more than twice as large as δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 for si+1 = ci+1 or si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − for si+1 = ai+1 and si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ for si+1 = ai+1 or si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ for all si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ for all si+1, si+2 when j > 1; • ui(θj i ; bi, si+1, si+2) = − for all si+1, si+2 when j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 for all si+1 when j > 1; • ui(θj i ; ci, si+1, si+2) = δ− for all si+1 and si+2 = ci+2 when j > 1.",
        "Let the distribution over each players types be given by p(θj i ) = 2−j (with the exception that p(θ2 i ) = 2−2 +2−(n+1) ).",
        "We will be interested in eliminating strategies of the following form: play bi for type θ1 i , and play one of bi or ci otherwise.",
        "Because the utility function is the same for any type θj i with j > 1, these strategies are effectively defined by the total probability that they place on ci,8 which is t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j where tj i = 1 if player i 8 Note that the strategies are still pure strategies; the probability placed on an action by a strategy here is simply the sum of the probabilities of the types for which the strategy chooses that action. plays ci for type θj i , and 0 otherwise.",
        "This probability is different for any two different strategies of the given form, and we have exponentially many different strategies of the given form.",
        "For any probability q which can be expressed as t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (with all tj ∈ {0, 1}), let σi(q) denote the (unique) strategy of the given form for player i which places a total probability of q on ci.",
        "Any strategy that plays ci for type θ1 i or ai for some type θj i with j > 1 can immediately be eliminated.",
        "We will show that, after that, we must eliminate the strategies σi(q) with high q first, slowly working down to those with lower q.",
        "Claim 1: If σi+1(q ) and σi+2(q ) have not yet been eliminated, and q < q , then σi(q) cannot yet be eliminated.",
        "Proof: First, we show that no strategy σi(q ) can eliminate σi(q).",
        "Against σi+1(q ), σi+2(q ), the utility of playing σi(p) is − + p · δ − p · q /2.",
        "Thus, when q = 0, it is best to set p as high as possible (and we note that σi+1(0) and σi+2(0) have not been eliminated), but when q > 0, it is best to set p as low as possible because δ < q /2.",
        "Thus, whether q > q or q < q , σi(q) will always do strictly better than σi(q ) against some remaining opponent strategies.",
        "Hence, no strategy σi(q ) can eliminate σi(q).",
        "The only other pure strategies that could dominate σi(q) are strategies that play ai for type θ1 i , and bi or ci for all other types.",
        "Let us take such a strategy and suppose that it plays c with probability p. Against σi+1(q ), σi+2(q ) (which have not yet been eliminated), the utility of playing this strategy is −(q )2 /2 − /2 + p · δ − p · q /2.",
        "On the other hand, playing σi(q) gives − + q · δ − q · q /2.",
        "Because q > q, we have −(q )2 /2 < −q · q /2, and because δ and are small, it follows that σi(q) receives a higher utility.",
        "Therefore, no strategy dominates σi(q), proving the claim.",
        "Claim 2: If for all q > q, σi+1(q ) and σi+2(q ) have been eliminated, then σi(q) can be eliminated.",
        "Proof: Consider the strategy for player i that plays ai for type θ1 i , and bi for all other types (call this strategy σi); we claim σi dominates σi(q).",
        "First, if either of the other players k plays ak for θ1 k, then σi performs better than σi(q) (which receives −∞ in some cases).",
        "Because the strategies for player k that play ck for type θ1 k, or ak for some type θj k with j > 1, have already been eliminated, all that remains to check is that σi performs better than σi(q) whenever both of the other two players play strategies of the following form: play bk for type θ1 k, and play one of bk or ck otherwise.",
        "We note that among these strategies, there are none left that place probability greater than q on ck.",
        "Letting qk denote the probability with which player k plays ck, the expected utility of playing σi is −qi+1 · qi+2/2 − /2.",
        "On the other hand, the utility of playing σi(q) is − + q · δ − q · qi+2/2.",
        "Because qi+1 ≤ q, the difference between these two expressions is at least /2 − δ, which is positive.",
        "It follows that σi dominates σi(q).",
        "From Claim 2, it follows that all strategies of the form σi(q) will eventually be eliminated.",
        "However, Claim 1 shows that we cannot go ahead and eliminate multiple such strategies for one player, unless at least one other player simultaneously keeps up in the eliminated strategies: every time a σi(q) is eliminated such that σi+1(q) and σi+2(q) have not yet been eliminated, we need to eliminate one of the latter two strategies before any σi(q ) with q > q can be eliminated-that is, we need to alternate between players.",
        "Because there are exponentially many strategies of the form σi(q), it follows that iterated elimination will require exponentially many iterations to complete. 96 It follows that an efficient algorithm for iterated dominance (strict or weak) by pure strategies in Bayesian games, if it exists, must somehow be able to perform (at least part of) many iterations in a single step of the algorithm (because if each step only performed a single iteration, we would need exponentially many steps).",
        "Interestingly, Knuth et al. [11] argue that iterated dominance appears to be an inherently sequential problem (in light of their result that iterated very weak dominance is P-complete, that is, apparently not efficiently parallelizable), suggesting that aggregating many iterations may be difficult. 7.",
        "CONCLUSIONS While the Nash equilibrium solution concept is studied more and more intensely in our community, the perhaps more elementary concept of (iterated) dominance has received much less attention.",
        "In this paper we studied various computational aspects of this concept.",
        "We first studied both strict and weak dominance (not iterated), and showed that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
        "We then moved on to iterated dominance.",
        "We showed that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
        "This allowed us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
        "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
        "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
        "We then studied what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
        "First, we showed that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
        "Then, we showed that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
        "Finally, we studied dominance and iterated dominance in Bayesian games, as an example of a concise representation language for normal form games that is interesting in its own right.",
        "We showed that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak dominance).",
        "Finally, we showed that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
        "There are various avenues for future research.",
        "First, there is the open question of whether it is possible to complete iterated dominance in Bayesian games in polynomial time (even though we showed that an exponential number of alternations between the players in eliminating strategies is sometimes required).",
        "Second, we can study computational aspects of (iterated) dominance in concise representations of normal form games other than Bayesian games-for example, in graphical games [9] or local-effect/action graph games [12, 2]. (How to efficiently perform iterated very weak dominance has already been studied for partially observable stochastic games [8].)",
        "Finally, we can ask whether some of the algorithms we described (such as the one for iterated strict dominance with mixed strategies) can be made faster. 8.",
        "REFERENCES [1] Krzysztof R. Apt.",
        "Uniform proofs of order independence for various strategy elimination procedures.",
        "Contributions to Theoretical Economics, 4(1), 2004. [2] Nivan A. R. Bhat and Kevin Leyton-Brown.",
        "Computing Nash equilibria of action-graph games.",
        "In UAI, 2004. [3] Ben Blum, Christian R. Shelton, and Daphne Koller.",
        "A continuation method for Nash equilibria in structured games.",
        "In IJCAI, 2003. [4] Vincent Conitzer and Tuomas Sandholm.",
        "Complexity results about Nash equilibria.",
        "In IJCAI, pages 765-771, 2003. [5] Drew Fudenberg and Jean Tirole.",
        "Game Theory.",
        "MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
        "On the order of eliminating dominated strategies.",
        "Operations Research Letters, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
        "The complexity of eliminating dominated strategies.",
        "Mathematics of Operation Research, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein, and Shlomo Zilberstein.",
        "Dynamic programming for partially observable stochastic games.",
        "In AAAI, pages 709-715, 2004. [9] Michael Kearns, Michael Littman, and Satinder Singh.",
        "Graphical models for game theory.",
        "In UAI, 2001. [10] Leonid Khachiyan.",
        "A polynomial algorithm in linear programming.",
        "Soviet Math.",
        "Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou, and John N Tsitsiklis.",
        "A note on strategy elimination in bimatrix games.",
        "Operations Research Letters, 7(3):103-107, 1988. [12] Kevin Leyton-Brown and Moshe Tennenholtz.",
        "Local-effect games.",
        "In IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis, and Aranyak Mehta.",
        "Playing large games using simple strategies.",
        "In ACM-EC, pages 36-41, 2003. [14] Michael Littman and Peter Stone.",
        "A polynomial-time Nash equilibrium algorithm for repeated games.",
        "In ACM-EC, pages 48-54, 2003. [15] Leslie M. Marx and Jeroen M. Swinkels.",
        "Order independence for iterated weak dominance.",
        "Games and Economic Behavior, 18:219-245, 1997. [16] Leslie M. Marx and Jeroen M. Swinkels.",
        "Corrigendum, order independence for iterated weak dominance.",
        "Games and Economic Behavior, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston, and Jerry R. Green.",
        "Microeconomic Theory.",
        "Oxford University Press, 1995. [18] Roger Myerson.",
        "Game Theory: Analysis of Conflict.",
        "Harvard University Press, Cambridge, 1991. [19] Martin J Osborne and Ariel Rubinstein.",
        "A Course in Game Theory.",
        "MIT Press, 1994. [20] Christos Papadimitriou.",
        "Algorithms, games and the Internet.",
        "In STOC, pages 749-753, 2001. [21] Ryan Porter, Eugene Nudelman, and Yoav Shoham.",
        "Simple search methods for finding a Nash equilibrium.",
        "In AAAI, pages 664-669, 2004. 97"
    ],
    "translated_text_sentences": [
        "Estudiamos varios aspectos computacionales de la resolución de juegos utilizando la dominancia y la dominancia iterada.",
        "Primero estudiamos tanto la dominancia estricta como la débil (no iterada), y demostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta se puede hacer en tiempo polinómico utilizando la resolución de un único programa lineal.",
        "Luego pasamos a la dominancia iterada.",
        "Mostramos que determinar si existe algún camino que elimine una estrategia dada es NP-completo con dominancia débil iterada.",
        "Esto nos permite también demostrar que determinar si existe un camino que conduce a una solución única es NP-completo.",
        "Ambos resultados se mantienen tanto con como sin dominancia de estrategias mixtas. (Una versión más débil del segundo resultado (solo sin dominancia de estrategias mixtas) ya se conocía [7].)",
        "La dominancia estricta iterada, por otro lado, es independiente de la ruta (tanto con como sin dominancia por estrategias mixtas) y, por lo tanto, se puede realizar en tiempo polinómico.",
        "Luego estudiamos qué sucede cuando la estrategia dominante puede asignar una probabilidad positiva solo a unas pocas estrategias puras.",
        "Primero, demostramos que encontrar la estrategia dominante con el tamaño de soporte mínimo es NP-completo (tanto para dominancia estricta como débil).",
        "Luego, demostramos que la dominancia estricta iterada se vuelve dependiente del camino cuando hay un límite en el tamaño del soporte de las estrategias dominantes, y que decidir si una estrategia dada puede ser eliminada por dominancia estricta iterada bajo esta restricción es NP-completo (incluso cuando el límite en el tamaño del soporte es 3).",
        "Finalmente, estudiamos juegos bayesianos.",
        "Mostramos que, a diferencia de los juegos en forma normal, decidir si una estrategia pura dada está dominada por otra estrategia pura en un juego bayesiano es NP-completo (tanto con dominancia estricta como débil); sin embargo, decidir si una estrategia está dominada por alguna estrategia mixta aún puede hacerse en tiempo polinómico con la resolución de un único programa lineal (tanto con dominancia estricta como débil).",
        "Finalmente, demostramos que la dominancia iterada utilizando estrategias puras puede requerir un número exponencial de iteraciones en un juego bayesiano (tanto con dominancia estricta como débil).",
        "Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía Términos Generales Algoritmos, Economía, Teoría 1.",
        "INTRODUCCIÓN En sistemas multiagentes con agentes auto-interesados, la acción óptima para un agente puede depender de las acciones tomadas por otros agentes.",
        "En tales contextos, los agentes necesitan herramientas de teoría de juegos para decidir racionalmente sobre una acción.",
        "La teoría de juegos ofrece varios modelos formales de escenarios estratégicos, el más conocido de los cuales es un juego en forma normal (o matriz), que especifica una utilidad (pago) para cada agente en cada combinación de estrategias que los agentes eligen, así como conceptos de solución que, dados un juego, especifican qué resultados son razonables (bajo varias suposiciones de racionalidad y conocimiento común).",
        "Probablemente el concepto de solución más conocido (y ciertamente el más estudiado) es el equilibrio de Nash.",
        "Un equilibrio de Nash especifica una estrategia para cada jugador, de tal manera que ningún jugador tiene un incentivo para desviarse (unilateralmente) de la estrategia prescrita.",
        "Recientemente, numerosos artículos han estudiado el cálculo de equilibrios de Nash en diferentes contextos [9, 4, 12, 3, 13, 14], y la complejidad de construir un equilibrio de Nash en juegos en forma normal ha sido etiquetada como uno de los dos problemas abiertos más importantes en el límite de P hoy en día [20].",
        "El problema de calcular soluciones de acuerdo con los conceptos de solución quizás más elementales de dominancia y dominancia iterada ha recibido mucha menos atención. (Después de un breve artículo temprano sobre un caso sencillo [11], el principal estudio computacional de estos conceptos ha tenido lugar en realidad en un artículo de la comunidad de teoría de juegos [7].) Una estrategia domina estrictamente a otra estrategia si tiene un rendimiento estrictamente mejor contra todos los vectores de estrategias del oponente, y la domina débilmente si tiene al menos el mismo rendimiento contra todos los vectores de estrategias del oponente, y estrictamente mejor contra al menos uno.",
        "La idea es que las estrategias dominadas pueden ser eliminadas de consideración.",
        "En la dominancia iterada, la eliminación avanza en rondas y se vuelve más fácil a medida que se eliminan más estrategias: en cualquier ronda dada, la estrategia dominante ya no necesita desempeñarse mejor que o igual que la estrategia dominada contra las estrategias oponentes que fueron eliminadas en rondas anteriores.",
        "Calcular soluciones según la dominancia (iterada) es importante por al menos las siguientes razones: 1) puede ser computacionalmente más fácil que calcular (por ejemplo) un equilibrio de Nash (y por lo tanto puede ser útil como paso de preprocesamiento en el cálculo de un equilibrio de Nash), y 2) la dominancia (iterada) requiere una suposición de racionalidad más débil en los jugadores que (por ejemplo) el equilibrio de Nash, y por lo tanto las soluciones derivadas según ella son más propensas a ocurrir.",
        "En este artículo, estudiamos algunas preguntas computacionales fundamentales relacionadas con la dominancia y la dominancia iterada, incluyendo qué tan difícil es verificar si una estrategia dada puede ser eliminada por cada una de las variantes de estos conceptos.",
        "El resto del documento está organizado de la siguiente manera.",
        "En la Sección 2, revisamos brevemente las definiciones y propiedades básicas de los juegos en forma normal, la dominancia estricta y débil, y la dominancia estricta y débil iterada.",
        "En las secciones restantes, estudiamos los aspectos computacionales de la dominancia y la dominancia iterada.",
        "En la Sección 3, estudiamos la dominancia de un solo disparo (no iterada).",
        "En la Sección 4, estudiamos la dominancia iterada.",
        "En la Sección 5, estudiamos la dominancia y la dominancia iterada cuando la estrategia dominante solo puede asignar probabilidad a unas pocas estrategias puras.",
        "Finalmente, en la Sección 6, estudiamos la dominancia y la dominancia iterada en juegos bayesianos. 2.",
        "DEFINICIONES Y PROPIEDADES BÁSICAS En esta sección, revisamos brevemente los juegos en forma normal, así como la dominancia y la dominancia iterada (tanto estricta como débil).",
        "Un juego de forma normal de n jugadores se define de la siguiente manera.",
        "Definición 1.",
        "Un juego en forma normal está dado por un conjunto de jugadores {1, 2, . . . , n}; y, para cada jugador i, un conjunto (finito) de estrategias puras Σi y una función de utilidad ui : Σ1 × Σ2 × . . . × Σn → R (donde ui(σ1, σ2, . . . , σn) denota la utilidad del jugador i cuando cada jugador j juega la acción σj).",
        "Las dos principales nociones de dominancia se definen de la siguiente manera.",
        "Definición 2.",
        "La estrategia σi del jugador se dice que está estrictamente dominada por la estrategia σi del jugador si, para cualquier vector de estrategias σ−i de los otros jugadores, ui(σi, σ−i) > ui(σi, σ−i).",
        "La estrategia σi del jugador se dice que está débilmente dominada por la estrategia σi del jugador si, para cualquier vector de estrategias σ−i para los otros jugadores, ui(σi, σ−i) ≥ ui(σi, σ−i), y para al menos un vector de estrategias σ−i para los otros jugadores, ui(σi, σ−i) > ui(σi, σ−i).",
        "En esta definición, a veces se permite que la estrategia dominante σi sea una estrategia mixta, es decir, una distribución de probabilidad sobre estrategias puras.",
        "En este caso, las utilidades están en dominancia en conjunto.",
        "Por ejemplo, a veces se utilizan comprobaciones de dominancia simple como una subrutina en la búsqueda de equilibrios de Nash [21]. Las definiciones son las utilidades esperadas. Hay otras nociones de dominancia, como la dominancia muy débil (en la que no se requiere ninguna desigualdad estricta, por lo que dos estrategias pueden dominarse mutuamente), pero no las estudiaremos aquí.",
        "Cuando estamos analizando las relaciones de dominancia para el jugador i, los otros jugadores (−i) pueden ser considerados como un solo jugador. Por lo tanto, en el resto del documento, cuando estudiamos la dominancia de un solo paso (no iterada), nos centraremos sin pérdida de generalidad en juegos de dos jugadores. En juegos de dos jugadores, generalmente nos referiremos a los jugadores como r (fila) y c (columna) en lugar de 1 y 2.",
        "En la dominancia iterada, las estrategias dominadas son eliminadas del juego y ya no tienen ningún efecto en las relaciones de dominancia futuras.",
        "La dominancia iterada puede eliminar más estrategias que la dominancia, de la siguiente manera. σr puede originalmente no dominar a σr porque este último tiene un mejor desempeño contra σc; pero luego, una vez que σc es eliminado porque es dominado por σc, σr domina a σr, y este último puede ser eliminado.",
        "Por ejemplo, en el siguiente juego, se puede eliminar primero a R, después de lo cual D queda dominado.",
        "Tanto la dominancia estricta como la dominancia débil pueden ser utilizadas en la definición de la dominancia iterada.",
        "Observamos que el proceso de dominancia iterada nunca se ve favorecido al eliminar una estrategia mixta dominada, por la siguiente razón.",
        "Si σi le da al jugador i una utilidad mayor que σi contra la estrategia mixta σj para el jugador j = i (y estrategias σ−{i,j} para los otros jugadores), entonces para al menos una estrategia pura σj en la que σj coloque probabilidad positiva, σi debe desempeñarse mejor que σi contra σj (y estrategias σ−{i,j} para los otros jugadores).",
        "Por lo tanto, eliminar la estrategia mixta σj no introduce nuevas dominancias.",
        "Discusiones más detalladas y ejemplos se pueden encontrar en textos estándar sobre microeconomía o teoría de juegos [17, 5].",
        "Ahora estamos listos para pasar al núcleo de este documento. 3.",
        "En esta sección, estudiamos la noción de dominancia de un solo turno (no iterada).",
        "Como primera observación, verificar si una estrategia dada está estrictamente (débilmente) dominada por alguna estrategia pura es sencillo, al comprobar, para cada estrategia pura de ese jugador, si la última estrategia tiene un rendimiento estrictamente mejor contra todas las estrategias de los oponentes (al menos igual de bien contra todas las estrategias de los oponentes, y estrictamente 2 La estrategia dominada σi, por supuesto, también puede ser mixta, pero esto no tiene implicaciones técnicas para el documento: cuando estudiamos la dominancia de un solo disparo, preguntamos si una estrategia dada está dominada, y no importa si la estrategia dada es pura o mixta; cuando estudiamos la dominancia iterada, no tiene sentido eliminar las estrategias mixtas, como veremos en breve. 3 Este jugador puede tener un espacio de estrategias muy grande (una estrategia pura para cada vector de estrategias puras de los jugadores que están siendo reemplazados).",
        "Sin embargo, esto no resultará en un aumento en el tamaño de nuestra representación, ya que la representación original ya tenía que especificar las utilidades para cada uno de estos vectores. Observamos que una restricción a juegos de dos jugadores no sería sin pérdida de generalidad para la dominancia iterada.",
        "Esto se debe a que para la dominancia iterada, necesitamos analizar las estrategias dominadas de cada jugador individual, por lo que no podemos fusionar a ningún jugador. A continuación, mostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta se puede hacer en tiempo polinómico resolviendo un único programa lineal. (Programas lineales similares se han presentado anteriormente [18]; presentamos el resultado aquí por completitud, y porque construiremos sobre los programas lineales dados a continuación en el Teorema 6.)",
        "Proposición 1.",
        "Dadas las utilidades de los jugadores de fila, un subconjunto Dr de las estrategias puras de los jugadores de fila Σr, y una estrategia distinguida σ∗ r para el jugador de fila, podemos verificar en tiempo polinómico en el tamaño del juego (resolviendo un único programa lineal de tamaño polinómico) si existe alguna estrategia mixta σr, que coloque probabilidad positiva solo en estrategias en Dr y domine a σ∗ r, tanto en dominancia estricta como débil.",
        "Prueba.",
        "Sea pdr la probabilidad que σr asigna a dr ∈ Dr. Resolveremos un único programa lineal en cada uno de nuestros algoritmos; los programas lineales pueden resolverse en tiempo polinómico [10].",
        "Para la dominancia estricta, la pregunta es si se puede establecer el pdr de manera que para cada estrategia pura del jugador de la columna σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc).",
        "Debido a que la desigualdad debe ser estricta, no podemos resolver esto directamente mediante programación lineal.",
        "Procedemos de la siguiente manera.",
        "Dado que el juego es finito, podemos asumir sin pérdida de generalidad que todas las utilidades son positivas (si no lo son, simplemente añade una constante a todas las utilidades).",
        "Resolver el siguiente programa lineal: minimizar dr∈Dr pdr tal que para cualquier σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc).",
        "Si σ∗ r es estrictamente dominada por alguna estrategia mixta, este programa lineal tiene una solución con un valor objetivo < 1. (La estrategia dominante es una solución factible con un valor objetivo exactamente igual a 1.",
        "Dado que ninguna restricción es vinculante para esta solución, podemos reducir ligeramente una de las probabilidades sin afectar la viabilidad, obteniendo así una solución con un valor objetivo < 1.",
        "Además, si este programa lineal tiene una solución con un valor objetivo < 1, existe una estrategia mixta que domina estrictamente a σ∗ r, la cual se puede obtener tomando la solución del PL y agregando la probabilidad restante a cualquier estrategia (debido a que todas las utilidades son positivas, esto sumará al lado izquierdo de cualquier desigualdad, por lo que todas las desigualdades se volverán estrictas).",
        "Para la dominancia débil, podemos resolver el siguiente programa lineal: maximizar σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) tal que para cualquier σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1.",
        "Si σ∗ r está débilmente dominado por alguna estrategia mixta, entonces esa estrategia mixta es una solución factible para este programa con un valor objetivo > 0, porque para al menos una estrategia σc ∈ Σc tenemos ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0.",
        "Por otro lado, si este programa tiene una solución con un valor objetivo > 0, entonces para al menos una estrategia σc ∈ Σc debemos tener ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, y por lo tanto la solución de los programas lineales es una estrategia mixta débilmente dominante. 4.",
        "DOMINANCIA ITERADA Ahora pasamos a la dominancia iterada.",
        "Es bien sabido que la dominancia estricta iterada es independiente del camino [6, 19], es decir, si eliminamos las estrategias dominadas hasta que ya no queden más estrategias dominadas, al final las estrategias restantes para cada jugador serán las mismas, independientemente del orden en que se eliminen las estrategias.",
        "Por lo tanto, para determinar si una estrategia dada puede ser eliminada por dominancia estricta iterada, todo lo que se necesita hacer es eliminar repetidamente las estrategias que son estrictamente dominadas, hasta que no queden más estrategias dominadas.",
        "Dado que podemos verificar en tiempo polinómico si alguna estrategia dada está dominada (ya sea que se permita o no la dominancia por estrategias mixtas, como se describe en la Sección 3), todo este procedimiento toma solo tiempo polinómico.",
        "En el caso de la dominancia iterada por estrategias puras con dos jugadores, Knuth et al. [11] mejoran ligeramente (aceleran) la implementación directa de este procedimiento al llevar un registro, para cada par ordenado de estrategias de un jugador, del número de estrategias del oponente que impiden que la primera estrategia domine a la segunda.",
        "Por lo tanto, el tiempo de ejecución para un juego m × n se reduce de O((m + n)4 ) a O((m + n)3 ). (En realidad, solo estudian dominancia muy débil (para la cual no se requieren desigualdades estrictas), pero el enfoque se puede extender fácilmente).",
        "Por el contrario, se sabe que la dominancia débil iterada es dependiente del camino. Por ejemplo, en el siguiente juego, utilizando la dominancia débil iterada podemos eliminar primero M y luego D, o primero R y luego U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Por lo tanto, si bien el procedimiento de eliminar estrategias débilmente dominadas hasta que no queden más estrategias débilmente dominadas puede ciertamente ejecutarse en tiempo polinómico, qué estrategias sobreviven al final depende del orden en el que eliminamos las estrategias dominadas.",
        "Investigaremos dos preguntas para la dominancia débil iterada: si una estrategia dada es eliminada en algún camino, y si hay un camino hacia una solución única (una única estrategia pura por jugador).",
        "Mostraremos que ambos de estos problemas son computacionalmente difíciles.",
        "Definición 3.",
        "Dada un juego en forma normal y una estrategia distinguida σ∗ , la ELIMINACIÓN DE ESTRATEGIAS POR DOMINANCIA DÉBIL (IWD-STRATEGY-ELIMINATION) pregunta si existe algún camino de dominancia débil iterada que elimine σ∗ .",
        "Dada un juego en forma normal, IWDUNIQUE-SOLUTION pregunta si existe algún camino de dominancia débil iterada que conduzca a una solución única (una estrategia restante por jugador).",
        "El siguiente lema muestra un caso especial de juegos en forma normal en el que permitir la dominancia débil a través de estrategias mixtas (además de la dominancia débil a través de estrategias puras) hace 6. Sin embargo, existe una restricción de dominancia débil llamada dominancia débil agradable que es independiente de la ruta [15, 16].",
        "Para obtener una visión general de los resultados de independencia de la ruta, consulte Apt [1]. 90 no ayuda.",
        "Demostraremos los resultados de dificultad en este contexto, de modo que se mantengan independientemente de si se permite o no la dominancia por estrategias mixtas.",
        "Lema 1.",
        "Supongamos que todas las utilidades en un juego están en {0, 1}.",
        "Entonces, toda estrategia pura que es débilmente dominada por una estrategia mixta también es débilmente dominada por una estrategia pura.",
        "Prueba.",
        "Se supone que la estrategia pura σ es débilmente dominada por la estrategia mixta σ∗.",
        "Si σ obtiene una utilidad de 1 contra alguna estrategia o vector de estrategias del oponente (si hay más de 2 jugadores), entonces todas las estrategias puras en las que σ∗ asigna una probabilidad positiva también deben obtener una utilidad de 1 contra esa estrategia del oponente (de lo contrario, la utilidad esperada sería menor que 1).",
        "Además, al menos una de las estrategias puras en las que σ∗ coloca probabilidad positiva debe obtener una utilidad de 1 contra una estrategia del oponente que σ obtiene 0 (de lo contrario, la desigualdad nunca sería estricta).",
        "Se deduce que esta estrategia pura domina débilmente a σ.",
        "Ahora estamos listos para demostrar los resultados principales de esta sección.",
        "Teorema 1.",
        "IWD-STRATEGY-ELIMINATION es NPcompleto, incluso con 2 jugadores, y con 0 y 1 siendo las únicas utilidades que ocurren en la matriz, ya sea que se permita o no la dominancia por estrategias mixtas.",
        "Prueba.",
        "El problema está en NP porque, dado una secuencia de estrategias a ser eliminadas, podemos verificar fácilmente si esta es una secuencia válida de eliminaciones (incluso cuando se permite la dominancia por estrategias mixtas, utilizando la Proposición 1).",
        "Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto no vacío de cláusulas C sobre un conjunto no vacío de variables V, con literales correspondientes L = {+v : v ∈ V} ∪ {−v : v ∈ V}) a la siguiente instancia de ELIMINACIÓN DE ESTRATEGIA IWD. (En esta instancia, especificaremos que ciertas estrategias son ineliminables.",
        "Una estrategia σr puede hacerse ineliminable, incluso cuando 0 y 1 son las únicas utilidades permitidas, al agregar otra estrategia σr y otra estrategia del oponente σc, de modo que: 1. σr y σr son las únicas estrategias que le dan al jugador de la fila una utilidad de 1 contra σc. 2. σr y σr siempre le dan al jugador de la fila la misma utilidad. 3. σc es la única estrategia que le da al jugador de la columna una utilidad de 1 contra σr, pero de lo contrario σc siempre le da al jugador de la columna una utilidad de 0.",
        "Esto hace imposible eliminar cualquiera de estas tres estrategias.",
        "No especificaremos explícitamente las estrategias adicionales para hacer la prueba más legible.",
        "En esta demostración, designaremos las estrategias del jugador de fila como s, y las estrategias del jugador de columna como t, para mejorar la legibilidad.",
        "Que se dé el conjunto de estrategias puras de los jugadores de fila como sigue.",
        "Para cada variable v ∈ V, el jugador de la fila tiene estrategias correspondientes s1 +v, s2 +v, s1 −v, s2 −v.",
        "Además, el jugador de la fila tiene las siguientes 2 estrategias: s1 0 y s2 0, donde s2 0 = σ∗ r (es decir, es la estrategia que buscamos eliminar).",
        "Finalmente, para cada cláusula c ∈ C, el jugador de la fila tiene estrategias correspondientes s1 c (ineliminables) y s2 c. Dado el conjunto de estrategias puras de los jugadores de la columna de la siguiente manera.",
        "Para cada variable v ∈ V, el jugador de la columna tiene una estrategia correspondiente tv.",
        "Para cada cláusula c ∈ C, el jugador de la columna tiene una estrategia correspondiente tc, y además, para cada literal l ∈ L que ocurre en c, una estrategia tc,l.",
        "Para cada variable v ∈ V, el jugador de la columna tiene estrategias correspondientes t+v, t−v (ambas no eliminables).",
        "Finalmente, el jugador de la columna tiene tres estrategias adicionales: t1 0 (ineliminable), t2 0 y t1.",
        "La función de utilidad para el jugador de la fila se da de la siguiente manera: • ur(s1 +v, tv) = 0 para todo v ∈ V ; • ur(s2 +v, tv) = 1 para todo v ∈ V ; • ur(s1 −v, tv) = 1 para todo v ∈ V ; • ur(s2 −v, tv) = 0 para todo v ∈ V ; • ur(s1 +v, t1) = 1 para todo v ∈ V ; • ur(s2 +v, t1) = 0 para todo v ∈ V ; • ur(s1 −v, t1) = 0 para todo v ∈ V ; • ur(s2 −v, t1) = 1 para todo v ∈ V ; • ur(sb +v, t+v) = 1 para todo v ∈ V y b ∈ {1, 2}; • ur(sb −v, t−v) = 1 para todo v ∈ V y b ∈ {1, 2}; • ur(sl, t) = 0 de lo contrario para todo l ∈ L y t ∈ S2; • ur(s1 0, tc) = 0 para todo c ∈ C; • ur(s2 0, tc) = 1 para todo c ∈ C; • ur(sb 0, t1 0) = 1 para todo b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 de lo contrario para todo b ∈ {1, 2} y t ∈ S2; • ur(sb c, t) = 0 de lo contrario para todo c ∈ C y b ∈ {1, 2}; y la utilidad del jugador de la fila es 0 en todos los demás casos.",
        "La función de utilidad para el jugador de la columna se da de la siguiente manera: • uc(s, tv) = 0 para todo v ∈ V y s ∈ S1; • uc(s, t1) = 0 para todo s ∈ S1; • uc(s2 l , tc) = 1 para todo c ∈ C y l ∈ L donde l ∈ c (literal l ocurre en la cláusula c); • uc(s2 l2 , tc,l1 ) = 1 para todo c ∈ C y l1, l2 ∈ L, l1 = l2 donde l2 ∈ c; • uc(s1 c, tc) = 1 para todo c ∈ C; • uc(s2 c, tc) = 0 para todo c ∈ C; • uc(sb c, tc,l) = 1 para todo c ∈ C, l ∈ L, y b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 en otro caso para todo c ∈ C y l ∈ L; y la utilidad del jugador de la columna es 0 en todos los demás casos.",
        "Ahora demostramos que las dos instancias son equivalentes.",
        "Primero, supongamos que hay una solución para la instancia de satisfactibilidad: es decir, una asignación de valores de verdad a las variables en V tal que todas las cláusulas se satisfacen.",
        "Entonces, considera la siguiente secuencia de eliminaciones en nuestro juego: 1.",
        "Para cada variable v que se establezca como verdadera en la asignación, elimine tv (lo que da como resultado una utilidad de 0 para el jugador de la columna en todas partes). 2.",
        "Entonces, para cada variable v que se establezca como verdadera en la asignación, elimine s2 +v usando s1 +v (lo cual es posible porque tv ha sido eliminado, y porque t1 no ha sido eliminado (aún)). 3.",
        "Ahora elimina t1 (lo cual da como resultado una utilidad de 0 para el jugador de la columna). 4.",
        "A continuación, para cada variable v que se establezca como falso en la asignación, elimine s2 −v usando s1 −v (lo cual es posible porque t1 ha sido eliminado, y porque tv no ha sido eliminado (aún)). 5.",
        "Para cada cláusula c que tenga la variable correspondiente a uno de sus literales positivos l = +v establecido como verdadero en la asignación, elimine tc utilizando tc,l (lo cual es posible porque s2 l ha sido eliminado, y s2 c no ha sido eliminado (aún)). 6.",
        "Para cada cláusula c en la que la variable correspondiente a uno de sus literales negativos l = −v se establece en falso en la asignación, elimine tc utilizando tc,l 91 (lo cual es posible porque s2 l ha sido eliminado, y s2 c no ha sido eliminado (aún)). 7.",
        "Debido a que la tarea cumplió con la fórmula, todos los tc han sido eliminados ahora.",
        "Por lo tanto, podemos eliminar s2 0 = σ∗ r usando s1 0.",
        "Se deduce que hay una solución para la instancia IWD-STRATEGY-ELIMINATION.",
        "Ahora supongamos que hay una solución para la instancia IWD-STRATEGYELIMINATION.",
        "Por el Lema 1, podemos asumir que todas las dominancias son por estrategias puras.",
        "Primero observamos que solo s1 0 puede eliminar s2 0 = σ∗ r, porque es la única otra estrategia que le da al jugador de la fila una utilidad de 1 contra t1 0, y t1 0 es ineliminable.",
        "Sin embargo, dado que s2 0 tiene un mejor rendimiento que s1 0 contra las estrategias de tc, se deduce que todas las estrategias de tc deben ser eliminadas.",
        "Para cada c ∈ C, la estrategia tc solo puede ser eliminada por una de las estrategias tc,l (con el mismo c), ya que estas son las únicas otras estrategias que le dan al jugador de la columna una utilidad de 1 contra s1 c, y s1 c es ineliminable.",
        "Pero, para que algún tc,l elimine tc, primero se debe eliminar s2 l.",
        "Solo s1 l puede eliminar s2 l, porque es la única otra estrategia que le otorga al jugador de la fila una utilidad de 1 contra tl, y tl es ineliminable.",
        "A continuación mostramos que para cada v ∈ V solo se puede eliminar uno de s2 +v, s2 −v.",
        "Esto se debe a que para que s1 +v elimine s2 +v, tv debe haber sido eliminado y t1, no (por lo tanto, tv debe ser eliminado antes que t1); pero para que s1 -v elimine s2 -v, t1 debe haber sido eliminado y tv, no (por lo tanto, t1 debe ser eliminado antes que tv).",
        "Por lo tanto, establezca v en verdadero si s2 + v es eliminado, y en falso de lo contrario. Debido a lo anterior, para cada cláusula c, uno de los s2 con l ∈ c debe ser eliminado, por lo que se deduce que esta es una asignación satisfactoria para la instancia de satisfactibilidad.",
        "Usando el Teorema 1, ahora es (relativamente) fácil demostrar que IWD-UNIQUE-SOLUTION también es NP-completo bajo las mismas restricciones.",
        "Teorema 2.",
        "IWD-UNIQUE-SOLUTION es NP-completo, incluso con 2 jugadores, y con 0 y 1 siendo las únicas utilidades que ocurren en la matriz, ya sea que se permita o no la dominancia por estrategias mixtas.",
        "Prueba.",
        "Nuevamente, el problema está en NP porque podemos elegir de manera no determinista la secuencia de eliminaciones y verificar si es correcta.",
        "Para demostrar la NP-dificultad, reducimos una instancia arbitraria de IWD-STRATEGY-ELIMINATION a la siguiente instancia de IWD-UNIQUE-SOLUTION.",
        "Que todas las estrategias de cada jugador de la instancia original formen parte de la nueva instancia, y que las utilidades resultantes de los jugadores al jugar un par de estas estrategias sean las mismas.",
        "Añadimos tres estrategias adicionales σ1 r , σ2 r , σ3 r para el jugador de fila, y tres estrategias adicionales σ1 c , σ2 c , σ3 c para el jugador de columna.",
        "Que las utilidades adicionales sean las siguientes: • ur(σr, σj c) = 1 para todo σr /∈ {σ1 r , σ2 r , σ3 r } y j ∈ {2, 3}; • ur(σi r, σc) = 1 para todo i ∈ {1, 2, 3} y σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 para todo i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • y la utilidad de los jugadores de fila es 0 en todos los demás casos que involucren una nueva estrategia. • uc(σ3 r , σc) = 1 para todo σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 para todo j ∈ {2, 3} (σ∗ r es la estrategia a ser eliminada en la instancia original); • uc(σi r, σ1 c ) = 1 para todo i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • y la utilidad de los jugadores de columna es 0 en todos los demás casos que involucren una nueva estrategia.",
        "Procedemos a demostrar que las dos instancias son equivalentes.",
        "Primero supongamos que existe una solución para la instancia original de IWDSTRATEGY-ELIMINATION.",
        "Luego, realiza la misma secuencia de eliminaciones para eliminar σ∗ r en la nueva instancia IWD-UNIQUE-SOLUTION. (Esto es posible porque en cualquier etapa, cualquier dominancia débil para el jugador de fila en la instancia original sigue siendo una dominancia débil en la nueva instancia, ya que las utilidades de las dos estrategias para el jugador de fila son las mismas cuando el jugador de columna juega una de las nuevas estrategias; y lo mismo ocurre para el jugador de columna).",
        "Una vez que σ∗ r sea eliminado, permita que σ1 c elimine a σ2 c. (Se desempeña mejor contra σ2 r.)",
        "Entonces, dejemos que σ1 r elimine todas las demás estrategias restantes para el jugador de la fila. (Siempre tiene un mejor desempeño contra σ1 c o σ3 c.)",
        "Finalmente, σ1 c es la mejor respuesta única contra σ1 r entre las estrategias restantes de los jugadores de columna, así que permitamos que elimine todas las demás estrategias restantes para el jugador de columna.",
        "Por lo tanto, existe una solución para la instancia IWD-UNIQUE-SOLUTION.",
        "Ahora supongamos que existe una solución para la instancia IWD-UNIQUESOLUTION.",
        "Por el Lema 1, podemos asumir que todas las dominancias son por estrategias puras.",
        "Mostraremos que ninguna de las nuevas estrategias (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) puede eliminar a otra estrategia, ni ser eliminada antes de que σ∗ r sea eliminada.",
        "Por lo tanto, debe haber una secuencia de eliminaciones que termine con la eliminación de σ∗ r, la cual no involucre ninguna de las nuevas estrategias y, por lo tanto, sea una secuencia válida de eliminaciones en el juego original (porque todas las estrategias originales tienen el mismo rendimiento contra cada nueva estrategia).",
        "Ahora demostramos que esto es cierto agotando todas las posibilidades para la primera eliminación antes de que se elimine σ∗ r que implica una nueva estrategia.",
        "Ninguno de los σi r puede ser eliminado por un σr /∈ {σ1 r , σ2 r , σ3 r}, porque los σi r tienen un mejor desempeño contra σ1 c. σ1 r no puede eliminar ninguna otra estrategia, porque siempre tiene un desempeño inferior contra σ2 c. σ2 r y σ3 r son equivalentes desde la perspectiva de los jugadores de fila (y por lo tanto no pueden eliminarse entre sí), y no pueden eliminar ninguna otra estrategia porque siempre tienen un desempeño inferior contra σ3 c.",
        "Ninguno de los σj c puede ser eliminado por un σc /∈ {σ1 c , σ2 c , σ3 c}, porque los σj c siempre tienen un mejor desempeño contra σ1 r o σ2 r. σ1 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ∗ r o σ3 r. σ2 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ2 r o σ3 r. σ3 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ1 r o σ3 r.",
        "Por lo tanto, existe una solución para la instancia IWDSTRATEGY-ELIMINATION.",
        "Una versión ligeramente más débil de la parte del Teorema 2 que concierne la dominancia solo por estrategias puras es el resultado principal de Gilboa et al. [7]. (Además de no demostrar el resultado para la dominancia por estrategias mixtas, el resultado original era más débil porque requería utilidades {0, 1, 2, 3, 4, 5, 6, 7, 8} en lugar de solo {0, 1} (y debido a esto, nuestro Lema 1 no se puede aplicar para obtener el resultado para estrategias mixtas).) 5. DOMINANCIA (ITERADA) USANDO ESTRATEGIAS MIXTAS CON SOPORTES PEQUEÑOS Al demostrar que una estrategia es dominada por una estrategia mixta, hay varias razones para preferir exhibir una estrategia dominante que coloque probabilidad positiva en la menor cantidad posible de estrategias puras.",
        "Primero, esto reducirá el número de bits necesarios para especificar la estrategia dominante (y así la prueba de dominancia se puede comunicar más rápido): si la estrategia mixta dominante coloca probabilidad positiva en solo k estrategias, entonces se puede especificar usando k números reales para las probabilidades, más k log m (donde m es el número de estrategias para el jugador en consideración) bits para indicar qué estrategias se utilizan.",
        "Segundo, la prueba de dominancia será más clara: para una estrategia mixta dominante, es típicamente (siempre en el caso de dominancia estricta) posible distribuir parte de la probabilidad en cualquier estrategia pura no utilizada y aún así tener una estrategia dominante, pero esto oscurece cuáles estrategias puras son las clave para hacer que la estrategia mixta sea dominante.",
        "Tercero, debido a que el argumento para eliminar la estrategia dominada es más simple y fácil de entender, es más probable que sea aceptado.",
        "En cuarto lugar, el nivel de neutralidad al riesgo requerido para que el argumento funcione se reduce, al menos en el caso extremo donde se puede exhibir la dominancia de una única estrategia pura (no se requiere neutralidad al riesgo aquí).",
        "Esto motiva el siguiente problema.",
        "Definición 4 (CONJUNTO DOMINANTE MÍNIMO).",
        "Se nos dan las utilidades de los jugadores de fila de un juego en forma normal, una estrategia distinguida σ∗ para el jugador de fila, una especificación de si la dominancia debe ser estricta o débil, y un número k. Se nos pregunta si existe una estrategia mixta σ para el jugador de fila que coloque probabilidad positiva en como máximo k estrategias puras, y domine a σ∗ en el sentido requerido.",
        "Lamentablemente, este problema es NP-completo.",
        "Teorema 3.",
        "El problema del CONJUNTO DOMINANTE MÍNIMO es NP-completo, tanto para dominancia estricta como para dominancia débil.",
        "Prueba.",
        "El problema está en NP porque podemos elegir de manera no determinista un conjunto de a lo sumo k estrategias para dar probabilidad positiva, y decidir si podemos dominar a σ∗ con estas k estrategias como se describe en la Proposición 1.",
        "Para demostrar la NP-dificultad, reducimos una instancia arbitraria de COBERTURA-DE-CONJUNTOS (dado un conjunto S, subconjuntos S1, S2, . . . , Sr, y un número t, ¿puede S ser cubierto por a lo sumo t de los subconjuntos?) a la siguiente instancia de CONJUNTO-DOMINANTE-MÍNIMO.",
        "Para cada elemento s ∈ S, hay una estrategia pura σs para el jugador de la columna.",
        "Para cada subconjunto Si, hay una estrategia pura σSi para el jugador de la fila.",
        "Finalmente, está la distinguida estrategia pura σ∗ para el jugador de la fila.",
        "Las utilidades de los jugadores de la fila son las siguientes: ur(σSi , σs) = t + 1 si s ∈ Si; ur(σSi , σs) = 0 si s /∈ Si; ur(σ∗ , σs) = 1 para todo s ∈ S. Finalmente, dejamos que k = t. Ahora procedemos a demostrar que las dos instancias son equivalentes.",
        "Primero supongamos que existe una solución para la instancia de COBERTURA-CONJUNTO.",
        "Sin pérdida de generalidad, podemos asumir que hay exactamente k subconjuntos en la cobertura.",
        "Entonces, para cada Si que esté en la cobertura, dejemos que la estrategia dominante σ coloque exactamente 1 k de probabilidad en la estrategia pura correspondiente σSi.",
        "Ahora, si dejamos que n(s) sea el número de subconjuntos en la cobertura que contienen a s (observamos que n(s) ≥ 1), entonces para cada estrategia σs del jugador de la columna, la utilidad esperada de los jugadores de la fila al jugar σ cuando el jugador de la columna está jugando σs es u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs).",
        "Entonces, σ domina estrictamente (y por lo tanto también débilmente) a σ∗, y existe una solución para la instancia del conjunto de dominación mínimo.",
        "Ahora supongamos que existe una solución para la instancia de CONJUNTO-DOMINANTE-MÍNIMO.",
        "Considera las estrategias puras (a lo sumo k) de la forma σSi en las que la estrategia mixta dominante σ asigna probabilidad positiva, y deja que T sea la colección de los subconjuntos correspondientes Si.",
        "Sostenemos que T es una cubierta.",
        "Supongamos que hay algún s ∈ S que no está en ninguno de los subconjuntos en T.",
        "Entonces, si el jugador de la columna juega σs, el jugador de la fila (cuando juega σ) siempre recibirá una utilidad de 0, en contraposición a la utilidad de 1 que el jugador de la fila recibiría al jugar σ∗, contradiciendo el hecho de que σ domina a σ∗ (ya sea esta dominancia débil o estricta).",
        "Se deduce que existe una solución para la instancia de COBERTURA-DE-CONJUNTOS.",
        "Por otro lado, si requerimos que la estrategia dominante solo coloque probabilidad positiva en un número muy pequeño de estrategias puras, entonces una vez más resulta fácil verificar si una estrategia está dominada.",
        "Específicamente, para determinar si la estrategia σ∗ del jugador está dominada por una estrategia que coloca probabilidad positiva solo en k estrategias puras, simplemente podemos verificar, para cada subconjunto de k de las estrategias puras del jugador, si hay una estrategia que coloca probabilidad positiva solo en esas k estrategias y domina a σ∗, utilizando la Proposición 1.",
        "Esto solo requiere O(|Σi|k) comprobaciones.",
        "Por lo tanto, si k es una constante, esto constituye un algoritmo de tiempo polinómico.",
        "Una pregunta natural que surge a continuación es si la dominancia estricta iterada sigue siendo computacionalmente fácil cuando se requiere que las estrategias dominantes coloquen una probabilidad positiva en como máximo k estrategias puras, donde k es una constante pequeña. (Ya hemos demostrado en la Sección 4 que la dominancia débil iterada es difícil incluso cuando k = 1, es decir, solo se permite la dominancia por estrategias puras).",
        "Por supuesto, si la dominancia estricta iterada fuera independiente del camino bajo esta restricción, la facilidad computacional seguiría como lo hizo en la Sección 4.",
        "Sin embargo, resulta que esto no es así.",
        "Observación 1.",
        "Si restringimos las estrategias dominantes para asignar probabilidad positiva a lo sumo a dos estrategias puras, la dominancia estricta iterada se vuelve dependiente del camino.",
        "Prueba.",
        "Considera el siguiente juego: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Sea (i, j) el resultado en el que el jugador de la fila juega en la fila i y el jugador de la columna juega en la columna j.",
        "Dado que (1, 1), (2, 2) y (4, 3) son todos equilibrios de Nash, ninguna de las estrategias puras de los jugadores de columna será eliminada, al igual que las filas 1, 2 y 4.",
        "Ahora observamos que la aleatorización uniforme entre las filas 1 y 2 domina a la fila 3, y la aleatorización uniforme entre las filas 3 y 4 domina a la fila 5.",
        "Sin embargo, si eliminamos la fila 3 primero, se vuelve imposible dominar la fila 5 sin aleatorizar al menos 3 estrategias puras.",
        "De hecho, la dominancia estricta iterada resulta ser difícil incluso cuando k = 3.",
        "Teorema 4.",
        "Si restringimos las estrategias dominantes para colocar una probabilidad positiva en como máximo tres estrategias puras, se vuelve NP-completo decidir si una estrategia dada puede ser eliminada usando dominancia estricta iterada. 93 Prueba.",
        "El problema está en NP porque, dado una secuencia de estrategias a ser eliminadas, podemos verificar en tiempo polinómico si esta es una secuencia válida de eliminaciones (para cualquier estrategia a ser eliminada, podemos verificar, para cada subconjunto de tres otras estrategias, si hay una estrategia que coloca probabilidad positiva solo en estas tres estrategias que domina a la estrategia a ser eliminada, utilizando la Proposición 1).",
        "Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto no vacío de cláusulas C sobre un conjunto no vacío de variables V, con literales correspondientes L = {+v : v ∈ V} ∪ {−v : v ∈ V}) al siguiente juego de dos jugadores.",
        "Para cada variable v ∈ V, el jugador de la fila tiene estrategias s+v, s−v, s1 v, s2 v, s3 v, s4 v, y el jugador de la columna tiene estrategias t1 v, t2 v, t3 v, t4 v. Para cada cláusula c ∈ C, el jugador de la fila tiene una estrategia sc, y el jugador de la columna tiene una estrategia tc, así como, para cada literal l que ocurre en c, una estrategia adicional tl c. El jugador de la fila tiene dos estrategias adicionales s1 y s2. (s2 es la estrategia que estamos buscando eliminar).",
        "Finalmente, el jugador de la columna tiene una estrategia adicional t1.",
        "La función de utilidad para el jugador de la fila se da de la siguiente manera (donde ε es algún número suficientemente pequeño): • ur(s+v, tj v) = 4 si j ∈ {1, 2}, para todo v ∈ V; • ur(s+v, tj v) = 1 si j ∈ {3, 4}, para todo v ∈ V; • ur(s−v, tj v) = 1 si j ∈ {1, 2}, para todo v ∈ V; • ur(s−v, tj v) = 4 si j ∈ {3, 4}, para todo v ∈ V; • ur(s+v, t) = ur(s−v, t) = 0 para todo v ∈ V y t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 para todo v ∈ V e i ∈ {1, 2, 3, 4}; • ur(si v, t) = para todo v ∈ V, i ∈ {1, 2, 3, 4}, y t = ti v; • ur(sc, tc) = 2 para todo c ∈ C; • ur(sc, t) = 0 para todo c ∈ C y t = tc; • ur(s1, t1) = 1 + ε; • ur(s1, t) = para todo t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 para todo c ∈ C; • ur(s2, t) = 0 para todo t /∈ {t1} ∪ {tc : c ∈ C}.",
        "La función de utilidad para el jugador de la columna se da de la siguiente manera: • uc(si v, ti v) = 1 para todo v ∈ V e i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 para todo v ∈ V, i ∈ {1, 2, 3, 4}, y s = si v; • uc(sc, tc) = 1 para todo c ∈ C; • uc(sl, tc) = 1 para todo c ∈ C y l ∈ L que ocurre en c; • uc(s, tc) = 0 para todo c ∈ C y s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + para todo c ∈ C; • uc(sl, tl c) = 1 + para todo c ∈ C y l = l que ocurre en c; • uc(s, tl c) = para todo c ∈ C y s /∈ {sc} ∪ {sl : l ∈ c, l = l}; • uc(s2, t1) = 1; • uc(s, t1) = 0 para todo s = s2.",
        "Ahora demostramos que las dos instancias son equivalentes.",
        "Primero, supongamos que hay una solución para la instancia de satisfactibilidad.",
        "Entonces, considera la siguiente secuencia de eliminaciones en nuestro juego: 1.",
        "Para cada variable v que se establezca como verdadera en la asignación satisfactoria, elimine s+v con la estrategia mixta σr que coloca probabilidad 1/3 en s−v, probabilidad 1/3 en s1 v y probabilidad 1/3 en s2 v. (La utilidad esperada de jugar σr contra t1 v o t2 v es 14/3 > 4; contra t3 v o t4 v, es 4/3 > 1; y contra cualquier otra cosa es 2/3 > 0.",
        "Por lo tanto, la dominancia es válida.",
        "De manera similar, para cada variable v que se establezca como falso en la asignación satisfactoria, elimine s−v con la estrategia mixta σr que coloca probabilidad 1/3 en s+v, probabilidad 1/3 en s3 v, y probabilidad 1/3 en s4 v. (La utilidad esperada de jugar σr contra t1 v o t2 v es 4/3 > 1; contra t3 v o t4 v, es 14/3 > 4; y contra cualquier otra cosa es 2/3 > 0.",
        "Por lo tanto, la dominancia es válida.",
        "Para cada c ∈ C, elimine tc con cualquier tl c para el cual l se haya establecido como verdadero en la asignación satisfactoria. (Esta es una dominancia válida porque tl c funciona mejor que tc contra cualquier estrategia que no sea sl, y eliminamos sl en el paso 1 o en el paso 2.) 4.",
        "Finalmente, elimina s2 con s1. (Esta es una dominancia válida porque s1 tiene un mejor rendimiento que s2 contra cualquier estrategia que no esté en {tc : c ∈ C}, la cual eliminamos en el paso 3.)",
        "Por lo tanto, hay un camino de eliminación que elimina s2.",
        "Ahora, supongamos que hay un camino de eliminación que elimina s2.",
        "La estrategia que eventualmente domina a s2 debe colocar la mayor parte de su probabilidad en s1, ya que s1 es la única otra estrategia que se desempeña bien contra t1, la cual no puede ser eliminada antes que s2.",
        "Sin embargo, s1 tiene un rendimiento significativamente peor que s2 contra cualquier estrategia tc con c ∈ C, por lo que se deduce que todas estas estrategias deben ser eliminadas primero.",
        "Cada estrategia tc solo puede ser eliminada por una estrategia que coloque la mayor parte de su peso en las estrategias correspondientes tl c con l ∈ c, ya que son las únicas otras estrategias que funcionan bien contra sc, las cuales no pueden ser eliminadas antes de tc.",
        "Sin embargo, cada estrategia tl c funciona significativamente peor que tc contra sl, por lo que se deduce que para cada cláusula c, para uno de los literales l que aparecen en ella, sl debe ser eliminado primero.",
        "Ahora, las estrategias de la forma tj v nunca serán eliminadas porque son las únicas mejores respuestas a las estrategias correspondientes sj v (que, a su vez, son las mejores respuestas a las tj v correspondientes).",
        "Como resultado, si la estrategia s+v (respectivamente, s−v) es eliminada, entonces su estrategia opuesta s−v (respectivamente, s+v) ya no puede ser eliminada, por la siguiente razón.",
        "No hay otra estrategia pura restante que obtenga una utilidad significativa contra más de una de las estrategias t1 v, t2 v, t3 v, t4 v, pero s−v (respectivamente, s+v) obtiene una utilidad significativa contra las 4, y por lo tanto no puede ser dominada por una estrategia mixta que coloque una probabilidad positiva en como máximo 3 estrategias.",
        "Se deduce que para cada v ∈ V, a lo sumo una de las estrategias s+v, s−v es eliminada, de tal manera que para cada cláusula c, para uno de los literales l que aparece en ella, sl debe ser eliminada.",
        "Pero luego, establecer todas las literales l de manera que sl sea eliminado a verdadero constituye una solución a la instancia de satisfactibilidad.",
        "En la siguiente sección, regresamos al escenario donde no hay restricción en el número de estrategias puras en las que una estrategia mixta dominante puede colocar probabilidad positiva. 6. DOMINANCIA (ITERADA) EN JUEGOS BAYESIANOS Hasta ahora, nos hemos enfocado en juegos de forma normal que están representados de manera plana (es decir, cada entrada de la matriz se da explícitamente).",
        "Sin embargo, para muchos juegos, la representación plana es demasiado grande para escribirse explícitamente, y en su lugar, se necesita utilizar alguna representación que aproveche la estructura del juego.",
        "Los juegos bayesianos, además de ser de interés por sí mismos, pueden considerarse como una representación estructurada útil de los juegos en forma normal, y los estudiaremos en esta sección.",
        "En un juego bayesiano, cada jugador recibe primero información de preferencia de manera privada (el tipo de jugador) de una distribución, la cual determina la utilidad que ese jugador recibe por cada resultado del juego (es decir, el vector de acciones jugadas en el juego).",
        "Después de recibir este tipo, el jugador realiza una acción basada en él. Definición 7.",
        "Un juego bayesiano está dado por un conjunto de jugadores {1, 2, . . . , n}; y, para cada jugador i, un conjunto (finito) de acciones Ai, un espacio de tipos (finito) Θi con una distribución de probabilidad πi sobre él, y una función de utilidad ui : Θi × A1 × A2 × . . . × An → R (donde ui(θi, a1, a2, . . . , an) denota la utilidad del jugador i cuando su tipo es θi y cada jugador j juega la acción aj).",
        "Una estrategia pura en un juego bayesiano es una asignación de tipos a acciones, σi: Θi → Ai, donde σi(θi) denota la acción que el jugador i elige para el tipo θi.",
        "Cualquier vector de estrategias puras en un juego bayesiano define una utilidad (esperada) para cada jugador, y por lo tanto podemos traducir un juego bayesiano en un juego en forma normal.",
        "En este juego en forma normal, las nociones de dominancia y dominancia iterada se definen como antes.",
        "Sin embargo, la representación en forma normal del juego es exponencialmente más grande que la representación bayesiana, ya que cada jugador i tiene |Ai||Θi| estrategias puras distintas.",
        "Por lo tanto, cualquier algoritmo para juegos bayesianos que dependa de expandir el juego a su forma normal requerirá tiempo exponencial.",
        "Específicamente, nuestros resultados de facilidad para juegos en forma normal no se transfieren directamente a esta configuración.",
        "De hecho, resulta que verificar si una estrategia está dominada por una estrategia pura es difícil en juegos bayesianos.",
        "Teorema 5.",
        "En un juego bayesiano, es NP-completo decidir si una estrategia pura dada σr : Θr → Ar está dominada por alguna otra estrategia pura (tanto para la dominancia estricta como débil), incluso cuando la distribución de los jugadores de fila sobre los tipos es uniforme.",
        "Prueba.",
        "El problema está en NP porque es fácil verificar si una estrategia dominante candidata es realmente una estrategia dominante.",
        "Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto de cláusulas C utilizando variables de V) al siguiente juego bayesiano.",
        "Que el conjunto de acciones de los jugadores de la fila sea Ar = {t, f, 0} y que el conjunto de acciones de los jugadores de la columna sea Ac = {ac : c ∈ C}.",
        "Que el conjunto de tipos de jugadores de fila sea Θr = {θv : v ∈ V}, con una distribución πr que es uniforme.",
        "Que la función de utilidad de los jugadores de la fila sea la siguiente: • ur(θv, 0, ac) = 0 para todo v ∈ V y c ∈ C; • ur(θv, b, ac) = |V | para todo v ∈ V, c ∈ C y b ∈ {t, f} tal que establecer v como b satisface c; • ur(θv, b, ac) = −1 para todo v ∈ V, c ∈ C y b ∈ {t, f} tal que establecer v como b no satisface c. En general, un jugador también puede recibir una señal sobre las preferencias de los otros jugadores, pero aquí no nos ocuparemos de eso.",
        "Que la estrategia pura que se va a dominar sea aquella que juega 0 para cada tipo.",
        "Mostramos que la estrategia está dominada por una estrategia pura si y solo si hay una solución a la instancia de satisfactibilidad.",
        "Primero, supongamos que hay una solución para la instancia de satisfactibilidad.",
        "Entonces, sea σd r dado por: σd r (θv) = t si v se establece como verdadero en la solución de la instancia de satisfactibilidad, y σd r (θv) = f en caso contrario.",
        "Entonces, en contra de cualquier acción ac realizada por el jugador de la columna, existe al menos un tipo θv tal que o bien +v ∈ c y σd r (θv) = t, o bien −v ∈ c y σd r (θv) = f. Por lo tanto, la utilidad esperada de los jugadores de la fila contra la acción ac es al menos |V| |V| − |V|−1 |V| = 1 |V| > 0.",
        "Entonces, σd r es una estrategia dominante.",
        "Ahora, supongamos que existe una estrategia pura dominante σd r.",
        "Esta estrategia dominante debe jugar t o f al menos para un tipo.",
        "Por lo tanto, en contra de cualquier ac por el jugador de la columna, debe haber al menos algún tipo θv para el cual ur(θv, σd r (θv), ac) > 0.",
        "Es decir, debe haber al menos una variable v tal que al establecer v en σd r (θv) satisfaga c. Pero entonces, al establecer cada v en σd r (θv) deben satisfacerse todas las cláusulas.",
        "Entonces, existe una asignación satisfactoria.",
        "Sin embargo, resulta que podemos modificar los programas lineales de la Proposición 1 para obtener un algoritmo de tiempo polinómico para verificar si una estrategia está dominada por una estrategia mixta en juegos bayesianos.",
        "Teorema 6.",
        "En un juego bayesiano, se puede decidir en tiempo polinómico si una estrategia dada (posiblemente mixta) σr está dominada por alguna otra estrategia mixta, utilizando programación lineal (tanto para dominancia estricta como débil).",
        "Prueba.",
        "Podemos modificar los programas lineales presentados en la Proposición 1 de la siguiente manera.",
        "Para la dominancia estricta, asumiendo nuevamente sin pérdida de generalidad que todas las utilidades en el juego son positivas, utilice el siguiente programa lineal (en el cual pσr r (θr, ar) es la probabilidad de que σr, la estrategia a ser dominada, coloque en ar para el tipo θr): minimizar θr∈Θr ar∈Ar pr(ar) tal que para cualquier ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); para cualquier θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1.",
        "Suponiendo que π(θr) > 0 para todo θr ∈ Θr, este programa devolverá un valor objetivo menor que |Θr| si y solo si σr está estrictamente dominado, mediante un razonamiento similar al realizado en la Proposición 1.",
        "Para la dominancia débil, utiliza el siguiente programa lineal: maximizar ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) tal que para cualquier ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); para cualquier θr ∈ Θr, ar∈Ar pr(θr, ar) = 1.",
        "Este programa devolverá un valor objetivo mayor que 0 si y solo si σr está débilmente dominado, mediante un razonamiento similar al realizado en la Proposición 1.",
        "Ahora pasamos al dominio iterado en juegos bayesianos.",
        "Ingenuamente, uno podría argumentar que la dominancia iterada en juegos bayesianos de 95 siempre requiere un número exponencial de pasos cuando se puede eliminar una fracción significativa de las estrategias puras de los juegos, ya que hay un número exponencial de estrategias puras.",
        "Sin embargo, este no es un argumento muy sólido porque muchas veces podemos eliminar exponencialmente muchas estrategias puras en un solo paso.",
        "Por ejemplo, si para algún tipo θr ∈ Θr tenemos, para todo ac ∈ Ac, que u(θr, a1 r, ac) > u(θr, a2 r, ac), entonces cualquier estrategia pura para el jugador de la fila que juega la acción a2 r para el tipo θr está dominada (por la estrategia que juega la acción a1 r para el tipo θr en su lugar) - y hay exponencialmente muchas (|Ar||Θr|−1) tales estrategias.",
        "Por lo tanto, es concebible que solo necesitemos un número polinomial de eliminaciones de colecciones de estrategias de un jugador.",
        "Sin embargo, el siguiente teorema muestra que este no es el caso, al dar un ejemplo donde se requiere un número exponencial de iteraciones (es decir, alternancias entre los jugadores en la eliminación de estrategias). (Enfatizamos que este no es un resultado sobre complejidad computacional).",
        "Teorema 7.",
        "Incluso en juegos bayesianos simétricos de 3 jugadores, la dominancia iterada por estrategias puras puede requerir un número exponencial de iteraciones (tanto para la dominancia estricta como débil), incluso con solo tres acciones por jugador.",
        "Prueba.",
        "Que cada jugador i ∈ {1, 2, 3} tenga n + 1 tipos θ1 i , θ2 i , . . . , θn+1 i.",
        "Que cada jugador i tenga 3 acciones ai, bi, ci, y que la función de utilidad de cada jugador esté definida de la siguiente manera. (En lo siguiente, i + 1 e i + 2 son abreviaturas de i + 1 (mod 3) e i + 2 (mod 3) cuando se utilizan como índices de jugador.",
        "Además, −∞ puede ser reemplazado por un número suficientemente negativo.",
        "Finalmente, δ y deberían elegirse muy pequeños (incluso en comparación con 2−(n+1)), y deberían ser más del doble de grandes que δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 para si+1 = ci+1 o si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − para si+1 = ai+1 y si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ para si+1 = ai+1 o si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ para todos los si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ para todos los si+1, si+2 cuando j > 1; • ui(θj i ; bi, si+1, si+2) = − para todos los si+1, si+2 cuando j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 para todos los si+1 cuando j > 1; • ui(θj i ; ci, si+1, si+2) = δ− para todos los si+1 y si+2 = ci+2 cuando j > 1.",
        "Que la distribución sobre los tipos de cada jugador esté dada por p(θj i ) = 2−j (con la excepción de que p(θ2 i ) = 2−2 +2−(n+1) ).",
        "Estaremos interesados en eliminar estrategias de la siguiente forma: jugar bi para el tipo θ1 i, y jugar bi o ci de lo contrario.",
        "Dado que la función de utilidad es la misma para cualquier tipo θj i con j > 1, estas estrategias están efectivamente definidas por la probabilidad total que asignan a ci,8, que es t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j donde tj i = 1 si el jugador i 8. Observa que las estrategias siguen siendo estrategias puras; la probabilidad asignada a una acción por una estrategia aquí es simplemente la suma de las probabilidades de los tipos para los cuales la estrategia elige esa acción. juega ci para el tipo θj i, y 0 en caso contrario.",
        "Esta probabilidad es diferente para cualquier par de estrategias diferentes de la forma dada, y tenemos exponencialmente muchas estrategias diferentes de la forma dada.",
        "Para cualquier probabilidad q que pueda expresarse como t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (con todos los tj ∈ {0, 1}), dejemos que σi(q) denote la estrategia (única) de la forma dada para el jugador i que coloca una probabilidad total de q en ci.",
        "Cualquier estrategia que juegue ci para el tipo θ1 i o ai para algún tipo θj i con j > 1 puede ser eliminada inmediatamente.",
        "Mostraremos que, después de eso, debemos eliminar primero las estrategias σi(q) con q alto, trabajando lentamente hacia abajo hasta aquellas con q más bajo.",
        "Reclamo 1: Si σi+1(q) y σi+2(q) aún no han sido eliminados, y q < q, entonces σi(q) aún no puede ser eliminado.",
        "Prueba: Primero, demostramos que ninguna estrategia σi(q) puede eliminar a σi(q).",
        "Contra σi+1(q), σi+2(q), la utilidad de jugar σi(p) es − + p · δ − p · q /2.",
        "Por lo tanto, cuando q = 0, es mejor establecer p lo más alto posible (y observamos que σi+1(0) y σi+2(0) no han sido eliminados), pero cuando q > 0, es mejor establecer p lo más bajo posible porque δ < q /2.",
        "Por lo tanto, ya sea que q > q o q < q, σi(q) siempre será estrictamente mejor que σi(q) contra algunas estrategias restantes de los oponentes.",
        "Por lo tanto, ninguna estrategia σi(q) puede eliminar a σi(q).",
        "Las únicas otras estrategias puras que podrían dominar a σi(q) son estrategias que juegan ai para el tipo θ1 i, y bi o ci para todos los demás tipos.",
        "Tomemos tal estrategia y supongamos que juega c con probabilidad p. Contra σi+1(q), σi+2(q) (que aún no han sido eliminadas), la utilidad de jugar esta estrategia es −(q)2 /2 − /2 + p · δ − p · q /2.",
        "Por otro lado, jugar σi(q) da como resultado − + q · δ − q · q /2.",
        "Dado que q > q, tenemos −(q )2 /2 < −q · q /2, y dado que δ y son pequeños, se deduce que σi(q) recibe una utilidad mayor.",
        "Por lo tanto, ninguna estrategia domina a σi(q), lo que demuestra la afirmación.",
        "Afirmación 2: Si para todo q > q, σi+1(q) y σi+2(q) han sido eliminados, entonces σi(q) puede ser eliminado.",
        "Prueba: Considera la estrategia para el jugador i que juega ai para el tipo θ1 i, y bi para todos los demás tipos (llamemos a esta estrategia σi); afirmamos que σi domina a σi(q).",
        "Primero, si alguno de los otros jugadores k juega ak para θ1 k, entonces σi se desempeña mejor que σi(q) (que recibe −∞ en algunos casos).",
        "Dado que las estrategias para el jugador k que juega ck para el tipo θ1 k, o ak para algún tipo θj k con j > 1, ya han sido eliminadas, todo lo que queda por comprobar es que σi sea mejor que σi(q) siempre que los otros dos jugadores jueguen estrategias de la siguiente forma: jugar bk para el tipo θ1 k, y jugar uno de bk o ck en caso contrario.",
        "Observamos que entre estas estrategias, no queda ninguna que coloque una probabilidad mayor que q en ck.",
        "Si dejamos que qk denote la probabilidad con la que el jugador k juega ck, la utilidad esperada de jugar σi es −qi+1 · qi+2/2 − /2.",
        "Por otro lado, la utilidad de jugar σi(q) es − + q · δ − q · qi+2/2.",
        "Dado que qi+1 ≤ q, la diferencia entre estas dos expresiones es al menos /2 − δ, la cual es positiva.",
        "Se deduce que σi domina a σi(q).",
        "A partir de la Reclamación 2, se deduce que todas las estrategias de la forma σi(q) serán eliminadas eventualmente.",
        "Sin embargo, la Reclamación 1 muestra que no podemos avanzar y eliminar múltiples estrategias de este tipo para un jugador, a menos que al menos otro jugador mantenga simultáneamente las estrategias eliminadas: cada vez que se elimina un σi(q) tal que σi+1(q) y σi+2(q) aún no han sido eliminados, necesitamos eliminar una de las dos últimas estrategias antes de que se pueda eliminar cualquier σi(q) con q > q, es decir, necesitamos alternar entre jugadores.",
        "Dado que hay exponencialmente muchas estrategias de la forma σi(q), se sigue que la eliminación iterada requerirá exponencialmente muchas iteraciones para completarse. Por lo tanto, un algoritmo eficiente para la dominancia iterada (estricta o débil) por estrategias puras en juegos bayesianos, si existe, debe ser capaz de realizar (al menos parte de) muchas iteraciones en un solo paso del algoritmo (porque si cada paso solo realizara una sola iteración, necesitaríamos exponencialmente muchos pasos).",
        "Interesantemente, Knuth et al. [11] argumentan que la dominancia iterada parece ser un problema inherentemente secuencial (a la luz de su resultado de que la dominancia muy débil iterada es P-completa, es decir, aparentemente no paralelizable de manera eficiente), lo que sugiere que la agregación de muchas iteraciones puede ser difícil. 7.",
        "CONCLUSIONES Aunque el concepto de equilibrio de Nash se estudia cada vez más intensamente en nuestra comunidad, el concepto quizás más elemental de dominancia (iterada) ha recibido mucha menos atención.",
        "En este artículo estudiamos varios aspectos computacionales de este concepto.",
        "Primero estudiamos tanto la dominancia estricta como la débil (no iterada), y demostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta puede hacerse en tiempo polinómico utilizando la resolución de un único programa lineal.",
        "Luego pasamos a la dominancia iterada.",
        "Mostramos que determinar si existe algún camino que elimine una estrategia dada es NP-completo con dominancia débil iterada.",
        "Esto nos permitió también demostrar que determinar si existe un camino que conduzca a una solución única es NP-completo.",
        "Ambos resultados se mantienen tanto con como sin dominancia de estrategias mixtas. (Una versión más débil del segundo resultado (solo sin dominancia de estrategias mixtas) ya se conocía [7].)",
        "La dominancia estricta iterada, por otro lado, es independiente del camino (tanto con como sin dominancia por estrategias mixtas) y, por lo tanto, puede realizarse en tiempo polinómico.",
        "Luego estudiamos qué sucede cuando la estrategia dominante puede asignar una probabilidad positiva solo a unas pocas estrategias puras.",
        "Primero, demostramos que encontrar la estrategia dominante con el tamaño de soporte mínimo es NP-completo (tanto para dominancia estricta como débil).",
        "Luego, demostramos que la dominancia estricta iterada se vuelve dependiente del camino cuando hay un límite en el tamaño del soporte de las estrategias dominantes, y que decidir si una estrategia dada puede ser eliminada por dominancia estricta iterada bajo esta restricción es NP-completo (incluso cuando el límite en el tamaño del soporte es 3).",
        "Finalmente, estudiamos la dominancia y la dominancia iterada en juegos bayesianos, como un ejemplo de un lenguaje de representación conciso para juegos en forma normal que es interesante por sí mismo.",
        "Mostramos que, a diferencia de los juegos en forma normal, decidir si una estrategia pura dada está dominada por otra estrategia pura en un juego bayesiano es NP-completo (tanto con dominancia estricta como débil); sin embargo, decidir si una estrategia está dominada por alguna estrategia mixta aún se puede hacer en tiempo polinómico con la resolución de un único programa lineal (tanto con dominancia estricta como débil).",
        "Finalmente, demostramos que la dominancia iterada utilizando estrategias puras puede requerir un número exponencial de iteraciones en un juego bayesiano (tanto con dominancia estricta como débil).",
        "Hay varias vías para investigaciones futuras.",
        "Primero, está la pregunta abierta de si es posible completar la dominancia iterada en juegos bayesianos en tiempo polinómico (aunque demostramos que a veces se requiere un número exponencial de alternancias entre los jugadores para eliminar estrategias).",
        "Segundo, podemos estudiar los aspectos computacionales del dominio (iterado) en representaciones concisas de juegos de forma normal que no sean juegos bayesianos, por ejemplo, en juegos gráficos o juegos de grafo de efecto local/acción. (Ya se ha estudiado cómo realizar eficientemente el dominio muy débil iterado en juegos estocásticos parcialmente observables).",
        "Finalmente, podemos preguntarnos si algunos de los algoritmos que describimos (como el de dominancia estricta iterada con estrategias mixtas) pueden ser optimizados para ser más rápidos. 8.",
        "REFERENCIAS [1] Krzysztof R. Apt.",
        "Pruebas uniformes de independencia del orden para varios procedimientos de eliminación de estrategias.",
        "Contribuciones a la Economía Teórica, 4(1), 2004. [2] Nivan A. R. Bhat y Kevin Leyton-Brown.",
        "Calculando equilibrios de Nash de juegos de gráficos de acción.",
        "En UAI, 2004. [3] Ben Blum, Christian R. Shelton y Daphne Koller.",
        "Un método de continuación para equilibrios de Nash en juegos estructurados.",
        "En IJCAI, 2003. [4] Vincent Conitzer y Tuomas Sandholm.",
        "Resultados de complejidad sobre equilibrios de Nash.",
        "En IJCAI, páginas 765-771, 2003. [5] Drew Fudenberg y Jean Tirole.",
        "Teoría de juegos.",
        "MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, y Eitan Zemel.",
        "En el orden de eliminar estrategias dominadas.",
        "Cartas de Investigación Operativa, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai y Eitan Zemel.",
        "La complejidad de eliminar estrategias dominadas.",
        "Matemáticas de la Investigación de Operaciones, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein y Shlomo Zilberstein.",
        "Programación dinámica para juegos estocásticos parcialmente observables.",
        "En AAAI, páginas 709-715, 2004. [9] Michael Kearns, Michael Littman y Satinder Singh.",
        "Modelos gráficos para teoría de juegos.",
        "En UAI, 2001. [10] Leonid Khachiyan.",
        "Un algoritmo polinómico en programación lineal.",
        "Matemática soviética.",
        "Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou y John N Tsitsiklis.",
        "Una nota sobre la eliminación de estrategias en juegos bimatrix.",
        "Cartas de Investigación Operativa, 7(3):103-107, 1988. [12] Kevin Leyton-Brown y Moshe Tennenholtz.",
        "Juegos de efecto local.",
        "En IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis y Aranyak Mehta.",
        "Jugando juegos grandes utilizando estrategias simples.",
        "En ACM-EC, páginas 36-41, 2003. [14] Michael Littman y Peter Stone.",
        "Un algoritmo de equilibrio de Nash de tiempo polinómico para juegos repetidos.",
        "En ACM-EC, páginas 48-54, 2003. [15] Leslie M. Marx y Jeroen M. Swinkels.",
        "Independencia del orden para la dominancia débil iterada.",
        "Juegos y Comportamiento Económico, 18:219-245, 1997. [16] Leslie M. Marx y Jeroen M. Swinkels.",
        "Corrección, independencia del orden para la dominancia débil iterada.",
        "Juegos y Comportamiento Económico, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston y Jerry R. Green.",
        "Teoría microeconómica.",
        "Oxford University Press, 1995. [18] Roger Myerson.\nEditorial de la Universidad de Oxford, 1995. [18] Roger Myerson.",
        "Teoría de juegos: Análisis de conflictos.",
        "Harvard University Press, Cambridge, 1991. [19] Martin J Osborne y Ariel Rubinstein.",
        "Un curso de Teoría de Juegos.",
        "MIT Press, 1994. [20] Christos Papadimitriou. \n\nMIT Press, 1994. [20] Christos Papadimitriou.",
        "Algoritmos, juegos e Internet.",
        "En STOC, páginas 749-753, 2001. [21] Ryan Porter, Eugene Nudelman y Yoav Shoham.",
        "Métodos de búsqueda simples para encontrar un equilibrio de Nash.",
        "En AAAI, páginas 664-669, 2004. 97"
    ],
    "error_count": 0,
    "keys": {
        "multiagent system": {
            "translated_key": "sistemas multiagentes",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Complexity of (Iterated) Dominance∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using dominance and iterated dominance.",
                "We first study both strict and weak dominance (not iterated), and show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then move on to iterated dominance.",
                "We show that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allows us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then study what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we show that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we show that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we study Bayesian games.",
                "We show that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak ∗ This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858, and a Sloan Fellowship. dominance).",
                "Finally, we show that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In <br>multiagent system</br>s with self-interested agents, the optimal action for one agent may depend on the actions taken by other agents.",
                "In such settings, the agents require tools from game theory to rationally decide on an action.",
                "Game theory offers various formal models of strategic settings-the best-known of which is a game in normal (or matrix) form, specifying a utility (payoff) for each agent for each combination of strategies that the agents choose-as well as solution concepts, which, given a game, specify which outcomes are reasonable (under various assumptions of rationality and common knowledge).",
                "Probably the best-known (and certainly the most-studied) solution concept is that of Nash equilibrium.",
                "A Nash equilibrium specifies a strategy for each player, in such a way that no player has an incentive to (unilaterally) deviate from the prescribed strategy.",
                "Recently, numerous papers have studied computing Nash equilibria in various settings [9, 4, 12, 3, 13, 14], and the complexity of constructing a Nash equilibrium in normal form games has been labeled one of the two most important open problems on the boundary of P today [20].",
                "The problem of computing solutions according to the perhaps more elementary solution concepts of dominance and iterated dominance has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the game theory community [7].1 ) A strategy strictly dominates another strategy if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one.",
                "The idea is that dominated strategies can be eliminated from consideration.",
                "In iterated dominance, the elimination proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating strategy no longer needs to perform better than or as well as the dominated strategy against opponent strategies that were eliminated in earlier rounds.",
                "Computing solutions according to (iterated) dominance is important for at least the following reasons: 1) it can be computationally easier than computing (for instance) a Nash equilibrium (and therefore it can be useful as a preprocessing step in computing a Nash equilibrium), and 2) (iterated) dominance requires a weaker rationality assumption on the players than (for instance) Nash equilibrium, and therefore solutions derived according to it are more likely to occur.",
                "In this paper, we study some fundamental computational questions concerning dominance and iterated dominance, including how hard it is to check whether a given strategy can be eliminated by each of the variants of these notions.",
                "The rest of the paper is organized as follows.",
                "In Section 2, we briefly review definitions and basic properties of normal form games, strict and weak dominance, and iterated strict and weak dominance.",
                "In the remaining sections, we study computational aspects of dominance and iterated dominance.",
                "In Section 3, we study one-shot (not iterated) dominance.",
                "In Section 4, we study iterated dominance.",
                "In Section 5, we study dominance and iterated dominance when the dominating strategy can only place probability on a few pure strategies.",
                "Finally, in Section 6, we study dominance and iterated dominance in Bayesian games. 2.",
                "DEFINITIONS AND BASIC PROPERTIES In this section, we briefly review normal form games, as well as dominance and iterated dominance (both strict and weak).",
                "An n-player normal form game is defined as follows.",
                "Definition 1.",
                "A normal form game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of pure strategies Σi and a utility function ui : Σ1 × Σ2 × . . . × Σn → R (where ui(σ1, σ2, . . . , σn) denotes player is utility when each player j plays action σj).",
                "The two main notions of dominance are defined as follows.",
                "Definition 2.",
                "Player is strategy σi is said to be strictly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "Player is strategy σi is said to be weakly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) ≥ ui(σi, σ−i), and for at least one vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "In this definition, it is sometimes allowed for the dominating strategy σi to be a mixed strategy, that is, a probability distribution over pure strategies.",
                "In this case, the utilities in dominance altogether.",
                "For example, simple dominance checks are sometimes used as a subroutine in searching for Nash equilibria [21]. the definition are the expected utilities.2 There are other notions of dominance, such as very weak dominance (in which no strict inequality is required, so two strategies can dominate each other), but we will not study them here.",
                "When we are looking at the dominance relations for player i, the other players (−i) can be thought of as a single player.3 Therefore, in the rest of the paper, when we study one-shot (not iterated) dominance, we will focus without loss of generality on two-player games.4 In two-player games, we will generally refer to the players as r (row) and c (column) rather than 1 and 2.",
                "In iterated dominance, dominated strategies are removed from the game, and no longer have any effect on future dominance relations.",
                "Iterated dominance can eliminate more strategies than dominance, as follows. σr may originally not dominate σr because the latter performs better against σc; but then, once σc is removed because it is dominated by σc, σr dominates σr, and the latter can be removed.",
                "For example, in the following game, R can be removed first, after which D is dominated.",
                "L R U 1, 1 0, 0 D 0, 1 1, 0 Either strict or weak dominance can be used in the definition of iterated dominance.",
                "We note that the process of iterated dominance is never helped by removing a dominated mixed strategy, for the following reason.",
                "If σi gives player i a higher utility than σi against mixed strategy σj for player j = i (and strategies σ−{i,j} for the other players), then for at least one pure strategy σj that σj places positive probability on, σi must perform better than σi against σj (and strategies σ−{i,j} for the other players).",
                "Thus, removing the mixed strategy σj does not introduce any new dominances.",
                "More detailed discussions and examples can be found in standard texts on microeconomics or game theory [17, 5].",
                "We are now ready to move on to the core of this paper. 3.",
                "DOMINANCE (NOT ITERATED) In this section, we study the notion of one-shot (not iterated) dominance.",
                "As a first observation, checking whether a given strategy is strictly (weakly) dominated by some pure strategy is straightforward, by checking, for every pure strategy for that player, whether the latter strategy performs strictly better against all the opponents strategies (at least as well against all the opponents strategies, and strictly 2 The dominated strategy σi is, of course, also allowed to be mixed, but this has no technical implications for the paper: when we study one-shot dominance, we ask whether a given strategy is dominated, and it does not matter whether the given strategy is pure or mixed; when we study iterated dominance, there is no use in eliminating mixed strategies, as we will see shortly. 3 This player may have a very large strategy space (one pure strategy for every vector of pure strategies for the players that are being replaced).",
                "Nevertheless, this will not result in an increase in our representation size, because the original representation already had to specify utilities for each of these vectors. 4 We note that a restriction to two-player games would not be without loss of generality for iterated dominance.",
                "This is because for iterated dominance, we need to look at the dominated strategies of each individual player, so we cannot merge any players. 89 better against at least one).5 Next, we show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time by solving a single linear program. (Similar linear programs have been given before [18]; we present the result here for completeness, and because we will build on the linear programs given below in Theorem 6.)",
                "Proposition 1.",
                "Given the row players utilities, a subset Dr of the row players pure strategies Σr, and a distinguished strategy σ∗ r for the row player, we can check in time polynomial in the size of the game (by solving a single linear program of polynomial size) whether there exists some mixed strategy σr, that places positive probability only on strategies in Dr and dominates σ∗ r , both for strict and for weak dominance.",
                "Proof.",
                "Let pdr be the probability that σr places on dr ∈ Dr. We will solve a single linear program in each of our algorithms; linear programs can be solved in polynomial time [10].",
                "For strict dominance, the question is whether the pdr can be set so that for every pure strategy for the column player σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc).",
                "Because the inequality must be strict, we cannot solve this directly by linear programming.",
                "We proceed as follows.",
                "Because the game is finite, we may assume without loss of generality that all utilities are positive (if not, simply add a constant to all utilities.)",
                "Solve the following linear program: minimize dr∈Dr pdr such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc).",
                "If σ∗ r is strictly dominated by some mixed strategy, this linear program has a solution with objective value < 1. (The dominating strategy is a feasible solution with objective value exactly 1.",
                "Because no constraint is binding for this solution, we can reduce one of the probabilities slightly without affecting feasibility, thereby obtaining a solution with objective value < 1.)",
                "Moreover, if this linear program has a solution with objective value < 1, there is a mixed strategy strictly dominating σ∗ r , which can be obtained by taking the LP solution and adding the remaining probability to any strategy (because all the utilities are positive, this will add to the left side of any inequality, so all inequalities will become strict).",
                "For weak dominance, we can solve the following linear program: maximize σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1.",
                "If σ∗ r is weakly dominated by some mixed strategy, then that mixed strategy is a feasible solution to this program with objective value > 0, because for at least one strategy σc ∈ Σc we have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0.",
                "On the other hand, if this program has a solution with objective value > 0, then for at least one strategy σc ∈ Σc we 5 Recall that the assumption of a single opponent (that is, the assumption of two players) is without loss of generality for one-shot dominance. must have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, and thus the linear programs solution is a weakly dominating mixed strategy. 4.",
                "ITERATED DOMINANCE We now move on to iterated dominance.",
                "It is well-known that iterated strict dominance is path-independent [6, 19]that is, if we remove dominated strategies until no more dominated strategies remain, in the end the remaining strategies for each player will be the same, regardless of the order in which strategies are removed.",
                "Because of this, to see whether a given strategy can be eliminated by iterated strict dominance, all that needs to be done is to repeatedly remove strategies that are strictly dominated, until no more dominated strategies remain.",
                "Because we can check in polynomial time whether any given strategy is dominated (whether or not dominance by mixed strategies is allowed, as described in Section 3), this whole procedure takes only polynomial time.",
                "In the case of iterated dominance by pure strategies with two players, Knuth et al. [11] slightly improve on (speed up) the straightforward implementation of this procedure by keeping track of, for each ordered pair of strategies for a player, the number of opponent strategies that prevent the first strategy from dominating the second.",
                "Hereby the runtime for an m × n game is reduced from O((m + n)4 ) to O((m + n)3 ). (Actually, they only study very weak dominance (for which no strict inequalities are required), but the approach is easily extended.)",
                "In contrast, iterated weak dominance is known to be pathdependent.6 For example, in the following game, using iterated weak dominance we can eliminate M first, and then D, or R first, and then U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Therefore, while the procedure of removing weakly dominated strategies until no more weakly dominated strategies remain can certainly be executed in polynomial time, which strategies survive in the end depends on the order in which we remove the dominated strategies.",
                "We will investigate two questions for iterated weak dominance: whether a given strategy is eliminated in some path, and whether there is a path to a unique solution (one pure strategy left per player).",
                "We will show that both of these problems are computationally hard.",
                "Definition 3.",
                "Given a game in normal form and a distinguished strategy σ∗ , IWD-STRATEGY-ELIMINATION asks whether there is some path of iterated weak dominance that eliminates σ∗ .",
                "Given a game in normal form, IWDUNIQUE-SOLUTION asks whether there is some path of iterated weak dominance that leads to a unique solution (one strategy left per player).",
                "The following lemma shows a special case of normal form games in which allowing for weak dominance by mixed strategies (in addition to weak dominance by pure strategies) does 6 There is, however, a restriction of weak dominance called nice weak dominance which is path-independent [15, 16].",
                "For an overview of path-independence results, see Apt [1]. 90 not help.",
                "We will prove the hardness results in this setting, so that they will hold whether or not dominance by mixed strategies is allowed.",
                "Lemma 1.",
                "Suppose that all the utilities in a game are in {0, 1}.",
                "Then every pure strategy that is weakly dominated by a mixed strategy is also weakly dominated by a pure strategy.",
                "Proof.",
                "Suppose pure strategy σ is weakly dominated by mixed strategy σ∗ .",
                "If σ gets a utility of 1 against some opponent strategy (or vector of opponent strategies if there are more than 2 players), then all the pure strategies that σ∗ places positive probability on must also get a utility of 1 against that opponent strategy (or else the expected utility would be smaller than 1).",
                "Moreover, at least one of the pure strategies that σ∗ places positive probability on must get a utility of 1 against an opponent strategy that σ gets 0 against (or else the inequality would never be strict).",
                "It follows that this pure strategy weakly dominates σ.",
                "We are now ready to prove the main results of this section.",
                "Theorem 1.",
                "IWD-STRATEGY-ELIMINATION is NPcomplete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can easily check whether this is a valid sequence of eliminations (even when dominance by mixed strategies is allowed, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following IWD-STRATEGY-ELIMINATION instance. (In this instance, we will specify that certain strategies are uneliminable.",
                "A strategy σr can be made uneliminable, even when 0 and 1 are the only allowed utilities, by adding another strategy σr and another opponent strategy σc, so that: 1. σr and σr are the only strategies that give the row player a utility of 1 against σc. 2. σr and σr always give the row player the same utility. 3. σc is the only strategy that gives the column player a utility of 1 against σr, but otherwise σc always gives the column player utility 0.",
                "This makes it impossible to eliminate any of these three strategies.",
                "We will not explicitly specify the additional strategies to make the proof more legible.)",
                "In this proof, we will denote row player strategies by s, and column player strategies by t, to improve legibility.",
                "Let the row players pure strategy set be given as follows.",
                "For every variable v ∈ V , the row player has corresponding strategies s1 +v, s2 +v, s1 −v, s2 −v.",
                "Additionally, the row player has the following 2 strategies: s1 0 and s2 0, where s2 0 = σ∗ r (that is, it is the strategy we seek to eliminate).",
                "Finally, for every clause c ∈ C, the row player has corresponding strategies s1 c (uneliminable) and s2 c. Let the column players pure strategy set be given as follows.",
                "For every variable v ∈ V , the column player has a corresponding strategy tv.",
                "For every clause c ∈ C, the column player has a corresponding strategy tc, and additionally, for every literal l ∈ L that occurs in c, a strategy tc,l.",
                "For every variable v ∈ V , the column player has corresponding strategies t+v, t−v (both uneliminable).",
                "Finally, the column player has three additional strategies: t1 0 (uneliminable), t2 0, and t1.",
                "The utility function for the row player is given as follows: • ur(s1 +v, tv) = 0 for all v ∈ V ; • ur(s2 +v, tv) = 1 for all v ∈ V ; • ur(s1 −v, tv) = 1 for all v ∈ V ; • ur(s2 −v, tv) = 0 for all v ∈ V ; • ur(s1 +v, t1) = 1 for all v ∈ V ; • ur(s2 +v, t1) = 0 for all v ∈ V ; • ur(s1 −v, t1) = 0 for all v ∈ V ; • ur(s2 −v, t1) = 1 for all v ∈ V ; • ur(sb +v, t+v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sb −v, t−v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sl, t) = 0 otherwise for all l ∈ L and t ∈ S2; • ur(s1 0, tc) = 0 for all c ∈ C; • ur(s2 0, tc) = 1 for all c ∈ C; • ur(sb 0, t1 0) = 1 for all b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 otherwise for all b ∈ {1, 2} and t ∈ S2; • ur(sb c, t) = 0 otherwise for all c ∈ C and b ∈ {1, 2}; and the row players utility is 0 in every other case.",
                "The utility function for the column player is given as follows: • uc(s, tv) = 0 for all v ∈ V and s ∈ S1; • uc(s, t1) = 0 for all s ∈ S1; • uc(s2 l , tc) = 1 for all c ∈ C and l ∈ L where l ∈ c (literal l occurs in clause c); • uc(s2 l2 , tc,l1 ) = 1 for all c ∈ C and l1, l2 ∈ L, l1 = l2 where l2 ∈ c; • uc(s1 c, tc) = 1 for all c ∈ C; • uc(s2 c, tc) = 0 for all c ∈ C; • uc(sb c, tc,l) = 1 for all c ∈ C, l ∈ L, and b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 otherwise for all c ∈ C and l ∈ L; and the column players utility is 0 in every other case.",
                "We now show that the two instances are equivalent.",
                "First, suppose there is a solution to the satisfiability instance: that is, a truth-value assignment to the variables in V such that all clauses are satisfied.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the assignment, eliminate tv (which gives the column player utility 0 everywhere). 2.",
                "Then, for every variable v that is set to true in the assignment, eliminate s2 +v using s1 +v (which is possible because tv has been eliminated, and because t1 has not been eliminated (yet)). 3.",
                "Now eliminate t1 (which gives the column player utility 0 everywhere). 4.",
                "Next, for every variable v that is set to false in the assignment, eliminate s2 −v using s1 −v (which is possible because t1 has been eliminated, and because tv has not been eliminated (yet)). 5.",
                "For every clause c which has the variable corresponding to one of its positive literals l = +v set to true in the assignment, eliminate tc using tc,l (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 6.",
                "For every clause c which has the variable corresponding to one of its negative literals l = −v set to false in the assignment, eliminate tc using tc,l 91 (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 7.",
                "Because the assignment satisfied the formula, all the tc have now been eliminated.",
                "Thus, we can eliminate s2 0 = σ∗ r using s1 0.",
                "It follows that there is a solution to the IWD-STRATEGY-ELIMINATION instance.",
                "Now suppose there is a solution to the IWD-STRATEGYELIMINATION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We first observe that only s1 0 can eliminate s2 0 = σ∗ r , because it is the only other strategy that gets the row player a utility of 1 against t1 0, and t1 0 is uneliminable.",
                "However, because s2 0 performs better than s1 0 against the tc strategies, it follows that all of the tc strategies must be eliminated.",
                "For each c ∈ C, the strategy tc can only be eliminated by one of the strategies tc,l (with the same c), because these are the only other strategies that get the column player a utility of 1 against s1 c, and s1 c is uneliminable.",
                "But, in order for some tc,l to eliminate tc, s2 l must be eliminated first.",
                "Only s1 l can eliminate s2 l , because it is the only other strategy that gets the row player a utility of 1 against tl, and tl is uneliminable.",
                "We next show that for every v ∈ V only one of s2 +v, s2 −v can be eliminated.",
                "This is because in order for s1 +v to eliminate s2 +v, tv needs to have been eliminated and t1, not (so tv must be eliminated before t1); but in order for s1 −v to eliminate s2 −v, t1 needs to have been eliminated and tv, not (so t1 must be eliminated before tv).",
                "So, set v to true if s2 +v is eliminated, and to false otherwise Because by the above, for every clause c, one of the s2 l with l ∈ c must be eliminated, it follows that this is a satisfying assignment to the satisfiability instance.",
                "Using Theorem 1, it is now (relatively) easy to show that IWD-UNIQUE-SOLUTION is also NP-complete under the same restrictions.",
                "Theorem 2.",
                "IWD-UNIQUE-SOLUTION is NP-complete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "Again, the problem is in NP because we can nondeterministically choose the sequence of eliminations and verify whether it is correct.",
                "To show NP-hardness, we reduce an arbitrary IWD-STRATEGY-ELIMINATION instance to the following IWD-UNIQUE-SOLUTION instance.",
                "Let all the strategies for each player from the original instance remain part of the new instance, and let the utilities resulting from the players playing a pair of these strategies be the same.",
                "We add three additional strategies σ1 r , σ2 r , σ3 r for the row player, and three additional strategies σ1 c , σ2 c , σ3 c for the column player.",
                "Let the additional utilities be as follows: • ur(σr, σj c) = 1 for all σr /∈ {σ1 r , σ2 r , σ3 r } and j ∈ {2, 3}; • ur(σi r, σc) = 1 for all i ∈ {1, 2, 3} and σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 for all i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • and the row players utility is 0 in all other cases involving a new strategy. • uc(σ3 r , σc) = 1 for all σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 for all j ∈ {2, 3} (σ∗ r is the strategy to be eliminated in the original instance); • uc(σi r, σ1 c ) = 1 for all i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • and the column players utility is 0 in all other cases involving a new strategy.",
                "We proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the original IWDSTRATEGY-ELIMINATION instance.",
                "Then, perform the same sequence of eliminations to eliminate σ∗ r in the new IWD-UNIQUE-SOLUTION instance. (This is possible because at any stage, any weak dominance for the row player in the original instance is still a weak dominance in the new instance, because the two strategies utilities for the row player are the same when the column player plays one of the new strategies; and the same is true for the column player.)",
                "Once σ∗ r is eliminated, let σ1 c eliminate σ2 c . (It performs better against σ2 r .)",
                "Then, let σ1 r eliminate all the other remaining strategies for the row player. (It always performs better against either σ1 c or σ3 c .)",
                "Finally, σ1 c is the unique best response against σ1 r among the column players remaining strategies, so let it eliminate all the other remaining strategies for the column player.",
                "Thus, there exists a solution to the IWD-UNIQUE-SOLUTION instance.",
                "Now suppose there exists a solution to the IWD-UNIQUESOLUTION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We will show that none of the new strategies (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) can either eliminate another strategy, or be eliminated before σ∗ r is eliminated.",
                "Thus, there must be a sequence of eliminations ending in the elimination of σ∗ r , which does not involve any of the new strategies, and is therefore a valid sequence of eliminations in the original game (because all original strategies perform the same against each new strategy).",
                "We now show that this is true by exhausting all possibilities for the first elimination before σ∗ r is eliminated that involves a new strategy.",
                "None of the σi r can be eliminated by a σr /∈ {σ1 r , σ2 r , σ3 r }, because the σi r perform better against σ1 c . σ1 r cannot eliminate any other strategy, because it always performs poorer against σ2 c . σ2 r and σ3 r are equivalent from the row players perspective (and thus cannot eliminate each other), and cannot eliminate any other strategy because they always perform poorer against σ3 c .",
                "None of the σj c can be eliminated by a σc /∈ {σ1 c , σ2 c , σ3 c }, because the σj c always perform better against either σ1 r or σ2 r . σ1 c cannot eliminate any other strategy, because it always performs poorer against either σ∗ r or σ3 r . σ2 c cannot eliminate any other strategy, because it always performs poorer against σ2 r or σ3 r . σ3 c cannot eliminate any other strategy, because it always performs poorer against σ1 r or σ3 r .",
                "Thus, there exists a solution to the IWDSTRATEGY-ELIMINATION instance.",
                "A slightly weaker version of the part of Theorem 2 concerning dominance by pure strategies only is the main result of Gilboa et al. [7]. (Besides not proving the result for dominance by mixed strategies, the original result was weaker because it required utilities {0, 1, 2, 3, 4, 5, 6, 7, 8} rather than just {0, 1} (and because of this, our Lemma 1 cannot be applied to it to get the result for mixed strategies).) 5. (ITERATED) DOMINANCE USING MIXED STRATEGIES WITH SMALL SUPPORTS When showing that a strategy is dominated by a mixed strategy, there are several reasons to prefer exhibiting a 92 dominating strategy that places positive probability on as few pure strategies as possible.",
                "First, this will reduce the number of bits required to specify the dominating strategy (and thus the proof of dominance can be communicated quicker): if the dominating mixed strategy places positive probability on only k strategies, then it can be specified using k real numbers for the probabilities, plus k log m (where m is the number of strategies for the player under consideration) bits to indicate which strategies are used.",
                "Second, the proof of dominance will be cleaner: for a dominating mixed strategy, it is typically (always in the case of strict dominance) possible to spread some of the probability onto any unused pure strategy and still have a dominating strategy, but this obscures which pure strategies are the ones that are key in making the mixed strategy dominating.",
                "Third, because (by the previous) the argument for eliminating the dominated strategy is simpler and easier to understand, it is more likely to be accepted.",
                "Fourth, the level of risk neutrality required for the argument to work is reduced, at least in the extreme case where dominance by a single pure strategy can be exhibited (no risk neutrality is required here).",
                "This motivates the following problem.",
                "Definition 4 (MINIMUM-DOMINATING-SET).",
                "We are given the row players utilities of a game in normal form, a distinguished strategy σ∗ for the row player, a specification of whether the dominance should be strict or weak, and a number k. We are asked whether there exists a mixed strategy σ for the row player that places positive probability on at most k pure strategies, and dominates σ∗ in the required sense.",
                "Unfortunately, this problem is NP-complete.",
                "Theorem 3.",
                "MINIMUM-DOMINATING-SET is NPcomplete, both for strict and for weak dominance.",
                "Proof.",
                "The problem is in NP because we can nondeterministically choose a set of at most k strategies to give positive probability, and decide whether we can dominate σ∗ with these k strategies as described in Proposition 1.",
                "To show NP-hardness, we reduce an arbitrary SET-COVER instance (given a set S, subsets S1, S2, . . . , Sr, and a number t, can all of S be covered by at most t of the subsets?) to the following MINIMUM-DOMINATING-SET instance.",
                "For every element s ∈ S, there is a pure strategy σs for the column player.",
                "For every subset Si, there is a pure strategy σSi for the row player.",
                "Finally, there is the distinguished pure strategy σ∗ for the row player.",
                "The row players utilities are as follows: ur(σSi , σs) = t + 1 if s ∈ Si; ur(σSi , σs) = 0 if s /∈ Si; ur(σ∗ , σs) = 1 for all s ∈ S. Finally, we let k = t. We now proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the SET-COVER instance.",
                "Without loss of generality, we can assume that there are exactly k subsets in the cover.",
                "Then, for every Si that is in the cover, let the dominating strategy σ place exactly 1 k probability on the corresponding pure strategy σSi .",
                "Now, if we let n(s) be the number of subsets in the cover containing s (we observe that that n(s) ≥ 1), then for every strategy σs for the column player, the row players expected utility for playing σ when the column player is playing σs is u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs).",
                "So σ strictly (and thus also weakly) dominates σ∗ , and there exists a solution to the MINIMUM-DOMINATING-SET instance.",
                "Now suppose there exists a solution to the MINIMUMDOMINATING-SET instance.",
                "Consider the (at most k) pure strategies of the form σSi on which the dominating mixed strategy σ places positive probability, and let T be the collection of the corresponding subsets Si.",
                "We claim that T is a cover.",
                "For suppose there is some s ∈ S that is not in any of the subsets in T .",
                "Then, if the column player plays σs, the row player (when playing σ) will always receive utility 0-as opposed to the utility of 1 the row player would receive for playing σ∗ , contradicting the fact that σ dominates σ∗ (whether this dominance is weak or strict).",
                "It follows that there exists a solution to the SET-COVER instance.",
                "On the other hand, if we require that the dominating strategy only places positive probability on a very small number of pure strategies, then it once again becomes easy to check whether a strategy is dominated.",
                "Specifically, to find out whether player is strategy σ∗ is dominated by a strategy that places positive probability on only k pure strategies, we can simply check, for every subset of k of player is pure strategies, whether there is a strategy that places positive probability only on these k strategies and dominates σ∗ , using Proposition 1.",
                "This requires only O(|Σi|k ) such checks.",
                "Thus, if k is a constant, this constitutes a polynomial-time algorithm.",
                "A natural question to ask next is whether iterated strict dominance remains computationally easy when dominating strategies are required to place positive probability on at most k pure strategies, where k is a small constant. (We have already shown in Section 4 that iterated weak dominance is hard even when k = 1, that is, only dominance by pure strategies is allowed.)",
                "Of course, if iterated strict dominance were path-independent under this restriction, computational easiness would follow as it did in Section 4.",
                "However, it turns out that this is not the case.",
                "Observation 1.",
                "If we restrict the dominating strategies to place positive probability on at most two pure strategies, iterated strict dominance becomes path-dependent.",
                "Proof.",
                "Consider the following game: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Let (i, j) denote the outcome in which the row player plays the ith row and the column player plays the jth column.",
                "Because (1, 1), (2, 2), and (4, 3) are all Nash equilibria, none of the column players pure strategies will ever be eliminated, and neither will rows 1, 2, and 4.",
                "We now observe that randomizing uniformly over rows 1 and 2 dominates row 3, and randomizing uniformly over rows 3 and 4 dominates row 5.",
                "However, if we eliminate row 3 first, it becomes impossible to dominate row 5 without randomizing over at least 3 pure strategies.",
                "Indeed, iterated strict dominance turns out to be hard even when k = 3.",
                "Theorem 4.",
                "If we restrict the dominating strategies to place positive probability on at most three pure strategies, it becomes NP-complete to decide whether a given strategy can be eliminated using iterated strict dominance. 93 Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can check in polynomial time whether this is a valid sequence of eliminations (for any strategy to be eliminated, we can check, for every subset of three other strategies, whether there is a strategy placing positive probability on only these three strategies that dominates the strategy to be eliminated, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following two-player game.",
                "For every variable v ∈ V , the row player has strategies s+v, s−v, s1 v, s2 v, s3 v, s4 v, and the column player has strategies t1 v, t2 v, t3 v, t4 v. For every clause c ∈ C, the row player has a strategy sc, and the column player has a strategy tc, as well as, for every literal l occurring in c, an additional strategy tl c. The row player has two additional strategies s1 and s2. (s2 is the strategy that we are seeking to eliminate.)",
                "Finally, the column player has one additional strategy t1.",
                "The utility function for the row player is given as follows (where is some sufficiently small number): • ur(s+v, tj v) = 4 if j ∈ {1, 2}, for all v ∈ V ; • ur(s+v, tj v) = 1 if j ∈ {3, 4}, for all v ∈ V ; • ur(s−v, tj v) = 1 if j ∈ {1, 2}, for all v ∈ V ; • ur(s−v, tj v) = 4 if j ∈ {3, 4}, for all v ∈ V ; • ur(s+v, t) = ur(s−v, t) = 0 for all v ∈ V and t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 for all v ∈ V and i ∈ {1, 2, 3, 4}; • ur(si v, t) = for all v ∈ V , i ∈ {1, 2, 3, 4}, and t = ti v; • ur(sc, tc) = 2 for all c ∈ C; • ur(sc, t) = 0 for all c ∈ C and t = tc; • ur(s1, t1) = 1 + ; • ur(s1, t) = for all t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 for all c ∈ C; • ur(s2, t) = 0 for all t /∈ {t1} ∪ {tc : c ∈ C}.",
                "The utility function for the column player is given as follows: • uc(si v, ti v) = 1 for all v ∈ V and i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 for all v ∈ V , i ∈ {1, 2, 3, 4}, and s = si v; • uc(sc, tc) = 1 for all c ∈ C; • uc(sl, tc) = 1 for all c ∈ C and l ∈ L occurring in c; • uc(s, tc) = 0 for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + for all c ∈ C; • uc(sl , tl c) = 1 + for all c ∈ C and l = l occurring in c; • uc(s, tl c) = for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c, l = l }; • uc(s2, t1) = 1; • uc(s, t1) = 0 for all s = s2.",
                "We now show that the two instances are equivalent.",
                "First, suppose that there is a solution to the satisfiability instance.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the satisfying assignment, eliminate s+v with the mixed strategy σr that places probability 1/3 on s−v, probability 1/3 on s1 v, and probability 1/3 on s2 v. (The expected utility of playing σr against t1 v or t2 v is 14/3 > 4; against t3 v or t4 v, it is 4/3 > 1; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 2.",
                "Similarly, for every variable v that is set to false in the satisfying assignment, eliminate s−v with the mixed strategy σr that places probability 1/3 on s+v, probability 1/3 on s3 v, and probability 1/3 on s4 v. (The expected utility of playing σr against t1 v or t2 v is 4/3 > 1; against t3 v or t4 v, it is 14/3 > 4; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 3.",
                "For every c ∈ C, eliminate tc with any tl c for which l was set to true in the satisfying assignment. (This is a valid dominance because tl c performs better than tc against any strategy other than sl, and we eliminated sl in step 1 or in step 2.) 4.",
                "Finally, eliminate s2 with s1. (This is a valid dominance because s1 performs better than s2 against any strategy other than those in {tc : c ∈ C}, which we eliminated in step 3.)",
                "Hence, there is an elimination path that eliminates s2.",
                "Now, suppose that there is an elimination path that eliminates s2.",
                "The strategy that eventually dominates s2 must place most of its probability on s1, because s1 is the only other strategy that performs well against t1, which cannot be eliminated before s2.",
                "But, s1 performs significantly worse than s2 against any strategy tc with c ∈ C, so it follows that all these strategies must be eliminated first.",
                "Each strategy tc can only be eliminated by a strategy that places most of its weight on the corresponding strategies tl c with l ∈ c, because they are the only other strategies that perform well against sc, which cannot be eliminated before tc.",
                "But, each strategy tl c performs significantly worse than tc against sl, so it follows that for every clause c, for one of the literals l occurring in it, sl must be eliminated first.",
                "Now, strategies of the form tj v will never be eliminated because they are the unique best responses to the corresponding strategies sj v (which are, in turn, the best responses to the corresponding tj v).",
                "As a result, if strategy s+v (respectively, s−v) is eliminated, then its opposite strategy s−v (respectively, s+v) can no longer be eliminated, for the following reason.",
                "There is no other pure strategy remaining that gets a significant utility against more than one of the strategies t1 v, t2 v, t3 v, t4 v, but s−v (respectively, s+v) gets significant utility against all 4, and therefore cannot be dominated by a mixed strategy placing positive probability on at most 3 strategies.",
                "It follows that for each v ∈ V , at most one of the strategies s+v, s−v is eliminated, in such a way that for every clause c, for one of the literals l occurring in it, sl must be eliminated.",
                "But then setting all the literals l such that sl is eliminated to true constitutes a solution to the satisfiability instance.",
                "In the next section, we return to the setting where there is no restriction on the number of pure strategies on which a dominating mixed strategy can place positive probability. 6. (ITERATED) DOMINANCE IN BAYESIAN GAMES So far, we have focused on normal form games that are flatly represented (that is, every matrix entry is given ex94 plicitly).",
                "However, for many games, the flat representation is too large to write down explicitly, and instead, some representation that exploits the structure of the game needs to be used.",
                "Bayesian games, besides being of interest in their own right, can be thought of as a useful structured representation of normal form games, and we will study them in this section.",
                "In a Bayesian game, each player first receives privately held preference information (the players type) from a distribution, which determines the utility that that player receives for every outcome of (that is, vector of actions played in) the game.",
                "After receiving this type, the player plays an action based on it.7 Definition 5.",
                "A Bayesian game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of actions Ai, a (finite) type space Θi with a probability distribution πi over it, and a utility function ui : Θi × A1 × A2 × . . . × An → R (where ui(θi, a1, a2, . . . , an) denotes player is utility when is type is θi and each player j plays action aj).",
                "A pure strategy in a Bayesian game is a mapping from types to actions, σi : Θi → Ai, where σi(θi) denotes the action that player i plays for type θi.",
                "Any vector of pure strategies in a Bayesian game defines an (expected) utility for each player, and therefore we can translate a Bayesian game into a normal form game.",
                "In this normal form game, the notions of dominance and iterated dominance are defined as before.",
                "However, the normal form representation of the game is exponentially larger than the Bayesian representation, because each player i has |Ai||Θi| distinct pure strategies.",
                "Thus, any algorithm for Bayesian games that relies on expanding the game to its normal form will require exponential time.",
                "Specifically, our easiness results for normal form games do not directly transfer to this setting.",
                "In fact, it turns out that checking whether a strategy is dominated by a pure strategy is hard in Bayesian games.",
                "Theorem 5.",
                "In a Bayesian game, it is NP-complete to decide whether a given pure strategy σr : Θr → Ar is dominated by some other pure strategy (both for strict and weak dominance), even when the row players distribution over types is uniform.",
                "Proof.",
                "The problem is in NP because it is easy to verify whether a candidate dominating strategy is indeed a dominating strategy.",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a set of clauses C using variables from V ) to the following Bayesian game.",
                "Let the row players action set be Ar = {t, f, 0} and let the column players action set be Ac = {ac : c ∈ C}.",
                "Let the row players type set be Θr = {θv : v ∈ V }, with a distribution πr that is uniform.",
                "Let the row players utility function be as follows: • ur(θv, 0, ac) = 0 for all v ∈ V and c ∈ C; • ur(θv, b, ac) = |V | for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b satisfies c; • ur(θv, b, ac) = −1 for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b does not satisfy c. 7 In general, a player can also receive a signal about the other players preferences, but we will not concern ourselves with that here.",
                "Let the pure strategy to be dominated be the one that plays 0 for every type.",
                "We show that the strategy is dominated by a pure strategy if and only if there is a solution to the satisfiability instance.",
                "First, suppose there is a solution to the satisfiability instance.",
                "Then, let σd r be given by: σd r (θv) = t if v is set to true in the solution to the satisfiability instance, and σd r (θv) = f otherwise.",
                "Then, against any action ac by the column player, there is at least one type θv such that either +v ∈ c and σd r (θv) = t, or −v ∈ c and σd r (θv) = f. Thus, the row players expected utility against action ac is at least |V | |V | − |V |−1 |V | = 1 |V | > 0.",
                "So, σd r is a dominating strategy.",
                "Now, suppose there is a dominating pure strategy σd r .",
                "This dominating strategy must play t or f for at least one type.",
                "Thus, against any ac by the column player, there must at least be some type θv for which ur(θv, σd r (θv), ac) > 0.",
                "That is, there must be at least one variable v such that setting v to σd r (θv) satifies c. But then, setting each v to σd r (θv) must satisfy all the clauses.",
                "So a satisfying assignment exists.",
                "However, it turns out that we can modify the linear programs from Proposition 1 to obtain a polynomial time algorithm for checking whether a strategy is dominated by a mixed strategy in Bayesian games.",
                "Theorem 6.",
                "In a Bayesian game, it can be decided in polynomial time whether a given (possibly mixed) strategy σr is dominated by some other mixed strategy, using linear programming (both for strict and weak dominance).",
                "Proof.",
                "We can modify the linear programs presented in Proposition 1 as follows.",
                "For strict dominance, again assuming without loss of generality that all the utilities in the game are positive, use the following linear program (in which pσr r (θr, ar) is the probability that σr, the strategy to be dominated, places on ar for type θr): minimize θr∈Θr ar∈Ar pr(ar) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1.",
                "Assuming that π(θr) > 0 for all θr ∈ Θr, this program will return an objective value smaller than |Θr| if and only if σr is strictly dominated, by reasoning similar to that done in Proposition 1.",
                "For weak dominance, use the following linear program: maximize ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) = 1.",
                "This program will return an objective value greater than 0 if and only if σr is weakly dominated, by reasoning similar to that done in Proposition 1.",
                "We now turn to iterated dominance in Bayesian games.",
                "Na¨ıvely, one might argue that iterated dominance in Bayesian 95 games always requires an exponential number of steps when a significant fraction of the games pure strategies can be eliminated, because there are exponentially many pure strategies.",
                "However, this is not a very strong argument because oftentimes we can eliminate exponentially many pure strategies in one step.",
                "For example, if for some type θr ∈ Θr we have, for all ac ∈ Ac, that u(θr, a1 r, ac) > u(θr, a2 r, ac), then any pure strategy for the row player which plays action a2 r for type θr is dominated (by the strategy that plays action a1 r for type θr instead)-and there are exponentially many (|Ar||Θr|−1 ) such strategies.",
                "It is therefore conceivable that we need only polynomially many eliminations of collections of a players strategies.",
                "However, the following theorem shows that this is not the case, by giving an example where an exponential number of iterations (that is, alternations between the players in eliminating strategies) is required. (We emphasize that this is not a result about computational complexity.)",
                "Theorem 7.",
                "Even in symmetric 3-player Bayesian games, iterated dominance by pure strategies can require an exponential number of iterations (both for strict and weak dominance), even with only three actions per player.",
                "Proof.",
                "Let each player i ∈ {1, 2, 3} have n + 1 types θ1 i , θ2 i , . . . , θn+1 i .",
                "Let each player i have 3 actions ai, bi, ci, and let the utility function of each player be defined as follows. (In the below, i + 1 and i + 2 are shorthand for i + 1(mod 3) and i + 2(mod 3) when used as player indices.",
                "Also, −∞ can be replaced by a sufficiently negative number.",
                "Finally, δ and should be chosen to be very small (even compared to 2−(n+1) ), and should be more than twice as large as δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 for si+1 = ci+1 or si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − for si+1 = ai+1 and si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ for si+1 = ai+1 or si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ for all si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ for all si+1, si+2 when j > 1; • ui(θj i ; bi, si+1, si+2) = − for all si+1, si+2 when j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 for all si+1 when j > 1; • ui(θj i ; ci, si+1, si+2) = δ− for all si+1 and si+2 = ci+2 when j > 1.",
                "Let the distribution over each players types be given by p(θj i ) = 2−j (with the exception that p(θ2 i ) = 2−2 +2−(n+1) ).",
                "We will be interested in eliminating strategies of the following form: play bi for type θ1 i , and play one of bi or ci otherwise.",
                "Because the utility function is the same for any type θj i with j > 1, these strategies are effectively defined by the total probability that they place on ci,8 which is t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j where tj i = 1 if player i 8 Note that the strategies are still pure strategies; the probability placed on an action by a strategy here is simply the sum of the probabilities of the types for which the strategy chooses that action. plays ci for type θj i , and 0 otherwise.",
                "This probability is different for any two different strategies of the given form, and we have exponentially many different strategies of the given form.",
                "For any probability q which can be expressed as t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (with all tj ∈ {0, 1}), let σi(q) denote the (unique) strategy of the given form for player i which places a total probability of q on ci.",
                "Any strategy that plays ci for type θ1 i or ai for some type θj i with j > 1 can immediately be eliminated.",
                "We will show that, after that, we must eliminate the strategies σi(q) with high q first, slowly working down to those with lower q.",
                "Claim 1: If σi+1(q ) and σi+2(q ) have not yet been eliminated, and q < q , then σi(q) cannot yet be eliminated.",
                "Proof: First, we show that no strategy σi(q ) can eliminate σi(q).",
                "Against σi+1(q ), σi+2(q ), the utility of playing σi(p) is − + p · δ − p · q /2.",
                "Thus, when q = 0, it is best to set p as high as possible (and we note that σi+1(0) and σi+2(0) have not been eliminated), but when q > 0, it is best to set p as low as possible because δ < q /2.",
                "Thus, whether q > q or q < q , σi(q) will always do strictly better than σi(q ) against some remaining opponent strategies.",
                "Hence, no strategy σi(q ) can eliminate σi(q).",
                "The only other pure strategies that could dominate σi(q) are strategies that play ai for type θ1 i , and bi or ci for all other types.",
                "Let us take such a strategy and suppose that it plays c with probability p. Against σi+1(q ), σi+2(q ) (which have not yet been eliminated), the utility of playing this strategy is −(q )2 /2 − /2 + p · δ − p · q /2.",
                "On the other hand, playing σi(q) gives − + q · δ − q · q /2.",
                "Because q > q, we have −(q )2 /2 < −q · q /2, and because δ and are small, it follows that σi(q) receives a higher utility.",
                "Therefore, no strategy dominates σi(q), proving the claim.",
                "Claim 2: If for all q > q, σi+1(q ) and σi+2(q ) have been eliminated, then σi(q) can be eliminated.",
                "Proof: Consider the strategy for player i that plays ai for type θ1 i , and bi for all other types (call this strategy σi); we claim σi dominates σi(q).",
                "First, if either of the other players k plays ak for θ1 k, then σi performs better than σi(q) (which receives −∞ in some cases).",
                "Because the strategies for player k that play ck for type θ1 k, or ak for some type θj k with j > 1, have already been eliminated, all that remains to check is that σi performs better than σi(q) whenever both of the other two players play strategies of the following form: play bk for type θ1 k, and play one of bk or ck otherwise.",
                "We note that among these strategies, there are none left that place probability greater than q on ck.",
                "Letting qk denote the probability with which player k plays ck, the expected utility of playing σi is −qi+1 · qi+2/2 − /2.",
                "On the other hand, the utility of playing σi(q) is − + q · δ − q · qi+2/2.",
                "Because qi+1 ≤ q, the difference between these two expressions is at least /2 − δ, which is positive.",
                "It follows that σi dominates σi(q).",
                "From Claim 2, it follows that all strategies of the form σi(q) will eventually be eliminated.",
                "However, Claim 1 shows that we cannot go ahead and eliminate multiple such strategies for one player, unless at least one other player simultaneously keeps up in the eliminated strategies: every time a σi(q) is eliminated such that σi+1(q) and σi+2(q) have not yet been eliminated, we need to eliminate one of the latter two strategies before any σi(q ) with q > q can be eliminated-that is, we need to alternate between players.",
                "Because there are exponentially many strategies of the form σi(q), it follows that iterated elimination will require exponentially many iterations to complete. 96 It follows that an efficient algorithm for iterated dominance (strict or weak) by pure strategies in Bayesian games, if it exists, must somehow be able to perform (at least part of) many iterations in a single step of the algorithm (because if each step only performed a single iteration, we would need exponentially many steps).",
                "Interestingly, Knuth et al. [11] argue that iterated dominance appears to be an inherently sequential problem (in light of their result that iterated very weak dominance is P-complete, that is, apparently not efficiently parallelizable), suggesting that aggregating many iterations may be difficult. 7.",
                "CONCLUSIONS While the Nash equilibrium solution concept is studied more and more intensely in our community, the perhaps more elementary concept of (iterated) dominance has received much less attention.",
                "In this paper we studied various computational aspects of this concept.",
                "We first studied both strict and weak dominance (not iterated), and showed that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then moved on to iterated dominance.",
                "We showed that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allowed us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then studied what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we showed that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we showed that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we studied dominance and iterated dominance in Bayesian games, as an example of a concise representation language for normal form games that is interesting in its own right.",
                "We showed that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak dominance).",
                "Finally, we showed that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "There are various avenues for future research.",
                "First, there is the open question of whether it is possible to complete iterated dominance in Bayesian games in polynomial time (even though we showed that an exponential number of alternations between the players in eliminating strategies is sometimes required).",
                "Second, we can study computational aspects of (iterated) dominance in concise representations of normal form games other than Bayesian games-for example, in graphical games [9] or local-effect/action graph games [12, 2]. (How to efficiently perform iterated very weak dominance has already been studied for partially observable stochastic games [8].)",
                "Finally, we can ask whether some of the algorithms we described (such as the one for iterated strict dominance with mixed strategies) can be made faster. 8.",
                "REFERENCES [1] Krzysztof R. Apt.",
                "Uniform proofs of order independence for various strategy elimination procedures.",
                "Contributions to Theoretical Economics, 4(1), 2004. [2] Nivan A. R. Bhat and Kevin Leyton-Brown.",
                "Computing Nash equilibria of action-graph games.",
                "In UAI, 2004. [3] Ben Blum, Christian R. Shelton, and Daphne Koller.",
                "A continuation method for Nash equilibria in structured games.",
                "In IJCAI, 2003. [4] Vincent Conitzer and Tuomas Sandholm.",
                "Complexity results about Nash equilibria.",
                "In IJCAI, pages 765-771, 2003. [5] Drew Fudenberg and Jean Tirole.",
                "Game Theory.",
                "MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "On the order of eliminating dominated strategies.",
                "Operations Research Letters, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "The complexity of eliminating dominated strategies.",
                "Mathematics of Operation Research, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein, and Shlomo Zilberstein.",
                "Dynamic programming for partially observable stochastic games.",
                "In AAAI, pages 709-715, 2004. [9] Michael Kearns, Michael Littman, and Satinder Singh.",
                "Graphical models for game theory.",
                "In UAI, 2001. [10] Leonid Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou, and John N Tsitsiklis.",
                "A note on strategy elimination in bimatrix games.",
                "Operations Research Letters, 7(3):103-107, 1988. [12] Kevin Leyton-Brown and Moshe Tennenholtz.",
                "Local-effect games.",
                "In IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [14] Michael Littman and Peter Stone.",
                "A polynomial-time Nash equilibrium algorithm for repeated games.",
                "In ACM-EC, pages 48-54, 2003. [15] Leslie M. Marx and Jeroen M. Swinkels.",
                "Order independence for iterated weak dominance.",
                "Games and Economic Behavior, 18:219-245, 1997. [16] Leslie M. Marx and Jeroen M. Swinkels.",
                "Corrigendum, order independence for iterated weak dominance.",
                "Games and Economic Behavior, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston, and Jerry R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [18] Roger Myerson.",
                "Game Theory: Analysis of Conflict.",
                "Harvard University Press, Cambridge, 1991. [19] Martin J Osborne and Ariel Rubinstein.",
                "A Course in Game Theory.",
                "MIT Press, 1994. [20] Christos Papadimitriou.",
                "Algorithms, games and the Internet.",
                "In STOC, pages 749-753, 2001. [21] Ryan Porter, Eugene Nudelman, and Yoav Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, 2004. 97"
            ],
            "original_annotated_samples": [
                "INTRODUCTION In <br>multiagent system</br>s with self-interested agents, the optimal action for one agent may depend on the actions taken by other agents."
            ],
            "translated_annotated_samples": [
                "INTRODUCCIÓN En <br>sistemas multiagentes</br> con agentes auto-interesados, la acción óptima para un agente puede depender de las acciones tomadas por otros agentes."
            ],
            "translated_text": "Estudiamos varios aspectos computacionales de la resolución de juegos utilizando la dominancia y la dominancia iterada. Primero estudiamos tanto la dominancia estricta como la débil (no iterada), y demostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta se puede hacer en tiempo polinómico utilizando la resolución de un único programa lineal. Luego pasamos a la dominancia iterada. Mostramos que determinar si existe algún camino que elimine una estrategia dada es NP-completo con dominancia débil iterada. Esto nos permite también demostrar que determinar si existe un camino que conduce a una solución única es NP-completo. Ambos resultados se mantienen tanto con como sin dominancia de estrategias mixtas. (Una versión más débil del segundo resultado (solo sin dominancia de estrategias mixtas) ya se conocía [7].) La dominancia estricta iterada, por otro lado, es independiente de la ruta (tanto con como sin dominancia por estrategias mixtas) y, por lo tanto, se puede realizar en tiempo polinómico. Luego estudiamos qué sucede cuando la estrategia dominante puede asignar una probabilidad positiva solo a unas pocas estrategias puras. Primero, demostramos que encontrar la estrategia dominante con el tamaño de soporte mínimo es NP-completo (tanto para dominancia estricta como débil). Luego, demostramos que la dominancia estricta iterada se vuelve dependiente del camino cuando hay un límite en el tamaño del soporte de las estrategias dominantes, y que decidir si una estrategia dada puede ser eliminada por dominancia estricta iterada bajo esta restricción es NP-completo (incluso cuando el límite en el tamaño del soporte es 3). Finalmente, estudiamos juegos bayesianos. Mostramos que, a diferencia de los juegos en forma normal, decidir si una estrategia pura dada está dominada por otra estrategia pura en un juego bayesiano es NP-completo (tanto con dominancia estricta como débil); sin embargo, decidir si una estrategia está dominada por alguna estrategia mixta aún puede hacerse en tiempo polinómico con la resolución de un único programa lineal (tanto con dominancia estricta como débil). Finalmente, demostramos que la dominancia iterada utilizando estrategias puras puede requerir un número exponencial de iteraciones en un juego bayesiano (tanto con dominancia estricta como débil). Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN En <br>sistemas multiagentes</br> con agentes auto-interesados, la acción óptima para un agente puede depender de las acciones tomadas por otros agentes. En tales contextos, los agentes necesitan herramientas de teoría de juegos para decidir racionalmente sobre una acción. La teoría de juegos ofrece varios modelos formales de escenarios estratégicos, el más conocido de los cuales es un juego en forma normal (o matriz), que especifica una utilidad (pago) para cada agente en cada combinación de estrategias que los agentes eligen, así como conceptos de solución que, dados un juego, especifican qué resultados son razonables (bajo varias suposiciones de racionalidad y conocimiento común). Probablemente el concepto de solución más conocido (y ciertamente el más estudiado) es el equilibrio de Nash. Un equilibrio de Nash especifica una estrategia para cada jugador, de tal manera que ningún jugador tiene un incentivo para desviarse (unilateralmente) de la estrategia prescrita. Recientemente, numerosos artículos han estudiado el cálculo de equilibrios de Nash en diferentes contextos [9, 4, 12, 3, 13, 14], y la complejidad de construir un equilibrio de Nash en juegos en forma normal ha sido etiquetada como uno de los dos problemas abiertos más importantes en el límite de P hoy en día [20]. El problema de calcular soluciones de acuerdo con los conceptos de solución quizás más elementales de dominancia y dominancia iterada ha recibido mucha menos atención. (Después de un breve artículo temprano sobre un caso sencillo [11], el principal estudio computacional de estos conceptos ha tenido lugar en realidad en un artículo de la comunidad de teoría de juegos [7].) Una estrategia domina estrictamente a otra estrategia si tiene un rendimiento estrictamente mejor contra todos los vectores de estrategias del oponente, y la domina débilmente si tiene al menos el mismo rendimiento contra todos los vectores de estrategias del oponente, y estrictamente mejor contra al menos uno. La idea es que las estrategias dominadas pueden ser eliminadas de consideración. En la dominancia iterada, la eliminación avanza en rondas y se vuelve más fácil a medida que se eliminan más estrategias: en cualquier ronda dada, la estrategia dominante ya no necesita desempeñarse mejor que o igual que la estrategia dominada contra las estrategias oponentes que fueron eliminadas en rondas anteriores. Calcular soluciones según la dominancia (iterada) es importante por al menos las siguientes razones: 1) puede ser computacionalmente más fácil que calcular (por ejemplo) un equilibrio de Nash (y por lo tanto puede ser útil como paso de preprocesamiento en el cálculo de un equilibrio de Nash), y 2) la dominancia (iterada) requiere una suposición de racionalidad más débil en los jugadores que (por ejemplo) el equilibrio de Nash, y por lo tanto las soluciones derivadas según ella son más propensas a ocurrir. En este artículo, estudiamos algunas preguntas computacionales fundamentales relacionadas con la dominancia y la dominancia iterada, incluyendo qué tan difícil es verificar si una estrategia dada puede ser eliminada por cada una de las variantes de estos conceptos. El resto del documento está organizado de la siguiente manera. En la Sección 2, revisamos brevemente las definiciones y propiedades básicas de los juegos en forma normal, la dominancia estricta y débil, y la dominancia estricta y débil iterada. En las secciones restantes, estudiamos los aspectos computacionales de la dominancia y la dominancia iterada. En la Sección 3, estudiamos la dominancia de un solo disparo (no iterada). En la Sección 4, estudiamos la dominancia iterada. En la Sección 5, estudiamos la dominancia y la dominancia iterada cuando la estrategia dominante solo puede asignar probabilidad a unas pocas estrategias puras. Finalmente, en la Sección 6, estudiamos la dominancia y la dominancia iterada en juegos bayesianos. 2. DEFINICIONES Y PROPIEDADES BÁSICAS En esta sección, revisamos brevemente los juegos en forma normal, así como la dominancia y la dominancia iterada (tanto estricta como débil). Un juego de forma normal de n jugadores se define de la siguiente manera. Definición 1. Un juego en forma normal está dado por un conjunto de jugadores {1, 2, . . . , n}; y, para cada jugador i, un conjunto (finito) de estrategias puras Σi y una función de utilidad ui : Σ1 × Σ2 × . . . × Σn → R (donde ui(σ1, σ2, . . . , σn) denota la utilidad del jugador i cuando cada jugador j juega la acción σj). Las dos principales nociones de dominancia se definen de la siguiente manera. Definición 2. La estrategia σi del jugador se dice que está estrictamente dominada por la estrategia σi del jugador si, para cualquier vector de estrategias σ−i de los otros jugadores, ui(σi, σ−i) > ui(σi, σ−i). La estrategia σi del jugador se dice que está débilmente dominada por la estrategia σi del jugador si, para cualquier vector de estrategias σ−i para los otros jugadores, ui(σi, σ−i) ≥ ui(σi, σ−i), y para al menos un vector de estrategias σ−i para los otros jugadores, ui(σi, σ−i) > ui(σi, σ−i). En esta definición, a veces se permite que la estrategia dominante σi sea una estrategia mixta, es decir, una distribución de probabilidad sobre estrategias puras. En este caso, las utilidades están en dominancia en conjunto. Por ejemplo, a veces se utilizan comprobaciones de dominancia simple como una subrutina en la búsqueda de equilibrios de Nash [21]. Las definiciones son las utilidades esperadas. Hay otras nociones de dominancia, como la dominancia muy débil (en la que no se requiere ninguna desigualdad estricta, por lo que dos estrategias pueden dominarse mutuamente), pero no las estudiaremos aquí. Cuando estamos analizando las relaciones de dominancia para el jugador i, los otros jugadores (−i) pueden ser considerados como un solo jugador. Por lo tanto, en el resto del documento, cuando estudiamos la dominancia de un solo paso (no iterada), nos centraremos sin pérdida de generalidad en juegos de dos jugadores. En juegos de dos jugadores, generalmente nos referiremos a los jugadores como r (fila) y c (columna) en lugar de 1 y 2. En la dominancia iterada, las estrategias dominadas son eliminadas del juego y ya no tienen ningún efecto en las relaciones de dominancia futuras. La dominancia iterada puede eliminar más estrategias que la dominancia, de la siguiente manera. σr puede originalmente no dominar a σr porque este último tiene un mejor desempeño contra σc; pero luego, una vez que σc es eliminado porque es dominado por σc, σr domina a σr, y este último puede ser eliminado. Por ejemplo, en el siguiente juego, se puede eliminar primero a R, después de lo cual D queda dominado. Tanto la dominancia estricta como la dominancia débil pueden ser utilizadas en la definición de la dominancia iterada. Observamos que el proceso de dominancia iterada nunca se ve favorecido al eliminar una estrategia mixta dominada, por la siguiente razón. Si σi le da al jugador i una utilidad mayor que σi contra la estrategia mixta σj para el jugador j = i (y estrategias σ−{i,j} para los otros jugadores), entonces para al menos una estrategia pura σj en la que σj coloque probabilidad positiva, σi debe desempeñarse mejor que σi contra σj (y estrategias σ−{i,j} para los otros jugadores). Por lo tanto, eliminar la estrategia mixta σj no introduce nuevas dominancias. Discusiones más detalladas y ejemplos se pueden encontrar en textos estándar sobre microeconomía o teoría de juegos [17, 5]. Ahora estamos listos para pasar al núcleo de este documento. 3. En esta sección, estudiamos la noción de dominancia de un solo turno (no iterada). Como primera observación, verificar si una estrategia dada está estrictamente (débilmente) dominada por alguna estrategia pura es sencillo, al comprobar, para cada estrategia pura de ese jugador, si la última estrategia tiene un rendimiento estrictamente mejor contra todas las estrategias de los oponentes (al menos igual de bien contra todas las estrategias de los oponentes, y estrictamente 2 La estrategia dominada σi, por supuesto, también puede ser mixta, pero esto no tiene implicaciones técnicas para el documento: cuando estudiamos la dominancia de un solo disparo, preguntamos si una estrategia dada está dominada, y no importa si la estrategia dada es pura o mixta; cuando estudiamos la dominancia iterada, no tiene sentido eliminar las estrategias mixtas, como veremos en breve. 3 Este jugador puede tener un espacio de estrategias muy grande (una estrategia pura para cada vector de estrategias puras de los jugadores que están siendo reemplazados). Sin embargo, esto no resultará en un aumento en el tamaño de nuestra representación, ya que la representación original ya tenía que especificar las utilidades para cada uno de estos vectores. Observamos que una restricción a juegos de dos jugadores no sería sin pérdida de generalidad para la dominancia iterada. Esto se debe a que para la dominancia iterada, necesitamos analizar las estrategias dominadas de cada jugador individual, por lo que no podemos fusionar a ningún jugador. A continuación, mostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta se puede hacer en tiempo polinómico resolviendo un único programa lineal. (Programas lineales similares se han presentado anteriormente [18]; presentamos el resultado aquí por completitud, y porque construiremos sobre los programas lineales dados a continuación en el Teorema 6.) Proposición 1. Dadas las utilidades de los jugadores de fila, un subconjunto Dr de las estrategias puras de los jugadores de fila Σr, y una estrategia distinguida σ∗ r para el jugador de fila, podemos verificar en tiempo polinómico en el tamaño del juego (resolviendo un único programa lineal de tamaño polinómico) si existe alguna estrategia mixta σr, que coloque probabilidad positiva solo en estrategias en Dr y domine a σ∗ r, tanto en dominancia estricta como débil. Prueba. Sea pdr la probabilidad que σr asigna a dr ∈ Dr. Resolveremos un único programa lineal en cada uno de nuestros algoritmos; los programas lineales pueden resolverse en tiempo polinómico [10]. Para la dominancia estricta, la pregunta es si se puede establecer el pdr de manera que para cada estrategia pura del jugador de la columna σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc). Debido a que la desigualdad debe ser estricta, no podemos resolver esto directamente mediante programación lineal. Procedemos de la siguiente manera. Dado que el juego es finito, podemos asumir sin pérdida de generalidad que todas las utilidades son positivas (si no lo son, simplemente añade una constante a todas las utilidades). Resolver el siguiente programa lineal: minimizar dr∈Dr pdr tal que para cualquier σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc). Si σ∗ r es estrictamente dominada por alguna estrategia mixta, este programa lineal tiene una solución con un valor objetivo < 1. (La estrategia dominante es una solución factible con un valor objetivo exactamente igual a 1. Dado que ninguna restricción es vinculante para esta solución, podemos reducir ligeramente una de las probabilidades sin afectar la viabilidad, obteniendo así una solución con un valor objetivo < 1. Además, si este programa lineal tiene una solución con un valor objetivo < 1, existe una estrategia mixta que domina estrictamente a σ∗ r, la cual se puede obtener tomando la solución del PL y agregando la probabilidad restante a cualquier estrategia (debido a que todas las utilidades son positivas, esto sumará al lado izquierdo de cualquier desigualdad, por lo que todas las desigualdades se volverán estrictas). Para la dominancia débil, podemos resolver el siguiente programa lineal: maximizar σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) tal que para cualquier σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1. Si σ∗ r está débilmente dominado por alguna estrategia mixta, entonces esa estrategia mixta es una solución factible para este programa con un valor objetivo > 0, porque para al menos una estrategia σc ∈ Σc tenemos ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0. Por otro lado, si este programa tiene una solución con un valor objetivo > 0, entonces para al menos una estrategia σc ∈ Σc debemos tener ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, y por lo tanto la solución de los programas lineales es una estrategia mixta débilmente dominante. 4. DOMINANCIA ITERADA Ahora pasamos a la dominancia iterada. Es bien sabido que la dominancia estricta iterada es independiente del camino [6, 19], es decir, si eliminamos las estrategias dominadas hasta que ya no queden más estrategias dominadas, al final las estrategias restantes para cada jugador serán las mismas, independientemente del orden en que se eliminen las estrategias. Por lo tanto, para determinar si una estrategia dada puede ser eliminada por dominancia estricta iterada, todo lo que se necesita hacer es eliminar repetidamente las estrategias que son estrictamente dominadas, hasta que no queden más estrategias dominadas. Dado que podemos verificar en tiempo polinómico si alguna estrategia dada está dominada (ya sea que se permita o no la dominancia por estrategias mixtas, como se describe en la Sección 3), todo este procedimiento toma solo tiempo polinómico. En el caso de la dominancia iterada por estrategias puras con dos jugadores, Knuth et al. [11] mejoran ligeramente (aceleran) la implementación directa de este procedimiento al llevar un registro, para cada par ordenado de estrategias de un jugador, del número de estrategias del oponente que impiden que la primera estrategia domine a la segunda. Por lo tanto, el tiempo de ejecución para un juego m × n se reduce de O((m + n)4 ) a O((m + n)3 ). (En realidad, solo estudian dominancia muy débil (para la cual no se requieren desigualdades estrictas), pero el enfoque se puede extender fácilmente). Por el contrario, se sabe que la dominancia débil iterada es dependiente del camino. Por ejemplo, en el siguiente juego, utilizando la dominancia débil iterada podemos eliminar primero M y luego D, o primero R y luego U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Por lo tanto, si bien el procedimiento de eliminar estrategias débilmente dominadas hasta que no queden más estrategias débilmente dominadas puede ciertamente ejecutarse en tiempo polinómico, qué estrategias sobreviven al final depende del orden en el que eliminamos las estrategias dominadas. Investigaremos dos preguntas para la dominancia débil iterada: si una estrategia dada es eliminada en algún camino, y si hay un camino hacia una solución única (una única estrategia pura por jugador). Mostraremos que ambos de estos problemas son computacionalmente difíciles. Definición 3. Dada un juego en forma normal y una estrategia distinguida σ∗ , la ELIMINACIÓN DE ESTRATEGIAS POR DOMINANCIA DÉBIL (IWD-STRATEGY-ELIMINATION) pregunta si existe algún camino de dominancia débil iterada que elimine σ∗ . Dada un juego en forma normal, IWDUNIQUE-SOLUTION pregunta si existe algún camino de dominancia débil iterada que conduzca a una solución única (una estrategia restante por jugador). El siguiente lema muestra un caso especial de juegos en forma normal en el que permitir la dominancia débil a través de estrategias mixtas (además de la dominancia débil a través de estrategias puras) hace 6. Sin embargo, existe una restricción de dominancia débil llamada dominancia débil agradable que es independiente de la ruta [15, 16]. Para obtener una visión general de los resultados de independencia de la ruta, consulte Apt [1]. 90 no ayuda. Demostraremos los resultados de dificultad en este contexto, de modo que se mantengan independientemente de si se permite o no la dominancia por estrategias mixtas. Lema 1. Supongamos que todas las utilidades en un juego están en {0, 1}. Entonces, toda estrategia pura que es débilmente dominada por una estrategia mixta también es débilmente dominada por una estrategia pura. Prueba. Se supone que la estrategia pura σ es débilmente dominada por la estrategia mixta σ∗. Si σ obtiene una utilidad de 1 contra alguna estrategia o vector de estrategias del oponente (si hay más de 2 jugadores), entonces todas las estrategias puras en las que σ∗ asigna una probabilidad positiva también deben obtener una utilidad de 1 contra esa estrategia del oponente (de lo contrario, la utilidad esperada sería menor que 1). Además, al menos una de las estrategias puras en las que σ∗ coloca probabilidad positiva debe obtener una utilidad de 1 contra una estrategia del oponente que σ obtiene 0 (de lo contrario, la desigualdad nunca sería estricta). Se deduce que esta estrategia pura domina débilmente a σ. Ahora estamos listos para demostrar los resultados principales de esta sección. Teorema 1. IWD-STRATEGY-ELIMINATION es NPcompleto, incluso con 2 jugadores, y con 0 y 1 siendo las únicas utilidades que ocurren en la matriz, ya sea que se permita o no la dominancia por estrategias mixtas. Prueba. El problema está en NP porque, dado una secuencia de estrategias a ser eliminadas, podemos verificar fácilmente si esta es una secuencia válida de eliminaciones (incluso cuando se permite la dominancia por estrategias mixtas, utilizando la Proposición 1). Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto no vacío de cláusulas C sobre un conjunto no vacío de variables V, con literales correspondientes L = {+v : v ∈ V} ∪ {−v : v ∈ V}) a la siguiente instancia de ELIMINACIÓN DE ESTRATEGIA IWD. (En esta instancia, especificaremos que ciertas estrategias son ineliminables. Una estrategia σr puede hacerse ineliminable, incluso cuando 0 y 1 son las únicas utilidades permitidas, al agregar otra estrategia σr y otra estrategia del oponente σc, de modo que: 1. σr y σr son las únicas estrategias que le dan al jugador de la fila una utilidad de 1 contra σc. 2. σr y σr siempre le dan al jugador de la fila la misma utilidad. 3. σc es la única estrategia que le da al jugador de la columna una utilidad de 1 contra σr, pero de lo contrario σc siempre le da al jugador de la columna una utilidad de 0. Esto hace imposible eliminar cualquiera de estas tres estrategias. No especificaremos explícitamente las estrategias adicionales para hacer la prueba más legible. En esta demostración, designaremos las estrategias del jugador de fila como s, y las estrategias del jugador de columna como t, para mejorar la legibilidad. Que se dé el conjunto de estrategias puras de los jugadores de fila como sigue. Para cada variable v ∈ V, el jugador de la fila tiene estrategias correspondientes s1 +v, s2 +v, s1 −v, s2 −v. Además, el jugador de la fila tiene las siguientes 2 estrategias: s1 0 y s2 0, donde s2 0 = σ∗ r (es decir, es la estrategia que buscamos eliminar). Finalmente, para cada cláusula c ∈ C, el jugador de la fila tiene estrategias correspondientes s1 c (ineliminables) y s2 c. Dado el conjunto de estrategias puras de los jugadores de la columna de la siguiente manera. Para cada variable v ∈ V, el jugador de la columna tiene una estrategia correspondiente tv. Para cada cláusula c ∈ C, el jugador de la columna tiene una estrategia correspondiente tc, y además, para cada literal l ∈ L que ocurre en c, una estrategia tc,l. Para cada variable v ∈ V, el jugador de la columna tiene estrategias correspondientes t+v, t−v (ambas no eliminables). Finalmente, el jugador de la columna tiene tres estrategias adicionales: t1 0 (ineliminable), t2 0 y t1. La función de utilidad para el jugador de la fila se da de la siguiente manera: • ur(s1 +v, tv) = 0 para todo v ∈ V ; • ur(s2 +v, tv) = 1 para todo v ∈ V ; • ur(s1 −v, tv) = 1 para todo v ∈ V ; • ur(s2 −v, tv) = 0 para todo v ∈ V ; • ur(s1 +v, t1) = 1 para todo v ∈ V ; • ur(s2 +v, t1) = 0 para todo v ∈ V ; • ur(s1 −v, t1) = 0 para todo v ∈ V ; • ur(s2 −v, t1) = 1 para todo v ∈ V ; • ur(sb +v, t+v) = 1 para todo v ∈ V y b ∈ {1, 2}; • ur(sb −v, t−v) = 1 para todo v ∈ V y b ∈ {1, 2}; • ur(sl, t) = 0 de lo contrario para todo l ∈ L y t ∈ S2; • ur(s1 0, tc) = 0 para todo c ∈ C; • ur(s2 0, tc) = 1 para todo c ∈ C; • ur(sb 0, t1 0) = 1 para todo b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 de lo contrario para todo b ∈ {1, 2} y t ∈ S2; • ur(sb c, t) = 0 de lo contrario para todo c ∈ C y b ∈ {1, 2}; y la utilidad del jugador de la fila es 0 en todos los demás casos. La función de utilidad para el jugador de la columna se da de la siguiente manera: • uc(s, tv) = 0 para todo v ∈ V y s ∈ S1; • uc(s, t1) = 0 para todo s ∈ S1; • uc(s2 l , tc) = 1 para todo c ∈ C y l ∈ L donde l ∈ c (literal l ocurre en la cláusula c); • uc(s2 l2 , tc,l1 ) = 1 para todo c ∈ C y l1, l2 ∈ L, l1 = l2 donde l2 ∈ c; • uc(s1 c, tc) = 1 para todo c ∈ C; • uc(s2 c, tc) = 0 para todo c ∈ C; • uc(sb c, tc,l) = 1 para todo c ∈ C, l ∈ L, y b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 en otro caso para todo c ∈ C y l ∈ L; y la utilidad del jugador de la columna es 0 en todos los demás casos. Ahora demostramos que las dos instancias son equivalentes. Primero, supongamos que hay una solución para la instancia de satisfactibilidad: es decir, una asignación de valores de verdad a las variables en V tal que todas las cláusulas se satisfacen. Entonces, considera la siguiente secuencia de eliminaciones en nuestro juego: 1. Para cada variable v que se establezca como verdadera en la asignación, elimine tv (lo que da como resultado una utilidad de 0 para el jugador de la columna en todas partes). 2. Entonces, para cada variable v que se establezca como verdadera en la asignación, elimine s2 +v usando s1 +v (lo cual es posible porque tv ha sido eliminado, y porque t1 no ha sido eliminado (aún)). 3. Ahora elimina t1 (lo cual da como resultado una utilidad de 0 para el jugador de la columna). 4. A continuación, para cada variable v que se establezca como falso en la asignación, elimine s2 −v usando s1 −v (lo cual es posible porque t1 ha sido eliminado, y porque tv no ha sido eliminado (aún)). 5. Para cada cláusula c que tenga la variable correspondiente a uno de sus literales positivos l = +v establecido como verdadero en la asignación, elimine tc utilizando tc,l (lo cual es posible porque s2 l ha sido eliminado, y s2 c no ha sido eliminado (aún)). 6. Para cada cláusula c en la que la variable correspondiente a uno de sus literales negativos l = −v se establece en falso en la asignación, elimine tc utilizando tc,l 91 (lo cual es posible porque s2 l ha sido eliminado, y s2 c no ha sido eliminado (aún)). 7. Debido a que la tarea cumplió con la fórmula, todos los tc han sido eliminados ahora. Por lo tanto, podemos eliminar s2 0 = σ∗ r usando s1 0. Se deduce que hay una solución para la instancia IWD-STRATEGY-ELIMINATION. Ahora supongamos que hay una solución para la instancia IWD-STRATEGYELIMINATION. Por el Lema 1, podemos asumir que todas las dominancias son por estrategias puras. Primero observamos que solo s1 0 puede eliminar s2 0 = σ∗ r, porque es la única otra estrategia que le da al jugador de la fila una utilidad de 1 contra t1 0, y t1 0 es ineliminable. Sin embargo, dado que s2 0 tiene un mejor rendimiento que s1 0 contra las estrategias de tc, se deduce que todas las estrategias de tc deben ser eliminadas. Para cada c ∈ C, la estrategia tc solo puede ser eliminada por una de las estrategias tc,l (con el mismo c), ya que estas son las únicas otras estrategias que le dan al jugador de la columna una utilidad de 1 contra s1 c, y s1 c es ineliminable. Pero, para que algún tc,l elimine tc, primero se debe eliminar s2 l. Solo s1 l puede eliminar s2 l, porque es la única otra estrategia que le otorga al jugador de la fila una utilidad de 1 contra tl, y tl es ineliminable. A continuación mostramos que para cada v ∈ V solo se puede eliminar uno de s2 +v, s2 −v. Esto se debe a que para que s1 +v elimine s2 +v, tv debe haber sido eliminado y t1, no (por lo tanto, tv debe ser eliminado antes que t1); pero para que s1 -v elimine s2 -v, t1 debe haber sido eliminado y tv, no (por lo tanto, t1 debe ser eliminado antes que tv). Por lo tanto, establezca v en verdadero si s2 + v es eliminado, y en falso de lo contrario. Debido a lo anterior, para cada cláusula c, uno de los s2 con l ∈ c debe ser eliminado, por lo que se deduce que esta es una asignación satisfactoria para la instancia de satisfactibilidad. Usando el Teorema 1, ahora es (relativamente) fácil demostrar que IWD-UNIQUE-SOLUTION también es NP-completo bajo las mismas restricciones. Teorema 2. IWD-UNIQUE-SOLUTION es NP-completo, incluso con 2 jugadores, y con 0 y 1 siendo las únicas utilidades que ocurren en la matriz, ya sea que se permita o no la dominancia por estrategias mixtas. Prueba. Nuevamente, el problema está en NP porque podemos elegir de manera no determinista la secuencia de eliminaciones y verificar si es correcta. Para demostrar la NP-dificultad, reducimos una instancia arbitraria de IWD-STRATEGY-ELIMINATION a la siguiente instancia de IWD-UNIQUE-SOLUTION. Que todas las estrategias de cada jugador de la instancia original formen parte de la nueva instancia, y que las utilidades resultantes de los jugadores al jugar un par de estas estrategias sean las mismas. Añadimos tres estrategias adicionales σ1 r , σ2 r , σ3 r para el jugador de fila, y tres estrategias adicionales σ1 c , σ2 c , σ3 c para el jugador de columna. Que las utilidades adicionales sean las siguientes: • ur(σr, σj c) = 1 para todo σr /∈ {σ1 r , σ2 r , σ3 r } y j ∈ {2, 3}; • ur(σi r, σc) = 1 para todo i ∈ {1, 2, 3} y σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 para todo i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • y la utilidad de los jugadores de fila es 0 en todos los demás casos que involucren una nueva estrategia. • uc(σ3 r , σc) = 1 para todo σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 para todo j ∈ {2, 3} (σ∗ r es la estrategia a ser eliminada en la instancia original); • uc(σi r, σ1 c ) = 1 para todo i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • y la utilidad de los jugadores de columna es 0 en todos los demás casos que involucren una nueva estrategia. Procedemos a demostrar que las dos instancias son equivalentes. Primero supongamos que existe una solución para la instancia original de IWDSTRATEGY-ELIMINATION. Luego, realiza la misma secuencia de eliminaciones para eliminar σ∗ r en la nueva instancia IWD-UNIQUE-SOLUTION. (Esto es posible porque en cualquier etapa, cualquier dominancia débil para el jugador de fila en la instancia original sigue siendo una dominancia débil en la nueva instancia, ya que las utilidades de las dos estrategias para el jugador de fila son las mismas cuando el jugador de columna juega una de las nuevas estrategias; y lo mismo ocurre para el jugador de columna). Una vez que σ∗ r sea eliminado, permita que σ1 c elimine a σ2 c. (Se desempeña mejor contra σ2 r.) Entonces, dejemos que σ1 r elimine todas las demás estrategias restantes para el jugador de la fila. (Siempre tiene un mejor desempeño contra σ1 c o σ3 c.) Finalmente, σ1 c es la mejor respuesta única contra σ1 r entre las estrategias restantes de los jugadores de columna, así que permitamos que elimine todas las demás estrategias restantes para el jugador de columna. Por lo tanto, existe una solución para la instancia IWD-UNIQUE-SOLUTION. Ahora supongamos que existe una solución para la instancia IWD-UNIQUESOLUTION. Por el Lema 1, podemos asumir que todas las dominancias son por estrategias puras. Mostraremos que ninguna de las nuevas estrategias (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) puede eliminar a otra estrategia, ni ser eliminada antes de que σ∗ r sea eliminada. Por lo tanto, debe haber una secuencia de eliminaciones que termine con la eliminación de σ∗ r, la cual no involucre ninguna de las nuevas estrategias y, por lo tanto, sea una secuencia válida de eliminaciones en el juego original (porque todas las estrategias originales tienen el mismo rendimiento contra cada nueva estrategia). Ahora demostramos que esto es cierto agotando todas las posibilidades para la primera eliminación antes de que se elimine σ∗ r que implica una nueva estrategia. Ninguno de los σi r puede ser eliminado por un σr /∈ {σ1 r , σ2 r , σ3 r}, porque los σi r tienen un mejor desempeño contra σ1 c. σ1 r no puede eliminar ninguna otra estrategia, porque siempre tiene un desempeño inferior contra σ2 c. σ2 r y σ3 r son equivalentes desde la perspectiva de los jugadores de fila (y por lo tanto no pueden eliminarse entre sí), y no pueden eliminar ninguna otra estrategia porque siempre tienen un desempeño inferior contra σ3 c. Ninguno de los σj c puede ser eliminado por un σc /∈ {σ1 c , σ2 c , σ3 c}, porque los σj c siempre tienen un mejor desempeño contra σ1 r o σ2 r. σ1 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ∗ r o σ3 r. σ2 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ2 r o σ3 r. σ3 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ1 r o σ3 r. Por lo tanto, existe una solución para la instancia IWDSTRATEGY-ELIMINATION. Una versión ligeramente más débil de la parte del Teorema 2 que concierne la dominancia solo por estrategias puras es el resultado principal de Gilboa et al. [7]. (Además de no demostrar el resultado para la dominancia por estrategias mixtas, el resultado original era más débil porque requería utilidades {0, 1, 2, 3, 4, 5, 6, 7, 8} en lugar de solo {0, 1} (y debido a esto, nuestro Lema 1 no se puede aplicar para obtener el resultado para estrategias mixtas).) 5. DOMINANCIA (ITERADA) USANDO ESTRATEGIAS MIXTAS CON SOPORTES PEQUEÑOS Al demostrar que una estrategia es dominada por una estrategia mixta, hay varias razones para preferir exhibir una estrategia dominante que coloque probabilidad positiva en la menor cantidad posible de estrategias puras. Primero, esto reducirá el número de bits necesarios para especificar la estrategia dominante (y así la prueba de dominancia se puede comunicar más rápido): si la estrategia mixta dominante coloca probabilidad positiva en solo k estrategias, entonces se puede especificar usando k números reales para las probabilidades, más k log m (donde m es el número de estrategias para el jugador en consideración) bits para indicar qué estrategias se utilizan. Segundo, la prueba de dominancia será más clara: para una estrategia mixta dominante, es típicamente (siempre en el caso de dominancia estricta) posible distribuir parte de la probabilidad en cualquier estrategia pura no utilizada y aún así tener una estrategia dominante, pero esto oscurece cuáles estrategias puras son las clave para hacer que la estrategia mixta sea dominante. Tercero, debido a que el argumento para eliminar la estrategia dominada es más simple y fácil de entender, es más probable que sea aceptado. En cuarto lugar, el nivel de neutralidad al riesgo requerido para que el argumento funcione se reduce, al menos en el caso extremo donde se puede exhibir la dominancia de una única estrategia pura (no se requiere neutralidad al riesgo aquí). Esto motiva el siguiente problema. Definición 4 (CONJUNTO DOMINANTE MÍNIMO). Se nos dan las utilidades de los jugadores de fila de un juego en forma normal, una estrategia distinguida σ∗ para el jugador de fila, una especificación de si la dominancia debe ser estricta o débil, y un número k. Se nos pregunta si existe una estrategia mixta σ para el jugador de fila que coloque probabilidad positiva en como máximo k estrategias puras, y domine a σ∗ en el sentido requerido. Lamentablemente, este problema es NP-completo. Teorema 3. El problema del CONJUNTO DOMINANTE MÍNIMO es NP-completo, tanto para dominancia estricta como para dominancia débil. Prueba. El problema está en NP porque podemos elegir de manera no determinista un conjunto de a lo sumo k estrategias para dar probabilidad positiva, y decidir si podemos dominar a σ∗ con estas k estrategias como se describe en la Proposición 1. Para demostrar la NP-dificultad, reducimos una instancia arbitraria de COBERTURA-DE-CONJUNTOS (dado un conjunto S, subconjuntos S1, S2, . . . , Sr, y un número t, ¿puede S ser cubierto por a lo sumo t de los subconjuntos?) a la siguiente instancia de CONJUNTO-DOMINANTE-MÍNIMO. Para cada elemento s ∈ S, hay una estrategia pura σs para el jugador de la columna. Para cada subconjunto Si, hay una estrategia pura σSi para el jugador de la fila. Finalmente, está la distinguida estrategia pura σ∗ para el jugador de la fila. Las utilidades de los jugadores de la fila son las siguientes: ur(σSi , σs) = t + 1 si s ∈ Si; ur(σSi , σs) = 0 si s /∈ Si; ur(σ∗ , σs) = 1 para todo s ∈ S. Finalmente, dejamos que k = t. Ahora procedemos a demostrar que las dos instancias son equivalentes. Primero supongamos que existe una solución para la instancia de COBERTURA-CONJUNTO. Sin pérdida de generalidad, podemos asumir que hay exactamente k subconjuntos en la cobertura. Entonces, para cada Si que esté en la cobertura, dejemos que la estrategia dominante σ coloque exactamente 1 k de probabilidad en la estrategia pura correspondiente σSi. Ahora, si dejamos que n(s) sea el número de subconjuntos en la cobertura que contienen a s (observamos que n(s) ≥ 1), entonces para cada estrategia σs del jugador de la columna, la utilidad esperada de los jugadores de la fila al jugar σ cuando el jugador de la columna está jugando σs es u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs). Entonces, σ domina estrictamente (y por lo tanto también débilmente) a σ∗, y existe una solución para la instancia del conjunto de dominación mínimo. Ahora supongamos que existe una solución para la instancia de CONJUNTO-DOMINANTE-MÍNIMO. Considera las estrategias puras (a lo sumo k) de la forma σSi en las que la estrategia mixta dominante σ asigna probabilidad positiva, y deja que T sea la colección de los subconjuntos correspondientes Si. Sostenemos que T es una cubierta. Supongamos que hay algún s ∈ S que no está en ninguno de los subconjuntos en T. Entonces, si el jugador de la columna juega σs, el jugador de la fila (cuando juega σ) siempre recibirá una utilidad de 0, en contraposición a la utilidad de 1 que el jugador de la fila recibiría al jugar σ∗, contradiciendo el hecho de que σ domina a σ∗ (ya sea esta dominancia débil o estricta). Se deduce que existe una solución para la instancia de COBERTURA-DE-CONJUNTOS. Por otro lado, si requerimos que la estrategia dominante solo coloque probabilidad positiva en un número muy pequeño de estrategias puras, entonces una vez más resulta fácil verificar si una estrategia está dominada. Específicamente, para determinar si la estrategia σ∗ del jugador está dominada por una estrategia que coloca probabilidad positiva solo en k estrategias puras, simplemente podemos verificar, para cada subconjunto de k de las estrategias puras del jugador, si hay una estrategia que coloca probabilidad positiva solo en esas k estrategias y domina a σ∗, utilizando la Proposición 1. Esto solo requiere O(|Σi|k) comprobaciones. Por lo tanto, si k es una constante, esto constituye un algoritmo de tiempo polinómico. Una pregunta natural que surge a continuación es si la dominancia estricta iterada sigue siendo computacionalmente fácil cuando se requiere que las estrategias dominantes coloquen una probabilidad positiva en como máximo k estrategias puras, donde k es una constante pequeña. (Ya hemos demostrado en la Sección 4 que la dominancia débil iterada es difícil incluso cuando k = 1, es decir, solo se permite la dominancia por estrategias puras). Por supuesto, si la dominancia estricta iterada fuera independiente del camino bajo esta restricción, la facilidad computacional seguiría como lo hizo en la Sección 4. Sin embargo, resulta que esto no es así. Observación 1. Si restringimos las estrategias dominantes para asignar probabilidad positiva a lo sumo a dos estrategias puras, la dominancia estricta iterada se vuelve dependiente del camino. Prueba. Considera el siguiente juego: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Sea (i, j) el resultado en el que el jugador de la fila juega en la fila i y el jugador de la columna juega en la columna j. Dado que (1, 1), (2, 2) y (4, 3) son todos equilibrios de Nash, ninguna de las estrategias puras de los jugadores de columna será eliminada, al igual que las filas 1, 2 y 4. Ahora observamos que la aleatorización uniforme entre las filas 1 y 2 domina a la fila 3, y la aleatorización uniforme entre las filas 3 y 4 domina a la fila 5. Sin embargo, si eliminamos la fila 3 primero, se vuelve imposible dominar la fila 5 sin aleatorizar al menos 3 estrategias puras. De hecho, la dominancia estricta iterada resulta ser difícil incluso cuando k = 3. Teorema 4. Si restringimos las estrategias dominantes para colocar una probabilidad positiva en como máximo tres estrategias puras, se vuelve NP-completo decidir si una estrategia dada puede ser eliminada usando dominancia estricta iterada. 93 Prueba. El problema está en NP porque, dado una secuencia de estrategias a ser eliminadas, podemos verificar en tiempo polinómico si esta es una secuencia válida de eliminaciones (para cualquier estrategia a ser eliminada, podemos verificar, para cada subconjunto de tres otras estrategias, si hay una estrategia que coloca probabilidad positiva solo en estas tres estrategias que domina a la estrategia a ser eliminada, utilizando la Proposición 1). Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto no vacío de cláusulas C sobre un conjunto no vacío de variables V, con literales correspondientes L = {+v : v ∈ V} ∪ {−v : v ∈ V}) al siguiente juego de dos jugadores. Para cada variable v ∈ V, el jugador de la fila tiene estrategias s+v, s−v, s1 v, s2 v, s3 v, s4 v, y el jugador de la columna tiene estrategias t1 v, t2 v, t3 v, t4 v. Para cada cláusula c ∈ C, el jugador de la fila tiene una estrategia sc, y el jugador de la columna tiene una estrategia tc, así como, para cada literal l que ocurre en c, una estrategia adicional tl c. El jugador de la fila tiene dos estrategias adicionales s1 y s2. (s2 es la estrategia que estamos buscando eliminar). Finalmente, el jugador de la columna tiene una estrategia adicional t1. La función de utilidad para el jugador de la fila se da de la siguiente manera (donde ε es algún número suficientemente pequeño): • ur(s+v, tj v) = 4 si j ∈ {1, 2}, para todo v ∈ V; • ur(s+v, tj v) = 1 si j ∈ {3, 4}, para todo v ∈ V; • ur(s−v, tj v) = 1 si j ∈ {1, 2}, para todo v ∈ V; • ur(s−v, tj v) = 4 si j ∈ {3, 4}, para todo v ∈ V; • ur(s+v, t) = ur(s−v, t) = 0 para todo v ∈ V y t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 para todo v ∈ V e i ∈ {1, 2, 3, 4}; • ur(si v, t) = para todo v ∈ V, i ∈ {1, 2, 3, 4}, y t = ti v; • ur(sc, tc) = 2 para todo c ∈ C; • ur(sc, t) = 0 para todo c ∈ C y t = tc; • ur(s1, t1) = 1 + ε; • ur(s1, t) = para todo t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 para todo c ∈ C; • ur(s2, t) = 0 para todo t /∈ {t1} ∪ {tc : c ∈ C}. La función de utilidad para el jugador de la columna se da de la siguiente manera: • uc(si v, ti v) = 1 para todo v ∈ V e i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 para todo v ∈ V, i ∈ {1, 2, 3, 4}, y s = si v; • uc(sc, tc) = 1 para todo c ∈ C; • uc(sl, tc) = 1 para todo c ∈ C y l ∈ L que ocurre en c; • uc(s, tc) = 0 para todo c ∈ C y s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + para todo c ∈ C; • uc(sl, tl c) = 1 + para todo c ∈ C y l = l que ocurre en c; • uc(s, tl c) = para todo c ∈ C y s /∈ {sc} ∪ {sl : l ∈ c, l = l}; • uc(s2, t1) = 1; • uc(s, t1) = 0 para todo s = s2. Ahora demostramos que las dos instancias son equivalentes. Primero, supongamos que hay una solución para la instancia de satisfactibilidad. Entonces, considera la siguiente secuencia de eliminaciones en nuestro juego: 1. Para cada variable v que se establezca como verdadera en la asignación satisfactoria, elimine s+v con la estrategia mixta σr que coloca probabilidad 1/3 en s−v, probabilidad 1/3 en s1 v y probabilidad 1/3 en s2 v. (La utilidad esperada de jugar σr contra t1 v o t2 v es 14/3 > 4; contra t3 v o t4 v, es 4/3 > 1; y contra cualquier otra cosa es 2/3 > 0. Por lo tanto, la dominancia es válida. De manera similar, para cada variable v que se establezca como falso en la asignación satisfactoria, elimine s−v con la estrategia mixta σr que coloca probabilidad 1/3 en s+v, probabilidad 1/3 en s3 v, y probabilidad 1/3 en s4 v. (La utilidad esperada de jugar σr contra t1 v o t2 v es 4/3 > 1; contra t3 v o t4 v, es 14/3 > 4; y contra cualquier otra cosa es 2/3 > 0. Por lo tanto, la dominancia es válida. Para cada c ∈ C, elimine tc con cualquier tl c para el cual l se haya establecido como verdadero en la asignación satisfactoria. (Esta es una dominancia válida porque tl c funciona mejor que tc contra cualquier estrategia que no sea sl, y eliminamos sl en el paso 1 o en el paso 2.) 4. Finalmente, elimina s2 con s1. (Esta es una dominancia válida porque s1 tiene un mejor rendimiento que s2 contra cualquier estrategia que no esté en {tc : c ∈ C}, la cual eliminamos en el paso 3.) Por lo tanto, hay un camino de eliminación que elimina s2. Ahora, supongamos que hay un camino de eliminación que elimina s2. La estrategia que eventualmente domina a s2 debe colocar la mayor parte de su probabilidad en s1, ya que s1 es la única otra estrategia que se desempeña bien contra t1, la cual no puede ser eliminada antes que s2. Sin embargo, s1 tiene un rendimiento significativamente peor que s2 contra cualquier estrategia tc con c ∈ C, por lo que se deduce que todas estas estrategias deben ser eliminadas primero. Cada estrategia tc solo puede ser eliminada por una estrategia que coloque la mayor parte de su peso en las estrategias correspondientes tl c con l ∈ c, ya que son las únicas otras estrategias que funcionan bien contra sc, las cuales no pueden ser eliminadas antes de tc. Sin embargo, cada estrategia tl c funciona significativamente peor que tc contra sl, por lo que se deduce que para cada cláusula c, para uno de los literales l que aparecen en ella, sl debe ser eliminado primero. Ahora, las estrategias de la forma tj v nunca serán eliminadas porque son las únicas mejores respuestas a las estrategias correspondientes sj v (que, a su vez, son las mejores respuestas a las tj v correspondientes). Como resultado, si la estrategia s+v (respectivamente, s−v) es eliminada, entonces su estrategia opuesta s−v (respectivamente, s+v) ya no puede ser eliminada, por la siguiente razón. No hay otra estrategia pura restante que obtenga una utilidad significativa contra más de una de las estrategias t1 v, t2 v, t3 v, t4 v, pero s−v (respectivamente, s+v) obtiene una utilidad significativa contra las 4, y por lo tanto no puede ser dominada por una estrategia mixta que coloque una probabilidad positiva en como máximo 3 estrategias. Se deduce que para cada v ∈ V, a lo sumo una de las estrategias s+v, s−v es eliminada, de tal manera que para cada cláusula c, para uno de los literales l que aparece en ella, sl debe ser eliminada. Pero luego, establecer todas las literales l de manera que sl sea eliminado a verdadero constituye una solución a la instancia de satisfactibilidad. En la siguiente sección, regresamos al escenario donde no hay restricción en el número de estrategias puras en las que una estrategia mixta dominante puede colocar probabilidad positiva. 6. DOMINANCIA (ITERADA) EN JUEGOS BAYESIANOS Hasta ahora, nos hemos enfocado en juegos de forma normal que están representados de manera plana (es decir, cada entrada de la matriz se da explícitamente). Sin embargo, para muchos juegos, la representación plana es demasiado grande para escribirse explícitamente, y en su lugar, se necesita utilizar alguna representación que aproveche la estructura del juego. Los juegos bayesianos, además de ser de interés por sí mismos, pueden considerarse como una representación estructurada útil de los juegos en forma normal, y los estudiaremos en esta sección. En un juego bayesiano, cada jugador recibe primero información de preferencia de manera privada (el tipo de jugador) de una distribución, la cual determina la utilidad que ese jugador recibe por cada resultado del juego (es decir, el vector de acciones jugadas en el juego). Después de recibir este tipo, el jugador realiza una acción basada en él. Definición 7. Un juego bayesiano está dado por un conjunto de jugadores {1, 2, . . . , n}; y, para cada jugador i, un conjunto (finito) de acciones Ai, un espacio de tipos (finito) Θi con una distribución de probabilidad πi sobre él, y una función de utilidad ui : Θi × A1 × A2 × . . . × An → R (donde ui(θi, a1, a2, . . . , an) denota la utilidad del jugador i cuando su tipo es θi y cada jugador j juega la acción aj). Una estrategia pura en un juego bayesiano es una asignación de tipos a acciones, σi: Θi → Ai, donde σi(θi) denota la acción que el jugador i elige para el tipo θi. Cualquier vector de estrategias puras en un juego bayesiano define una utilidad (esperada) para cada jugador, y por lo tanto podemos traducir un juego bayesiano en un juego en forma normal. En este juego en forma normal, las nociones de dominancia y dominancia iterada se definen como antes. Sin embargo, la representación en forma normal del juego es exponencialmente más grande que la representación bayesiana, ya que cada jugador i tiene |Ai||Θi| estrategias puras distintas. Por lo tanto, cualquier algoritmo para juegos bayesianos que dependa de expandir el juego a su forma normal requerirá tiempo exponencial. Específicamente, nuestros resultados de facilidad para juegos en forma normal no se transfieren directamente a esta configuración. De hecho, resulta que verificar si una estrategia está dominada por una estrategia pura es difícil en juegos bayesianos. Teorema 5. En un juego bayesiano, es NP-completo decidir si una estrategia pura dada σr : Θr → Ar está dominada por alguna otra estrategia pura (tanto para la dominancia estricta como débil), incluso cuando la distribución de los jugadores de fila sobre los tipos es uniforme. Prueba. El problema está en NP porque es fácil verificar si una estrategia dominante candidata es realmente una estrategia dominante. Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto de cláusulas C utilizando variables de V) al siguiente juego bayesiano. Que el conjunto de acciones de los jugadores de la fila sea Ar = {t, f, 0} y que el conjunto de acciones de los jugadores de la columna sea Ac = {ac : c ∈ C}. Que el conjunto de tipos de jugadores de fila sea Θr = {θv : v ∈ V}, con una distribución πr que es uniforme. Que la función de utilidad de los jugadores de la fila sea la siguiente: • ur(θv, 0, ac) = 0 para todo v ∈ V y c ∈ C; • ur(θv, b, ac) = |V | para todo v ∈ V, c ∈ C y b ∈ {t, f} tal que establecer v como b satisface c; • ur(θv, b, ac) = −1 para todo v ∈ V, c ∈ C y b ∈ {t, f} tal que establecer v como b no satisface c. En general, un jugador también puede recibir una señal sobre las preferencias de los otros jugadores, pero aquí no nos ocuparemos de eso. Que la estrategia pura que se va a dominar sea aquella que juega 0 para cada tipo. Mostramos que la estrategia está dominada por una estrategia pura si y solo si hay una solución a la instancia de satisfactibilidad. Primero, supongamos que hay una solución para la instancia de satisfactibilidad. Entonces, sea σd r dado por: σd r (θv) = t si v se establece como verdadero en la solución de la instancia de satisfactibilidad, y σd r (θv) = f en caso contrario. Entonces, en contra de cualquier acción ac realizada por el jugador de la columna, existe al menos un tipo θv tal que o bien +v ∈ c y σd r (θv) = t, o bien −v ∈ c y σd r (θv) = f. Por lo tanto, la utilidad esperada de los jugadores de la fila contra la acción ac es al menos |V| |V| − |V|−1 |V| = 1 |V| > 0. Entonces, σd r es una estrategia dominante. Ahora, supongamos que existe una estrategia pura dominante σd r. Esta estrategia dominante debe jugar t o f al menos para un tipo. Por lo tanto, en contra de cualquier ac por el jugador de la columna, debe haber al menos algún tipo θv para el cual ur(θv, σd r (θv), ac) > 0. Es decir, debe haber al menos una variable v tal que al establecer v en σd r (θv) satisfaga c. Pero entonces, al establecer cada v en σd r (θv) deben satisfacerse todas las cláusulas. Entonces, existe una asignación satisfactoria. Sin embargo, resulta que podemos modificar los programas lineales de la Proposición 1 para obtener un algoritmo de tiempo polinómico para verificar si una estrategia está dominada por una estrategia mixta en juegos bayesianos. Teorema 6. En un juego bayesiano, se puede decidir en tiempo polinómico si una estrategia dada (posiblemente mixta) σr está dominada por alguna otra estrategia mixta, utilizando programación lineal (tanto para dominancia estricta como débil). Prueba. Podemos modificar los programas lineales presentados en la Proposición 1 de la siguiente manera. Para la dominancia estricta, asumiendo nuevamente sin pérdida de generalidad que todas las utilidades en el juego son positivas, utilice el siguiente programa lineal (en el cual pσr r (θr, ar) es la probabilidad de que σr, la estrategia a ser dominada, coloque en ar para el tipo θr): minimizar θr∈Θr ar∈Ar pr(ar) tal que para cualquier ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); para cualquier θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1. Suponiendo que π(θr) > 0 para todo θr ∈ Θr, este programa devolverá un valor objetivo menor que |Θr| si y solo si σr está estrictamente dominado, mediante un razonamiento similar al realizado en la Proposición 1. Para la dominancia débil, utiliza el siguiente programa lineal: maximizar ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) tal que para cualquier ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); para cualquier θr ∈ Θr, ar∈Ar pr(θr, ar) = 1. Este programa devolverá un valor objetivo mayor que 0 si y solo si σr está débilmente dominado, mediante un razonamiento similar al realizado en la Proposición 1. Ahora pasamos al dominio iterado en juegos bayesianos. Ingenuamente, uno podría argumentar que la dominancia iterada en juegos bayesianos de 95 siempre requiere un número exponencial de pasos cuando se puede eliminar una fracción significativa de las estrategias puras de los juegos, ya que hay un número exponencial de estrategias puras. Sin embargo, este no es un argumento muy sólido porque muchas veces podemos eliminar exponencialmente muchas estrategias puras en un solo paso. Por ejemplo, si para algún tipo θr ∈ Θr tenemos, para todo ac ∈ Ac, que u(θr, a1 r, ac) > u(θr, a2 r, ac), entonces cualquier estrategia pura para el jugador de la fila que juega la acción a2 r para el tipo θr está dominada (por la estrategia que juega la acción a1 r para el tipo θr en su lugar) - y hay exponencialmente muchas (|Ar||Θr|−1) tales estrategias. Por lo tanto, es concebible que solo necesitemos un número polinomial de eliminaciones de colecciones de estrategias de un jugador. Sin embargo, el siguiente teorema muestra que este no es el caso, al dar un ejemplo donde se requiere un número exponencial de iteraciones (es decir, alternancias entre los jugadores en la eliminación de estrategias). (Enfatizamos que este no es un resultado sobre complejidad computacional). Teorema 7. Incluso en juegos bayesianos simétricos de 3 jugadores, la dominancia iterada por estrategias puras puede requerir un número exponencial de iteraciones (tanto para la dominancia estricta como débil), incluso con solo tres acciones por jugador. Prueba. Que cada jugador i ∈ {1, 2, 3} tenga n + 1 tipos θ1 i , θ2 i , . . . , θn+1 i. Que cada jugador i tenga 3 acciones ai, bi, ci, y que la función de utilidad de cada jugador esté definida de la siguiente manera. (En lo siguiente, i + 1 e i + 2 son abreviaturas de i + 1 (mod 3) e i + 2 (mod 3) cuando se utilizan como índices de jugador. Además, −∞ puede ser reemplazado por un número suficientemente negativo. Finalmente, δ y deberían elegirse muy pequeños (incluso en comparación con 2−(n+1)), y deberían ser más del doble de grandes que δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 para si+1 = ci+1 o si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − para si+1 = ai+1 y si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ para si+1 = ai+1 o si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ para todos los si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ para todos los si+1, si+2 cuando j > 1; • ui(θj i ; bi, si+1, si+2) = − para todos los si+1, si+2 cuando j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 para todos los si+1 cuando j > 1; • ui(θj i ; ci, si+1, si+2) = δ− para todos los si+1 y si+2 = ci+2 cuando j > 1. Que la distribución sobre los tipos de cada jugador esté dada por p(θj i ) = 2−j (con la excepción de que p(θ2 i ) = 2−2 +2−(n+1) ). Estaremos interesados en eliminar estrategias de la siguiente forma: jugar bi para el tipo θ1 i, y jugar bi o ci de lo contrario. Dado que la función de utilidad es la misma para cualquier tipo θj i con j > 1, estas estrategias están efectivamente definidas por la probabilidad total que asignan a ci,8, que es t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j donde tj i = 1 si el jugador i 8. Observa que las estrategias siguen siendo estrategias puras; la probabilidad asignada a una acción por una estrategia aquí es simplemente la suma de las probabilidades de los tipos para los cuales la estrategia elige esa acción. juega ci para el tipo θj i, y 0 en caso contrario. Esta probabilidad es diferente para cualquier par de estrategias diferentes de la forma dada, y tenemos exponencialmente muchas estrategias diferentes de la forma dada. Para cualquier probabilidad q que pueda expresarse como t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (con todos los tj ∈ {0, 1}), dejemos que σi(q) denote la estrategia (única) de la forma dada para el jugador i que coloca una probabilidad total de q en ci. Cualquier estrategia que juegue ci para el tipo θ1 i o ai para algún tipo θj i con j > 1 puede ser eliminada inmediatamente. Mostraremos que, después de eso, debemos eliminar primero las estrategias σi(q) con q alto, trabajando lentamente hacia abajo hasta aquellas con q más bajo. Reclamo 1: Si σi+1(q) y σi+2(q) aún no han sido eliminados, y q < q, entonces σi(q) aún no puede ser eliminado. Prueba: Primero, demostramos que ninguna estrategia σi(q) puede eliminar a σi(q). Contra σi+1(q), σi+2(q), la utilidad de jugar σi(p) es − + p · δ − p · q /2. Por lo tanto, cuando q = 0, es mejor establecer p lo más alto posible (y observamos que σi+1(0) y σi+2(0) no han sido eliminados), pero cuando q > 0, es mejor establecer p lo más bajo posible porque δ < q /2. Por lo tanto, ya sea que q > q o q < q, σi(q) siempre será estrictamente mejor que σi(q) contra algunas estrategias restantes de los oponentes. Por lo tanto, ninguna estrategia σi(q) puede eliminar a σi(q). Las únicas otras estrategias puras que podrían dominar a σi(q) son estrategias que juegan ai para el tipo θ1 i, y bi o ci para todos los demás tipos. Tomemos tal estrategia y supongamos que juega c con probabilidad p. Contra σi+1(q), σi+2(q) (que aún no han sido eliminadas), la utilidad de jugar esta estrategia es −(q)2 /2 − /2 + p · δ − p · q /2. Por otro lado, jugar σi(q) da como resultado − + q · δ − q · q /2. Dado que q > q, tenemos −(q )2 /2 < −q · q /2, y dado que δ y son pequeños, se deduce que σi(q) recibe una utilidad mayor. Por lo tanto, ninguna estrategia domina a σi(q), lo que demuestra la afirmación. Afirmación 2: Si para todo q > q, σi+1(q) y σi+2(q) han sido eliminados, entonces σi(q) puede ser eliminado. Prueba: Considera la estrategia para el jugador i que juega ai para el tipo θ1 i, y bi para todos los demás tipos (llamemos a esta estrategia σi); afirmamos que σi domina a σi(q). Primero, si alguno de los otros jugadores k juega ak para θ1 k, entonces σi se desempeña mejor que σi(q) (que recibe −∞ en algunos casos). Dado que las estrategias para el jugador k que juega ck para el tipo θ1 k, o ak para algún tipo θj k con j > 1, ya han sido eliminadas, todo lo que queda por comprobar es que σi sea mejor que σi(q) siempre que los otros dos jugadores jueguen estrategias de la siguiente forma: jugar bk para el tipo θ1 k, y jugar uno de bk o ck en caso contrario. Observamos que entre estas estrategias, no queda ninguna que coloque una probabilidad mayor que q en ck. Si dejamos que qk denote la probabilidad con la que el jugador k juega ck, la utilidad esperada de jugar σi es −qi+1 · qi+2/2 − /2. Por otro lado, la utilidad de jugar σi(q) es − + q · δ − q · qi+2/2. Dado que qi+1 ≤ q, la diferencia entre estas dos expresiones es al menos /2 − δ, la cual es positiva. Se deduce que σi domina a σi(q). A partir de la Reclamación 2, se deduce que todas las estrategias de la forma σi(q) serán eliminadas eventualmente. Sin embargo, la Reclamación 1 muestra que no podemos avanzar y eliminar múltiples estrategias de este tipo para un jugador, a menos que al menos otro jugador mantenga simultáneamente las estrategias eliminadas: cada vez que se elimina un σi(q) tal que σi+1(q) y σi+2(q) aún no han sido eliminados, necesitamos eliminar una de las dos últimas estrategias antes de que se pueda eliminar cualquier σi(q) con q > q, es decir, necesitamos alternar entre jugadores. Dado que hay exponencialmente muchas estrategias de la forma σi(q), se sigue que la eliminación iterada requerirá exponencialmente muchas iteraciones para completarse. Por lo tanto, un algoritmo eficiente para la dominancia iterada (estricta o débil) por estrategias puras en juegos bayesianos, si existe, debe ser capaz de realizar (al menos parte de) muchas iteraciones en un solo paso del algoritmo (porque si cada paso solo realizara una sola iteración, necesitaríamos exponencialmente muchos pasos). Interesantemente, Knuth et al. [11] argumentan que la dominancia iterada parece ser un problema inherentemente secuencial (a la luz de su resultado de que la dominancia muy débil iterada es P-completa, es decir, aparentemente no paralelizable de manera eficiente), lo que sugiere que la agregación de muchas iteraciones puede ser difícil. 7. CONCLUSIONES Aunque el concepto de equilibrio de Nash se estudia cada vez más intensamente en nuestra comunidad, el concepto quizás más elemental de dominancia (iterada) ha recibido mucha menos atención. En este artículo estudiamos varios aspectos computacionales de este concepto. Primero estudiamos tanto la dominancia estricta como la débil (no iterada), y demostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta puede hacerse en tiempo polinómico utilizando la resolución de un único programa lineal. Luego pasamos a la dominancia iterada. Mostramos que determinar si existe algún camino que elimine una estrategia dada es NP-completo con dominancia débil iterada. Esto nos permitió también demostrar que determinar si existe un camino que conduzca a una solución única es NP-completo. Ambos resultados se mantienen tanto con como sin dominancia de estrategias mixtas. (Una versión más débil del segundo resultado (solo sin dominancia de estrategias mixtas) ya se conocía [7].) La dominancia estricta iterada, por otro lado, es independiente del camino (tanto con como sin dominancia por estrategias mixtas) y, por lo tanto, puede realizarse en tiempo polinómico. Luego estudiamos qué sucede cuando la estrategia dominante puede asignar una probabilidad positiva solo a unas pocas estrategias puras. Primero, demostramos que encontrar la estrategia dominante con el tamaño de soporte mínimo es NP-completo (tanto para dominancia estricta como débil). Luego, demostramos que la dominancia estricta iterada se vuelve dependiente del camino cuando hay un límite en el tamaño del soporte de las estrategias dominantes, y que decidir si una estrategia dada puede ser eliminada por dominancia estricta iterada bajo esta restricción es NP-completo (incluso cuando el límite en el tamaño del soporte es 3). Finalmente, estudiamos la dominancia y la dominancia iterada en juegos bayesianos, como un ejemplo de un lenguaje de representación conciso para juegos en forma normal que es interesante por sí mismo. Mostramos que, a diferencia de los juegos en forma normal, decidir si una estrategia pura dada está dominada por otra estrategia pura en un juego bayesiano es NP-completo (tanto con dominancia estricta como débil); sin embargo, decidir si una estrategia está dominada por alguna estrategia mixta aún se puede hacer en tiempo polinómico con la resolución de un único programa lineal (tanto con dominancia estricta como débil). Finalmente, demostramos que la dominancia iterada utilizando estrategias puras puede requerir un número exponencial de iteraciones en un juego bayesiano (tanto con dominancia estricta como débil). Hay varias vías para investigaciones futuras. Primero, está la pregunta abierta de si es posible completar la dominancia iterada en juegos bayesianos en tiempo polinómico (aunque demostramos que a veces se requiere un número exponencial de alternancias entre los jugadores para eliminar estrategias). Segundo, podemos estudiar los aspectos computacionales del dominio (iterado) en representaciones concisas de juegos de forma normal que no sean juegos bayesianos, por ejemplo, en juegos gráficos o juegos de grafo de efecto local/acción. (Ya se ha estudiado cómo realizar eficientemente el dominio muy débil iterado en juegos estocásticos parcialmente observables). Finalmente, podemos preguntarnos si algunos de los algoritmos que describimos (como el de dominancia estricta iterada con estrategias mixtas) pueden ser optimizados para ser más rápidos. 8. REFERENCIAS [1] Krzysztof R. Apt. Pruebas uniformes de independencia del orden para varios procedimientos de eliminación de estrategias. Contribuciones a la Economía Teórica, 4(1), 2004. [2] Nivan A. R. Bhat y Kevin Leyton-Brown. Calculando equilibrios de Nash de juegos de gráficos de acción. En UAI, 2004. [3] Ben Blum, Christian R. Shelton y Daphne Koller. Un método de continuación para equilibrios de Nash en juegos estructurados. En IJCAI, 2003. [4] Vincent Conitzer y Tuomas Sandholm. Resultados de complejidad sobre equilibrios de Nash. En IJCAI, páginas 765-771, 2003. [5] Drew Fudenberg y Jean Tirole. Teoría de juegos. MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, y Eitan Zemel. En el orden de eliminar estrategias dominadas. Cartas de Investigación Operativa, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai y Eitan Zemel. La complejidad de eliminar estrategias dominadas. Matemáticas de la Investigación de Operaciones, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein y Shlomo Zilberstein. Programación dinámica para juegos estocásticos parcialmente observables. En AAAI, páginas 709-715, 2004. [9] Michael Kearns, Michael Littman y Satinder Singh. Modelos gráficos para teoría de juegos. En UAI, 2001. [10] Leonid Khachiyan. Un algoritmo polinómico en programación lineal. Matemática soviética. Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou y John N Tsitsiklis. Una nota sobre la eliminación de estrategias en juegos bimatrix. Cartas de Investigación Operativa, 7(3):103-107, 1988. [12] Kevin Leyton-Brown y Moshe Tennenholtz. Juegos de efecto local. En IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis y Aranyak Mehta. Jugando juegos grandes utilizando estrategias simples. En ACM-EC, páginas 36-41, 2003. [14] Michael Littman y Peter Stone. Un algoritmo de equilibrio de Nash de tiempo polinómico para juegos repetidos. En ACM-EC, páginas 48-54, 2003. [15] Leslie M. Marx y Jeroen M. Swinkels. Independencia del orden para la dominancia débil iterada. Juegos y Comportamiento Económico, 18:219-245, 1997. [16] Leslie M. Marx y Jeroen M. Swinkels. Corrección, independencia del orden para la dominancia débil iterada. Juegos y Comportamiento Económico, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston y Jerry R. Green. Teoría microeconómica. Oxford University Press, 1995. [18] Roger Myerson.\nEditorial de la Universidad de Oxford, 1995. [18] Roger Myerson. Teoría de juegos: Análisis de conflictos. Harvard University Press, Cambridge, 1991. [19] Martin J Osborne y Ariel Rubinstein. Un curso de Teoría de Juegos. MIT Press, 1994. [20] Christos Papadimitriou. \n\nMIT Press, 1994. [20] Christos Papadimitriou. Algoritmos, juegos e Internet. En STOC, páginas 749-753, 2001. [21] Ryan Porter, Eugene Nudelman y Yoav Shoham. Métodos de búsqueda simples para encontrar un equilibrio de Nash. En AAAI, páginas 664-669, 2004. 97 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "self-interested agent": {
            "translated_key": "agentes auto-interesados",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Complexity of (Iterated) Dominance∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using dominance and iterated dominance.",
                "We first study both strict and weak dominance (not iterated), and show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then move on to iterated dominance.",
                "We show that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allows us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then study what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we show that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we show that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we study Bayesian games.",
                "We show that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak ∗ This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858, and a Sloan Fellowship. dominance).",
                "Finally, we show that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent systems with <br>self-interested agent</br>s, the optimal action for one agent may depend on the actions taken by other agents.",
                "In such settings, the agents require tools from game theory to rationally decide on an action.",
                "Game theory offers various formal models of strategic settings-the best-known of which is a game in normal (or matrix) form, specifying a utility (payoff) for each agent for each combination of strategies that the agents choose-as well as solution concepts, which, given a game, specify which outcomes are reasonable (under various assumptions of rationality and common knowledge).",
                "Probably the best-known (and certainly the most-studied) solution concept is that of Nash equilibrium.",
                "A Nash equilibrium specifies a strategy for each player, in such a way that no player has an incentive to (unilaterally) deviate from the prescribed strategy.",
                "Recently, numerous papers have studied computing Nash equilibria in various settings [9, 4, 12, 3, 13, 14], and the complexity of constructing a Nash equilibrium in normal form games has been labeled one of the two most important open problems on the boundary of P today [20].",
                "The problem of computing solutions according to the perhaps more elementary solution concepts of dominance and iterated dominance has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the game theory community [7].1 ) A strategy strictly dominates another strategy if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one.",
                "The idea is that dominated strategies can be eliminated from consideration.",
                "In iterated dominance, the elimination proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating strategy no longer needs to perform better than or as well as the dominated strategy against opponent strategies that were eliminated in earlier rounds.",
                "Computing solutions according to (iterated) dominance is important for at least the following reasons: 1) it can be computationally easier than computing (for instance) a Nash equilibrium (and therefore it can be useful as a preprocessing step in computing a Nash equilibrium), and 2) (iterated) dominance requires a weaker rationality assumption on the players than (for instance) Nash equilibrium, and therefore solutions derived according to it are more likely to occur.",
                "In this paper, we study some fundamental computational questions concerning dominance and iterated dominance, including how hard it is to check whether a given strategy can be eliminated by each of the variants of these notions.",
                "The rest of the paper is organized as follows.",
                "In Section 2, we briefly review definitions and basic properties of normal form games, strict and weak dominance, and iterated strict and weak dominance.",
                "In the remaining sections, we study computational aspects of dominance and iterated dominance.",
                "In Section 3, we study one-shot (not iterated) dominance.",
                "In Section 4, we study iterated dominance.",
                "In Section 5, we study dominance and iterated dominance when the dominating strategy can only place probability on a few pure strategies.",
                "Finally, in Section 6, we study dominance and iterated dominance in Bayesian games. 2.",
                "DEFINITIONS AND BASIC PROPERTIES In this section, we briefly review normal form games, as well as dominance and iterated dominance (both strict and weak).",
                "An n-player normal form game is defined as follows.",
                "Definition 1.",
                "A normal form game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of pure strategies Σi and a utility function ui : Σ1 × Σ2 × . . . × Σn → R (where ui(σ1, σ2, . . . , σn) denotes player is utility when each player j plays action σj).",
                "The two main notions of dominance are defined as follows.",
                "Definition 2.",
                "Player is strategy σi is said to be strictly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "Player is strategy σi is said to be weakly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) ≥ ui(σi, σ−i), and for at least one vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "In this definition, it is sometimes allowed for the dominating strategy σi to be a mixed strategy, that is, a probability distribution over pure strategies.",
                "In this case, the utilities in dominance altogether.",
                "For example, simple dominance checks are sometimes used as a subroutine in searching for Nash equilibria [21]. the definition are the expected utilities.2 There are other notions of dominance, such as very weak dominance (in which no strict inequality is required, so two strategies can dominate each other), but we will not study them here.",
                "When we are looking at the dominance relations for player i, the other players (−i) can be thought of as a single player.3 Therefore, in the rest of the paper, when we study one-shot (not iterated) dominance, we will focus without loss of generality on two-player games.4 In two-player games, we will generally refer to the players as r (row) and c (column) rather than 1 and 2.",
                "In iterated dominance, dominated strategies are removed from the game, and no longer have any effect on future dominance relations.",
                "Iterated dominance can eliminate more strategies than dominance, as follows. σr may originally not dominate σr because the latter performs better against σc; but then, once σc is removed because it is dominated by σc, σr dominates σr, and the latter can be removed.",
                "For example, in the following game, R can be removed first, after which D is dominated.",
                "L R U 1, 1 0, 0 D 0, 1 1, 0 Either strict or weak dominance can be used in the definition of iterated dominance.",
                "We note that the process of iterated dominance is never helped by removing a dominated mixed strategy, for the following reason.",
                "If σi gives player i a higher utility than σi against mixed strategy σj for player j = i (and strategies σ−{i,j} for the other players), then for at least one pure strategy σj that σj places positive probability on, σi must perform better than σi against σj (and strategies σ−{i,j} for the other players).",
                "Thus, removing the mixed strategy σj does not introduce any new dominances.",
                "More detailed discussions and examples can be found in standard texts on microeconomics or game theory [17, 5].",
                "We are now ready to move on to the core of this paper. 3.",
                "DOMINANCE (NOT ITERATED) In this section, we study the notion of one-shot (not iterated) dominance.",
                "As a first observation, checking whether a given strategy is strictly (weakly) dominated by some pure strategy is straightforward, by checking, for every pure strategy for that player, whether the latter strategy performs strictly better against all the opponents strategies (at least as well against all the opponents strategies, and strictly 2 The dominated strategy σi is, of course, also allowed to be mixed, but this has no technical implications for the paper: when we study one-shot dominance, we ask whether a given strategy is dominated, and it does not matter whether the given strategy is pure or mixed; when we study iterated dominance, there is no use in eliminating mixed strategies, as we will see shortly. 3 This player may have a very large strategy space (one pure strategy for every vector of pure strategies for the players that are being replaced).",
                "Nevertheless, this will not result in an increase in our representation size, because the original representation already had to specify utilities for each of these vectors. 4 We note that a restriction to two-player games would not be without loss of generality for iterated dominance.",
                "This is because for iterated dominance, we need to look at the dominated strategies of each individual player, so we cannot merge any players. 89 better against at least one).5 Next, we show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time by solving a single linear program. (Similar linear programs have been given before [18]; we present the result here for completeness, and because we will build on the linear programs given below in Theorem 6.)",
                "Proposition 1.",
                "Given the row players utilities, a subset Dr of the row players pure strategies Σr, and a distinguished strategy σ∗ r for the row player, we can check in time polynomial in the size of the game (by solving a single linear program of polynomial size) whether there exists some mixed strategy σr, that places positive probability only on strategies in Dr and dominates σ∗ r , both for strict and for weak dominance.",
                "Proof.",
                "Let pdr be the probability that σr places on dr ∈ Dr. We will solve a single linear program in each of our algorithms; linear programs can be solved in polynomial time [10].",
                "For strict dominance, the question is whether the pdr can be set so that for every pure strategy for the column player σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc).",
                "Because the inequality must be strict, we cannot solve this directly by linear programming.",
                "We proceed as follows.",
                "Because the game is finite, we may assume without loss of generality that all utilities are positive (if not, simply add a constant to all utilities.)",
                "Solve the following linear program: minimize dr∈Dr pdr such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc).",
                "If σ∗ r is strictly dominated by some mixed strategy, this linear program has a solution with objective value < 1. (The dominating strategy is a feasible solution with objective value exactly 1.",
                "Because no constraint is binding for this solution, we can reduce one of the probabilities slightly without affecting feasibility, thereby obtaining a solution with objective value < 1.)",
                "Moreover, if this linear program has a solution with objective value < 1, there is a mixed strategy strictly dominating σ∗ r , which can be obtained by taking the LP solution and adding the remaining probability to any strategy (because all the utilities are positive, this will add to the left side of any inequality, so all inequalities will become strict).",
                "For weak dominance, we can solve the following linear program: maximize σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1.",
                "If σ∗ r is weakly dominated by some mixed strategy, then that mixed strategy is a feasible solution to this program with objective value > 0, because for at least one strategy σc ∈ Σc we have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0.",
                "On the other hand, if this program has a solution with objective value > 0, then for at least one strategy σc ∈ Σc we 5 Recall that the assumption of a single opponent (that is, the assumption of two players) is without loss of generality for one-shot dominance. must have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, and thus the linear programs solution is a weakly dominating mixed strategy. 4.",
                "ITERATED DOMINANCE We now move on to iterated dominance.",
                "It is well-known that iterated strict dominance is path-independent [6, 19]that is, if we remove dominated strategies until no more dominated strategies remain, in the end the remaining strategies for each player will be the same, regardless of the order in which strategies are removed.",
                "Because of this, to see whether a given strategy can be eliminated by iterated strict dominance, all that needs to be done is to repeatedly remove strategies that are strictly dominated, until no more dominated strategies remain.",
                "Because we can check in polynomial time whether any given strategy is dominated (whether or not dominance by mixed strategies is allowed, as described in Section 3), this whole procedure takes only polynomial time.",
                "In the case of iterated dominance by pure strategies with two players, Knuth et al. [11] slightly improve on (speed up) the straightforward implementation of this procedure by keeping track of, for each ordered pair of strategies for a player, the number of opponent strategies that prevent the first strategy from dominating the second.",
                "Hereby the runtime for an m × n game is reduced from O((m + n)4 ) to O((m + n)3 ). (Actually, they only study very weak dominance (for which no strict inequalities are required), but the approach is easily extended.)",
                "In contrast, iterated weak dominance is known to be pathdependent.6 For example, in the following game, using iterated weak dominance we can eliminate M first, and then D, or R first, and then U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Therefore, while the procedure of removing weakly dominated strategies until no more weakly dominated strategies remain can certainly be executed in polynomial time, which strategies survive in the end depends on the order in which we remove the dominated strategies.",
                "We will investigate two questions for iterated weak dominance: whether a given strategy is eliminated in some path, and whether there is a path to a unique solution (one pure strategy left per player).",
                "We will show that both of these problems are computationally hard.",
                "Definition 3.",
                "Given a game in normal form and a distinguished strategy σ∗ , IWD-STRATEGY-ELIMINATION asks whether there is some path of iterated weak dominance that eliminates σ∗ .",
                "Given a game in normal form, IWDUNIQUE-SOLUTION asks whether there is some path of iterated weak dominance that leads to a unique solution (one strategy left per player).",
                "The following lemma shows a special case of normal form games in which allowing for weak dominance by mixed strategies (in addition to weak dominance by pure strategies) does 6 There is, however, a restriction of weak dominance called nice weak dominance which is path-independent [15, 16].",
                "For an overview of path-independence results, see Apt [1]. 90 not help.",
                "We will prove the hardness results in this setting, so that they will hold whether or not dominance by mixed strategies is allowed.",
                "Lemma 1.",
                "Suppose that all the utilities in a game are in {0, 1}.",
                "Then every pure strategy that is weakly dominated by a mixed strategy is also weakly dominated by a pure strategy.",
                "Proof.",
                "Suppose pure strategy σ is weakly dominated by mixed strategy σ∗ .",
                "If σ gets a utility of 1 against some opponent strategy (or vector of opponent strategies if there are more than 2 players), then all the pure strategies that σ∗ places positive probability on must also get a utility of 1 against that opponent strategy (or else the expected utility would be smaller than 1).",
                "Moreover, at least one of the pure strategies that σ∗ places positive probability on must get a utility of 1 against an opponent strategy that σ gets 0 against (or else the inequality would never be strict).",
                "It follows that this pure strategy weakly dominates σ.",
                "We are now ready to prove the main results of this section.",
                "Theorem 1.",
                "IWD-STRATEGY-ELIMINATION is NPcomplete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can easily check whether this is a valid sequence of eliminations (even when dominance by mixed strategies is allowed, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following IWD-STRATEGY-ELIMINATION instance. (In this instance, we will specify that certain strategies are uneliminable.",
                "A strategy σr can be made uneliminable, even when 0 and 1 are the only allowed utilities, by adding another strategy σr and another opponent strategy σc, so that: 1. σr and σr are the only strategies that give the row player a utility of 1 against σc. 2. σr and σr always give the row player the same utility. 3. σc is the only strategy that gives the column player a utility of 1 against σr, but otherwise σc always gives the column player utility 0.",
                "This makes it impossible to eliminate any of these three strategies.",
                "We will not explicitly specify the additional strategies to make the proof more legible.)",
                "In this proof, we will denote row player strategies by s, and column player strategies by t, to improve legibility.",
                "Let the row players pure strategy set be given as follows.",
                "For every variable v ∈ V , the row player has corresponding strategies s1 +v, s2 +v, s1 −v, s2 −v.",
                "Additionally, the row player has the following 2 strategies: s1 0 and s2 0, where s2 0 = σ∗ r (that is, it is the strategy we seek to eliminate).",
                "Finally, for every clause c ∈ C, the row player has corresponding strategies s1 c (uneliminable) and s2 c. Let the column players pure strategy set be given as follows.",
                "For every variable v ∈ V , the column player has a corresponding strategy tv.",
                "For every clause c ∈ C, the column player has a corresponding strategy tc, and additionally, for every literal l ∈ L that occurs in c, a strategy tc,l.",
                "For every variable v ∈ V , the column player has corresponding strategies t+v, t−v (both uneliminable).",
                "Finally, the column player has three additional strategies: t1 0 (uneliminable), t2 0, and t1.",
                "The utility function for the row player is given as follows: • ur(s1 +v, tv) = 0 for all v ∈ V ; • ur(s2 +v, tv) = 1 for all v ∈ V ; • ur(s1 −v, tv) = 1 for all v ∈ V ; • ur(s2 −v, tv) = 0 for all v ∈ V ; • ur(s1 +v, t1) = 1 for all v ∈ V ; • ur(s2 +v, t1) = 0 for all v ∈ V ; • ur(s1 −v, t1) = 0 for all v ∈ V ; • ur(s2 −v, t1) = 1 for all v ∈ V ; • ur(sb +v, t+v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sb −v, t−v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sl, t) = 0 otherwise for all l ∈ L and t ∈ S2; • ur(s1 0, tc) = 0 for all c ∈ C; • ur(s2 0, tc) = 1 for all c ∈ C; • ur(sb 0, t1 0) = 1 for all b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 otherwise for all b ∈ {1, 2} and t ∈ S2; • ur(sb c, t) = 0 otherwise for all c ∈ C and b ∈ {1, 2}; and the row players utility is 0 in every other case.",
                "The utility function for the column player is given as follows: • uc(s, tv) = 0 for all v ∈ V and s ∈ S1; • uc(s, t1) = 0 for all s ∈ S1; • uc(s2 l , tc) = 1 for all c ∈ C and l ∈ L where l ∈ c (literal l occurs in clause c); • uc(s2 l2 , tc,l1 ) = 1 for all c ∈ C and l1, l2 ∈ L, l1 = l2 where l2 ∈ c; • uc(s1 c, tc) = 1 for all c ∈ C; • uc(s2 c, tc) = 0 for all c ∈ C; • uc(sb c, tc,l) = 1 for all c ∈ C, l ∈ L, and b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 otherwise for all c ∈ C and l ∈ L; and the column players utility is 0 in every other case.",
                "We now show that the two instances are equivalent.",
                "First, suppose there is a solution to the satisfiability instance: that is, a truth-value assignment to the variables in V such that all clauses are satisfied.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the assignment, eliminate tv (which gives the column player utility 0 everywhere). 2.",
                "Then, for every variable v that is set to true in the assignment, eliminate s2 +v using s1 +v (which is possible because tv has been eliminated, and because t1 has not been eliminated (yet)). 3.",
                "Now eliminate t1 (which gives the column player utility 0 everywhere). 4.",
                "Next, for every variable v that is set to false in the assignment, eliminate s2 −v using s1 −v (which is possible because t1 has been eliminated, and because tv has not been eliminated (yet)). 5.",
                "For every clause c which has the variable corresponding to one of its positive literals l = +v set to true in the assignment, eliminate tc using tc,l (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 6.",
                "For every clause c which has the variable corresponding to one of its negative literals l = −v set to false in the assignment, eliminate tc using tc,l 91 (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 7.",
                "Because the assignment satisfied the formula, all the tc have now been eliminated.",
                "Thus, we can eliminate s2 0 = σ∗ r using s1 0.",
                "It follows that there is a solution to the IWD-STRATEGY-ELIMINATION instance.",
                "Now suppose there is a solution to the IWD-STRATEGYELIMINATION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We first observe that only s1 0 can eliminate s2 0 = σ∗ r , because it is the only other strategy that gets the row player a utility of 1 against t1 0, and t1 0 is uneliminable.",
                "However, because s2 0 performs better than s1 0 against the tc strategies, it follows that all of the tc strategies must be eliminated.",
                "For each c ∈ C, the strategy tc can only be eliminated by one of the strategies tc,l (with the same c), because these are the only other strategies that get the column player a utility of 1 against s1 c, and s1 c is uneliminable.",
                "But, in order for some tc,l to eliminate tc, s2 l must be eliminated first.",
                "Only s1 l can eliminate s2 l , because it is the only other strategy that gets the row player a utility of 1 against tl, and tl is uneliminable.",
                "We next show that for every v ∈ V only one of s2 +v, s2 −v can be eliminated.",
                "This is because in order for s1 +v to eliminate s2 +v, tv needs to have been eliminated and t1, not (so tv must be eliminated before t1); but in order for s1 −v to eliminate s2 −v, t1 needs to have been eliminated and tv, not (so t1 must be eliminated before tv).",
                "So, set v to true if s2 +v is eliminated, and to false otherwise Because by the above, for every clause c, one of the s2 l with l ∈ c must be eliminated, it follows that this is a satisfying assignment to the satisfiability instance.",
                "Using Theorem 1, it is now (relatively) easy to show that IWD-UNIQUE-SOLUTION is also NP-complete under the same restrictions.",
                "Theorem 2.",
                "IWD-UNIQUE-SOLUTION is NP-complete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "Again, the problem is in NP because we can nondeterministically choose the sequence of eliminations and verify whether it is correct.",
                "To show NP-hardness, we reduce an arbitrary IWD-STRATEGY-ELIMINATION instance to the following IWD-UNIQUE-SOLUTION instance.",
                "Let all the strategies for each player from the original instance remain part of the new instance, and let the utilities resulting from the players playing a pair of these strategies be the same.",
                "We add three additional strategies σ1 r , σ2 r , σ3 r for the row player, and three additional strategies σ1 c , σ2 c , σ3 c for the column player.",
                "Let the additional utilities be as follows: • ur(σr, σj c) = 1 for all σr /∈ {σ1 r , σ2 r , σ3 r } and j ∈ {2, 3}; • ur(σi r, σc) = 1 for all i ∈ {1, 2, 3} and σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 for all i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • and the row players utility is 0 in all other cases involving a new strategy. • uc(σ3 r , σc) = 1 for all σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 for all j ∈ {2, 3} (σ∗ r is the strategy to be eliminated in the original instance); • uc(σi r, σ1 c ) = 1 for all i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • and the column players utility is 0 in all other cases involving a new strategy.",
                "We proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the original IWDSTRATEGY-ELIMINATION instance.",
                "Then, perform the same sequence of eliminations to eliminate σ∗ r in the new IWD-UNIQUE-SOLUTION instance. (This is possible because at any stage, any weak dominance for the row player in the original instance is still a weak dominance in the new instance, because the two strategies utilities for the row player are the same when the column player plays one of the new strategies; and the same is true for the column player.)",
                "Once σ∗ r is eliminated, let σ1 c eliminate σ2 c . (It performs better against σ2 r .)",
                "Then, let σ1 r eliminate all the other remaining strategies for the row player. (It always performs better against either σ1 c or σ3 c .)",
                "Finally, σ1 c is the unique best response against σ1 r among the column players remaining strategies, so let it eliminate all the other remaining strategies for the column player.",
                "Thus, there exists a solution to the IWD-UNIQUE-SOLUTION instance.",
                "Now suppose there exists a solution to the IWD-UNIQUESOLUTION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We will show that none of the new strategies (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) can either eliminate another strategy, or be eliminated before σ∗ r is eliminated.",
                "Thus, there must be a sequence of eliminations ending in the elimination of σ∗ r , which does not involve any of the new strategies, and is therefore a valid sequence of eliminations in the original game (because all original strategies perform the same against each new strategy).",
                "We now show that this is true by exhausting all possibilities for the first elimination before σ∗ r is eliminated that involves a new strategy.",
                "None of the σi r can be eliminated by a σr /∈ {σ1 r , σ2 r , σ3 r }, because the σi r perform better against σ1 c . σ1 r cannot eliminate any other strategy, because it always performs poorer against σ2 c . σ2 r and σ3 r are equivalent from the row players perspective (and thus cannot eliminate each other), and cannot eliminate any other strategy because they always perform poorer against σ3 c .",
                "None of the σj c can be eliminated by a σc /∈ {σ1 c , σ2 c , σ3 c }, because the σj c always perform better against either σ1 r or σ2 r . σ1 c cannot eliminate any other strategy, because it always performs poorer against either σ∗ r or σ3 r . σ2 c cannot eliminate any other strategy, because it always performs poorer against σ2 r or σ3 r . σ3 c cannot eliminate any other strategy, because it always performs poorer against σ1 r or σ3 r .",
                "Thus, there exists a solution to the IWDSTRATEGY-ELIMINATION instance.",
                "A slightly weaker version of the part of Theorem 2 concerning dominance by pure strategies only is the main result of Gilboa et al. [7]. (Besides not proving the result for dominance by mixed strategies, the original result was weaker because it required utilities {0, 1, 2, 3, 4, 5, 6, 7, 8} rather than just {0, 1} (and because of this, our Lemma 1 cannot be applied to it to get the result for mixed strategies).) 5. (ITERATED) DOMINANCE USING MIXED STRATEGIES WITH SMALL SUPPORTS When showing that a strategy is dominated by a mixed strategy, there are several reasons to prefer exhibiting a 92 dominating strategy that places positive probability on as few pure strategies as possible.",
                "First, this will reduce the number of bits required to specify the dominating strategy (and thus the proof of dominance can be communicated quicker): if the dominating mixed strategy places positive probability on only k strategies, then it can be specified using k real numbers for the probabilities, plus k log m (where m is the number of strategies for the player under consideration) bits to indicate which strategies are used.",
                "Second, the proof of dominance will be cleaner: for a dominating mixed strategy, it is typically (always in the case of strict dominance) possible to spread some of the probability onto any unused pure strategy and still have a dominating strategy, but this obscures which pure strategies are the ones that are key in making the mixed strategy dominating.",
                "Third, because (by the previous) the argument for eliminating the dominated strategy is simpler and easier to understand, it is more likely to be accepted.",
                "Fourth, the level of risk neutrality required for the argument to work is reduced, at least in the extreme case where dominance by a single pure strategy can be exhibited (no risk neutrality is required here).",
                "This motivates the following problem.",
                "Definition 4 (MINIMUM-DOMINATING-SET).",
                "We are given the row players utilities of a game in normal form, a distinguished strategy σ∗ for the row player, a specification of whether the dominance should be strict or weak, and a number k. We are asked whether there exists a mixed strategy σ for the row player that places positive probability on at most k pure strategies, and dominates σ∗ in the required sense.",
                "Unfortunately, this problem is NP-complete.",
                "Theorem 3.",
                "MINIMUM-DOMINATING-SET is NPcomplete, both for strict and for weak dominance.",
                "Proof.",
                "The problem is in NP because we can nondeterministically choose a set of at most k strategies to give positive probability, and decide whether we can dominate σ∗ with these k strategies as described in Proposition 1.",
                "To show NP-hardness, we reduce an arbitrary SET-COVER instance (given a set S, subsets S1, S2, . . . , Sr, and a number t, can all of S be covered by at most t of the subsets?) to the following MINIMUM-DOMINATING-SET instance.",
                "For every element s ∈ S, there is a pure strategy σs for the column player.",
                "For every subset Si, there is a pure strategy σSi for the row player.",
                "Finally, there is the distinguished pure strategy σ∗ for the row player.",
                "The row players utilities are as follows: ur(σSi , σs) = t + 1 if s ∈ Si; ur(σSi , σs) = 0 if s /∈ Si; ur(σ∗ , σs) = 1 for all s ∈ S. Finally, we let k = t. We now proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the SET-COVER instance.",
                "Without loss of generality, we can assume that there are exactly k subsets in the cover.",
                "Then, for every Si that is in the cover, let the dominating strategy σ place exactly 1 k probability on the corresponding pure strategy σSi .",
                "Now, if we let n(s) be the number of subsets in the cover containing s (we observe that that n(s) ≥ 1), then for every strategy σs for the column player, the row players expected utility for playing σ when the column player is playing σs is u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs).",
                "So σ strictly (and thus also weakly) dominates σ∗ , and there exists a solution to the MINIMUM-DOMINATING-SET instance.",
                "Now suppose there exists a solution to the MINIMUMDOMINATING-SET instance.",
                "Consider the (at most k) pure strategies of the form σSi on which the dominating mixed strategy σ places positive probability, and let T be the collection of the corresponding subsets Si.",
                "We claim that T is a cover.",
                "For suppose there is some s ∈ S that is not in any of the subsets in T .",
                "Then, if the column player plays σs, the row player (when playing σ) will always receive utility 0-as opposed to the utility of 1 the row player would receive for playing σ∗ , contradicting the fact that σ dominates σ∗ (whether this dominance is weak or strict).",
                "It follows that there exists a solution to the SET-COVER instance.",
                "On the other hand, if we require that the dominating strategy only places positive probability on a very small number of pure strategies, then it once again becomes easy to check whether a strategy is dominated.",
                "Specifically, to find out whether player is strategy σ∗ is dominated by a strategy that places positive probability on only k pure strategies, we can simply check, for every subset of k of player is pure strategies, whether there is a strategy that places positive probability only on these k strategies and dominates σ∗ , using Proposition 1.",
                "This requires only O(|Σi|k ) such checks.",
                "Thus, if k is a constant, this constitutes a polynomial-time algorithm.",
                "A natural question to ask next is whether iterated strict dominance remains computationally easy when dominating strategies are required to place positive probability on at most k pure strategies, where k is a small constant. (We have already shown in Section 4 that iterated weak dominance is hard even when k = 1, that is, only dominance by pure strategies is allowed.)",
                "Of course, if iterated strict dominance were path-independent under this restriction, computational easiness would follow as it did in Section 4.",
                "However, it turns out that this is not the case.",
                "Observation 1.",
                "If we restrict the dominating strategies to place positive probability on at most two pure strategies, iterated strict dominance becomes path-dependent.",
                "Proof.",
                "Consider the following game: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Let (i, j) denote the outcome in which the row player plays the ith row and the column player plays the jth column.",
                "Because (1, 1), (2, 2), and (4, 3) are all Nash equilibria, none of the column players pure strategies will ever be eliminated, and neither will rows 1, 2, and 4.",
                "We now observe that randomizing uniformly over rows 1 and 2 dominates row 3, and randomizing uniformly over rows 3 and 4 dominates row 5.",
                "However, if we eliminate row 3 first, it becomes impossible to dominate row 5 without randomizing over at least 3 pure strategies.",
                "Indeed, iterated strict dominance turns out to be hard even when k = 3.",
                "Theorem 4.",
                "If we restrict the dominating strategies to place positive probability on at most three pure strategies, it becomes NP-complete to decide whether a given strategy can be eliminated using iterated strict dominance. 93 Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can check in polynomial time whether this is a valid sequence of eliminations (for any strategy to be eliminated, we can check, for every subset of three other strategies, whether there is a strategy placing positive probability on only these three strategies that dominates the strategy to be eliminated, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following two-player game.",
                "For every variable v ∈ V , the row player has strategies s+v, s−v, s1 v, s2 v, s3 v, s4 v, and the column player has strategies t1 v, t2 v, t3 v, t4 v. For every clause c ∈ C, the row player has a strategy sc, and the column player has a strategy tc, as well as, for every literal l occurring in c, an additional strategy tl c. The row player has two additional strategies s1 and s2. (s2 is the strategy that we are seeking to eliminate.)",
                "Finally, the column player has one additional strategy t1.",
                "The utility function for the row player is given as follows (where is some sufficiently small number): • ur(s+v, tj v) = 4 if j ∈ {1, 2}, for all v ∈ V ; • ur(s+v, tj v) = 1 if j ∈ {3, 4}, for all v ∈ V ; • ur(s−v, tj v) = 1 if j ∈ {1, 2}, for all v ∈ V ; • ur(s−v, tj v) = 4 if j ∈ {3, 4}, for all v ∈ V ; • ur(s+v, t) = ur(s−v, t) = 0 for all v ∈ V and t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 for all v ∈ V and i ∈ {1, 2, 3, 4}; • ur(si v, t) = for all v ∈ V , i ∈ {1, 2, 3, 4}, and t = ti v; • ur(sc, tc) = 2 for all c ∈ C; • ur(sc, t) = 0 for all c ∈ C and t = tc; • ur(s1, t1) = 1 + ; • ur(s1, t) = for all t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 for all c ∈ C; • ur(s2, t) = 0 for all t /∈ {t1} ∪ {tc : c ∈ C}.",
                "The utility function for the column player is given as follows: • uc(si v, ti v) = 1 for all v ∈ V and i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 for all v ∈ V , i ∈ {1, 2, 3, 4}, and s = si v; • uc(sc, tc) = 1 for all c ∈ C; • uc(sl, tc) = 1 for all c ∈ C and l ∈ L occurring in c; • uc(s, tc) = 0 for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + for all c ∈ C; • uc(sl , tl c) = 1 + for all c ∈ C and l = l occurring in c; • uc(s, tl c) = for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c, l = l }; • uc(s2, t1) = 1; • uc(s, t1) = 0 for all s = s2.",
                "We now show that the two instances are equivalent.",
                "First, suppose that there is a solution to the satisfiability instance.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the satisfying assignment, eliminate s+v with the mixed strategy σr that places probability 1/3 on s−v, probability 1/3 on s1 v, and probability 1/3 on s2 v. (The expected utility of playing σr against t1 v or t2 v is 14/3 > 4; against t3 v or t4 v, it is 4/3 > 1; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 2.",
                "Similarly, for every variable v that is set to false in the satisfying assignment, eliminate s−v with the mixed strategy σr that places probability 1/3 on s+v, probability 1/3 on s3 v, and probability 1/3 on s4 v. (The expected utility of playing σr against t1 v or t2 v is 4/3 > 1; against t3 v or t4 v, it is 14/3 > 4; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 3.",
                "For every c ∈ C, eliminate tc with any tl c for which l was set to true in the satisfying assignment. (This is a valid dominance because tl c performs better than tc against any strategy other than sl, and we eliminated sl in step 1 or in step 2.) 4.",
                "Finally, eliminate s2 with s1. (This is a valid dominance because s1 performs better than s2 against any strategy other than those in {tc : c ∈ C}, which we eliminated in step 3.)",
                "Hence, there is an elimination path that eliminates s2.",
                "Now, suppose that there is an elimination path that eliminates s2.",
                "The strategy that eventually dominates s2 must place most of its probability on s1, because s1 is the only other strategy that performs well against t1, which cannot be eliminated before s2.",
                "But, s1 performs significantly worse than s2 against any strategy tc with c ∈ C, so it follows that all these strategies must be eliminated first.",
                "Each strategy tc can only be eliminated by a strategy that places most of its weight on the corresponding strategies tl c with l ∈ c, because they are the only other strategies that perform well against sc, which cannot be eliminated before tc.",
                "But, each strategy tl c performs significantly worse than tc against sl, so it follows that for every clause c, for one of the literals l occurring in it, sl must be eliminated first.",
                "Now, strategies of the form tj v will never be eliminated because they are the unique best responses to the corresponding strategies sj v (which are, in turn, the best responses to the corresponding tj v).",
                "As a result, if strategy s+v (respectively, s−v) is eliminated, then its opposite strategy s−v (respectively, s+v) can no longer be eliminated, for the following reason.",
                "There is no other pure strategy remaining that gets a significant utility against more than one of the strategies t1 v, t2 v, t3 v, t4 v, but s−v (respectively, s+v) gets significant utility against all 4, and therefore cannot be dominated by a mixed strategy placing positive probability on at most 3 strategies.",
                "It follows that for each v ∈ V , at most one of the strategies s+v, s−v is eliminated, in such a way that for every clause c, for one of the literals l occurring in it, sl must be eliminated.",
                "But then setting all the literals l such that sl is eliminated to true constitutes a solution to the satisfiability instance.",
                "In the next section, we return to the setting where there is no restriction on the number of pure strategies on which a dominating mixed strategy can place positive probability. 6. (ITERATED) DOMINANCE IN BAYESIAN GAMES So far, we have focused on normal form games that are flatly represented (that is, every matrix entry is given ex94 plicitly).",
                "However, for many games, the flat representation is too large to write down explicitly, and instead, some representation that exploits the structure of the game needs to be used.",
                "Bayesian games, besides being of interest in their own right, can be thought of as a useful structured representation of normal form games, and we will study them in this section.",
                "In a Bayesian game, each player first receives privately held preference information (the players type) from a distribution, which determines the utility that that player receives for every outcome of (that is, vector of actions played in) the game.",
                "After receiving this type, the player plays an action based on it.7 Definition 5.",
                "A Bayesian game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of actions Ai, a (finite) type space Θi with a probability distribution πi over it, and a utility function ui : Θi × A1 × A2 × . . . × An → R (where ui(θi, a1, a2, . . . , an) denotes player is utility when is type is θi and each player j plays action aj).",
                "A pure strategy in a Bayesian game is a mapping from types to actions, σi : Θi → Ai, where σi(θi) denotes the action that player i plays for type θi.",
                "Any vector of pure strategies in a Bayesian game defines an (expected) utility for each player, and therefore we can translate a Bayesian game into a normal form game.",
                "In this normal form game, the notions of dominance and iterated dominance are defined as before.",
                "However, the normal form representation of the game is exponentially larger than the Bayesian representation, because each player i has |Ai||Θi| distinct pure strategies.",
                "Thus, any algorithm for Bayesian games that relies on expanding the game to its normal form will require exponential time.",
                "Specifically, our easiness results for normal form games do not directly transfer to this setting.",
                "In fact, it turns out that checking whether a strategy is dominated by a pure strategy is hard in Bayesian games.",
                "Theorem 5.",
                "In a Bayesian game, it is NP-complete to decide whether a given pure strategy σr : Θr → Ar is dominated by some other pure strategy (both for strict and weak dominance), even when the row players distribution over types is uniform.",
                "Proof.",
                "The problem is in NP because it is easy to verify whether a candidate dominating strategy is indeed a dominating strategy.",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a set of clauses C using variables from V ) to the following Bayesian game.",
                "Let the row players action set be Ar = {t, f, 0} and let the column players action set be Ac = {ac : c ∈ C}.",
                "Let the row players type set be Θr = {θv : v ∈ V }, with a distribution πr that is uniform.",
                "Let the row players utility function be as follows: • ur(θv, 0, ac) = 0 for all v ∈ V and c ∈ C; • ur(θv, b, ac) = |V | for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b satisfies c; • ur(θv, b, ac) = −1 for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b does not satisfy c. 7 In general, a player can also receive a signal about the other players preferences, but we will not concern ourselves with that here.",
                "Let the pure strategy to be dominated be the one that plays 0 for every type.",
                "We show that the strategy is dominated by a pure strategy if and only if there is a solution to the satisfiability instance.",
                "First, suppose there is a solution to the satisfiability instance.",
                "Then, let σd r be given by: σd r (θv) = t if v is set to true in the solution to the satisfiability instance, and σd r (θv) = f otherwise.",
                "Then, against any action ac by the column player, there is at least one type θv such that either +v ∈ c and σd r (θv) = t, or −v ∈ c and σd r (θv) = f. Thus, the row players expected utility against action ac is at least |V | |V | − |V |−1 |V | = 1 |V | > 0.",
                "So, σd r is a dominating strategy.",
                "Now, suppose there is a dominating pure strategy σd r .",
                "This dominating strategy must play t or f for at least one type.",
                "Thus, against any ac by the column player, there must at least be some type θv for which ur(θv, σd r (θv), ac) > 0.",
                "That is, there must be at least one variable v such that setting v to σd r (θv) satifies c. But then, setting each v to σd r (θv) must satisfy all the clauses.",
                "So a satisfying assignment exists.",
                "However, it turns out that we can modify the linear programs from Proposition 1 to obtain a polynomial time algorithm for checking whether a strategy is dominated by a mixed strategy in Bayesian games.",
                "Theorem 6.",
                "In a Bayesian game, it can be decided in polynomial time whether a given (possibly mixed) strategy σr is dominated by some other mixed strategy, using linear programming (both for strict and weak dominance).",
                "Proof.",
                "We can modify the linear programs presented in Proposition 1 as follows.",
                "For strict dominance, again assuming without loss of generality that all the utilities in the game are positive, use the following linear program (in which pσr r (θr, ar) is the probability that σr, the strategy to be dominated, places on ar for type θr): minimize θr∈Θr ar∈Ar pr(ar) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1.",
                "Assuming that π(θr) > 0 for all θr ∈ Θr, this program will return an objective value smaller than |Θr| if and only if σr is strictly dominated, by reasoning similar to that done in Proposition 1.",
                "For weak dominance, use the following linear program: maximize ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) = 1.",
                "This program will return an objective value greater than 0 if and only if σr is weakly dominated, by reasoning similar to that done in Proposition 1.",
                "We now turn to iterated dominance in Bayesian games.",
                "Na¨ıvely, one might argue that iterated dominance in Bayesian 95 games always requires an exponential number of steps when a significant fraction of the games pure strategies can be eliminated, because there are exponentially many pure strategies.",
                "However, this is not a very strong argument because oftentimes we can eliminate exponentially many pure strategies in one step.",
                "For example, if for some type θr ∈ Θr we have, for all ac ∈ Ac, that u(θr, a1 r, ac) > u(θr, a2 r, ac), then any pure strategy for the row player which plays action a2 r for type θr is dominated (by the strategy that plays action a1 r for type θr instead)-and there are exponentially many (|Ar||Θr|−1 ) such strategies.",
                "It is therefore conceivable that we need only polynomially many eliminations of collections of a players strategies.",
                "However, the following theorem shows that this is not the case, by giving an example where an exponential number of iterations (that is, alternations between the players in eliminating strategies) is required. (We emphasize that this is not a result about computational complexity.)",
                "Theorem 7.",
                "Even in symmetric 3-player Bayesian games, iterated dominance by pure strategies can require an exponential number of iterations (both for strict and weak dominance), even with only three actions per player.",
                "Proof.",
                "Let each player i ∈ {1, 2, 3} have n + 1 types θ1 i , θ2 i , . . . , θn+1 i .",
                "Let each player i have 3 actions ai, bi, ci, and let the utility function of each player be defined as follows. (In the below, i + 1 and i + 2 are shorthand for i + 1(mod 3) and i + 2(mod 3) when used as player indices.",
                "Also, −∞ can be replaced by a sufficiently negative number.",
                "Finally, δ and should be chosen to be very small (even compared to 2−(n+1) ), and should be more than twice as large as δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 for si+1 = ci+1 or si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − for si+1 = ai+1 and si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ for si+1 = ai+1 or si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ for all si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ for all si+1, si+2 when j > 1; • ui(θj i ; bi, si+1, si+2) = − for all si+1, si+2 when j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 for all si+1 when j > 1; • ui(θj i ; ci, si+1, si+2) = δ− for all si+1 and si+2 = ci+2 when j > 1.",
                "Let the distribution over each players types be given by p(θj i ) = 2−j (with the exception that p(θ2 i ) = 2−2 +2−(n+1) ).",
                "We will be interested in eliminating strategies of the following form: play bi for type θ1 i , and play one of bi or ci otherwise.",
                "Because the utility function is the same for any type θj i with j > 1, these strategies are effectively defined by the total probability that they place on ci,8 which is t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j where tj i = 1 if player i 8 Note that the strategies are still pure strategies; the probability placed on an action by a strategy here is simply the sum of the probabilities of the types for which the strategy chooses that action. plays ci for type θj i , and 0 otherwise.",
                "This probability is different for any two different strategies of the given form, and we have exponentially many different strategies of the given form.",
                "For any probability q which can be expressed as t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (with all tj ∈ {0, 1}), let σi(q) denote the (unique) strategy of the given form for player i which places a total probability of q on ci.",
                "Any strategy that plays ci for type θ1 i or ai for some type θj i with j > 1 can immediately be eliminated.",
                "We will show that, after that, we must eliminate the strategies σi(q) with high q first, slowly working down to those with lower q.",
                "Claim 1: If σi+1(q ) and σi+2(q ) have not yet been eliminated, and q < q , then σi(q) cannot yet be eliminated.",
                "Proof: First, we show that no strategy σi(q ) can eliminate σi(q).",
                "Against σi+1(q ), σi+2(q ), the utility of playing σi(p) is − + p · δ − p · q /2.",
                "Thus, when q = 0, it is best to set p as high as possible (and we note that σi+1(0) and σi+2(0) have not been eliminated), but when q > 0, it is best to set p as low as possible because δ < q /2.",
                "Thus, whether q > q or q < q , σi(q) will always do strictly better than σi(q ) against some remaining opponent strategies.",
                "Hence, no strategy σi(q ) can eliminate σi(q).",
                "The only other pure strategies that could dominate σi(q) are strategies that play ai for type θ1 i , and bi or ci for all other types.",
                "Let us take such a strategy and suppose that it plays c with probability p. Against σi+1(q ), σi+2(q ) (which have not yet been eliminated), the utility of playing this strategy is −(q )2 /2 − /2 + p · δ − p · q /2.",
                "On the other hand, playing σi(q) gives − + q · δ − q · q /2.",
                "Because q > q, we have −(q )2 /2 < −q · q /2, and because δ and are small, it follows that σi(q) receives a higher utility.",
                "Therefore, no strategy dominates σi(q), proving the claim.",
                "Claim 2: If for all q > q, σi+1(q ) and σi+2(q ) have been eliminated, then σi(q) can be eliminated.",
                "Proof: Consider the strategy for player i that plays ai for type θ1 i , and bi for all other types (call this strategy σi); we claim σi dominates σi(q).",
                "First, if either of the other players k plays ak for θ1 k, then σi performs better than σi(q) (which receives −∞ in some cases).",
                "Because the strategies for player k that play ck for type θ1 k, or ak for some type θj k with j > 1, have already been eliminated, all that remains to check is that σi performs better than σi(q) whenever both of the other two players play strategies of the following form: play bk for type θ1 k, and play one of bk or ck otherwise.",
                "We note that among these strategies, there are none left that place probability greater than q on ck.",
                "Letting qk denote the probability with which player k plays ck, the expected utility of playing σi is −qi+1 · qi+2/2 − /2.",
                "On the other hand, the utility of playing σi(q) is − + q · δ − q · qi+2/2.",
                "Because qi+1 ≤ q, the difference between these two expressions is at least /2 − δ, which is positive.",
                "It follows that σi dominates σi(q).",
                "From Claim 2, it follows that all strategies of the form σi(q) will eventually be eliminated.",
                "However, Claim 1 shows that we cannot go ahead and eliminate multiple such strategies for one player, unless at least one other player simultaneously keeps up in the eliminated strategies: every time a σi(q) is eliminated such that σi+1(q) and σi+2(q) have not yet been eliminated, we need to eliminate one of the latter two strategies before any σi(q ) with q > q can be eliminated-that is, we need to alternate between players.",
                "Because there are exponentially many strategies of the form σi(q), it follows that iterated elimination will require exponentially many iterations to complete. 96 It follows that an efficient algorithm for iterated dominance (strict or weak) by pure strategies in Bayesian games, if it exists, must somehow be able to perform (at least part of) many iterations in a single step of the algorithm (because if each step only performed a single iteration, we would need exponentially many steps).",
                "Interestingly, Knuth et al. [11] argue that iterated dominance appears to be an inherently sequential problem (in light of their result that iterated very weak dominance is P-complete, that is, apparently not efficiently parallelizable), suggesting that aggregating many iterations may be difficult. 7.",
                "CONCLUSIONS While the Nash equilibrium solution concept is studied more and more intensely in our community, the perhaps more elementary concept of (iterated) dominance has received much less attention.",
                "In this paper we studied various computational aspects of this concept.",
                "We first studied both strict and weak dominance (not iterated), and showed that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then moved on to iterated dominance.",
                "We showed that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allowed us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then studied what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we showed that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we showed that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we studied dominance and iterated dominance in Bayesian games, as an example of a concise representation language for normal form games that is interesting in its own right.",
                "We showed that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak dominance).",
                "Finally, we showed that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "There are various avenues for future research.",
                "First, there is the open question of whether it is possible to complete iterated dominance in Bayesian games in polynomial time (even though we showed that an exponential number of alternations between the players in eliminating strategies is sometimes required).",
                "Second, we can study computational aspects of (iterated) dominance in concise representations of normal form games other than Bayesian games-for example, in graphical games [9] or local-effect/action graph games [12, 2]. (How to efficiently perform iterated very weak dominance has already been studied for partially observable stochastic games [8].)",
                "Finally, we can ask whether some of the algorithms we described (such as the one for iterated strict dominance with mixed strategies) can be made faster. 8.",
                "REFERENCES [1] Krzysztof R. Apt.",
                "Uniform proofs of order independence for various strategy elimination procedures.",
                "Contributions to Theoretical Economics, 4(1), 2004. [2] Nivan A. R. Bhat and Kevin Leyton-Brown.",
                "Computing Nash equilibria of action-graph games.",
                "In UAI, 2004. [3] Ben Blum, Christian R. Shelton, and Daphne Koller.",
                "A continuation method for Nash equilibria in structured games.",
                "In IJCAI, 2003. [4] Vincent Conitzer and Tuomas Sandholm.",
                "Complexity results about Nash equilibria.",
                "In IJCAI, pages 765-771, 2003. [5] Drew Fudenberg and Jean Tirole.",
                "Game Theory.",
                "MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "On the order of eliminating dominated strategies.",
                "Operations Research Letters, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "The complexity of eliminating dominated strategies.",
                "Mathematics of Operation Research, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein, and Shlomo Zilberstein.",
                "Dynamic programming for partially observable stochastic games.",
                "In AAAI, pages 709-715, 2004. [9] Michael Kearns, Michael Littman, and Satinder Singh.",
                "Graphical models for game theory.",
                "In UAI, 2001. [10] Leonid Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou, and John N Tsitsiklis.",
                "A note on strategy elimination in bimatrix games.",
                "Operations Research Letters, 7(3):103-107, 1988. [12] Kevin Leyton-Brown and Moshe Tennenholtz.",
                "Local-effect games.",
                "In IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [14] Michael Littman and Peter Stone.",
                "A polynomial-time Nash equilibrium algorithm for repeated games.",
                "In ACM-EC, pages 48-54, 2003. [15] Leslie M. Marx and Jeroen M. Swinkels.",
                "Order independence for iterated weak dominance.",
                "Games and Economic Behavior, 18:219-245, 1997. [16] Leslie M. Marx and Jeroen M. Swinkels.",
                "Corrigendum, order independence for iterated weak dominance.",
                "Games and Economic Behavior, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston, and Jerry R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [18] Roger Myerson.",
                "Game Theory: Analysis of Conflict.",
                "Harvard University Press, Cambridge, 1991. [19] Martin J Osborne and Ariel Rubinstein.",
                "A Course in Game Theory.",
                "MIT Press, 1994. [20] Christos Papadimitriou.",
                "Algorithms, games and the Internet.",
                "In STOC, pages 749-753, 2001. [21] Ryan Porter, Eugene Nudelman, and Yoav Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, 2004. 97"
            ],
            "original_annotated_samples": [
                "INTRODUCTION In multiagent systems with <br>self-interested agent</br>s, the optimal action for one agent may depend on the actions taken by other agents."
            ],
            "translated_annotated_samples": [
                "INTRODUCCIÓN En sistemas multiagentes con <br>agentes auto-interesados</br>, la acción óptima para un agente puede depender de las acciones tomadas por otros agentes."
            ],
            "translated_text": "Estudiamos varios aspectos computacionales de la resolución de juegos utilizando la dominancia y la dominancia iterada. Primero estudiamos tanto la dominancia estricta como la débil (no iterada), y demostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta se puede hacer en tiempo polinómico utilizando la resolución de un único programa lineal. Luego pasamos a la dominancia iterada. Mostramos que determinar si existe algún camino que elimine una estrategia dada es NP-completo con dominancia débil iterada. Esto nos permite también demostrar que determinar si existe un camino que conduce a una solución única es NP-completo. Ambos resultados se mantienen tanto con como sin dominancia de estrategias mixtas. (Una versión más débil del segundo resultado (solo sin dominancia de estrategias mixtas) ya se conocía [7].) La dominancia estricta iterada, por otro lado, es independiente de la ruta (tanto con como sin dominancia por estrategias mixtas) y, por lo tanto, se puede realizar en tiempo polinómico. Luego estudiamos qué sucede cuando la estrategia dominante puede asignar una probabilidad positiva solo a unas pocas estrategias puras. Primero, demostramos que encontrar la estrategia dominante con el tamaño de soporte mínimo es NP-completo (tanto para dominancia estricta como débil). Luego, demostramos que la dominancia estricta iterada se vuelve dependiente del camino cuando hay un límite en el tamaño del soporte de las estrategias dominantes, y que decidir si una estrategia dada puede ser eliminada por dominancia estricta iterada bajo esta restricción es NP-completo (incluso cuando el límite en el tamaño del soporte es 3). Finalmente, estudiamos juegos bayesianos. Mostramos que, a diferencia de los juegos en forma normal, decidir si una estrategia pura dada está dominada por otra estrategia pura en un juego bayesiano es NP-completo (tanto con dominancia estricta como débil); sin embargo, decidir si una estrategia está dominada por alguna estrategia mixta aún puede hacerse en tiempo polinómico con la resolución de un único programa lineal (tanto con dominancia estricta como débil). Finalmente, demostramos que la dominancia iterada utilizando estrategias puras puede requerir un número exponencial de iteraciones en un juego bayesiano (tanto con dominancia estricta como débil). Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN En sistemas multiagentes con <br>agentes auto-interesados</br>, la acción óptima para un agente puede depender de las acciones tomadas por otros agentes. En tales contextos, los agentes necesitan herramientas de teoría de juegos para decidir racionalmente sobre una acción. La teoría de juegos ofrece varios modelos formales de escenarios estratégicos, el más conocido de los cuales es un juego en forma normal (o matriz), que especifica una utilidad (pago) para cada agente en cada combinación de estrategias que los agentes eligen, así como conceptos de solución que, dados un juego, especifican qué resultados son razonables (bajo varias suposiciones de racionalidad y conocimiento común). Probablemente el concepto de solución más conocido (y ciertamente el más estudiado) es el equilibrio de Nash. Un equilibrio de Nash especifica una estrategia para cada jugador, de tal manera que ningún jugador tiene un incentivo para desviarse (unilateralmente) de la estrategia prescrita. Recientemente, numerosos artículos han estudiado el cálculo de equilibrios de Nash en diferentes contextos [9, 4, 12, 3, 13, 14], y la complejidad de construir un equilibrio de Nash en juegos en forma normal ha sido etiquetada como uno de los dos problemas abiertos más importantes en el límite de P hoy en día [20]. El problema de calcular soluciones de acuerdo con los conceptos de solución quizás más elementales de dominancia y dominancia iterada ha recibido mucha menos atención. (Después de un breve artículo temprano sobre un caso sencillo [11], el principal estudio computacional de estos conceptos ha tenido lugar en realidad en un artículo de la comunidad de teoría de juegos [7].) Una estrategia domina estrictamente a otra estrategia si tiene un rendimiento estrictamente mejor contra todos los vectores de estrategias del oponente, y la domina débilmente si tiene al menos el mismo rendimiento contra todos los vectores de estrategias del oponente, y estrictamente mejor contra al menos uno. La idea es que las estrategias dominadas pueden ser eliminadas de consideración. En la dominancia iterada, la eliminación avanza en rondas y se vuelve más fácil a medida que se eliminan más estrategias: en cualquier ronda dada, la estrategia dominante ya no necesita desempeñarse mejor que o igual que la estrategia dominada contra las estrategias oponentes que fueron eliminadas en rondas anteriores. Calcular soluciones según la dominancia (iterada) es importante por al menos las siguientes razones: 1) puede ser computacionalmente más fácil que calcular (por ejemplo) un equilibrio de Nash (y por lo tanto puede ser útil como paso de preprocesamiento en el cálculo de un equilibrio de Nash), y 2) la dominancia (iterada) requiere una suposición de racionalidad más débil en los jugadores que (por ejemplo) el equilibrio de Nash, y por lo tanto las soluciones derivadas según ella son más propensas a ocurrir. En este artículo, estudiamos algunas preguntas computacionales fundamentales relacionadas con la dominancia y la dominancia iterada, incluyendo qué tan difícil es verificar si una estrategia dada puede ser eliminada por cada una de las variantes de estos conceptos. El resto del documento está organizado de la siguiente manera. En la Sección 2, revisamos brevemente las definiciones y propiedades básicas de los juegos en forma normal, la dominancia estricta y débil, y la dominancia estricta y débil iterada. En las secciones restantes, estudiamos los aspectos computacionales de la dominancia y la dominancia iterada. En la Sección 3, estudiamos la dominancia de un solo disparo (no iterada). En la Sección 4, estudiamos la dominancia iterada. En la Sección 5, estudiamos la dominancia y la dominancia iterada cuando la estrategia dominante solo puede asignar probabilidad a unas pocas estrategias puras. Finalmente, en la Sección 6, estudiamos la dominancia y la dominancia iterada en juegos bayesianos. 2. DEFINICIONES Y PROPIEDADES BÁSICAS En esta sección, revisamos brevemente los juegos en forma normal, así como la dominancia y la dominancia iterada (tanto estricta como débil). Un juego de forma normal de n jugadores se define de la siguiente manera. Definición 1. Un juego en forma normal está dado por un conjunto de jugadores {1, 2, . . . , n}; y, para cada jugador i, un conjunto (finito) de estrategias puras Σi y una función de utilidad ui : Σ1 × Σ2 × . . . × Σn → R (donde ui(σ1, σ2, . . . , σn) denota la utilidad del jugador i cuando cada jugador j juega la acción σj). Las dos principales nociones de dominancia se definen de la siguiente manera. Definición 2. La estrategia σi del jugador se dice que está estrictamente dominada por la estrategia σi del jugador si, para cualquier vector de estrategias σ−i de los otros jugadores, ui(σi, σ−i) > ui(σi, σ−i). La estrategia σi del jugador se dice que está débilmente dominada por la estrategia σi del jugador si, para cualquier vector de estrategias σ−i para los otros jugadores, ui(σi, σ−i) ≥ ui(σi, σ−i), y para al menos un vector de estrategias σ−i para los otros jugadores, ui(σi, σ−i) > ui(σi, σ−i). En esta definición, a veces se permite que la estrategia dominante σi sea una estrategia mixta, es decir, una distribución de probabilidad sobre estrategias puras. En este caso, las utilidades están en dominancia en conjunto. Por ejemplo, a veces se utilizan comprobaciones de dominancia simple como una subrutina en la búsqueda de equilibrios de Nash [21]. Las definiciones son las utilidades esperadas. Hay otras nociones de dominancia, como la dominancia muy débil (en la que no se requiere ninguna desigualdad estricta, por lo que dos estrategias pueden dominarse mutuamente), pero no las estudiaremos aquí. Cuando estamos analizando las relaciones de dominancia para el jugador i, los otros jugadores (−i) pueden ser considerados como un solo jugador. Por lo tanto, en el resto del documento, cuando estudiamos la dominancia de un solo paso (no iterada), nos centraremos sin pérdida de generalidad en juegos de dos jugadores. En juegos de dos jugadores, generalmente nos referiremos a los jugadores como r (fila) y c (columna) en lugar de 1 y 2. En la dominancia iterada, las estrategias dominadas son eliminadas del juego y ya no tienen ningún efecto en las relaciones de dominancia futuras. La dominancia iterada puede eliminar más estrategias que la dominancia, de la siguiente manera. σr puede originalmente no dominar a σr porque este último tiene un mejor desempeño contra σc; pero luego, una vez que σc es eliminado porque es dominado por σc, σr domina a σr, y este último puede ser eliminado. Por ejemplo, en el siguiente juego, se puede eliminar primero a R, después de lo cual D queda dominado. Tanto la dominancia estricta como la dominancia débil pueden ser utilizadas en la definición de la dominancia iterada. Observamos que el proceso de dominancia iterada nunca se ve favorecido al eliminar una estrategia mixta dominada, por la siguiente razón. Si σi le da al jugador i una utilidad mayor que σi contra la estrategia mixta σj para el jugador j = i (y estrategias σ−{i,j} para los otros jugadores), entonces para al menos una estrategia pura σj en la que σj coloque probabilidad positiva, σi debe desempeñarse mejor que σi contra σj (y estrategias σ−{i,j} para los otros jugadores). Por lo tanto, eliminar la estrategia mixta σj no introduce nuevas dominancias. Discusiones más detalladas y ejemplos se pueden encontrar en textos estándar sobre microeconomía o teoría de juegos [17, 5]. Ahora estamos listos para pasar al núcleo de este documento. 3. En esta sección, estudiamos la noción de dominancia de un solo turno (no iterada). Como primera observación, verificar si una estrategia dada está estrictamente (débilmente) dominada por alguna estrategia pura es sencillo, al comprobar, para cada estrategia pura de ese jugador, si la última estrategia tiene un rendimiento estrictamente mejor contra todas las estrategias de los oponentes (al menos igual de bien contra todas las estrategias de los oponentes, y estrictamente 2 La estrategia dominada σi, por supuesto, también puede ser mixta, pero esto no tiene implicaciones técnicas para el documento: cuando estudiamos la dominancia de un solo disparo, preguntamos si una estrategia dada está dominada, y no importa si la estrategia dada es pura o mixta; cuando estudiamos la dominancia iterada, no tiene sentido eliminar las estrategias mixtas, como veremos en breve. 3 Este jugador puede tener un espacio de estrategias muy grande (una estrategia pura para cada vector de estrategias puras de los jugadores que están siendo reemplazados). Sin embargo, esto no resultará en un aumento en el tamaño de nuestra representación, ya que la representación original ya tenía que especificar las utilidades para cada uno de estos vectores. Observamos que una restricción a juegos de dos jugadores no sería sin pérdida de generalidad para la dominancia iterada. Esto se debe a que para la dominancia iterada, necesitamos analizar las estrategias dominadas de cada jugador individual, por lo que no podemos fusionar a ningún jugador. A continuación, mostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta se puede hacer en tiempo polinómico resolviendo un único programa lineal. (Programas lineales similares se han presentado anteriormente [18]; presentamos el resultado aquí por completitud, y porque construiremos sobre los programas lineales dados a continuación en el Teorema 6.) Proposición 1. Dadas las utilidades de los jugadores de fila, un subconjunto Dr de las estrategias puras de los jugadores de fila Σr, y una estrategia distinguida σ∗ r para el jugador de fila, podemos verificar en tiempo polinómico en el tamaño del juego (resolviendo un único programa lineal de tamaño polinómico) si existe alguna estrategia mixta σr, que coloque probabilidad positiva solo en estrategias en Dr y domine a σ∗ r, tanto en dominancia estricta como débil. Prueba. Sea pdr la probabilidad que σr asigna a dr ∈ Dr. Resolveremos un único programa lineal en cada uno de nuestros algoritmos; los programas lineales pueden resolverse en tiempo polinómico [10]. Para la dominancia estricta, la pregunta es si se puede establecer el pdr de manera que para cada estrategia pura del jugador de la columna σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc). Debido a que la desigualdad debe ser estricta, no podemos resolver esto directamente mediante programación lineal. Procedemos de la siguiente manera. Dado que el juego es finito, podemos asumir sin pérdida de generalidad que todas las utilidades son positivas (si no lo son, simplemente añade una constante a todas las utilidades). Resolver el siguiente programa lineal: minimizar dr∈Dr pdr tal que para cualquier σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc). Si σ∗ r es estrictamente dominada por alguna estrategia mixta, este programa lineal tiene una solución con un valor objetivo < 1. (La estrategia dominante es una solución factible con un valor objetivo exactamente igual a 1. Dado que ninguna restricción es vinculante para esta solución, podemos reducir ligeramente una de las probabilidades sin afectar la viabilidad, obteniendo así una solución con un valor objetivo < 1. Además, si este programa lineal tiene una solución con un valor objetivo < 1, existe una estrategia mixta que domina estrictamente a σ∗ r, la cual se puede obtener tomando la solución del PL y agregando la probabilidad restante a cualquier estrategia (debido a que todas las utilidades son positivas, esto sumará al lado izquierdo de cualquier desigualdad, por lo que todas las desigualdades se volverán estrictas). Para la dominancia débil, podemos resolver el siguiente programa lineal: maximizar σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) tal que para cualquier σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1. Si σ∗ r está débilmente dominado por alguna estrategia mixta, entonces esa estrategia mixta es una solución factible para este programa con un valor objetivo > 0, porque para al menos una estrategia σc ∈ Σc tenemos ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0. Por otro lado, si este programa tiene una solución con un valor objetivo > 0, entonces para al menos una estrategia σc ∈ Σc debemos tener ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, y por lo tanto la solución de los programas lineales es una estrategia mixta débilmente dominante. 4. DOMINANCIA ITERADA Ahora pasamos a la dominancia iterada. Es bien sabido que la dominancia estricta iterada es independiente del camino [6, 19], es decir, si eliminamos las estrategias dominadas hasta que ya no queden más estrategias dominadas, al final las estrategias restantes para cada jugador serán las mismas, independientemente del orden en que se eliminen las estrategias. Por lo tanto, para determinar si una estrategia dada puede ser eliminada por dominancia estricta iterada, todo lo que se necesita hacer es eliminar repetidamente las estrategias que son estrictamente dominadas, hasta que no queden más estrategias dominadas. Dado que podemos verificar en tiempo polinómico si alguna estrategia dada está dominada (ya sea que se permita o no la dominancia por estrategias mixtas, como se describe en la Sección 3), todo este procedimiento toma solo tiempo polinómico. En el caso de la dominancia iterada por estrategias puras con dos jugadores, Knuth et al. [11] mejoran ligeramente (aceleran) la implementación directa de este procedimiento al llevar un registro, para cada par ordenado de estrategias de un jugador, del número de estrategias del oponente que impiden que la primera estrategia domine a la segunda. Por lo tanto, el tiempo de ejecución para un juego m × n se reduce de O((m + n)4 ) a O((m + n)3 ). (En realidad, solo estudian dominancia muy débil (para la cual no se requieren desigualdades estrictas), pero el enfoque se puede extender fácilmente). Por el contrario, se sabe que la dominancia débil iterada es dependiente del camino. Por ejemplo, en el siguiente juego, utilizando la dominancia débil iterada podemos eliminar primero M y luego D, o primero R y luego U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Por lo tanto, si bien el procedimiento de eliminar estrategias débilmente dominadas hasta que no queden más estrategias débilmente dominadas puede ciertamente ejecutarse en tiempo polinómico, qué estrategias sobreviven al final depende del orden en el que eliminamos las estrategias dominadas. Investigaremos dos preguntas para la dominancia débil iterada: si una estrategia dada es eliminada en algún camino, y si hay un camino hacia una solución única (una única estrategia pura por jugador). Mostraremos que ambos de estos problemas son computacionalmente difíciles. Definición 3. Dada un juego en forma normal y una estrategia distinguida σ∗ , la ELIMINACIÓN DE ESTRATEGIAS POR DOMINANCIA DÉBIL (IWD-STRATEGY-ELIMINATION) pregunta si existe algún camino de dominancia débil iterada que elimine σ∗ . Dada un juego en forma normal, IWDUNIQUE-SOLUTION pregunta si existe algún camino de dominancia débil iterada que conduzca a una solución única (una estrategia restante por jugador). El siguiente lema muestra un caso especial de juegos en forma normal en el que permitir la dominancia débil a través de estrategias mixtas (además de la dominancia débil a través de estrategias puras) hace 6. Sin embargo, existe una restricción de dominancia débil llamada dominancia débil agradable que es independiente de la ruta [15, 16]. Para obtener una visión general de los resultados de independencia de la ruta, consulte Apt [1]. 90 no ayuda. Demostraremos los resultados de dificultad en este contexto, de modo que se mantengan independientemente de si se permite o no la dominancia por estrategias mixtas. Lema 1. Supongamos que todas las utilidades en un juego están en {0, 1}. Entonces, toda estrategia pura que es débilmente dominada por una estrategia mixta también es débilmente dominada por una estrategia pura. Prueba. Se supone que la estrategia pura σ es débilmente dominada por la estrategia mixta σ∗. Si σ obtiene una utilidad de 1 contra alguna estrategia o vector de estrategias del oponente (si hay más de 2 jugadores), entonces todas las estrategias puras en las que σ∗ asigna una probabilidad positiva también deben obtener una utilidad de 1 contra esa estrategia del oponente (de lo contrario, la utilidad esperada sería menor que 1). Además, al menos una de las estrategias puras en las que σ∗ coloca probabilidad positiva debe obtener una utilidad de 1 contra una estrategia del oponente que σ obtiene 0 (de lo contrario, la desigualdad nunca sería estricta). Se deduce que esta estrategia pura domina débilmente a σ. Ahora estamos listos para demostrar los resultados principales de esta sección. Teorema 1. IWD-STRATEGY-ELIMINATION es NPcompleto, incluso con 2 jugadores, y con 0 y 1 siendo las únicas utilidades que ocurren en la matriz, ya sea que se permita o no la dominancia por estrategias mixtas. Prueba. El problema está en NP porque, dado una secuencia de estrategias a ser eliminadas, podemos verificar fácilmente si esta es una secuencia válida de eliminaciones (incluso cuando se permite la dominancia por estrategias mixtas, utilizando la Proposición 1). Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto no vacío de cláusulas C sobre un conjunto no vacío de variables V, con literales correspondientes L = {+v : v ∈ V} ∪ {−v : v ∈ V}) a la siguiente instancia de ELIMINACIÓN DE ESTRATEGIA IWD. (En esta instancia, especificaremos que ciertas estrategias son ineliminables. Una estrategia σr puede hacerse ineliminable, incluso cuando 0 y 1 son las únicas utilidades permitidas, al agregar otra estrategia σr y otra estrategia del oponente σc, de modo que: 1. σr y σr son las únicas estrategias que le dan al jugador de la fila una utilidad de 1 contra σc. 2. σr y σr siempre le dan al jugador de la fila la misma utilidad. 3. σc es la única estrategia que le da al jugador de la columna una utilidad de 1 contra σr, pero de lo contrario σc siempre le da al jugador de la columna una utilidad de 0. Esto hace imposible eliminar cualquiera de estas tres estrategias. No especificaremos explícitamente las estrategias adicionales para hacer la prueba más legible. En esta demostración, designaremos las estrategias del jugador de fila como s, y las estrategias del jugador de columna como t, para mejorar la legibilidad. Que se dé el conjunto de estrategias puras de los jugadores de fila como sigue. Para cada variable v ∈ V, el jugador de la fila tiene estrategias correspondientes s1 +v, s2 +v, s1 −v, s2 −v. Además, el jugador de la fila tiene las siguientes 2 estrategias: s1 0 y s2 0, donde s2 0 = σ∗ r (es decir, es la estrategia que buscamos eliminar). Finalmente, para cada cláusula c ∈ C, el jugador de la fila tiene estrategias correspondientes s1 c (ineliminables) y s2 c. Dado el conjunto de estrategias puras de los jugadores de la columna de la siguiente manera. Para cada variable v ∈ V, el jugador de la columna tiene una estrategia correspondiente tv. Para cada cláusula c ∈ C, el jugador de la columna tiene una estrategia correspondiente tc, y además, para cada literal l ∈ L que ocurre en c, una estrategia tc,l. Para cada variable v ∈ V, el jugador de la columna tiene estrategias correspondientes t+v, t−v (ambas no eliminables). Finalmente, el jugador de la columna tiene tres estrategias adicionales: t1 0 (ineliminable), t2 0 y t1. La función de utilidad para el jugador de la fila se da de la siguiente manera: • ur(s1 +v, tv) = 0 para todo v ∈ V ; • ur(s2 +v, tv) = 1 para todo v ∈ V ; • ur(s1 −v, tv) = 1 para todo v ∈ V ; • ur(s2 −v, tv) = 0 para todo v ∈ V ; • ur(s1 +v, t1) = 1 para todo v ∈ V ; • ur(s2 +v, t1) = 0 para todo v ∈ V ; • ur(s1 −v, t1) = 0 para todo v ∈ V ; • ur(s2 −v, t1) = 1 para todo v ∈ V ; • ur(sb +v, t+v) = 1 para todo v ∈ V y b ∈ {1, 2}; • ur(sb −v, t−v) = 1 para todo v ∈ V y b ∈ {1, 2}; • ur(sl, t) = 0 de lo contrario para todo l ∈ L y t ∈ S2; • ur(s1 0, tc) = 0 para todo c ∈ C; • ur(s2 0, tc) = 1 para todo c ∈ C; • ur(sb 0, t1 0) = 1 para todo b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 de lo contrario para todo b ∈ {1, 2} y t ∈ S2; • ur(sb c, t) = 0 de lo contrario para todo c ∈ C y b ∈ {1, 2}; y la utilidad del jugador de la fila es 0 en todos los demás casos. La función de utilidad para el jugador de la columna se da de la siguiente manera: • uc(s, tv) = 0 para todo v ∈ V y s ∈ S1; • uc(s, t1) = 0 para todo s ∈ S1; • uc(s2 l , tc) = 1 para todo c ∈ C y l ∈ L donde l ∈ c (literal l ocurre en la cláusula c); • uc(s2 l2 , tc,l1 ) = 1 para todo c ∈ C y l1, l2 ∈ L, l1 = l2 donde l2 ∈ c; • uc(s1 c, tc) = 1 para todo c ∈ C; • uc(s2 c, tc) = 0 para todo c ∈ C; • uc(sb c, tc,l) = 1 para todo c ∈ C, l ∈ L, y b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 en otro caso para todo c ∈ C y l ∈ L; y la utilidad del jugador de la columna es 0 en todos los demás casos. Ahora demostramos que las dos instancias son equivalentes. Primero, supongamos que hay una solución para la instancia de satisfactibilidad: es decir, una asignación de valores de verdad a las variables en V tal que todas las cláusulas se satisfacen. Entonces, considera la siguiente secuencia de eliminaciones en nuestro juego: 1. Para cada variable v que se establezca como verdadera en la asignación, elimine tv (lo que da como resultado una utilidad de 0 para el jugador de la columna en todas partes). 2. Entonces, para cada variable v que se establezca como verdadera en la asignación, elimine s2 +v usando s1 +v (lo cual es posible porque tv ha sido eliminado, y porque t1 no ha sido eliminado (aún)). 3. Ahora elimina t1 (lo cual da como resultado una utilidad de 0 para el jugador de la columna). 4. A continuación, para cada variable v que se establezca como falso en la asignación, elimine s2 −v usando s1 −v (lo cual es posible porque t1 ha sido eliminado, y porque tv no ha sido eliminado (aún)). 5. Para cada cláusula c que tenga la variable correspondiente a uno de sus literales positivos l = +v establecido como verdadero en la asignación, elimine tc utilizando tc,l (lo cual es posible porque s2 l ha sido eliminado, y s2 c no ha sido eliminado (aún)). 6. Para cada cláusula c en la que la variable correspondiente a uno de sus literales negativos l = −v se establece en falso en la asignación, elimine tc utilizando tc,l 91 (lo cual es posible porque s2 l ha sido eliminado, y s2 c no ha sido eliminado (aún)). 7. Debido a que la tarea cumplió con la fórmula, todos los tc han sido eliminados ahora. Por lo tanto, podemos eliminar s2 0 = σ∗ r usando s1 0. Se deduce que hay una solución para la instancia IWD-STRATEGY-ELIMINATION. Ahora supongamos que hay una solución para la instancia IWD-STRATEGYELIMINATION. Por el Lema 1, podemos asumir que todas las dominancias son por estrategias puras. Primero observamos que solo s1 0 puede eliminar s2 0 = σ∗ r, porque es la única otra estrategia que le da al jugador de la fila una utilidad de 1 contra t1 0, y t1 0 es ineliminable. Sin embargo, dado que s2 0 tiene un mejor rendimiento que s1 0 contra las estrategias de tc, se deduce que todas las estrategias de tc deben ser eliminadas. Para cada c ∈ C, la estrategia tc solo puede ser eliminada por una de las estrategias tc,l (con el mismo c), ya que estas son las únicas otras estrategias que le dan al jugador de la columna una utilidad de 1 contra s1 c, y s1 c es ineliminable. Pero, para que algún tc,l elimine tc, primero se debe eliminar s2 l. Solo s1 l puede eliminar s2 l, porque es la única otra estrategia que le otorga al jugador de la fila una utilidad de 1 contra tl, y tl es ineliminable. A continuación mostramos que para cada v ∈ V solo se puede eliminar uno de s2 +v, s2 −v. Esto se debe a que para que s1 +v elimine s2 +v, tv debe haber sido eliminado y t1, no (por lo tanto, tv debe ser eliminado antes que t1); pero para que s1 -v elimine s2 -v, t1 debe haber sido eliminado y tv, no (por lo tanto, t1 debe ser eliminado antes que tv). Por lo tanto, establezca v en verdadero si s2 + v es eliminado, y en falso de lo contrario. Debido a lo anterior, para cada cláusula c, uno de los s2 con l ∈ c debe ser eliminado, por lo que se deduce que esta es una asignación satisfactoria para la instancia de satisfactibilidad. Usando el Teorema 1, ahora es (relativamente) fácil demostrar que IWD-UNIQUE-SOLUTION también es NP-completo bajo las mismas restricciones. Teorema 2. IWD-UNIQUE-SOLUTION es NP-completo, incluso con 2 jugadores, y con 0 y 1 siendo las únicas utilidades que ocurren en la matriz, ya sea que se permita o no la dominancia por estrategias mixtas. Prueba. Nuevamente, el problema está en NP porque podemos elegir de manera no determinista la secuencia de eliminaciones y verificar si es correcta. Para demostrar la NP-dificultad, reducimos una instancia arbitraria de IWD-STRATEGY-ELIMINATION a la siguiente instancia de IWD-UNIQUE-SOLUTION. Que todas las estrategias de cada jugador de la instancia original formen parte de la nueva instancia, y que las utilidades resultantes de los jugadores al jugar un par de estas estrategias sean las mismas. Añadimos tres estrategias adicionales σ1 r , σ2 r , σ3 r para el jugador de fila, y tres estrategias adicionales σ1 c , σ2 c , σ3 c para el jugador de columna. Que las utilidades adicionales sean las siguientes: • ur(σr, σj c) = 1 para todo σr /∈ {σ1 r , σ2 r , σ3 r } y j ∈ {2, 3}; • ur(σi r, σc) = 1 para todo i ∈ {1, 2, 3} y σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 para todo i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • y la utilidad de los jugadores de fila es 0 en todos los demás casos que involucren una nueva estrategia. • uc(σ3 r , σc) = 1 para todo σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 para todo j ∈ {2, 3} (σ∗ r es la estrategia a ser eliminada en la instancia original); • uc(σi r, σ1 c ) = 1 para todo i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • y la utilidad de los jugadores de columna es 0 en todos los demás casos que involucren una nueva estrategia. Procedemos a demostrar que las dos instancias son equivalentes. Primero supongamos que existe una solución para la instancia original de IWDSTRATEGY-ELIMINATION. Luego, realiza la misma secuencia de eliminaciones para eliminar σ∗ r en la nueva instancia IWD-UNIQUE-SOLUTION. (Esto es posible porque en cualquier etapa, cualquier dominancia débil para el jugador de fila en la instancia original sigue siendo una dominancia débil en la nueva instancia, ya que las utilidades de las dos estrategias para el jugador de fila son las mismas cuando el jugador de columna juega una de las nuevas estrategias; y lo mismo ocurre para el jugador de columna). Una vez que σ∗ r sea eliminado, permita que σ1 c elimine a σ2 c. (Se desempeña mejor contra σ2 r.) Entonces, dejemos que σ1 r elimine todas las demás estrategias restantes para el jugador de la fila. (Siempre tiene un mejor desempeño contra σ1 c o σ3 c.) Finalmente, σ1 c es la mejor respuesta única contra σ1 r entre las estrategias restantes de los jugadores de columna, así que permitamos que elimine todas las demás estrategias restantes para el jugador de columna. Por lo tanto, existe una solución para la instancia IWD-UNIQUE-SOLUTION. Ahora supongamos que existe una solución para la instancia IWD-UNIQUESOLUTION. Por el Lema 1, podemos asumir que todas las dominancias son por estrategias puras. Mostraremos que ninguna de las nuevas estrategias (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) puede eliminar a otra estrategia, ni ser eliminada antes de que σ∗ r sea eliminada. Por lo tanto, debe haber una secuencia de eliminaciones que termine con la eliminación de σ∗ r, la cual no involucre ninguna de las nuevas estrategias y, por lo tanto, sea una secuencia válida de eliminaciones en el juego original (porque todas las estrategias originales tienen el mismo rendimiento contra cada nueva estrategia). Ahora demostramos que esto es cierto agotando todas las posibilidades para la primera eliminación antes de que se elimine σ∗ r que implica una nueva estrategia. Ninguno de los σi r puede ser eliminado por un σr /∈ {σ1 r , σ2 r , σ3 r}, porque los σi r tienen un mejor desempeño contra σ1 c. σ1 r no puede eliminar ninguna otra estrategia, porque siempre tiene un desempeño inferior contra σ2 c. σ2 r y σ3 r son equivalentes desde la perspectiva de los jugadores de fila (y por lo tanto no pueden eliminarse entre sí), y no pueden eliminar ninguna otra estrategia porque siempre tienen un desempeño inferior contra σ3 c. Ninguno de los σj c puede ser eliminado por un σc /∈ {σ1 c , σ2 c , σ3 c}, porque los σj c siempre tienen un mejor desempeño contra σ1 r o σ2 r. σ1 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ∗ r o σ3 r. σ2 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ2 r o σ3 r. σ3 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ1 r o σ3 r. Por lo tanto, existe una solución para la instancia IWDSTRATEGY-ELIMINATION. Una versión ligeramente más débil de la parte del Teorema 2 que concierne la dominancia solo por estrategias puras es el resultado principal de Gilboa et al. [7]. (Además de no demostrar el resultado para la dominancia por estrategias mixtas, el resultado original era más débil porque requería utilidades {0, 1, 2, 3, 4, 5, 6, 7, 8} en lugar de solo {0, 1} (y debido a esto, nuestro Lema 1 no se puede aplicar para obtener el resultado para estrategias mixtas).) 5. DOMINANCIA (ITERADA) USANDO ESTRATEGIAS MIXTAS CON SOPORTES PEQUEÑOS Al demostrar que una estrategia es dominada por una estrategia mixta, hay varias razones para preferir exhibir una estrategia dominante que coloque probabilidad positiva en la menor cantidad posible de estrategias puras. Primero, esto reducirá el número de bits necesarios para especificar la estrategia dominante (y así la prueba de dominancia se puede comunicar más rápido): si la estrategia mixta dominante coloca probabilidad positiva en solo k estrategias, entonces se puede especificar usando k números reales para las probabilidades, más k log m (donde m es el número de estrategias para el jugador en consideración) bits para indicar qué estrategias se utilizan. Segundo, la prueba de dominancia será más clara: para una estrategia mixta dominante, es típicamente (siempre en el caso de dominancia estricta) posible distribuir parte de la probabilidad en cualquier estrategia pura no utilizada y aún así tener una estrategia dominante, pero esto oscurece cuáles estrategias puras son las clave para hacer que la estrategia mixta sea dominante. Tercero, debido a que el argumento para eliminar la estrategia dominada es más simple y fácil de entender, es más probable que sea aceptado. En cuarto lugar, el nivel de neutralidad al riesgo requerido para que el argumento funcione se reduce, al menos en el caso extremo donde se puede exhibir la dominancia de una única estrategia pura (no se requiere neutralidad al riesgo aquí). Esto motiva el siguiente problema. Definición 4 (CONJUNTO DOMINANTE MÍNIMO). Se nos dan las utilidades de los jugadores de fila de un juego en forma normal, una estrategia distinguida σ∗ para el jugador de fila, una especificación de si la dominancia debe ser estricta o débil, y un número k. Se nos pregunta si existe una estrategia mixta σ para el jugador de fila que coloque probabilidad positiva en como máximo k estrategias puras, y domine a σ∗ en el sentido requerido. Lamentablemente, este problema es NP-completo. Teorema 3. El problema del CONJUNTO DOMINANTE MÍNIMO es NP-completo, tanto para dominancia estricta como para dominancia débil. Prueba. El problema está en NP porque podemos elegir de manera no determinista un conjunto de a lo sumo k estrategias para dar probabilidad positiva, y decidir si podemos dominar a σ∗ con estas k estrategias como se describe en la Proposición 1. Para demostrar la NP-dificultad, reducimos una instancia arbitraria de COBERTURA-DE-CONJUNTOS (dado un conjunto S, subconjuntos S1, S2, . . . , Sr, y un número t, ¿puede S ser cubierto por a lo sumo t de los subconjuntos?) a la siguiente instancia de CONJUNTO-DOMINANTE-MÍNIMO. Para cada elemento s ∈ S, hay una estrategia pura σs para el jugador de la columna. Para cada subconjunto Si, hay una estrategia pura σSi para el jugador de la fila. Finalmente, está la distinguida estrategia pura σ∗ para el jugador de la fila. Las utilidades de los jugadores de la fila son las siguientes: ur(σSi , σs) = t + 1 si s ∈ Si; ur(σSi , σs) = 0 si s /∈ Si; ur(σ∗ , σs) = 1 para todo s ∈ S. Finalmente, dejamos que k = t. Ahora procedemos a demostrar que las dos instancias son equivalentes. Primero supongamos que existe una solución para la instancia de COBERTURA-CONJUNTO. Sin pérdida de generalidad, podemos asumir que hay exactamente k subconjuntos en la cobertura. Entonces, para cada Si que esté en la cobertura, dejemos que la estrategia dominante σ coloque exactamente 1 k de probabilidad en la estrategia pura correspondiente σSi. Ahora, si dejamos que n(s) sea el número de subconjuntos en la cobertura que contienen a s (observamos que n(s) ≥ 1), entonces para cada estrategia σs del jugador de la columna, la utilidad esperada de los jugadores de la fila al jugar σ cuando el jugador de la columna está jugando σs es u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs). Entonces, σ domina estrictamente (y por lo tanto también débilmente) a σ∗, y existe una solución para la instancia del conjunto de dominación mínimo. Ahora supongamos que existe una solución para la instancia de CONJUNTO-DOMINANTE-MÍNIMO. Considera las estrategias puras (a lo sumo k) de la forma σSi en las que la estrategia mixta dominante σ asigna probabilidad positiva, y deja que T sea la colección de los subconjuntos correspondientes Si. Sostenemos que T es una cubierta. Supongamos que hay algún s ∈ S que no está en ninguno de los subconjuntos en T. Entonces, si el jugador de la columna juega σs, el jugador de la fila (cuando juega σ) siempre recibirá una utilidad de 0, en contraposición a la utilidad de 1 que el jugador de la fila recibiría al jugar σ∗, contradiciendo el hecho de que σ domina a σ∗ (ya sea esta dominancia débil o estricta). Se deduce que existe una solución para la instancia de COBERTURA-DE-CONJUNTOS. Por otro lado, si requerimos que la estrategia dominante solo coloque probabilidad positiva en un número muy pequeño de estrategias puras, entonces una vez más resulta fácil verificar si una estrategia está dominada. Específicamente, para determinar si la estrategia σ∗ del jugador está dominada por una estrategia que coloca probabilidad positiva solo en k estrategias puras, simplemente podemos verificar, para cada subconjunto de k de las estrategias puras del jugador, si hay una estrategia que coloca probabilidad positiva solo en esas k estrategias y domina a σ∗, utilizando la Proposición 1. Esto solo requiere O(|Σi|k) comprobaciones. Por lo tanto, si k es una constante, esto constituye un algoritmo de tiempo polinómico. Una pregunta natural que surge a continuación es si la dominancia estricta iterada sigue siendo computacionalmente fácil cuando se requiere que las estrategias dominantes coloquen una probabilidad positiva en como máximo k estrategias puras, donde k es una constante pequeña. (Ya hemos demostrado en la Sección 4 que la dominancia débil iterada es difícil incluso cuando k = 1, es decir, solo se permite la dominancia por estrategias puras). Por supuesto, si la dominancia estricta iterada fuera independiente del camino bajo esta restricción, la facilidad computacional seguiría como lo hizo en la Sección 4. Sin embargo, resulta que esto no es así. Observación 1. Si restringimos las estrategias dominantes para asignar probabilidad positiva a lo sumo a dos estrategias puras, la dominancia estricta iterada se vuelve dependiente del camino. Prueba. Considera el siguiente juego: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Sea (i, j) el resultado en el que el jugador de la fila juega en la fila i y el jugador de la columna juega en la columna j. Dado que (1, 1), (2, 2) y (4, 3) son todos equilibrios de Nash, ninguna de las estrategias puras de los jugadores de columna será eliminada, al igual que las filas 1, 2 y 4. Ahora observamos que la aleatorización uniforme entre las filas 1 y 2 domina a la fila 3, y la aleatorización uniforme entre las filas 3 y 4 domina a la fila 5. Sin embargo, si eliminamos la fila 3 primero, se vuelve imposible dominar la fila 5 sin aleatorizar al menos 3 estrategias puras. De hecho, la dominancia estricta iterada resulta ser difícil incluso cuando k = 3. Teorema 4. Si restringimos las estrategias dominantes para colocar una probabilidad positiva en como máximo tres estrategias puras, se vuelve NP-completo decidir si una estrategia dada puede ser eliminada usando dominancia estricta iterada. 93 Prueba. El problema está en NP porque, dado una secuencia de estrategias a ser eliminadas, podemos verificar en tiempo polinómico si esta es una secuencia válida de eliminaciones (para cualquier estrategia a ser eliminada, podemos verificar, para cada subconjunto de tres otras estrategias, si hay una estrategia que coloca probabilidad positiva solo en estas tres estrategias que domina a la estrategia a ser eliminada, utilizando la Proposición 1). Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto no vacío de cláusulas C sobre un conjunto no vacío de variables V, con literales correspondientes L = {+v : v ∈ V} ∪ {−v : v ∈ V}) al siguiente juego de dos jugadores. Para cada variable v ∈ V, el jugador de la fila tiene estrategias s+v, s−v, s1 v, s2 v, s3 v, s4 v, y el jugador de la columna tiene estrategias t1 v, t2 v, t3 v, t4 v. Para cada cláusula c ∈ C, el jugador de la fila tiene una estrategia sc, y el jugador de la columna tiene una estrategia tc, así como, para cada literal l que ocurre en c, una estrategia adicional tl c. El jugador de la fila tiene dos estrategias adicionales s1 y s2. (s2 es la estrategia que estamos buscando eliminar). Finalmente, el jugador de la columna tiene una estrategia adicional t1. La función de utilidad para el jugador de la fila se da de la siguiente manera (donde ε es algún número suficientemente pequeño): • ur(s+v, tj v) = 4 si j ∈ {1, 2}, para todo v ∈ V; • ur(s+v, tj v) = 1 si j ∈ {3, 4}, para todo v ∈ V; • ur(s−v, tj v) = 1 si j ∈ {1, 2}, para todo v ∈ V; • ur(s−v, tj v) = 4 si j ∈ {3, 4}, para todo v ∈ V; • ur(s+v, t) = ur(s−v, t) = 0 para todo v ∈ V y t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 para todo v ∈ V e i ∈ {1, 2, 3, 4}; • ur(si v, t) = para todo v ∈ V, i ∈ {1, 2, 3, 4}, y t = ti v; • ur(sc, tc) = 2 para todo c ∈ C; • ur(sc, t) = 0 para todo c ∈ C y t = tc; • ur(s1, t1) = 1 + ε; • ur(s1, t) = para todo t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 para todo c ∈ C; • ur(s2, t) = 0 para todo t /∈ {t1} ∪ {tc : c ∈ C}. La función de utilidad para el jugador de la columna se da de la siguiente manera: • uc(si v, ti v) = 1 para todo v ∈ V e i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 para todo v ∈ V, i ∈ {1, 2, 3, 4}, y s = si v; • uc(sc, tc) = 1 para todo c ∈ C; • uc(sl, tc) = 1 para todo c ∈ C y l ∈ L que ocurre en c; • uc(s, tc) = 0 para todo c ∈ C y s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + para todo c ∈ C; • uc(sl, tl c) = 1 + para todo c ∈ C y l = l que ocurre en c; • uc(s, tl c) = para todo c ∈ C y s /∈ {sc} ∪ {sl : l ∈ c, l = l}; • uc(s2, t1) = 1; • uc(s, t1) = 0 para todo s = s2. Ahora demostramos que las dos instancias son equivalentes. Primero, supongamos que hay una solución para la instancia de satisfactibilidad. Entonces, considera la siguiente secuencia de eliminaciones en nuestro juego: 1. Para cada variable v que se establezca como verdadera en la asignación satisfactoria, elimine s+v con la estrategia mixta σr que coloca probabilidad 1/3 en s−v, probabilidad 1/3 en s1 v y probabilidad 1/3 en s2 v. (La utilidad esperada de jugar σr contra t1 v o t2 v es 14/3 > 4; contra t3 v o t4 v, es 4/3 > 1; y contra cualquier otra cosa es 2/3 > 0. Por lo tanto, la dominancia es válida. De manera similar, para cada variable v que se establezca como falso en la asignación satisfactoria, elimine s−v con la estrategia mixta σr que coloca probabilidad 1/3 en s+v, probabilidad 1/3 en s3 v, y probabilidad 1/3 en s4 v. (La utilidad esperada de jugar σr contra t1 v o t2 v es 4/3 > 1; contra t3 v o t4 v, es 14/3 > 4; y contra cualquier otra cosa es 2/3 > 0. Por lo tanto, la dominancia es válida. Para cada c ∈ C, elimine tc con cualquier tl c para el cual l se haya establecido como verdadero en la asignación satisfactoria. (Esta es una dominancia válida porque tl c funciona mejor que tc contra cualquier estrategia que no sea sl, y eliminamos sl en el paso 1 o en el paso 2.) 4. Finalmente, elimina s2 con s1. (Esta es una dominancia válida porque s1 tiene un mejor rendimiento que s2 contra cualquier estrategia que no esté en {tc : c ∈ C}, la cual eliminamos en el paso 3.) Por lo tanto, hay un camino de eliminación que elimina s2. Ahora, supongamos que hay un camino de eliminación que elimina s2. La estrategia que eventualmente domina a s2 debe colocar la mayor parte de su probabilidad en s1, ya que s1 es la única otra estrategia que se desempeña bien contra t1, la cual no puede ser eliminada antes que s2. Sin embargo, s1 tiene un rendimiento significativamente peor que s2 contra cualquier estrategia tc con c ∈ C, por lo que se deduce que todas estas estrategias deben ser eliminadas primero. Cada estrategia tc solo puede ser eliminada por una estrategia que coloque la mayor parte de su peso en las estrategias correspondientes tl c con l ∈ c, ya que son las únicas otras estrategias que funcionan bien contra sc, las cuales no pueden ser eliminadas antes de tc. Sin embargo, cada estrategia tl c funciona significativamente peor que tc contra sl, por lo que se deduce que para cada cláusula c, para uno de los literales l que aparecen en ella, sl debe ser eliminado primero. Ahora, las estrategias de la forma tj v nunca serán eliminadas porque son las únicas mejores respuestas a las estrategias correspondientes sj v (que, a su vez, son las mejores respuestas a las tj v correspondientes). Como resultado, si la estrategia s+v (respectivamente, s−v) es eliminada, entonces su estrategia opuesta s−v (respectivamente, s+v) ya no puede ser eliminada, por la siguiente razón. No hay otra estrategia pura restante que obtenga una utilidad significativa contra más de una de las estrategias t1 v, t2 v, t3 v, t4 v, pero s−v (respectivamente, s+v) obtiene una utilidad significativa contra las 4, y por lo tanto no puede ser dominada por una estrategia mixta que coloque una probabilidad positiva en como máximo 3 estrategias. Se deduce que para cada v ∈ V, a lo sumo una de las estrategias s+v, s−v es eliminada, de tal manera que para cada cláusula c, para uno de los literales l que aparece en ella, sl debe ser eliminada. Pero luego, establecer todas las literales l de manera que sl sea eliminado a verdadero constituye una solución a la instancia de satisfactibilidad. En la siguiente sección, regresamos al escenario donde no hay restricción en el número de estrategias puras en las que una estrategia mixta dominante puede colocar probabilidad positiva. 6. DOMINANCIA (ITERADA) EN JUEGOS BAYESIANOS Hasta ahora, nos hemos enfocado en juegos de forma normal que están representados de manera plana (es decir, cada entrada de la matriz se da explícitamente). Sin embargo, para muchos juegos, la representación plana es demasiado grande para escribirse explícitamente, y en su lugar, se necesita utilizar alguna representación que aproveche la estructura del juego. Los juegos bayesianos, además de ser de interés por sí mismos, pueden considerarse como una representación estructurada útil de los juegos en forma normal, y los estudiaremos en esta sección. En un juego bayesiano, cada jugador recibe primero información de preferencia de manera privada (el tipo de jugador) de una distribución, la cual determina la utilidad que ese jugador recibe por cada resultado del juego (es decir, el vector de acciones jugadas en el juego). Después de recibir este tipo, el jugador realiza una acción basada en él. Definición 7. Un juego bayesiano está dado por un conjunto de jugadores {1, 2, . . . , n}; y, para cada jugador i, un conjunto (finito) de acciones Ai, un espacio de tipos (finito) Θi con una distribución de probabilidad πi sobre él, y una función de utilidad ui : Θi × A1 × A2 × . . . × An → R (donde ui(θi, a1, a2, . . . , an) denota la utilidad del jugador i cuando su tipo es θi y cada jugador j juega la acción aj). Una estrategia pura en un juego bayesiano es una asignación de tipos a acciones, σi: Θi → Ai, donde σi(θi) denota la acción que el jugador i elige para el tipo θi. Cualquier vector de estrategias puras en un juego bayesiano define una utilidad (esperada) para cada jugador, y por lo tanto podemos traducir un juego bayesiano en un juego en forma normal. En este juego en forma normal, las nociones de dominancia y dominancia iterada se definen como antes. Sin embargo, la representación en forma normal del juego es exponencialmente más grande que la representación bayesiana, ya que cada jugador i tiene |Ai||Θi| estrategias puras distintas. Por lo tanto, cualquier algoritmo para juegos bayesianos que dependa de expandir el juego a su forma normal requerirá tiempo exponencial. Específicamente, nuestros resultados de facilidad para juegos en forma normal no se transfieren directamente a esta configuración. De hecho, resulta que verificar si una estrategia está dominada por una estrategia pura es difícil en juegos bayesianos. Teorema 5. En un juego bayesiano, es NP-completo decidir si una estrategia pura dada σr : Θr → Ar está dominada por alguna otra estrategia pura (tanto para la dominancia estricta como débil), incluso cuando la distribución de los jugadores de fila sobre los tipos es uniforme. Prueba. El problema está en NP porque es fácil verificar si una estrategia dominante candidata es realmente una estrategia dominante. Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto de cláusulas C utilizando variables de V) al siguiente juego bayesiano. Que el conjunto de acciones de los jugadores de la fila sea Ar = {t, f, 0} y que el conjunto de acciones de los jugadores de la columna sea Ac = {ac : c ∈ C}. Que el conjunto de tipos de jugadores de fila sea Θr = {θv : v ∈ V}, con una distribución πr que es uniforme. Que la función de utilidad de los jugadores de la fila sea la siguiente: • ur(θv, 0, ac) = 0 para todo v ∈ V y c ∈ C; • ur(θv, b, ac) = |V | para todo v ∈ V, c ∈ C y b ∈ {t, f} tal que establecer v como b satisface c; • ur(θv, b, ac) = −1 para todo v ∈ V, c ∈ C y b ∈ {t, f} tal que establecer v como b no satisface c. En general, un jugador también puede recibir una señal sobre las preferencias de los otros jugadores, pero aquí no nos ocuparemos de eso. Que la estrategia pura que se va a dominar sea aquella que juega 0 para cada tipo. Mostramos que la estrategia está dominada por una estrategia pura si y solo si hay una solución a la instancia de satisfactibilidad. Primero, supongamos que hay una solución para la instancia de satisfactibilidad. Entonces, sea σd r dado por: σd r (θv) = t si v se establece como verdadero en la solución de la instancia de satisfactibilidad, y σd r (θv) = f en caso contrario. Entonces, en contra de cualquier acción ac realizada por el jugador de la columna, existe al menos un tipo θv tal que o bien +v ∈ c y σd r (θv) = t, o bien −v ∈ c y σd r (θv) = f. Por lo tanto, la utilidad esperada de los jugadores de la fila contra la acción ac es al menos |V| |V| − |V|−1 |V| = 1 |V| > 0. Entonces, σd r es una estrategia dominante. Ahora, supongamos que existe una estrategia pura dominante σd r. Esta estrategia dominante debe jugar t o f al menos para un tipo. Por lo tanto, en contra de cualquier ac por el jugador de la columna, debe haber al menos algún tipo θv para el cual ur(θv, σd r (θv), ac) > 0. Es decir, debe haber al menos una variable v tal que al establecer v en σd r (θv) satisfaga c. Pero entonces, al establecer cada v en σd r (θv) deben satisfacerse todas las cláusulas. Entonces, existe una asignación satisfactoria. Sin embargo, resulta que podemos modificar los programas lineales de la Proposición 1 para obtener un algoritmo de tiempo polinómico para verificar si una estrategia está dominada por una estrategia mixta en juegos bayesianos. Teorema 6. En un juego bayesiano, se puede decidir en tiempo polinómico si una estrategia dada (posiblemente mixta) σr está dominada por alguna otra estrategia mixta, utilizando programación lineal (tanto para dominancia estricta como débil). Prueba. Podemos modificar los programas lineales presentados en la Proposición 1 de la siguiente manera. Para la dominancia estricta, asumiendo nuevamente sin pérdida de generalidad que todas las utilidades en el juego son positivas, utilice el siguiente programa lineal (en el cual pσr r (θr, ar) es la probabilidad de que σr, la estrategia a ser dominada, coloque en ar para el tipo θr): minimizar θr∈Θr ar∈Ar pr(ar) tal que para cualquier ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); para cualquier θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1. Suponiendo que π(θr) > 0 para todo θr ∈ Θr, este programa devolverá un valor objetivo menor que |Θr| si y solo si σr está estrictamente dominado, mediante un razonamiento similar al realizado en la Proposición 1. Para la dominancia débil, utiliza el siguiente programa lineal: maximizar ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) tal que para cualquier ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); para cualquier θr ∈ Θr, ar∈Ar pr(θr, ar) = 1. Este programa devolverá un valor objetivo mayor que 0 si y solo si σr está débilmente dominado, mediante un razonamiento similar al realizado en la Proposición 1. Ahora pasamos al dominio iterado en juegos bayesianos. Ingenuamente, uno podría argumentar que la dominancia iterada en juegos bayesianos de 95 siempre requiere un número exponencial de pasos cuando se puede eliminar una fracción significativa de las estrategias puras de los juegos, ya que hay un número exponencial de estrategias puras. Sin embargo, este no es un argumento muy sólido porque muchas veces podemos eliminar exponencialmente muchas estrategias puras en un solo paso. Por ejemplo, si para algún tipo θr ∈ Θr tenemos, para todo ac ∈ Ac, que u(θr, a1 r, ac) > u(θr, a2 r, ac), entonces cualquier estrategia pura para el jugador de la fila que juega la acción a2 r para el tipo θr está dominada (por la estrategia que juega la acción a1 r para el tipo θr en su lugar) - y hay exponencialmente muchas (|Ar||Θr|−1) tales estrategias. Por lo tanto, es concebible que solo necesitemos un número polinomial de eliminaciones de colecciones de estrategias de un jugador. Sin embargo, el siguiente teorema muestra que este no es el caso, al dar un ejemplo donde se requiere un número exponencial de iteraciones (es decir, alternancias entre los jugadores en la eliminación de estrategias). (Enfatizamos que este no es un resultado sobre complejidad computacional). Teorema 7. Incluso en juegos bayesianos simétricos de 3 jugadores, la dominancia iterada por estrategias puras puede requerir un número exponencial de iteraciones (tanto para la dominancia estricta como débil), incluso con solo tres acciones por jugador. Prueba. Que cada jugador i ∈ {1, 2, 3} tenga n + 1 tipos θ1 i , θ2 i , . . . , θn+1 i. Que cada jugador i tenga 3 acciones ai, bi, ci, y que la función de utilidad de cada jugador esté definida de la siguiente manera. (En lo siguiente, i + 1 e i + 2 son abreviaturas de i + 1 (mod 3) e i + 2 (mod 3) cuando se utilizan como índices de jugador. Además, −∞ puede ser reemplazado por un número suficientemente negativo. Finalmente, δ y deberían elegirse muy pequeños (incluso en comparación con 2−(n+1)), y deberían ser más del doble de grandes que δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 para si+1 = ci+1 o si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − para si+1 = ai+1 y si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ para si+1 = ai+1 o si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ para todos los si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ para todos los si+1, si+2 cuando j > 1; • ui(θj i ; bi, si+1, si+2) = − para todos los si+1, si+2 cuando j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 para todos los si+1 cuando j > 1; • ui(θj i ; ci, si+1, si+2) = δ− para todos los si+1 y si+2 = ci+2 cuando j > 1. Que la distribución sobre los tipos de cada jugador esté dada por p(θj i ) = 2−j (con la excepción de que p(θ2 i ) = 2−2 +2−(n+1) ). Estaremos interesados en eliminar estrategias de la siguiente forma: jugar bi para el tipo θ1 i, y jugar bi o ci de lo contrario. Dado que la función de utilidad es la misma para cualquier tipo θj i con j > 1, estas estrategias están efectivamente definidas por la probabilidad total que asignan a ci,8, que es t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j donde tj i = 1 si el jugador i 8. Observa que las estrategias siguen siendo estrategias puras; la probabilidad asignada a una acción por una estrategia aquí es simplemente la suma de las probabilidades de los tipos para los cuales la estrategia elige esa acción. juega ci para el tipo θj i, y 0 en caso contrario. Esta probabilidad es diferente para cualquier par de estrategias diferentes de la forma dada, y tenemos exponencialmente muchas estrategias diferentes de la forma dada. Para cualquier probabilidad q que pueda expresarse como t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (con todos los tj ∈ {0, 1}), dejemos que σi(q) denote la estrategia (única) de la forma dada para el jugador i que coloca una probabilidad total de q en ci. Cualquier estrategia que juegue ci para el tipo θ1 i o ai para algún tipo θj i con j > 1 puede ser eliminada inmediatamente. Mostraremos que, después de eso, debemos eliminar primero las estrategias σi(q) con q alto, trabajando lentamente hacia abajo hasta aquellas con q más bajo. Reclamo 1: Si σi+1(q) y σi+2(q) aún no han sido eliminados, y q < q, entonces σi(q) aún no puede ser eliminado. Prueba: Primero, demostramos que ninguna estrategia σi(q) puede eliminar a σi(q). Contra σi+1(q), σi+2(q), la utilidad de jugar σi(p) es − + p · δ − p · q /2. Por lo tanto, cuando q = 0, es mejor establecer p lo más alto posible (y observamos que σi+1(0) y σi+2(0) no han sido eliminados), pero cuando q > 0, es mejor establecer p lo más bajo posible porque δ < q /2. Por lo tanto, ya sea que q > q o q < q, σi(q) siempre será estrictamente mejor que σi(q) contra algunas estrategias restantes de los oponentes. Por lo tanto, ninguna estrategia σi(q) puede eliminar a σi(q). Las únicas otras estrategias puras que podrían dominar a σi(q) son estrategias que juegan ai para el tipo θ1 i, y bi o ci para todos los demás tipos. Tomemos tal estrategia y supongamos que juega c con probabilidad p. Contra σi+1(q), σi+2(q) (que aún no han sido eliminadas), la utilidad de jugar esta estrategia es −(q)2 /2 − /2 + p · δ − p · q /2. Por otro lado, jugar σi(q) da como resultado − + q · δ − q · q /2. Dado que q > q, tenemos −(q )2 /2 < −q · q /2, y dado que δ y son pequeños, se deduce que σi(q) recibe una utilidad mayor. Por lo tanto, ninguna estrategia domina a σi(q), lo que demuestra la afirmación. Afirmación 2: Si para todo q > q, σi+1(q) y σi+2(q) han sido eliminados, entonces σi(q) puede ser eliminado. Prueba: Considera la estrategia para el jugador i que juega ai para el tipo θ1 i, y bi para todos los demás tipos (llamemos a esta estrategia σi); afirmamos que σi domina a σi(q). Primero, si alguno de los otros jugadores k juega ak para θ1 k, entonces σi se desempeña mejor que σi(q) (que recibe −∞ en algunos casos). Dado que las estrategias para el jugador k que juega ck para el tipo θ1 k, o ak para algún tipo θj k con j > 1, ya han sido eliminadas, todo lo que queda por comprobar es que σi sea mejor que σi(q) siempre que los otros dos jugadores jueguen estrategias de la siguiente forma: jugar bk para el tipo θ1 k, y jugar uno de bk o ck en caso contrario. Observamos que entre estas estrategias, no queda ninguna que coloque una probabilidad mayor que q en ck. Si dejamos que qk denote la probabilidad con la que el jugador k juega ck, la utilidad esperada de jugar σi es −qi+1 · qi+2/2 − /2. Por otro lado, la utilidad de jugar σi(q) es − + q · δ − q · qi+2/2. Dado que qi+1 ≤ q, la diferencia entre estas dos expresiones es al menos /2 − δ, la cual es positiva. Se deduce que σi domina a σi(q). A partir de la Reclamación 2, se deduce que todas las estrategias de la forma σi(q) serán eliminadas eventualmente. Sin embargo, la Reclamación 1 muestra que no podemos avanzar y eliminar múltiples estrategias de este tipo para un jugador, a menos que al menos otro jugador mantenga simultáneamente las estrategias eliminadas: cada vez que se elimina un σi(q) tal que σi+1(q) y σi+2(q) aún no han sido eliminados, necesitamos eliminar una de las dos últimas estrategias antes de que se pueda eliminar cualquier σi(q) con q > q, es decir, necesitamos alternar entre jugadores. Dado que hay exponencialmente muchas estrategias de la forma σi(q), se sigue que la eliminación iterada requerirá exponencialmente muchas iteraciones para completarse. Por lo tanto, un algoritmo eficiente para la dominancia iterada (estricta o débil) por estrategias puras en juegos bayesianos, si existe, debe ser capaz de realizar (al menos parte de) muchas iteraciones en un solo paso del algoritmo (porque si cada paso solo realizara una sola iteración, necesitaríamos exponencialmente muchos pasos). Interesantemente, Knuth et al. [11] argumentan que la dominancia iterada parece ser un problema inherentemente secuencial (a la luz de su resultado de que la dominancia muy débil iterada es P-completa, es decir, aparentemente no paralelizable de manera eficiente), lo que sugiere que la agregación de muchas iteraciones puede ser difícil. 7. CONCLUSIONES Aunque el concepto de equilibrio de Nash se estudia cada vez más intensamente en nuestra comunidad, el concepto quizás más elemental de dominancia (iterada) ha recibido mucha menos atención. En este artículo estudiamos varios aspectos computacionales de este concepto. Primero estudiamos tanto la dominancia estricta como la débil (no iterada), y demostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta puede hacerse en tiempo polinómico utilizando la resolución de un único programa lineal. Luego pasamos a la dominancia iterada. Mostramos que determinar si existe algún camino que elimine una estrategia dada es NP-completo con dominancia débil iterada. Esto nos permitió también demostrar que determinar si existe un camino que conduzca a una solución única es NP-completo. Ambos resultados se mantienen tanto con como sin dominancia de estrategias mixtas. (Una versión más débil del segundo resultado (solo sin dominancia de estrategias mixtas) ya se conocía [7].) La dominancia estricta iterada, por otro lado, es independiente del camino (tanto con como sin dominancia por estrategias mixtas) y, por lo tanto, puede realizarse en tiempo polinómico. Luego estudiamos qué sucede cuando la estrategia dominante puede asignar una probabilidad positiva solo a unas pocas estrategias puras. Primero, demostramos que encontrar la estrategia dominante con el tamaño de soporte mínimo es NP-completo (tanto para dominancia estricta como débil). Luego, demostramos que la dominancia estricta iterada se vuelve dependiente del camino cuando hay un límite en el tamaño del soporte de las estrategias dominantes, y que decidir si una estrategia dada puede ser eliminada por dominancia estricta iterada bajo esta restricción es NP-completo (incluso cuando el límite en el tamaño del soporte es 3). Finalmente, estudiamos la dominancia y la dominancia iterada en juegos bayesianos, como un ejemplo de un lenguaje de representación conciso para juegos en forma normal que es interesante por sí mismo. Mostramos que, a diferencia de los juegos en forma normal, decidir si una estrategia pura dada está dominada por otra estrategia pura en un juego bayesiano es NP-completo (tanto con dominancia estricta como débil); sin embargo, decidir si una estrategia está dominada por alguna estrategia mixta aún se puede hacer en tiempo polinómico con la resolución de un único programa lineal (tanto con dominancia estricta como débil). Finalmente, demostramos que la dominancia iterada utilizando estrategias puras puede requerir un número exponencial de iteraciones en un juego bayesiano (tanto con dominancia estricta como débil). Hay varias vías para investigaciones futuras. Primero, está la pregunta abierta de si es posible completar la dominancia iterada en juegos bayesianos en tiempo polinómico (aunque demostramos que a veces se requiere un número exponencial de alternancias entre los jugadores para eliminar estrategias). Segundo, podemos estudiar los aspectos computacionales del dominio (iterado) en representaciones concisas de juegos de forma normal que no sean juegos bayesianos, por ejemplo, en juegos gráficos o juegos de grafo de efecto local/acción. (Ya se ha estudiado cómo realizar eficientemente el dominio muy débil iterado en juegos estocásticos parcialmente observables). Finalmente, podemos preguntarnos si algunos de los algoritmos que describimos (como el de dominancia estricta iterada con estrategias mixtas) pueden ser optimizados para ser más rápidos. 8. REFERENCIAS [1] Krzysztof R. Apt. Pruebas uniformes de independencia del orden para varios procedimientos de eliminación de estrategias. Contribuciones a la Economía Teórica, 4(1), 2004. [2] Nivan A. R. Bhat y Kevin Leyton-Brown. Calculando equilibrios de Nash de juegos de gráficos de acción. En UAI, 2004. [3] Ben Blum, Christian R. Shelton y Daphne Koller. Un método de continuación para equilibrios de Nash en juegos estructurados. En IJCAI, 2003. [4] Vincent Conitzer y Tuomas Sandholm. Resultados de complejidad sobre equilibrios de Nash. En IJCAI, páginas 765-771, 2003. [5] Drew Fudenberg y Jean Tirole. Teoría de juegos. MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, y Eitan Zemel. En el orden de eliminar estrategias dominadas. Cartas de Investigación Operativa, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai y Eitan Zemel. La complejidad de eliminar estrategias dominadas. Matemáticas de la Investigación de Operaciones, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein y Shlomo Zilberstein. Programación dinámica para juegos estocásticos parcialmente observables. En AAAI, páginas 709-715, 2004. [9] Michael Kearns, Michael Littman y Satinder Singh. Modelos gráficos para teoría de juegos. En UAI, 2001. [10] Leonid Khachiyan. Un algoritmo polinómico en programación lineal. Matemática soviética. Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou y John N Tsitsiklis. Una nota sobre la eliminación de estrategias en juegos bimatrix. Cartas de Investigación Operativa, 7(3):103-107, 1988. [12] Kevin Leyton-Brown y Moshe Tennenholtz. Juegos de efecto local. En IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis y Aranyak Mehta. Jugando juegos grandes utilizando estrategias simples. En ACM-EC, páginas 36-41, 2003. [14] Michael Littman y Peter Stone. Un algoritmo de equilibrio de Nash de tiempo polinómico para juegos repetidos. En ACM-EC, páginas 48-54, 2003. [15] Leslie M. Marx y Jeroen M. Swinkels. Independencia del orden para la dominancia débil iterada. Juegos y Comportamiento Económico, 18:219-245, 1997. [16] Leslie M. Marx y Jeroen M. Swinkels. Corrección, independencia del orden para la dominancia débil iterada. Juegos y Comportamiento Económico, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston y Jerry R. Green. Teoría microeconómica. Oxford University Press, 1995. [18] Roger Myerson.\nEditorial de la Universidad de Oxford, 1995. [18] Roger Myerson. Teoría de juegos: Análisis de conflictos. Harvard University Press, Cambridge, 1991. [19] Martin J Osborne y Ariel Rubinstein. Un curso de Teoría de Juegos. MIT Press, 1994. [20] Christos Papadimitriou. \n\nMIT Press, 1994. [20] Christos Papadimitriou. Algoritmos, juegos e Internet. En STOC, páginas 749-753, 2001. [21] Ryan Porter, Eugene Nudelman y Yoav Shoham. Métodos de búsqueda simples para encontrar un equilibrio de Nash. En AAAI, páginas 664-669, 2004. 97 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "optimal action": {
            "translated_key": "acción óptima",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Complexity of (Iterated) Dominance∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using dominance and iterated dominance.",
                "We first study both strict and weak dominance (not iterated), and show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then move on to iterated dominance.",
                "We show that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allows us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then study what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we show that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we show that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we study Bayesian games.",
                "We show that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak ∗ This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858, and a Sloan Fellowship. dominance).",
                "Finally, we show that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent systems with self-interested agents, the <br>optimal action</br> for one agent may depend on the actions taken by other agents.",
                "In such settings, the agents require tools from game theory to rationally decide on an action.",
                "Game theory offers various formal models of strategic settings-the best-known of which is a game in normal (or matrix) form, specifying a utility (payoff) for each agent for each combination of strategies that the agents choose-as well as solution concepts, which, given a game, specify which outcomes are reasonable (under various assumptions of rationality and common knowledge).",
                "Probably the best-known (and certainly the most-studied) solution concept is that of Nash equilibrium.",
                "A Nash equilibrium specifies a strategy for each player, in such a way that no player has an incentive to (unilaterally) deviate from the prescribed strategy.",
                "Recently, numerous papers have studied computing Nash equilibria in various settings [9, 4, 12, 3, 13, 14], and the complexity of constructing a Nash equilibrium in normal form games has been labeled one of the two most important open problems on the boundary of P today [20].",
                "The problem of computing solutions according to the perhaps more elementary solution concepts of dominance and iterated dominance has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the game theory community [7].1 ) A strategy strictly dominates another strategy if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one.",
                "The idea is that dominated strategies can be eliminated from consideration.",
                "In iterated dominance, the elimination proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating strategy no longer needs to perform better than or as well as the dominated strategy against opponent strategies that were eliminated in earlier rounds.",
                "Computing solutions according to (iterated) dominance is important for at least the following reasons: 1) it can be computationally easier than computing (for instance) a Nash equilibrium (and therefore it can be useful as a preprocessing step in computing a Nash equilibrium), and 2) (iterated) dominance requires a weaker rationality assumption on the players than (for instance) Nash equilibrium, and therefore solutions derived according to it are more likely to occur.",
                "In this paper, we study some fundamental computational questions concerning dominance and iterated dominance, including how hard it is to check whether a given strategy can be eliminated by each of the variants of these notions.",
                "The rest of the paper is organized as follows.",
                "In Section 2, we briefly review definitions and basic properties of normal form games, strict and weak dominance, and iterated strict and weak dominance.",
                "In the remaining sections, we study computational aspects of dominance and iterated dominance.",
                "In Section 3, we study one-shot (not iterated) dominance.",
                "In Section 4, we study iterated dominance.",
                "In Section 5, we study dominance and iterated dominance when the dominating strategy can only place probability on a few pure strategies.",
                "Finally, in Section 6, we study dominance and iterated dominance in Bayesian games. 2.",
                "DEFINITIONS AND BASIC PROPERTIES In this section, we briefly review normal form games, as well as dominance and iterated dominance (both strict and weak).",
                "An n-player normal form game is defined as follows.",
                "Definition 1.",
                "A normal form game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of pure strategies Σi and a utility function ui : Σ1 × Σ2 × . . . × Σn → R (where ui(σ1, σ2, . . . , σn) denotes player is utility when each player j plays action σj).",
                "The two main notions of dominance are defined as follows.",
                "Definition 2.",
                "Player is strategy σi is said to be strictly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "Player is strategy σi is said to be weakly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) ≥ ui(σi, σ−i), and for at least one vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "In this definition, it is sometimes allowed for the dominating strategy σi to be a mixed strategy, that is, a probability distribution over pure strategies.",
                "In this case, the utilities in dominance altogether.",
                "For example, simple dominance checks are sometimes used as a subroutine in searching for Nash equilibria [21]. the definition are the expected utilities.2 There are other notions of dominance, such as very weak dominance (in which no strict inequality is required, so two strategies can dominate each other), but we will not study them here.",
                "When we are looking at the dominance relations for player i, the other players (−i) can be thought of as a single player.3 Therefore, in the rest of the paper, when we study one-shot (not iterated) dominance, we will focus without loss of generality on two-player games.4 In two-player games, we will generally refer to the players as r (row) and c (column) rather than 1 and 2.",
                "In iterated dominance, dominated strategies are removed from the game, and no longer have any effect on future dominance relations.",
                "Iterated dominance can eliminate more strategies than dominance, as follows. σr may originally not dominate σr because the latter performs better against σc; but then, once σc is removed because it is dominated by σc, σr dominates σr, and the latter can be removed.",
                "For example, in the following game, R can be removed first, after which D is dominated.",
                "L R U 1, 1 0, 0 D 0, 1 1, 0 Either strict or weak dominance can be used in the definition of iterated dominance.",
                "We note that the process of iterated dominance is never helped by removing a dominated mixed strategy, for the following reason.",
                "If σi gives player i a higher utility than σi against mixed strategy σj for player j = i (and strategies σ−{i,j} for the other players), then for at least one pure strategy σj that σj places positive probability on, σi must perform better than σi against σj (and strategies σ−{i,j} for the other players).",
                "Thus, removing the mixed strategy σj does not introduce any new dominances.",
                "More detailed discussions and examples can be found in standard texts on microeconomics or game theory [17, 5].",
                "We are now ready to move on to the core of this paper. 3.",
                "DOMINANCE (NOT ITERATED) In this section, we study the notion of one-shot (not iterated) dominance.",
                "As a first observation, checking whether a given strategy is strictly (weakly) dominated by some pure strategy is straightforward, by checking, for every pure strategy for that player, whether the latter strategy performs strictly better against all the opponents strategies (at least as well against all the opponents strategies, and strictly 2 The dominated strategy σi is, of course, also allowed to be mixed, but this has no technical implications for the paper: when we study one-shot dominance, we ask whether a given strategy is dominated, and it does not matter whether the given strategy is pure or mixed; when we study iterated dominance, there is no use in eliminating mixed strategies, as we will see shortly. 3 This player may have a very large strategy space (one pure strategy for every vector of pure strategies for the players that are being replaced).",
                "Nevertheless, this will not result in an increase in our representation size, because the original representation already had to specify utilities for each of these vectors. 4 We note that a restriction to two-player games would not be without loss of generality for iterated dominance.",
                "This is because for iterated dominance, we need to look at the dominated strategies of each individual player, so we cannot merge any players. 89 better against at least one).5 Next, we show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time by solving a single linear program. (Similar linear programs have been given before [18]; we present the result here for completeness, and because we will build on the linear programs given below in Theorem 6.)",
                "Proposition 1.",
                "Given the row players utilities, a subset Dr of the row players pure strategies Σr, and a distinguished strategy σ∗ r for the row player, we can check in time polynomial in the size of the game (by solving a single linear program of polynomial size) whether there exists some mixed strategy σr, that places positive probability only on strategies in Dr and dominates σ∗ r , both for strict and for weak dominance.",
                "Proof.",
                "Let pdr be the probability that σr places on dr ∈ Dr. We will solve a single linear program in each of our algorithms; linear programs can be solved in polynomial time [10].",
                "For strict dominance, the question is whether the pdr can be set so that for every pure strategy for the column player σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc).",
                "Because the inequality must be strict, we cannot solve this directly by linear programming.",
                "We proceed as follows.",
                "Because the game is finite, we may assume without loss of generality that all utilities are positive (if not, simply add a constant to all utilities.)",
                "Solve the following linear program: minimize dr∈Dr pdr such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc).",
                "If σ∗ r is strictly dominated by some mixed strategy, this linear program has a solution with objective value < 1. (The dominating strategy is a feasible solution with objective value exactly 1.",
                "Because no constraint is binding for this solution, we can reduce one of the probabilities slightly without affecting feasibility, thereby obtaining a solution with objective value < 1.)",
                "Moreover, if this linear program has a solution with objective value < 1, there is a mixed strategy strictly dominating σ∗ r , which can be obtained by taking the LP solution and adding the remaining probability to any strategy (because all the utilities are positive, this will add to the left side of any inequality, so all inequalities will become strict).",
                "For weak dominance, we can solve the following linear program: maximize σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1.",
                "If σ∗ r is weakly dominated by some mixed strategy, then that mixed strategy is a feasible solution to this program with objective value > 0, because for at least one strategy σc ∈ Σc we have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0.",
                "On the other hand, if this program has a solution with objective value > 0, then for at least one strategy σc ∈ Σc we 5 Recall that the assumption of a single opponent (that is, the assumption of two players) is without loss of generality for one-shot dominance. must have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, and thus the linear programs solution is a weakly dominating mixed strategy. 4.",
                "ITERATED DOMINANCE We now move on to iterated dominance.",
                "It is well-known that iterated strict dominance is path-independent [6, 19]that is, if we remove dominated strategies until no more dominated strategies remain, in the end the remaining strategies for each player will be the same, regardless of the order in which strategies are removed.",
                "Because of this, to see whether a given strategy can be eliminated by iterated strict dominance, all that needs to be done is to repeatedly remove strategies that are strictly dominated, until no more dominated strategies remain.",
                "Because we can check in polynomial time whether any given strategy is dominated (whether or not dominance by mixed strategies is allowed, as described in Section 3), this whole procedure takes only polynomial time.",
                "In the case of iterated dominance by pure strategies with two players, Knuth et al. [11] slightly improve on (speed up) the straightforward implementation of this procedure by keeping track of, for each ordered pair of strategies for a player, the number of opponent strategies that prevent the first strategy from dominating the second.",
                "Hereby the runtime for an m × n game is reduced from O((m + n)4 ) to O((m + n)3 ). (Actually, they only study very weak dominance (for which no strict inequalities are required), but the approach is easily extended.)",
                "In contrast, iterated weak dominance is known to be pathdependent.6 For example, in the following game, using iterated weak dominance we can eliminate M first, and then D, or R first, and then U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Therefore, while the procedure of removing weakly dominated strategies until no more weakly dominated strategies remain can certainly be executed in polynomial time, which strategies survive in the end depends on the order in which we remove the dominated strategies.",
                "We will investigate two questions for iterated weak dominance: whether a given strategy is eliminated in some path, and whether there is a path to a unique solution (one pure strategy left per player).",
                "We will show that both of these problems are computationally hard.",
                "Definition 3.",
                "Given a game in normal form and a distinguished strategy σ∗ , IWD-STRATEGY-ELIMINATION asks whether there is some path of iterated weak dominance that eliminates σ∗ .",
                "Given a game in normal form, IWDUNIQUE-SOLUTION asks whether there is some path of iterated weak dominance that leads to a unique solution (one strategy left per player).",
                "The following lemma shows a special case of normal form games in which allowing for weak dominance by mixed strategies (in addition to weak dominance by pure strategies) does 6 There is, however, a restriction of weak dominance called nice weak dominance which is path-independent [15, 16].",
                "For an overview of path-independence results, see Apt [1]. 90 not help.",
                "We will prove the hardness results in this setting, so that they will hold whether or not dominance by mixed strategies is allowed.",
                "Lemma 1.",
                "Suppose that all the utilities in a game are in {0, 1}.",
                "Then every pure strategy that is weakly dominated by a mixed strategy is also weakly dominated by a pure strategy.",
                "Proof.",
                "Suppose pure strategy σ is weakly dominated by mixed strategy σ∗ .",
                "If σ gets a utility of 1 against some opponent strategy (or vector of opponent strategies if there are more than 2 players), then all the pure strategies that σ∗ places positive probability on must also get a utility of 1 against that opponent strategy (or else the expected utility would be smaller than 1).",
                "Moreover, at least one of the pure strategies that σ∗ places positive probability on must get a utility of 1 against an opponent strategy that σ gets 0 against (or else the inequality would never be strict).",
                "It follows that this pure strategy weakly dominates σ.",
                "We are now ready to prove the main results of this section.",
                "Theorem 1.",
                "IWD-STRATEGY-ELIMINATION is NPcomplete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can easily check whether this is a valid sequence of eliminations (even when dominance by mixed strategies is allowed, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following IWD-STRATEGY-ELIMINATION instance. (In this instance, we will specify that certain strategies are uneliminable.",
                "A strategy σr can be made uneliminable, even when 0 and 1 are the only allowed utilities, by adding another strategy σr and another opponent strategy σc, so that: 1. σr and σr are the only strategies that give the row player a utility of 1 against σc. 2. σr and σr always give the row player the same utility. 3. σc is the only strategy that gives the column player a utility of 1 against σr, but otherwise σc always gives the column player utility 0.",
                "This makes it impossible to eliminate any of these three strategies.",
                "We will not explicitly specify the additional strategies to make the proof more legible.)",
                "In this proof, we will denote row player strategies by s, and column player strategies by t, to improve legibility.",
                "Let the row players pure strategy set be given as follows.",
                "For every variable v ∈ V , the row player has corresponding strategies s1 +v, s2 +v, s1 −v, s2 −v.",
                "Additionally, the row player has the following 2 strategies: s1 0 and s2 0, where s2 0 = σ∗ r (that is, it is the strategy we seek to eliminate).",
                "Finally, for every clause c ∈ C, the row player has corresponding strategies s1 c (uneliminable) and s2 c. Let the column players pure strategy set be given as follows.",
                "For every variable v ∈ V , the column player has a corresponding strategy tv.",
                "For every clause c ∈ C, the column player has a corresponding strategy tc, and additionally, for every literal l ∈ L that occurs in c, a strategy tc,l.",
                "For every variable v ∈ V , the column player has corresponding strategies t+v, t−v (both uneliminable).",
                "Finally, the column player has three additional strategies: t1 0 (uneliminable), t2 0, and t1.",
                "The utility function for the row player is given as follows: • ur(s1 +v, tv) = 0 for all v ∈ V ; • ur(s2 +v, tv) = 1 for all v ∈ V ; • ur(s1 −v, tv) = 1 for all v ∈ V ; • ur(s2 −v, tv) = 0 for all v ∈ V ; • ur(s1 +v, t1) = 1 for all v ∈ V ; • ur(s2 +v, t1) = 0 for all v ∈ V ; • ur(s1 −v, t1) = 0 for all v ∈ V ; • ur(s2 −v, t1) = 1 for all v ∈ V ; • ur(sb +v, t+v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sb −v, t−v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sl, t) = 0 otherwise for all l ∈ L and t ∈ S2; • ur(s1 0, tc) = 0 for all c ∈ C; • ur(s2 0, tc) = 1 for all c ∈ C; • ur(sb 0, t1 0) = 1 for all b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 otherwise for all b ∈ {1, 2} and t ∈ S2; • ur(sb c, t) = 0 otherwise for all c ∈ C and b ∈ {1, 2}; and the row players utility is 0 in every other case.",
                "The utility function for the column player is given as follows: • uc(s, tv) = 0 for all v ∈ V and s ∈ S1; • uc(s, t1) = 0 for all s ∈ S1; • uc(s2 l , tc) = 1 for all c ∈ C and l ∈ L where l ∈ c (literal l occurs in clause c); • uc(s2 l2 , tc,l1 ) = 1 for all c ∈ C and l1, l2 ∈ L, l1 = l2 where l2 ∈ c; • uc(s1 c, tc) = 1 for all c ∈ C; • uc(s2 c, tc) = 0 for all c ∈ C; • uc(sb c, tc,l) = 1 for all c ∈ C, l ∈ L, and b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 otherwise for all c ∈ C and l ∈ L; and the column players utility is 0 in every other case.",
                "We now show that the two instances are equivalent.",
                "First, suppose there is a solution to the satisfiability instance: that is, a truth-value assignment to the variables in V such that all clauses are satisfied.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the assignment, eliminate tv (which gives the column player utility 0 everywhere). 2.",
                "Then, for every variable v that is set to true in the assignment, eliminate s2 +v using s1 +v (which is possible because tv has been eliminated, and because t1 has not been eliminated (yet)). 3.",
                "Now eliminate t1 (which gives the column player utility 0 everywhere). 4.",
                "Next, for every variable v that is set to false in the assignment, eliminate s2 −v using s1 −v (which is possible because t1 has been eliminated, and because tv has not been eliminated (yet)). 5.",
                "For every clause c which has the variable corresponding to one of its positive literals l = +v set to true in the assignment, eliminate tc using tc,l (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 6.",
                "For every clause c which has the variable corresponding to one of its negative literals l = −v set to false in the assignment, eliminate tc using tc,l 91 (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 7.",
                "Because the assignment satisfied the formula, all the tc have now been eliminated.",
                "Thus, we can eliminate s2 0 = σ∗ r using s1 0.",
                "It follows that there is a solution to the IWD-STRATEGY-ELIMINATION instance.",
                "Now suppose there is a solution to the IWD-STRATEGYELIMINATION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We first observe that only s1 0 can eliminate s2 0 = σ∗ r , because it is the only other strategy that gets the row player a utility of 1 against t1 0, and t1 0 is uneliminable.",
                "However, because s2 0 performs better than s1 0 against the tc strategies, it follows that all of the tc strategies must be eliminated.",
                "For each c ∈ C, the strategy tc can only be eliminated by one of the strategies tc,l (with the same c), because these are the only other strategies that get the column player a utility of 1 against s1 c, and s1 c is uneliminable.",
                "But, in order for some tc,l to eliminate tc, s2 l must be eliminated first.",
                "Only s1 l can eliminate s2 l , because it is the only other strategy that gets the row player a utility of 1 against tl, and tl is uneliminable.",
                "We next show that for every v ∈ V only one of s2 +v, s2 −v can be eliminated.",
                "This is because in order for s1 +v to eliminate s2 +v, tv needs to have been eliminated and t1, not (so tv must be eliminated before t1); but in order for s1 −v to eliminate s2 −v, t1 needs to have been eliminated and tv, not (so t1 must be eliminated before tv).",
                "So, set v to true if s2 +v is eliminated, and to false otherwise Because by the above, for every clause c, one of the s2 l with l ∈ c must be eliminated, it follows that this is a satisfying assignment to the satisfiability instance.",
                "Using Theorem 1, it is now (relatively) easy to show that IWD-UNIQUE-SOLUTION is also NP-complete under the same restrictions.",
                "Theorem 2.",
                "IWD-UNIQUE-SOLUTION is NP-complete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "Again, the problem is in NP because we can nondeterministically choose the sequence of eliminations and verify whether it is correct.",
                "To show NP-hardness, we reduce an arbitrary IWD-STRATEGY-ELIMINATION instance to the following IWD-UNIQUE-SOLUTION instance.",
                "Let all the strategies for each player from the original instance remain part of the new instance, and let the utilities resulting from the players playing a pair of these strategies be the same.",
                "We add three additional strategies σ1 r , σ2 r , σ3 r for the row player, and three additional strategies σ1 c , σ2 c , σ3 c for the column player.",
                "Let the additional utilities be as follows: • ur(σr, σj c) = 1 for all σr /∈ {σ1 r , σ2 r , σ3 r } and j ∈ {2, 3}; • ur(σi r, σc) = 1 for all i ∈ {1, 2, 3} and σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 for all i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • and the row players utility is 0 in all other cases involving a new strategy. • uc(σ3 r , σc) = 1 for all σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 for all j ∈ {2, 3} (σ∗ r is the strategy to be eliminated in the original instance); • uc(σi r, σ1 c ) = 1 for all i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • and the column players utility is 0 in all other cases involving a new strategy.",
                "We proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the original IWDSTRATEGY-ELIMINATION instance.",
                "Then, perform the same sequence of eliminations to eliminate σ∗ r in the new IWD-UNIQUE-SOLUTION instance. (This is possible because at any stage, any weak dominance for the row player in the original instance is still a weak dominance in the new instance, because the two strategies utilities for the row player are the same when the column player plays one of the new strategies; and the same is true for the column player.)",
                "Once σ∗ r is eliminated, let σ1 c eliminate σ2 c . (It performs better against σ2 r .)",
                "Then, let σ1 r eliminate all the other remaining strategies for the row player. (It always performs better against either σ1 c or σ3 c .)",
                "Finally, σ1 c is the unique best response against σ1 r among the column players remaining strategies, so let it eliminate all the other remaining strategies for the column player.",
                "Thus, there exists a solution to the IWD-UNIQUE-SOLUTION instance.",
                "Now suppose there exists a solution to the IWD-UNIQUESOLUTION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We will show that none of the new strategies (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) can either eliminate another strategy, or be eliminated before σ∗ r is eliminated.",
                "Thus, there must be a sequence of eliminations ending in the elimination of σ∗ r , which does not involve any of the new strategies, and is therefore a valid sequence of eliminations in the original game (because all original strategies perform the same against each new strategy).",
                "We now show that this is true by exhausting all possibilities for the first elimination before σ∗ r is eliminated that involves a new strategy.",
                "None of the σi r can be eliminated by a σr /∈ {σ1 r , σ2 r , σ3 r }, because the σi r perform better against σ1 c . σ1 r cannot eliminate any other strategy, because it always performs poorer against σ2 c . σ2 r and σ3 r are equivalent from the row players perspective (and thus cannot eliminate each other), and cannot eliminate any other strategy because they always perform poorer against σ3 c .",
                "None of the σj c can be eliminated by a σc /∈ {σ1 c , σ2 c , σ3 c }, because the σj c always perform better against either σ1 r or σ2 r . σ1 c cannot eliminate any other strategy, because it always performs poorer against either σ∗ r or σ3 r . σ2 c cannot eliminate any other strategy, because it always performs poorer against σ2 r or σ3 r . σ3 c cannot eliminate any other strategy, because it always performs poorer against σ1 r or σ3 r .",
                "Thus, there exists a solution to the IWDSTRATEGY-ELIMINATION instance.",
                "A slightly weaker version of the part of Theorem 2 concerning dominance by pure strategies only is the main result of Gilboa et al. [7]. (Besides not proving the result for dominance by mixed strategies, the original result was weaker because it required utilities {0, 1, 2, 3, 4, 5, 6, 7, 8} rather than just {0, 1} (and because of this, our Lemma 1 cannot be applied to it to get the result for mixed strategies).) 5. (ITERATED) DOMINANCE USING MIXED STRATEGIES WITH SMALL SUPPORTS When showing that a strategy is dominated by a mixed strategy, there are several reasons to prefer exhibiting a 92 dominating strategy that places positive probability on as few pure strategies as possible.",
                "First, this will reduce the number of bits required to specify the dominating strategy (and thus the proof of dominance can be communicated quicker): if the dominating mixed strategy places positive probability on only k strategies, then it can be specified using k real numbers for the probabilities, plus k log m (where m is the number of strategies for the player under consideration) bits to indicate which strategies are used.",
                "Second, the proof of dominance will be cleaner: for a dominating mixed strategy, it is typically (always in the case of strict dominance) possible to spread some of the probability onto any unused pure strategy and still have a dominating strategy, but this obscures which pure strategies are the ones that are key in making the mixed strategy dominating.",
                "Third, because (by the previous) the argument for eliminating the dominated strategy is simpler and easier to understand, it is more likely to be accepted.",
                "Fourth, the level of risk neutrality required for the argument to work is reduced, at least in the extreme case where dominance by a single pure strategy can be exhibited (no risk neutrality is required here).",
                "This motivates the following problem.",
                "Definition 4 (MINIMUM-DOMINATING-SET).",
                "We are given the row players utilities of a game in normal form, a distinguished strategy σ∗ for the row player, a specification of whether the dominance should be strict or weak, and a number k. We are asked whether there exists a mixed strategy σ for the row player that places positive probability on at most k pure strategies, and dominates σ∗ in the required sense.",
                "Unfortunately, this problem is NP-complete.",
                "Theorem 3.",
                "MINIMUM-DOMINATING-SET is NPcomplete, both for strict and for weak dominance.",
                "Proof.",
                "The problem is in NP because we can nondeterministically choose a set of at most k strategies to give positive probability, and decide whether we can dominate σ∗ with these k strategies as described in Proposition 1.",
                "To show NP-hardness, we reduce an arbitrary SET-COVER instance (given a set S, subsets S1, S2, . . . , Sr, and a number t, can all of S be covered by at most t of the subsets?) to the following MINIMUM-DOMINATING-SET instance.",
                "For every element s ∈ S, there is a pure strategy σs for the column player.",
                "For every subset Si, there is a pure strategy σSi for the row player.",
                "Finally, there is the distinguished pure strategy σ∗ for the row player.",
                "The row players utilities are as follows: ur(σSi , σs) = t + 1 if s ∈ Si; ur(σSi , σs) = 0 if s /∈ Si; ur(σ∗ , σs) = 1 for all s ∈ S. Finally, we let k = t. We now proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the SET-COVER instance.",
                "Without loss of generality, we can assume that there are exactly k subsets in the cover.",
                "Then, for every Si that is in the cover, let the dominating strategy σ place exactly 1 k probability on the corresponding pure strategy σSi .",
                "Now, if we let n(s) be the number of subsets in the cover containing s (we observe that that n(s) ≥ 1), then for every strategy σs for the column player, the row players expected utility for playing σ when the column player is playing σs is u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs).",
                "So σ strictly (and thus also weakly) dominates σ∗ , and there exists a solution to the MINIMUM-DOMINATING-SET instance.",
                "Now suppose there exists a solution to the MINIMUMDOMINATING-SET instance.",
                "Consider the (at most k) pure strategies of the form σSi on which the dominating mixed strategy σ places positive probability, and let T be the collection of the corresponding subsets Si.",
                "We claim that T is a cover.",
                "For suppose there is some s ∈ S that is not in any of the subsets in T .",
                "Then, if the column player plays σs, the row player (when playing σ) will always receive utility 0-as opposed to the utility of 1 the row player would receive for playing σ∗ , contradicting the fact that σ dominates σ∗ (whether this dominance is weak or strict).",
                "It follows that there exists a solution to the SET-COVER instance.",
                "On the other hand, if we require that the dominating strategy only places positive probability on a very small number of pure strategies, then it once again becomes easy to check whether a strategy is dominated.",
                "Specifically, to find out whether player is strategy σ∗ is dominated by a strategy that places positive probability on only k pure strategies, we can simply check, for every subset of k of player is pure strategies, whether there is a strategy that places positive probability only on these k strategies and dominates σ∗ , using Proposition 1.",
                "This requires only O(|Σi|k ) such checks.",
                "Thus, if k is a constant, this constitutes a polynomial-time algorithm.",
                "A natural question to ask next is whether iterated strict dominance remains computationally easy when dominating strategies are required to place positive probability on at most k pure strategies, where k is a small constant. (We have already shown in Section 4 that iterated weak dominance is hard even when k = 1, that is, only dominance by pure strategies is allowed.)",
                "Of course, if iterated strict dominance were path-independent under this restriction, computational easiness would follow as it did in Section 4.",
                "However, it turns out that this is not the case.",
                "Observation 1.",
                "If we restrict the dominating strategies to place positive probability on at most two pure strategies, iterated strict dominance becomes path-dependent.",
                "Proof.",
                "Consider the following game: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Let (i, j) denote the outcome in which the row player plays the ith row and the column player plays the jth column.",
                "Because (1, 1), (2, 2), and (4, 3) are all Nash equilibria, none of the column players pure strategies will ever be eliminated, and neither will rows 1, 2, and 4.",
                "We now observe that randomizing uniformly over rows 1 and 2 dominates row 3, and randomizing uniformly over rows 3 and 4 dominates row 5.",
                "However, if we eliminate row 3 first, it becomes impossible to dominate row 5 without randomizing over at least 3 pure strategies.",
                "Indeed, iterated strict dominance turns out to be hard even when k = 3.",
                "Theorem 4.",
                "If we restrict the dominating strategies to place positive probability on at most three pure strategies, it becomes NP-complete to decide whether a given strategy can be eliminated using iterated strict dominance. 93 Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can check in polynomial time whether this is a valid sequence of eliminations (for any strategy to be eliminated, we can check, for every subset of three other strategies, whether there is a strategy placing positive probability on only these three strategies that dominates the strategy to be eliminated, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following two-player game.",
                "For every variable v ∈ V , the row player has strategies s+v, s−v, s1 v, s2 v, s3 v, s4 v, and the column player has strategies t1 v, t2 v, t3 v, t4 v. For every clause c ∈ C, the row player has a strategy sc, and the column player has a strategy tc, as well as, for every literal l occurring in c, an additional strategy tl c. The row player has two additional strategies s1 and s2. (s2 is the strategy that we are seeking to eliminate.)",
                "Finally, the column player has one additional strategy t1.",
                "The utility function for the row player is given as follows (where is some sufficiently small number): • ur(s+v, tj v) = 4 if j ∈ {1, 2}, for all v ∈ V ; • ur(s+v, tj v) = 1 if j ∈ {3, 4}, for all v ∈ V ; • ur(s−v, tj v) = 1 if j ∈ {1, 2}, for all v ∈ V ; • ur(s−v, tj v) = 4 if j ∈ {3, 4}, for all v ∈ V ; • ur(s+v, t) = ur(s−v, t) = 0 for all v ∈ V and t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 for all v ∈ V and i ∈ {1, 2, 3, 4}; • ur(si v, t) = for all v ∈ V , i ∈ {1, 2, 3, 4}, and t = ti v; • ur(sc, tc) = 2 for all c ∈ C; • ur(sc, t) = 0 for all c ∈ C and t = tc; • ur(s1, t1) = 1 + ; • ur(s1, t) = for all t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 for all c ∈ C; • ur(s2, t) = 0 for all t /∈ {t1} ∪ {tc : c ∈ C}.",
                "The utility function for the column player is given as follows: • uc(si v, ti v) = 1 for all v ∈ V and i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 for all v ∈ V , i ∈ {1, 2, 3, 4}, and s = si v; • uc(sc, tc) = 1 for all c ∈ C; • uc(sl, tc) = 1 for all c ∈ C and l ∈ L occurring in c; • uc(s, tc) = 0 for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + for all c ∈ C; • uc(sl , tl c) = 1 + for all c ∈ C and l = l occurring in c; • uc(s, tl c) = for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c, l = l }; • uc(s2, t1) = 1; • uc(s, t1) = 0 for all s = s2.",
                "We now show that the two instances are equivalent.",
                "First, suppose that there is a solution to the satisfiability instance.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the satisfying assignment, eliminate s+v with the mixed strategy σr that places probability 1/3 on s−v, probability 1/3 on s1 v, and probability 1/3 on s2 v. (The expected utility of playing σr against t1 v or t2 v is 14/3 > 4; against t3 v or t4 v, it is 4/3 > 1; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 2.",
                "Similarly, for every variable v that is set to false in the satisfying assignment, eliminate s−v with the mixed strategy σr that places probability 1/3 on s+v, probability 1/3 on s3 v, and probability 1/3 on s4 v. (The expected utility of playing σr against t1 v or t2 v is 4/3 > 1; against t3 v or t4 v, it is 14/3 > 4; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 3.",
                "For every c ∈ C, eliminate tc with any tl c for which l was set to true in the satisfying assignment. (This is a valid dominance because tl c performs better than tc against any strategy other than sl, and we eliminated sl in step 1 or in step 2.) 4.",
                "Finally, eliminate s2 with s1. (This is a valid dominance because s1 performs better than s2 against any strategy other than those in {tc : c ∈ C}, which we eliminated in step 3.)",
                "Hence, there is an elimination path that eliminates s2.",
                "Now, suppose that there is an elimination path that eliminates s2.",
                "The strategy that eventually dominates s2 must place most of its probability on s1, because s1 is the only other strategy that performs well against t1, which cannot be eliminated before s2.",
                "But, s1 performs significantly worse than s2 against any strategy tc with c ∈ C, so it follows that all these strategies must be eliminated first.",
                "Each strategy tc can only be eliminated by a strategy that places most of its weight on the corresponding strategies tl c with l ∈ c, because they are the only other strategies that perform well against sc, which cannot be eliminated before tc.",
                "But, each strategy tl c performs significantly worse than tc against sl, so it follows that for every clause c, for one of the literals l occurring in it, sl must be eliminated first.",
                "Now, strategies of the form tj v will never be eliminated because they are the unique best responses to the corresponding strategies sj v (which are, in turn, the best responses to the corresponding tj v).",
                "As a result, if strategy s+v (respectively, s−v) is eliminated, then its opposite strategy s−v (respectively, s+v) can no longer be eliminated, for the following reason.",
                "There is no other pure strategy remaining that gets a significant utility against more than one of the strategies t1 v, t2 v, t3 v, t4 v, but s−v (respectively, s+v) gets significant utility against all 4, and therefore cannot be dominated by a mixed strategy placing positive probability on at most 3 strategies.",
                "It follows that for each v ∈ V , at most one of the strategies s+v, s−v is eliminated, in such a way that for every clause c, for one of the literals l occurring in it, sl must be eliminated.",
                "But then setting all the literals l such that sl is eliminated to true constitutes a solution to the satisfiability instance.",
                "In the next section, we return to the setting where there is no restriction on the number of pure strategies on which a dominating mixed strategy can place positive probability. 6. (ITERATED) DOMINANCE IN BAYESIAN GAMES So far, we have focused on normal form games that are flatly represented (that is, every matrix entry is given ex94 plicitly).",
                "However, for many games, the flat representation is too large to write down explicitly, and instead, some representation that exploits the structure of the game needs to be used.",
                "Bayesian games, besides being of interest in their own right, can be thought of as a useful structured representation of normal form games, and we will study them in this section.",
                "In a Bayesian game, each player first receives privately held preference information (the players type) from a distribution, which determines the utility that that player receives for every outcome of (that is, vector of actions played in) the game.",
                "After receiving this type, the player plays an action based on it.7 Definition 5.",
                "A Bayesian game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of actions Ai, a (finite) type space Θi with a probability distribution πi over it, and a utility function ui : Θi × A1 × A2 × . . . × An → R (where ui(θi, a1, a2, . . . , an) denotes player is utility when is type is θi and each player j plays action aj).",
                "A pure strategy in a Bayesian game is a mapping from types to actions, σi : Θi → Ai, where σi(θi) denotes the action that player i plays for type θi.",
                "Any vector of pure strategies in a Bayesian game defines an (expected) utility for each player, and therefore we can translate a Bayesian game into a normal form game.",
                "In this normal form game, the notions of dominance and iterated dominance are defined as before.",
                "However, the normal form representation of the game is exponentially larger than the Bayesian representation, because each player i has |Ai||Θi| distinct pure strategies.",
                "Thus, any algorithm for Bayesian games that relies on expanding the game to its normal form will require exponential time.",
                "Specifically, our easiness results for normal form games do not directly transfer to this setting.",
                "In fact, it turns out that checking whether a strategy is dominated by a pure strategy is hard in Bayesian games.",
                "Theorem 5.",
                "In a Bayesian game, it is NP-complete to decide whether a given pure strategy σr : Θr → Ar is dominated by some other pure strategy (both for strict and weak dominance), even when the row players distribution over types is uniform.",
                "Proof.",
                "The problem is in NP because it is easy to verify whether a candidate dominating strategy is indeed a dominating strategy.",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a set of clauses C using variables from V ) to the following Bayesian game.",
                "Let the row players action set be Ar = {t, f, 0} and let the column players action set be Ac = {ac : c ∈ C}.",
                "Let the row players type set be Θr = {θv : v ∈ V }, with a distribution πr that is uniform.",
                "Let the row players utility function be as follows: • ur(θv, 0, ac) = 0 for all v ∈ V and c ∈ C; • ur(θv, b, ac) = |V | for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b satisfies c; • ur(θv, b, ac) = −1 for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b does not satisfy c. 7 In general, a player can also receive a signal about the other players preferences, but we will not concern ourselves with that here.",
                "Let the pure strategy to be dominated be the one that plays 0 for every type.",
                "We show that the strategy is dominated by a pure strategy if and only if there is a solution to the satisfiability instance.",
                "First, suppose there is a solution to the satisfiability instance.",
                "Then, let σd r be given by: σd r (θv) = t if v is set to true in the solution to the satisfiability instance, and σd r (θv) = f otherwise.",
                "Then, against any action ac by the column player, there is at least one type θv such that either +v ∈ c and σd r (θv) = t, or −v ∈ c and σd r (θv) = f. Thus, the row players expected utility against action ac is at least |V | |V | − |V |−1 |V | = 1 |V | > 0.",
                "So, σd r is a dominating strategy.",
                "Now, suppose there is a dominating pure strategy σd r .",
                "This dominating strategy must play t or f for at least one type.",
                "Thus, against any ac by the column player, there must at least be some type θv for which ur(θv, σd r (θv), ac) > 0.",
                "That is, there must be at least one variable v such that setting v to σd r (θv) satifies c. But then, setting each v to σd r (θv) must satisfy all the clauses.",
                "So a satisfying assignment exists.",
                "However, it turns out that we can modify the linear programs from Proposition 1 to obtain a polynomial time algorithm for checking whether a strategy is dominated by a mixed strategy in Bayesian games.",
                "Theorem 6.",
                "In a Bayesian game, it can be decided in polynomial time whether a given (possibly mixed) strategy σr is dominated by some other mixed strategy, using linear programming (both for strict and weak dominance).",
                "Proof.",
                "We can modify the linear programs presented in Proposition 1 as follows.",
                "For strict dominance, again assuming without loss of generality that all the utilities in the game are positive, use the following linear program (in which pσr r (θr, ar) is the probability that σr, the strategy to be dominated, places on ar for type θr): minimize θr∈Θr ar∈Ar pr(ar) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1.",
                "Assuming that π(θr) > 0 for all θr ∈ Θr, this program will return an objective value smaller than |Θr| if and only if σr is strictly dominated, by reasoning similar to that done in Proposition 1.",
                "For weak dominance, use the following linear program: maximize ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) = 1.",
                "This program will return an objective value greater than 0 if and only if σr is weakly dominated, by reasoning similar to that done in Proposition 1.",
                "We now turn to iterated dominance in Bayesian games.",
                "Na¨ıvely, one might argue that iterated dominance in Bayesian 95 games always requires an exponential number of steps when a significant fraction of the games pure strategies can be eliminated, because there are exponentially many pure strategies.",
                "However, this is not a very strong argument because oftentimes we can eliminate exponentially many pure strategies in one step.",
                "For example, if for some type θr ∈ Θr we have, for all ac ∈ Ac, that u(θr, a1 r, ac) > u(θr, a2 r, ac), then any pure strategy for the row player which plays action a2 r for type θr is dominated (by the strategy that plays action a1 r for type θr instead)-and there are exponentially many (|Ar||Θr|−1 ) such strategies.",
                "It is therefore conceivable that we need only polynomially many eliminations of collections of a players strategies.",
                "However, the following theorem shows that this is not the case, by giving an example where an exponential number of iterations (that is, alternations between the players in eliminating strategies) is required. (We emphasize that this is not a result about computational complexity.)",
                "Theorem 7.",
                "Even in symmetric 3-player Bayesian games, iterated dominance by pure strategies can require an exponential number of iterations (both for strict and weak dominance), even with only three actions per player.",
                "Proof.",
                "Let each player i ∈ {1, 2, 3} have n + 1 types θ1 i , θ2 i , . . . , θn+1 i .",
                "Let each player i have 3 actions ai, bi, ci, and let the utility function of each player be defined as follows. (In the below, i + 1 and i + 2 are shorthand for i + 1(mod 3) and i + 2(mod 3) when used as player indices.",
                "Also, −∞ can be replaced by a sufficiently negative number.",
                "Finally, δ and should be chosen to be very small (even compared to 2−(n+1) ), and should be more than twice as large as δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 for si+1 = ci+1 or si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − for si+1 = ai+1 and si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ for si+1 = ai+1 or si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ for all si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ for all si+1, si+2 when j > 1; • ui(θj i ; bi, si+1, si+2) = − for all si+1, si+2 when j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 for all si+1 when j > 1; • ui(θj i ; ci, si+1, si+2) = δ− for all si+1 and si+2 = ci+2 when j > 1.",
                "Let the distribution over each players types be given by p(θj i ) = 2−j (with the exception that p(θ2 i ) = 2−2 +2−(n+1) ).",
                "We will be interested in eliminating strategies of the following form: play bi for type θ1 i , and play one of bi or ci otherwise.",
                "Because the utility function is the same for any type θj i with j > 1, these strategies are effectively defined by the total probability that they place on ci,8 which is t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j where tj i = 1 if player i 8 Note that the strategies are still pure strategies; the probability placed on an action by a strategy here is simply the sum of the probabilities of the types for which the strategy chooses that action. plays ci for type θj i , and 0 otherwise.",
                "This probability is different for any two different strategies of the given form, and we have exponentially many different strategies of the given form.",
                "For any probability q which can be expressed as t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (with all tj ∈ {0, 1}), let σi(q) denote the (unique) strategy of the given form for player i which places a total probability of q on ci.",
                "Any strategy that plays ci for type θ1 i or ai for some type θj i with j > 1 can immediately be eliminated.",
                "We will show that, after that, we must eliminate the strategies σi(q) with high q first, slowly working down to those with lower q.",
                "Claim 1: If σi+1(q ) and σi+2(q ) have not yet been eliminated, and q < q , then σi(q) cannot yet be eliminated.",
                "Proof: First, we show that no strategy σi(q ) can eliminate σi(q).",
                "Against σi+1(q ), σi+2(q ), the utility of playing σi(p) is − + p · δ − p · q /2.",
                "Thus, when q = 0, it is best to set p as high as possible (and we note that σi+1(0) and σi+2(0) have not been eliminated), but when q > 0, it is best to set p as low as possible because δ < q /2.",
                "Thus, whether q > q or q < q , σi(q) will always do strictly better than σi(q ) against some remaining opponent strategies.",
                "Hence, no strategy σi(q ) can eliminate σi(q).",
                "The only other pure strategies that could dominate σi(q) are strategies that play ai for type θ1 i , and bi or ci for all other types.",
                "Let us take such a strategy and suppose that it plays c with probability p. Against σi+1(q ), σi+2(q ) (which have not yet been eliminated), the utility of playing this strategy is −(q )2 /2 − /2 + p · δ − p · q /2.",
                "On the other hand, playing σi(q) gives − + q · δ − q · q /2.",
                "Because q > q, we have −(q )2 /2 < −q · q /2, and because δ and are small, it follows that σi(q) receives a higher utility.",
                "Therefore, no strategy dominates σi(q), proving the claim.",
                "Claim 2: If for all q > q, σi+1(q ) and σi+2(q ) have been eliminated, then σi(q) can be eliminated.",
                "Proof: Consider the strategy for player i that plays ai for type θ1 i , and bi for all other types (call this strategy σi); we claim σi dominates σi(q).",
                "First, if either of the other players k plays ak for θ1 k, then σi performs better than σi(q) (which receives −∞ in some cases).",
                "Because the strategies for player k that play ck for type θ1 k, or ak for some type θj k with j > 1, have already been eliminated, all that remains to check is that σi performs better than σi(q) whenever both of the other two players play strategies of the following form: play bk for type θ1 k, and play one of bk or ck otherwise.",
                "We note that among these strategies, there are none left that place probability greater than q on ck.",
                "Letting qk denote the probability with which player k plays ck, the expected utility of playing σi is −qi+1 · qi+2/2 − /2.",
                "On the other hand, the utility of playing σi(q) is − + q · δ − q · qi+2/2.",
                "Because qi+1 ≤ q, the difference between these two expressions is at least /2 − δ, which is positive.",
                "It follows that σi dominates σi(q).",
                "From Claim 2, it follows that all strategies of the form σi(q) will eventually be eliminated.",
                "However, Claim 1 shows that we cannot go ahead and eliminate multiple such strategies for one player, unless at least one other player simultaneously keeps up in the eliminated strategies: every time a σi(q) is eliminated such that σi+1(q) and σi+2(q) have not yet been eliminated, we need to eliminate one of the latter two strategies before any σi(q ) with q > q can be eliminated-that is, we need to alternate between players.",
                "Because there are exponentially many strategies of the form σi(q), it follows that iterated elimination will require exponentially many iterations to complete. 96 It follows that an efficient algorithm for iterated dominance (strict or weak) by pure strategies in Bayesian games, if it exists, must somehow be able to perform (at least part of) many iterations in a single step of the algorithm (because if each step only performed a single iteration, we would need exponentially many steps).",
                "Interestingly, Knuth et al. [11] argue that iterated dominance appears to be an inherently sequential problem (in light of their result that iterated very weak dominance is P-complete, that is, apparently not efficiently parallelizable), suggesting that aggregating many iterations may be difficult. 7.",
                "CONCLUSIONS While the Nash equilibrium solution concept is studied more and more intensely in our community, the perhaps more elementary concept of (iterated) dominance has received much less attention.",
                "In this paper we studied various computational aspects of this concept.",
                "We first studied both strict and weak dominance (not iterated), and showed that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then moved on to iterated dominance.",
                "We showed that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allowed us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then studied what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we showed that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we showed that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we studied dominance and iterated dominance in Bayesian games, as an example of a concise representation language for normal form games that is interesting in its own right.",
                "We showed that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak dominance).",
                "Finally, we showed that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "There are various avenues for future research.",
                "First, there is the open question of whether it is possible to complete iterated dominance in Bayesian games in polynomial time (even though we showed that an exponential number of alternations between the players in eliminating strategies is sometimes required).",
                "Second, we can study computational aspects of (iterated) dominance in concise representations of normal form games other than Bayesian games-for example, in graphical games [9] or local-effect/action graph games [12, 2]. (How to efficiently perform iterated very weak dominance has already been studied for partially observable stochastic games [8].)",
                "Finally, we can ask whether some of the algorithms we described (such as the one for iterated strict dominance with mixed strategies) can be made faster. 8.",
                "REFERENCES [1] Krzysztof R. Apt.",
                "Uniform proofs of order independence for various strategy elimination procedures.",
                "Contributions to Theoretical Economics, 4(1), 2004. [2] Nivan A. R. Bhat and Kevin Leyton-Brown.",
                "Computing Nash equilibria of action-graph games.",
                "In UAI, 2004. [3] Ben Blum, Christian R. Shelton, and Daphne Koller.",
                "A continuation method for Nash equilibria in structured games.",
                "In IJCAI, 2003. [4] Vincent Conitzer and Tuomas Sandholm.",
                "Complexity results about Nash equilibria.",
                "In IJCAI, pages 765-771, 2003. [5] Drew Fudenberg and Jean Tirole.",
                "Game Theory.",
                "MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "On the order of eliminating dominated strategies.",
                "Operations Research Letters, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "The complexity of eliminating dominated strategies.",
                "Mathematics of Operation Research, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein, and Shlomo Zilberstein.",
                "Dynamic programming for partially observable stochastic games.",
                "In AAAI, pages 709-715, 2004. [9] Michael Kearns, Michael Littman, and Satinder Singh.",
                "Graphical models for game theory.",
                "In UAI, 2001. [10] Leonid Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou, and John N Tsitsiklis.",
                "A note on strategy elimination in bimatrix games.",
                "Operations Research Letters, 7(3):103-107, 1988. [12] Kevin Leyton-Brown and Moshe Tennenholtz.",
                "Local-effect games.",
                "In IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [14] Michael Littman and Peter Stone.",
                "A polynomial-time Nash equilibrium algorithm for repeated games.",
                "In ACM-EC, pages 48-54, 2003. [15] Leslie M. Marx and Jeroen M. Swinkels.",
                "Order independence for iterated weak dominance.",
                "Games and Economic Behavior, 18:219-245, 1997. [16] Leslie M. Marx and Jeroen M. Swinkels.",
                "Corrigendum, order independence for iterated weak dominance.",
                "Games and Economic Behavior, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston, and Jerry R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [18] Roger Myerson.",
                "Game Theory: Analysis of Conflict.",
                "Harvard University Press, Cambridge, 1991. [19] Martin J Osborne and Ariel Rubinstein.",
                "A Course in Game Theory.",
                "MIT Press, 1994. [20] Christos Papadimitriou.",
                "Algorithms, games and the Internet.",
                "In STOC, pages 749-753, 2001. [21] Ryan Porter, Eugene Nudelman, and Yoav Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, 2004. 97"
            ],
            "original_annotated_samples": [
                "INTRODUCTION In multiagent systems with self-interested agents, the <br>optimal action</br> for one agent may depend on the actions taken by other agents."
            ],
            "translated_annotated_samples": [
                "INTRODUCCIÓN En sistemas multiagentes con agentes auto-interesados, la <br>acción óptima</br> para un agente puede depender de las acciones tomadas por otros agentes."
            ],
            "translated_text": "Estudiamos varios aspectos computacionales de la resolución de juegos utilizando la dominancia y la dominancia iterada. Primero estudiamos tanto la dominancia estricta como la débil (no iterada), y demostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta se puede hacer en tiempo polinómico utilizando la resolución de un único programa lineal. Luego pasamos a la dominancia iterada. Mostramos que determinar si existe algún camino que elimine una estrategia dada es NP-completo con dominancia débil iterada. Esto nos permite también demostrar que determinar si existe un camino que conduce a una solución única es NP-completo. Ambos resultados se mantienen tanto con como sin dominancia de estrategias mixtas. (Una versión más débil del segundo resultado (solo sin dominancia de estrategias mixtas) ya se conocía [7].) La dominancia estricta iterada, por otro lado, es independiente de la ruta (tanto con como sin dominancia por estrategias mixtas) y, por lo tanto, se puede realizar en tiempo polinómico. Luego estudiamos qué sucede cuando la estrategia dominante puede asignar una probabilidad positiva solo a unas pocas estrategias puras. Primero, demostramos que encontrar la estrategia dominante con el tamaño de soporte mínimo es NP-completo (tanto para dominancia estricta como débil). Luego, demostramos que la dominancia estricta iterada se vuelve dependiente del camino cuando hay un límite en el tamaño del soporte de las estrategias dominantes, y que decidir si una estrategia dada puede ser eliminada por dominancia estricta iterada bajo esta restricción es NP-completo (incluso cuando el límite en el tamaño del soporte es 3). Finalmente, estudiamos juegos bayesianos. Mostramos que, a diferencia de los juegos en forma normal, decidir si una estrategia pura dada está dominada por otra estrategia pura en un juego bayesiano es NP-completo (tanto con dominancia estricta como débil); sin embargo, decidir si una estrategia está dominada por alguna estrategia mixta aún puede hacerse en tiempo polinómico con la resolución de un único programa lineal (tanto con dominancia estricta como débil). Finalmente, demostramos que la dominancia iterada utilizando estrategias puras puede requerir un número exponencial de iteraciones en un juego bayesiano (tanto con dominancia estricta como débil). Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN En sistemas multiagentes con agentes auto-interesados, la <br>acción óptima</br> para un agente puede depender de las acciones tomadas por otros agentes. En tales contextos, los agentes necesitan herramientas de teoría de juegos para decidir racionalmente sobre una acción. La teoría de juegos ofrece varios modelos formales de escenarios estratégicos, el más conocido de los cuales es un juego en forma normal (o matriz), que especifica una utilidad (pago) para cada agente en cada combinación de estrategias que los agentes eligen, así como conceptos de solución que, dados un juego, especifican qué resultados son razonables (bajo varias suposiciones de racionalidad y conocimiento común). Probablemente el concepto de solución más conocido (y ciertamente el más estudiado) es el equilibrio de Nash. Un equilibrio de Nash especifica una estrategia para cada jugador, de tal manera que ningún jugador tiene un incentivo para desviarse (unilateralmente) de la estrategia prescrita. Recientemente, numerosos artículos han estudiado el cálculo de equilibrios de Nash en diferentes contextos [9, 4, 12, 3, 13, 14], y la complejidad de construir un equilibrio de Nash en juegos en forma normal ha sido etiquetada como uno de los dos problemas abiertos más importantes en el límite de P hoy en día [20]. El problema de calcular soluciones de acuerdo con los conceptos de solución quizás más elementales de dominancia y dominancia iterada ha recibido mucha menos atención. (Después de un breve artículo temprano sobre un caso sencillo [11], el principal estudio computacional de estos conceptos ha tenido lugar en realidad en un artículo de la comunidad de teoría de juegos [7].) Una estrategia domina estrictamente a otra estrategia si tiene un rendimiento estrictamente mejor contra todos los vectores de estrategias del oponente, y la domina débilmente si tiene al menos el mismo rendimiento contra todos los vectores de estrategias del oponente, y estrictamente mejor contra al menos uno. La idea es que las estrategias dominadas pueden ser eliminadas de consideración. En la dominancia iterada, la eliminación avanza en rondas y se vuelve más fácil a medida que se eliminan más estrategias: en cualquier ronda dada, la estrategia dominante ya no necesita desempeñarse mejor que o igual que la estrategia dominada contra las estrategias oponentes que fueron eliminadas en rondas anteriores. Calcular soluciones según la dominancia (iterada) es importante por al menos las siguientes razones: 1) puede ser computacionalmente más fácil que calcular (por ejemplo) un equilibrio de Nash (y por lo tanto puede ser útil como paso de preprocesamiento en el cálculo de un equilibrio de Nash), y 2) la dominancia (iterada) requiere una suposición de racionalidad más débil en los jugadores que (por ejemplo) el equilibrio de Nash, y por lo tanto las soluciones derivadas según ella son más propensas a ocurrir. En este artículo, estudiamos algunas preguntas computacionales fundamentales relacionadas con la dominancia y la dominancia iterada, incluyendo qué tan difícil es verificar si una estrategia dada puede ser eliminada por cada una de las variantes de estos conceptos. El resto del documento está organizado de la siguiente manera. En la Sección 2, revisamos brevemente las definiciones y propiedades básicas de los juegos en forma normal, la dominancia estricta y débil, y la dominancia estricta y débil iterada. En las secciones restantes, estudiamos los aspectos computacionales de la dominancia y la dominancia iterada. En la Sección 3, estudiamos la dominancia de un solo disparo (no iterada). En la Sección 4, estudiamos la dominancia iterada. En la Sección 5, estudiamos la dominancia y la dominancia iterada cuando la estrategia dominante solo puede asignar probabilidad a unas pocas estrategias puras. Finalmente, en la Sección 6, estudiamos la dominancia y la dominancia iterada en juegos bayesianos. 2. DEFINICIONES Y PROPIEDADES BÁSICAS En esta sección, revisamos brevemente los juegos en forma normal, así como la dominancia y la dominancia iterada (tanto estricta como débil). Un juego de forma normal de n jugadores se define de la siguiente manera. Definición 1. Un juego en forma normal está dado por un conjunto de jugadores {1, 2, . . . , n}; y, para cada jugador i, un conjunto (finito) de estrategias puras Σi y una función de utilidad ui : Σ1 × Σ2 × . . . × Σn → R (donde ui(σ1, σ2, . . . , σn) denota la utilidad del jugador i cuando cada jugador j juega la acción σj). Las dos principales nociones de dominancia se definen de la siguiente manera. Definición 2. La estrategia σi del jugador se dice que está estrictamente dominada por la estrategia σi del jugador si, para cualquier vector de estrategias σ−i de los otros jugadores, ui(σi, σ−i) > ui(σi, σ−i). La estrategia σi del jugador se dice que está débilmente dominada por la estrategia σi del jugador si, para cualquier vector de estrategias σ−i para los otros jugadores, ui(σi, σ−i) ≥ ui(σi, σ−i), y para al menos un vector de estrategias σ−i para los otros jugadores, ui(σi, σ−i) > ui(σi, σ−i). En esta definición, a veces se permite que la estrategia dominante σi sea una estrategia mixta, es decir, una distribución de probabilidad sobre estrategias puras. En este caso, las utilidades están en dominancia en conjunto. Por ejemplo, a veces se utilizan comprobaciones de dominancia simple como una subrutina en la búsqueda de equilibrios de Nash [21]. Las definiciones son las utilidades esperadas. Hay otras nociones de dominancia, como la dominancia muy débil (en la que no se requiere ninguna desigualdad estricta, por lo que dos estrategias pueden dominarse mutuamente), pero no las estudiaremos aquí. Cuando estamos analizando las relaciones de dominancia para el jugador i, los otros jugadores (−i) pueden ser considerados como un solo jugador. Por lo tanto, en el resto del documento, cuando estudiamos la dominancia de un solo paso (no iterada), nos centraremos sin pérdida de generalidad en juegos de dos jugadores. En juegos de dos jugadores, generalmente nos referiremos a los jugadores como r (fila) y c (columna) en lugar de 1 y 2. En la dominancia iterada, las estrategias dominadas son eliminadas del juego y ya no tienen ningún efecto en las relaciones de dominancia futuras. La dominancia iterada puede eliminar más estrategias que la dominancia, de la siguiente manera. σr puede originalmente no dominar a σr porque este último tiene un mejor desempeño contra σc; pero luego, una vez que σc es eliminado porque es dominado por σc, σr domina a σr, y este último puede ser eliminado. Por ejemplo, en el siguiente juego, se puede eliminar primero a R, después de lo cual D queda dominado. Tanto la dominancia estricta como la dominancia débil pueden ser utilizadas en la definición de la dominancia iterada. Observamos que el proceso de dominancia iterada nunca se ve favorecido al eliminar una estrategia mixta dominada, por la siguiente razón. Si σi le da al jugador i una utilidad mayor que σi contra la estrategia mixta σj para el jugador j = i (y estrategias σ−{i,j} para los otros jugadores), entonces para al menos una estrategia pura σj en la que σj coloque probabilidad positiva, σi debe desempeñarse mejor que σi contra σj (y estrategias σ−{i,j} para los otros jugadores). Por lo tanto, eliminar la estrategia mixta σj no introduce nuevas dominancias. Discusiones más detalladas y ejemplos se pueden encontrar en textos estándar sobre microeconomía o teoría de juegos [17, 5]. Ahora estamos listos para pasar al núcleo de este documento. 3. En esta sección, estudiamos la noción de dominancia de un solo turno (no iterada). Como primera observación, verificar si una estrategia dada está estrictamente (débilmente) dominada por alguna estrategia pura es sencillo, al comprobar, para cada estrategia pura de ese jugador, si la última estrategia tiene un rendimiento estrictamente mejor contra todas las estrategias de los oponentes (al menos igual de bien contra todas las estrategias de los oponentes, y estrictamente 2 La estrategia dominada σi, por supuesto, también puede ser mixta, pero esto no tiene implicaciones técnicas para el documento: cuando estudiamos la dominancia de un solo disparo, preguntamos si una estrategia dada está dominada, y no importa si la estrategia dada es pura o mixta; cuando estudiamos la dominancia iterada, no tiene sentido eliminar las estrategias mixtas, como veremos en breve. 3 Este jugador puede tener un espacio de estrategias muy grande (una estrategia pura para cada vector de estrategias puras de los jugadores que están siendo reemplazados). Sin embargo, esto no resultará en un aumento en el tamaño de nuestra representación, ya que la representación original ya tenía que especificar las utilidades para cada uno de estos vectores. Observamos que una restricción a juegos de dos jugadores no sería sin pérdida de generalidad para la dominancia iterada. Esto se debe a que para la dominancia iterada, necesitamos analizar las estrategias dominadas de cada jugador individual, por lo que no podemos fusionar a ningún jugador. A continuación, mostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta se puede hacer en tiempo polinómico resolviendo un único programa lineal. (Programas lineales similares se han presentado anteriormente [18]; presentamos el resultado aquí por completitud, y porque construiremos sobre los programas lineales dados a continuación en el Teorema 6.) Proposición 1. Dadas las utilidades de los jugadores de fila, un subconjunto Dr de las estrategias puras de los jugadores de fila Σr, y una estrategia distinguida σ∗ r para el jugador de fila, podemos verificar en tiempo polinómico en el tamaño del juego (resolviendo un único programa lineal de tamaño polinómico) si existe alguna estrategia mixta σr, que coloque probabilidad positiva solo en estrategias en Dr y domine a σ∗ r, tanto en dominancia estricta como débil. Prueba. Sea pdr la probabilidad que σr asigna a dr ∈ Dr. Resolveremos un único programa lineal en cada uno de nuestros algoritmos; los programas lineales pueden resolverse en tiempo polinómico [10]. Para la dominancia estricta, la pregunta es si se puede establecer el pdr de manera que para cada estrategia pura del jugador de la columna σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc). Debido a que la desigualdad debe ser estricta, no podemos resolver esto directamente mediante programación lineal. Procedemos de la siguiente manera. Dado que el juego es finito, podemos asumir sin pérdida de generalidad que todas las utilidades son positivas (si no lo son, simplemente añade una constante a todas las utilidades). Resolver el siguiente programa lineal: minimizar dr∈Dr pdr tal que para cualquier σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc). Si σ∗ r es estrictamente dominada por alguna estrategia mixta, este programa lineal tiene una solución con un valor objetivo < 1. (La estrategia dominante es una solución factible con un valor objetivo exactamente igual a 1. Dado que ninguna restricción es vinculante para esta solución, podemos reducir ligeramente una de las probabilidades sin afectar la viabilidad, obteniendo así una solución con un valor objetivo < 1. Además, si este programa lineal tiene una solución con un valor objetivo < 1, existe una estrategia mixta que domina estrictamente a σ∗ r, la cual se puede obtener tomando la solución del PL y agregando la probabilidad restante a cualquier estrategia (debido a que todas las utilidades son positivas, esto sumará al lado izquierdo de cualquier desigualdad, por lo que todas las desigualdades se volverán estrictas). Para la dominancia débil, podemos resolver el siguiente programa lineal: maximizar σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) tal que para cualquier σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1. Si σ∗ r está débilmente dominado por alguna estrategia mixta, entonces esa estrategia mixta es una solución factible para este programa con un valor objetivo > 0, porque para al menos una estrategia σc ∈ Σc tenemos ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0. Por otro lado, si este programa tiene una solución con un valor objetivo > 0, entonces para al menos una estrategia σc ∈ Σc debemos tener ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, y por lo tanto la solución de los programas lineales es una estrategia mixta débilmente dominante. 4. DOMINANCIA ITERADA Ahora pasamos a la dominancia iterada. Es bien sabido que la dominancia estricta iterada es independiente del camino [6, 19], es decir, si eliminamos las estrategias dominadas hasta que ya no queden más estrategias dominadas, al final las estrategias restantes para cada jugador serán las mismas, independientemente del orden en que se eliminen las estrategias. Por lo tanto, para determinar si una estrategia dada puede ser eliminada por dominancia estricta iterada, todo lo que se necesita hacer es eliminar repetidamente las estrategias que son estrictamente dominadas, hasta que no queden más estrategias dominadas. Dado que podemos verificar en tiempo polinómico si alguna estrategia dada está dominada (ya sea que se permita o no la dominancia por estrategias mixtas, como se describe en la Sección 3), todo este procedimiento toma solo tiempo polinómico. En el caso de la dominancia iterada por estrategias puras con dos jugadores, Knuth et al. [11] mejoran ligeramente (aceleran) la implementación directa de este procedimiento al llevar un registro, para cada par ordenado de estrategias de un jugador, del número de estrategias del oponente que impiden que la primera estrategia domine a la segunda. Por lo tanto, el tiempo de ejecución para un juego m × n se reduce de O((m + n)4 ) a O((m + n)3 ). (En realidad, solo estudian dominancia muy débil (para la cual no se requieren desigualdades estrictas), pero el enfoque se puede extender fácilmente). Por el contrario, se sabe que la dominancia débil iterada es dependiente del camino. Por ejemplo, en el siguiente juego, utilizando la dominancia débil iterada podemos eliminar primero M y luego D, o primero R y luego U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Por lo tanto, si bien el procedimiento de eliminar estrategias débilmente dominadas hasta que no queden más estrategias débilmente dominadas puede ciertamente ejecutarse en tiempo polinómico, qué estrategias sobreviven al final depende del orden en el que eliminamos las estrategias dominadas. Investigaremos dos preguntas para la dominancia débil iterada: si una estrategia dada es eliminada en algún camino, y si hay un camino hacia una solución única (una única estrategia pura por jugador). Mostraremos que ambos de estos problemas son computacionalmente difíciles. Definición 3. Dada un juego en forma normal y una estrategia distinguida σ∗ , la ELIMINACIÓN DE ESTRATEGIAS POR DOMINANCIA DÉBIL (IWD-STRATEGY-ELIMINATION) pregunta si existe algún camino de dominancia débil iterada que elimine σ∗ . Dada un juego en forma normal, IWDUNIQUE-SOLUTION pregunta si existe algún camino de dominancia débil iterada que conduzca a una solución única (una estrategia restante por jugador). El siguiente lema muestra un caso especial de juegos en forma normal en el que permitir la dominancia débil a través de estrategias mixtas (además de la dominancia débil a través de estrategias puras) hace 6. Sin embargo, existe una restricción de dominancia débil llamada dominancia débil agradable que es independiente de la ruta [15, 16]. Para obtener una visión general de los resultados de independencia de la ruta, consulte Apt [1]. 90 no ayuda. Demostraremos los resultados de dificultad en este contexto, de modo que se mantengan independientemente de si se permite o no la dominancia por estrategias mixtas. Lema 1. Supongamos que todas las utilidades en un juego están en {0, 1}. Entonces, toda estrategia pura que es débilmente dominada por una estrategia mixta también es débilmente dominada por una estrategia pura. Prueba. Se supone que la estrategia pura σ es débilmente dominada por la estrategia mixta σ∗. Si σ obtiene una utilidad de 1 contra alguna estrategia o vector de estrategias del oponente (si hay más de 2 jugadores), entonces todas las estrategias puras en las que σ∗ asigna una probabilidad positiva también deben obtener una utilidad de 1 contra esa estrategia del oponente (de lo contrario, la utilidad esperada sería menor que 1). Además, al menos una de las estrategias puras en las que σ∗ coloca probabilidad positiva debe obtener una utilidad de 1 contra una estrategia del oponente que σ obtiene 0 (de lo contrario, la desigualdad nunca sería estricta). Se deduce que esta estrategia pura domina débilmente a σ. Ahora estamos listos para demostrar los resultados principales de esta sección. Teorema 1. IWD-STRATEGY-ELIMINATION es NPcompleto, incluso con 2 jugadores, y con 0 y 1 siendo las únicas utilidades que ocurren en la matriz, ya sea que se permita o no la dominancia por estrategias mixtas. Prueba. El problema está en NP porque, dado una secuencia de estrategias a ser eliminadas, podemos verificar fácilmente si esta es una secuencia válida de eliminaciones (incluso cuando se permite la dominancia por estrategias mixtas, utilizando la Proposición 1). Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto no vacío de cláusulas C sobre un conjunto no vacío de variables V, con literales correspondientes L = {+v : v ∈ V} ∪ {−v : v ∈ V}) a la siguiente instancia de ELIMINACIÓN DE ESTRATEGIA IWD. (En esta instancia, especificaremos que ciertas estrategias son ineliminables. Una estrategia σr puede hacerse ineliminable, incluso cuando 0 y 1 son las únicas utilidades permitidas, al agregar otra estrategia σr y otra estrategia del oponente σc, de modo que: 1. σr y σr son las únicas estrategias que le dan al jugador de la fila una utilidad de 1 contra σc. 2. σr y σr siempre le dan al jugador de la fila la misma utilidad. 3. σc es la única estrategia que le da al jugador de la columna una utilidad de 1 contra σr, pero de lo contrario σc siempre le da al jugador de la columna una utilidad de 0. Esto hace imposible eliminar cualquiera de estas tres estrategias. No especificaremos explícitamente las estrategias adicionales para hacer la prueba más legible. En esta demostración, designaremos las estrategias del jugador de fila como s, y las estrategias del jugador de columna como t, para mejorar la legibilidad. Que se dé el conjunto de estrategias puras de los jugadores de fila como sigue. Para cada variable v ∈ V, el jugador de la fila tiene estrategias correspondientes s1 +v, s2 +v, s1 −v, s2 −v. Además, el jugador de la fila tiene las siguientes 2 estrategias: s1 0 y s2 0, donde s2 0 = σ∗ r (es decir, es la estrategia que buscamos eliminar). Finalmente, para cada cláusula c ∈ C, el jugador de la fila tiene estrategias correspondientes s1 c (ineliminables) y s2 c. Dado el conjunto de estrategias puras de los jugadores de la columna de la siguiente manera. Para cada variable v ∈ V, el jugador de la columna tiene una estrategia correspondiente tv. Para cada cláusula c ∈ C, el jugador de la columna tiene una estrategia correspondiente tc, y además, para cada literal l ∈ L que ocurre en c, una estrategia tc,l. Para cada variable v ∈ V, el jugador de la columna tiene estrategias correspondientes t+v, t−v (ambas no eliminables). Finalmente, el jugador de la columna tiene tres estrategias adicionales: t1 0 (ineliminable), t2 0 y t1. La función de utilidad para el jugador de la fila se da de la siguiente manera: • ur(s1 +v, tv) = 0 para todo v ∈ V ; • ur(s2 +v, tv) = 1 para todo v ∈ V ; • ur(s1 −v, tv) = 1 para todo v ∈ V ; • ur(s2 −v, tv) = 0 para todo v ∈ V ; • ur(s1 +v, t1) = 1 para todo v ∈ V ; • ur(s2 +v, t1) = 0 para todo v ∈ V ; • ur(s1 −v, t1) = 0 para todo v ∈ V ; • ur(s2 −v, t1) = 1 para todo v ∈ V ; • ur(sb +v, t+v) = 1 para todo v ∈ V y b ∈ {1, 2}; • ur(sb −v, t−v) = 1 para todo v ∈ V y b ∈ {1, 2}; • ur(sl, t) = 0 de lo contrario para todo l ∈ L y t ∈ S2; • ur(s1 0, tc) = 0 para todo c ∈ C; • ur(s2 0, tc) = 1 para todo c ∈ C; • ur(sb 0, t1 0) = 1 para todo b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 de lo contrario para todo b ∈ {1, 2} y t ∈ S2; • ur(sb c, t) = 0 de lo contrario para todo c ∈ C y b ∈ {1, 2}; y la utilidad del jugador de la fila es 0 en todos los demás casos. La función de utilidad para el jugador de la columna se da de la siguiente manera: • uc(s, tv) = 0 para todo v ∈ V y s ∈ S1; • uc(s, t1) = 0 para todo s ∈ S1; • uc(s2 l , tc) = 1 para todo c ∈ C y l ∈ L donde l ∈ c (literal l ocurre en la cláusula c); • uc(s2 l2 , tc,l1 ) = 1 para todo c ∈ C y l1, l2 ∈ L, l1 = l2 donde l2 ∈ c; • uc(s1 c, tc) = 1 para todo c ∈ C; • uc(s2 c, tc) = 0 para todo c ∈ C; • uc(sb c, tc,l) = 1 para todo c ∈ C, l ∈ L, y b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 en otro caso para todo c ∈ C y l ∈ L; y la utilidad del jugador de la columna es 0 en todos los demás casos. Ahora demostramos que las dos instancias son equivalentes. Primero, supongamos que hay una solución para la instancia de satisfactibilidad: es decir, una asignación de valores de verdad a las variables en V tal que todas las cláusulas se satisfacen. Entonces, considera la siguiente secuencia de eliminaciones en nuestro juego: 1. Para cada variable v que se establezca como verdadera en la asignación, elimine tv (lo que da como resultado una utilidad de 0 para el jugador de la columna en todas partes). 2. Entonces, para cada variable v que se establezca como verdadera en la asignación, elimine s2 +v usando s1 +v (lo cual es posible porque tv ha sido eliminado, y porque t1 no ha sido eliminado (aún)). 3. Ahora elimina t1 (lo cual da como resultado una utilidad de 0 para el jugador de la columna). 4. A continuación, para cada variable v que se establezca como falso en la asignación, elimine s2 −v usando s1 −v (lo cual es posible porque t1 ha sido eliminado, y porque tv no ha sido eliminado (aún)). 5. Para cada cláusula c que tenga la variable correspondiente a uno de sus literales positivos l = +v establecido como verdadero en la asignación, elimine tc utilizando tc,l (lo cual es posible porque s2 l ha sido eliminado, y s2 c no ha sido eliminado (aún)). 6. Para cada cláusula c en la que la variable correspondiente a uno de sus literales negativos l = −v se establece en falso en la asignación, elimine tc utilizando tc,l 91 (lo cual es posible porque s2 l ha sido eliminado, y s2 c no ha sido eliminado (aún)). 7. Debido a que la tarea cumplió con la fórmula, todos los tc han sido eliminados ahora. Por lo tanto, podemos eliminar s2 0 = σ∗ r usando s1 0. Se deduce que hay una solución para la instancia IWD-STRATEGY-ELIMINATION. Ahora supongamos que hay una solución para la instancia IWD-STRATEGYELIMINATION. Por el Lema 1, podemos asumir que todas las dominancias son por estrategias puras. Primero observamos que solo s1 0 puede eliminar s2 0 = σ∗ r, porque es la única otra estrategia que le da al jugador de la fila una utilidad de 1 contra t1 0, y t1 0 es ineliminable. Sin embargo, dado que s2 0 tiene un mejor rendimiento que s1 0 contra las estrategias de tc, se deduce que todas las estrategias de tc deben ser eliminadas. Para cada c ∈ C, la estrategia tc solo puede ser eliminada por una de las estrategias tc,l (con el mismo c), ya que estas son las únicas otras estrategias que le dan al jugador de la columna una utilidad de 1 contra s1 c, y s1 c es ineliminable. Pero, para que algún tc,l elimine tc, primero se debe eliminar s2 l. Solo s1 l puede eliminar s2 l, porque es la única otra estrategia que le otorga al jugador de la fila una utilidad de 1 contra tl, y tl es ineliminable. A continuación mostramos que para cada v ∈ V solo se puede eliminar uno de s2 +v, s2 −v. Esto se debe a que para que s1 +v elimine s2 +v, tv debe haber sido eliminado y t1, no (por lo tanto, tv debe ser eliminado antes que t1); pero para que s1 -v elimine s2 -v, t1 debe haber sido eliminado y tv, no (por lo tanto, t1 debe ser eliminado antes que tv). Por lo tanto, establezca v en verdadero si s2 + v es eliminado, y en falso de lo contrario. Debido a lo anterior, para cada cláusula c, uno de los s2 con l ∈ c debe ser eliminado, por lo que se deduce que esta es una asignación satisfactoria para la instancia de satisfactibilidad. Usando el Teorema 1, ahora es (relativamente) fácil demostrar que IWD-UNIQUE-SOLUTION también es NP-completo bajo las mismas restricciones. Teorema 2. IWD-UNIQUE-SOLUTION es NP-completo, incluso con 2 jugadores, y con 0 y 1 siendo las únicas utilidades que ocurren en la matriz, ya sea que se permita o no la dominancia por estrategias mixtas. Prueba. Nuevamente, el problema está en NP porque podemos elegir de manera no determinista la secuencia de eliminaciones y verificar si es correcta. Para demostrar la NP-dificultad, reducimos una instancia arbitraria de IWD-STRATEGY-ELIMINATION a la siguiente instancia de IWD-UNIQUE-SOLUTION. Que todas las estrategias de cada jugador de la instancia original formen parte de la nueva instancia, y que las utilidades resultantes de los jugadores al jugar un par de estas estrategias sean las mismas. Añadimos tres estrategias adicionales σ1 r , σ2 r , σ3 r para el jugador de fila, y tres estrategias adicionales σ1 c , σ2 c , σ3 c para el jugador de columna. Que las utilidades adicionales sean las siguientes: • ur(σr, σj c) = 1 para todo σr /∈ {σ1 r , σ2 r , σ3 r } y j ∈ {2, 3}; • ur(σi r, σc) = 1 para todo i ∈ {1, 2, 3} y σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 para todo i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • y la utilidad de los jugadores de fila es 0 en todos los demás casos que involucren una nueva estrategia. • uc(σ3 r , σc) = 1 para todo σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 para todo j ∈ {2, 3} (σ∗ r es la estrategia a ser eliminada en la instancia original); • uc(σi r, σ1 c ) = 1 para todo i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • y la utilidad de los jugadores de columna es 0 en todos los demás casos que involucren una nueva estrategia. Procedemos a demostrar que las dos instancias son equivalentes. Primero supongamos que existe una solución para la instancia original de IWDSTRATEGY-ELIMINATION. Luego, realiza la misma secuencia de eliminaciones para eliminar σ∗ r en la nueva instancia IWD-UNIQUE-SOLUTION. (Esto es posible porque en cualquier etapa, cualquier dominancia débil para el jugador de fila en la instancia original sigue siendo una dominancia débil en la nueva instancia, ya que las utilidades de las dos estrategias para el jugador de fila son las mismas cuando el jugador de columna juega una de las nuevas estrategias; y lo mismo ocurre para el jugador de columna). Una vez que σ∗ r sea eliminado, permita que σ1 c elimine a σ2 c. (Se desempeña mejor contra σ2 r.) Entonces, dejemos que σ1 r elimine todas las demás estrategias restantes para el jugador de la fila. (Siempre tiene un mejor desempeño contra σ1 c o σ3 c.) Finalmente, σ1 c es la mejor respuesta única contra σ1 r entre las estrategias restantes de los jugadores de columna, así que permitamos que elimine todas las demás estrategias restantes para el jugador de columna. Por lo tanto, existe una solución para la instancia IWD-UNIQUE-SOLUTION. Ahora supongamos que existe una solución para la instancia IWD-UNIQUESOLUTION. Por el Lema 1, podemos asumir que todas las dominancias son por estrategias puras. Mostraremos que ninguna de las nuevas estrategias (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) puede eliminar a otra estrategia, ni ser eliminada antes de que σ∗ r sea eliminada. Por lo tanto, debe haber una secuencia de eliminaciones que termine con la eliminación de σ∗ r, la cual no involucre ninguna de las nuevas estrategias y, por lo tanto, sea una secuencia válida de eliminaciones en el juego original (porque todas las estrategias originales tienen el mismo rendimiento contra cada nueva estrategia). Ahora demostramos que esto es cierto agotando todas las posibilidades para la primera eliminación antes de que se elimine σ∗ r que implica una nueva estrategia. Ninguno de los σi r puede ser eliminado por un σr /∈ {σ1 r , σ2 r , σ3 r}, porque los σi r tienen un mejor desempeño contra σ1 c. σ1 r no puede eliminar ninguna otra estrategia, porque siempre tiene un desempeño inferior contra σ2 c. σ2 r y σ3 r son equivalentes desde la perspectiva de los jugadores de fila (y por lo tanto no pueden eliminarse entre sí), y no pueden eliminar ninguna otra estrategia porque siempre tienen un desempeño inferior contra σ3 c. Ninguno de los σj c puede ser eliminado por un σc /∈ {σ1 c , σ2 c , σ3 c}, porque los σj c siempre tienen un mejor desempeño contra σ1 r o σ2 r. σ1 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ∗ r o σ3 r. σ2 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ2 r o σ3 r. σ3 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ1 r o σ3 r. Por lo tanto, existe una solución para la instancia IWDSTRATEGY-ELIMINATION. Una versión ligeramente más débil de la parte del Teorema 2 que concierne la dominancia solo por estrategias puras es el resultado principal de Gilboa et al. [7]. (Además de no demostrar el resultado para la dominancia por estrategias mixtas, el resultado original era más débil porque requería utilidades {0, 1, 2, 3, 4, 5, 6, 7, 8} en lugar de solo {0, 1} (y debido a esto, nuestro Lema 1 no se puede aplicar para obtener el resultado para estrategias mixtas).) 5. DOMINANCIA (ITERADA) USANDO ESTRATEGIAS MIXTAS CON SOPORTES PEQUEÑOS Al demostrar que una estrategia es dominada por una estrategia mixta, hay varias razones para preferir exhibir una estrategia dominante que coloque probabilidad positiva en la menor cantidad posible de estrategias puras. Primero, esto reducirá el número de bits necesarios para especificar la estrategia dominante (y así la prueba de dominancia se puede comunicar más rápido): si la estrategia mixta dominante coloca probabilidad positiva en solo k estrategias, entonces se puede especificar usando k números reales para las probabilidades, más k log m (donde m es el número de estrategias para el jugador en consideración) bits para indicar qué estrategias se utilizan. Segundo, la prueba de dominancia será más clara: para una estrategia mixta dominante, es típicamente (siempre en el caso de dominancia estricta) posible distribuir parte de la probabilidad en cualquier estrategia pura no utilizada y aún así tener una estrategia dominante, pero esto oscurece cuáles estrategias puras son las clave para hacer que la estrategia mixta sea dominante. Tercero, debido a que el argumento para eliminar la estrategia dominada es más simple y fácil de entender, es más probable que sea aceptado. En cuarto lugar, el nivel de neutralidad al riesgo requerido para que el argumento funcione se reduce, al menos en el caso extremo donde se puede exhibir la dominancia de una única estrategia pura (no se requiere neutralidad al riesgo aquí). Esto motiva el siguiente problema. Definición 4 (CONJUNTO DOMINANTE MÍNIMO). Se nos dan las utilidades de los jugadores de fila de un juego en forma normal, una estrategia distinguida σ∗ para el jugador de fila, una especificación de si la dominancia debe ser estricta o débil, y un número k. Se nos pregunta si existe una estrategia mixta σ para el jugador de fila que coloque probabilidad positiva en como máximo k estrategias puras, y domine a σ∗ en el sentido requerido. Lamentablemente, este problema es NP-completo. Teorema 3. El problema del CONJUNTO DOMINANTE MÍNIMO es NP-completo, tanto para dominancia estricta como para dominancia débil. Prueba. El problema está en NP porque podemos elegir de manera no determinista un conjunto de a lo sumo k estrategias para dar probabilidad positiva, y decidir si podemos dominar a σ∗ con estas k estrategias como se describe en la Proposición 1. Para demostrar la NP-dificultad, reducimos una instancia arbitraria de COBERTURA-DE-CONJUNTOS (dado un conjunto S, subconjuntos S1, S2, . . . , Sr, y un número t, ¿puede S ser cubierto por a lo sumo t de los subconjuntos?) a la siguiente instancia de CONJUNTO-DOMINANTE-MÍNIMO. Para cada elemento s ∈ S, hay una estrategia pura σs para el jugador de la columna. Para cada subconjunto Si, hay una estrategia pura σSi para el jugador de la fila. Finalmente, está la distinguida estrategia pura σ∗ para el jugador de la fila. Las utilidades de los jugadores de la fila son las siguientes: ur(σSi , σs) = t + 1 si s ∈ Si; ur(σSi , σs) = 0 si s /∈ Si; ur(σ∗ , σs) = 1 para todo s ∈ S. Finalmente, dejamos que k = t. Ahora procedemos a demostrar que las dos instancias son equivalentes. Primero supongamos que existe una solución para la instancia de COBERTURA-CONJUNTO. Sin pérdida de generalidad, podemos asumir que hay exactamente k subconjuntos en la cobertura. Entonces, para cada Si que esté en la cobertura, dejemos que la estrategia dominante σ coloque exactamente 1 k de probabilidad en la estrategia pura correspondiente σSi. Ahora, si dejamos que n(s) sea el número de subconjuntos en la cobertura que contienen a s (observamos que n(s) ≥ 1), entonces para cada estrategia σs del jugador de la columna, la utilidad esperada de los jugadores de la fila al jugar σ cuando el jugador de la columna está jugando σs es u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs). Entonces, σ domina estrictamente (y por lo tanto también débilmente) a σ∗, y existe una solución para la instancia del conjunto de dominación mínimo. Ahora supongamos que existe una solución para la instancia de CONJUNTO-DOMINANTE-MÍNIMO. Considera las estrategias puras (a lo sumo k) de la forma σSi en las que la estrategia mixta dominante σ asigna probabilidad positiva, y deja que T sea la colección de los subconjuntos correspondientes Si. Sostenemos que T es una cubierta. Supongamos que hay algún s ∈ S que no está en ninguno de los subconjuntos en T. Entonces, si el jugador de la columna juega σs, el jugador de la fila (cuando juega σ) siempre recibirá una utilidad de 0, en contraposición a la utilidad de 1 que el jugador de la fila recibiría al jugar σ∗, contradiciendo el hecho de que σ domina a σ∗ (ya sea esta dominancia débil o estricta). Se deduce que existe una solución para la instancia de COBERTURA-DE-CONJUNTOS. Por otro lado, si requerimos que la estrategia dominante solo coloque probabilidad positiva en un número muy pequeño de estrategias puras, entonces una vez más resulta fácil verificar si una estrategia está dominada. Específicamente, para determinar si la estrategia σ∗ del jugador está dominada por una estrategia que coloca probabilidad positiva solo en k estrategias puras, simplemente podemos verificar, para cada subconjunto de k de las estrategias puras del jugador, si hay una estrategia que coloca probabilidad positiva solo en esas k estrategias y domina a σ∗, utilizando la Proposición 1. Esto solo requiere O(|Σi|k) comprobaciones. Por lo tanto, si k es una constante, esto constituye un algoritmo de tiempo polinómico. Una pregunta natural que surge a continuación es si la dominancia estricta iterada sigue siendo computacionalmente fácil cuando se requiere que las estrategias dominantes coloquen una probabilidad positiva en como máximo k estrategias puras, donde k es una constante pequeña. (Ya hemos demostrado en la Sección 4 que la dominancia débil iterada es difícil incluso cuando k = 1, es decir, solo se permite la dominancia por estrategias puras). Por supuesto, si la dominancia estricta iterada fuera independiente del camino bajo esta restricción, la facilidad computacional seguiría como lo hizo en la Sección 4. Sin embargo, resulta que esto no es así. Observación 1. Si restringimos las estrategias dominantes para asignar probabilidad positiva a lo sumo a dos estrategias puras, la dominancia estricta iterada se vuelve dependiente del camino. Prueba. Considera el siguiente juego: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Sea (i, j) el resultado en el que el jugador de la fila juega en la fila i y el jugador de la columna juega en la columna j. Dado que (1, 1), (2, 2) y (4, 3) son todos equilibrios de Nash, ninguna de las estrategias puras de los jugadores de columna será eliminada, al igual que las filas 1, 2 y 4. Ahora observamos que la aleatorización uniforme entre las filas 1 y 2 domina a la fila 3, y la aleatorización uniforme entre las filas 3 y 4 domina a la fila 5. Sin embargo, si eliminamos la fila 3 primero, se vuelve imposible dominar la fila 5 sin aleatorizar al menos 3 estrategias puras. De hecho, la dominancia estricta iterada resulta ser difícil incluso cuando k = 3. Teorema 4. Si restringimos las estrategias dominantes para colocar una probabilidad positiva en como máximo tres estrategias puras, se vuelve NP-completo decidir si una estrategia dada puede ser eliminada usando dominancia estricta iterada. 93 Prueba. El problema está en NP porque, dado una secuencia de estrategias a ser eliminadas, podemos verificar en tiempo polinómico si esta es una secuencia válida de eliminaciones (para cualquier estrategia a ser eliminada, podemos verificar, para cada subconjunto de tres otras estrategias, si hay una estrategia que coloca probabilidad positiva solo en estas tres estrategias que domina a la estrategia a ser eliminada, utilizando la Proposición 1). Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto no vacío de cláusulas C sobre un conjunto no vacío de variables V, con literales correspondientes L = {+v : v ∈ V} ∪ {−v : v ∈ V}) al siguiente juego de dos jugadores. Para cada variable v ∈ V, el jugador de la fila tiene estrategias s+v, s−v, s1 v, s2 v, s3 v, s4 v, y el jugador de la columna tiene estrategias t1 v, t2 v, t3 v, t4 v. Para cada cláusula c ∈ C, el jugador de la fila tiene una estrategia sc, y el jugador de la columna tiene una estrategia tc, así como, para cada literal l que ocurre en c, una estrategia adicional tl c. El jugador de la fila tiene dos estrategias adicionales s1 y s2. (s2 es la estrategia que estamos buscando eliminar). Finalmente, el jugador de la columna tiene una estrategia adicional t1. La función de utilidad para el jugador de la fila se da de la siguiente manera (donde ε es algún número suficientemente pequeño): • ur(s+v, tj v) = 4 si j ∈ {1, 2}, para todo v ∈ V; • ur(s+v, tj v) = 1 si j ∈ {3, 4}, para todo v ∈ V; • ur(s−v, tj v) = 1 si j ∈ {1, 2}, para todo v ∈ V; • ur(s−v, tj v) = 4 si j ∈ {3, 4}, para todo v ∈ V; • ur(s+v, t) = ur(s−v, t) = 0 para todo v ∈ V y t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 para todo v ∈ V e i ∈ {1, 2, 3, 4}; • ur(si v, t) = para todo v ∈ V, i ∈ {1, 2, 3, 4}, y t = ti v; • ur(sc, tc) = 2 para todo c ∈ C; • ur(sc, t) = 0 para todo c ∈ C y t = tc; • ur(s1, t1) = 1 + ε; • ur(s1, t) = para todo t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 para todo c ∈ C; • ur(s2, t) = 0 para todo t /∈ {t1} ∪ {tc : c ∈ C}. La función de utilidad para el jugador de la columna se da de la siguiente manera: • uc(si v, ti v) = 1 para todo v ∈ V e i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 para todo v ∈ V, i ∈ {1, 2, 3, 4}, y s = si v; • uc(sc, tc) = 1 para todo c ∈ C; • uc(sl, tc) = 1 para todo c ∈ C y l ∈ L que ocurre en c; • uc(s, tc) = 0 para todo c ∈ C y s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + para todo c ∈ C; • uc(sl, tl c) = 1 + para todo c ∈ C y l = l que ocurre en c; • uc(s, tl c) = para todo c ∈ C y s /∈ {sc} ∪ {sl : l ∈ c, l = l}; • uc(s2, t1) = 1; • uc(s, t1) = 0 para todo s = s2. Ahora demostramos que las dos instancias son equivalentes. Primero, supongamos que hay una solución para la instancia de satisfactibilidad. Entonces, considera la siguiente secuencia de eliminaciones en nuestro juego: 1. Para cada variable v que se establezca como verdadera en la asignación satisfactoria, elimine s+v con la estrategia mixta σr que coloca probabilidad 1/3 en s−v, probabilidad 1/3 en s1 v y probabilidad 1/3 en s2 v. (La utilidad esperada de jugar σr contra t1 v o t2 v es 14/3 > 4; contra t3 v o t4 v, es 4/3 > 1; y contra cualquier otra cosa es 2/3 > 0. Por lo tanto, la dominancia es válida. De manera similar, para cada variable v que se establezca como falso en la asignación satisfactoria, elimine s−v con la estrategia mixta σr que coloca probabilidad 1/3 en s+v, probabilidad 1/3 en s3 v, y probabilidad 1/3 en s4 v. (La utilidad esperada de jugar σr contra t1 v o t2 v es 4/3 > 1; contra t3 v o t4 v, es 14/3 > 4; y contra cualquier otra cosa es 2/3 > 0. Por lo tanto, la dominancia es válida. Para cada c ∈ C, elimine tc con cualquier tl c para el cual l se haya establecido como verdadero en la asignación satisfactoria. (Esta es una dominancia válida porque tl c funciona mejor que tc contra cualquier estrategia que no sea sl, y eliminamos sl en el paso 1 o en el paso 2.) 4. Finalmente, elimina s2 con s1. (Esta es una dominancia válida porque s1 tiene un mejor rendimiento que s2 contra cualquier estrategia que no esté en {tc : c ∈ C}, la cual eliminamos en el paso 3.) Por lo tanto, hay un camino de eliminación que elimina s2. Ahora, supongamos que hay un camino de eliminación que elimina s2. La estrategia que eventualmente domina a s2 debe colocar la mayor parte de su probabilidad en s1, ya que s1 es la única otra estrategia que se desempeña bien contra t1, la cual no puede ser eliminada antes que s2. Sin embargo, s1 tiene un rendimiento significativamente peor que s2 contra cualquier estrategia tc con c ∈ C, por lo que se deduce que todas estas estrategias deben ser eliminadas primero. Cada estrategia tc solo puede ser eliminada por una estrategia que coloque la mayor parte de su peso en las estrategias correspondientes tl c con l ∈ c, ya que son las únicas otras estrategias que funcionan bien contra sc, las cuales no pueden ser eliminadas antes de tc. Sin embargo, cada estrategia tl c funciona significativamente peor que tc contra sl, por lo que se deduce que para cada cláusula c, para uno de los literales l que aparecen en ella, sl debe ser eliminado primero. Ahora, las estrategias de la forma tj v nunca serán eliminadas porque son las únicas mejores respuestas a las estrategias correspondientes sj v (que, a su vez, son las mejores respuestas a las tj v correspondientes). Como resultado, si la estrategia s+v (respectivamente, s−v) es eliminada, entonces su estrategia opuesta s−v (respectivamente, s+v) ya no puede ser eliminada, por la siguiente razón. No hay otra estrategia pura restante que obtenga una utilidad significativa contra más de una de las estrategias t1 v, t2 v, t3 v, t4 v, pero s−v (respectivamente, s+v) obtiene una utilidad significativa contra las 4, y por lo tanto no puede ser dominada por una estrategia mixta que coloque una probabilidad positiva en como máximo 3 estrategias. Se deduce que para cada v ∈ V, a lo sumo una de las estrategias s+v, s−v es eliminada, de tal manera que para cada cláusula c, para uno de los literales l que aparece en ella, sl debe ser eliminada. Pero luego, establecer todas las literales l de manera que sl sea eliminado a verdadero constituye una solución a la instancia de satisfactibilidad. En la siguiente sección, regresamos al escenario donde no hay restricción en el número de estrategias puras en las que una estrategia mixta dominante puede colocar probabilidad positiva. 6. DOMINANCIA (ITERADA) EN JUEGOS BAYESIANOS Hasta ahora, nos hemos enfocado en juegos de forma normal que están representados de manera plana (es decir, cada entrada de la matriz se da explícitamente). Sin embargo, para muchos juegos, la representación plana es demasiado grande para escribirse explícitamente, y en su lugar, se necesita utilizar alguna representación que aproveche la estructura del juego. Los juegos bayesianos, además de ser de interés por sí mismos, pueden considerarse como una representación estructurada útil de los juegos en forma normal, y los estudiaremos en esta sección. En un juego bayesiano, cada jugador recibe primero información de preferencia de manera privada (el tipo de jugador) de una distribución, la cual determina la utilidad que ese jugador recibe por cada resultado del juego (es decir, el vector de acciones jugadas en el juego). Después de recibir este tipo, el jugador realiza una acción basada en él. Definición 7. Un juego bayesiano está dado por un conjunto de jugadores {1, 2, . . . , n}; y, para cada jugador i, un conjunto (finito) de acciones Ai, un espacio de tipos (finito) Θi con una distribución de probabilidad πi sobre él, y una función de utilidad ui : Θi × A1 × A2 × . . . × An → R (donde ui(θi, a1, a2, . . . , an) denota la utilidad del jugador i cuando su tipo es θi y cada jugador j juega la acción aj). Una estrategia pura en un juego bayesiano es una asignación de tipos a acciones, σi: Θi → Ai, donde σi(θi) denota la acción que el jugador i elige para el tipo θi. Cualquier vector de estrategias puras en un juego bayesiano define una utilidad (esperada) para cada jugador, y por lo tanto podemos traducir un juego bayesiano en un juego en forma normal. En este juego en forma normal, las nociones de dominancia y dominancia iterada se definen como antes. Sin embargo, la representación en forma normal del juego es exponencialmente más grande que la representación bayesiana, ya que cada jugador i tiene |Ai||Θi| estrategias puras distintas. Por lo tanto, cualquier algoritmo para juegos bayesianos que dependa de expandir el juego a su forma normal requerirá tiempo exponencial. Específicamente, nuestros resultados de facilidad para juegos en forma normal no se transfieren directamente a esta configuración. De hecho, resulta que verificar si una estrategia está dominada por una estrategia pura es difícil en juegos bayesianos. Teorema 5. En un juego bayesiano, es NP-completo decidir si una estrategia pura dada σr : Θr → Ar está dominada por alguna otra estrategia pura (tanto para la dominancia estricta como débil), incluso cuando la distribución de los jugadores de fila sobre los tipos es uniforme. Prueba. El problema está en NP porque es fácil verificar si una estrategia dominante candidata es realmente una estrategia dominante. Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto de cláusulas C utilizando variables de V) al siguiente juego bayesiano. Que el conjunto de acciones de los jugadores de la fila sea Ar = {t, f, 0} y que el conjunto de acciones de los jugadores de la columna sea Ac = {ac : c ∈ C}. Que el conjunto de tipos de jugadores de fila sea Θr = {θv : v ∈ V}, con una distribución πr que es uniforme. Que la función de utilidad de los jugadores de la fila sea la siguiente: • ur(θv, 0, ac) = 0 para todo v ∈ V y c ∈ C; • ur(θv, b, ac) = |V | para todo v ∈ V, c ∈ C y b ∈ {t, f} tal que establecer v como b satisface c; • ur(θv, b, ac) = −1 para todo v ∈ V, c ∈ C y b ∈ {t, f} tal que establecer v como b no satisface c. En general, un jugador también puede recibir una señal sobre las preferencias de los otros jugadores, pero aquí no nos ocuparemos de eso. Que la estrategia pura que se va a dominar sea aquella que juega 0 para cada tipo. Mostramos que la estrategia está dominada por una estrategia pura si y solo si hay una solución a la instancia de satisfactibilidad. Primero, supongamos que hay una solución para la instancia de satisfactibilidad. Entonces, sea σd r dado por: σd r (θv) = t si v se establece como verdadero en la solución de la instancia de satisfactibilidad, y σd r (θv) = f en caso contrario. Entonces, en contra de cualquier acción ac realizada por el jugador de la columna, existe al menos un tipo θv tal que o bien +v ∈ c y σd r (θv) = t, o bien −v ∈ c y σd r (θv) = f. Por lo tanto, la utilidad esperada de los jugadores de la fila contra la acción ac es al menos |V| |V| − |V|−1 |V| = 1 |V| > 0. Entonces, σd r es una estrategia dominante. Ahora, supongamos que existe una estrategia pura dominante σd r. Esta estrategia dominante debe jugar t o f al menos para un tipo. Por lo tanto, en contra de cualquier ac por el jugador de la columna, debe haber al menos algún tipo θv para el cual ur(θv, σd r (θv), ac) > 0. Es decir, debe haber al menos una variable v tal que al establecer v en σd r (θv) satisfaga c. Pero entonces, al establecer cada v en σd r (θv) deben satisfacerse todas las cláusulas. Entonces, existe una asignación satisfactoria. Sin embargo, resulta que podemos modificar los programas lineales de la Proposición 1 para obtener un algoritmo de tiempo polinómico para verificar si una estrategia está dominada por una estrategia mixta en juegos bayesianos. Teorema 6. En un juego bayesiano, se puede decidir en tiempo polinómico si una estrategia dada (posiblemente mixta) σr está dominada por alguna otra estrategia mixta, utilizando programación lineal (tanto para dominancia estricta como débil). Prueba. Podemos modificar los programas lineales presentados en la Proposición 1 de la siguiente manera. Para la dominancia estricta, asumiendo nuevamente sin pérdida de generalidad que todas las utilidades en el juego son positivas, utilice el siguiente programa lineal (en el cual pσr r (θr, ar) es la probabilidad de que σr, la estrategia a ser dominada, coloque en ar para el tipo θr): minimizar θr∈Θr ar∈Ar pr(ar) tal que para cualquier ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); para cualquier θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1. Suponiendo que π(θr) > 0 para todo θr ∈ Θr, este programa devolverá un valor objetivo menor que |Θr| si y solo si σr está estrictamente dominado, mediante un razonamiento similar al realizado en la Proposición 1. Para la dominancia débil, utiliza el siguiente programa lineal: maximizar ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) tal que para cualquier ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); para cualquier θr ∈ Θr, ar∈Ar pr(θr, ar) = 1. Este programa devolverá un valor objetivo mayor que 0 si y solo si σr está débilmente dominado, mediante un razonamiento similar al realizado en la Proposición 1. Ahora pasamos al dominio iterado en juegos bayesianos. Ingenuamente, uno podría argumentar que la dominancia iterada en juegos bayesianos de 95 siempre requiere un número exponencial de pasos cuando se puede eliminar una fracción significativa de las estrategias puras de los juegos, ya que hay un número exponencial de estrategias puras. Sin embargo, este no es un argumento muy sólido porque muchas veces podemos eliminar exponencialmente muchas estrategias puras en un solo paso. Por ejemplo, si para algún tipo θr ∈ Θr tenemos, para todo ac ∈ Ac, que u(θr, a1 r, ac) > u(θr, a2 r, ac), entonces cualquier estrategia pura para el jugador de la fila que juega la acción a2 r para el tipo θr está dominada (por la estrategia que juega la acción a1 r para el tipo θr en su lugar) - y hay exponencialmente muchas (|Ar||Θr|−1) tales estrategias. Por lo tanto, es concebible que solo necesitemos un número polinomial de eliminaciones de colecciones de estrategias de un jugador. Sin embargo, el siguiente teorema muestra que este no es el caso, al dar un ejemplo donde se requiere un número exponencial de iteraciones (es decir, alternancias entre los jugadores en la eliminación de estrategias). (Enfatizamos que este no es un resultado sobre complejidad computacional). Teorema 7. Incluso en juegos bayesianos simétricos de 3 jugadores, la dominancia iterada por estrategias puras puede requerir un número exponencial de iteraciones (tanto para la dominancia estricta como débil), incluso con solo tres acciones por jugador. Prueba. Que cada jugador i ∈ {1, 2, 3} tenga n + 1 tipos θ1 i , θ2 i , . . . , θn+1 i. Que cada jugador i tenga 3 acciones ai, bi, ci, y que la función de utilidad de cada jugador esté definida de la siguiente manera. (En lo siguiente, i + 1 e i + 2 son abreviaturas de i + 1 (mod 3) e i + 2 (mod 3) cuando se utilizan como índices de jugador. Además, −∞ puede ser reemplazado por un número suficientemente negativo. Finalmente, δ y deberían elegirse muy pequeños (incluso en comparación con 2−(n+1)), y deberían ser más del doble de grandes que δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 para si+1 = ci+1 o si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − para si+1 = ai+1 y si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ para si+1 = ai+1 o si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ para todos los si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ para todos los si+1, si+2 cuando j > 1; • ui(θj i ; bi, si+1, si+2) = − para todos los si+1, si+2 cuando j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 para todos los si+1 cuando j > 1; • ui(θj i ; ci, si+1, si+2) = δ− para todos los si+1 y si+2 = ci+2 cuando j > 1. Que la distribución sobre los tipos de cada jugador esté dada por p(θj i ) = 2−j (con la excepción de que p(θ2 i ) = 2−2 +2−(n+1) ). Estaremos interesados en eliminar estrategias de la siguiente forma: jugar bi para el tipo θ1 i, y jugar bi o ci de lo contrario. Dado que la función de utilidad es la misma para cualquier tipo θj i con j > 1, estas estrategias están efectivamente definidas por la probabilidad total que asignan a ci,8, que es t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j donde tj i = 1 si el jugador i 8. Observa que las estrategias siguen siendo estrategias puras; la probabilidad asignada a una acción por una estrategia aquí es simplemente la suma de las probabilidades de los tipos para los cuales la estrategia elige esa acción. juega ci para el tipo θj i, y 0 en caso contrario. Esta probabilidad es diferente para cualquier par de estrategias diferentes de la forma dada, y tenemos exponencialmente muchas estrategias diferentes de la forma dada. Para cualquier probabilidad q que pueda expresarse como t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (con todos los tj ∈ {0, 1}), dejemos que σi(q) denote la estrategia (única) de la forma dada para el jugador i que coloca una probabilidad total de q en ci. Cualquier estrategia que juegue ci para el tipo θ1 i o ai para algún tipo θj i con j > 1 puede ser eliminada inmediatamente. Mostraremos que, después de eso, debemos eliminar primero las estrategias σi(q) con q alto, trabajando lentamente hacia abajo hasta aquellas con q más bajo. Reclamo 1: Si σi+1(q) y σi+2(q) aún no han sido eliminados, y q < q, entonces σi(q) aún no puede ser eliminado. Prueba: Primero, demostramos que ninguna estrategia σi(q) puede eliminar a σi(q). Contra σi+1(q), σi+2(q), la utilidad de jugar σi(p) es − + p · δ − p · q /2. Por lo tanto, cuando q = 0, es mejor establecer p lo más alto posible (y observamos que σi+1(0) y σi+2(0) no han sido eliminados), pero cuando q > 0, es mejor establecer p lo más bajo posible porque δ < q /2. Por lo tanto, ya sea que q > q o q < q, σi(q) siempre será estrictamente mejor que σi(q) contra algunas estrategias restantes de los oponentes. Por lo tanto, ninguna estrategia σi(q) puede eliminar a σi(q). Las únicas otras estrategias puras que podrían dominar a σi(q) son estrategias que juegan ai para el tipo θ1 i, y bi o ci para todos los demás tipos. Tomemos tal estrategia y supongamos que juega c con probabilidad p. Contra σi+1(q), σi+2(q) (que aún no han sido eliminadas), la utilidad de jugar esta estrategia es −(q)2 /2 − /2 + p · δ − p · q /2. Por otro lado, jugar σi(q) da como resultado − + q · δ − q · q /2. Dado que q > q, tenemos −(q )2 /2 < −q · q /2, y dado que δ y son pequeños, se deduce que σi(q) recibe una utilidad mayor. Por lo tanto, ninguna estrategia domina a σi(q), lo que demuestra la afirmación. Afirmación 2: Si para todo q > q, σi+1(q) y σi+2(q) han sido eliminados, entonces σi(q) puede ser eliminado. Prueba: Considera la estrategia para el jugador i que juega ai para el tipo θ1 i, y bi para todos los demás tipos (llamemos a esta estrategia σi); afirmamos que σi domina a σi(q). Primero, si alguno de los otros jugadores k juega ak para θ1 k, entonces σi se desempeña mejor que σi(q) (que recibe −∞ en algunos casos). Dado que las estrategias para el jugador k que juega ck para el tipo θ1 k, o ak para algún tipo θj k con j > 1, ya han sido eliminadas, todo lo que queda por comprobar es que σi sea mejor que σi(q) siempre que los otros dos jugadores jueguen estrategias de la siguiente forma: jugar bk para el tipo θ1 k, y jugar uno de bk o ck en caso contrario. Observamos que entre estas estrategias, no queda ninguna que coloque una probabilidad mayor que q en ck. Si dejamos que qk denote la probabilidad con la que el jugador k juega ck, la utilidad esperada de jugar σi es −qi+1 · qi+2/2 − /2. Por otro lado, la utilidad de jugar σi(q) es − + q · δ − q · qi+2/2. Dado que qi+1 ≤ q, la diferencia entre estas dos expresiones es al menos /2 − δ, la cual es positiva. Se deduce que σi domina a σi(q). A partir de la Reclamación 2, se deduce que todas las estrategias de la forma σi(q) serán eliminadas eventualmente. Sin embargo, la Reclamación 1 muestra que no podemos avanzar y eliminar múltiples estrategias de este tipo para un jugador, a menos que al menos otro jugador mantenga simultáneamente las estrategias eliminadas: cada vez que se elimina un σi(q) tal que σi+1(q) y σi+2(q) aún no han sido eliminados, necesitamos eliminar una de las dos últimas estrategias antes de que se pueda eliminar cualquier σi(q) con q > q, es decir, necesitamos alternar entre jugadores. Dado que hay exponencialmente muchas estrategias de la forma σi(q), se sigue que la eliminación iterada requerirá exponencialmente muchas iteraciones para completarse. Por lo tanto, un algoritmo eficiente para la dominancia iterada (estricta o débil) por estrategias puras en juegos bayesianos, si existe, debe ser capaz de realizar (al menos parte de) muchas iteraciones en un solo paso del algoritmo (porque si cada paso solo realizara una sola iteración, necesitaríamos exponencialmente muchos pasos). Interesantemente, Knuth et al. [11] argumentan que la dominancia iterada parece ser un problema inherentemente secuencial (a la luz de su resultado de que la dominancia muy débil iterada es P-completa, es decir, aparentemente no paralelizable de manera eficiente), lo que sugiere que la agregación de muchas iteraciones puede ser difícil. 7. CONCLUSIONES Aunque el concepto de equilibrio de Nash se estudia cada vez más intensamente en nuestra comunidad, el concepto quizás más elemental de dominancia (iterada) ha recibido mucha menos atención. En este artículo estudiamos varios aspectos computacionales de este concepto. Primero estudiamos tanto la dominancia estricta como la débil (no iterada), y demostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta puede hacerse en tiempo polinómico utilizando la resolución de un único programa lineal. Luego pasamos a la dominancia iterada. Mostramos que determinar si existe algún camino que elimine una estrategia dada es NP-completo con dominancia débil iterada. Esto nos permitió también demostrar que determinar si existe un camino que conduzca a una solución única es NP-completo. Ambos resultados se mantienen tanto con como sin dominancia de estrategias mixtas. (Una versión más débil del segundo resultado (solo sin dominancia de estrategias mixtas) ya se conocía [7].) La dominancia estricta iterada, por otro lado, es independiente del camino (tanto con como sin dominancia por estrategias mixtas) y, por lo tanto, puede realizarse en tiempo polinómico. Luego estudiamos qué sucede cuando la estrategia dominante puede asignar una probabilidad positiva solo a unas pocas estrategias puras. Primero, demostramos que encontrar la estrategia dominante con el tamaño de soporte mínimo es NP-completo (tanto para dominancia estricta como débil). Luego, demostramos que la dominancia estricta iterada se vuelve dependiente del camino cuando hay un límite en el tamaño del soporte de las estrategias dominantes, y que decidir si una estrategia dada puede ser eliminada por dominancia estricta iterada bajo esta restricción es NP-completo (incluso cuando el límite en el tamaño del soporte es 3). Finalmente, estudiamos la dominancia y la dominancia iterada en juegos bayesianos, como un ejemplo de un lenguaje de representación conciso para juegos en forma normal que es interesante por sí mismo. Mostramos que, a diferencia de los juegos en forma normal, decidir si una estrategia pura dada está dominada por otra estrategia pura en un juego bayesiano es NP-completo (tanto con dominancia estricta como débil); sin embargo, decidir si una estrategia está dominada por alguna estrategia mixta aún se puede hacer en tiempo polinómico con la resolución de un único programa lineal (tanto con dominancia estricta como débil). Finalmente, demostramos que la dominancia iterada utilizando estrategias puras puede requerir un número exponencial de iteraciones en un juego bayesiano (tanto con dominancia estricta como débil). Hay varias vías para investigaciones futuras. Primero, está la pregunta abierta de si es posible completar la dominancia iterada en juegos bayesianos en tiempo polinómico (aunque demostramos que a veces se requiere un número exponencial de alternancias entre los jugadores para eliminar estrategias). Segundo, podemos estudiar los aspectos computacionales del dominio (iterado) en representaciones concisas de juegos de forma normal que no sean juegos bayesianos, por ejemplo, en juegos gráficos o juegos de grafo de efecto local/acción. (Ya se ha estudiado cómo realizar eficientemente el dominio muy débil iterado en juegos estocásticos parcialmente observables). Finalmente, podemos preguntarnos si algunos de los algoritmos que describimos (como el de dominancia estricta iterada con estrategias mixtas) pueden ser optimizados para ser más rápidos. 8. REFERENCIAS [1] Krzysztof R. Apt. Pruebas uniformes de independencia del orden para varios procedimientos de eliminación de estrategias. Contribuciones a la Economía Teórica, 4(1), 2004. [2] Nivan A. R. Bhat y Kevin Leyton-Brown. Calculando equilibrios de Nash de juegos de gráficos de acción. En UAI, 2004. [3] Ben Blum, Christian R. Shelton y Daphne Koller. Un método de continuación para equilibrios de Nash en juegos estructurados. En IJCAI, 2003. [4] Vincent Conitzer y Tuomas Sandholm. Resultados de complejidad sobre equilibrios de Nash. En IJCAI, páginas 765-771, 2003. [5] Drew Fudenberg y Jean Tirole. Teoría de juegos. MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, y Eitan Zemel. En el orden de eliminar estrategias dominadas. Cartas de Investigación Operativa, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai y Eitan Zemel. La complejidad de eliminar estrategias dominadas. Matemáticas de la Investigación de Operaciones, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein y Shlomo Zilberstein. Programación dinámica para juegos estocásticos parcialmente observables. En AAAI, páginas 709-715, 2004. [9] Michael Kearns, Michael Littman y Satinder Singh. Modelos gráficos para teoría de juegos. En UAI, 2001. [10] Leonid Khachiyan. Un algoritmo polinómico en programación lineal. Matemática soviética. Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou y John N Tsitsiklis. Una nota sobre la eliminación de estrategias en juegos bimatrix. Cartas de Investigación Operativa, 7(3):103-107, 1988. [12] Kevin Leyton-Brown y Moshe Tennenholtz. Juegos de efecto local. En IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis y Aranyak Mehta. Jugando juegos grandes utilizando estrategias simples. En ACM-EC, páginas 36-41, 2003. [14] Michael Littman y Peter Stone. Un algoritmo de equilibrio de Nash de tiempo polinómico para juegos repetidos. En ACM-EC, páginas 48-54, 2003. [15] Leslie M. Marx y Jeroen M. Swinkels. Independencia del orden para la dominancia débil iterada. Juegos y Comportamiento Económico, 18:219-245, 1997. [16] Leslie M. Marx y Jeroen M. Swinkels. Corrección, independencia del orden para la dominancia débil iterada. Juegos y Comportamiento Económico, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston y Jerry R. Green. Teoría microeconómica. Oxford University Press, 1995. [18] Roger Myerson.\nEditorial de la Universidad de Oxford, 1995. [18] Roger Myerson. Teoría de juegos: Análisis de conflictos. Harvard University Press, Cambridge, 1991. [19] Martin J Osborne y Ariel Rubinstein. Un curso de Teoría de Juegos. MIT Press, 1994. [20] Christos Papadimitriou. \n\nMIT Press, 1994. [20] Christos Papadimitriou. Algoritmos, juegos e Internet. En STOC, páginas 749-753, 2001. [21] Ryan Porter, Eugene Nudelman y Yoav Shoham. Métodos de búsqueda simples para encontrar un equilibrio de Nash. En AAAI, páginas 664-669, 2004. 97 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "game theory": {
            "translated_key": "teoría de juegos",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Complexity of (Iterated) Dominance∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using dominance and iterated dominance.",
                "We first study both strict and weak dominance (not iterated), and show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then move on to iterated dominance.",
                "We show that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allows us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then study what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we show that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we show that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we study Bayesian games.",
                "We show that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak ∗ This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858, and a Sloan Fellowship. dominance).",
                "Finally, we show that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent systems with self-interested agents, the optimal action for one agent may depend on the actions taken by other agents.",
                "In such settings, the agents require tools from <br>game theory</br> to rationally decide on an action.",
                "<br>game theory</br> offers various formal models of strategic settings-the best-known of which is a game in normal (or matrix) form, specifying a utility (payoff) for each agent for each combination of strategies that the agents choose-as well as solution concepts, which, given a game, specify which outcomes are reasonable (under various assumptions of rationality and common knowledge).",
                "Probably the best-known (and certainly the most-studied) solution concept is that of Nash equilibrium.",
                "A Nash equilibrium specifies a strategy for each player, in such a way that no player has an incentive to (unilaterally) deviate from the prescribed strategy.",
                "Recently, numerous papers have studied computing Nash equilibria in various settings [9, 4, 12, 3, 13, 14], and the complexity of constructing a Nash equilibrium in normal form games has been labeled one of the two most important open problems on the boundary of P today [20].",
                "The problem of computing solutions according to the perhaps more elementary solution concepts of dominance and iterated dominance has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the <br>game theory</br> community [7].1 ) A strategy strictly dominates another strategy if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one.",
                "The idea is that dominated strategies can be eliminated from consideration.",
                "In iterated dominance, the elimination proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating strategy no longer needs to perform better than or as well as the dominated strategy against opponent strategies that were eliminated in earlier rounds.",
                "Computing solutions according to (iterated) dominance is important for at least the following reasons: 1) it can be computationally easier than computing (for instance) a Nash equilibrium (and therefore it can be useful as a preprocessing step in computing a Nash equilibrium), and 2) (iterated) dominance requires a weaker rationality assumption on the players than (for instance) Nash equilibrium, and therefore solutions derived according to it are more likely to occur.",
                "In this paper, we study some fundamental computational questions concerning dominance and iterated dominance, including how hard it is to check whether a given strategy can be eliminated by each of the variants of these notions.",
                "The rest of the paper is organized as follows.",
                "In Section 2, we briefly review definitions and basic properties of normal form games, strict and weak dominance, and iterated strict and weak dominance.",
                "In the remaining sections, we study computational aspects of dominance and iterated dominance.",
                "In Section 3, we study one-shot (not iterated) dominance.",
                "In Section 4, we study iterated dominance.",
                "In Section 5, we study dominance and iterated dominance when the dominating strategy can only place probability on a few pure strategies.",
                "Finally, in Section 6, we study dominance and iterated dominance in Bayesian games. 2.",
                "DEFINITIONS AND BASIC PROPERTIES In this section, we briefly review normal form games, as well as dominance and iterated dominance (both strict and weak).",
                "An n-player normal form game is defined as follows.",
                "Definition 1.",
                "A normal form game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of pure strategies Σi and a utility function ui : Σ1 × Σ2 × . . . × Σn → R (where ui(σ1, σ2, . . . , σn) denotes player is utility when each player j plays action σj).",
                "The two main notions of dominance are defined as follows.",
                "Definition 2.",
                "Player is strategy σi is said to be strictly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "Player is strategy σi is said to be weakly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) ≥ ui(σi, σ−i), and for at least one vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "In this definition, it is sometimes allowed for the dominating strategy σi to be a mixed strategy, that is, a probability distribution over pure strategies.",
                "In this case, the utilities in dominance altogether.",
                "For example, simple dominance checks are sometimes used as a subroutine in searching for Nash equilibria [21]. the definition are the expected utilities.2 There are other notions of dominance, such as very weak dominance (in which no strict inequality is required, so two strategies can dominate each other), but we will not study them here.",
                "When we are looking at the dominance relations for player i, the other players (−i) can be thought of as a single player.3 Therefore, in the rest of the paper, when we study one-shot (not iterated) dominance, we will focus without loss of generality on two-player games.4 In two-player games, we will generally refer to the players as r (row) and c (column) rather than 1 and 2.",
                "In iterated dominance, dominated strategies are removed from the game, and no longer have any effect on future dominance relations.",
                "Iterated dominance can eliminate more strategies than dominance, as follows. σr may originally not dominate σr because the latter performs better against σc; but then, once σc is removed because it is dominated by σc, σr dominates σr, and the latter can be removed.",
                "For example, in the following game, R can be removed first, after which D is dominated.",
                "L R U 1, 1 0, 0 D 0, 1 1, 0 Either strict or weak dominance can be used in the definition of iterated dominance.",
                "We note that the process of iterated dominance is never helped by removing a dominated mixed strategy, for the following reason.",
                "If σi gives player i a higher utility than σi against mixed strategy σj for player j = i (and strategies σ−{i,j} for the other players), then for at least one pure strategy σj that σj places positive probability on, σi must perform better than σi against σj (and strategies σ−{i,j} for the other players).",
                "Thus, removing the mixed strategy σj does not introduce any new dominances.",
                "More detailed discussions and examples can be found in standard texts on microeconomics or <br>game theory</br> [17, 5].",
                "We are now ready to move on to the core of this paper. 3.",
                "DOMINANCE (NOT ITERATED) In this section, we study the notion of one-shot (not iterated) dominance.",
                "As a first observation, checking whether a given strategy is strictly (weakly) dominated by some pure strategy is straightforward, by checking, for every pure strategy for that player, whether the latter strategy performs strictly better against all the opponents strategies (at least as well against all the opponents strategies, and strictly 2 The dominated strategy σi is, of course, also allowed to be mixed, but this has no technical implications for the paper: when we study one-shot dominance, we ask whether a given strategy is dominated, and it does not matter whether the given strategy is pure or mixed; when we study iterated dominance, there is no use in eliminating mixed strategies, as we will see shortly. 3 This player may have a very large strategy space (one pure strategy for every vector of pure strategies for the players that are being replaced).",
                "Nevertheless, this will not result in an increase in our representation size, because the original representation already had to specify utilities for each of these vectors. 4 We note that a restriction to two-player games would not be without loss of generality for iterated dominance.",
                "This is because for iterated dominance, we need to look at the dominated strategies of each individual player, so we cannot merge any players. 89 better against at least one).5 Next, we show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time by solving a single linear program. (Similar linear programs have been given before [18]; we present the result here for completeness, and because we will build on the linear programs given below in Theorem 6.)",
                "Proposition 1.",
                "Given the row players utilities, a subset Dr of the row players pure strategies Σr, and a distinguished strategy σ∗ r for the row player, we can check in time polynomial in the size of the game (by solving a single linear program of polynomial size) whether there exists some mixed strategy σr, that places positive probability only on strategies in Dr and dominates σ∗ r , both for strict and for weak dominance.",
                "Proof.",
                "Let pdr be the probability that σr places on dr ∈ Dr. We will solve a single linear program in each of our algorithms; linear programs can be solved in polynomial time [10].",
                "For strict dominance, the question is whether the pdr can be set so that for every pure strategy for the column player σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc).",
                "Because the inequality must be strict, we cannot solve this directly by linear programming.",
                "We proceed as follows.",
                "Because the game is finite, we may assume without loss of generality that all utilities are positive (if not, simply add a constant to all utilities.)",
                "Solve the following linear program: minimize dr∈Dr pdr such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc).",
                "If σ∗ r is strictly dominated by some mixed strategy, this linear program has a solution with objective value < 1. (The dominating strategy is a feasible solution with objective value exactly 1.",
                "Because no constraint is binding for this solution, we can reduce one of the probabilities slightly without affecting feasibility, thereby obtaining a solution with objective value < 1.)",
                "Moreover, if this linear program has a solution with objective value < 1, there is a mixed strategy strictly dominating σ∗ r , which can be obtained by taking the LP solution and adding the remaining probability to any strategy (because all the utilities are positive, this will add to the left side of any inequality, so all inequalities will become strict).",
                "For weak dominance, we can solve the following linear program: maximize σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1.",
                "If σ∗ r is weakly dominated by some mixed strategy, then that mixed strategy is a feasible solution to this program with objective value > 0, because for at least one strategy σc ∈ Σc we have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0.",
                "On the other hand, if this program has a solution with objective value > 0, then for at least one strategy σc ∈ Σc we 5 Recall that the assumption of a single opponent (that is, the assumption of two players) is without loss of generality for one-shot dominance. must have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, and thus the linear programs solution is a weakly dominating mixed strategy. 4.",
                "ITERATED DOMINANCE We now move on to iterated dominance.",
                "It is well-known that iterated strict dominance is path-independent [6, 19]that is, if we remove dominated strategies until no more dominated strategies remain, in the end the remaining strategies for each player will be the same, regardless of the order in which strategies are removed.",
                "Because of this, to see whether a given strategy can be eliminated by iterated strict dominance, all that needs to be done is to repeatedly remove strategies that are strictly dominated, until no more dominated strategies remain.",
                "Because we can check in polynomial time whether any given strategy is dominated (whether or not dominance by mixed strategies is allowed, as described in Section 3), this whole procedure takes only polynomial time.",
                "In the case of iterated dominance by pure strategies with two players, Knuth et al. [11] slightly improve on (speed up) the straightforward implementation of this procedure by keeping track of, for each ordered pair of strategies for a player, the number of opponent strategies that prevent the first strategy from dominating the second.",
                "Hereby the runtime for an m × n game is reduced from O((m + n)4 ) to O((m + n)3 ). (Actually, they only study very weak dominance (for which no strict inequalities are required), but the approach is easily extended.)",
                "In contrast, iterated weak dominance is known to be pathdependent.6 For example, in the following game, using iterated weak dominance we can eliminate M first, and then D, or R first, and then U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Therefore, while the procedure of removing weakly dominated strategies until no more weakly dominated strategies remain can certainly be executed in polynomial time, which strategies survive in the end depends on the order in which we remove the dominated strategies.",
                "We will investigate two questions for iterated weak dominance: whether a given strategy is eliminated in some path, and whether there is a path to a unique solution (one pure strategy left per player).",
                "We will show that both of these problems are computationally hard.",
                "Definition 3.",
                "Given a game in normal form and a distinguished strategy σ∗ , IWD-STRATEGY-ELIMINATION asks whether there is some path of iterated weak dominance that eliminates σ∗ .",
                "Given a game in normal form, IWDUNIQUE-SOLUTION asks whether there is some path of iterated weak dominance that leads to a unique solution (one strategy left per player).",
                "The following lemma shows a special case of normal form games in which allowing for weak dominance by mixed strategies (in addition to weak dominance by pure strategies) does 6 There is, however, a restriction of weak dominance called nice weak dominance which is path-independent [15, 16].",
                "For an overview of path-independence results, see Apt [1]. 90 not help.",
                "We will prove the hardness results in this setting, so that they will hold whether or not dominance by mixed strategies is allowed.",
                "Lemma 1.",
                "Suppose that all the utilities in a game are in {0, 1}.",
                "Then every pure strategy that is weakly dominated by a mixed strategy is also weakly dominated by a pure strategy.",
                "Proof.",
                "Suppose pure strategy σ is weakly dominated by mixed strategy σ∗ .",
                "If σ gets a utility of 1 against some opponent strategy (or vector of opponent strategies if there are more than 2 players), then all the pure strategies that σ∗ places positive probability on must also get a utility of 1 against that opponent strategy (or else the expected utility would be smaller than 1).",
                "Moreover, at least one of the pure strategies that σ∗ places positive probability on must get a utility of 1 against an opponent strategy that σ gets 0 against (or else the inequality would never be strict).",
                "It follows that this pure strategy weakly dominates σ.",
                "We are now ready to prove the main results of this section.",
                "Theorem 1.",
                "IWD-STRATEGY-ELIMINATION is NPcomplete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can easily check whether this is a valid sequence of eliminations (even when dominance by mixed strategies is allowed, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following IWD-STRATEGY-ELIMINATION instance. (In this instance, we will specify that certain strategies are uneliminable.",
                "A strategy σr can be made uneliminable, even when 0 and 1 are the only allowed utilities, by adding another strategy σr and another opponent strategy σc, so that: 1. σr and σr are the only strategies that give the row player a utility of 1 against σc. 2. σr and σr always give the row player the same utility. 3. σc is the only strategy that gives the column player a utility of 1 against σr, but otherwise σc always gives the column player utility 0.",
                "This makes it impossible to eliminate any of these three strategies.",
                "We will not explicitly specify the additional strategies to make the proof more legible.)",
                "In this proof, we will denote row player strategies by s, and column player strategies by t, to improve legibility.",
                "Let the row players pure strategy set be given as follows.",
                "For every variable v ∈ V , the row player has corresponding strategies s1 +v, s2 +v, s1 −v, s2 −v.",
                "Additionally, the row player has the following 2 strategies: s1 0 and s2 0, where s2 0 = σ∗ r (that is, it is the strategy we seek to eliminate).",
                "Finally, for every clause c ∈ C, the row player has corresponding strategies s1 c (uneliminable) and s2 c. Let the column players pure strategy set be given as follows.",
                "For every variable v ∈ V , the column player has a corresponding strategy tv.",
                "For every clause c ∈ C, the column player has a corresponding strategy tc, and additionally, for every literal l ∈ L that occurs in c, a strategy tc,l.",
                "For every variable v ∈ V , the column player has corresponding strategies t+v, t−v (both uneliminable).",
                "Finally, the column player has three additional strategies: t1 0 (uneliminable), t2 0, and t1.",
                "The utility function for the row player is given as follows: • ur(s1 +v, tv) = 0 for all v ∈ V ; • ur(s2 +v, tv) = 1 for all v ∈ V ; • ur(s1 −v, tv) = 1 for all v ∈ V ; • ur(s2 −v, tv) = 0 for all v ∈ V ; • ur(s1 +v, t1) = 1 for all v ∈ V ; • ur(s2 +v, t1) = 0 for all v ∈ V ; • ur(s1 −v, t1) = 0 for all v ∈ V ; • ur(s2 −v, t1) = 1 for all v ∈ V ; • ur(sb +v, t+v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sb −v, t−v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sl, t) = 0 otherwise for all l ∈ L and t ∈ S2; • ur(s1 0, tc) = 0 for all c ∈ C; • ur(s2 0, tc) = 1 for all c ∈ C; • ur(sb 0, t1 0) = 1 for all b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 otherwise for all b ∈ {1, 2} and t ∈ S2; • ur(sb c, t) = 0 otherwise for all c ∈ C and b ∈ {1, 2}; and the row players utility is 0 in every other case.",
                "The utility function for the column player is given as follows: • uc(s, tv) = 0 for all v ∈ V and s ∈ S1; • uc(s, t1) = 0 for all s ∈ S1; • uc(s2 l , tc) = 1 for all c ∈ C and l ∈ L where l ∈ c (literal l occurs in clause c); • uc(s2 l2 , tc,l1 ) = 1 for all c ∈ C and l1, l2 ∈ L, l1 = l2 where l2 ∈ c; • uc(s1 c, tc) = 1 for all c ∈ C; • uc(s2 c, tc) = 0 for all c ∈ C; • uc(sb c, tc,l) = 1 for all c ∈ C, l ∈ L, and b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 otherwise for all c ∈ C and l ∈ L; and the column players utility is 0 in every other case.",
                "We now show that the two instances are equivalent.",
                "First, suppose there is a solution to the satisfiability instance: that is, a truth-value assignment to the variables in V such that all clauses are satisfied.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the assignment, eliminate tv (which gives the column player utility 0 everywhere). 2.",
                "Then, for every variable v that is set to true in the assignment, eliminate s2 +v using s1 +v (which is possible because tv has been eliminated, and because t1 has not been eliminated (yet)). 3.",
                "Now eliminate t1 (which gives the column player utility 0 everywhere). 4.",
                "Next, for every variable v that is set to false in the assignment, eliminate s2 −v using s1 −v (which is possible because t1 has been eliminated, and because tv has not been eliminated (yet)). 5.",
                "For every clause c which has the variable corresponding to one of its positive literals l = +v set to true in the assignment, eliminate tc using tc,l (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 6.",
                "For every clause c which has the variable corresponding to one of its negative literals l = −v set to false in the assignment, eliminate tc using tc,l 91 (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 7.",
                "Because the assignment satisfied the formula, all the tc have now been eliminated.",
                "Thus, we can eliminate s2 0 = σ∗ r using s1 0.",
                "It follows that there is a solution to the IWD-STRATEGY-ELIMINATION instance.",
                "Now suppose there is a solution to the IWD-STRATEGYELIMINATION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We first observe that only s1 0 can eliminate s2 0 = σ∗ r , because it is the only other strategy that gets the row player a utility of 1 against t1 0, and t1 0 is uneliminable.",
                "However, because s2 0 performs better than s1 0 against the tc strategies, it follows that all of the tc strategies must be eliminated.",
                "For each c ∈ C, the strategy tc can only be eliminated by one of the strategies tc,l (with the same c), because these are the only other strategies that get the column player a utility of 1 against s1 c, and s1 c is uneliminable.",
                "But, in order for some tc,l to eliminate tc, s2 l must be eliminated first.",
                "Only s1 l can eliminate s2 l , because it is the only other strategy that gets the row player a utility of 1 against tl, and tl is uneliminable.",
                "We next show that for every v ∈ V only one of s2 +v, s2 −v can be eliminated.",
                "This is because in order for s1 +v to eliminate s2 +v, tv needs to have been eliminated and t1, not (so tv must be eliminated before t1); but in order for s1 −v to eliminate s2 −v, t1 needs to have been eliminated and tv, not (so t1 must be eliminated before tv).",
                "So, set v to true if s2 +v is eliminated, and to false otherwise Because by the above, for every clause c, one of the s2 l with l ∈ c must be eliminated, it follows that this is a satisfying assignment to the satisfiability instance.",
                "Using Theorem 1, it is now (relatively) easy to show that IWD-UNIQUE-SOLUTION is also NP-complete under the same restrictions.",
                "Theorem 2.",
                "IWD-UNIQUE-SOLUTION is NP-complete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "Again, the problem is in NP because we can nondeterministically choose the sequence of eliminations and verify whether it is correct.",
                "To show NP-hardness, we reduce an arbitrary IWD-STRATEGY-ELIMINATION instance to the following IWD-UNIQUE-SOLUTION instance.",
                "Let all the strategies for each player from the original instance remain part of the new instance, and let the utilities resulting from the players playing a pair of these strategies be the same.",
                "We add three additional strategies σ1 r , σ2 r , σ3 r for the row player, and three additional strategies σ1 c , σ2 c , σ3 c for the column player.",
                "Let the additional utilities be as follows: • ur(σr, σj c) = 1 for all σr /∈ {σ1 r , σ2 r , σ3 r } and j ∈ {2, 3}; • ur(σi r, σc) = 1 for all i ∈ {1, 2, 3} and σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 for all i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • and the row players utility is 0 in all other cases involving a new strategy. • uc(σ3 r , σc) = 1 for all σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 for all j ∈ {2, 3} (σ∗ r is the strategy to be eliminated in the original instance); • uc(σi r, σ1 c ) = 1 for all i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • and the column players utility is 0 in all other cases involving a new strategy.",
                "We proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the original IWDSTRATEGY-ELIMINATION instance.",
                "Then, perform the same sequence of eliminations to eliminate σ∗ r in the new IWD-UNIQUE-SOLUTION instance. (This is possible because at any stage, any weak dominance for the row player in the original instance is still a weak dominance in the new instance, because the two strategies utilities for the row player are the same when the column player plays one of the new strategies; and the same is true for the column player.)",
                "Once σ∗ r is eliminated, let σ1 c eliminate σ2 c . (It performs better against σ2 r .)",
                "Then, let σ1 r eliminate all the other remaining strategies for the row player. (It always performs better against either σ1 c or σ3 c .)",
                "Finally, σ1 c is the unique best response against σ1 r among the column players remaining strategies, so let it eliminate all the other remaining strategies for the column player.",
                "Thus, there exists a solution to the IWD-UNIQUE-SOLUTION instance.",
                "Now suppose there exists a solution to the IWD-UNIQUESOLUTION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We will show that none of the new strategies (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) can either eliminate another strategy, or be eliminated before σ∗ r is eliminated.",
                "Thus, there must be a sequence of eliminations ending in the elimination of σ∗ r , which does not involve any of the new strategies, and is therefore a valid sequence of eliminations in the original game (because all original strategies perform the same against each new strategy).",
                "We now show that this is true by exhausting all possibilities for the first elimination before σ∗ r is eliminated that involves a new strategy.",
                "None of the σi r can be eliminated by a σr /∈ {σ1 r , σ2 r , σ3 r }, because the σi r perform better against σ1 c . σ1 r cannot eliminate any other strategy, because it always performs poorer against σ2 c . σ2 r and σ3 r are equivalent from the row players perspective (and thus cannot eliminate each other), and cannot eliminate any other strategy because they always perform poorer against σ3 c .",
                "None of the σj c can be eliminated by a σc /∈ {σ1 c , σ2 c , σ3 c }, because the σj c always perform better against either σ1 r or σ2 r . σ1 c cannot eliminate any other strategy, because it always performs poorer against either σ∗ r or σ3 r . σ2 c cannot eliminate any other strategy, because it always performs poorer against σ2 r or σ3 r . σ3 c cannot eliminate any other strategy, because it always performs poorer against σ1 r or σ3 r .",
                "Thus, there exists a solution to the IWDSTRATEGY-ELIMINATION instance.",
                "A slightly weaker version of the part of Theorem 2 concerning dominance by pure strategies only is the main result of Gilboa et al. [7]. (Besides not proving the result for dominance by mixed strategies, the original result was weaker because it required utilities {0, 1, 2, 3, 4, 5, 6, 7, 8} rather than just {0, 1} (and because of this, our Lemma 1 cannot be applied to it to get the result for mixed strategies).) 5. (ITERATED) DOMINANCE USING MIXED STRATEGIES WITH SMALL SUPPORTS When showing that a strategy is dominated by a mixed strategy, there are several reasons to prefer exhibiting a 92 dominating strategy that places positive probability on as few pure strategies as possible.",
                "First, this will reduce the number of bits required to specify the dominating strategy (and thus the proof of dominance can be communicated quicker): if the dominating mixed strategy places positive probability on only k strategies, then it can be specified using k real numbers for the probabilities, plus k log m (where m is the number of strategies for the player under consideration) bits to indicate which strategies are used.",
                "Second, the proof of dominance will be cleaner: for a dominating mixed strategy, it is typically (always in the case of strict dominance) possible to spread some of the probability onto any unused pure strategy and still have a dominating strategy, but this obscures which pure strategies are the ones that are key in making the mixed strategy dominating.",
                "Third, because (by the previous) the argument for eliminating the dominated strategy is simpler and easier to understand, it is more likely to be accepted.",
                "Fourth, the level of risk neutrality required for the argument to work is reduced, at least in the extreme case where dominance by a single pure strategy can be exhibited (no risk neutrality is required here).",
                "This motivates the following problem.",
                "Definition 4 (MINIMUM-DOMINATING-SET).",
                "We are given the row players utilities of a game in normal form, a distinguished strategy σ∗ for the row player, a specification of whether the dominance should be strict or weak, and a number k. We are asked whether there exists a mixed strategy σ for the row player that places positive probability on at most k pure strategies, and dominates σ∗ in the required sense.",
                "Unfortunately, this problem is NP-complete.",
                "Theorem 3.",
                "MINIMUM-DOMINATING-SET is NPcomplete, both for strict and for weak dominance.",
                "Proof.",
                "The problem is in NP because we can nondeterministically choose a set of at most k strategies to give positive probability, and decide whether we can dominate σ∗ with these k strategies as described in Proposition 1.",
                "To show NP-hardness, we reduce an arbitrary SET-COVER instance (given a set S, subsets S1, S2, . . . , Sr, and a number t, can all of S be covered by at most t of the subsets?) to the following MINIMUM-DOMINATING-SET instance.",
                "For every element s ∈ S, there is a pure strategy σs for the column player.",
                "For every subset Si, there is a pure strategy σSi for the row player.",
                "Finally, there is the distinguished pure strategy σ∗ for the row player.",
                "The row players utilities are as follows: ur(σSi , σs) = t + 1 if s ∈ Si; ur(σSi , σs) = 0 if s /∈ Si; ur(σ∗ , σs) = 1 for all s ∈ S. Finally, we let k = t. We now proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the SET-COVER instance.",
                "Without loss of generality, we can assume that there are exactly k subsets in the cover.",
                "Then, for every Si that is in the cover, let the dominating strategy σ place exactly 1 k probability on the corresponding pure strategy σSi .",
                "Now, if we let n(s) be the number of subsets in the cover containing s (we observe that that n(s) ≥ 1), then for every strategy σs for the column player, the row players expected utility for playing σ when the column player is playing σs is u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs).",
                "So σ strictly (and thus also weakly) dominates σ∗ , and there exists a solution to the MINIMUM-DOMINATING-SET instance.",
                "Now suppose there exists a solution to the MINIMUMDOMINATING-SET instance.",
                "Consider the (at most k) pure strategies of the form σSi on which the dominating mixed strategy σ places positive probability, and let T be the collection of the corresponding subsets Si.",
                "We claim that T is a cover.",
                "For suppose there is some s ∈ S that is not in any of the subsets in T .",
                "Then, if the column player plays σs, the row player (when playing σ) will always receive utility 0-as opposed to the utility of 1 the row player would receive for playing σ∗ , contradicting the fact that σ dominates σ∗ (whether this dominance is weak or strict).",
                "It follows that there exists a solution to the SET-COVER instance.",
                "On the other hand, if we require that the dominating strategy only places positive probability on a very small number of pure strategies, then it once again becomes easy to check whether a strategy is dominated.",
                "Specifically, to find out whether player is strategy σ∗ is dominated by a strategy that places positive probability on only k pure strategies, we can simply check, for every subset of k of player is pure strategies, whether there is a strategy that places positive probability only on these k strategies and dominates σ∗ , using Proposition 1.",
                "This requires only O(|Σi|k ) such checks.",
                "Thus, if k is a constant, this constitutes a polynomial-time algorithm.",
                "A natural question to ask next is whether iterated strict dominance remains computationally easy when dominating strategies are required to place positive probability on at most k pure strategies, where k is a small constant. (We have already shown in Section 4 that iterated weak dominance is hard even when k = 1, that is, only dominance by pure strategies is allowed.)",
                "Of course, if iterated strict dominance were path-independent under this restriction, computational easiness would follow as it did in Section 4.",
                "However, it turns out that this is not the case.",
                "Observation 1.",
                "If we restrict the dominating strategies to place positive probability on at most two pure strategies, iterated strict dominance becomes path-dependent.",
                "Proof.",
                "Consider the following game: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Let (i, j) denote the outcome in which the row player plays the ith row and the column player plays the jth column.",
                "Because (1, 1), (2, 2), and (4, 3) are all Nash equilibria, none of the column players pure strategies will ever be eliminated, and neither will rows 1, 2, and 4.",
                "We now observe that randomizing uniformly over rows 1 and 2 dominates row 3, and randomizing uniformly over rows 3 and 4 dominates row 5.",
                "However, if we eliminate row 3 first, it becomes impossible to dominate row 5 without randomizing over at least 3 pure strategies.",
                "Indeed, iterated strict dominance turns out to be hard even when k = 3.",
                "Theorem 4.",
                "If we restrict the dominating strategies to place positive probability on at most three pure strategies, it becomes NP-complete to decide whether a given strategy can be eliminated using iterated strict dominance. 93 Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can check in polynomial time whether this is a valid sequence of eliminations (for any strategy to be eliminated, we can check, for every subset of three other strategies, whether there is a strategy placing positive probability on only these three strategies that dominates the strategy to be eliminated, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following two-player game.",
                "For every variable v ∈ V , the row player has strategies s+v, s−v, s1 v, s2 v, s3 v, s4 v, and the column player has strategies t1 v, t2 v, t3 v, t4 v. For every clause c ∈ C, the row player has a strategy sc, and the column player has a strategy tc, as well as, for every literal l occurring in c, an additional strategy tl c. The row player has two additional strategies s1 and s2. (s2 is the strategy that we are seeking to eliminate.)",
                "Finally, the column player has one additional strategy t1.",
                "The utility function for the row player is given as follows (where is some sufficiently small number): • ur(s+v, tj v) = 4 if j ∈ {1, 2}, for all v ∈ V ; • ur(s+v, tj v) = 1 if j ∈ {3, 4}, for all v ∈ V ; • ur(s−v, tj v) = 1 if j ∈ {1, 2}, for all v ∈ V ; • ur(s−v, tj v) = 4 if j ∈ {3, 4}, for all v ∈ V ; • ur(s+v, t) = ur(s−v, t) = 0 for all v ∈ V and t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 for all v ∈ V and i ∈ {1, 2, 3, 4}; • ur(si v, t) = for all v ∈ V , i ∈ {1, 2, 3, 4}, and t = ti v; • ur(sc, tc) = 2 for all c ∈ C; • ur(sc, t) = 0 for all c ∈ C and t = tc; • ur(s1, t1) = 1 + ; • ur(s1, t) = for all t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 for all c ∈ C; • ur(s2, t) = 0 for all t /∈ {t1} ∪ {tc : c ∈ C}.",
                "The utility function for the column player is given as follows: • uc(si v, ti v) = 1 for all v ∈ V and i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 for all v ∈ V , i ∈ {1, 2, 3, 4}, and s = si v; • uc(sc, tc) = 1 for all c ∈ C; • uc(sl, tc) = 1 for all c ∈ C and l ∈ L occurring in c; • uc(s, tc) = 0 for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + for all c ∈ C; • uc(sl , tl c) = 1 + for all c ∈ C and l = l occurring in c; • uc(s, tl c) = for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c, l = l }; • uc(s2, t1) = 1; • uc(s, t1) = 0 for all s = s2.",
                "We now show that the two instances are equivalent.",
                "First, suppose that there is a solution to the satisfiability instance.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the satisfying assignment, eliminate s+v with the mixed strategy σr that places probability 1/3 on s−v, probability 1/3 on s1 v, and probability 1/3 on s2 v. (The expected utility of playing σr against t1 v or t2 v is 14/3 > 4; against t3 v or t4 v, it is 4/3 > 1; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 2.",
                "Similarly, for every variable v that is set to false in the satisfying assignment, eliminate s−v with the mixed strategy σr that places probability 1/3 on s+v, probability 1/3 on s3 v, and probability 1/3 on s4 v. (The expected utility of playing σr against t1 v or t2 v is 4/3 > 1; against t3 v or t4 v, it is 14/3 > 4; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 3.",
                "For every c ∈ C, eliminate tc with any tl c for which l was set to true in the satisfying assignment. (This is a valid dominance because tl c performs better than tc against any strategy other than sl, and we eliminated sl in step 1 or in step 2.) 4.",
                "Finally, eliminate s2 with s1. (This is a valid dominance because s1 performs better than s2 against any strategy other than those in {tc : c ∈ C}, which we eliminated in step 3.)",
                "Hence, there is an elimination path that eliminates s2.",
                "Now, suppose that there is an elimination path that eliminates s2.",
                "The strategy that eventually dominates s2 must place most of its probability on s1, because s1 is the only other strategy that performs well against t1, which cannot be eliminated before s2.",
                "But, s1 performs significantly worse than s2 against any strategy tc with c ∈ C, so it follows that all these strategies must be eliminated first.",
                "Each strategy tc can only be eliminated by a strategy that places most of its weight on the corresponding strategies tl c with l ∈ c, because they are the only other strategies that perform well against sc, which cannot be eliminated before tc.",
                "But, each strategy tl c performs significantly worse than tc against sl, so it follows that for every clause c, for one of the literals l occurring in it, sl must be eliminated first.",
                "Now, strategies of the form tj v will never be eliminated because they are the unique best responses to the corresponding strategies sj v (which are, in turn, the best responses to the corresponding tj v).",
                "As a result, if strategy s+v (respectively, s−v) is eliminated, then its opposite strategy s−v (respectively, s+v) can no longer be eliminated, for the following reason.",
                "There is no other pure strategy remaining that gets a significant utility against more than one of the strategies t1 v, t2 v, t3 v, t4 v, but s−v (respectively, s+v) gets significant utility against all 4, and therefore cannot be dominated by a mixed strategy placing positive probability on at most 3 strategies.",
                "It follows that for each v ∈ V , at most one of the strategies s+v, s−v is eliminated, in such a way that for every clause c, for one of the literals l occurring in it, sl must be eliminated.",
                "But then setting all the literals l such that sl is eliminated to true constitutes a solution to the satisfiability instance.",
                "In the next section, we return to the setting where there is no restriction on the number of pure strategies on which a dominating mixed strategy can place positive probability. 6. (ITERATED) DOMINANCE IN BAYESIAN GAMES So far, we have focused on normal form games that are flatly represented (that is, every matrix entry is given ex94 plicitly).",
                "However, for many games, the flat representation is too large to write down explicitly, and instead, some representation that exploits the structure of the game needs to be used.",
                "Bayesian games, besides being of interest in their own right, can be thought of as a useful structured representation of normal form games, and we will study them in this section.",
                "In a Bayesian game, each player first receives privately held preference information (the players type) from a distribution, which determines the utility that that player receives for every outcome of (that is, vector of actions played in) the game.",
                "After receiving this type, the player plays an action based on it.7 Definition 5.",
                "A Bayesian game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of actions Ai, a (finite) type space Θi with a probability distribution πi over it, and a utility function ui : Θi × A1 × A2 × . . . × An → R (where ui(θi, a1, a2, . . . , an) denotes player is utility when is type is θi and each player j plays action aj).",
                "A pure strategy in a Bayesian game is a mapping from types to actions, σi : Θi → Ai, where σi(θi) denotes the action that player i plays for type θi.",
                "Any vector of pure strategies in a Bayesian game defines an (expected) utility for each player, and therefore we can translate a Bayesian game into a normal form game.",
                "In this normal form game, the notions of dominance and iterated dominance are defined as before.",
                "However, the normal form representation of the game is exponentially larger than the Bayesian representation, because each player i has |Ai||Θi| distinct pure strategies.",
                "Thus, any algorithm for Bayesian games that relies on expanding the game to its normal form will require exponential time.",
                "Specifically, our easiness results for normal form games do not directly transfer to this setting.",
                "In fact, it turns out that checking whether a strategy is dominated by a pure strategy is hard in Bayesian games.",
                "Theorem 5.",
                "In a Bayesian game, it is NP-complete to decide whether a given pure strategy σr : Θr → Ar is dominated by some other pure strategy (both for strict and weak dominance), even when the row players distribution over types is uniform.",
                "Proof.",
                "The problem is in NP because it is easy to verify whether a candidate dominating strategy is indeed a dominating strategy.",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a set of clauses C using variables from V ) to the following Bayesian game.",
                "Let the row players action set be Ar = {t, f, 0} and let the column players action set be Ac = {ac : c ∈ C}.",
                "Let the row players type set be Θr = {θv : v ∈ V }, with a distribution πr that is uniform.",
                "Let the row players utility function be as follows: • ur(θv, 0, ac) = 0 for all v ∈ V and c ∈ C; • ur(θv, b, ac) = |V | for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b satisfies c; • ur(θv, b, ac) = −1 for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b does not satisfy c. 7 In general, a player can also receive a signal about the other players preferences, but we will not concern ourselves with that here.",
                "Let the pure strategy to be dominated be the one that plays 0 for every type.",
                "We show that the strategy is dominated by a pure strategy if and only if there is a solution to the satisfiability instance.",
                "First, suppose there is a solution to the satisfiability instance.",
                "Then, let σd r be given by: σd r (θv) = t if v is set to true in the solution to the satisfiability instance, and σd r (θv) = f otherwise.",
                "Then, against any action ac by the column player, there is at least one type θv such that either +v ∈ c and σd r (θv) = t, or −v ∈ c and σd r (θv) = f. Thus, the row players expected utility against action ac is at least |V | |V | − |V |−1 |V | = 1 |V | > 0.",
                "So, σd r is a dominating strategy.",
                "Now, suppose there is a dominating pure strategy σd r .",
                "This dominating strategy must play t or f for at least one type.",
                "Thus, against any ac by the column player, there must at least be some type θv for which ur(θv, σd r (θv), ac) > 0.",
                "That is, there must be at least one variable v such that setting v to σd r (θv) satifies c. But then, setting each v to σd r (θv) must satisfy all the clauses.",
                "So a satisfying assignment exists.",
                "However, it turns out that we can modify the linear programs from Proposition 1 to obtain a polynomial time algorithm for checking whether a strategy is dominated by a mixed strategy in Bayesian games.",
                "Theorem 6.",
                "In a Bayesian game, it can be decided in polynomial time whether a given (possibly mixed) strategy σr is dominated by some other mixed strategy, using linear programming (both for strict and weak dominance).",
                "Proof.",
                "We can modify the linear programs presented in Proposition 1 as follows.",
                "For strict dominance, again assuming without loss of generality that all the utilities in the game are positive, use the following linear program (in which pσr r (θr, ar) is the probability that σr, the strategy to be dominated, places on ar for type θr): minimize θr∈Θr ar∈Ar pr(ar) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1.",
                "Assuming that π(θr) > 0 for all θr ∈ Θr, this program will return an objective value smaller than |Θr| if and only if σr is strictly dominated, by reasoning similar to that done in Proposition 1.",
                "For weak dominance, use the following linear program: maximize ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) = 1.",
                "This program will return an objective value greater than 0 if and only if σr is weakly dominated, by reasoning similar to that done in Proposition 1.",
                "We now turn to iterated dominance in Bayesian games.",
                "Na¨ıvely, one might argue that iterated dominance in Bayesian 95 games always requires an exponential number of steps when a significant fraction of the games pure strategies can be eliminated, because there are exponentially many pure strategies.",
                "However, this is not a very strong argument because oftentimes we can eliminate exponentially many pure strategies in one step.",
                "For example, if for some type θr ∈ Θr we have, for all ac ∈ Ac, that u(θr, a1 r, ac) > u(θr, a2 r, ac), then any pure strategy for the row player which plays action a2 r for type θr is dominated (by the strategy that plays action a1 r for type θr instead)-and there are exponentially many (|Ar||Θr|−1 ) such strategies.",
                "It is therefore conceivable that we need only polynomially many eliminations of collections of a players strategies.",
                "However, the following theorem shows that this is not the case, by giving an example where an exponential number of iterations (that is, alternations between the players in eliminating strategies) is required. (We emphasize that this is not a result about computational complexity.)",
                "Theorem 7.",
                "Even in symmetric 3-player Bayesian games, iterated dominance by pure strategies can require an exponential number of iterations (both for strict and weak dominance), even with only three actions per player.",
                "Proof.",
                "Let each player i ∈ {1, 2, 3} have n + 1 types θ1 i , θ2 i , . . . , θn+1 i .",
                "Let each player i have 3 actions ai, bi, ci, and let the utility function of each player be defined as follows. (In the below, i + 1 and i + 2 are shorthand for i + 1(mod 3) and i + 2(mod 3) when used as player indices.",
                "Also, −∞ can be replaced by a sufficiently negative number.",
                "Finally, δ and should be chosen to be very small (even compared to 2−(n+1) ), and should be more than twice as large as δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 for si+1 = ci+1 or si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − for si+1 = ai+1 and si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ for si+1 = ai+1 or si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ for all si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ for all si+1, si+2 when j > 1; • ui(θj i ; bi, si+1, si+2) = − for all si+1, si+2 when j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 for all si+1 when j > 1; • ui(θj i ; ci, si+1, si+2) = δ− for all si+1 and si+2 = ci+2 when j > 1.",
                "Let the distribution over each players types be given by p(θj i ) = 2−j (with the exception that p(θ2 i ) = 2−2 +2−(n+1) ).",
                "We will be interested in eliminating strategies of the following form: play bi for type θ1 i , and play one of bi or ci otherwise.",
                "Because the utility function is the same for any type θj i with j > 1, these strategies are effectively defined by the total probability that they place on ci,8 which is t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j where tj i = 1 if player i 8 Note that the strategies are still pure strategies; the probability placed on an action by a strategy here is simply the sum of the probabilities of the types for which the strategy chooses that action. plays ci for type θj i , and 0 otherwise.",
                "This probability is different for any two different strategies of the given form, and we have exponentially many different strategies of the given form.",
                "For any probability q which can be expressed as t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (with all tj ∈ {0, 1}), let σi(q) denote the (unique) strategy of the given form for player i which places a total probability of q on ci.",
                "Any strategy that plays ci for type θ1 i or ai for some type θj i with j > 1 can immediately be eliminated.",
                "We will show that, after that, we must eliminate the strategies σi(q) with high q first, slowly working down to those with lower q.",
                "Claim 1: If σi+1(q ) and σi+2(q ) have not yet been eliminated, and q < q , then σi(q) cannot yet be eliminated.",
                "Proof: First, we show that no strategy σi(q ) can eliminate σi(q).",
                "Against σi+1(q ), σi+2(q ), the utility of playing σi(p) is − + p · δ − p · q /2.",
                "Thus, when q = 0, it is best to set p as high as possible (and we note that σi+1(0) and σi+2(0) have not been eliminated), but when q > 0, it is best to set p as low as possible because δ < q /2.",
                "Thus, whether q > q or q < q , σi(q) will always do strictly better than σi(q ) against some remaining opponent strategies.",
                "Hence, no strategy σi(q ) can eliminate σi(q).",
                "The only other pure strategies that could dominate σi(q) are strategies that play ai for type θ1 i , and bi or ci for all other types.",
                "Let us take such a strategy and suppose that it plays c with probability p. Against σi+1(q ), σi+2(q ) (which have not yet been eliminated), the utility of playing this strategy is −(q )2 /2 − /2 + p · δ − p · q /2.",
                "On the other hand, playing σi(q) gives − + q · δ − q · q /2.",
                "Because q > q, we have −(q )2 /2 < −q · q /2, and because δ and are small, it follows that σi(q) receives a higher utility.",
                "Therefore, no strategy dominates σi(q), proving the claim.",
                "Claim 2: If for all q > q, σi+1(q ) and σi+2(q ) have been eliminated, then σi(q) can be eliminated.",
                "Proof: Consider the strategy for player i that plays ai for type θ1 i , and bi for all other types (call this strategy σi); we claim σi dominates σi(q).",
                "First, if either of the other players k plays ak for θ1 k, then σi performs better than σi(q) (which receives −∞ in some cases).",
                "Because the strategies for player k that play ck for type θ1 k, or ak for some type θj k with j > 1, have already been eliminated, all that remains to check is that σi performs better than σi(q) whenever both of the other two players play strategies of the following form: play bk for type θ1 k, and play one of bk or ck otherwise.",
                "We note that among these strategies, there are none left that place probability greater than q on ck.",
                "Letting qk denote the probability with which player k plays ck, the expected utility of playing σi is −qi+1 · qi+2/2 − /2.",
                "On the other hand, the utility of playing σi(q) is − + q · δ − q · qi+2/2.",
                "Because qi+1 ≤ q, the difference between these two expressions is at least /2 − δ, which is positive.",
                "It follows that σi dominates σi(q).",
                "From Claim 2, it follows that all strategies of the form σi(q) will eventually be eliminated.",
                "However, Claim 1 shows that we cannot go ahead and eliminate multiple such strategies for one player, unless at least one other player simultaneously keeps up in the eliminated strategies: every time a σi(q) is eliminated such that σi+1(q) and σi+2(q) have not yet been eliminated, we need to eliminate one of the latter two strategies before any σi(q ) with q > q can be eliminated-that is, we need to alternate between players.",
                "Because there are exponentially many strategies of the form σi(q), it follows that iterated elimination will require exponentially many iterations to complete. 96 It follows that an efficient algorithm for iterated dominance (strict or weak) by pure strategies in Bayesian games, if it exists, must somehow be able to perform (at least part of) many iterations in a single step of the algorithm (because if each step only performed a single iteration, we would need exponentially many steps).",
                "Interestingly, Knuth et al. [11] argue that iterated dominance appears to be an inherently sequential problem (in light of their result that iterated very weak dominance is P-complete, that is, apparently not efficiently parallelizable), suggesting that aggregating many iterations may be difficult. 7.",
                "CONCLUSIONS While the Nash equilibrium solution concept is studied more and more intensely in our community, the perhaps more elementary concept of (iterated) dominance has received much less attention.",
                "In this paper we studied various computational aspects of this concept.",
                "We first studied both strict and weak dominance (not iterated), and showed that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then moved on to iterated dominance.",
                "We showed that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allowed us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then studied what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we showed that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we showed that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we studied dominance and iterated dominance in Bayesian games, as an example of a concise representation language for normal form games that is interesting in its own right.",
                "We showed that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak dominance).",
                "Finally, we showed that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "There are various avenues for future research.",
                "First, there is the open question of whether it is possible to complete iterated dominance in Bayesian games in polynomial time (even though we showed that an exponential number of alternations between the players in eliminating strategies is sometimes required).",
                "Second, we can study computational aspects of (iterated) dominance in concise representations of normal form games other than Bayesian games-for example, in graphical games [9] or local-effect/action graph games [12, 2]. (How to efficiently perform iterated very weak dominance has already been studied for partially observable stochastic games [8].)",
                "Finally, we can ask whether some of the algorithms we described (such as the one for iterated strict dominance with mixed strategies) can be made faster. 8.",
                "REFERENCES [1] Krzysztof R. Apt.",
                "Uniform proofs of order independence for various strategy elimination procedures.",
                "Contributions to Theoretical Economics, 4(1), 2004. [2] Nivan A. R. Bhat and Kevin Leyton-Brown.",
                "Computing Nash equilibria of action-graph games.",
                "In UAI, 2004. [3] Ben Blum, Christian R. Shelton, and Daphne Koller.",
                "A continuation method for Nash equilibria in structured games.",
                "In IJCAI, 2003. [4] Vincent Conitzer and Tuomas Sandholm.",
                "Complexity results about Nash equilibria.",
                "In IJCAI, pages 765-771, 2003. [5] Drew Fudenberg and Jean Tirole.",
                "<br>game theory</br>.",
                "MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "On the order of eliminating dominated strategies.",
                "Operations Research Letters, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "The complexity of eliminating dominated strategies.",
                "Mathematics of Operation Research, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein, and Shlomo Zilberstein.",
                "Dynamic programming for partially observable stochastic games.",
                "In AAAI, pages 709-715, 2004. [9] Michael Kearns, Michael Littman, and Satinder Singh.",
                "Graphical models for <br>game theory</br>.",
                "In UAI, 2001. [10] Leonid Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou, and John N Tsitsiklis.",
                "A note on strategy elimination in bimatrix games.",
                "Operations Research Letters, 7(3):103-107, 1988. [12] Kevin Leyton-Brown and Moshe Tennenholtz.",
                "Local-effect games.",
                "In IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [14] Michael Littman and Peter Stone.",
                "A polynomial-time Nash equilibrium algorithm for repeated games.",
                "In ACM-EC, pages 48-54, 2003. [15] Leslie M. Marx and Jeroen M. Swinkels.",
                "Order independence for iterated weak dominance.",
                "Games and Economic Behavior, 18:219-245, 1997. [16] Leslie M. Marx and Jeroen M. Swinkels.",
                "Corrigendum, order independence for iterated weak dominance.",
                "Games and Economic Behavior, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston, and Jerry R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [18] Roger Myerson.",
                "<br>game theory</br>: Analysis of Conflict.",
                "Harvard University Press, Cambridge, 1991. [19] Martin J Osborne and Ariel Rubinstein.",
                "A Course in <br>game theory</br>.",
                "MIT Press, 1994. [20] Christos Papadimitriou.",
                "Algorithms, games and the Internet.",
                "In STOC, pages 749-753, 2001. [21] Ryan Porter, Eugene Nudelman, and Yoav Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, 2004. 97"
            ],
            "original_annotated_samples": [
                "In such settings, the agents require tools from <br>game theory</br> to rationally decide on an action.",
                "<br>game theory</br> offers various formal models of strategic settings-the best-known of which is a game in normal (or matrix) form, specifying a utility (payoff) for each agent for each combination of strategies that the agents choose-as well as solution concepts, which, given a game, specify which outcomes are reasonable (under various assumptions of rationality and common knowledge).",
                "The problem of computing solutions according to the perhaps more elementary solution concepts of dominance and iterated dominance has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the <br>game theory</br> community [7].1 ) A strategy strictly dominates another strategy if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one.",
                "More detailed discussions and examples can be found in standard texts on microeconomics or <br>game theory</br> [17, 5].",
                "<br>game theory</br>."
            ],
            "translated_annotated_samples": [
                "En tales contextos, los agentes necesitan herramientas de <br>teoría de juegos</br> para decidir racionalmente sobre una acción.",
                "La <br>teoría de juegos</br> ofrece varios modelos formales de escenarios estratégicos, el más conocido de los cuales es un juego en forma normal (o matriz), que especifica una utilidad (pago) para cada agente en cada combinación de estrategias que los agentes eligen, así como conceptos de solución que, dados un juego, especifican qué resultados son razonables (bajo varias suposiciones de racionalidad y conocimiento común).",
                "El problema de calcular soluciones de acuerdo con los conceptos de solución quizás más elementales de dominancia y dominancia iterada ha recibido mucha menos atención. (Después de un breve artículo temprano sobre un caso sencillo [11], el principal estudio computacional de estos conceptos ha tenido lugar en realidad en un artículo de la comunidad de <br>teoría de juegos</br> [7].) Una estrategia domina estrictamente a otra estrategia si tiene un rendimiento estrictamente mejor contra todos los vectores de estrategias del oponente, y la domina débilmente si tiene al menos el mismo rendimiento contra todos los vectores de estrategias del oponente, y estrictamente mejor contra al menos uno.",
                "Discusiones más detalladas y ejemplos se pueden encontrar en textos estándar sobre microeconomía o <br>teoría de juegos</br> [17, 5].",
                "<br>Teoría de juegos</br>."
            ],
            "translated_text": "Estudiamos varios aspectos computacionales de la resolución de juegos utilizando la dominancia y la dominancia iterada. Primero estudiamos tanto la dominancia estricta como la débil (no iterada), y demostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta se puede hacer en tiempo polinómico utilizando la resolución de un único programa lineal. Luego pasamos a la dominancia iterada. Mostramos que determinar si existe algún camino que elimine una estrategia dada es NP-completo con dominancia débil iterada. Esto nos permite también demostrar que determinar si existe un camino que conduce a una solución única es NP-completo. Ambos resultados se mantienen tanto con como sin dominancia de estrategias mixtas. (Una versión más débil del segundo resultado (solo sin dominancia de estrategias mixtas) ya se conocía [7].) La dominancia estricta iterada, por otro lado, es independiente de la ruta (tanto con como sin dominancia por estrategias mixtas) y, por lo tanto, se puede realizar en tiempo polinómico. Luego estudiamos qué sucede cuando la estrategia dominante puede asignar una probabilidad positiva solo a unas pocas estrategias puras. Primero, demostramos que encontrar la estrategia dominante con el tamaño de soporte mínimo es NP-completo (tanto para dominancia estricta como débil). Luego, demostramos que la dominancia estricta iterada se vuelve dependiente del camino cuando hay un límite en el tamaño del soporte de las estrategias dominantes, y que decidir si una estrategia dada puede ser eliminada por dominancia estricta iterada bajo esta restricción es NP-completo (incluso cuando el límite en el tamaño del soporte es 3). Finalmente, estudiamos juegos bayesianos. Mostramos que, a diferencia de los juegos en forma normal, decidir si una estrategia pura dada está dominada por otra estrategia pura en un juego bayesiano es NP-completo (tanto con dominancia estricta como débil); sin embargo, decidir si una estrategia está dominada por alguna estrategia mixta aún puede hacerse en tiempo polinómico con la resolución de un único programa lineal (tanto con dominancia estricta como débil). Finalmente, demostramos que la dominancia iterada utilizando estrategias puras puede requerir un número exponencial de iteraciones en un juego bayesiano (tanto con dominancia estricta como débil). Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN En sistemas multiagentes con agentes auto-interesados, la acción óptima para un agente puede depender de las acciones tomadas por otros agentes. En tales contextos, los agentes necesitan herramientas de <br>teoría de juegos</br> para decidir racionalmente sobre una acción. La <br>teoría de juegos</br> ofrece varios modelos formales de escenarios estratégicos, el más conocido de los cuales es un juego en forma normal (o matriz), que especifica una utilidad (pago) para cada agente en cada combinación de estrategias que los agentes eligen, así como conceptos de solución que, dados un juego, especifican qué resultados son razonables (bajo varias suposiciones de racionalidad y conocimiento común). Probablemente el concepto de solución más conocido (y ciertamente el más estudiado) es el equilibrio de Nash. Un equilibrio de Nash especifica una estrategia para cada jugador, de tal manera que ningún jugador tiene un incentivo para desviarse (unilateralmente) de la estrategia prescrita. Recientemente, numerosos artículos han estudiado el cálculo de equilibrios de Nash en diferentes contextos [9, 4, 12, 3, 13, 14], y la complejidad de construir un equilibrio de Nash en juegos en forma normal ha sido etiquetada como uno de los dos problemas abiertos más importantes en el límite de P hoy en día [20]. El problema de calcular soluciones de acuerdo con los conceptos de solución quizás más elementales de dominancia y dominancia iterada ha recibido mucha menos atención. (Después de un breve artículo temprano sobre un caso sencillo [11], el principal estudio computacional de estos conceptos ha tenido lugar en realidad en un artículo de la comunidad de <br>teoría de juegos</br> [7].) Una estrategia domina estrictamente a otra estrategia si tiene un rendimiento estrictamente mejor contra todos los vectores de estrategias del oponente, y la domina débilmente si tiene al menos el mismo rendimiento contra todos los vectores de estrategias del oponente, y estrictamente mejor contra al menos uno. La idea es que las estrategias dominadas pueden ser eliminadas de consideración. En la dominancia iterada, la eliminación avanza en rondas y se vuelve más fácil a medida que se eliminan más estrategias: en cualquier ronda dada, la estrategia dominante ya no necesita desempeñarse mejor que o igual que la estrategia dominada contra las estrategias oponentes que fueron eliminadas en rondas anteriores. Calcular soluciones según la dominancia (iterada) es importante por al menos las siguientes razones: 1) puede ser computacionalmente más fácil que calcular (por ejemplo) un equilibrio de Nash (y por lo tanto puede ser útil como paso de preprocesamiento en el cálculo de un equilibrio de Nash), y 2) la dominancia (iterada) requiere una suposición de racionalidad más débil en los jugadores que (por ejemplo) el equilibrio de Nash, y por lo tanto las soluciones derivadas según ella son más propensas a ocurrir. En este artículo, estudiamos algunas preguntas computacionales fundamentales relacionadas con la dominancia y la dominancia iterada, incluyendo qué tan difícil es verificar si una estrategia dada puede ser eliminada por cada una de las variantes de estos conceptos. El resto del documento está organizado de la siguiente manera. En la Sección 2, revisamos brevemente las definiciones y propiedades básicas de los juegos en forma normal, la dominancia estricta y débil, y la dominancia estricta y débil iterada. En las secciones restantes, estudiamos los aspectos computacionales de la dominancia y la dominancia iterada. En la Sección 3, estudiamos la dominancia de un solo disparo (no iterada). En la Sección 4, estudiamos la dominancia iterada. En la Sección 5, estudiamos la dominancia y la dominancia iterada cuando la estrategia dominante solo puede asignar probabilidad a unas pocas estrategias puras. Finalmente, en la Sección 6, estudiamos la dominancia y la dominancia iterada en juegos bayesianos. 2. DEFINICIONES Y PROPIEDADES BÁSICAS En esta sección, revisamos brevemente los juegos en forma normal, así como la dominancia y la dominancia iterada (tanto estricta como débil). Un juego de forma normal de n jugadores se define de la siguiente manera. Definición 1. Un juego en forma normal está dado por un conjunto de jugadores {1, 2, . . . , n}; y, para cada jugador i, un conjunto (finito) de estrategias puras Σi y una función de utilidad ui : Σ1 × Σ2 × . . . × Σn → R (donde ui(σ1, σ2, . . . , σn) denota la utilidad del jugador i cuando cada jugador j juega la acción σj). Las dos principales nociones de dominancia se definen de la siguiente manera. Definición 2. La estrategia σi del jugador se dice que está estrictamente dominada por la estrategia σi del jugador si, para cualquier vector de estrategias σ−i de los otros jugadores, ui(σi, σ−i) > ui(σi, σ−i). La estrategia σi del jugador se dice que está débilmente dominada por la estrategia σi del jugador si, para cualquier vector de estrategias σ−i para los otros jugadores, ui(σi, σ−i) ≥ ui(σi, σ−i), y para al menos un vector de estrategias σ−i para los otros jugadores, ui(σi, σ−i) > ui(σi, σ−i). En esta definición, a veces se permite que la estrategia dominante σi sea una estrategia mixta, es decir, una distribución de probabilidad sobre estrategias puras. En este caso, las utilidades están en dominancia en conjunto. Por ejemplo, a veces se utilizan comprobaciones de dominancia simple como una subrutina en la búsqueda de equilibrios de Nash [21]. Las definiciones son las utilidades esperadas. Hay otras nociones de dominancia, como la dominancia muy débil (en la que no se requiere ninguna desigualdad estricta, por lo que dos estrategias pueden dominarse mutuamente), pero no las estudiaremos aquí. Cuando estamos analizando las relaciones de dominancia para el jugador i, los otros jugadores (−i) pueden ser considerados como un solo jugador. Por lo tanto, en el resto del documento, cuando estudiamos la dominancia de un solo paso (no iterada), nos centraremos sin pérdida de generalidad en juegos de dos jugadores. En juegos de dos jugadores, generalmente nos referiremos a los jugadores como r (fila) y c (columna) en lugar de 1 y 2. En la dominancia iterada, las estrategias dominadas son eliminadas del juego y ya no tienen ningún efecto en las relaciones de dominancia futuras. La dominancia iterada puede eliminar más estrategias que la dominancia, de la siguiente manera. σr puede originalmente no dominar a σr porque este último tiene un mejor desempeño contra σc; pero luego, una vez que σc es eliminado porque es dominado por σc, σr domina a σr, y este último puede ser eliminado. Por ejemplo, en el siguiente juego, se puede eliminar primero a R, después de lo cual D queda dominado. Tanto la dominancia estricta como la dominancia débil pueden ser utilizadas en la definición de la dominancia iterada. Observamos que el proceso de dominancia iterada nunca se ve favorecido al eliminar una estrategia mixta dominada, por la siguiente razón. Si σi le da al jugador i una utilidad mayor que σi contra la estrategia mixta σj para el jugador j = i (y estrategias σ−{i,j} para los otros jugadores), entonces para al menos una estrategia pura σj en la que σj coloque probabilidad positiva, σi debe desempeñarse mejor que σi contra σj (y estrategias σ−{i,j} para los otros jugadores). Por lo tanto, eliminar la estrategia mixta σj no introduce nuevas dominancias. Discusiones más detalladas y ejemplos se pueden encontrar en textos estándar sobre microeconomía o <br>teoría de juegos</br> [17, 5]. Ahora estamos listos para pasar al núcleo de este documento. 3. En esta sección, estudiamos la noción de dominancia de un solo turno (no iterada). Como primera observación, verificar si una estrategia dada está estrictamente (débilmente) dominada por alguna estrategia pura es sencillo, al comprobar, para cada estrategia pura de ese jugador, si la última estrategia tiene un rendimiento estrictamente mejor contra todas las estrategias de los oponentes (al menos igual de bien contra todas las estrategias de los oponentes, y estrictamente 2 La estrategia dominada σi, por supuesto, también puede ser mixta, pero esto no tiene implicaciones técnicas para el documento: cuando estudiamos la dominancia de un solo disparo, preguntamos si una estrategia dada está dominada, y no importa si la estrategia dada es pura o mixta; cuando estudiamos la dominancia iterada, no tiene sentido eliminar las estrategias mixtas, como veremos en breve. 3 Este jugador puede tener un espacio de estrategias muy grande (una estrategia pura para cada vector de estrategias puras de los jugadores que están siendo reemplazados). Sin embargo, esto no resultará en un aumento en el tamaño de nuestra representación, ya que la representación original ya tenía que especificar las utilidades para cada uno de estos vectores. Observamos que una restricción a juegos de dos jugadores no sería sin pérdida de generalidad para la dominancia iterada. Esto se debe a que para la dominancia iterada, necesitamos analizar las estrategias dominadas de cada jugador individual, por lo que no podemos fusionar a ningún jugador. A continuación, mostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta se puede hacer en tiempo polinómico resolviendo un único programa lineal. (Programas lineales similares se han presentado anteriormente [18]; presentamos el resultado aquí por completitud, y porque construiremos sobre los programas lineales dados a continuación en el Teorema 6.) Proposición 1. Dadas las utilidades de los jugadores de fila, un subconjunto Dr de las estrategias puras de los jugadores de fila Σr, y una estrategia distinguida σ∗ r para el jugador de fila, podemos verificar en tiempo polinómico en el tamaño del juego (resolviendo un único programa lineal de tamaño polinómico) si existe alguna estrategia mixta σr, que coloque probabilidad positiva solo en estrategias en Dr y domine a σ∗ r, tanto en dominancia estricta como débil. Prueba. Sea pdr la probabilidad que σr asigna a dr ∈ Dr. Resolveremos un único programa lineal en cada uno de nuestros algoritmos; los programas lineales pueden resolverse en tiempo polinómico [10]. Para la dominancia estricta, la pregunta es si se puede establecer el pdr de manera que para cada estrategia pura del jugador de la columna σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc). Debido a que la desigualdad debe ser estricta, no podemos resolver esto directamente mediante programación lineal. Procedemos de la siguiente manera. Dado que el juego es finito, podemos asumir sin pérdida de generalidad que todas las utilidades son positivas (si no lo son, simplemente añade una constante a todas las utilidades). Resolver el siguiente programa lineal: minimizar dr∈Dr pdr tal que para cualquier σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc). Si σ∗ r es estrictamente dominada por alguna estrategia mixta, este programa lineal tiene una solución con un valor objetivo < 1. (La estrategia dominante es una solución factible con un valor objetivo exactamente igual a 1. Dado que ninguna restricción es vinculante para esta solución, podemos reducir ligeramente una de las probabilidades sin afectar la viabilidad, obteniendo así una solución con un valor objetivo < 1. Además, si este programa lineal tiene una solución con un valor objetivo < 1, existe una estrategia mixta que domina estrictamente a σ∗ r, la cual se puede obtener tomando la solución del PL y agregando la probabilidad restante a cualquier estrategia (debido a que todas las utilidades son positivas, esto sumará al lado izquierdo de cualquier desigualdad, por lo que todas las desigualdades se volverán estrictas). Para la dominancia débil, podemos resolver el siguiente programa lineal: maximizar σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) tal que para cualquier σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1. Si σ∗ r está débilmente dominado por alguna estrategia mixta, entonces esa estrategia mixta es una solución factible para este programa con un valor objetivo > 0, porque para al menos una estrategia σc ∈ Σc tenemos ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0. Por otro lado, si este programa tiene una solución con un valor objetivo > 0, entonces para al menos una estrategia σc ∈ Σc debemos tener ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, y por lo tanto la solución de los programas lineales es una estrategia mixta débilmente dominante. 4. DOMINANCIA ITERADA Ahora pasamos a la dominancia iterada. Es bien sabido que la dominancia estricta iterada es independiente del camino [6, 19], es decir, si eliminamos las estrategias dominadas hasta que ya no queden más estrategias dominadas, al final las estrategias restantes para cada jugador serán las mismas, independientemente del orden en que se eliminen las estrategias. Por lo tanto, para determinar si una estrategia dada puede ser eliminada por dominancia estricta iterada, todo lo que se necesita hacer es eliminar repetidamente las estrategias que son estrictamente dominadas, hasta que no queden más estrategias dominadas. Dado que podemos verificar en tiempo polinómico si alguna estrategia dada está dominada (ya sea que se permita o no la dominancia por estrategias mixtas, como se describe en la Sección 3), todo este procedimiento toma solo tiempo polinómico. En el caso de la dominancia iterada por estrategias puras con dos jugadores, Knuth et al. [11] mejoran ligeramente (aceleran) la implementación directa de este procedimiento al llevar un registro, para cada par ordenado de estrategias de un jugador, del número de estrategias del oponente que impiden que la primera estrategia domine a la segunda. Por lo tanto, el tiempo de ejecución para un juego m × n se reduce de O((m + n)4 ) a O((m + n)3 ). (En realidad, solo estudian dominancia muy débil (para la cual no se requieren desigualdades estrictas), pero el enfoque se puede extender fácilmente). Por el contrario, se sabe que la dominancia débil iterada es dependiente del camino. Por ejemplo, en el siguiente juego, utilizando la dominancia débil iterada podemos eliminar primero M y luego D, o primero R y luego U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Por lo tanto, si bien el procedimiento de eliminar estrategias débilmente dominadas hasta que no queden más estrategias débilmente dominadas puede ciertamente ejecutarse en tiempo polinómico, qué estrategias sobreviven al final depende del orden en el que eliminamos las estrategias dominadas. Investigaremos dos preguntas para la dominancia débil iterada: si una estrategia dada es eliminada en algún camino, y si hay un camino hacia una solución única (una única estrategia pura por jugador). Mostraremos que ambos de estos problemas son computacionalmente difíciles. Definición 3. Dada un juego en forma normal y una estrategia distinguida σ∗ , la ELIMINACIÓN DE ESTRATEGIAS POR DOMINANCIA DÉBIL (IWD-STRATEGY-ELIMINATION) pregunta si existe algún camino de dominancia débil iterada que elimine σ∗ . Dada un juego en forma normal, IWDUNIQUE-SOLUTION pregunta si existe algún camino de dominancia débil iterada que conduzca a una solución única (una estrategia restante por jugador). El siguiente lema muestra un caso especial de juegos en forma normal en el que permitir la dominancia débil a través de estrategias mixtas (además de la dominancia débil a través de estrategias puras) hace 6. Sin embargo, existe una restricción de dominancia débil llamada dominancia débil agradable que es independiente de la ruta [15, 16]. Para obtener una visión general de los resultados de independencia de la ruta, consulte Apt [1]. 90 no ayuda. Demostraremos los resultados de dificultad en este contexto, de modo que se mantengan independientemente de si se permite o no la dominancia por estrategias mixtas. Lema 1. Supongamos que todas las utilidades en un juego están en {0, 1}. Entonces, toda estrategia pura que es débilmente dominada por una estrategia mixta también es débilmente dominada por una estrategia pura. Prueba. Se supone que la estrategia pura σ es débilmente dominada por la estrategia mixta σ∗. Si σ obtiene una utilidad de 1 contra alguna estrategia o vector de estrategias del oponente (si hay más de 2 jugadores), entonces todas las estrategias puras en las que σ∗ asigna una probabilidad positiva también deben obtener una utilidad de 1 contra esa estrategia del oponente (de lo contrario, la utilidad esperada sería menor que 1). Además, al menos una de las estrategias puras en las que σ∗ coloca probabilidad positiva debe obtener una utilidad de 1 contra una estrategia del oponente que σ obtiene 0 (de lo contrario, la desigualdad nunca sería estricta). Se deduce que esta estrategia pura domina débilmente a σ. Ahora estamos listos para demostrar los resultados principales de esta sección. Teorema 1. IWD-STRATEGY-ELIMINATION es NPcompleto, incluso con 2 jugadores, y con 0 y 1 siendo las únicas utilidades que ocurren en la matriz, ya sea que se permita o no la dominancia por estrategias mixtas. Prueba. El problema está en NP porque, dado una secuencia de estrategias a ser eliminadas, podemos verificar fácilmente si esta es una secuencia válida de eliminaciones (incluso cuando se permite la dominancia por estrategias mixtas, utilizando la Proposición 1). Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto no vacío de cláusulas C sobre un conjunto no vacío de variables V, con literales correspondientes L = {+v : v ∈ V} ∪ {−v : v ∈ V}) a la siguiente instancia de ELIMINACIÓN DE ESTRATEGIA IWD. (En esta instancia, especificaremos que ciertas estrategias son ineliminables. Una estrategia σr puede hacerse ineliminable, incluso cuando 0 y 1 son las únicas utilidades permitidas, al agregar otra estrategia σr y otra estrategia del oponente σc, de modo que: 1. σr y σr son las únicas estrategias que le dan al jugador de la fila una utilidad de 1 contra σc. 2. σr y σr siempre le dan al jugador de la fila la misma utilidad. 3. σc es la única estrategia que le da al jugador de la columna una utilidad de 1 contra σr, pero de lo contrario σc siempre le da al jugador de la columna una utilidad de 0. Esto hace imposible eliminar cualquiera de estas tres estrategias. No especificaremos explícitamente las estrategias adicionales para hacer la prueba más legible. En esta demostración, designaremos las estrategias del jugador de fila como s, y las estrategias del jugador de columna como t, para mejorar la legibilidad. Que se dé el conjunto de estrategias puras de los jugadores de fila como sigue. Para cada variable v ∈ V, el jugador de la fila tiene estrategias correspondientes s1 +v, s2 +v, s1 −v, s2 −v. Además, el jugador de la fila tiene las siguientes 2 estrategias: s1 0 y s2 0, donde s2 0 = σ∗ r (es decir, es la estrategia que buscamos eliminar). Finalmente, para cada cláusula c ∈ C, el jugador de la fila tiene estrategias correspondientes s1 c (ineliminables) y s2 c. Dado el conjunto de estrategias puras de los jugadores de la columna de la siguiente manera. Para cada variable v ∈ V, el jugador de la columna tiene una estrategia correspondiente tv. Para cada cláusula c ∈ C, el jugador de la columna tiene una estrategia correspondiente tc, y además, para cada literal l ∈ L que ocurre en c, una estrategia tc,l. Para cada variable v ∈ V, el jugador de la columna tiene estrategias correspondientes t+v, t−v (ambas no eliminables). Finalmente, el jugador de la columna tiene tres estrategias adicionales: t1 0 (ineliminable), t2 0 y t1. La función de utilidad para el jugador de la fila se da de la siguiente manera: • ur(s1 +v, tv) = 0 para todo v ∈ V ; • ur(s2 +v, tv) = 1 para todo v ∈ V ; • ur(s1 −v, tv) = 1 para todo v ∈ V ; • ur(s2 −v, tv) = 0 para todo v ∈ V ; • ur(s1 +v, t1) = 1 para todo v ∈ V ; • ur(s2 +v, t1) = 0 para todo v ∈ V ; • ur(s1 −v, t1) = 0 para todo v ∈ V ; • ur(s2 −v, t1) = 1 para todo v ∈ V ; • ur(sb +v, t+v) = 1 para todo v ∈ V y b ∈ {1, 2}; • ur(sb −v, t−v) = 1 para todo v ∈ V y b ∈ {1, 2}; • ur(sl, t) = 0 de lo contrario para todo l ∈ L y t ∈ S2; • ur(s1 0, tc) = 0 para todo c ∈ C; • ur(s2 0, tc) = 1 para todo c ∈ C; • ur(sb 0, t1 0) = 1 para todo b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 de lo contrario para todo b ∈ {1, 2} y t ∈ S2; • ur(sb c, t) = 0 de lo contrario para todo c ∈ C y b ∈ {1, 2}; y la utilidad del jugador de la fila es 0 en todos los demás casos. La función de utilidad para el jugador de la columna se da de la siguiente manera: • uc(s, tv) = 0 para todo v ∈ V y s ∈ S1; • uc(s, t1) = 0 para todo s ∈ S1; • uc(s2 l , tc) = 1 para todo c ∈ C y l ∈ L donde l ∈ c (literal l ocurre en la cláusula c); • uc(s2 l2 , tc,l1 ) = 1 para todo c ∈ C y l1, l2 ∈ L, l1 = l2 donde l2 ∈ c; • uc(s1 c, tc) = 1 para todo c ∈ C; • uc(s2 c, tc) = 0 para todo c ∈ C; • uc(sb c, tc,l) = 1 para todo c ∈ C, l ∈ L, y b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 en otro caso para todo c ∈ C y l ∈ L; y la utilidad del jugador de la columna es 0 en todos los demás casos. Ahora demostramos que las dos instancias son equivalentes. Primero, supongamos que hay una solución para la instancia de satisfactibilidad: es decir, una asignación de valores de verdad a las variables en V tal que todas las cláusulas se satisfacen. Entonces, considera la siguiente secuencia de eliminaciones en nuestro juego: 1. Para cada variable v que se establezca como verdadera en la asignación, elimine tv (lo que da como resultado una utilidad de 0 para el jugador de la columna en todas partes). 2. Entonces, para cada variable v que se establezca como verdadera en la asignación, elimine s2 +v usando s1 +v (lo cual es posible porque tv ha sido eliminado, y porque t1 no ha sido eliminado (aún)). 3. Ahora elimina t1 (lo cual da como resultado una utilidad de 0 para el jugador de la columna). 4. A continuación, para cada variable v que se establezca como falso en la asignación, elimine s2 −v usando s1 −v (lo cual es posible porque t1 ha sido eliminado, y porque tv no ha sido eliminado (aún)). 5. Para cada cláusula c que tenga la variable correspondiente a uno de sus literales positivos l = +v establecido como verdadero en la asignación, elimine tc utilizando tc,l (lo cual es posible porque s2 l ha sido eliminado, y s2 c no ha sido eliminado (aún)). 6. Para cada cláusula c en la que la variable correspondiente a uno de sus literales negativos l = −v se establece en falso en la asignación, elimine tc utilizando tc,l 91 (lo cual es posible porque s2 l ha sido eliminado, y s2 c no ha sido eliminado (aún)). 7. Debido a que la tarea cumplió con la fórmula, todos los tc han sido eliminados ahora. Por lo tanto, podemos eliminar s2 0 = σ∗ r usando s1 0. Se deduce que hay una solución para la instancia IWD-STRATEGY-ELIMINATION. Ahora supongamos que hay una solución para la instancia IWD-STRATEGYELIMINATION. Por el Lema 1, podemos asumir que todas las dominancias son por estrategias puras. Primero observamos que solo s1 0 puede eliminar s2 0 = σ∗ r, porque es la única otra estrategia que le da al jugador de la fila una utilidad de 1 contra t1 0, y t1 0 es ineliminable. Sin embargo, dado que s2 0 tiene un mejor rendimiento que s1 0 contra las estrategias de tc, se deduce que todas las estrategias de tc deben ser eliminadas. Para cada c ∈ C, la estrategia tc solo puede ser eliminada por una de las estrategias tc,l (con el mismo c), ya que estas son las únicas otras estrategias que le dan al jugador de la columna una utilidad de 1 contra s1 c, y s1 c es ineliminable. Pero, para que algún tc,l elimine tc, primero se debe eliminar s2 l. Solo s1 l puede eliminar s2 l, porque es la única otra estrategia que le otorga al jugador de la fila una utilidad de 1 contra tl, y tl es ineliminable. A continuación mostramos que para cada v ∈ V solo se puede eliminar uno de s2 +v, s2 −v. Esto se debe a que para que s1 +v elimine s2 +v, tv debe haber sido eliminado y t1, no (por lo tanto, tv debe ser eliminado antes que t1); pero para que s1 -v elimine s2 -v, t1 debe haber sido eliminado y tv, no (por lo tanto, t1 debe ser eliminado antes que tv). Por lo tanto, establezca v en verdadero si s2 + v es eliminado, y en falso de lo contrario. Debido a lo anterior, para cada cláusula c, uno de los s2 con l ∈ c debe ser eliminado, por lo que se deduce que esta es una asignación satisfactoria para la instancia de satisfactibilidad. Usando el Teorema 1, ahora es (relativamente) fácil demostrar que IWD-UNIQUE-SOLUTION también es NP-completo bajo las mismas restricciones. Teorema 2. IWD-UNIQUE-SOLUTION es NP-completo, incluso con 2 jugadores, y con 0 y 1 siendo las únicas utilidades que ocurren en la matriz, ya sea que se permita o no la dominancia por estrategias mixtas. Prueba. Nuevamente, el problema está en NP porque podemos elegir de manera no determinista la secuencia de eliminaciones y verificar si es correcta. Para demostrar la NP-dificultad, reducimos una instancia arbitraria de IWD-STRATEGY-ELIMINATION a la siguiente instancia de IWD-UNIQUE-SOLUTION. Que todas las estrategias de cada jugador de la instancia original formen parte de la nueva instancia, y que las utilidades resultantes de los jugadores al jugar un par de estas estrategias sean las mismas. Añadimos tres estrategias adicionales σ1 r , σ2 r , σ3 r para el jugador de fila, y tres estrategias adicionales σ1 c , σ2 c , σ3 c para el jugador de columna. Que las utilidades adicionales sean las siguientes: • ur(σr, σj c) = 1 para todo σr /∈ {σ1 r , σ2 r , σ3 r } y j ∈ {2, 3}; • ur(σi r, σc) = 1 para todo i ∈ {1, 2, 3} y σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 para todo i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • y la utilidad de los jugadores de fila es 0 en todos los demás casos que involucren una nueva estrategia. • uc(σ3 r , σc) = 1 para todo σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 para todo j ∈ {2, 3} (σ∗ r es la estrategia a ser eliminada en la instancia original); • uc(σi r, σ1 c ) = 1 para todo i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • y la utilidad de los jugadores de columna es 0 en todos los demás casos que involucren una nueva estrategia. Procedemos a demostrar que las dos instancias son equivalentes. Primero supongamos que existe una solución para la instancia original de IWDSTRATEGY-ELIMINATION. Luego, realiza la misma secuencia de eliminaciones para eliminar σ∗ r en la nueva instancia IWD-UNIQUE-SOLUTION. (Esto es posible porque en cualquier etapa, cualquier dominancia débil para el jugador de fila en la instancia original sigue siendo una dominancia débil en la nueva instancia, ya que las utilidades de las dos estrategias para el jugador de fila son las mismas cuando el jugador de columna juega una de las nuevas estrategias; y lo mismo ocurre para el jugador de columna). Una vez que σ∗ r sea eliminado, permita que σ1 c elimine a σ2 c. (Se desempeña mejor contra σ2 r.) Entonces, dejemos que σ1 r elimine todas las demás estrategias restantes para el jugador de la fila. (Siempre tiene un mejor desempeño contra σ1 c o σ3 c.) Finalmente, σ1 c es la mejor respuesta única contra σ1 r entre las estrategias restantes de los jugadores de columna, así que permitamos que elimine todas las demás estrategias restantes para el jugador de columna. Por lo tanto, existe una solución para la instancia IWD-UNIQUE-SOLUTION. Ahora supongamos que existe una solución para la instancia IWD-UNIQUESOLUTION. Por el Lema 1, podemos asumir que todas las dominancias son por estrategias puras. Mostraremos que ninguna de las nuevas estrategias (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) puede eliminar a otra estrategia, ni ser eliminada antes de que σ∗ r sea eliminada. Por lo tanto, debe haber una secuencia de eliminaciones que termine con la eliminación de σ∗ r, la cual no involucre ninguna de las nuevas estrategias y, por lo tanto, sea una secuencia válida de eliminaciones en el juego original (porque todas las estrategias originales tienen el mismo rendimiento contra cada nueva estrategia). Ahora demostramos que esto es cierto agotando todas las posibilidades para la primera eliminación antes de que se elimine σ∗ r que implica una nueva estrategia. Ninguno de los σi r puede ser eliminado por un σr /∈ {σ1 r , σ2 r , σ3 r}, porque los σi r tienen un mejor desempeño contra σ1 c. σ1 r no puede eliminar ninguna otra estrategia, porque siempre tiene un desempeño inferior contra σ2 c. σ2 r y σ3 r son equivalentes desde la perspectiva de los jugadores de fila (y por lo tanto no pueden eliminarse entre sí), y no pueden eliminar ninguna otra estrategia porque siempre tienen un desempeño inferior contra σ3 c. Ninguno de los σj c puede ser eliminado por un σc /∈ {σ1 c , σ2 c , σ3 c}, porque los σj c siempre tienen un mejor desempeño contra σ1 r o σ2 r. σ1 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ∗ r o σ3 r. σ2 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ2 r o σ3 r. σ3 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ1 r o σ3 r. Por lo tanto, existe una solución para la instancia IWDSTRATEGY-ELIMINATION. Una versión ligeramente más débil de la parte del Teorema 2 que concierne la dominancia solo por estrategias puras es el resultado principal de Gilboa et al. [7]. (Además de no demostrar el resultado para la dominancia por estrategias mixtas, el resultado original era más débil porque requería utilidades {0, 1, 2, 3, 4, 5, 6, 7, 8} en lugar de solo {0, 1} (y debido a esto, nuestro Lema 1 no se puede aplicar para obtener el resultado para estrategias mixtas).) 5. DOMINANCIA (ITERADA) USANDO ESTRATEGIAS MIXTAS CON SOPORTES PEQUEÑOS Al demostrar que una estrategia es dominada por una estrategia mixta, hay varias razones para preferir exhibir una estrategia dominante que coloque probabilidad positiva en la menor cantidad posible de estrategias puras. Primero, esto reducirá el número de bits necesarios para especificar la estrategia dominante (y así la prueba de dominancia se puede comunicar más rápido): si la estrategia mixta dominante coloca probabilidad positiva en solo k estrategias, entonces se puede especificar usando k números reales para las probabilidades, más k log m (donde m es el número de estrategias para el jugador en consideración) bits para indicar qué estrategias se utilizan. Segundo, la prueba de dominancia será más clara: para una estrategia mixta dominante, es típicamente (siempre en el caso de dominancia estricta) posible distribuir parte de la probabilidad en cualquier estrategia pura no utilizada y aún así tener una estrategia dominante, pero esto oscurece cuáles estrategias puras son las clave para hacer que la estrategia mixta sea dominante. Tercero, debido a que el argumento para eliminar la estrategia dominada es más simple y fácil de entender, es más probable que sea aceptado. En cuarto lugar, el nivel de neutralidad al riesgo requerido para que el argumento funcione se reduce, al menos en el caso extremo donde se puede exhibir la dominancia de una única estrategia pura (no se requiere neutralidad al riesgo aquí). Esto motiva el siguiente problema. Definición 4 (CONJUNTO DOMINANTE MÍNIMO). Se nos dan las utilidades de los jugadores de fila de un juego en forma normal, una estrategia distinguida σ∗ para el jugador de fila, una especificación de si la dominancia debe ser estricta o débil, y un número k. Se nos pregunta si existe una estrategia mixta σ para el jugador de fila que coloque probabilidad positiva en como máximo k estrategias puras, y domine a σ∗ en el sentido requerido. Lamentablemente, este problema es NP-completo. Teorema 3. El problema del CONJUNTO DOMINANTE MÍNIMO es NP-completo, tanto para dominancia estricta como para dominancia débil. Prueba. El problema está en NP porque podemos elegir de manera no determinista un conjunto de a lo sumo k estrategias para dar probabilidad positiva, y decidir si podemos dominar a σ∗ con estas k estrategias como se describe en la Proposición 1. Para demostrar la NP-dificultad, reducimos una instancia arbitraria de COBERTURA-DE-CONJUNTOS (dado un conjunto S, subconjuntos S1, S2, . . . , Sr, y un número t, ¿puede S ser cubierto por a lo sumo t de los subconjuntos?) a la siguiente instancia de CONJUNTO-DOMINANTE-MÍNIMO. Para cada elemento s ∈ S, hay una estrategia pura σs para el jugador de la columna. Para cada subconjunto Si, hay una estrategia pura σSi para el jugador de la fila. Finalmente, está la distinguida estrategia pura σ∗ para el jugador de la fila. Las utilidades de los jugadores de la fila son las siguientes: ur(σSi , σs) = t + 1 si s ∈ Si; ur(σSi , σs) = 0 si s /∈ Si; ur(σ∗ , σs) = 1 para todo s ∈ S. Finalmente, dejamos que k = t. Ahora procedemos a demostrar que las dos instancias son equivalentes. Primero supongamos que existe una solución para la instancia de COBERTURA-CONJUNTO. Sin pérdida de generalidad, podemos asumir que hay exactamente k subconjuntos en la cobertura. Entonces, para cada Si que esté en la cobertura, dejemos que la estrategia dominante σ coloque exactamente 1 k de probabilidad en la estrategia pura correspondiente σSi. Ahora, si dejamos que n(s) sea el número de subconjuntos en la cobertura que contienen a s (observamos que n(s) ≥ 1), entonces para cada estrategia σs del jugador de la columna, la utilidad esperada de los jugadores de la fila al jugar σ cuando el jugador de la columna está jugando σs es u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs). Entonces, σ domina estrictamente (y por lo tanto también débilmente) a σ∗, y existe una solución para la instancia del conjunto de dominación mínimo. Ahora supongamos que existe una solución para la instancia de CONJUNTO-DOMINANTE-MÍNIMO. Considera las estrategias puras (a lo sumo k) de la forma σSi en las que la estrategia mixta dominante σ asigna probabilidad positiva, y deja que T sea la colección de los subconjuntos correspondientes Si. Sostenemos que T es una cubierta. Supongamos que hay algún s ∈ S que no está en ninguno de los subconjuntos en T. Entonces, si el jugador de la columna juega σs, el jugador de la fila (cuando juega σ) siempre recibirá una utilidad de 0, en contraposición a la utilidad de 1 que el jugador de la fila recibiría al jugar σ∗, contradiciendo el hecho de que σ domina a σ∗ (ya sea esta dominancia débil o estricta). Se deduce que existe una solución para la instancia de COBERTURA-DE-CONJUNTOS. Por otro lado, si requerimos que la estrategia dominante solo coloque probabilidad positiva en un número muy pequeño de estrategias puras, entonces una vez más resulta fácil verificar si una estrategia está dominada. Específicamente, para determinar si la estrategia σ∗ del jugador está dominada por una estrategia que coloca probabilidad positiva solo en k estrategias puras, simplemente podemos verificar, para cada subconjunto de k de las estrategias puras del jugador, si hay una estrategia que coloca probabilidad positiva solo en esas k estrategias y domina a σ∗, utilizando la Proposición 1. Esto solo requiere O(|Σi|k) comprobaciones. Por lo tanto, si k es una constante, esto constituye un algoritmo de tiempo polinómico. Una pregunta natural que surge a continuación es si la dominancia estricta iterada sigue siendo computacionalmente fácil cuando se requiere que las estrategias dominantes coloquen una probabilidad positiva en como máximo k estrategias puras, donde k es una constante pequeña. (Ya hemos demostrado en la Sección 4 que la dominancia débil iterada es difícil incluso cuando k = 1, es decir, solo se permite la dominancia por estrategias puras). Por supuesto, si la dominancia estricta iterada fuera independiente del camino bajo esta restricción, la facilidad computacional seguiría como lo hizo en la Sección 4. Sin embargo, resulta que esto no es así. Observación 1. Si restringimos las estrategias dominantes para asignar probabilidad positiva a lo sumo a dos estrategias puras, la dominancia estricta iterada se vuelve dependiente del camino. Prueba. Considera el siguiente juego: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Sea (i, j) el resultado en el que el jugador de la fila juega en la fila i y el jugador de la columna juega en la columna j. Dado que (1, 1), (2, 2) y (4, 3) son todos equilibrios de Nash, ninguna de las estrategias puras de los jugadores de columna será eliminada, al igual que las filas 1, 2 y 4. Ahora observamos que la aleatorización uniforme entre las filas 1 y 2 domina a la fila 3, y la aleatorización uniforme entre las filas 3 y 4 domina a la fila 5. Sin embargo, si eliminamos la fila 3 primero, se vuelve imposible dominar la fila 5 sin aleatorizar al menos 3 estrategias puras. De hecho, la dominancia estricta iterada resulta ser difícil incluso cuando k = 3. Teorema 4. Si restringimos las estrategias dominantes para colocar una probabilidad positiva en como máximo tres estrategias puras, se vuelve NP-completo decidir si una estrategia dada puede ser eliminada usando dominancia estricta iterada. 93 Prueba. El problema está en NP porque, dado una secuencia de estrategias a ser eliminadas, podemos verificar en tiempo polinómico si esta es una secuencia válida de eliminaciones (para cualquier estrategia a ser eliminada, podemos verificar, para cada subconjunto de tres otras estrategias, si hay una estrategia que coloca probabilidad positiva solo en estas tres estrategias que domina a la estrategia a ser eliminada, utilizando la Proposición 1). Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto no vacío de cláusulas C sobre un conjunto no vacío de variables V, con literales correspondientes L = {+v : v ∈ V} ∪ {−v : v ∈ V}) al siguiente juego de dos jugadores. Para cada variable v ∈ V, el jugador de la fila tiene estrategias s+v, s−v, s1 v, s2 v, s3 v, s4 v, y el jugador de la columna tiene estrategias t1 v, t2 v, t3 v, t4 v. Para cada cláusula c ∈ C, el jugador de la fila tiene una estrategia sc, y el jugador de la columna tiene una estrategia tc, así como, para cada literal l que ocurre en c, una estrategia adicional tl c. El jugador de la fila tiene dos estrategias adicionales s1 y s2. (s2 es la estrategia que estamos buscando eliminar). Finalmente, el jugador de la columna tiene una estrategia adicional t1. La función de utilidad para el jugador de la fila se da de la siguiente manera (donde ε es algún número suficientemente pequeño): • ur(s+v, tj v) = 4 si j ∈ {1, 2}, para todo v ∈ V; • ur(s+v, tj v) = 1 si j ∈ {3, 4}, para todo v ∈ V; • ur(s−v, tj v) = 1 si j ∈ {1, 2}, para todo v ∈ V; • ur(s−v, tj v) = 4 si j ∈ {3, 4}, para todo v ∈ V; • ur(s+v, t) = ur(s−v, t) = 0 para todo v ∈ V y t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 para todo v ∈ V e i ∈ {1, 2, 3, 4}; • ur(si v, t) = para todo v ∈ V, i ∈ {1, 2, 3, 4}, y t = ti v; • ur(sc, tc) = 2 para todo c ∈ C; • ur(sc, t) = 0 para todo c ∈ C y t = tc; • ur(s1, t1) = 1 + ε; • ur(s1, t) = para todo t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 para todo c ∈ C; • ur(s2, t) = 0 para todo t /∈ {t1} ∪ {tc : c ∈ C}. La función de utilidad para el jugador de la columna se da de la siguiente manera: • uc(si v, ti v) = 1 para todo v ∈ V e i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 para todo v ∈ V, i ∈ {1, 2, 3, 4}, y s = si v; • uc(sc, tc) = 1 para todo c ∈ C; • uc(sl, tc) = 1 para todo c ∈ C y l ∈ L que ocurre en c; • uc(s, tc) = 0 para todo c ∈ C y s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + para todo c ∈ C; • uc(sl, tl c) = 1 + para todo c ∈ C y l = l que ocurre en c; • uc(s, tl c) = para todo c ∈ C y s /∈ {sc} ∪ {sl : l ∈ c, l = l}; • uc(s2, t1) = 1; • uc(s, t1) = 0 para todo s = s2. Ahora demostramos que las dos instancias son equivalentes. Primero, supongamos que hay una solución para la instancia de satisfactibilidad. Entonces, considera la siguiente secuencia de eliminaciones en nuestro juego: 1. Para cada variable v que se establezca como verdadera en la asignación satisfactoria, elimine s+v con la estrategia mixta σr que coloca probabilidad 1/3 en s−v, probabilidad 1/3 en s1 v y probabilidad 1/3 en s2 v. (La utilidad esperada de jugar σr contra t1 v o t2 v es 14/3 > 4; contra t3 v o t4 v, es 4/3 > 1; y contra cualquier otra cosa es 2/3 > 0. Por lo tanto, la dominancia es válida. De manera similar, para cada variable v que se establezca como falso en la asignación satisfactoria, elimine s−v con la estrategia mixta σr que coloca probabilidad 1/3 en s+v, probabilidad 1/3 en s3 v, y probabilidad 1/3 en s4 v. (La utilidad esperada de jugar σr contra t1 v o t2 v es 4/3 > 1; contra t3 v o t4 v, es 14/3 > 4; y contra cualquier otra cosa es 2/3 > 0. Por lo tanto, la dominancia es válida. Para cada c ∈ C, elimine tc con cualquier tl c para el cual l se haya establecido como verdadero en la asignación satisfactoria. (Esta es una dominancia válida porque tl c funciona mejor que tc contra cualquier estrategia que no sea sl, y eliminamos sl en el paso 1 o en el paso 2.) 4. Finalmente, elimina s2 con s1. (Esta es una dominancia válida porque s1 tiene un mejor rendimiento que s2 contra cualquier estrategia que no esté en {tc : c ∈ C}, la cual eliminamos en el paso 3.) Por lo tanto, hay un camino de eliminación que elimina s2. Ahora, supongamos que hay un camino de eliminación que elimina s2. La estrategia que eventualmente domina a s2 debe colocar la mayor parte de su probabilidad en s1, ya que s1 es la única otra estrategia que se desempeña bien contra t1, la cual no puede ser eliminada antes que s2. Sin embargo, s1 tiene un rendimiento significativamente peor que s2 contra cualquier estrategia tc con c ∈ C, por lo que se deduce que todas estas estrategias deben ser eliminadas primero. Cada estrategia tc solo puede ser eliminada por una estrategia que coloque la mayor parte de su peso en las estrategias correspondientes tl c con l ∈ c, ya que son las únicas otras estrategias que funcionan bien contra sc, las cuales no pueden ser eliminadas antes de tc. Sin embargo, cada estrategia tl c funciona significativamente peor que tc contra sl, por lo que se deduce que para cada cláusula c, para uno de los literales l que aparecen en ella, sl debe ser eliminado primero. Ahora, las estrategias de la forma tj v nunca serán eliminadas porque son las únicas mejores respuestas a las estrategias correspondientes sj v (que, a su vez, son las mejores respuestas a las tj v correspondientes). Como resultado, si la estrategia s+v (respectivamente, s−v) es eliminada, entonces su estrategia opuesta s−v (respectivamente, s+v) ya no puede ser eliminada, por la siguiente razón. No hay otra estrategia pura restante que obtenga una utilidad significativa contra más de una de las estrategias t1 v, t2 v, t3 v, t4 v, pero s−v (respectivamente, s+v) obtiene una utilidad significativa contra las 4, y por lo tanto no puede ser dominada por una estrategia mixta que coloque una probabilidad positiva en como máximo 3 estrategias. Se deduce que para cada v ∈ V, a lo sumo una de las estrategias s+v, s−v es eliminada, de tal manera que para cada cláusula c, para uno de los literales l que aparece en ella, sl debe ser eliminada. Pero luego, establecer todas las literales l de manera que sl sea eliminado a verdadero constituye una solución a la instancia de satisfactibilidad. En la siguiente sección, regresamos al escenario donde no hay restricción en el número de estrategias puras en las que una estrategia mixta dominante puede colocar probabilidad positiva. 6. DOMINANCIA (ITERADA) EN JUEGOS BAYESIANOS Hasta ahora, nos hemos enfocado en juegos de forma normal que están representados de manera plana (es decir, cada entrada de la matriz se da explícitamente). Sin embargo, para muchos juegos, la representación plana es demasiado grande para escribirse explícitamente, y en su lugar, se necesita utilizar alguna representación que aproveche la estructura del juego. Los juegos bayesianos, además de ser de interés por sí mismos, pueden considerarse como una representación estructurada útil de los juegos en forma normal, y los estudiaremos en esta sección. En un juego bayesiano, cada jugador recibe primero información de preferencia de manera privada (el tipo de jugador) de una distribución, la cual determina la utilidad que ese jugador recibe por cada resultado del juego (es decir, el vector de acciones jugadas en el juego). Después de recibir este tipo, el jugador realiza una acción basada en él. Definición 7. Un juego bayesiano está dado por un conjunto de jugadores {1, 2, . . . , n}; y, para cada jugador i, un conjunto (finito) de acciones Ai, un espacio de tipos (finito) Θi con una distribución de probabilidad πi sobre él, y una función de utilidad ui : Θi × A1 × A2 × . . . × An → R (donde ui(θi, a1, a2, . . . , an) denota la utilidad del jugador i cuando su tipo es θi y cada jugador j juega la acción aj). Una estrategia pura en un juego bayesiano es una asignación de tipos a acciones, σi: Θi → Ai, donde σi(θi) denota la acción que el jugador i elige para el tipo θi. Cualquier vector de estrategias puras en un juego bayesiano define una utilidad (esperada) para cada jugador, y por lo tanto podemos traducir un juego bayesiano en un juego en forma normal. En este juego en forma normal, las nociones de dominancia y dominancia iterada se definen como antes. Sin embargo, la representación en forma normal del juego es exponencialmente más grande que la representación bayesiana, ya que cada jugador i tiene |Ai||Θi| estrategias puras distintas. Por lo tanto, cualquier algoritmo para juegos bayesianos que dependa de expandir el juego a su forma normal requerirá tiempo exponencial. Específicamente, nuestros resultados de facilidad para juegos en forma normal no se transfieren directamente a esta configuración. De hecho, resulta que verificar si una estrategia está dominada por una estrategia pura es difícil en juegos bayesianos. Teorema 5. En un juego bayesiano, es NP-completo decidir si una estrategia pura dada σr : Θr → Ar está dominada por alguna otra estrategia pura (tanto para la dominancia estricta como débil), incluso cuando la distribución de los jugadores de fila sobre los tipos es uniforme. Prueba. El problema está en NP porque es fácil verificar si una estrategia dominante candidata es realmente una estrategia dominante. Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto de cláusulas C utilizando variables de V) al siguiente juego bayesiano. Que el conjunto de acciones de los jugadores de la fila sea Ar = {t, f, 0} y que el conjunto de acciones de los jugadores de la columna sea Ac = {ac : c ∈ C}. Que el conjunto de tipos de jugadores de fila sea Θr = {θv : v ∈ V}, con una distribución πr que es uniforme. Que la función de utilidad de los jugadores de la fila sea la siguiente: • ur(θv, 0, ac) = 0 para todo v ∈ V y c ∈ C; • ur(θv, b, ac) = |V | para todo v ∈ V, c ∈ C y b ∈ {t, f} tal que establecer v como b satisface c; • ur(θv, b, ac) = −1 para todo v ∈ V, c ∈ C y b ∈ {t, f} tal que establecer v como b no satisface c. En general, un jugador también puede recibir una señal sobre las preferencias de los otros jugadores, pero aquí no nos ocuparemos de eso. Que la estrategia pura que se va a dominar sea aquella que juega 0 para cada tipo. Mostramos que la estrategia está dominada por una estrategia pura si y solo si hay una solución a la instancia de satisfactibilidad. Primero, supongamos que hay una solución para la instancia de satisfactibilidad. Entonces, sea σd r dado por: σd r (θv) = t si v se establece como verdadero en la solución de la instancia de satisfactibilidad, y σd r (θv) = f en caso contrario. Entonces, en contra de cualquier acción ac realizada por el jugador de la columna, existe al menos un tipo θv tal que o bien +v ∈ c y σd r (θv) = t, o bien −v ∈ c y σd r (θv) = f. Por lo tanto, la utilidad esperada de los jugadores de la fila contra la acción ac es al menos |V| |V| − |V|−1 |V| = 1 |V| > 0. Entonces, σd r es una estrategia dominante. Ahora, supongamos que existe una estrategia pura dominante σd r. Esta estrategia dominante debe jugar t o f al menos para un tipo. Por lo tanto, en contra de cualquier ac por el jugador de la columna, debe haber al menos algún tipo θv para el cual ur(θv, σd r (θv), ac) > 0. Es decir, debe haber al menos una variable v tal que al establecer v en σd r (θv) satisfaga c. Pero entonces, al establecer cada v en σd r (θv) deben satisfacerse todas las cláusulas. Entonces, existe una asignación satisfactoria. Sin embargo, resulta que podemos modificar los programas lineales de la Proposición 1 para obtener un algoritmo de tiempo polinómico para verificar si una estrategia está dominada por una estrategia mixta en juegos bayesianos. Teorema 6. En un juego bayesiano, se puede decidir en tiempo polinómico si una estrategia dada (posiblemente mixta) σr está dominada por alguna otra estrategia mixta, utilizando programación lineal (tanto para dominancia estricta como débil). Prueba. Podemos modificar los programas lineales presentados en la Proposición 1 de la siguiente manera. Para la dominancia estricta, asumiendo nuevamente sin pérdida de generalidad que todas las utilidades en el juego son positivas, utilice el siguiente programa lineal (en el cual pσr r (θr, ar) es la probabilidad de que σr, la estrategia a ser dominada, coloque en ar para el tipo θr): minimizar θr∈Θr ar∈Ar pr(ar) tal que para cualquier ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); para cualquier θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1. Suponiendo que π(θr) > 0 para todo θr ∈ Θr, este programa devolverá un valor objetivo menor que |Θr| si y solo si σr está estrictamente dominado, mediante un razonamiento similar al realizado en la Proposición 1. Para la dominancia débil, utiliza el siguiente programa lineal: maximizar ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) tal que para cualquier ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); para cualquier θr ∈ Θr, ar∈Ar pr(θr, ar) = 1. Este programa devolverá un valor objetivo mayor que 0 si y solo si σr está débilmente dominado, mediante un razonamiento similar al realizado en la Proposición 1. Ahora pasamos al dominio iterado en juegos bayesianos. Ingenuamente, uno podría argumentar que la dominancia iterada en juegos bayesianos de 95 siempre requiere un número exponencial de pasos cuando se puede eliminar una fracción significativa de las estrategias puras de los juegos, ya que hay un número exponencial de estrategias puras. Sin embargo, este no es un argumento muy sólido porque muchas veces podemos eliminar exponencialmente muchas estrategias puras en un solo paso. Por ejemplo, si para algún tipo θr ∈ Θr tenemos, para todo ac ∈ Ac, que u(θr, a1 r, ac) > u(θr, a2 r, ac), entonces cualquier estrategia pura para el jugador de la fila que juega la acción a2 r para el tipo θr está dominada (por la estrategia que juega la acción a1 r para el tipo θr en su lugar) - y hay exponencialmente muchas (|Ar||Θr|−1) tales estrategias. Por lo tanto, es concebible que solo necesitemos un número polinomial de eliminaciones de colecciones de estrategias de un jugador. Sin embargo, el siguiente teorema muestra que este no es el caso, al dar un ejemplo donde se requiere un número exponencial de iteraciones (es decir, alternancias entre los jugadores en la eliminación de estrategias). (Enfatizamos que este no es un resultado sobre complejidad computacional). Teorema 7. Incluso en juegos bayesianos simétricos de 3 jugadores, la dominancia iterada por estrategias puras puede requerir un número exponencial de iteraciones (tanto para la dominancia estricta como débil), incluso con solo tres acciones por jugador. Prueba. Que cada jugador i ∈ {1, 2, 3} tenga n + 1 tipos θ1 i , θ2 i , . . . , θn+1 i. Que cada jugador i tenga 3 acciones ai, bi, ci, y que la función de utilidad de cada jugador esté definida de la siguiente manera. (En lo siguiente, i + 1 e i + 2 son abreviaturas de i + 1 (mod 3) e i + 2 (mod 3) cuando se utilizan como índices de jugador. Además, −∞ puede ser reemplazado por un número suficientemente negativo. Finalmente, δ y deberían elegirse muy pequeños (incluso en comparación con 2−(n+1)), y deberían ser más del doble de grandes que δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 para si+1 = ci+1 o si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − para si+1 = ai+1 y si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ para si+1 = ai+1 o si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ para todos los si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ para todos los si+1, si+2 cuando j > 1; • ui(θj i ; bi, si+1, si+2) = − para todos los si+1, si+2 cuando j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 para todos los si+1 cuando j > 1; • ui(θj i ; ci, si+1, si+2) = δ− para todos los si+1 y si+2 = ci+2 cuando j > 1. Que la distribución sobre los tipos de cada jugador esté dada por p(θj i ) = 2−j (con la excepción de que p(θ2 i ) = 2−2 +2−(n+1) ). Estaremos interesados en eliminar estrategias de la siguiente forma: jugar bi para el tipo θ1 i, y jugar bi o ci de lo contrario. Dado que la función de utilidad es la misma para cualquier tipo θj i con j > 1, estas estrategias están efectivamente definidas por la probabilidad total que asignan a ci,8, que es t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j donde tj i = 1 si el jugador i 8. Observa que las estrategias siguen siendo estrategias puras; la probabilidad asignada a una acción por una estrategia aquí es simplemente la suma de las probabilidades de los tipos para los cuales la estrategia elige esa acción. juega ci para el tipo θj i, y 0 en caso contrario. Esta probabilidad es diferente para cualquier par de estrategias diferentes de la forma dada, y tenemos exponencialmente muchas estrategias diferentes de la forma dada. Para cualquier probabilidad q que pueda expresarse como t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (con todos los tj ∈ {0, 1}), dejemos que σi(q) denote la estrategia (única) de la forma dada para el jugador i que coloca una probabilidad total de q en ci. Cualquier estrategia que juegue ci para el tipo θ1 i o ai para algún tipo θj i con j > 1 puede ser eliminada inmediatamente. Mostraremos que, después de eso, debemos eliminar primero las estrategias σi(q) con q alto, trabajando lentamente hacia abajo hasta aquellas con q más bajo. Reclamo 1: Si σi+1(q) y σi+2(q) aún no han sido eliminados, y q < q, entonces σi(q) aún no puede ser eliminado. Prueba: Primero, demostramos que ninguna estrategia σi(q) puede eliminar a σi(q). Contra σi+1(q), σi+2(q), la utilidad de jugar σi(p) es − + p · δ − p · q /2. Por lo tanto, cuando q = 0, es mejor establecer p lo más alto posible (y observamos que σi+1(0) y σi+2(0) no han sido eliminados), pero cuando q > 0, es mejor establecer p lo más bajo posible porque δ < q /2. Por lo tanto, ya sea que q > q o q < q, σi(q) siempre será estrictamente mejor que σi(q) contra algunas estrategias restantes de los oponentes. Por lo tanto, ninguna estrategia σi(q) puede eliminar a σi(q). Las únicas otras estrategias puras que podrían dominar a σi(q) son estrategias que juegan ai para el tipo θ1 i, y bi o ci para todos los demás tipos. Tomemos tal estrategia y supongamos que juega c con probabilidad p. Contra σi+1(q), σi+2(q) (que aún no han sido eliminadas), la utilidad de jugar esta estrategia es −(q)2 /2 − /2 + p · δ − p · q /2. Por otro lado, jugar σi(q) da como resultado − + q · δ − q · q /2. Dado que q > q, tenemos −(q )2 /2 < −q · q /2, y dado que δ y son pequeños, se deduce que σi(q) recibe una utilidad mayor. Por lo tanto, ninguna estrategia domina a σi(q), lo que demuestra la afirmación. Afirmación 2: Si para todo q > q, σi+1(q) y σi+2(q) han sido eliminados, entonces σi(q) puede ser eliminado. Prueba: Considera la estrategia para el jugador i que juega ai para el tipo θ1 i, y bi para todos los demás tipos (llamemos a esta estrategia σi); afirmamos que σi domina a σi(q). Primero, si alguno de los otros jugadores k juega ak para θ1 k, entonces σi se desempeña mejor que σi(q) (que recibe −∞ en algunos casos). Dado que las estrategias para el jugador k que juega ck para el tipo θ1 k, o ak para algún tipo θj k con j > 1, ya han sido eliminadas, todo lo que queda por comprobar es que σi sea mejor que σi(q) siempre que los otros dos jugadores jueguen estrategias de la siguiente forma: jugar bk para el tipo θ1 k, y jugar uno de bk o ck en caso contrario. Observamos que entre estas estrategias, no queda ninguna que coloque una probabilidad mayor que q en ck. Si dejamos que qk denote la probabilidad con la que el jugador k juega ck, la utilidad esperada de jugar σi es −qi+1 · qi+2/2 − /2. Por otro lado, la utilidad de jugar σi(q) es − + q · δ − q · qi+2/2. Dado que qi+1 ≤ q, la diferencia entre estas dos expresiones es al menos /2 − δ, la cual es positiva. Se deduce que σi domina a σi(q). A partir de la Reclamación 2, se deduce que todas las estrategias de la forma σi(q) serán eliminadas eventualmente. Sin embargo, la Reclamación 1 muestra que no podemos avanzar y eliminar múltiples estrategias de este tipo para un jugador, a menos que al menos otro jugador mantenga simultáneamente las estrategias eliminadas: cada vez que se elimina un σi(q) tal que σi+1(q) y σi+2(q) aún no han sido eliminados, necesitamos eliminar una de las dos últimas estrategias antes de que se pueda eliminar cualquier σi(q) con q > q, es decir, necesitamos alternar entre jugadores. Dado que hay exponencialmente muchas estrategias de la forma σi(q), se sigue que la eliminación iterada requerirá exponencialmente muchas iteraciones para completarse. Por lo tanto, un algoritmo eficiente para la dominancia iterada (estricta o débil) por estrategias puras en juegos bayesianos, si existe, debe ser capaz de realizar (al menos parte de) muchas iteraciones en un solo paso del algoritmo (porque si cada paso solo realizara una sola iteración, necesitaríamos exponencialmente muchos pasos). Interesantemente, Knuth et al. [11] argumentan que la dominancia iterada parece ser un problema inherentemente secuencial (a la luz de su resultado de que la dominancia muy débil iterada es P-completa, es decir, aparentemente no paralelizable de manera eficiente), lo que sugiere que la agregación de muchas iteraciones puede ser difícil. 7. CONCLUSIONES Aunque el concepto de equilibrio de Nash se estudia cada vez más intensamente en nuestra comunidad, el concepto quizás más elemental de dominancia (iterada) ha recibido mucha menos atención. En este artículo estudiamos varios aspectos computacionales de este concepto. Primero estudiamos tanto la dominancia estricta como la débil (no iterada), y demostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta puede hacerse en tiempo polinómico utilizando la resolución de un único programa lineal. Luego pasamos a la dominancia iterada. Mostramos que determinar si existe algún camino que elimine una estrategia dada es NP-completo con dominancia débil iterada. Esto nos permitió también demostrar que determinar si existe un camino que conduzca a una solución única es NP-completo. Ambos resultados se mantienen tanto con como sin dominancia de estrategias mixtas. (Una versión más débil del segundo resultado (solo sin dominancia de estrategias mixtas) ya se conocía [7].) La dominancia estricta iterada, por otro lado, es independiente del camino (tanto con como sin dominancia por estrategias mixtas) y, por lo tanto, puede realizarse en tiempo polinómico. Luego estudiamos qué sucede cuando la estrategia dominante puede asignar una probabilidad positiva solo a unas pocas estrategias puras. Primero, demostramos que encontrar la estrategia dominante con el tamaño de soporte mínimo es NP-completo (tanto para dominancia estricta como débil). Luego, demostramos que la dominancia estricta iterada se vuelve dependiente del camino cuando hay un límite en el tamaño del soporte de las estrategias dominantes, y que decidir si una estrategia dada puede ser eliminada por dominancia estricta iterada bajo esta restricción es NP-completo (incluso cuando el límite en el tamaño del soporte es 3). Finalmente, estudiamos la dominancia y la dominancia iterada en juegos bayesianos, como un ejemplo de un lenguaje de representación conciso para juegos en forma normal que es interesante por sí mismo. Mostramos que, a diferencia de los juegos en forma normal, decidir si una estrategia pura dada está dominada por otra estrategia pura en un juego bayesiano es NP-completo (tanto con dominancia estricta como débil); sin embargo, decidir si una estrategia está dominada por alguna estrategia mixta aún se puede hacer en tiempo polinómico con la resolución de un único programa lineal (tanto con dominancia estricta como débil). Finalmente, demostramos que la dominancia iterada utilizando estrategias puras puede requerir un número exponencial de iteraciones en un juego bayesiano (tanto con dominancia estricta como débil). Hay varias vías para investigaciones futuras. Primero, está la pregunta abierta de si es posible completar la dominancia iterada en juegos bayesianos en tiempo polinómico (aunque demostramos que a veces se requiere un número exponencial de alternancias entre los jugadores para eliminar estrategias). Segundo, podemos estudiar los aspectos computacionales del dominio (iterado) en representaciones concisas de juegos de forma normal que no sean juegos bayesianos, por ejemplo, en juegos gráficos o juegos de grafo de efecto local/acción. (Ya se ha estudiado cómo realizar eficientemente el dominio muy débil iterado en juegos estocásticos parcialmente observables). Finalmente, podemos preguntarnos si algunos de los algoritmos que describimos (como el de dominancia estricta iterada con estrategias mixtas) pueden ser optimizados para ser más rápidos. 8. REFERENCIAS [1] Krzysztof R. Apt. Pruebas uniformes de independencia del orden para varios procedimientos de eliminación de estrategias. Contribuciones a la Economía Teórica, 4(1), 2004. [2] Nivan A. R. Bhat y Kevin Leyton-Brown. Calculando equilibrios de Nash de juegos de gráficos de acción. En UAI, 2004. [3] Ben Blum, Christian R. Shelton y Daphne Koller. Un método de continuación para equilibrios de Nash en juegos estructurados. En IJCAI, 2003. [4] Vincent Conitzer y Tuomas Sandholm. Resultados de complejidad sobre equilibrios de Nash. En IJCAI, páginas 765-771, 2003. [5] Drew Fudenberg y Jean Tirole. <br>Teoría de juegos</br>. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "normal form game": {
            "translated_key": "forma normal",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Complexity of (Iterated) Dominance∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using dominance and iterated dominance.",
                "We first study both strict and weak dominance (not iterated), and show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then move on to iterated dominance.",
                "We show that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allows us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then study what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we show that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we show that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we study Bayesian games.",
                "We show that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak ∗ This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858, and a Sloan Fellowship. dominance).",
                "Finally, we show that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent systems with self-interested agents, the optimal action for one agent may depend on the actions taken by other agents.",
                "In such settings, the agents require tools from game theory to rationally decide on an action.",
                "Game theory offers various formal models of strategic settings-the best-known of which is a game in normal (or matrix) form, specifying a utility (payoff) for each agent for each combination of strategies that the agents choose-as well as solution concepts, which, given a game, specify which outcomes are reasonable (under various assumptions of rationality and common knowledge).",
                "Probably the best-known (and certainly the most-studied) solution concept is that of Nash equilibrium.",
                "A Nash equilibrium specifies a strategy for each player, in such a way that no player has an incentive to (unilaterally) deviate from the prescribed strategy.",
                "Recently, numerous papers have studied computing Nash equilibria in various settings [9, 4, 12, 3, 13, 14], and the complexity of constructing a Nash equilibrium in normal form games has been labeled one of the two most important open problems on the boundary of P today [20].",
                "The problem of computing solutions according to the perhaps more elementary solution concepts of dominance and iterated dominance has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the game theory community [7].1 ) A strategy strictly dominates another strategy if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one.",
                "The idea is that dominated strategies can be eliminated from consideration.",
                "In iterated dominance, the elimination proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating strategy no longer needs to perform better than or as well as the dominated strategy against opponent strategies that were eliminated in earlier rounds.",
                "Computing solutions according to (iterated) dominance is important for at least the following reasons: 1) it can be computationally easier than computing (for instance) a Nash equilibrium (and therefore it can be useful as a preprocessing step in computing a Nash equilibrium), and 2) (iterated) dominance requires a weaker rationality assumption on the players than (for instance) Nash equilibrium, and therefore solutions derived according to it are more likely to occur.",
                "In this paper, we study some fundamental computational questions concerning dominance and iterated dominance, including how hard it is to check whether a given strategy can be eliminated by each of the variants of these notions.",
                "The rest of the paper is organized as follows.",
                "In Section 2, we briefly review definitions and basic properties of normal form games, strict and weak dominance, and iterated strict and weak dominance.",
                "In the remaining sections, we study computational aspects of dominance and iterated dominance.",
                "In Section 3, we study one-shot (not iterated) dominance.",
                "In Section 4, we study iterated dominance.",
                "In Section 5, we study dominance and iterated dominance when the dominating strategy can only place probability on a few pure strategies.",
                "Finally, in Section 6, we study dominance and iterated dominance in Bayesian games. 2.",
                "DEFINITIONS AND BASIC PROPERTIES In this section, we briefly review normal form games, as well as dominance and iterated dominance (both strict and weak).",
                "An n-player <br>normal form game</br> is defined as follows.",
                "Definition 1.",
                "A <br>normal form game</br> is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of pure strategies Σi and a utility function ui : Σ1 × Σ2 × . . . × Σn → R (where ui(σ1, σ2, . . . , σn) denotes player is utility when each player j plays action σj).",
                "The two main notions of dominance are defined as follows.",
                "Definition 2.",
                "Player is strategy σi is said to be strictly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "Player is strategy σi is said to be weakly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) ≥ ui(σi, σ−i), and for at least one vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "In this definition, it is sometimes allowed for the dominating strategy σi to be a mixed strategy, that is, a probability distribution over pure strategies.",
                "In this case, the utilities in dominance altogether.",
                "For example, simple dominance checks are sometimes used as a subroutine in searching for Nash equilibria [21]. the definition are the expected utilities.2 There are other notions of dominance, such as very weak dominance (in which no strict inequality is required, so two strategies can dominate each other), but we will not study them here.",
                "When we are looking at the dominance relations for player i, the other players (−i) can be thought of as a single player.3 Therefore, in the rest of the paper, when we study one-shot (not iterated) dominance, we will focus without loss of generality on two-player games.4 In two-player games, we will generally refer to the players as r (row) and c (column) rather than 1 and 2.",
                "In iterated dominance, dominated strategies are removed from the game, and no longer have any effect on future dominance relations.",
                "Iterated dominance can eliminate more strategies than dominance, as follows. σr may originally not dominate σr because the latter performs better against σc; but then, once σc is removed because it is dominated by σc, σr dominates σr, and the latter can be removed.",
                "For example, in the following game, R can be removed first, after which D is dominated.",
                "L R U 1, 1 0, 0 D 0, 1 1, 0 Either strict or weak dominance can be used in the definition of iterated dominance.",
                "We note that the process of iterated dominance is never helped by removing a dominated mixed strategy, for the following reason.",
                "If σi gives player i a higher utility than σi against mixed strategy σj for player j = i (and strategies σ−{i,j} for the other players), then for at least one pure strategy σj that σj places positive probability on, σi must perform better than σi against σj (and strategies σ−{i,j} for the other players).",
                "Thus, removing the mixed strategy σj does not introduce any new dominances.",
                "More detailed discussions and examples can be found in standard texts on microeconomics or game theory [17, 5].",
                "We are now ready to move on to the core of this paper. 3.",
                "DOMINANCE (NOT ITERATED) In this section, we study the notion of one-shot (not iterated) dominance.",
                "As a first observation, checking whether a given strategy is strictly (weakly) dominated by some pure strategy is straightforward, by checking, for every pure strategy for that player, whether the latter strategy performs strictly better against all the opponents strategies (at least as well against all the opponents strategies, and strictly 2 The dominated strategy σi is, of course, also allowed to be mixed, but this has no technical implications for the paper: when we study one-shot dominance, we ask whether a given strategy is dominated, and it does not matter whether the given strategy is pure or mixed; when we study iterated dominance, there is no use in eliminating mixed strategies, as we will see shortly. 3 This player may have a very large strategy space (one pure strategy for every vector of pure strategies for the players that are being replaced).",
                "Nevertheless, this will not result in an increase in our representation size, because the original representation already had to specify utilities for each of these vectors. 4 We note that a restriction to two-player games would not be without loss of generality for iterated dominance.",
                "This is because for iterated dominance, we need to look at the dominated strategies of each individual player, so we cannot merge any players. 89 better against at least one).5 Next, we show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time by solving a single linear program. (Similar linear programs have been given before [18]; we present the result here for completeness, and because we will build on the linear programs given below in Theorem 6.)",
                "Proposition 1.",
                "Given the row players utilities, a subset Dr of the row players pure strategies Σr, and a distinguished strategy σ∗ r for the row player, we can check in time polynomial in the size of the game (by solving a single linear program of polynomial size) whether there exists some mixed strategy σr, that places positive probability only on strategies in Dr and dominates σ∗ r , both for strict and for weak dominance.",
                "Proof.",
                "Let pdr be the probability that σr places on dr ∈ Dr. We will solve a single linear program in each of our algorithms; linear programs can be solved in polynomial time [10].",
                "For strict dominance, the question is whether the pdr can be set so that for every pure strategy for the column player σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc).",
                "Because the inequality must be strict, we cannot solve this directly by linear programming.",
                "We proceed as follows.",
                "Because the game is finite, we may assume without loss of generality that all utilities are positive (if not, simply add a constant to all utilities.)",
                "Solve the following linear program: minimize dr∈Dr pdr such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc).",
                "If σ∗ r is strictly dominated by some mixed strategy, this linear program has a solution with objective value < 1. (The dominating strategy is a feasible solution with objective value exactly 1.",
                "Because no constraint is binding for this solution, we can reduce one of the probabilities slightly without affecting feasibility, thereby obtaining a solution with objective value < 1.)",
                "Moreover, if this linear program has a solution with objective value < 1, there is a mixed strategy strictly dominating σ∗ r , which can be obtained by taking the LP solution and adding the remaining probability to any strategy (because all the utilities are positive, this will add to the left side of any inequality, so all inequalities will become strict).",
                "For weak dominance, we can solve the following linear program: maximize σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1.",
                "If σ∗ r is weakly dominated by some mixed strategy, then that mixed strategy is a feasible solution to this program with objective value > 0, because for at least one strategy σc ∈ Σc we have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0.",
                "On the other hand, if this program has a solution with objective value > 0, then for at least one strategy σc ∈ Σc we 5 Recall that the assumption of a single opponent (that is, the assumption of two players) is without loss of generality for one-shot dominance. must have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, and thus the linear programs solution is a weakly dominating mixed strategy. 4.",
                "ITERATED DOMINANCE We now move on to iterated dominance.",
                "It is well-known that iterated strict dominance is path-independent [6, 19]that is, if we remove dominated strategies until no more dominated strategies remain, in the end the remaining strategies for each player will be the same, regardless of the order in which strategies are removed.",
                "Because of this, to see whether a given strategy can be eliminated by iterated strict dominance, all that needs to be done is to repeatedly remove strategies that are strictly dominated, until no more dominated strategies remain.",
                "Because we can check in polynomial time whether any given strategy is dominated (whether or not dominance by mixed strategies is allowed, as described in Section 3), this whole procedure takes only polynomial time.",
                "In the case of iterated dominance by pure strategies with two players, Knuth et al. [11] slightly improve on (speed up) the straightforward implementation of this procedure by keeping track of, for each ordered pair of strategies for a player, the number of opponent strategies that prevent the first strategy from dominating the second.",
                "Hereby the runtime for an m × n game is reduced from O((m + n)4 ) to O((m + n)3 ). (Actually, they only study very weak dominance (for which no strict inequalities are required), but the approach is easily extended.)",
                "In contrast, iterated weak dominance is known to be pathdependent.6 For example, in the following game, using iterated weak dominance we can eliminate M first, and then D, or R first, and then U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Therefore, while the procedure of removing weakly dominated strategies until no more weakly dominated strategies remain can certainly be executed in polynomial time, which strategies survive in the end depends on the order in which we remove the dominated strategies.",
                "We will investigate two questions for iterated weak dominance: whether a given strategy is eliminated in some path, and whether there is a path to a unique solution (one pure strategy left per player).",
                "We will show that both of these problems are computationally hard.",
                "Definition 3.",
                "Given a game in normal form and a distinguished strategy σ∗ , IWD-STRATEGY-ELIMINATION asks whether there is some path of iterated weak dominance that eliminates σ∗ .",
                "Given a game in normal form, IWDUNIQUE-SOLUTION asks whether there is some path of iterated weak dominance that leads to a unique solution (one strategy left per player).",
                "The following lemma shows a special case of normal form games in which allowing for weak dominance by mixed strategies (in addition to weak dominance by pure strategies) does 6 There is, however, a restriction of weak dominance called nice weak dominance which is path-independent [15, 16].",
                "For an overview of path-independence results, see Apt [1]. 90 not help.",
                "We will prove the hardness results in this setting, so that they will hold whether or not dominance by mixed strategies is allowed.",
                "Lemma 1.",
                "Suppose that all the utilities in a game are in {0, 1}.",
                "Then every pure strategy that is weakly dominated by a mixed strategy is also weakly dominated by a pure strategy.",
                "Proof.",
                "Suppose pure strategy σ is weakly dominated by mixed strategy σ∗ .",
                "If σ gets a utility of 1 against some opponent strategy (or vector of opponent strategies if there are more than 2 players), then all the pure strategies that σ∗ places positive probability on must also get a utility of 1 against that opponent strategy (or else the expected utility would be smaller than 1).",
                "Moreover, at least one of the pure strategies that σ∗ places positive probability on must get a utility of 1 against an opponent strategy that σ gets 0 against (or else the inequality would never be strict).",
                "It follows that this pure strategy weakly dominates σ.",
                "We are now ready to prove the main results of this section.",
                "Theorem 1.",
                "IWD-STRATEGY-ELIMINATION is NPcomplete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can easily check whether this is a valid sequence of eliminations (even when dominance by mixed strategies is allowed, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following IWD-STRATEGY-ELIMINATION instance. (In this instance, we will specify that certain strategies are uneliminable.",
                "A strategy σr can be made uneliminable, even when 0 and 1 are the only allowed utilities, by adding another strategy σr and another opponent strategy σc, so that: 1. σr and σr are the only strategies that give the row player a utility of 1 against σc. 2. σr and σr always give the row player the same utility. 3. σc is the only strategy that gives the column player a utility of 1 against σr, but otherwise σc always gives the column player utility 0.",
                "This makes it impossible to eliminate any of these three strategies.",
                "We will not explicitly specify the additional strategies to make the proof more legible.)",
                "In this proof, we will denote row player strategies by s, and column player strategies by t, to improve legibility.",
                "Let the row players pure strategy set be given as follows.",
                "For every variable v ∈ V , the row player has corresponding strategies s1 +v, s2 +v, s1 −v, s2 −v.",
                "Additionally, the row player has the following 2 strategies: s1 0 and s2 0, where s2 0 = σ∗ r (that is, it is the strategy we seek to eliminate).",
                "Finally, for every clause c ∈ C, the row player has corresponding strategies s1 c (uneliminable) and s2 c. Let the column players pure strategy set be given as follows.",
                "For every variable v ∈ V , the column player has a corresponding strategy tv.",
                "For every clause c ∈ C, the column player has a corresponding strategy tc, and additionally, for every literal l ∈ L that occurs in c, a strategy tc,l.",
                "For every variable v ∈ V , the column player has corresponding strategies t+v, t−v (both uneliminable).",
                "Finally, the column player has three additional strategies: t1 0 (uneliminable), t2 0, and t1.",
                "The utility function for the row player is given as follows: • ur(s1 +v, tv) = 0 for all v ∈ V ; • ur(s2 +v, tv) = 1 for all v ∈ V ; • ur(s1 −v, tv) = 1 for all v ∈ V ; • ur(s2 −v, tv) = 0 for all v ∈ V ; • ur(s1 +v, t1) = 1 for all v ∈ V ; • ur(s2 +v, t1) = 0 for all v ∈ V ; • ur(s1 −v, t1) = 0 for all v ∈ V ; • ur(s2 −v, t1) = 1 for all v ∈ V ; • ur(sb +v, t+v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sb −v, t−v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sl, t) = 0 otherwise for all l ∈ L and t ∈ S2; • ur(s1 0, tc) = 0 for all c ∈ C; • ur(s2 0, tc) = 1 for all c ∈ C; • ur(sb 0, t1 0) = 1 for all b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 otherwise for all b ∈ {1, 2} and t ∈ S2; • ur(sb c, t) = 0 otherwise for all c ∈ C and b ∈ {1, 2}; and the row players utility is 0 in every other case.",
                "The utility function for the column player is given as follows: • uc(s, tv) = 0 for all v ∈ V and s ∈ S1; • uc(s, t1) = 0 for all s ∈ S1; • uc(s2 l , tc) = 1 for all c ∈ C and l ∈ L where l ∈ c (literal l occurs in clause c); • uc(s2 l2 , tc,l1 ) = 1 for all c ∈ C and l1, l2 ∈ L, l1 = l2 where l2 ∈ c; • uc(s1 c, tc) = 1 for all c ∈ C; • uc(s2 c, tc) = 0 for all c ∈ C; • uc(sb c, tc,l) = 1 for all c ∈ C, l ∈ L, and b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 otherwise for all c ∈ C and l ∈ L; and the column players utility is 0 in every other case.",
                "We now show that the two instances are equivalent.",
                "First, suppose there is a solution to the satisfiability instance: that is, a truth-value assignment to the variables in V such that all clauses are satisfied.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the assignment, eliminate tv (which gives the column player utility 0 everywhere). 2.",
                "Then, for every variable v that is set to true in the assignment, eliminate s2 +v using s1 +v (which is possible because tv has been eliminated, and because t1 has not been eliminated (yet)). 3.",
                "Now eliminate t1 (which gives the column player utility 0 everywhere). 4.",
                "Next, for every variable v that is set to false in the assignment, eliminate s2 −v using s1 −v (which is possible because t1 has been eliminated, and because tv has not been eliminated (yet)). 5.",
                "For every clause c which has the variable corresponding to one of its positive literals l = +v set to true in the assignment, eliminate tc using tc,l (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 6.",
                "For every clause c which has the variable corresponding to one of its negative literals l = −v set to false in the assignment, eliminate tc using tc,l 91 (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 7.",
                "Because the assignment satisfied the formula, all the tc have now been eliminated.",
                "Thus, we can eliminate s2 0 = σ∗ r using s1 0.",
                "It follows that there is a solution to the IWD-STRATEGY-ELIMINATION instance.",
                "Now suppose there is a solution to the IWD-STRATEGYELIMINATION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We first observe that only s1 0 can eliminate s2 0 = σ∗ r , because it is the only other strategy that gets the row player a utility of 1 against t1 0, and t1 0 is uneliminable.",
                "However, because s2 0 performs better than s1 0 against the tc strategies, it follows that all of the tc strategies must be eliminated.",
                "For each c ∈ C, the strategy tc can only be eliminated by one of the strategies tc,l (with the same c), because these are the only other strategies that get the column player a utility of 1 against s1 c, and s1 c is uneliminable.",
                "But, in order for some tc,l to eliminate tc, s2 l must be eliminated first.",
                "Only s1 l can eliminate s2 l , because it is the only other strategy that gets the row player a utility of 1 against tl, and tl is uneliminable.",
                "We next show that for every v ∈ V only one of s2 +v, s2 −v can be eliminated.",
                "This is because in order for s1 +v to eliminate s2 +v, tv needs to have been eliminated and t1, not (so tv must be eliminated before t1); but in order for s1 −v to eliminate s2 −v, t1 needs to have been eliminated and tv, not (so t1 must be eliminated before tv).",
                "So, set v to true if s2 +v is eliminated, and to false otherwise Because by the above, for every clause c, one of the s2 l with l ∈ c must be eliminated, it follows that this is a satisfying assignment to the satisfiability instance.",
                "Using Theorem 1, it is now (relatively) easy to show that IWD-UNIQUE-SOLUTION is also NP-complete under the same restrictions.",
                "Theorem 2.",
                "IWD-UNIQUE-SOLUTION is NP-complete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "Again, the problem is in NP because we can nondeterministically choose the sequence of eliminations and verify whether it is correct.",
                "To show NP-hardness, we reduce an arbitrary IWD-STRATEGY-ELIMINATION instance to the following IWD-UNIQUE-SOLUTION instance.",
                "Let all the strategies for each player from the original instance remain part of the new instance, and let the utilities resulting from the players playing a pair of these strategies be the same.",
                "We add three additional strategies σ1 r , σ2 r , σ3 r for the row player, and three additional strategies σ1 c , σ2 c , σ3 c for the column player.",
                "Let the additional utilities be as follows: • ur(σr, σj c) = 1 for all σr /∈ {σ1 r , σ2 r , σ3 r } and j ∈ {2, 3}; • ur(σi r, σc) = 1 for all i ∈ {1, 2, 3} and σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 for all i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • and the row players utility is 0 in all other cases involving a new strategy. • uc(σ3 r , σc) = 1 for all σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 for all j ∈ {2, 3} (σ∗ r is the strategy to be eliminated in the original instance); • uc(σi r, σ1 c ) = 1 for all i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • and the column players utility is 0 in all other cases involving a new strategy.",
                "We proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the original IWDSTRATEGY-ELIMINATION instance.",
                "Then, perform the same sequence of eliminations to eliminate σ∗ r in the new IWD-UNIQUE-SOLUTION instance. (This is possible because at any stage, any weak dominance for the row player in the original instance is still a weak dominance in the new instance, because the two strategies utilities for the row player are the same when the column player plays one of the new strategies; and the same is true for the column player.)",
                "Once σ∗ r is eliminated, let σ1 c eliminate σ2 c . (It performs better against σ2 r .)",
                "Then, let σ1 r eliminate all the other remaining strategies for the row player. (It always performs better against either σ1 c or σ3 c .)",
                "Finally, σ1 c is the unique best response against σ1 r among the column players remaining strategies, so let it eliminate all the other remaining strategies for the column player.",
                "Thus, there exists a solution to the IWD-UNIQUE-SOLUTION instance.",
                "Now suppose there exists a solution to the IWD-UNIQUESOLUTION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We will show that none of the new strategies (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) can either eliminate another strategy, or be eliminated before σ∗ r is eliminated.",
                "Thus, there must be a sequence of eliminations ending in the elimination of σ∗ r , which does not involve any of the new strategies, and is therefore a valid sequence of eliminations in the original game (because all original strategies perform the same against each new strategy).",
                "We now show that this is true by exhausting all possibilities for the first elimination before σ∗ r is eliminated that involves a new strategy.",
                "None of the σi r can be eliminated by a σr /∈ {σ1 r , σ2 r , σ3 r }, because the σi r perform better against σ1 c . σ1 r cannot eliminate any other strategy, because it always performs poorer against σ2 c . σ2 r and σ3 r are equivalent from the row players perspective (and thus cannot eliminate each other), and cannot eliminate any other strategy because they always perform poorer against σ3 c .",
                "None of the σj c can be eliminated by a σc /∈ {σ1 c , σ2 c , σ3 c }, because the σj c always perform better against either σ1 r or σ2 r . σ1 c cannot eliminate any other strategy, because it always performs poorer against either σ∗ r or σ3 r . σ2 c cannot eliminate any other strategy, because it always performs poorer against σ2 r or σ3 r . σ3 c cannot eliminate any other strategy, because it always performs poorer against σ1 r or σ3 r .",
                "Thus, there exists a solution to the IWDSTRATEGY-ELIMINATION instance.",
                "A slightly weaker version of the part of Theorem 2 concerning dominance by pure strategies only is the main result of Gilboa et al. [7]. (Besides not proving the result for dominance by mixed strategies, the original result was weaker because it required utilities {0, 1, 2, 3, 4, 5, 6, 7, 8} rather than just {0, 1} (and because of this, our Lemma 1 cannot be applied to it to get the result for mixed strategies).) 5. (ITERATED) DOMINANCE USING MIXED STRATEGIES WITH SMALL SUPPORTS When showing that a strategy is dominated by a mixed strategy, there are several reasons to prefer exhibiting a 92 dominating strategy that places positive probability on as few pure strategies as possible.",
                "First, this will reduce the number of bits required to specify the dominating strategy (and thus the proof of dominance can be communicated quicker): if the dominating mixed strategy places positive probability on only k strategies, then it can be specified using k real numbers for the probabilities, plus k log m (where m is the number of strategies for the player under consideration) bits to indicate which strategies are used.",
                "Second, the proof of dominance will be cleaner: for a dominating mixed strategy, it is typically (always in the case of strict dominance) possible to spread some of the probability onto any unused pure strategy and still have a dominating strategy, but this obscures which pure strategies are the ones that are key in making the mixed strategy dominating.",
                "Third, because (by the previous) the argument for eliminating the dominated strategy is simpler and easier to understand, it is more likely to be accepted.",
                "Fourth, the level of risk neutrality required for the argument to work is reduced, at least in the extreme case where dominance by a single pure strategy can be exhibited (no risk neutrality is required here).",
                "This motivates the following problem.",
                "Definition 4 (MINIMUM-DOMINATING-SET).",
                "We are given the row players utilities of a game in normal form, a distinguished strategy σ∗ for the row player, a specification of whether the dominance should be strict or weak, and a number k. We are asked whether there exists a mixed strategy σ for the row player that places positive probability on at most k pure strategies, and dominates σ∗ in the required sense.",
                "Unfortunately, this problem is NP-complete.",
                "Theorem 3.",
                "MINIMUM-DOMINATING-SET is NPcomplete, both for strict and for weak dominance.",
                "Proof.",
                "The problem is in NP because we can nondeterministically choose a set of at most k strategies to give positive probability, and decide whether we can dominate σ∗ with these k strategies as described in Proposition 1.",
                "To show NP-hardness, we reduce an arbitrary SET-COVER instance (given a set S, subsets S1, S2, . . . , Sr, and a number t, can all of S be covered by at most t of the subsets?) to the following MINIMUM-DOMINATING-SET instance.",
                "For every element s ∈ S, there is a pure strategy σs for the column player.",
                "For every subset Si, there is a pure strategy σSi for the row player.",
                "Finally, there is the distinguished pure strategy σ∗ for the row player.",
                "The row players utilities are as follows: ur(σSi , σs) = t + 1 if s ∈ Si; ur(σSi , σs) = 0 if s /∈ Si; ur(σ∗ , σs) = 1 for all s ∈ S. Finally, we let k = t. We now proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the SET-COVER instance.",
                "Without loss of generality, we can assume that there are exactly k subsets in the cover.",
                "Then, for every Si that is in the cover, let the dominating strategy σ place exactly 1 k probability on the corresponding pure strategy σSi .",
                "Now, if we let n(s) be the number of subsets in the cover containing s (we observe that that n(s) ≥ 1), then for every strategy σs for the column player, the row players expected utility for playing σ when the column player is playing σs is u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs).",
                "So σ strictly (and thus also weakly) dominates σ∗ , and there exists a solution to the MINIMUM-DOMINATING-SET instance.",
                "Now suppose there exists a solution to the MINIMUMDOMINATING-SET instance.",
                "Consider the (at most k) pure strategies of the form σSi on which the dominating mixed strategy σ places positive probability, and let T be the collection of the corresponding subsets Si.",
                "We claim that T is a cover.",
                "For suppose there is some s ∈ S that is not in any of the subsets in T .",
                "Then, if the column player plays σs, the row player (when playing σ) will always receive utility 0-as opposed to the utility of 1 the row player would receive for playing σ∗ , contradicting the fact that σ dominates σ∗ (whether this dominance is weak or strict).",
                "It follows that there exists a solution to the SET-COVER instance.",
                "On the other hand, if we require that the dominating strategy only places positive probability on a very small number of pure strategies, then it once again becomes easy to check whether a strategy is dominated.",
                "Specifically, to find out whether player is strategy σ∗ is dominated by a strategy that places positive probability on only k pure strategies, we can simply check, for every subset of k of player is pure strategies, whether there is a strategy that places positive probability only on these k strategies and dominates σ∗ , using Proposition 1.",
                "This requires only O(|Σi|k ) such checks.",
                "Thus, if k is a constant, this constitutes a polynomial-time algorithm.",
                "A natural question to ask next is whether iterated strict dominance remains computationally easy when dominating strategies are required to place positive probability on at most k pure strategies, where k is a small constant. (We have already shown in Section 4 that iterated weak dominance is hard even when k = 1, that is, only dominance by pure strategies is allowed.)",
                "Of course, if iterated strict dominance were path-independent under this restriction, computational easiness would follow as it did in Section 4.",
                "However, it turns out that this is not the case.",
                "Observation 1.",
                "If we restrict the dominating strategies to place positive probability on at most two pure strategies, iterated strict dominance becomes path-dependent.",
                "Proof.",
                "Consider the following game: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Let (i, j) denote the outcome in which the row player plays the ith row and the column player plays the jth column.",
                "Because (1, 1), (2, 2), and (4, 3) are all Nash equilibria, none of the column players pure strategies will ever be eliminated, and neither will rows 1, 2, and 4.",
                "We now observe that randomizing uniformly over rows 1 and 2 dominates row 3, and randomizing uniformly over rows 3 and 4 dominates row 5.",
                "However, if we eliminate row 3 first, it becomes impossible to dominate row 5 without randomizing over at least 3 pure strategies.",
                "Indeed, iterated strict dominance turns out to be hard even when k = 3.",
                "Theorem 4.",
                "If we restrict the dominating strategies to place positive probability on at most three pure strategies, it becomes NP-complete to decide whether a given strategy can be eliminated using iterated strict dominance. 93 Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can check in polynomial time whether this is a valid sequence of eliminations (for any strategy to be eliminated, we can check, for every subset of three other strategies, whether there is a strategy placing positive probability on only these three strategies that dominates the strategy to be eliminated, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following two-player game.",
                "For every variable v ∈ V , the row player has strategies s+v, s−v, s1 v, s2 v, s3 v, s4 v, and the column player has strategies t1 v, t2 v, t3 v, t4 v. For every clause c ∈ C, the row player has a strategy sc, and the column player has a strategy tc, as well as, for every literal l occurring in c, an additional strategy tl c. The row player has two additional strategies s1 and s2. (s2 is the strategy that we are seeking to eliminate.)",
                "Finally, the column player has one additional strategy t1.",
                "The utility function for the row player is given as follows (where is some sufficiently small number): • ur(s+v, tj v) = 4 if j ∈ {1, 2}, for all v ∈ V ; • ur(s+v, tj v) = 1 if j ∈ {3, 4}, for all v ∈ V ; • ur(s−v, tj v) = 1 if j ∈ {1, 2}, for all v ∈ V ; • ur(s−v, tj v) = 4 if j ∈ {3, 4}, for all v ∈ V ; • ur(s+v, t) = ur(s−v, t) = 0 for all v ∈ V and t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 for all v ∈ V and i ∈ {1, 2, 3, 4}; • ur(si v, t) = for all v ∈ V , i ∈ {1, 2, 3, 4}, and t = ti v; • ur(sc, tc) = 2 for all c ∈ C; • ur(sc, t) = 0 for all c ∈ C and t = tc; • ur(s1, t1) = 1 + ; • ur(s1, t) = for all t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 for all c ∈ C; • ur(s2, t) = 0 for all t /∈ {t1} ∪ {tc : c ∈ C}.",
                "The utility function for the column player is given as follows: • uc(si v, ti v) = 1 for all v ∈ V and i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 for all v ∈ V , i ∈ {1, 2, 3, 4}, and s = si v; • uc(sc, tc) = 1 for all c ∈ C; • uc(sl, tc) = 1 for all c ∈ C and l ∈ L occurring in c; • uc(s, tc) = 0 for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + for all c ∈ C; • uc(sl , tl c) = 1 + for all c ∈ C and l = l occurring in c; • uc(s, tl c) = for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c, l = l }; • uc(s2, t1) = 1; • uc(s, t1) = 0 for all s = s2.",
                "We now show that the two instances are equivalent.",
                "First, suppose that there is a solution to the satisfiability instance.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the satisfying assignment, eliminate s+v with the mixed strategy σr that places probability 1/3 on s−v, probability 1/3 on s1 v, and probability 1/3 on s2 v. (The expected utility of playing σr against t1 v or t2 v is 14/3 > 4; against t3 v or t4 v, it is 4/3 > 1; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 2.",
                "Similarly, for every variable v that is set to false in the satisfying assignment, eliminate s−v with the mixed strategy σr that places probability 1/3 on s+v, probability 1/3 on s3 v, and probability 1/3 on s4 v. (The expected utility of playing σr against t1 v or t2 v is 4/3 > 1; against t3 v or t4 v, it is 14/3 > 4; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 3.",
                "For every c ∈ C, eliminate tc with any tl c for which l was set to true in the satisfying assignment. (This is a valid dominance because tl c performs better than tc against any strategy other than sl, and we eliminated sl in step 1 or in step 2.) 4.",
                "Finally, eliminate s2 with s1. (This is a valid dominance because s1 performs better than s2 against any strategy other than those in {tc : c ∈ C}, which we eliminated in step 3.)",
                "Hence, there is an elimination path that eliminates s2.",
                "Now, suppose that there is an elimination path that eliminates s2.",
                "The strategy that eventually dominates s2 must place most of its probability on s1, because s1 is the only other strategy that performs well against t1, which cannot be eliminated before s2.",
                "But, s1 performs significantly worse than s2 against any strategy tc with c ∈ C, so it follows that all these strategies must be eliminated first.",
                "Each strategy tc can only be eliminated by a strategy that places most of its weight on the corresponding strategies tl c with l ∈ c, because they are the only other strategies that perform well against sc, which cannot be eliminated before tc.",
                "But, each strategy tl c performs significantly worse than tc against sl, so it follows that for every clause c, for one of the literals l occurring in it, sl must be eliminated first.",
                "Now, strategies of the form tj v will never be eliminated because they are the unique best responses to the corresponding strategies sj v (which are, in turn, the best responses to the corresponding tj v).",
                "As a result, if strategy s+v (respectively, s−v) is eliminated, then its opposite strategy s−v (respectively, s+v) can no longer be eliminated, for the following reason.",
                "There is no other pure strategy remaining that gets a significant utility against more than one of the strategies t1 v, t2 v, t3 v, t4 v, but s−v (respectively, s+v) gets significant utility against all 4, and therefore cannot be dominated by a mixed strategy placing positive probability on at most 3 strategies.",
                "It follows that for each v ∈ V , at most one of the strategies s+v, s−v is eliminated, in such a way that for every clause c, for one of the literals l occurring in it, sl must be eliminated.",
                "But then setting all the literals l such that sl is eliminated to true constitutes a solution to the satisfiability instance.",
                "In the next section, we return to the setting where there is no restriction on the number of pure strategies on which a dominating mixed strategy can place positive probability. 6. (ITERATED) DOMINANCE IN BAYESIAN GAMES So far, we have focused on normal form games that are flatly represented (that is, every matrix entry is given ex94 plicitly).",
                "However, for many games, the flat representation is too large to write down explicitly, and instead, some representation that exploits the structure of the game needs to be used.",
                "Bayesian games, besides being of interest in their own right, can be thought of as a useful structured representation of normal form games, and we will study them in this section.",
                "In a Bayesian game, each player first receives privately held preference information (the players type) from a distribution, which determines the utility that that player receives for every outcome of (that is, vector of actions played in) the game.",
                "After receiving this type, the player plays an action based on it.7 Definition 5.",
                "A Bayesian game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of actions Ai, a (finite) type space Θi with a probability distribution πi over it, and a utility function ui : Θi × A1 × A2 × . . . × An → R (where ui(θi, a1, a2, . . . , an) denotes player is utility when is type is θi and each player j plays action aj).",
                "A pure strategy in a Bayesian game is a mapping from types to actions, σi : Θi → Ai, where σi(θi) denotes the action that player i plays for type θi.",
                "Any vector of pure strategies in a Bayesian game defines an (expected) utility for each player, and therefore we can translate a Bayesian game into a <br>normal form game</br>.",
                "In this <br>normal form game</br>, the notions of dominance and iterated dominance are defined as before.",
                "However, the normal form representation of the game is exponentially larger than the Bayesian representation, because each player i has |Ai||Θi| distinct pure strategies.",
                "Thus, any algorithm for Bayesian games that relies on expanding the game to its normal form will require exponential time.",
                "Specifically, our easiness results for normal form games do not directly transfer to this setting.",
                "In fact, it turns out that checking whether a strategy is dominated by a pure strategy is hard in Bayesian games.",
                "Theorem 5.",
                "In a Bayesian game, it is NP-complete to decide whether a given pure strategy σr : Θr → Ar is dominated by some other pure strategy (both for strict and weak dominance), even when the row players distribution over types is uniform.",
                "Proof.",
                "The problem is in NP because it is easy to verify whether a candidate dominating strategy is indeed a dominating strategy.",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a set of clauses C using variables from V ) to the following Bayesian game.",
                "Let the row players action set be Ar = {t, f, 0} and let the column players action set be Ac = {ac : c ∈ C}.",
                "Let the row players type set be Θr = {θv : v ∈ V }, with a distribution πr that is uniform.",
                "Let the row players utility function be as follows: • ur(θv, 0, ac) = 0 for all v ∈ V and c ∈ C; • ur(θv, b, ac) = |V | for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b satisfies c; • ur(θv, b, ac) = −1 for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b does not satisfy c. 7 In general, a player can also receive a signal about the other players preferences, but we will not concern ourselves with that here.",
                "Let the pure strategy to be dominated be the one that plays 0 for every type.",
                "We show that the strategy is dominated by a pure strategy if and only if there is a solution to the satisfiability instance.",
                "First, suppose there is a solution to the satisfiability instance.",
                "Then, let σd r be given by: σd r (θv) = t if v is set to true in the solution to the satisfiability instance, and σd r (θv) = f otherwise.",
                "Then, against any action ac by the column player, there is at least one type θv such that either +v ∈ c and σd r (θv) = t, or −v ∈ c and σd r (θv) = f. Thus, the row players expected utility against action ac is at least |V | |V | − |V |−1 |V | = 1 |V | > 0.",
                "So, σd r is a dominating strategy.",
                "Now, suppose there is a dominating pure strategy σd r .",
                "This dominating strategy must play t or f for at least one type.",
                "Thus, against any ac by the column player, there must at least be some type θv for which ur(θv, σd r (θv), ac) > 0.",
                "That is, there must be at least one variable v such that setting v to σd r (θv) satifies c. But then, setting each v to σd r (θv) must satisfy all the clauses.",
                "So a satisfying assignment exists.",
                "However, it turns out that we can modify the linear programs from Proposition 1 to obtain a polynomial time algorithm for checking whether a strategy is dominated by a mixed strategy in Bayesian games.",
                "Theorem 6.",
                "In a Bayesian game, it can be decided in polynomial time whether a given (possibly mixed) strategy σr is dominated by some other mixed strategy, using linear programming (both for strict and weak dominance).",
                "Proof.",
                "We can modify the linear programs presented in Proposition 1 as follows.",
                "For strict dominance, again assuming without loss of generality that all the utilities in the game are positive, use the following linear program (in which pσr r (θr, ar) is the probability that σr, the strategy to be dominated, places on ar for type θr): minimize θr∈Θr ar∈Ar pr(ar) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1.",
                "Assuming that π(θr) > 0 for all θr ∈ Θr, this program will return an objective value smaller than |Θr| if and only if σr is strictly dominated, by reasoning similar to that done in Proposition 1.",
                "For weak dominance, use the following linear program: maximize ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) = 1.",
                "This program will return an objective value greater than 0 if and only if σr is weakly dominated, by reasoning similar to that done in Proposition 1.",
                "We now turn to iterated dominance in Bayesian games.",
                "Na¨ıvely, one might argue that iterated dominance in Bayesian 95 games always requires an exponential number of steps when a significant fraction of the games pure strategies can be eliminated, because there are exponentially many pure strategies.",
                "However, this is not a very strong argument because oftentimes we can eliminate exponentially many pure strategies in one step.",
                "For example, if for some type θr ∈ Θr we have, for all ac ∈ Ac, that u(θr, a1 r, ac) > u(θr, a2 r, ac), then any pure strategy for the row player which plays action a2 r for type θr is dominated (by the strategy that plays action a1 r for type θr instead)-and there are exponentially many (|Ar||Θr|−1 ) such strategies.",
                "It is therefore conceivable that we need only polynomially many eliminations of collections of a players strategies.",
                "However, the following theorem shows that this is not the case, by giving an example where an exponential number of iterations (that is, alternations between the players in eliminating strategies) is required. (We emphasize that this is not a result about computational complexity.)",
                "Theorem 7.",
                "Even in symmetric 3-player Bayesian games, iterated dominance by pure strategies can require an exponential number of iterations (both for strict and weak dominance), even with only three actions per player.",
                "Proof.",
                "Let each player i ∈ {1, 2, 3} have n + 1 types θ1 i , θ2 i , . . . , θn+1 i .",
                "Let each player i have 3 actions ai, bi, ci, and let the utility function of each player be defined as follows. (In the below, i + 1 and i + 2 are shorthand for i + 1(mod 3) and i + 2(mod 3) when used as player indices.",
                "Also, −∞ can be replaced by a sufficiently negative number.",
                "Finally, δ and should be chosen to be very small (even compared to 2−(n+1) ), and should be more than twice as large as δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 for si+1 = ci+1 or si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − for si+1 = ai+1 and si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ for si+1 = ai+1 or si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ for all si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ for all si+1, si+2 when j > 1; • ui(θj i ; bi, si+1, si+2) = − for all si+1, si+2 when j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 for all si+1 when j > 1; • ui(θj i ; ci, si+1, si+2) = δ− for all si+1 and si+2 = ci+2 when j > 1.",
                "Let the distribution over each players types be given by p(θj i ) = 2−j (with the exception that p(θ2 i ) = 2−2 +2−(n+1) ).",
                "We will be interested in eliminating strategies of the following form: play bi for type θ1 i , and play one of bi or ci otherwise.",
                "Because the utility function is the same for any type θj i with j > 1, these strategies are effectively defined by the total probability that they place on ci,8 which is t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j where tj i = 1 if player i 8 Note that the strategies are still pure strategies; the probability placed on an action by a strategy here is simply the sum of the probabilities of the types for which the strategy chooses that action. plays ci for type θj i , and 0 otherwise.",
                "This probability is different for any two different strategies of the given form, and we have exponentially many different strategies of the given form.",
                "For any probability q which can be expressed as t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (with all tj ∈ {0, 1}), let σi(q) denote the (unique) strategy of the given form for player i which places a total probability of q on ci.",
                "Any strategy that plays ci for type θ1 i or ai for some type θj i with j > 1 can immediately be eliminated.",
                "We will show that, after that, we must eliminate the strategies σi(q) with high q first, slowly working down to those with lower q.",
                "Claim 1: If σi+1(q ) and σi+2(q ) have not yet been eliminated, and q < q , then σi(q) cannot yet be eliminated.",
                "Proof: First, we show that no strategy σi(q ) can eliminate σi(q).",
                "Against σi+1(q ), σi+2(q ), the utility of playing σi(p) is − + p · δ − p · q /2.",
                "Thus, when q = 0, it is best to set p as high as possible (and we note that σi+1(0) and σi+2(0) have not been eliminated), but when q > 0, it is best to set p as low as possible because δ < q /2.",
                "Thus, whether q > q or q < q , σi(q) will always do strictly better than σi(q ) against some remaining opponent strategies.",
                "Hence, no strategy σi(q ) can eliminate σi(q).",
                "The only other pure strategies that could dominate σi(q) are strategies that play ai for type θ1 i , and bi or ci for all other types.",
                "Let us take such a strategy and suppose that it plays c with probability p. Against σi+1(q ), σi+2(q ) (which have not yet been eliminated), the utility of playing this strategy is −(q )2 /2 − /2 + p · δ − p · q /2.",
                "On the other hand, playing σi(q) gives − + q · δ − q · q /2.",
                "Because q > q, we have −(q )2 /2 < −q · q /2, and because δ and are small, it follows that σi(q) receives a higher utility.",
                "Therefore, no strategy dominates σi(q), proving the claim.",
                "Claim 2: If for all q > q, σi+1(q ) and σi+2(q ) have been eliminated, then σi(q) can be eliminated.",
                "Proof: Consider the strategy for player i that plays ai for type θ1 i , and bi for all other types (call this strategy σi); we claim σi dominates σi(q).",
                "First, if either of the other players k plays ak for θ1 k, then σi performs better than σi(q) (which receives −∞ in some cases).",
                "Because the strategies for player k that play ck for type θ1 k, or ak for some type θj k with j > 1, have already been eliminated, all that remains to check is that σi performs better than σi(q) whenever both of the other two players play strategies of the following form: play bk for type θ1 k, and play one of bk or ck otherwise.",
                "We note that among these strategies, there are none left that place probability greater than q on ck.",
                "Letting qk denote the probability with which player k plays ck, the expected utility of playing σi is −qi+1 · qi+2/2 − /2.",
                "On the other hand, the utility of playing σi(q) is − + q · δ − q · qi+2/2.",
                "Because qi+1 ≤ q, the difference between these two expressions is at least /2 − δ, which is positive.",
                "It follows that σi dominates σi(q).",
                "From Claim 2, it follows that all strategies of the form σi(q) will eventually be eliminated.",
                "However, Claim 1 shows that we cannot go ahead and eliminate multiple such strategies for one player, unless at least one other player simultaneously keeps up in the eliminated strategies: every time a σi(q) is eliminated such that σi+1(q) and σi+2(q) have not yet been eliminated, we need to eliminate one of the latter two strategies before any σi(q ) with q > q can be eliminated-that is, we need to alternate between players.",
                "Because there are exponentially many strategies of the form σi(q), it follows that iterated elimination will require exponentially many iterations to complete. 96 It follows that an efficient algorithm for iterated dominance (strict or weak) by pure strategies in Bayesian games, if it exists, must somehow be able to perform (at least part of) many iterations in a single step of the algorithm (because if each step only performed a single iteration, we would need exponentially many steps).",
                "Interestingly, Knuth et al. [11] argue that iterated dominance appears to be an inherently sequential problem (in light of their result that iterated very weak dominance is P-complete, that is, apparently not efficiently parallelizable), suggesting that aggregating many iterations may be difficult. 7.",
                "CONCLUSIONS While the Nash equilibrium solution concept is studied more and more intensely in our community, the perhaps more elementary concept of (iterated) dominance has received much less attention.",
                "In this paper we studied various computational aspects of this concept.",
                "We first studied both strict and weak dominance (not iterated), and showed that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then moved on to iterated dominance.",
                "We showed that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allowed us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then studied what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we showed that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we showed that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we studied dominance and iterated dominance in Bayesian games, as an example of a concise representation language for normal form games that is interesting in its own right.",
                "We showed that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak dominance).",
                "Finally, we showed that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "There are various avenues for future research.",
                "First, there is the open question of whether it is possible to complete iterated dominance in Bayesian games in polynomial time (even though we showed that an exponential number of alternations between the players in eliminating strategies is sometimes required).",
                "Second, we can study computational aspects of (iterated) dominance in concise representations of normal form games other than Bayesian games-for example, in graphical games [9] or local-effect/action graph games [12, 2]. (How to efficiently perform iterated very weak dominance has already been studied for partially observable stochastic games [8].)",
                "Finally, we can ask whether some of the algorithms we described (such as the one for iterated strict dominance with mixed strategies) can be made faster. 8.",
                "REFERENCES [1] Krzysztof R. Apt.",
                "Uniform proofs of order independence for various strategy elimination procedures.",
                "Contributions to Theoretical Economics, 4(1), 2004. [2] Nivan A. R. Bhat and Kevin Leyton-Brown.",
                "Computing Nash equilibria of action-graph games.",
                "In UAI, 2004. [3] Ben Blum, Christian R. Shelton, and Daphne Koller.",
                "A continuation method for Nash equilibria in structured games.",
                "In IJCAI, 2003. [4] Vincent Conitzer and Tuomas Sandholm.",
                "Complexity results about Nash equilibria.",
                "In IJCAI, pages 765-771, 2003. [5] Drew Fudenberg and Jean Tirole.",
                "Game Theory.",
                "MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "On the order of eliminating dominated strategies.",
                "Operations Research Letters, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "The complexity of eliminating dominated strategies.",
                "Mathematics of Operation Research, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein, and Shlomo Zilberstein.",
                "Dynamic programming for partially observable stochastic games.",
                "In AAAI, pages 709-715, 2004. [9] Michael Kearns, Michael Littman, and Satinder Singh.",
                "Graphical models for game theory.",
                "In UAI, 2001. [10] Leonid Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou, and John N Tsitsiklis.",
                "A note on strategy elimination in bimatrix games.",
                "Operations Research Letters, 7(3):103-107, 1988. [12] Kevin Leyton-Brown and Moshe Tennenholtz.",
                "Local-effect games.",
                "In IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [14] Michael Littman and Peter Stone.",
                "A polynomial-time Nash equilibrium algorithm for repeated games.",
                "In ACM-EC, pages 48-54, 2003. [15] Leslie M. Marx and Jeroen M. Swinkels.",
                "Order independence for iterated weak dominance.",
                "Games and Economic Behavior, 18:219-245, 1997. [16] Leslie M. Marx and Jeroen M. Swinkels.",
                "Corrigendum, order independence for iterated weak dominance.",
                "Games and Economic Behavior, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston, and Jerry R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [18] Roger Myerson.",
                "Game Theory: Analysis of Conflict.",
                "Harvard University Press, Cambridge, 1991. [19] Martin J Osborne and Ariel Rubinstein.",
                "A Course in Game Theory.",
                "MIT Press, 1994. [20] Christos Papadimitriou.",
                "Algorithms, games and the Internet.",
                "In STOC, pages 749-753, 2001. [21] Ryan Porter, Eugene Nudelman, and Yoav Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, 2004. 97"
            ],
            "original_annotated_samples": [
                "An n-player <br>normal form game</br> is defined as follows.",
                "A <br>normal form game</br> is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of pure strategies Σi and a utility function ui : Σ1 × Σ2 × . . . × Σn → R (where ui(σ1, σ2, . . . , σn) denotes player is utility when each player j plays action σj).",
                "Any vector of pure strategies in a Bayesian game defines an (expected) utility for each player, and therefore we can translate a Bayesian game into a <br>normal form game</br>.",
                "In this <br>normal form game</br>, the notions of dominance and iterated dominance are defined as before."
            ],
            "translated_annotated_samples": [
                "Un juego de <br>forma normal</br> de n jugadores se define de la siguiente manera.",
                "Un juego en <br>forma normal</br> está dado por un conjunto de jugadores {1, 2, . . . , n}; y, para cada jugador i, un conjunto (finito) de estrategias puras Σi y una función de utilidad ui : Σ1 × Σ2 × . . . × Σn → R (donde ui(σ1, σ2, . . . , σn) denota la utilidad del jugador i cuando cada jugador j juega la acción σj).",
                "Cualquier vector de estrategias puras en un juego bayesiano define una utilidad (esperada) para cada jugador, y por lo tanto podemos traducir un juego bayesiano en un <br>juego en forma normal</br>.",
                "En este <br>juego en forma normal</br>, las nociones de dominancia y dominancia iterada se definen como antes."
            ],
            "translated_text": "Estudiamos varios aspectos computacionales de la resolución de juegos utilizando la dominancia y la dominancia iterada. Primero estudiamos tanto la dominancia estricta como la débil (no iterada), y demostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta se puede hacer en tiempo polinómico utilizando la resolución de un único programa lineal. Luego pasamos a la dominancia iterada. Mostramos que determinar si existe algún camino que elimine una estrategia dada es NP-completo con dominancia débil iterada. Esto nos permite también demostrar que determinar si existe un camino que conduce a una solución única es NP-completo. Ambos resultados se mantienen tanto con como sin dominancia de estrategias mixtas. (Una versión más débil del segundo resultado (solo sin dominancia de estrategias mixtas) ya se conocía [7].) La dominancia estricta iterada, por otro lado, es independiente de la ruta (tanto con como sin dominancia por estrategias mixtas) y, por lo tanto, se puede realizar en tiempo polinómico. Luego estudiamos qué sucede cuando la estrategia dominante puede asignar una probabilidad positiva solo a unas pocas estrategias puras. Primero, demostramos que encontrar la estrategia dominante con el tamaño de soporte mínimo es NP-completo (tanto para dominancia estricta como débil). Luego, demostramos que la dominancia estricta iterada se vuelve dependiente del camino cuando hay un límite en el tamaño del soporte de las estrategias dominantes, y que decidir si una estrategia dada puede ser eliminada por dominancia estricta iterada bajo esta restricción es NP-completo (incluso cuando el límite en el tamaño del soporte es 3). Finalmente, estudiamos juegos bayesianos. Mostramos que, a diferencia de los juegos en forma normal, decidir si una estrategia pura dada está dominada por otra estrategia pura en un juego bayesiano es NP-completo (tanto con dominancia estricta como débil); sin embargo, decidir si una estrategia está dominada por alguna estrategia mixta aún puede hacerse en tiempo polinómico con la resolución de un único programa lineal (tanto con dominancia estricta como débil). Finalmente, demostramos que la dominancia iterada utilizando estrategias puras puede requerir un número exponencial de iteraciones en un juego bayesiano (tanto con dominancia estricta como débil). Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN En sistemas multiagentes con agentes auto-interesados, la acción óptima para un agente puede depender de las acciones tomadas por otros agentes. En tales contextos, los agentes necesitan herramientas de teoría de juegos para decidir racionalmente sobre una acción. La teoría de juegos ofrece varios modelos formales de escenarios estratégicos, el más conocido de los cuales es un juego en forma normal (o matriz), que especifica una utilidad (pago) para cada agente en cada combinación de estrategias que los agentes eligen, así como conceptos de solución que, dados un juego, especifican qué resultados son razonables (bajo varias suposiciones de racionalidad y conocimiento común). Probablemente el concepto de solución más conocido (y ciertamente el más estudiado) es el equilibrio de Nash. Un equilibrio de Nash especifica una estrategia para cada jugador, de tal manera que ningún jugador tiene un incentivo para desviarse (unilateralmente) de la estrategia prescrita. Recientemente, numerosos artículos han estudiado el cálculo de equilibrios de Nash en diferentes contextos [9, 4, 12, 3, 13, 14], y la complejidad de construir un equilibrio de Nash en juegos en forma normal ha sido etiquetada como uno de los dos problemas abiertos más importantes en el límite de P hoy en día [20]. El problema de calcular soluciones de acuerdo con los conceptos de solución quizás más elementales de dominancia y dominancia iterada ha recibido mucha menos atención. (Después de un breve artículo temprano sobre un caso sencillo [11], el principal estudio computacional de estos conceptos ha tenido lugar en realidad en un artículo de la comunidad de teoría de juegos [7].) Una estrategia domina estrictamente a otra estrategia si tiene un rendimiento estrictamente mejor contra todos los vectores de estrategias del oponente, y la domina débilmente si tiene al menos el mismo rendimiento contra todos los vectores de estrategias del oponente, y estrictamente mejor contra al menos uno. La idea es que las estrategias dominadas pueden ser eliminadas de consideración. En la dominancia iterada, la eliminación avanza en rondas y se vuelve más fácil a medida que se eliminan más estrategias: en cualquier ronda dada, la estrategia dominante ya no necesita desempeñarse mejor que o igual que la estrategia dominada contra las estrategias oponentes que fueron eliminadas en rondas anteriores. Calcular soluciones según la dominancia (iterada) es importante por al menos las siguientes razones: 1) puede ser computacionalmente más fácil que calcular (por ejemplo) un equilibrio de Nash (y por lo tanto puede ser útil como paso de preprocesamiento en el cálculo de un equilibrio de Nash), y 2) la dominancia (iterada) requiere una suposición de racionalidad más débil en los jugadores que (por ejemplo) el equilibrio de Nash, y por lo tanto las soluciones derivadas según ella son más propensas a ocurrir. En este artículo, estudiamos algunas preguntas computacionales fundamentales relacionadas con la dominancia y la dominancia iterada, incluyendo qué tan difícil es verificar si una estrategia dada puede ser eliminada por cada una de las variantes de estos conceptos. El resto del documento está organizado de la siguiente manera. En la Sección 2, revisamos brevemente las definiciones y propiedades básicas de los juegos en forma normal, la dominancia estricta y débil, y la dominancia estricta y débil iterada. En las secciones restantes, estudiamos los aspectos computacionales de la dominancia y la dominancia iterada. En la Sección 3, estudiamos la dominancia de un solo disparo (no iterada). En la Sección 4, estudiamos la dominancia iterada. En la Sección 5, estudiamos la dominancia y la dominancia iterada cuando la estrategia dominante solo puede asignar probabilidad a unas pocas estrategias puras. Finalmente, en la Sección 6, estudiamos la dominancia y la dominancia iterada en juegos bayesianos. 2. DEFINICIONES Y PROPIEDADES BÁSICAS En esta sección, revisamos brevemente los juegos en forma normal, así como la dominancia y la dominancia iterada (tanto estricta como débil). Un juego de <br>forma normal</br> de n jugadores se define de la siguiente manera. Definición 1. Un juego en <br>forma normal</br> está dado por un conjunto de jugadores {1, 2, . . . , n}; y, para cada jugador i, un conjunto (finito) de estrategias puras Σi y una función de utilidad ui : Σ1 × Σ2 × . . . × Σn → R (donde ui(σ1, σ2, . . . , σn) denota la utilidad del jugador i cuando cada jugador j juega la acción σj). Las dos principales nociones de dominancia se definen de la siguiente manera. Definición 2. La estrategia σi del jugador se dice que está estrictamente dominada por la estrategia σi del jugador si, para cualquier vector de estrategias σ−i de los otros jugadores, ui(σi, σ−i) > ui(σi, σ−i). La estrategia σi del jugador se dice que está débilmente dominada por la estrategia σi del jugador si, para cualquier vector de estrategias σ−i para los otros jugadores, ui(σi, σ−i) ≥ ui(σi, σ−i), y para al menos un vector de estrategias σ−i para los otros jugadores, ui(σi, σ−i) > ui(σi, σ−i). En esta definición, a veces se permite que la estrategia dominante σi sea una estrategia mixta, es decir, una distribución de probabilidad sobre estrategias puras. En este caso, las utilidades están en dominancia en conjunto. Por ejemplo, a veces se utilizan comprobaciones de dominancia simple como una subrutina en la búsqueda de equilibrios de Nash [21]. Las definiciones son las utilidades esperadas. Hay otras nociones de dominancia, como la dominancia muy débil (en la que no se requiere ninguna desigualdad estricta, por lo que dos estrategias pueden dominarse mutuamente), pero no las estudiaremos aquí. Cuando estamos analizando las relaciones de dominancia para el jugador i, los otros jugadores (−i) pueden ser considerados como un solo jugador. Por lo tanto, en el resto del documento, cuando estudiamos la dominancia de un solo paso (no iterada), nos centraremos sin pérdida de generalidad en juegos de dos jugadores. En juegos de dos jugadores, generalmente nos referiremos a los jugadores como r (fila) y c (columna) en lugar de 1 y 2. En la dominancia iterada, las estrategias dominadas son eliminadas del juego y ya no tienen ningún efecto en las relaciones de dominancia futuras. La dominancia iterada puede eliminar más estrategias que la dominancia, de la siguiente manera. σr puede originalmente no dominar a σr porque este último tiene un mejor desempeño contra σc; pero luego, una vez que σc es eliminado porque es dominado por σc, σr domina a σr, y este último puede ser eliminado. Por ejemplo, en el siguiente juego, se puede eliminar primero a R, después de lo cual D queda dominado. Tanto la dominancia estricta como la dominancia débil pueden ser utilizadas en la definición de la dominancia iterada. Observamos que el proceso de dominancia iterada nunca se ve favorecido al eliminar una estrategia mixta dominada, por la siguiente razón. Si σi le da al jugador i una utilidad mayor que σi contra la estrategia mixta σj para el jugador j = i (y estrategias σ−{i,j} para los otros jugadores), entonces para al menos una estrategia pura σj en la que σj coloque probabilidad positiva, σi debe desempeñarse mejor que σi contra σj (y estrategias σ−{i,j} para los otros jugadores). Por lo tanto, eliminar la estrategia mixta σj no introduce nuevas dominancias. Discusiones más detalladas y ejemplos se pueden encontrar en textos estándar sobre microeconomía o teoría de juegos [17, 5]. Ahora estamos listos para pasar al núcleo de este documento. 3. En esta sección, estudiamos la noción de dominancia de un solo turno (no iterada). Como primera observación, verificar si una estrategia dada está estrictamente (débilmente) dominada por alguna estrategia pura es sencillo, al comprobar, para cada estrategia pura de ese jugador, si la última estrategia tiene un rendimiento estrictamente mejor contra todas las estrategias de los oponentes (al menos igual de bien contra todas las estrategias de los oponentes, y estrictamente 2 La estrategia dominada σi, por supuesto, también puede ser mixta, pero esto no tiene implicaciones técnicas para el documento: cuando estudiamos la dominancia de un solo disparo, preguntamos si una estrategia dada está dominada, y no importa si la estrategia dada es pura o mixta; cuando estudiamos la dominancia iterada, no tiene sentido eliminar las estrategias mixtas, como veremos en breve. 3 Este jugador puede tener un espacio de estrategias muy grande (una estrategia pura para cada vector de estrategias puras de los jugadores que están siendo reemplazados). Sin embargo, esto no resultará en un aumento en el tamaño de nuestra representación, ya que la representación original ya tenía que especificar las utilidades para cada uno de estos vectores. Observamos que una restricción a juegos de dos jugadores no sería sin pérdida de generalidad para la dominancia iterada. Esto se debe a que para la dominancia iterada, necesitamos analizar las estrategias dominadas de cada jugador individual, por lo que no podemos fusionar a ningún jugador. A continuación, mostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta se puede hacer en tiempo polinómico resolviendo un único programa lineal. (Programas lineales similares se han presentado anteriormente [18]; presentamos el resultado aquí por completitud, y porque construiremos sobre los programas lineales dados a continuación en el Teorema 6.) Proposición 1. Dadas las utilidades de los jugadores de fila, un subconjunto Dr de las estrategias puras de los jugadores de fila Σr, y una estrategia distinguida σ∗ r para el jugador de fila, podemos verificar en tiempo polinómico en el tamaño del juego (resolviendo un único programa lineal de tamaño polinómico) si existe alguna estrategia mixta σr, que coloque probabilidad positiva solo en estrategias en Dr y domine a σ∗ r, tanto en dominancia estricta como débil. Prueba. Sea pdr la probabilidad que σr asigna a dr ∈ Dr. Resolveremos un único programa lineal en cada uno de nuestros algoritmos; los programas lineales pueden resolverse en tiempo polinómico [10]. Para la dominancia estricta, la pregunta es si se puede establecer el pdr de manera que para cada estrategia pura del jugador de la columna σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc). Debido a que la desigualdad debe ser estricta, no podemos resolver esto directamente mediante programación lineal. Procedemos de la siguiente manera. Dado que el juego es finito, podemos asumir sin pérdida de generalidad que todas las utilidades son positivas (si no lo son, simplemente añade una constante a todas las utilidades). Resolver el siguiente programa lineal: minimizar dr∈Dr pdr tal que para cualquier σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc). Si σ∗ r es estrictamente dominada por alguna estrategia mixta, este programa lineal tiene una solución con un valor objetivo < 1. (La estrategia dominante es una solución factible con un valor objetivo exactamente igual a 1. Dado que ninguna restricción es vinculante para esta solución, podemos reducir ligeramente una de las probabilidades sin afectar la viabilidad, obteniendo así una solución con un valor objetivo < 1. Además, si este programa lineal tiene una solución con un valor objetivo < 1, existe una estrategia mixta que domina estrictamente a σ∗ r, la cual se puede obtener tomando la solución del PL y agregando la probabilidad restante a cualquier estrategia (debido a que todas las utilidades son positivas, esto sumará al lado izquierdo de cualquier desigualdad, por lo que todas las desigualdades se volverán estrictas). Para la dominancia débil, podemos resolver el siguiente programa lineal: maximizar σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) tal que para cualquier σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1. Si σ∗ r está débilmente dominado por alguna estrategia mixta, entonces esa estrategia mixta es una solución factible para este programa con un valor objetivo > 0, porque para al menos una estrategia σc ∈ Σc tenemos ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0. Por otro lado, si este programa tiene una solución con un valor objetivo > 0, entonces para al menos una estrategia σc ∈ Σc debemos tener ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, y por lo tanto la solución de los programas lineales es una estrategia mixta débilmente dominante. 4. DOMINANCIA ITERADA Ahora pasamos a la dominancia iterada. Es bien sabido que la dominancia estricta iterada es independiente del camino [6, 19], es decir, si eliminamos las estrategias dominadas hasta que ya no queden más estrategias dominadas, al final las estrategias restantes para cada jugador serán las mismas, independientemente del orden en que se eliminen las estrategias. Por lo tanto, para determinar si una estrategia dada puede ser eliminada por dominancia estricta iterada, todo lo que se necesita hacer es eliminar repetidamente las estrategias que son estrictamente dominadas, hasta que no queden más estrategias dominadas. Dado que podemos verificar en tiempo polinómico si alguna estrategia dada está dominada (ya sea que se permita o no la dominancia por estrategias mixtas, como se describe en la Sección 3), todo este procedimiento toma solo tiempo polinómico. En el caso de la dominancia iterada por estrategias puras con dos jugadores, Knuth et al. [11] mejoran ligeramente (aceleran) la implementación directa de este procedimiento al llevar un registro, para cada par ordenado de estrategias de un jugador, del número de estrategias del oponente que impiden que la primera estrategia domine a la segunda. Por lo tanto, el tiempo de ejecución para un juego m × n se reduce de O((m + n)4 ) a O((m + n)3 ). (En realidad, solo estudian dominancia muy débil (para la cual no se requieren desigualdades estrictas), pero el enfoque se puede extender fácilmente). Por el contrario, se sabe que la dominancia débil iterada es dependiente del camino. Por ejemplo, en el siguiente juego, utilizando la dominancia débil iterada podemos eliminar primero M y luego D, o primero R y luego U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Por lo tanto, si bien el procedimiento de eliminar estrategias débilmente dominadas hasta que no queden más estrategias débilmente dominadas puede ciertamente ejecutarse en tiempo polinómico, qué estrategias sobreviven al final depende del orden en el que eliminamos las estrategias dominadas. Investigaremos dos preguntas para la dominancia débil iterada: si una estrategia dada es eliminada en algún camino, y si hay un camino hacia una solución única (una única estrategia pura por jugador). Mostraremos que ambos de estos problemas son computacionalmente difíciles. Definición 3. Dada un juego en forma normal y una estrategia distinguida σ∗ , la ELIMINACIÓN DE ESTRATEGIAS POR DOMINANCIA DÉBIL (IWD-STRATEGY-ELIMINATION) pregunta si existe algún camino de dominancia débil iterada que elimine σ∗ . Dada un juego en forma normal, IWDUNIQUE-SOLUTION pregunta si existe algún camino de dominancia débil iterada que conduzca a una solución única (una estrategia restante por jugador). El siguiente lema muestra un caso especial de juegos en forma normal en el que permitir la dominancia débil a través de estrategias mixtas (además de la dominancia débil a través de estrategias puras) hace 6. Sin embargo, existe una restricción de dominancia débil llamada dominancia débil agradable que es independiente de la ruta [15, 16]. Para obtener una visión general de los resultados de independencia de la ruta, consulte Apt [1]. 90 no ayuda. Demostraremos los resultados de dificultad en este contexto, de modo que se mantengan independientemente de si se permite o no la dominancia por estrategias mixtas. Lema 1. Supongamos que todas las utilidades en un juego están en {0, 1}. Entonces, toda estrategia pura que es débilmente dominada por una estrategia mixta también es débilmente dominada por una estrategia pura. Prueba. Se supone que la estrategia pura σ es débilmente dominada por la estrategia mixta σ∗. Si σ obtiene una utilidad de 1 contra alguna estrategia o vector de estrategias del oponente (si hay más de 2 jugadores), entonces todas las estrategias puras en las que σ∗ asigna una probabilidad positiva también deben obtener una utilidad de 1 contra esa estrategia del oponente (de lo contrario, la utilidad esperada sería menor que 1). Además, al menos una de las estrategias puras en las que σ∗ coloca probabilidad positiva debe obtener una utilidad de 1 contra una estrategia del oponente que σ obtiene 0 (de lo contrario, la desigualdad nunca sería estricta). Se deduce que esta estrategia pura domina débilmente a σ. Ahora estamos listos para demostrar los resultados principales de esta sección. Teorema 1. IWD-STRATEGY-ELIMINATION es NPcompleto, incluso con 2 jugadores, y con 0 y 1 siendo las únicas utilidades que ocurren en la matriz, ya sea que se permita o no la dominancia por estrategias mixtas. Prueba. El problema está en NP porque, dado una secuencia de estrategias a ser eliminadas, podemos verificar fácilmente si esta es una secuencia válida de eliminaciones (incluso cuando se permite la dominancia por estrategias mixtas, utilizando la Proposición 1). Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto no vacío de cláusulas C sobre un conjunto no vacío de variables V, con literales correspondientes L = {+v : v ∈ V} ∪ {−v : v ∈ V}) a la siguiente instancia de ELIMINACIÓN DE ESTRATEGIA IWD. (En esta instancia, especificaremos que ciertas estrategias son ineliminables. Una estrategia σr puede hacerse ineliminable, incluso cuando 0 y 1 son las únicas utilidades permitidas, al agregar otra estrategia σr y otra estrategia del oponente σc, de modo que: 1. σr y σr son las únicas estrategias que le dan al jugador de la fila una utilidad de 1 contra σc. 2. σr y σr siempre le dan al jugador de la fila la misma utilidad. 3. σc es la única estrategia que le da al jugador de la columna una utilidad de 1 contra σr, pero de lo contrario σc siempre le da al jugador de la columna una utilidad de 0. Esto hace imposible eliminar cualquiera de estas tres estrategias. No especificaremos explícitamente las estrategias adicionales para hacer la prueba más legible. En esta demostración, designaremos las estrategias del jugador de fila como s, y las estrategias del jugador de columna como t, para mejorar la legibilidad. Que se dé el conjunto de estrategias puras de los jugadores de fila como sigue. Para cada variable v ∈ V, el jugador de la fila tiene estrategias correspondientes s1 +v, s2 +v, s1 −v, s2 −v. Además, el jugador de la fila tiene las siguientes 2 estrategias: s1 0 y s2 0, donde s2 0 = σ∗ r (es decir, es la estrategia que buscamos eliminar). Finalmente, para cada cláusula c ∈ C, el jugador de la fila tiene estrategias correspondientes s1 c (ineliminables) y s2 c. Dado el conjunto de estrategias puras de los jugadores de la columna de la siguiente manera. Para cada variable v ∈ V, el jugador de la columna tiene una estrategia correspondiente tv. Para cada cláusula c ∈ C, el jugador de la columna tiene una estrategia correspondiente tc, y además, para cada literal l ∈ L que ocurre en c, una estrategia tc,l. Para cada variable v ∈ V, el jugador de la columna tiene estrategias correspondientes t+v, t−v (ambas no eliminables). Finalmente, el jugador de la columna tiene tres estrategias adicionales: t1 0 (ineliminable), t2 0 y t1. La función de utilidad para el jugador de la fila se da de la siguiente manera: • ur(s1 +v, tv) = 0 para todo v ∈ V ; • ur(s2 +v, tv) = 1 para todo v ∈ V ; • ur(s1 −v, tv) = 1 para todo v ∈ V ; • ur(s2 −v, tv) = 0 para todo v ∈ V ; • ur(s1 +v, t1) = 1 para todo v ∈ V ; • ur(s2 +v, t1) = 0 para todo v ∈ V ; • ur(s1 −v, t1) = 0 para todo v ∈ V ; • ur(s2 −v, t1) = 1 para todo v ∈ V ; • ur(sb +v, t+v) = 1 para todo v ∈ V y b ∈ {1, 2}; • ur(sb −v, t−v) = 1 para todo v ∈ V y b ∈ {1, 2}; • ur(sl, t) = 0 de lo contrario para todo l ∈ L y t ∈ S2; • ur(s1 0, tc) = 0 para todo c ∈ C; • ur(s2 0, tc) = 1 para todo c ∈ C; • ur(sb 0, t1 0) = 1 para todo b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 de lo contrario para todo b ∈ {1, 2} y t ∈ S2; • ur(sb c, t) = 0 de lo contrario para todo c ∈ C y b ∈ {1, 2}; y la utilidad del jugador de la fila es 0 en todos los demás casos. La función de utilidad para el jugador de la columna se da de la siguiente manera: • uc(s, tv) = 0 para todo v ∈ V y s ∈ S1; • uc(s, t1) = 0 para todo s ∈ S1; • uc(s2 l , tc) = 1 para todo c ∈ C y l ∈ L donde l ∈ c (literal l ocurre en la cláusula c); • uc(s2 l2 , tc,l1 ) = 1 para todo c ∈ C y l1, l2 ∈ L, l1 = l2 donde l2 ∈ c; • uc(s1 c, tc) = 1 para todo c ∈ C; • uc(s2 c, tc) = 0 para todo c ∈ C; • uc(sb c, tc,l) = 1 para todo c ∈ C, l ∈ L, y b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 en otro caso para todo c ∈ C y l ∈ L; y la utilidad del jugador de la columna es 0 en todos los demás casos. Ahora demostramos que las dos instancias son equivalentes. Primero, supongamos que hay una solución para la instancia de satisfactibilidad: es decir, una asignación de valores de verdad a las variables en V tal que todas las cláusulas se satisfacen. Entonces, considera la siguiente secuencia de eliminaciones en nuestro juego: 1. Para cada variable v que se establezca como verdadera en la asignación, elimine tv (lo que da como resultado una utilidad de 0 para el jugador de la columna en todas partes). 2. Entonces, para cada variable v que se establezca como verdadera en la asignación, elimine s2 +v usando s1 +v (lo cual es posible porque tv ha sido eliminado, y porque t1 no ha sido eliminado (aún)). 3. Ahora elimina t1 (lo cual da como resultado una utilidad de 0 para el jugador de la columna). 4. A continuación, para cada variable v que se establezca como falso en la asignación, elimine s2 −v usando s1 −v (lo cual es posible porque t1 ha sido eliminado, y porque tv no ha sido eliminado (aún)). 5. Para cada cláusula c que tenga la variable correspondiente a uno de sus literales positivos l = +v establecido como verdadero en la asignación, elimine tc utilizando tc,l (lo cual es posible porque s2 l ha sido eliminado, y s2 c no ha sido eliminado (aún)). 6. Para cada cláusula c en la que la variable correspondiente a uno de sus literales negativos l = −v se establece en falso en la asignación, elimine tc utilizando tc,l 91 (lo cual es posible porque s2 l ha sido eliminado, y s2 c no ha sido eliminado (aún)). 7. Debido a que la tarea cumplió con la fórmula, todos los tc han sido eliminados ahora. Por lo tanto, podemos eliminar s2 0 = σ∗ r usando s1 0. Se deduce que hay una solución para la instancia IWD-STRATEGY-ELIMINATION. Ahora supongamos que hay una solución para la instancia IWD-STRATEGYELIMINATION. Por el Lema 1, podemos asumir que todas las dominancias son por estrategias puras. Primero observamos que solo s1 0 puede eliminar s2 0 = σ∗ r, porque es la única otra estrategia que le da al jugador de la fila una utilidad de 1 contra t1 0, y t1 0 es ineliminable. Sin embargo, dado que s2 0 tiene un mejor rendimiento que s1 0 contra las estrategias de tc, se deduce que todas las estrategias de tc deben ser eliminadas. Para cada c ∈ C, la estrategia tc solo puede ser eliminada por una de las estrategias tc,l (con el mismo c), ya que estas son las únicas otras estrategias que le dan al jugador de la columna una utilidad de 1 contra s1 c, y s1 c es ineliminable. Pero, para que algún tc,l elimine tc, primero se debe eliminar s2 l. Solo s1 l puede eliminar s2 l, porque es la única otra estrategia que le otorga al jugador de la fila una utilidad de 1 contra tl, y tl es ineliminable. A continuación mostramos que para cada v ∈ V solo se puede eliminar uno de s2 +v, s2 −v. Esto se debe a que para que s1 +v elimine s2 +v, tv debe haber sido eliminado y t1, no (por lo tanto, tv debe ser eliminado antes que t1); pero para que s1 -v elimine s2 -v, t1 debe haber sido eliminado y tv, no (por lo tanto, t1 debe ser eliminado antes que tv). Por lo tanto, establezca v en verdadero si s2 + v es eliminado, y en falso de lo contrario. Debido a lo anterior, para cada cláusula c, uno de los s2 con l ∈ c debe ser eliminado, por lo que se deduce que esta es una asignación satisfactoria para la instancia de satisfactibilidad. Usando el Teorema 1, ahora es (relativamente) fácil demostrar que IWD-UNIQUE-SOLUTION también es NP-completo bajo las mismas restricciones. Teorema 2. IWD-UNIQUE-SOLUTION es NP-completo, incluso con 2 jugadores, y con 0 y 1 siendo las únicas utilidades que ocurren en la matriz, ya sea que se permita o no la dominancia por estrategias mixtas. Prueba. Nuevamente, el problema está en NP porque podemos elegir de manera no determinista la secuencia de eliminaciones y verificar si es correcta. Para demostrar la NP-dificultad, reducimos una instancia arbitraria de IWD-STRATEGY-ELIMINATION a la siguiente instancia de IWD-UNIQUE-SOLUTION. Que todas las estrategias de cada jugador de la instancia original formen parte de la nueva instancia, y que las utilidades resultantes de los jugadores al jugar un par de estas estrategias sean las mismas. Añadimos tres estrategias adicionales σ1 r , σ2 r , σ3 r para el jugador de fila, y tres estrategias adicionales σ1 c , σ2 c , σ3 c para el jugador de columna. Que las utilidades adicionales sean las siguientes: • ur(σr, σj c) = 1 para todo σr /∈ {σ1 r , σ2 r , σ3 r } y j ∈ {2, 3}; • ur(σi r, σc) = 1 para todo i ∈ {1, 2, 3} y σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 para todo i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • y la utilidad de los jugadores de fila es 0 en todos los demás casos que involucren una nueva estrategia. • uc(σ3 r , σc) = 1 para todo σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 para todo j ∈ {2, 3} (σ∗ r es la estrategia a ser eliminada en la instancia original); • uc(σi r, σ1 c ) = 1 para todo i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • y la utilidad de los jugadores de columna es 0 en todos los demás casos que involucren una nueva estrategia. Procedemos a demostrar que las dos instancias son equivalentes. Primero supongamos que existe una solución para la instancia original de IWDSTRATEGY-ELIMINATION. Luego, realiza la misma secuencia de eliminaciones para eliminar σ∗ r en la nueva instancia IWD-UNIQUE-SOLUTION. (Esto es posible porque en cualquier etapa, cualquier dominancia débil para el jugador de fila en la instancia original sigue siendo una dominancia débil en la nueva instancia, ya que las utilidades de las dos estrategias para el jugador de fila son las mismas cuando el jugador de columna juega una de las nuevas estrategias; y lo mismo ocurre para el jugador de columna). Una vez que σ∗ r sea eliminado, permita que σ1 c elimine a σ2 c. (Se desempeña mejor contra σ2 r.) Entonces, dejemos que σ1 r elimine todas las demás estrategias restantes para el jugador de la fila. (Siempre tiene un mejor desempeño contra σ1 c o σ3 c.) Finalmente, σ1 c es la mejor respuesta única contra σ1 r entre las estrategias restantes de los jugadores de columna, así que permitamos que elimine todas las demás estrategias restantes para el jugador de columna. Por lo tanto, existe una solución para la instancia IWD-UNIQUE-SOLUTION. Ahora supongamos que existe una solución para la instancia IWD-UNIQUESOLUTION. Por el Lema 1, podemos asumir que todas las dominancias son por estrategias puras. Mostraremos que ninguna de las nuevas estrategias (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) puede eliminar a otra estrategia, ni ser eliminada antes de que σ∗ r sea eliminada. Por lo tanto, debe haber una secuencia de eliminaciones que termine con la eliminación de σ∗ r, la cual no involucre ninguna de las nuevas estrategias y, por lo tanto, sea una secuencia válida de eliminaciones en el juego original (porque todas las estrategias originales tienen el mismo rendimiento contra cada nueva estrategia). Ahora demostramos que esto es cierto agotando todas las posibilidades para la primera eliminación antes de que se elimine σ∗ r que implica una nueva estrategia. Ninguno de los σi r puede ser eliminado por un σr /∈ {σ1 r , σ2 r , σ3 r}, porque los σi r tienen un mejor desempeño contra σ1 c. σ1 r no puede eliminar ninguna otra estrategia, porque siempre tiene un desempeño inferior contra σ2 c. σ2 r y σ3 r son equivalentes desde la perspectiva de los jugadores de fila (y por lo tanto no pueden eliminarse entre sí), y no pueden eliminar ninguna otra estrategia porque siempre tienen un desempeño inferior contra σ3 c. Ninguno de los σj c puede ser eliminado por un σc /∈ {σ1 c , σ2 c , σ3 c}, porque los σj c siempre tienen un mejor desempeño contra σ1 r o σ2 r. σ1 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ∗ r o σ3 r. σ2 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ2 r o σ3 r. σ3 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ1 r o σ3 r. Por lo tanto, existe una solución para la instancia IWDSTRATEGY-ELIMINATION. Una versión ligeramente más débil de la parte del Teorema 2 que concierne la dominancia solo por estrategias puras es el resultado principal de Gilboa et al. [7]. (Además de no demostrar el resultado para la dominancia por estrategias mixtas, el resultado original era más débil porque requería utilidades {0, 1, 2, 3, 4, 5, 6, 7, 8} en lugar de solo {0, 1} (y debido a esto, nuestro Lema 1 no se puede aplicar para obtener el resultado para estrategias mixtas).) 5. DOMINANCIA (ITERADA) USANDO ESTRATEGIAS MIXTAS CON SOPORTES PEQUEÑOS Al demostrar que una estrategia es dominada por una estrategia mixta, hay varias razones para preferir exhibir una estrategia dominante que coloque probabilidad positiva en la menor cantidad posible de estrategias puras. Primero, esto reducirá el número de bits necesarios para especificar la estrategia dominante (y así la prueba de dominancia se puede comunicar más rápido): si la estrategia mixta dominante coloca probabilidad positiva en solo k estrategias, entonces se puede especificar usando k números reales para las probabilidades, más k log m (donde m es el número de estrategias para el jugador en consideración) bits para indicar qué estrategias se utilizan. Segundo, la prueba de dominancia será más clara: para una estrategia mixta dominante, es típicamente (siempre en el caso de dominancia estricta) posible distribuir parte de la probabilidad en cualquier estrategia pura no utilizada y aún así tener una estrategia dominante, pero esto oscurece cuáles estrategias puras son las clave para hacer que la estrategia mixta sea dominante. Tercero, debido a que el argumento para eliminar la estrategia dominada es más simple y fácil de entender, es más probable que sea aceptado. En cuarto lugar, el nivel de neutralidad al riesgo requerido para que el argumento funcione se reduce, al menos en el caso extremo donde se puede exhibir la dominancia de una única estrategia pura (no se requiere neutralidad al riesgo aquí). Esto motiva el siguiente problema. Definición 4 (CONJUNTO DOMINANTE MÍNIMO). Se nos dan las utilidades de los jugadores de fila de un juego en forma normal, una estrategia distinguida σ∗ para el jugador de fila, una especificación de si la dominancia debe ser estricta o débil, y un número k. Se nos pregunta si existe una estrategia mixta σ para el jugador de fila que coloque probabilidad positiva en como máximo k estrategias puras, y domine a σ∗ en el sentido requerido. Lamentablemente, este problema es NP-completo. Teorema 3. El problema del CONJUNTO DOMINANTE MÍNIMO es NP-completo, tanto para dominancia estricta como para dominancia débil. Prueba. El problema está en NP porque podemos elegir de manera no determinista un conjunto de a lo sumo k estrategias para dar probabilidad positiva, y decidir si podemos dominar a σ∗ con estas k estrategias como se describe en la Proposición 1. Para demostrar la NP-dificultad, reducimos una instancia arbitraria de COBERTURA-DE-CONJUNTOS (dado un conjunto S, subconjuntos S1, S2, . . . , Sr, y un número t, ¿puede S ser cubierto por a lo sumo t de los subconjuntos?) a la siguiente instancia de CONJUNTO-DOMINANTE-MÍNIMO. Para cada elemento s ∈ S, hay una estrategia pura σs para el jugador de la columna. Para cada subconjunto Si, hay una estrategia pura σSi para el jugador de la fila. Finalmente, está la distinguida estrategia pura σ∗ para el jugador de la fila. Las utilidades de los jugadores de la fila son las siguientes: ur(σSi , σs) = t + 1 si s ∈ Si; ur(σSi , σs) = 0 si s /∈ Si; ur(σ∗ , σs) = 1 para todo s ∈ S. Finalmente, dejamos que k = t. Ahora procedemos a demostrar que las dos instancias son equivalentes. Primero supongamos que existe una solución para la instancia de COBERTURA-CONJUNTO. Sin pérdida de generalidad, podemos asumir que hay exactamente k subconjuntos en la cobertura. Entonces, para cada Si que esté en la cobertura, dejemos que la estrategia dominante σ coloque exactamente 1 k de probabilidad en la estrategia pura correspondiente σSi. Ahora, si dejamos que n(s) sea el número de subconjuntos en la cobertura que contienen a s (observamos que n(s) ≥ 1), entonces para cada estrategia σs del jugador de la columna, la utilidad esperada de los jugadores de la fila al jugar σ cuando el jugador de la columna está jugando σs es u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs). Entonces, σ domina estrictamente (y por lo tanto también débilmente) a σ∗, y existe una solución para la instancia del conjunto de dominación mínimo. Ahora supongamos que existe una solución para la instancia de CONJUNTO-DOMINANTE-MÍNIMO. Considera las estrategias puras (a lo sumo k) de la forma σSi en las que la estrategia mixta dominante σ asigna probabilidad positiva, y deja que T sea la colección de los subconjuntos correspondientes Si. Sostenemos que T es una cubierta. Supongamos que hay algún s ∈ S que no está en ninguno de los subconjuntos en T. Entonces, si el jugador de la columna juega σs, el jugador de la fila (cuando juega σ) siempre recibirá una utilidad de 0, en contraposición a la utilidad de 1 que el jugador de la fila recibiría al jugar σ∗, contradiciendo el hecho de que σ domina a σ∗ (ya sea esta dominancia débil o estricta). Se deduce que existe una solución para la instancia de COBERTURA-DE-CONJUNTOS. Por otro lado, si requerimos que la estrategia dominante solo coloque probabilidad positiva en un número muy pequeño de estrategias puras, entonces una vez más resulta fácil verificar si una estrategia está dominada. Específicamente, para determinar si la estrategia σ∗ del jugador está dominada por una estrategia que coloca probabilidad positiva solo en k estrategias puras, simplemente podemos verificar, para cada subconjunto de k de las estrategias puras del jugador, si hay una estrategia que coloca probabilidad positiva solo en esas k estrategias y domina a σ∗, utilizando la Proposición 1. Esto solo requiere O(|Σi|k) comprobaciones. Por lo tanto, si k es una constante, esto constituye un algoritmo de tiempo polinómico. Una pregunta natural que surge a continuación es si la dominancia estricta iterada sigue siendo computacionalmente fácil cuando se requiere que las estrategias dominantes coloquen una probabilidad positiva en como máximo k estrategias puras, donde k es una constante pequeña. (Ya hemos demostrado en la Sección 4 que la dominancia débil iterada es difícil incluso cuando k = 1, es decir, solo se permite la dominancia por estrategias puras). Por supuesto, si la dominancia estricta iterada fuera independiente del camino bajo esta restricción, la facilidad computacional seguiría como lo hizo en la Sección 4. Sin embargo, resulta que esto no es así. Observación 1. Si restringimos las estrategias dominantes para asignar probabilidad positiva a lo sumo a dos estrategias puras, la dominancia estricta iterada se vuelve dependiente del camino. Prueba. Considera el siguiente juego: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Sea (i, j) el resultado en el que el jugador de la fila juega en la fila i y el jugador de la columna juega en la columna j. Dado que (1, 1), (2, 2) y (4, 3) son todos equilibrios de Nash, ninguna de las estrategias puras de los jugadores de columna será eliminada, al igual que las filas 1, 2 y 4. Ahora observamos que la aleatorización uniforme entre las filas 1 y 2 domina a la fila 3, y la aleatorización uniforme entre las filas 3 y 4 domina a la fila 5. Sin embargo, si eliminamos la fila 3 primero, se vuelve imposible dominar la fila 5 sin aleatorizar al menos 3 estrategias puras. De hecho, la dominancia estricta iterada resulta ser difícil incluso cuando k = 3. Teorema 4. Si restringimos las estrategias dominantes para colocar una probabilidad positiva en como máximo tres estrategias puras, se vuelve NP-completo decidir si una estrategia dada puede ser eliminada usando dominancia estricta iterada. 93 Prueba. El problema está en NP porque, dado una secuencia de estrategias a ser eliminadas, podemos verificar en tiempo polinómico si esta es una secuencia válida de eliminaciones (para cualquier estrategia a ser eliminada, podemos verificar, para cada subconjunto de tres otras estrategias, si hay una estrategia que coloca probabilidad positiva solo en estas tres estrategias que domina a la estrategia a ser eliminada, utilizando la Proposición 1). Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto no vacío de cláusulas C sobre un conjunto no vacío de variables V, con literales correspondientes L = {+v : v ∈ V} ∪ {−v : v ∈ V}) al siguiente juego de dos jugadores. Para cada variable v ∈ V, el jugador de la fila tiene estrategias s+v, s−v, s1 v, s2 v, s3 v, s4 v, y el jugador de la columna tiene estrategias t1 v, t2 v, t3 v, t4 v. Para cada cláusula c ∈ C, el jugador de la fila tiene una estrategia sc, y el jugador de la columna tiene una estrategia tc, así como, para cada literal l que ocurre en c, una estrategia adicional tl c. El jugador de la fila tiene dos estrategias adicionales s1 y s2. (s2 es la estrategia que estamos buscando eliminar). Finalmente, el jugador de la columna tiene una estrategia adicional t1. La función de utilidad para el jugador de la fila se da de la siguiente manera (donde ε es algún número suficientemente pequeño): • ur(s+v, tj v) = 4 si j ∈ {1, 2}, para todo v ∈ V; • ur(s+v, tj v) = 1 si j ∈ {3, 4}, para todo v ∈ V; • ur(s−v, tj v) = 1 si j ∈ {1, 2}, para todo v ∈ V; • ur(s−v, tj v) = 4 si j ∈ {3, 4}, para todo v ∈ V; • ur(s+v, t) = ur(s−v, t) = 0 para todo v ∈ V y t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 para todo v ∈ V e i ∈ {1, 2, 3, 4}; • ur(si v, t) = para todo v ∈ V, i ∈ {1, 2, 3, 4}, y t = ti v; • ur(sc, tc) = 2 para todo c ∈ C; • ur(sc, t) = 0 para todo c ∈ C y t = tc; • ur(s1, t1) = 1 + ε; • ur(s1, t) = para todo t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 para todo c ∈ C; • ur(s2, t) = 0 para todo t /∈ {t1} ∪ {tc : c ∈ C}. La función de utilidad para el jugador de la columna se da de la siguiente manera: • uc(si v, ti v) = 1 para todo v ∈ V e i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 para todo v ∈ V, i ∈ {1, 2, 3, 4}, y s = si v; • uc(sc, tc) = 1 para todo c ∈ C; • uc(sl, tc) = 1 para todo c ∈ C y l ∈ L que ocurre en c; • uc(s, tc) = 0 para todo c ∈ C y s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + para todo c ∈ C; • uc(sl, tl c) = 1 + para todo c ∈ C y l = l que ocurre en c; • uc(s, tl c) = para todo c ∈ C y s /∈ {sc} ∪ {sl : l ∈ c, l = l}; • uc(s2, t1) = 1; • uc(s, t1) = 0 para todo s = s2. Ahora demostramos que las dos instancias son equivalentes. Primero, supongamos que hay una solución para la instancia de satisfactibilidad. Entonces, considera la siguiente secuencia de eliminaciones en nuestro juego: 1. Para cada variable v que se establezca como verdadera en la asignación satisfactoria, elimine s+v con la estrategia mixta σr que coloca probabilidad 1/3 en s−v, probabilidad 1/3 en s1 v y probabilidad 1/3 en s2 v. (La utilidad esperada de jugar σr contra t1 v o t2 v es 14/3 > 4; contra t3 v o t4 v, es 4/3 > 1; y contra cualquier otra cosa es 2/3 > 0. Por lo tanto, la dominancia es válida. De manera similar, para cada variable v que se establezca como falso en la asignación satisfactoria, elimine s−v con la estrategia mixta σr que coloca probabilidad 1/3 en s+v, probabilidad 1/3 en s3 v, y probabilidad 1/3 en s4 v. (La utilidad esperada de jugar σr contra t1 v o t2 v es 4/3 > 1; contra t3 v o t4 v, es 14/3 > 4; y contra cualquier otra cosa es 2/3 > 0. Por lo tanto, la dominancia es válida. Para cada c ∈ C, elimine tc con cualquier tl c para el cual l se haya establecido como verdadero en la asignación satisfactoria. (Esta es una dominancia válida porque tl c funciona mejor que tc contra cualquier estrategia que no sea sl, y eliminamos sl en el paso 1 o en el paso 2.) 4. Finalmente, elimina s2 con s1. (Esta es una dominancia válida porque s1 tiene un mejor rendimiento que s2 contra cualquier estrategia que no esté en {tc : c ∈ C}, la cual eliminamos en el paso 3.) Por lo tanto, hay un camino de eliminación que elimina s2. Ahora, supongamos que hay un camino de eliminación que elimina s2. La estrategia que eventualmente domina a s2 debe colocar la mayor parte de su probabilidad en s1, ya que s1 es la única otra estrategia que se desempeña bien contra t1, la cual no puede ser eliminada antes que s2. Sin embargo, s1 tiene un rendimiento significativamente peor que s2 contra cualquier estrategia tc con c ∈ C, por lo que se deduce que todas estas estrategias deben ser eliminadas primero. Cada estrategia tc solo puede ser eliminada por una estrategia que coloque la mayor parte de su peso en las estrategias correspondientes tl c con l ∈ c, ya que son las únicas otras estrategias que funcionan bien contra sc, las cuales no pueden ser eliminadas antes de tc. Sin embargo, cada estrategia tl c funciona significativamente peor que tc contra sl, por lo que se deduce que para cada cláusula c, para uno de los literales l que aparecen en ella, sl debe ser eliminado primero. Ahora, las estrategias de la forma tj v nunca serán eliminadas porque son las únicas mejores respuestas a las estrategias correspondientes sj v (que, a su vez, son las mejores respuestas a las tj v correspondientes). Como resultado, si la estrategia s+v (respectivamente, s−v) es eliminada, entonces su estrategia opuesta s−v (respectivamente, s+v) ya no puede ser eliminada, por la siguiente razón. No hay otra estrategia pura restante que obtenga una utilidad significativa contra más de una de las estrategias t1 v, t2 v, t3 v, t4 v, pero s−v (respectivamente, s+v) obtiene una utilidad significativa contra las 4, y por lo tanto no puede ser dominada por una estrategia mixta que coloque una probabilidad positiva en como máximo 3 estrategias. Se deduce que para cada v ∈ V, a lo sumo una de las estrategias s+v, s−v es eliminada, de tal manera que para cada cláusula c, para uno de los literales l que aparece en ella, sl debe ser eliminada. Pero luego, establecer todas las literales l de manera que sl sea eliminado a verdadero constituye una solución a la instancia de satisfactibilidad. En la siguiente sección, regresamos al escenario donde no hay restricción en el número de estrategias puras en las que una estrategia mixta dominante puede colocar probabilidad positiva. 6. DOMINANCIA (ITERADA) EN JUEGOS BAYESIANOS Hasta ahora, nos hemos enfocado en juegos de forma normal que están representados de manera plana (es decir, cada entrada de la matriz se da explícitamente). Sin embargo, para muchos juegos, la representación plana es demasiado grande para escribirse explícitamente, y en su lugar, se necesita utilizar alguna representación que aproveche la estructura del juego. Los juegos bayesianos, además de ser de interés por sí mismos, pueden considerarse como una representación estructurada útil de los juegos en forma normal, y los estudiaremos en esta sección. En un juego bayesiano, cada jugador recibe primero información de preferencia de manera privada (el tipo de jugador) de una distribución, la cual determina la utilidad que ese jugador recibe por cada resultado del juego (es decir, el vector de acciones jugadas en el juego). Después de recibir este tipo, el jugador realiza una acción basada en él. Definición 7. Un juego bayesiano está dado por un conjunto de jugadores {1, 2, . . . , n}; y, para cada jugador i, un conjunto (finito) de acciones Ai, un espacio de tipos (finito) Θi con una distribución de probabilidad πi sobre él, y una función de utilidad ui : Θi × A1 × A2 × . . . × An → R (donde ui(θi, a1, a2, . . . , an) denota la utilidad del jugador i cuando su tipo es θi y cada jugador j juega la acción aj). Una estrategia pura en un juego bayesiano es una asignación de tipos a acciones, σi: Θi → Ai, donde σi(θi) denota la acción que el jugador i elige para el tipo θi. Cualquier vector de estrategias puras en un juego bayesiano define una utilidad (esperada) para cada jugador, y por lo tanto podemos traducir un juego bayesiano en un <br>juego en forma normal</br>. En este <br>juego en forma normal</br>, las nociones de dominancia y dominancia iterada se definen como antes. Sin embargo, la representación en forma normal del juego es exponencialmente más grande que la representación bayesiana, ya que cada jugador i tiene |Ai||Θi| estrategias puras distintas. Por lo tanto, cualquier algoritmo para juegos bayesianos que dependa de expandir el juego a su forma normal requerirá tiempo exponencial. Específicamente, nuestros resultados de facilidad para juegos en forma normal no se transfieren directamente a esta configuración. De hecho, resulta que verificar si una estrategia está dominada por una estrategia pura es difícil en juegos bayesianos. Teorema 5. En un juego bayesiano, es NP-completo decidir si una estrategia pura dada σr : Θr → Ar está dominada por alguna otra estrategia pura (tanto para la dominancia estricta como débil), incluso cuando la distribución de los jugadores de fila sobre los tipos es uniforme. Prueba. El problema está en NP porque es fácil verificar si una estrategia dominante candidata es realmente una estrategia dominante. Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto de cláusulas C utilizando variables de V) al siguiente juego bayesiano. Que el conjunto de acciones de los jugadores de la fila sea Ar = {t, f, 0} y que el conjunto de acciones de los jugadores de la columna sea Ac = {ac : c ∈ C}. Que el conjunto de tipos de jugadores de fila sea Θr = {θv : v ∈ V}, con una distribución πr que es uniforme. Que la función de utilidad de los jugadores de la fila sea la siguiente: • ur(θv, 0, ac) = 0 para todo v ∈ V y c ∈ C; • ur(θv, b, ac) = |V | para todo v ∈ V, c ∈ C y b ∈ {t, f} tal que establecer v como b satisface c; • ur(θv, b, ac) = −1 para todo v ∈ V, c ∈ C y b ∈ {t, f} tal que establecer v como b no satisface c. En general, un jugador también puede recibir una señal sobre las preferencias de los otros jugadores, pero aquí no nos ocuparemos de eso. Que la estrategia pura que se va a dominar sea aquella que juega 0 para cada tipo. Mostramos que la estrategia está dominada por una estrategia pura si y solo si hay una solución a la instancia de satisfactibilidad. Primero, supongamos que hay una solución para la instancia de satisfactibilidad. Entonces, sea σd r dado por: σd r (θv) = t si v se establece como verdadero en la solución de la instancia de satisfactibilidad, y σd r (θv) = f en caso contrario. Entonces, en contra de cualquier acción ac realizada por el jugador de la columna, existe al menos un tipo θv tal que o bien +v ∈ c y σd r (θv) = t, o bien −v ∈ c y σd r (θv) = f. Por lo tanto, la utilidad esperada de los jugadores de la fila contra la acción ac es al menos |V| |V| − |V|−1 |V| = 1 |V| > 0. Entonces, σd r es una estrategia dominante. Ahora, supongamos que existe una estrategia pura dominante σd r. Esta estrategia dominante debe jugar t o f al menos para un tipo. Por lo tanto, en contra de cualquier ac por el jugador de la columna, debe haber al menos algún tipo θv para el cual ur(θv, σd r (θv), ac) > 0. Es decir, debe haber al menos una variable v tal que al establecer v en σd r (θv) satisfaga c. Pero entonces, al establecer cada v en σd r (θv) deben satisfacerse todas las cláusulas. Entonces, existe una asignación satisfactoria. Sin embargo, resulta que podemos modificar los programas lineales de la Proposición 1 para obtener un algoritmo de tiempo polinómico para verificar si una estrategia está dominada por una estrategia mixta en juegos bayesianos. Teorema 6. En un juego bayesiano, se puede decidir en tiempo polinómico si una estrategia dada (posiblemente mixta) σr está dominada por alguna otra estrategia mixta, utilizando programación lineal (tanto para dominancia estricta como débil). Prueba. Podemos modificar los programas lineales presentados en la Proposición 1 de la siguiente manera. Para la dominancia estricta, asumiendo nuevamente sin pérdida de generalidad que todas las utilidades en el juego son positivas, utilice el siguiente programa lineal (en el cual pσr r (θr, ar) es la probabilidad de que σr, la estrategia a ser dominada, coloque en ar para el tipo θr): minimizar θr∈Θr ar∈Ar pr(ar) tal que para cualquier ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); para cualquier θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1. Suponiendo que π(θr) > 0 para todo θr ∈ Θr, este programa devolverá un valor objetivo menor que |Θr| si y solo si σr está estrictamente dominado, mediante un razonamiento similar al realizado en la Proposición 1. Para la dominancia débil, utiliza el siguiente programa lineal: maximizar ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) tal que para cualquier ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); para cualquier θr ∈ Θr, ar∈Ar pr(θr, ar) = 1. Este programa devolverá un valor objetivo mayor que 0 si y solo si σr está débilmente dominado, mediante un razonamiento similar al realizado en la Proposición 1. Ahora pasamos al dominio iterado en juegos bayesianos. Ingenuamente, uno podría argumentar que la dominancia iterada en juegos bayesianos de 95 siempre requiere un número exponencial de pasos cuando se puede eliminar una fracción significativa de las estrategias puras de los juegos, ya que hay un número exponencial de estrategias puras. Sin embargo, este no es un argumento muy sólido porque muchas veces podemos eliminar exponencialmente muchas estrategias puras en un solo paso. Por ejemplo, si para algún tipo θr ∈ Θr tenemos, para todo ac ∈ Ac, que u(θr, a1 r, ac) > u(θr, a2 r, ac), entonces cualquier estrategia pura para el jugador de la fila que juega la acción a2 r para el tipo θr está dominada (por la estrategia que juega la acción a1 r para el tipo θr en su lugar) - y hay exponencialmente muchas (|Ar||Θr|−1) tales estrategias. Por lo tanto, es concebible que solo necesitemos un número polinomial de eliminaciones de colecciones de estrategias de un jugador. Sin embargo, el siguiente teorema muestra que este no es el caso, al dar un ejemplo donde se requiere un número exponencial de iteraciones (es decir, alternancias entre los jugadores en la eliminación de estrategias). (Enfatizamos que este no es un resultado sobre complejidad computacional). Teorema 7. Incluso en juegos bayesianos simétricos de 3 jugadores, la dominancia iterada por estrategias puras puede requerir un número exponencial de iteraciones (tanto para la dominancia estricta como débil), incluso con solo tres acciones por jugador. Prueba. Que cada jugador i ∈ {1, 2, 3} tenga n + 1 tipos θ1 i , θ2 i , . . . , θn+1 i. Que cada jugador i tenga 3 acciones ai, bi, ci, y que la función de utilidad de cada jugador esté definida de la siguiente manera. (En lo siguiente, i + 1 e i + 2 son abreviaturas de i + 1 (mod 3) e i + 2 (mod 3) cuando se utilizan como índices de jugador. Además, −∞ puede ser reemplazado por un número suficientemente negativo. Finalmente, δ y deberían elegirse muy pequeños (incluso en comparación con 2−(n+1)), y deberían ser más del doble de grandes que δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 para si+1 = ci+1 o si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − para si+1 = ai+1 y si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ para si+1 = ai+1 o si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ para todos los si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ para todos los si+1, si+2 cuando j > 1; • ui(θj i ; bi, si+1, si+2) = − para todos los si+1, si+2 cuando j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 para todos los si+1 cuando j > 1; • ui(θj i ; ci, si+1, si+2) = δ− para todos los si+1 y si+2 = ci+2 cuando j > 1. Que la distribución sobre los tipos de cada jugador esté dada por p(θj i ) = 2−j (con la excepción de que p(θ2 i ) = 2−2 +2−(n+1) ). Estaremos interesados en eliminar estrategias de la siguiente forma: jugar bi para el tipo θ1 i, y jugar bi o ci de lo contrario. Dado que la función de utilidad es la misma para cualquier tipo θj i con j > 1, estas estrategias están efectivamente definidas por la probabilidad total que asignan a ci,8, que es t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j donde tj i = 1 si el jugador i 8. Observa que las estrategias siguen siendo estrategias puras; la probabilidad asignada a una acción por una estrategia aquí es simplemente la suma de las probabilidades de los tipos para los cuales la estrategia elige esa acción. juega ci para el tipo θj i, y 0 en caso contrario. Esta probabilidad es diferente para cualquier par de estrategias diferentes de la forma dada, y tenemos exponencialmente muchas estrategias diferentes de la forma dada. Para cualquier probabilidad q que pueda expresarse como t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (con todos los tj ∈ {0, 1}), dejemos que σi(q) denote la estrategia (única) de la forma dada para el jugador i que coloca una probabilidad total de q en ci. Cualquier estrategia que juegue ci para el tipo θ1 i o ai para algún tipo θj i con j > 1 puede ser eliminada inmediatamente. Mostraremos que, después de eso, debemos eliminar primero las estrategias σi(q) con q alto, trabajando lentamente hacia abajo hasta aquellas con q más bajo. Reclamo 1: Si σi+1(q) y σi+2(q) aún no han sido eliminados, y q < q, entonces σi(q) aún no puede ser eliminado. Prueba: Primero, demostramos que ninguna estrategia σi(q) puede eliminar a σi(q). Contra σi+1(q), σi+2(q), la utilidad de jugar σi(p) es − + p · δ − p · q /2. Por lo tanto, cuando q = 0, es mejor establecer p lo más alto posible (y observamos que σi+1(0) y σi+2(0) no han sido eliminados), pero cuando q > 0, es mejor establecer p lo más bajo posible porque δ < q /2. Por lo tanto, ya sea que q > q o q < q, σi(q) siempre será estrictamente mejor que σi(q) contra algunas estrategias restantes de los oponentes. Por lo tanto, ninguna estrategia σi(q) puede eliminar a σi(q). Las únicas otras estrategias puras que podrían dominar a σi(q) son estrategias que juegan ai para el tipo θ1 i, y bi o ci para todos los demás tipos. Tomemos tal estrategia y supongamos que juega c con probabilidad p. Contra σi+1(q), σi+2(q) (que aún no han sido eliminadas), la utilidad de jugar esta estrategia es −(q)2 /2 − /2 + p · δ − p · q /2. Por otro lado, jugar σi(q) da como resultado − + q · δ − q · q /2. Dado que q > q, tenemos −(q )2 /2 < −q · q /2, y dado que δ y son pequeños, se deduce que σi(q) recibe una utilidad mayor. Por lo tanto, ninguna estrategia domina a σi(q), lo que demuestra la afirmación. Afirmación 2: Si para todo q > q, σi+1(q) y σi+2(q) han sido eliminados, entonces σi(q) puede ser eliminado. Prueba: Considera la estrategia para el jugador i que juega ai para el tipo θ1 i, y bi para todos los demás tipos (llamemos a esta estrategia σi); afirmamos que σi domina a σi(q). Primero, si alguno de los otros jugadores k juega ak para θ1 k, entonces σi se desempeña mejor que σi(q) (que recibe −∞ en algunos casos). Dado que las estrategias para el jugador k que juega ck para el tipo θ1 k, o ak para algún tipo θj k con j > 1, ya han sido eliminadas, todo lo que queda por comprobar es que σi sea mejor que σi(q) siempre que los otros dos jugadores jueguen estrategias de la siguiente forma: jugar bk para el tipo θ1 k, y jugar uno de bk o ck en caso contrario. Observamos que entre estas estrategias, no queda ninguna que coloque una probabilidad mayor que q en ck. Si dejamos que qk denote la probabilidad con la que el jugador k juega ck, la utilidad esperada de jugar σi es −qi+1 · qi+2/2 − /2. Por otro lado, la utilidad de jugar σi(q) es − + q · δ − q · qi+2/2. Dado que qi+1 ≤ q, la diferencia entre estas dos expresiones es al menos /2 − δ, la cual es positiva. Se deduce que σi domina a σi(q). A partir de la Reclamación 2, se deduce que todas las estrategias de la forma σi(q) serán eliminadas eventualmente. Sin embargo, la Reclamación 1 muestra que no podemos avanzar y eliminar múltiples estrategias de este tipo para un jugador, a menos que al menos otro jugador mantenga simultáneamente las estrategias eliminadas: cada vez que se elimina un σi(q) tal que σi+1(q) y σi+2(q) aún no han sido eliminados, necesitamos eliminar una de las dos últimas estrategias antes de que se pueda eliminar cualquier σi(q) con q > q, es decir, necesitamos alternar entre jugadores. Dado que hay exponencialmente muchas estrategias de la forma σi(q), se sigue que la eliminación iterada requerirá exponencialmente muchas iteraciones para completarse. Por lo tanto, un algoritmo eficiente para la dominancia iterada (estricta o débil) por estrategias puras en juegos bayesianos, si existe, debe ser capaz de realizar (al menos parte de) muchas iteraciones en un solo paso del algoritmo (porque si cada paso solo realizara una sola iteración, necesitaríamos exponencialmente muchos pasos). Interesantemente, Knuth et al. [11] argumentan que la dominancia iterada parece ser un problema inherentemente secuencial (a la luz de su resultado de que la dominancia muy débil iterada es P-completa, es decir, aparentemente no paralelizable de manera eficiente), lo que sugiere que la agregación de muchas iteraciones puede ser difícil. 7. CONCLUSIONES Aunque el concepto de equilibrio de Nash se estudia cada vez más intensamente en nuestra comunidad, el concepto quizás más elemental de dominancia (iterada) ha recibido mucha menos atención. En este artículo estudiamos varios aspectos computacionales de este concepto. Primero estudiamos tanto la dominancia estricta como la débil (no iterada), y demostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta puede hacerse en tiempo polinómico utilizando la resolución de un único programa lineal. Luego pasamos a la dominancia iterada. Mostramos que determinar si existe algún camino que elimine una estrategia dada es NP-completo con dominancia débil iterada. Esto nos permitió también demostrar que determinar si existe un camino que conduzca a una solución única es NP-completo. Ambos resultados se mantienen tanto con como sin dominancia de estrategias mixtas. (Una versión más débil del segundo resultado (solo sin dominancia de estrategias mixtas) ya se conocía [7].) La dominancia estricta iterada, por otro lado, es independiente del camino (tanto con como sin dominancia por estrategias mixtas) y, por lo tanto, puede realizarse en tiempo polinómico. Luego estudiamos qué sucede cuando la estrategia dominante puede asignar una probabilidad positiva solo a unas pocas estrategias puras. Primero, demostramos que encontrar la estrategia dominante con el tamaño de soporte mínimo es NP-completo (tanto para dominancia estricta como débil). Luego, demostramos que la dominancia estricta iterada se vuelve dependiente del camino cuando hay un límite en el tamaño del soporte de las estrategias dominantes, y que decidir si una estrategia dada puede ser eliminada por dominancia estricta iterada bajo esta restricción es NP-completo (incluso cuando el límite en el tamaño del soporte es 3). Finalmente, estudiamos la dominancia y la dominancia iterada en juegos bayesianos, como un ejemplo de un lenguaje de representación conciso para juegos en forma normal que es interesante por sí mismo. Mostramos que, a diferencia de los juegos en forma normal, decidir si una estrategia pura dada está dominada por otra estrategia pura en un juego bayesiano es NP-completo (tanto con dominancia estricta como débil); sin embargo, decidir si una estrategia está dominada por alguna estrategia mixta aún se puede hacer en tiempo polinómico con la resolución de un único programa lineal (tanto con dominancia estricta como débil). Finalmente, demostramos que la dominancia iterada utilizando estrategias puras puede requerir un número exponencial de iteraciones en un juego bayesiano (tanto con dominancia estricta como débil). Hay varias vías para investigaciones futuras. Primero, está la pregunta abierta de si es posible completar la dominancia iterada en juegos bayesianos en tiempo polinómico (aunque demostramos que a veces se requiere un número exponencial de alternancias entre los jugadores para eliminar estrategias). Segundo, podemos estudiar los aspectos computacionales del dominio (iterado) en representaciones concisas de juegos de forma normal que no sean juegos bayesianos, por ejemplo, en juegos gráficos o juegos de grafo de efecto local/acción. (Ya se ha estudiado cómo realizar eficientemente el dominio muy débil iterado en juegos estocásticos parcialmente observables). Finalmente, podemos preguntarnos si algunos de los algoritmos que describimos (como el de dominancia estricta iterada con estrategias mixtas) pueden ser optimizados para ser más rápidos. 8. REFERENCIAS [1] Krzysztof R. Apt. Pruebas uniformes de independencia del orden para varios procedimientos de eliminación de estrategias. Contribuciones a la Economía Teórica, 4(1), 2004. [2] Nivan A. R. Bhat y Kevin Leyton-Brown. Calculando equilibrios de Nash de juegos de gráficos de acción. En UAI, 2004. [3] Ben Blum, Christian R. Shelton y Daphne Koller. Un método de continuación para equilibrios de Nash en juegos estructurados. En IJCAI, 2003. [4] Vincent Conitzer y Tuomas Sandholm. Resultados de complejidad sobre equilibrios de Nash. En IJCAI, páginas 765-771, 2003. [5] Drew Fudenberg y Jean Tirole. Teoría de juegos. MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, y Eitan Zemel. En el orden de eliminar estrategias dominadas. Cartas de Investigación Operativa, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai y Eitan Zemel. La complejidad de eliminar estrategias dominadas. Matemáticas de la Investigación de Operaciones, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein y Shlomo Zilberstein. Programación dinámica para juegos estocásticos parcialmente observables. En AAAI, páginas 709-715, 2004. [9] Michael Kearns, Michael Littman y Satinder Singh. Modelos gráficos para teoría de juegos. En UAI, 2001. [10] Leonid Khachiyan. Un algoritmo polinómico en programación lineal. Matemática soviética. Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou y John N Tsitsiklis. Una nota sobre la eliminación de estrategias en juegos bimatrix. Cartas de Investigación Operativa, 7(3):103-107, 1988. [12] Kevin Leyton-Brown y Moshe Tennenholtz. Juegos de efecto local. En IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis y Aranyak Mehta. Jugando juegos grandes utilizando estrategias simples. En ACM-EC, páginas 36-41, 2003. [14] Michael Littman y Peter Stone. Un algoritmo de equilibrio de Nash de tiempo polinómico para juegos repetidos. En ACM-EC, páginas 48-54, 2003. [15] Leslie M. Marx y Jeroen M. Swinkels. Independencia del orden para la dominancia débil iterada. Juegos y Comportamiento Económico, 18:219-245, 1997. [16] Leslie M. Marx y Jeroen M. Swinkels. Corrección, independencia del orden para la dominancia débil iterada. Juegos y Comportamiento Económico, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston y Jerry R. Green. Teoría microeconómica. Oxford University Press, 1995. [18] Roger Myerson.\nEditorial de la Universidad de Oxford, 1995. [18] Roger Myerson. Teoría de juegos: Análisis de conflictos. Harvard University Press, Cambridge, 1991. [19] Martin J Osborne y Ariel Rubinstein. Un curso de Teoría de Juegos. MIT Press, 1994. [20] Christos Papadimitriou. \n\nMIT Press, 1994. [20] Christos Papadimitriou. Algoritmos, juegos e Internet. En STOC, páginas 749-753, 2001. [21] Ryan Porter, Eugene Nudelman y Yoav Shoham. Métodos de búsqueda simples para encontrar un equilibrio de Nash. En AAAI, páginas 664-669, 2004. 97 ",
            "candidates": [],
            "error": [
                [
                    "forma normal",
                    "forma normal",
                    "juego en forma normal",
                    "juego en forma normal"
                ]
            ]
        },
        "nash equilibrium": {
            "translated_key": "equilibrio de Nash",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Complexity of (Iterated) Dominance∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using dominance and iterated dominance.",
                "We first study both strict and weak dominance (not iterated), and show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then move on to iterated dominance.",
                "We show that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allows us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then study what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we show that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we show that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we study Bayesian games.",
                "We show that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak ∗ This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858, and a Sloan Fellowship. dominance).",
                "Finally, we show that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent systems with self-interested agents, the optimal action for one agent may depend on the actions taken by other agents.",
                "In such settings, the agents require tools from game theory to rationally decide on an action.",
                "Game theory offers various formal models of strategic settings-the best-known of which is a game in normal (or matrix) form, specifying a utility (payoff) for each agent for each combination of strategies that the agents choose-as well as solution concepts, which, given a game, specify which outcomes are reasonable (under various assumptions of rationality and common knowledge).",
                "Probably the best-known (and certainly the most-studied) solution concept is that of <br>nash equilibrium</br>.",
                "A <br>nash equilibrium</br> specifies a strategy for each player, in such a way that no player has an incentive to (unilaterally) deviate from the prescribed strategy.",
                "Recently, numerous papers have studied computing Nash equilibria in various settings [9, 4, 12, 3, 13, 14], and the complexity of constructing a <br>nash equilibrium</br> in normal form games has been labeled one of the two most important open problems on the boundary of P today [20].",
                "The problem of computing solutions according to the perhaps more elementary solution concepts of dominance and iterated dominance has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the game theory community [7].1 ) A strategy strictly dominates another strategy if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one.",
                "The idea is that dominated strategies can be eliminated from consideration.",
                "In iterated dominance, the elimination proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating strategy no longer needs to perform better than or as well as the dominated strategy against opponent strategies that were eliminated in earlier rounds.",
                "Computing solutions according to (iterated) dominance is important for at least the following reasons: 1) it can be computationally easier than computing (for instance) a <br>nash equilibrium</br> (and therefore it can be useful as a preprocessing step in computing a <br>nash equilibrium</br>), and 2) (iterated) dominance requires a weaker rationality assumption on the players than (for instance) Nash equilibrium, and therefore solutions derived according to it are more likely to occur.",
                "In this paper, we study some fundamental computational questions concerning dominance and iterated dominance, including how hard it is to check whether a given strategy can be eliminated by each of the variants of these notions.",
                "The rest of the paper is organized as follows.",
                "In Section 2, we briefly review definitions and basic properties of normal form games, strict and weak dominance, and iterated strict and weak dominance.",
                "In the remaining sections, we study computational aspects of dominance and iterated dominance.",
                "In Section 3, we study one-shot (not iterated) dominance.",
                "In Section 4, we study iterated dominance.",
                "In Section 5, we study dominance and iterated dominance when the dominating strategy can only place probability on a few pure strategies.",
                "Finally, in Section 6, we study dominance and iterated dominance in Bayesian games. 2.",
                "DEFINITIONS AND BASIC PROPERTIES In this section, we briefly review normal form games, as well as dominance and iterated dominance (both strict and weak).",
                "An n-player normal form game is defined as follows.",
                "Definition 1.",
                "A normal form game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of pure strategies Σi and a utility function ui : Σ1 × Σ2 × . . . × Σn → R (where ui(σ1, σ2, . . . , σn) denotes player is utility when each player j plays action σj).",
                "The two main notions of dominance are defined as follows.",
                "Definition 2.",
                "Player is strategy σi is said to be strictly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "Player is strategy σi is said to be weakly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) ≥ ui(σi, σ−i), and for at least one vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "In this definition, it is sometimes allowed for the dominating strategy σi to be a mixed strategy, that is, a probability distribution over pure strategies.",
                "In this case, the utilities in dominance altogether.",
                "For example, simple dominance checks are sometimes used as a subroutine in searching for Nash equilibria [21]. the definition are the expected utilities.2 There are other notions of dominance, such as very weak dominance (in which no strict inequality is required, so two strategies can dominate each other), but we will not study them here.",
                "When we are looking at the dominance relations for player i, the other players (−i) can be thought of as a single player.3 Therefore, in the rest of the paper, when we study one-shot (not iterated) dominance, we will focus without loss of generality on two-player games.4 In two-player games, we will generally refer to the players as r (row) and c (column) rather than 1 and 2.",
                "In iterated dominance, dominated strategies are removed from the game, and no longer have any effect on future dominance relations.",
                "Iterated dominance can eliminate more strategies than dominance, as follows. σr may originally not dominate σr because the latter performs better against σc; but then, once σc is removed because it is dominated by σc, σr dominates σr, and the latter can be removed.",
                "For example, in the following game, R can be removed first, after which D is dominated.",
                "L R U 1, 1 0, 0 D 0, 1 1, 0 Either strict or weak dominance can be used in the definition of iterated dominance.",
                "We note that the process of iterated dominance is never helped by removing a dominated mixed strategy, for the following reason.",
                "If σi gives player i a higher utility than σi against mixed strategy σj for player j = i (and strategies σ−{i,j} for the other players), then for at least one pure strategy σj that σj places positive probability on, σi must perform better than σi against σj (and strategies σ−{i,j} for the other players).",
                "Thus, removing the mixed strategy σj does not introduce any new dominances.",
                "More detailed discussions and examples can be found in standard texts on microeconomics or game theory [17, 5].",
                "We are now ready to move on to the core of this paper. 3.",
                "DOMINANCE (NOT ITERATED) In this section, we study the notion of one-shot (not iterated) dominance.",
                "As a first observation, checking whether a given strategy is strictly (weakly) dominated by some pure strategy is straightforward, by checking, for every pure strategy for that player, whether the latter strategy performs strictly better against all the opponents strategies (at least as well against all the opponents strategies, and strictly 2 The dominated strategy σi is, of course, also allowed to be mixed, but this has no technical implications for the paper: when we study one-shot dominance, we ask whether a given strategy is dominated, and it does not matter whether the given strategy is pure or mixed; when we study iterated dominance, there is no use in eliminating mixed strategies, as we will see shortly. 3 This player may have a very large strategy space (one pure strategy for every vector of pure strategies for the players that are being replaced).",
                "Nevertheless, this will not result in an increase in our representation size, because the original representation already had to specify utilities for each of these vectors. 4 We note that a restriction to two-player games would not be without loss of generality for iterated dominance.",
                "This is because for iterated dominance, we need to look at the dominated strategies of each individual player, so we cannot merge any players. 89 better against at least one).5 Next, we show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time by solving a single linear program. (Similar linear programs have been given before [18]; we present the result here for completeness, and because we will build on the linear programs given below in Theorem 6.)",
                "Proposition 1.",
                "Given the row players utilities, a subset Dr of the row players pure strategies Σr, and a distinguished strategy σ∗ r for the row player, we can check in time polynomial in the size of the game (by solving a single linear program of polynomial size) whether there exists some mixed strategy σr, that places positive probability only on strategies in Dr and dominates σ∗ r , both for strict and for weak dominance.",
                "Proof.",
                "Let pdr be the probability that σr places on dr ∈ Dr. We will solve a single linear program in each of our algorithms; linear programs can be solved in polynomial time [10].",
                "For strict dominance, the question is whether the pdr can be set so that for every pure strategy for the column player σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc).",
                "Because the inequality must be strict, we cannot solve this directly by linear programming.",
                "We proceed as follows.",
                "Because the game is finite, we may assume without loss of generality that all utilities are positive (if not, simply add a constant to all utilities.)",
                "Solve the following linear program: minimize dr∈Dr pdr such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc).",
                "If σ∗ r is strictly dominated by some mixed strategy, this linear program has a solution with objective value < 1. (The dominating strategy is a feasible solution with objective value exactly 1.",
                "Because no constraint is binding for this solution, we can reduce one of the probabilities slightly without affecting feasibility, thereby obtaining a solution with objective value < 1.)",
                "Moreover, if this linear program has a solution with objective value < 1, there is a mixed strategy strictly dominating σ∗ r , which can be obtained by taking the LP solution and adding the remaining probability to any strategy (because all the utilities are positive, this will add to the left side of any inequality, so all inequalities will become strict).",
                "For weak dominance, we can solve the following linear program: maximize σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1.",
                "If σ∗ r is weakly dominated by some mixed strategy, then that mixed strategy is a feasible solution to this program with objective value > 0, because for at least one strategy σc ∈ Σc we have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0.",
                "On the other hand, if this program has a solution with objective value > 0, then for at least one strategy σc ∈ Σc we 5 Recall that the assumption of a single opponent (that is, the assumption of two players) is without loss of generality for one-shot dominance. must have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, and thus the linear programs solution is a weakly dominating mixed strategy. 4.",
                "ITERATED DOMINANCE We now move on to iterated dominance.",
                "It is well-known that iterated strict dominance is path-independent [6, 19]that is, if we remove dominated strategies until no more dominated strategies remain, in the end the remaining strategies for each player will be the same, regardless of the order in which strategies are removed.",
                "Because of this, to see whether a given strategy can be eliminated by iterated strict dominance, all that needs to be done is to repeatedly remove strategies that are strictly dominated, until no more dominated strategies remain.",
                "Because we can check in polynomial time whether any given strategy is dominated (whether or not dominance by mixed strategies is allowed, as described in Section 3), this whole procedure takes only polynomial time.",
                "In the case of iterated dominance by pure strategies with two players, Knuth et al. [11] slightly improve on (speed up) the straightforward implementation of this procedure by keeping track of, for each ordered pair of strategies for a player, the number of opponent strategies that prevent the first strategy from dominating the second.",
                "Hereby the runtime for an m × n game is reduced from O((m + n)4 ) to O((m + n)3 ). (Actually, they only study very weak dominance (for which no strict inequalities are required), but the approach is easily extended.)",
                "In contrast, iterated weak dominance is known to be pathdependent.6 For example, in the following game, using iterated weak dominance we can eliminate M first, and then D, or R first, and then U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Therefore, while the procedure of removing weakly dominated strategies until no more weakly dominated strategies remain can certainly be executed in polynomial time, which strategies survive in the end depends on the order in which we remove the dominated strategies.",
                "We will investigate two questions for iterated weak dominance: whether a given strategy is eliminated in some path, and whether there is a path to a unique solution (one pure strategy left per player).",
                "We will show that both of these problems are computationally hard.",
                "Definition 3.",
                "Given a game in normal form and a distinguished strategy σ∗ , IWD-STRATEGY-ELIMINATION asks whether there is some path of iterated weak dominance that eliminates σ∗ .",
                "Given a game in normal form, IWDUNIQUE-SOLUTION asks whether there is some path of iterated weak dominance that leads to a unique solution (one strategy left per player).",
                "The following lemma shows a special case of normal form games in which allowing for weak dominance by mixed strategies (in addition to weak dominance by pure strategies) does 6 There is, however, a restriction of weak dominance called nice weak dominance which is path-independent [15, 16].",
                "For an overview of path-independence results, see Apt [1]. 90 not help.",
                "We will prove the hardness results in this setting, so that they will hold whether or not dominance by mixed strategies is allowed.",
                "Lemma 1.",
                "Suppose that all the utilities in a game are in {0, 1}.",
                "Then every pure strategy that is weakly dominated by a mixed strategy is also weakly dominated by a pure strategy.",
                "Proof.",
                "Suppose pure strategy σ is weakly dominated by mixed strategy σ∗ .",
                "If σ gets a utility of 1 against some opponent strategy (or vector of opponent strategies if there are more than 2 players), then all the pure strategies that σ∗ places positive probability on must also get a utility of 1 against that opponent strategy (or else the expected utility would be smaller than 1).",
                "Moreover, at least one of the pure strategies that σ∗ places positive probability on must get a utility of 1 against an opponent strategy that σ gets 0 against (or else the inequality would never be strict).",
                "It follows that this pure strategy weakly dominates σ.",
                "We are now ready to prove the main results of this section.",
                "Theorem 1.",
                "IWD-STRATEGY-ELIMINATION is NPcomplete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can easily check whether this is a valid sequence of eliminations (even when dominance by mixed strategies is allowed, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following IWD-STRATEGY-ELIMINATION instance. (In this instance, we will specify that certain strategies are uneliminable.",
                "A strategy σr can be made uneliminable, even when 0 and 1 are the only allowed utilities, by adding another strategy σr and another opponent strategy σc, so that: 1. σr and σr are the only strategies that give the row player a utility of 1 against σc. 2. σr and σr always give the row player the same utility. 3. σc is the only strategy that gives the column player a utility of 1 against σr, but otherwise σc always gives the column player utility 0.",
                "This makes it impossible to eliminate any of these three strategies.",
                "We will not explicitly specify the additional strategies to make the proof more legible.)",
                "In this proof, we will denote row player strategies by s, and column player strategies by t, to improve legibility.",
                "Let the row players pure strategy set be given as follows.",
                "For every variable v ∈ V , the row player has corresponding strategies s1 +v, s2 +v, s1 −v, s2 −v.",
                "Additionally, the row player has the following 2 strategies: s1 0 and s2 0, where s2 0 = σ∗ r (that is, it is the strategy we seek to eliminate).",
                "Finally, for every clause c ∈ C, the row player has corresponding strategies s1 c (uneliminable) and s2 c. Let the column players pure strategy set be given as follows.",
                "For every variable v ∈ V , the column player has a corresponding strategy tv.",
                "For every clause c ∈ C, the column player has a corresponding strategy tc, and additionally, for every literal l ∈ L that occurs in c, a strategy tc,l.",
                "For every variable v ∈ V , the column player has corresponding strategies t+v, t−v (both uneliminable).",
                "Finally, the column player has three additional strategies: t1 0 (uneliminable), t2 0, and t1.",
                "The utility function for the row player is given as follows: • ur(s1 +v, tv) = 0 for all v ∈ V ; • ur(s2 +v, tv) = 1 for all v ∈ V ; • ur(s1 −v, tv) = 1 for all v ∈ V ; • ur(s2 −v, tv) = 0 for all v ∈ V ; • ur(s1 +v, t1) = 1 for all v ∈ V ; • ur(s2 +v, t1) = 0 for all v ∈ V ; • ur(s1 −v, t1) = 0 for all v ∈ V ; • ur(s2 −v, t1) = 1 for all v ∈ V ; • ur(sb +v, t+v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sb −v, t−v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sl, t) = 0 otherwise for all l ∈ L and t ∈ S2; • ur(s1 0, tc) = 0 for all c ∈ C; • ur(s2 0, tc) = 1 for all c ∈ C; • ur(sb 0, t1 0) = 1 for all b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 otherwise for all b ∈ {1, 2} and t ∈ S2; • ur(sb c, t) = 0 otherwise for all c ∈ C and b ∈ {1, 2}; and the row players utility is 0 in every other case.",
                "The utility function for the column player is given as follows: • uc(s, tv) = 0 for all v ∈ V and s ∈ S1; • uc(s, t1) = 0 for all s ∈ S1; • uc(s2 l , tc) = 1 for all c ∈ C and l ∈ L where l ∈ c (literal l occurs in clause c); • uc(s2 l2 , tc,l1 ) = 1 for all c ∈ C and l1, l2 ∈ L, l1 = l2 where l2 ∈ c; • uc(s1 c, tc) = 1 for all c ∈ C; • uc(s2 c, tc) = 0 for all c ∈ C; • uc(sb c, tc,l) = 1 for all c ∈ C, l ∈ L, and b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 otherwise for all c ∈ C and l ∈ L; and the column players utility is 0 in every other case.",
                "We now show that the two instances are equivalent.",
                "First, suppose there is a solution to the satisfiability instance: that is, a truth-value assignment to the variables in V such that all clauses are satisfied.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the assignment, eliminate tv (which gives the column player utility 0 everywhere). 2.",
                "Then, for every variable v that is set to true in the assignment, eliminate s2 +v using s1 +v (which is possible because tv has been eliminated, and because t1 has not been eliminated (yet)). 3.",
                "Now eliminate t1 (which gives the column player utility 0 everywhere). 4.",
                "Next, for every variable v that is set to false in the assignment, eliminate s2 −v using s1 −v (which is possible because t1 has been eliminated, and because tv has not been eliminated (yet)). 5.",
                "For every clause c which has the variable corresponding to one of its positive literals l = +v set to true in the assignment, eliminate tc using tc,l (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 6.",
                "For every clause c which has the variable corresponding to one of its negative literals l = −v set to false in the assignment, eliminate tc using tc,l 91 (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 7.",
                "Because the assignment satisfied the formula, all the tc have now been eliminated.",
                "Thus, we can eliminate s2 0 = σ∗ r using s1 0.",
                "It follows that there is a solution to the IWD-STRATEGY-ELIMINATION instance.",
                "Now suppose there is a solution to the IWD-STRATEGYELIMINATION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We first observe that only s1 0 can eliminate s2 0 = σ∗ r , because it is the only other strategy that gets the row player a utility of 1 against t1 0, and t1 0 is uneliminable.",
                "However, because s2 0 performs better than s1 0 against the tc strategies, it follows that all of the tc strategies must be eliminated.",
                "For each c ∈ C, the strategy tc can only be eliminated by one of the strategies tc,l (with the same c), because these are the only other strategies that get the column player a utility of 1 against s1 c, and s1 c is uneliminable.",
                "But, in order for some tc,l to eliminate tc, s2 l must be eliminated first.",
                "Only s1 l can eliminate s2 l , because it is the only other strategy that gets the row player a utility of 1 against tl, and tl is uneliminable.",
                "We next show that for every v ∈ V only one of s2 +v, s2 −v can be eliminated.",
                "This is because in order for s1 +v to eliminate s2 +v, tv needs to have been eliminated and t1, not (so tv must be eliminated before t1); but in order for s1 −v to eliminate s2 −v, t1 needs to have been eliminated and tv, not (so t1 must be eliminated before tv).",
                "So, set v to true if s2 +v is eliminated, and to false otherwise Because by the above, for every clause c, one of the s2 l with l ∈ c must be eliminated, it follows that this is a satisfying assignment to the satisfiability instance.",
                "Using Theorem 1, it is now (relatively) easy to show that IWD-UNIQUE-SOLUTION is also NP-complete under the same restrictions.",
                "Theorem 2.",
                "IWD-UNIQUE-SOLUTION is NP-complete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "Again, the problem is in NP because we can nondeterministically choose the sequence of eliminations and verify whether it is correct.",
                "To show NP-hardness, we reduce an arbitrary IWD-STRATEGY-ELIMINATION instance to the following IWD-UNIQUE-SOLUTION instance.",
                "Let all the strategies for each player from the original instance remain part of the new instance, and let the utilities resulting from the players playing a pair of these strategies be the same.",
                "We add three additional strategies σ1 r , σ2 r , σ3 r for the row player, and three additional strategies σ1 c , σ2 c , σ3 c for the column player.",
                "Let the additional utilities be as follows: • ur(σr, σj c) = 1 for all σr /∈ {σ1 r , σ2 r , σ3 r } and j ∈ {2, 3}; • ur(σi r, σc) = 1 for all i ∈ {1, 2, 3} and σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 for all i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • and the row players utility is 0 in all other cases involving a new strategy. • uc(σ3 r , σc) = 1 for all σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 for all j ∈ {2, 3} (σ∗ r is the strategy to be eliminated in the original instance); • uc(σi r, σ1 c ) = 1 for all i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • and the column players utility is 0 in all other cases involving a new strategy.",
                "We proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the original IWDSTRATEGY-ELIMINATION instance.",
                "Then, perform the same sequence of eliminations to eliminate σ∗ r in the new IWD-UNIQUE-SOLUTION instance. (This is possible because at any stage, any weak dominance for the row player in the original instance is still a weak dominance in the new instance, because the two strategies utilities for the row player are the same when the column player plays one of the new strategies; and the same is true for the column player.)",
                "Once σ∗ r is eliminated, let σ1 c eliminate σ2 c . (It performs better against σ2 r .)",
                "Then, let σ1 r eliminate all the other remaining strategies for the row player. (It always performs better against either σ1 c or σ3 c .)",
                "Finally, σ1 c is the unique best response against σ1 r among the column players remaining strategies, so let it eliminate all the other remaining strategies for the column player.",
                "Thus, there exists a solution to the IWD-UNIQUE-SOLUTION instance.",
                "Now suppose there exists a solution to the IWD-UNIQUESOLUTION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We will show that none of the new strategies (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) can either eliminate another strategy, or be eliminated before σ∗ r is eliminated.",
                "Thus, there must be a sequence of eliminations ending in the elimination of σ∗ r , which does not involve any of the new strategies, and is therefore a valid sequence of eliminations in the original game (because all original strategies perform the same against each new strategy).",
                "We now show that this is true by exhausting all possibilities for the first elimination before σ∗ r is eliminated that involves a new strategy.",
                "None of the σi r can be eliminated by a σr /∈ {σ1 r , σ2 r , σ3 r }, because the σi r perform better against σ1 c . σ1 r cannot eliminate any other strategy, because it always performs poorer against σ2 c . σ2 r and σ3 r are equivalent from the row players perspective (and thus cannot eliminate each other), and cannot eliminate any other strategy because they always perform poorer against σ3 c .",
                "None of the σj c can be eliminated by a σc /∈ {σ1 c , σ2 c , σ3 c }, because the σj c always perform better against either σ1 r or σ2 r . σ1 c cannot eliminate any other strategy, because it always performs poorer against either σ∗ r or σ3 r . σ2 c cannot eliminate any other strategy, because it always performs poorer against σ2 r or σ3 r . σ3 c cannot eliminate any other strategy, because it always performs poorer against σ1 r or σ3 r .",
                "Thus, there exists a solution to the IWDSTRATEGY-ELIMINATION instance.",
                "A slightly weaker version of the part of Theorem 2 concerning dominance by pure strategies only is the main result of Gilboa et al. [7]. (Besides not proving the result for dominance by mixed strategies, the original result was weaker because it required utilities {0, 1, 2, 3, 4, 5, 6, 7, 8} rather than just {0, 1} (and because of this, our Lemma 1 cannot be applied to it to get the result for mixed strategies).) 5. (ITERATED) DOMINANCE USING MIXED STRATEGIES WITH SMALL SUPPORTS When showing that a strategy is dominated by a mixed strategy, there are several reasons to prefer exhibiting a 92 dominating strategy that places positive probability on as few pure strategies as possible.",
                "First, this will reduce the number of bits required to specify the dominating strategy (and thus the proof of dominance can be communicated quicker): if the dominating mixed strategy places positive probability on only k strategies, then it can be specified using k real numbers for the probabilities, plus k log m (where m is the number of strategies for the player under consideration) bits to indicate which strategies are used.",
                "Second, the proof of dominance will be cleaner: for a dominating mixed strategy, it is typically (always in the case of strict dominance) possible to spread some of the probability onto any unused pure strategy and still have a dominating strategy, but this obscures which pure strategies are the ones that are key in making the mixed strategy dominating.",
                "Third, because (by the previous) the argument for eliminating the dominated strategy is simpler and easier to understand, it is more likely to be accepted.",
                "Fourth, the level of risk neutrality required for the argument to work is reduced, at least in the extreme case where dominance by a single pure strategy can be exhibited (no risk neutrality is required here).",
                "This motivates the following problem.",
                "Definition 4 (MINIMUM-DOMINATING-SET).",
                "We are given the row players utilities of a game in normal form, a distinguished strategy σ∗ for the row player, a specification of whether the dominance should be strict or weak, and a number k. We are asked whether there exists a mixed strategy σ for the row player that places positive probability on at most k pure strategies, and dominates σ∗ in the required sense.",
                "Unfortunately, this problem is NP-complete.",
                "Theorem 3.",
                "MINIMUM-DOMINATING-SET is NPcomplete, both for strict and for weak dominance.",
                "Proof.",
                "The problem is in NP because we can nondeterministically choose a set of at most k strategies to give positive probability, and decide whether we can dominate σ∗ with these k strategies as described in Proposition 1.",
                "To show NP-hardness, we reduce an arbitrary SET-COVER instance (given a set S, subsets S1, S2, . . . , Sr, and a number t, can all of S be covered by at most t of the subsets?) to the following MINIMUM-DOMINATING-SET instance.",
                "For every element s ∈ S, there is a pure strategy σs for the column player.",
                "For every subset Si, there is a pure strategy σSi for the row player.",
                "Finally, there is the distinguished pure strategy σ∗ for the row player.",
                "The row players utilities are as follows: ur(σSi , σs) = t + 1 if s ∈ Si; ur(σSi , σs) = 0 if s /∈ Si; ur(σ∗ , σs) = 1 for all s ∈ S. Finally, we let k = t. We now proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the SET-COVER instance.",
                "Without loss of generality, we can assume that there are exactly k subsets in the cover.",
                "Then, for every Si that is in the cover, let the dominating strategy σ place exactly 1 k probability on the corresponding pure strategy σSi .",
                "Now, if we let n(s) be the number of subsets in the cover containing s (we observe that that n(s) ≥ 1), then for every strategy σs for the column player, the row players expected utility for playing σ when the column player is playing σs is u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs).",
                "So σ strictly (and thus also weakly) dominates σ∗ , and there exists a solution to the MINIMUM-DOMINATING-SET instance.",
                "Now suppose there exists a solution to the MINIMUMDOMINATING-SET instance.",
                "Consider the (at most k) pure strategies of the form σSi on which the dominating mixed strategy σ places positive probability, and let T be the collection of the corresponding subsets Si.",
                "We claim that T is a cover.",
                "For suppose there is some s ∈ S that is not in any of the subsets in T .",
                "Then, if the column player plays σs, the row player (when playing σ) will always receive utility 0-as opposed to the utility of 1 the row player would receive for playing σ∗ , contradicting the fact that σ dominates σ∗ (whether this dominance is weak or strict).",
                "It follows that there exists a solution to the SET-COVER instance.",
                "On the other hand, if we require that the dominating strategy only places positive probability on a very small number of pure strategies, then it once again becomes easy to check whether a strategy is dominated.",
                "Specifically, to find out whether player is strategy σ∗ is dominated by a strategy that places positive probability on only k pure strategies, we can simply check, for every subset of k of player is pure strategies, whether there is a strategy that places positive probability only on these k strategies and dominates σ∗ , using Proposition 1.",
                "This requires only O(|Σi|k ) such checks.",
                "Thus, if k is a constant, this constitutes a polynomial-time algorithm.",
                "A natural question to ask next is whether iterated strict dominance remains computationally easy when dominating strategies are required to place positive probability on at most k pure strategies, where k is a small constant. (We have already shown in Section 4 that iterated weak dominance is hard even when k = 1, that is, only dominance by pure strategies is allowed.)",
                "Of course, if iterated strict dominance were path-independent under this restriction, computational easiness would follow as it did in Section 4.",
                "However, it turns out that this is not the case.",
                "Observation 1.",
                "If we restrict the dominating strategies to place positive probability on at most two pure strategies, iterated strict dominance becomes path-dependent.",
                "Proof.",
                "Consider the following game: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Let (i, j) denote the outcome in which the row player plays the ith row and the column player plays the jth column.",
                "Because (1, 1), (2, 2), and (4, 3) are all Nash equilibria, none of the column players pure strategies will ever be eliminated, and neither will rows 1, 2, and 4.",
                "We now observe that randomizing uniformly over rows 1 and 2 dominates row 3, and randomizing uniformly over rows 3 and 4 dominates row 5.",
                "However, if we eliminate row 3 first, it becomes impossible to dominate row 5 without randomizing over at least 3 pure strategies.",
                "Indeed, iterated strict dominance turns out to be hard even when k = 3.",
                "Theorem 4.",
                "If we restrict the dominating strategies to place positive probability on at most three pure strategies, it becomes NP-complete to decide whether a given strategy can be eliminated using iterated strict dominance. 93 Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can check in polynomial time whether this is a valid sequence of eliminations (for any strategy to be eliminated, we can check, for every subset of three other strategies, whether there is a strategy placing positive probability on only these three strategies that dominates the strategy to be eliminated, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following two-player game.",
                "For every variable v ∈ V , the row player has strategies s+v, s−v, s1 v, s2 v, s3 v, s4 v, and the column player has strategies t1 v, t2 v, t3 v, t4 v. For every clause c ∈ C, the row player has a strategy sc, and the column player has a strategy tc, as well as, for every literal l occurring in c, an additional strategy tl c. The row player has two additional strategies s1 and s2. (s2 is the strategy that we are seeking to eliminate.)",
                "Finally, the column player has one additional strategy t1.",
                "The utility function for the row player is given as follows (where is some sufficiently small number): • ur(s+v, tj v) = 4 if j ∈ {1, 2}, for all v ∈ V ; • ur(s+v, tj v) = 1 if j ∈ {3, 4}, for all v ∈ V ; • ur(s−v, tj v) = 1 if j ∈ {1, 2}, for all v ∈ V ; • ur(s−v, tj v) = 4 if j ∈ {3, 4}, for all v ∈ V ; • ur(s+v, t) = ur(s−v, t) = 0 for all v ∈ V and t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 for all v ∈ V and i ∈ {1, 2, 3, 4}; • ur(si v, t) = for all v ∈ V , i ∈ {1, 2, 3, 4}, and t = ti v; • ur(sc, tc) = 2 for all c ∈ C; • ur(sc, t) = 0 for all c ∈ C and t = tc; • ur(s1, t1) = 1 + ; • ur(s1, t) = for all t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 for all c ∈ C; • ur(s2, t) = 0 for all t /∈ {t1} ∪ {tc : c ∈ C}.",
                "The utility function for the column player is given as follows: • uc(si v, ti v) = 1 for all v ∈ V and i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 for all v ∈ V , i ∈ {1, 2, 3, 4}, and s = si v; • uc(sc, tc) = 1 for all c ∈ C; • uc(sl, tc) = 1 for all c ∈ C and l ∈ L occurring in c; • uc(s, tc) = 0 for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + for all c ∈ C; • uc(sl , tl c) = 1 + for all c ∈ C and l = l occurring in c; • uc(s, tl c) = for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c, l = l }; • uc(s2, t1) = 1; • uc(s, t1) = 0 for all s = s2.",
                "We now show that the two instances are equivalent.",
                "First, suppose that there is a solution to the satisfiability instance.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the satisfying assignment, eliminate s+v with the mixed strategy σr that places probability 1/3 on s−v, probability 1/3 on s1 v, and probability 1/3 on s2 v. (The expected utility of playing σr against t1 v or t2 v is 14/3 > 4; against t3 v or t4 v, it is 4/3 > 1; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 2.",
                "Similarly, for every variable v that is set to false in the satisfying assignment, eliminate s−v with the mixed strategy σr that places probability 1/3 on s+v, probability 1/3 on s3 v, and probability 1/3 on s4 v. (The expected utility of playing σr against t1 v or t2 v is 4/3 > 1; against t3 v or t4 v, it is 14/3 > 4; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 3.",
                "For every c ∈ C, eliminate tc with any tl c for which l was set to true in the satisfying assignment. (This is a valid dominance because tl c performs better than tc against any strategy other than sl, and we eliminated sl in step 1 or in step 2.) 4.",
                "Finally, eliminate s2 with s1. (This is a valid dominance because s1 performs better than s2 against any strategy other than those in {tc : c ∈ C}, which we eliminated in step 3.)",
                "Hence, there is an elimination path that eliminates s2.",
                "Now, suppose that there is an elimination path that eliminates s2.",
                "The strategy that eventually dominates s2 must place most of its probability on s1, because s1 is the only other strategy that performs well against t1, which cannot be eliminated before s2.",
                "But, s1 performs significantly worse than s2 against any strategy tc with c ∈ C, so it follows that all these strategies must be eliminated first.",
                "Each strategy tc can only be eliminated by a strategy that places most of its weight on the corresponding strategies tl c with l ∈ c, because they are the only other strategies that perform well against sc, which cannot be eliminated before tc.",
                "But, each strategy tl c performs significantly worse than tc against sl, so it follows that for every clause c, for one of the literals l occurring in it, sl must be eliminated first.",
                "Now, strategies of the form tj v will never be eliminated because they are the unique best responses to the corresponding strategies sj v (which are, in turn, the best responses to the corresponding tj v).",
                "As a result, if strategy s+v (respectively, s−v) is eliminated, then its opposite strategy s−v (respectively, s+v) can no longer be eliminated, for the following reason.",
                "There is no other pure strategy remaining that gets a significant utility against more than one of the strategies t1 v, t2 v, t3 v, t4 v, but s−v (respectively, s+v) gets significant utility against all 4, and therefore cannot be dominated by a mixed strategy placing positive probability on at most 3 strategies.",
                "It follows that for each v ∈ V , at most one of the strategies s+v, s−v is eliminated, in such a way that for every clause c, for one of the literals l occurring in it, sl must be eliminated.",
                "But then setting all the literals l such that sl is eliminated to true constitutes a solution to the satisfiability instance.",
                "In the next section, we return to the setting where there is no restriction on the number of pure strategies on which a dominating mixed strategy can place positive probability. 6. (ITERATED) DOMINANCE IN BAYESIAN GAMES So far, we have focused on normal form games that are flatly represented (that is, every matrix entry is given ex94 plicitly).",
                "However, for many games, the flat representation is too large to write down explicitly, and instead, some representation that exploits the structure of the game needs to be used.",
                "Bayesian games, besides being of interest in their own right, can be thought of as a useful structured representation of normal form games, and we will study them in this section.",
                "In a Bayesian game, each player first receives privately held preference information (the players type) from a distribution, which determines the utility that that player receives for every outcome of (that is, vector of actions played in) the game.",
                "After receiving this type, the player plays an action based on it.7 Definition 5.",
                "A Bayesian game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of actions Ai, a (finite) type space Θi with a probability distribution πi over it, and a utility function ui : Θi × A1 × A2 × . . . × An → R (where ui(θi, a1, a2, . . . , an) denotes player is utility when is type is θi and each player j plays action aj).",
                "A pure strategy in a Bayesian game is a mapping from types to actions, σi : Θi → Ai, where σi(θi) denotes the action that player i plays for type θi.",
                "Any vector of pure strategies in a Bayesian game defines an (expected) utility for each player, and therefore we can translate a Bayesian game into a normal form game.",
                "In this normal form game, the notions of dominance and iterated dominance are defined as before.",
                "However, the normal form representation of the game is exponentially larger than the Bayesian representation, because each player i has |Ai||Θi| distinct pure strategies.",
                "Thus, any algorithm for Bayesian games that relies on expanding the game to its normal form will require exponential time.",
                "Specifically, our easiness results for normal form games do not directly transfer to this setting.",
                "In fact, it turns out that checking whether a strategy is dominated by a pure strategy is hard in Bayesian games.",
                "Theorem 5.",
                "In a Bayesian game, it is NP-complete to decide whether a given pure strategy σr : Θr → Ar is dominated by some other pure strategy (both for strict and weak dominance), even when the row players distribution over types is uniform.",
                "Proof.",
                "The problem is in NP because it is easy to verify whether a candidate dominating strategy is indeed a dominating strategy.",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a set of clauses C using variables from V ) to the following Bayesian game.",
                "Let the row players action set be Ar = {t, f, 0} and let the column players action set be Ac = {ac : c ∈ C}.",
                "Let the row players type set be Θr = {θv : v ∈ V }, with a distribution πr that is uniform.",
                "Let the row players utility function be as follows: • ur(θv, 0, ac) = 0 for all v ∈ V and c ∈ C; • ur(θv, b, ac) = |V | for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b satisfies c; • ur(θv, b, ac) = −1 for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b does not satisfy c. 7 In general, a player can also receive a signal about the other players preferences, but we will not concern ourselves with that here.",
                "Let the pure strategy to be dominated be the one that plays 0 for every type.",
                "We show that the strategy is dominated by a pure strategy if and only if there is a solution to the satisfiability instance.",
                "First, suppose there is a solution to the satisfiability instance.",
                "Then, let σd r be given by: σd r (θv) = t if v is set to true in the solution to the satisfiability instance, and σd r (θv) = f otherwise.",
                "Then, against any action ac by the column player, there is at least one type θv such that either +v ∈ c and σd r (θv) = t, or −v ∈ c and σd r (θv) = f. Thus, the row players expected utility against action ac is at least |V | |V | − |V |−1 |V | = 1 |V | > 0.",
                "So, σd r is a dominating strategy.",
                "Now, suppose there is a dominating pure strategy σd r .",
                "This dominating strategy must play t or f for at least one type.",
                "Thus, against any ac by the column player, there must at least be some type θv for which ur(θv, σd r (θv), ac) > 0.",
                "That is, there must be at least one variable v such that setting v to σd r (θv) satifies c. But then, setting each v to σd r (θv) must satisfy all the clauses.",
                "So a satisfying assignment exists.",
                "However, it turns out that we can modify the linear programs from Proposition 1 to obtain a polynomial time algorithm for checking whether a strategy is dominated by a mixed strategy in Bayesian games.",
                "Theorem 6.",
                "In a Bayesian game, it can be decided in polynomial time whether a given (possibly mixed) strategy σr is dominated by some other mixed strategy, using linear programming (both for strict and weak dominance).",
                "Proof.",
                "We can modify the linear programs presented in Proposition 1 as follows.",
                "For strict dominance, again assuming without loss of generality that all the utilities in the game are positive, use the following linear program (in which pσr r (θr, ar) is the probability that σr, the strategy to be dominated, places on ar for type θr): minimize θr∈Θr ar∈Ar pr(ar) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1.",
                "Assuming that π(θr) > 0 for all θr ∈ Θr, this program will return an objective value smaller than |Θr| if and only if σr is strictly dominated, by reasoning similar to that done in Proposition 1.",
                "For weak dominance, use the following linear program: maximize ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) = 1.",
                "This program will return an objective value greater than 0 if and only if σr is weakly dominated, by reasoning similar to that done in Proposition 1.",
                "We now turn to iterated dominance in Bayesian games.",
                "Na¨ıvely, one might argue that iterated dominance in Bayesian 95 games always requires an exponential number of steps when a significant fraction of the games pure strategies can be eliminated, because there are exponentially many pure strategies.",
                "However, this is not a very strong argument because oftentimes we can eliminate exponentially many pure strategies in one step.",
                "For example, if for some type θr ∈ Θr we have, for all ac ∈ Ac, that u(θr, a1 r, ac) > u(θr, a2 r, ac), then any pure strategy for the row player which plays action a2 r for type θr is dominated (by the strategy that plays action a1 r for type θr instead)-and there are exponentially many (|Ar||Θr|−1 ) such strategies.",
                "It is therefore conceivable that we need only polynomially many eliminations of collections of a players strategies.",
                "However, the following theorem shows that this is not the case, by giving an example where an exponential number of iterations (that is, alternations between the players in eliminating strategies) is required. (We emphasize that this is not a result about computational complexity.)",
                "Theorem 7.",
                "Even in symmetric 3-player Bayesian games, iterated dominance by pure strategies can require an exponential number of iterations (both for strict and weak dominance), even with only three actions per player.",
                "Proof.",
                "Let each player i ∈ {1, 2, 3} have n + 1 types θ1 i , θ2 i , . . . , θn+1 i .",
                "Let each player i have 3 actions ai, bi, ci, and let the utility function of each player be defined as follows. (In the below, i + 1 and i + 2 are shorthand for i + 1(mod 3) and i + 2(mod 3) when used as player indices.",
                "Also, −∞ can be replaced by a sufficiently negative number.",
                "Finally, δ and should be chosen to be very small (even compared to 2−(n+1) ), and should be more than twice as large as δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 for si+1 = ci+1 or si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − for si+1 = ai+1 and si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ for si+1 = ai+1 or si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ for all si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ for all si+1, si+2 when j > 1; • ui(θj i ; bi, si+1, si+2) = − for all si+1, si+2 when j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 for all si+1 when j > 1; • ui(θj i ; ci, si+1, si+2) = δ− for all si+1 and si+2 = ci+2 when j > 1.",
                "Let the distribution over each players types be given by p(θj i ) = 2−j (with the exception that p(θ2 i ) = 2−2 +2−(n+1) ).",
                "We will be interested in eliminating strategies of the following form: play bi for type θ1 i , and play one of bi or ci otherwise.",
                "Because the utility function is the same for any type θj i with j > 1, these strategies are effectively defined by the total probability that they place on ci,8 which is t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j where tj i = 1 if player i 8 Note that the strategies are still pure strategies; the probability placed on an action by a strategy here is simply the sum of the probabilities of the types for which the strategy chooses that action. plays ci for type θj i , and 0 otherwise.",
                "This probability is different for any two different strategies of the given form, and we have exponentially many different strategies of the given form.",
                "For any probability q which can be expressed as t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (with all tj ∈ {0, 1}), let σi(q) denote the (unique) strategy of the given form for player i which places a total probability of q on ci.",
                "Any strategy that plays ci for type θ1 i or ai for some type θj i with j > 1 can immediately be eliminated.",
                "We will show that, after that, we must eliminate the strategies σi(q) with high q first, slowly working down to those with lower q.",
                "Claim 1: If σi+1(q ) and σi+2(q ) have not yet been eliminated, and q < q , then σi(q) cannot yet be eliminated.",
                "Proof: First, we show that no strategy σi(q ) can eliminate σi(q).",
                "Against σi+1(q ), σi+2(q ), the utility of playing σi(p) is − + p · δ − p · q /2.",
                "Thus, when q = 0, it is best to set p as high as possible (and we note that σi+1(0) and σi+2(0) have not been eliminated), but when q > 0, it is best to set p as low as possible because δ < q /2.",
                "Thus, whether q > q or q < q , σi(q) will always do strictly better than σi(q ) against some remaining opponent strategies.",
                "Hence, no strategy σi(q ) can eliminate σi(q).",
                "The only other pure strategies that could dominate σi(q) are strategies that play ai for type θ1 i , and bi or ci for all other types.",
                "Let us take such a strategy and suppose that it plays c with probability p. Against σi+1(q ), σi+2(q ) (which have not yet been eliminated), the utility of playing this strategy is −(q )2 /2 − /2 + p · δ − p · q /2.",
                "On the other hand, playing σi(q) gives − + q · δ − q · q /2.",
                "Because q > q, we have −(q )2 /2 < −q · q /2, and because δ and are small, it follows that σi(q) receives a higher utility.",
                "Therefore, no strategy dominates σi(q), proving the claim.",
                "Claim 2: If for all q > q, σi+1(q ) and σi+2(q ) have been eliminated, then σi(q) can be eliminated.",
                "Proof: Consider the strategy for player i that plays ai for type θ1 i , and bi for all other types (call this strategy σi); we claim σi dominates σi(q).",
                "First, if either of the other players k plays ak for θ1 k, then σi performs better than σi(q) (which receives −∞ in some cases).",
                "Because the strategies for player k that play ck for type θ1 k, or ak for some type θj k with j > 1, have already been eliminated, all that remains to check is that σi performs better than σi(q) whenever both of the other two players play strategies of the following form: play bk for type θ1 k, and play one of bk or ck otherwise.",
                "We note that among these strategies, there are none left that place probability greater than q on ck.",
                "Letting qk denote the probability with which player k plays ck, the expected utility of playing σi is −qi+1 · qi+2/2 − /2.",
                "On the other hand, the utility of playing σi(q) is − + q · δ − q · qi+2/2.",
                "Because qi+1 ≤ q, the difference between these two expressions is at least /2 − δ, which is positive.",
                "It follows that σi dominates σi(q).",
                "From Claim 2, it follows that all strategies of the form σi(q) will eventually be eliminated.",
                "However, Claim 1 shows that we cannot go ahead and eliminate multiple such strategies for one player, unless at least one other player simultaneously keeps up in the eliminated strategies: every time a σi(q) is eliminated such that σi+1(q) and σi+2(q) have not yet been eliminated, we need to eliminate one of the latter two strategies before any σi(q ) with q > q can be eliminated-that is, we need to alternate between players.",
                "Because there are exponentially many strategies of the form σi(q), it follows that iterated elimination will require exponentially many iterations to complete. 96 It follows that an efficient algorithm for iterated dominance (strict or weak) by pure strategies in Bayesian games, if it exists, must somehow be able to perform (at least part of) many iterations in a single step of the algorithm (because if each step only performed a single iteration, we would need exponentially many steps).",
                "Interestingly, Knuth et al. [11] argue that iterated dominance appears to be an inherently sequential problem (in light of their result that iterated very weak dominance is P-complete, that is, apparently not efficiently parallelizable), suggesting that aggregating many iterations may be difficult. 7.",
                "CONCLUSIONS While the <br>nash equilibrium</br> solution concept is studied more and more intensely in our community, the perhaps more elementary concept of (iterated) dominance has received much less attention.",
                "In this paper we studied various computational aspects of this concept.",
                "We first studied both strict and weak dominance (not iterated), and showed that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then moved on to iterated dominance.",
                "We showed that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allowed us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then studied what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we showed that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we showed that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we studied dominance and iterated dominance in Bayesian games, as an example of a concise representation language for normal form games that is interesting in its own right.",
                "We showed that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak dominance).",
                "Finally, we showed that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "There are various avenues for future research.",
                "First, there is the open question of whether it is possible to complete iterated dominance in Bayesian games in polynomial time (even though we showed that an exponential number of alternations between the players in eliminating strategies is sometimes required).",
                "Second, we can study computational aspects of (iterated) dominance in concise representations of normal form games other than Bayesian games-for example, in graphical games [9] or local-effect/action graph games [12, 2]. (How to efficiently perform iterated very weak dominance has already been studied for partially observable stochastic games [8].)",
                "Finally, we can ask whether some of the algorithms we described (such as the one for iterated strict dominance with mixed strategies) can be made faster. 8.",
                "REFERENCES [1] Krzysztof R. Apt.",
                "Uniform proofs of order independence for various strategy elimination procedures.",
                "Contributions to Theoretical Economics, 4(1), 2004. [2] Nivan A. R. Bhat and Kevin Leyton-Brown.",
                "Computing Nash equilibria of action-graph games.",
                "In UAI, 2004. [3] Ben Blum, Christian R. Shelton, and Daphne Koller.",
                "A continuation method for Nash equilibria in structured games.",
                "In IJCAI, 2003. [4] Vincent Conitzer and Tuomas Sandholm.",
                "Complexity results about Nash equilibria.",
                "In IJCAI, pages 765-771, 2003. [5] Drew Fudenberg and Jean Tirole.",
                "Game Theory.",
                "MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "On the order of eliminating dominated strategies.",
                "Operations Research Letters, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "The complexity of eliminating dominated strategies.",
                "Mathematics of Operation Research, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein, and Shlomo Zilberstein.",
                "Dynamic programming for partially observable stochastic games.",
                "In AAAI, pages 709-715, 2004. [9] Michael Kearns, Michael Littman, and Satinder Singh.",
                "Graphical models for game theory.",
                "In UAI, 2001. [10] Leonid Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou, and John N Tsitsiklis.",
                "A note on strategy elimination in bimatrix games.",
                "Operations Research Letters, 7(3):103-107, 1988. [12] Kevin Leyton-Brown and Moshe Tennenholtz.",
                "Local-effect games.",
                "In IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [14] Michael Littman and Peter Stone.",
                "A polynomial-time <br>nash equilibrium</br> algorithm for repeated games.",
                "In ACM-EC, pages 48-54, 2003. [15] Leslie M. Marx and Jeroen M. Swinkels.",
                "Order independence for iterated weak dominance.",
                "Games and Economic Behavior, 18:219-245, 1997. [16] Leslie M. Marx and Jeroen M. Swinkels.",
                "Corrigendum, order independence for iterated weak dominance.",
                "Games and Economic Behavior, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston, and Jerry R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [18] Roger Myerson.",
                "Game Theory: Analysis of Conflict.",
                "Harvard University Press, Cambridge, 1991. [19] Martin J Osborne and Ariel Rubinstein.",
                "A Course in Game Theory.",
                "MIT Press, 1994. [20] Christos Papadimitriou.",
                "Algorithms, games and the Internet.",
                "In STOC, pages 749-753, 2001. [21] Ryan Porter, Eugene Nudelman, and Yoav Shoham.",
                "Simple search methods for finding a <br>nash equilibrium</br>.",
                "In AAAI, pages 664-669, 2004. 97"
            ],
            "original_annotated_samples": [
                "Probably the best-known (and certainly the most-studied) solution concept is that of <br>nash equilibrium</br>.",
                "A <br>nash equilibrium</br> specifies a strategy for each player, in such a way that no player has an incentive to (unilaterally) deviate from the prescribed strategy.",
                "Recently, numerous papers have studied computing Nash equilibria in various settings [9, 4, 12, 3, 13, 14], and the complexity of constructing a <br>nash equilibrium</br> in normal form games has been labeled one of the two most important open problems on the boundary of P today [20].",
                "Computing solutions according to (iterated) dominance is important for at least the following reasons: 1) it can be computationally easier than computing (for instance) a <br>nash equilibrium</br> (and therefore it can be useful as a preprocessing step in computing a <br>nash equilibrium</br>), and 2) (iterated) dominance requires a weaker rationality assumption on the players than (for instance) Nash equilibrium, and therefore solutions derived according to it are more likely to occur.",
                "CONCLUSIONS While the <br>nash equilibrium</br> solution concept is studied more and more intensely in our community, the perhaps more elementary concept of (iterated) dominance has received much less attention."
            ],
            "translated_annotated_samples": [
                "Probablemente el concepto de solución más conocido (y ciertamente el más estudiado) es el <br>equilibrio de Nash</br>.",
                "Un <br>equilibrio de Nash</br> especifica una estrategia para cada jugador, de tal manera que ningún jugador tiene un incentivo para desviarse (unilateralmente) de la estrategia prescrita.",
                "Recientemente, numerosos artículos han estudiado el cálculo de equilibrios de Nash en diferentes contextos [9, 4, 12, 3, 13, 14], y la complejidad de construir un <br>equilibrio de Nash</br> en juegos en forma normal ha sido etiquetada como uno de los dos problemas abiertos más importantes en el límite de P hoy en día [20].",
                "Calcular soluciones según la dominancia (iterada) es importante por al menos las siguientes razones: 1) puede ser computacionalmente más fácil que calcular (por ejemplo) un <br>equilibrio de Nash</br> (y por lo tanto puede ser útil como paso de preprocesamiento en el cálculo de un <br>equilibrio de Nash</br>), y 2) la dominancia (iterada) requiere una suposición de racionalidad más débil en los jugadores que (por ejemplo) el equilibrio de Nash, y por lo tanto las soluciones derivadas según ella son más propensas a ocurrir.",
                "CONCLUSIONES Aunque el concepto de <br>equilibrio de Nash</br> se estudia cada vez más intensamente en nuestra comunidad, el concepto quizás más elemental de dominancia (iterada) ha recibido mucha menos atención."
            ],
            "translated_text": "Estudiamos varios aspectos computacionales de la resolución de juegos utilizando la dominancia y la dominancia iterada. Primero estudiamos tanto la dominancia estricta como la débil (no iterada), y demostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta se puede hacer en tiempo polinómico utilizando la resolución de un único programa lineal. Luego pasamos a la dominancia iterada. Mostramos que determinar si existe algún camino que elimine una estrategia dada es NP-completo con dominancia débil iterada. Esto nos permite también demostrar que determinar si existe un camino que conduce a una solución única es NP-completo. Ambos resultados se mantienen tanto con como sin dominancia de estrategias mixtas. (Una versión más débil del segundo resultado (solo sin dominancia de estrategias mixtas) ya se conocía [7].) La dominancia estricta iterada, por otro lado, es independiente de la ruta (tanto con como sin dominancia por estrategias mixtas) y, por lo tanto, se puede realizar en tiempo polinómico. Luego estudiamos qué sucede cuando la estrategia dominante puede asignar una probabilidad positiva solo a unas pocas estrategias puras. Primero, demostramos que encontrar la estrategia dominante con el tamaño de soporte mínimo es NP-completo (tanto para dominancia estricta como débil). Luego, demostramos que la dominancia estricta iterada se vuelve dependiente del camino cuando hay un límite en el tamaño del soporte de las estrategias dominantes, y que decidir si una estrategia dada puede ser eliminada por dominancia estricta iterada bajo esta restricción es NP-completo (incluso cuando el límite en el tamaño del soporte es 3). Finalmente, estudiamos juegos bayesianos. Mostramos que, a diferencia de los juegos en forma normal, decidir si una estrategia pura dada está dominada por otra estrategia pura en un juego bayesiano es NP-completo (tanto con dominancia estricta como débil); sin embargo, decidir si una estrategia está dominada por alguna estrategia mixta aún puede hacerse en tiempo polinómico con la resolución de un único programa lineal (tanto con dominancia estricta como débil). Finalmente, demostramos que la dominancia iterada utilizando estrategias puras puede requerir un número exponencial de iteraciones en un juego bayesiano (tanto con dominancia estricta como débil). Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN En sistemas multiagentes con agentes auto-interesados, la acción óptima para un agente puede depender de las acciones tomadas por otros agentes. En tales contextos, los agentes necesitan herramientas de teoría de juegos para decidir racionalmente sobre una acción. La teoría de juegos ofrece varios modelos formales de escenarios estratégicos, el más conocido de los cuales es un juego en forma normal (o matriz), que especifica una utilidad (pago) para cada agente en cada combinación de estrategias que los agentes eligen, así como conceptos de solución que, dados un juego, especifican qué resultados son razonables (bajo varias suposiciones de racionalidad y conocimiento común). Probablemente el concepto de solución más conocido (y ciertamente el más estudiado) es el <br>equilibrio de Nash</br>. Un <br>equilibrio de Nash</br> especifica una estrategia para cada jugador, de tal manera que ningún jugador tiene un incentivo para desviarse (unilateralmente) de la estrategia prescrita. Recientemente, numerosos artículos han estudiado el cálculo de equilibrios de Nash en diferentes contextos [9, 4, 12, 3, 13, 14], y la complejidad de construir un <br>equilibrio de Nash</br> en juegos en forma normal ha sido etiquetada como uno de los dos problemas abiertos más importantes en el límite de P hoy en día [20]. El problema de calcular soluciones de acuerdo con los conceptos de solución quizás más elementales de dominancia y dominancia iterada ha recibido mucha menos atención. (Después de un breve artículo temprano sobre un caso sencillo [11], el principal estudio computacional de estos conceptos ha tenido lugar en realidad en un artículo de la comunidad de teoría de juegos [7].) Una estrategia domina estrictamente a otra estrategia si tiene un rendimiento estrictamente mejor contra todos los vectores de estrategias del oponente, y la domina débilmente si tiene al menos el mismo rendimiento contra todos los vectores de estrategias del oponente, y estrictamente mejor contra al menos uno. La idea es que las estrategias dominadas pueden ser eliminadas de consideración. En la dominancia iterada, la eliminación avanza en rondas y se vuelve más fácil a medida que se eliminan más estrategias: en cualquier ronda dada, la estrategia dominante ya no necesita desempeñarse mejor que o igual que la estrategia dominada contra las estrategias oponentes que fueron eliminadas en rondas anteriores. Calcular soluciones según la dominancia (iterada) es importante por al menos las siguientes razones: 1) puede ser computacionalmente más fácil que calcular (por ejemplo) un <br>equilibrio de Nash</br> (y por lo tanto puede ser útil como paso de preprocesamiento en el cálculo de un <br>equilibrio de Nash</br>), y 2) la dominancia (iterada) requiere una suposición de racionalidad más débil en los jugadores que (por ejemplo) el equilibrio de Nash, y por lo tanto las soluciones derivadas según ella son más propensas a ocurrir. En este artículo, estudiamos algunas preguntas computacionales fundamentales relacionadas con la dominancia y la dominancia iterada, incluyendo qué tan difícil es verificar si una estrategia dada puede ser eliminada por cada una de las variantes de estos conceptos. El resto del documento está organizado de la siguiente manera. En la Sección 2, revisamos brevemente las definiciones y propiedades básicas de los juegos en forma normal, la dominancia estricta y débil, y la dominancia estricta y débil iterada. En las secciones restantes, estudiamos los aspectos computacionales de la dominancia y la dominancia iterada. En la Sección 3, estudiamos la dominancia de un solo disparo (no iterada). En la Sección 4, estudiamos la dominancia iterada. En la Sección 5, estudiamos la dominancia y la dominancia iterada cuando la estrategia dominante solo puede asignar probabilidad a unas pocas estrategias puras. Finalmente, en la Sección 6, estudiamos la dominancia y la dominancia iterada en juegos bayesianos. 2. DEFINICIONES Y PROPIEDADES BÁSICAS En esta sección, revisamos brevemente los juegos en forma normal, así como la dominancia y la dominancia iterada (tanto estricta como débil). Un juego de forma normal de n jugadores se define de la siguiente manera. Definición 1. Un juego en forma normal está dado por un conjunto de jugadores {1, 2, . . . , n}; y, para cada jugador i, un conjunto (finito) de estrategias puras Σi y una función de utilidad ui : Σ1 × Σ2 × . . . × Σn → R (donde ui(σ1, σ2, . . . , σn) denota la utilidad del jugador i cuando cada jugador j juega la acción σj). Las dos principales nociones de dominancia se definen de la siguiente manera. Definición 2. La estrategia σi del jugador se dice que está estrictamente dominada por la estrategia σi del jugador si, para cualquier vector de estrategias σ−i de los otros jugadores, ui(σi, σ−i) > ui(σi, σ−i). La estrategia σi del jugador se dice que está débilmente dominada por la estrategia σi del jugador si, para cualquier vector de estrategias σ−i para los otros jugadores, ui(σi, σ−i) ≥ ui(σi, σ−i), y para al menos un vector de estrategias σ−i para los otros jugadores, ui(σi, σ−i) > ui(σi, σ−i). En esta definición, a veces se permite que la estrategia dominante σi sea una estrategia mixta, es decir, una distribución de probabilidad sobre estrategias puras. En este caso, las utilidades están en dominancia en conjunto. Por ejemplo, a veces se utilizan comprobaciones de dominancia simple como una subrutina en la búsqueda de equilibrios de Nash [21]. Las definiciones son las utilidades esperadas. Hay otras nociones de dominancia, como la dominancia muy débil (en la que no se requiere ninguna desigualdad estricta, por lo que dos estrategias pueden dominarse mutuamente), pero no las estudiaremos aquí. Cuando estamos analizando las relaciones de dominancia para el jugador i, los otros jugadores (−i) pueden ser considerados como un solo jugador. Por lo tanto, en el resto del documento, cuando estudiamos la dominancia de un solo paso (no iterada), nos centraremos sin pérdida de generalidad en juegos de dos jugadores. En juegos de dos jugadores, generalmente nos referiremos a los jugadores como r (fila) y c (columna) en lugar de 1 y 2. En la dominancia iterada, las estrategias dominadas son eliminadas del juego y ya no tienen ningún efecto en las relaciones de dominancia futuras. La dominancia iterada puede eliminar más estrategias que la dominancia, de la siguiente manera. σr puede originalmente no dominar a σr porque este último tiene un mejor desempeño contra σc; pero luego, una vez que σc es eliminado porque es dominado por σc, σr domina a σr, y este último puede ser eliminado. Por ejemplo, en el siguiente juego, se puede eliminar primero a R, después de lo cual D queda dominado. Tanto la dominancia estricta como la dominancia débil pueden ser utilizadas en la definición de la dominancia iterada. Observamos que el proceso de dominancia iterada nunca se ve favorecido al eliminar una estrategia mixta dominada, por la siguiente razón. Si σi le da al jugador i una utilidad mayor que σi contra la estrategia mixta σj para el jugador j = i (y estrategias σ−{i,j} para los otros jugadores), entonces para al menos una estrategia pura σj en la que σj coloque probabilidad positiva, σi debe desempeñarse mejor que σi contra σj (y estrategias σ−{i,j} para los otros jugadores). Por lo tanto, eliminar la estrategia mixta σj no introduce nuevas dominancias. Discusiones más detalladas y ejemplos se pueden encontrar en textos estándar sobre microeconomía o teoría de juegos [17, 5]. Ahora estamos listos para pasar al núcleo de este documento. 3. En esta sección, estudiamos la noción de dominancia de un solo turno (no iterada). Como primera observación, verificar si una estrategia dada está estrictamente (débilmente) dominada por alguna estrategia pura es sencillo, al comprobar, para cada estrategia pura de ese jugador, si la última estrategia tiene un rendimiento estrictamente mejor contra todas las estrategias de los oponentes (al menos igual de bien contra todas las estrategias de los oponentes, y estrictamente 2 La estrategia dominada σi, por supuesto, también puede ser mixta, pero esto no tiene implicaciones técnicas para el documento: cuando estudiamos la dominancia de un solo disparo, preguntamos si una estrategia dada está dominada, y no importa si la estrategia dada es pura o mixta; cuando estudiamos la dominancia iterada, no tiene sentido eliminar las estrategias mixtas, como veremos en breve. 3 Este jugador puede tener un espacio de estrategias muy grande (una estrategia pura para cada vector de estrategias puras de los jugadores que están siendo reemplazados). Sin embargo, esto no resultará en un aumento en el tamaño de nuestra representación, ya que la representación original ya tenía que especificar las utilidades para cada uno de estos vectores. Observamos que una restricción a juegos de dos jugadores no sería sin pérdida de generalidad para la dominancia iterada. Esto se debe a que para la dominancia iterada, necesitamos analizar las estrategias dominadas de cada jugador individual, por lo que no podemos fusionar a ningún jugador. A continuación, mostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta se puede hacer en tiempo polinómico resolviendo un único programa lineal. (Programas lineales similares se han presentado anteriormente [18]; presentamos el resultado aquí por completitud, y porque construiremos sobre los programas lineales dados a continuación en el Teorema 6.) Proposición 1. Dadas las utilidades de los jugadores de fila, un subconjunto Dr de las estrategias puras de los jugadores de fila Σr, y una estrategia distinguida σ∗ r para el jugador de fila, podemos verificar en tiempo polinómico en el tamaño del juego (resolviendo un único programa lineal de tamaño polinómico) si existe alguna estrategia mixta σr, que coloque probabilidad positiva solo en estrategias en Dr y domine a σ∗ r, tanto en dominancia estricta como débil. Prueba. Sea pdr la probabilidad que σr asigna a dr ∈ Dr. Resolveremos un único programa lineal en cada uno de nuestros algoritmos; los programas lineales pueden resolverse en tiempo polinómico [10]. Para la dominancia estricta, la pregunta es si se puede establecer el pdr de manera que para cada estrategia pura del jugador de la columna σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc). Debido a que la desigualdad debe ser estricta, no podemos resolver esto directamente mediante programación lineal. Procedemos de la siguiente manera. Dado que el juego es finito, podemos asumir sin pérdida de generalidad que todas las utilidades son positivas (si no lo son, simplemente añade una constante a todas las utilidades). Resolver el siguiente programa lineal: minimizar dr∈Dr pdr tal que para cualquier σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc). Si σ∗ r es estrictamente dominada por alguna estrategia mixta, este programa lineal tiene una solución con un valor objetivo < 1. (La estrategia dominante es una solución factible con un valor objetivo exactamente igual a 1. Dado que ninguna restricción es vinculante para esta solución, podemos reducir ligeramente una de las probabilidades sin afectar la viabilidad, obteniendo así una solución con un valor objetivo < 1. Además, si este programa lineal tiene una solución con un valor objetivo < 1, existe una estrategia mixta que domina estrictamente a σ∗ r, la cual se puede obtener tomando la solución del PL y agregando la probabilidad restante a cualquier estrategia (debido a que todas las utilidades son positivas, esto sumará al lado izquierdo de cualquier desigualdad, por lo que todas las desigualdades se volverán estrictas). Para la dominancia débil, podemos resolver el siguiente programa lineal: maximizar σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) tal que para cualquier σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1. Si σ∗ r está débilmente dominado por alguna estrategia mixta, entonces esa estrategia mixta es una solución factible para este programa con un valor objetivo > 0, porque para al menos una estrategia σc ∈ Σc tenemos ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0. Por otro lado, si este programa tiene una solución con un valor objetivo > 0, entonces para al menos una estrategia σc ∈ Σc debemos tener ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, y por lo tanto la solución de los programas lineales es una estrategia mixta débilmente dominante. 4. DOMINANCIA ITERADA Ahora pasamos a la dominancia iterada. Es bien sabido que la dominancia estricta iterada es independiente del camino [6, 19], es decir, si eliminamos las estrategias dominadas hasta que ya no queden más estrategias dominadas, al final las estrategias restantes para cada jugador serán las mismas, independientemente del orden en que se eliminen las estrategias. Por lo tanto, para determinar si una estrategia dada puede ser eliminada por dominancia estricta iterada, todo lo que se necesita hacer es eliminar repetidamente las estrategias que son estrictamente dominadas, hasta que no queden más estrategias dominadas. Dado que podemos verificar en tiempo polinómico si alguna estrategia dada está dominada (ya sea que se permita o no la dominancia por estrategias mixtas, como se describe en la Sección 3), todo este procedimiento toma solo tiempo polinómico. En el caso de la dominancia iterada por estrategias puras con dos jugadores, Knuth et al. [11] mejoran ligeramente (aceleran) la implementación directa de este procedimiento al llevar un registro, para cada par ordenado de estrategias de un jugador, del número de estrategias del oponente que impiden que la primera estrategia domine a la segunda. Por lo tanto, el tiempo de ejecución para un juego m × n se reduce de O((m + n)4 ) a O((m + n)3 ). (En realidad, solo estudian dominancia muy débil (para la cual no se requieren desigualdades estrictas), pero el enfoque se puede extender fácilmente). Por el contrario, se sabe que la dominancia débil iterada es dependiente del camino. Por ejemplo, en el siguiente juego, utilizando la dominancia débil iterada podemos eliminar primero M y luego D, o primero R y luego U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Por lo tanto, si bien el procedimiento de eliminar estrategias débilmente dominadas hasta que no queden más estrategias débilmente dominadas puede ciertamente ejecutarse en tiempo polinómico, qué estrategias sobreviven al final depende del orden en el que eliminamos las estrategias dominadas. Investigaremos dos preguntas para la dominancia débil iterada: si una estrategia dada es eliminada en algún camino, y si hay un camino hacia una solución única (una única estrategia pura por jugador). Mostraremos que ambos de estos problemas son computacionalmente difíciles. Definición 3. Dada un juego en forma normal y una estrategia distinguida σ∗ , la ELIMINACIÓN DE ESTRATEGIAS POR DOMINANCIA DÉBIL (IWD-STRATEGY-ELIMINATION) pregunta si existe algún camino de dominancia débil iterada que elimine σ∗ . Dada un juego en forma normal, IWDUNIQUE-SOLUTION pregunta si existe algún camino de dominancia débil iterada que conduzca a una solución única (una estrategia restante por jugador). El siguiente lema muestra un caso especial de juegos en forma normal en el que permitir la dominancia débil a través de estrategias mixtas (además de la dominancia débil a través de estrategias puras) hace 6. Sin embargo, existe una restricción de dominancia débil llamada dominancia débil agradable que es independiente de la ruta [15, 16]. Para obtener una visión general de los resultados de independencia de la ruta, consulte Apt [1]. 90 no ayuda. Demostraremos los resultados de dificultad en este contexto, de modo que se mantengan independientemente de si se permite o no la dominancia por estrategias mixtas. Lema 1. Supongamos que todas las utilidades en un juego están en {0, 1}. Entonces, toda estrategia pura que es débilmente dominada por una estrategia mixta también es débilmente dominada por una estrategia pura. Prueba. Se supone que la estrategia pura σ es débilmente dominada por la estrategia mixta σ∗. Si σ obtiene una utilidad de 1 contra alguna estrategia o vector de estrategias del oponente (si hay más de 2 jugadores), entonces todas las estrategias puras en las que σ∗ asigna una probabilidad positiva también deben obtener una utilidad de 1 contra esa estrategia del oponente (de lo contrario, la utilidad esperada sería menor que 1). Además, al menos una de las estrategias puras en las que σ∗ coloca probabilidad positiva debe obtener una utilidad de 1 contra una estrategia del oponente que σ obtiene 0 (de lo contrario, la desigualdad nunca sería estricta). Se deduce que esta estrategia pura domina débilmente a σ. Ahora estamos listos para demostrar los resultados principales de esta sección. Teorema 1. IWD-STRATEGY-ELIMINATION es NPcompleto, incluso con 2 jugadores, y con 0 y 1 siendo las únicas utilidades que ocurren en la matriz, ya sea que se permita o no la dominancia por estrategias mixtas. Prueba. El problema está en NP porque, dado una secuencia de estrategias a ser eliminadas, podemos verificar fácilmente si esta es una secuencia válida de eliminaciones (incluso cuando se permite la dominancia por estrategias mixtas, utilizando la Proposición 1). Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto no vacío de cláusulas C sobre un conjunto no vacío de variables V, con literales correspondientes L = {+v : v ∈ V} ∪ {−v : v ∈ V}) a la siguiente instancia de ELIMINACIÓN DE ESTRATEGIA IWD. (En esta instancia, especificaremos que ciertas estrategias son ineliminables. Una estrategia σr puede hacerse ineliminable, incluso cuando 0 y 1 son las únicas utilidades permitidas, al agregar otra estrategia σr y otra estrategia del oponente σc, de modo que: 1. σr y σr son las únicas estrategias que le dan al jugador de la fila una utilidad de 1 contra σc. 2. σr y σr siempre le dan al jugador de la fila la misma utilidad. 3. σc es la única estrategia que le da al jugador de la columna una utilidad de 1 contra σr, pero de lo contrario σc siempre le da al jugador de la columna una utilidad de 0. Esto hace imposible eliminar cualquiera de estas tres estrategias. No especificaremos explícitamente las estrategias adicionales para hacer la prueba más legible. En esta demostración, designaremos las estrategias del jugador de fila como s, y las estrategias del jugador de columna como t, para mejorar la legibilidad. Que se dé el conjunto de estrategias puras de los jugadores de fila como sigue. Para cada variable v ∈ V, el jugador de la fila tiene estrategias correspondientes s1 +v, s2 +v, s1 −v, s2 −v. Además, el jugador de la fila tiene las siguientes 2 estrategias: s1 0 y s2 0, donde s2 0 = σ∗ r (es decir, es la estrategia que buscamos eliminar). Finalmente, para cada cláusula c ∈ C, el jugador de la fila tiene estrategias correspondientes s1 c (ineliminables) y s2 c. Dado el conjunto de estrategias puras de los jugadores de la columna de la siguiente manera. Para cada variable v ∈ V, el jugador de la columna tiene una estrategia correspondiente tv. Para cada cláusula c ∈ C, el jugador de la columna tiene una estrategia correspondiente tc, y además, para cada literal l ∈ L que ocurre en c, una estrategia tc,l. Para cada variable v ∈ V, el jugador de la columna tiene estrategias correspondientes t+v, t−v (ambas no eliminables). Finalmente, el jugador de la columna tiene tres estrategias adicionales: t1 0 (ineliminable), t2 0 y t1. La función de utilidad para el jugador de la fila se da de la siguiente manera: • ur(s1 +v, tv) = 0 para todo v ∈ V ; • ur(s2 +v, tv) = 1 para todo v ∈ V ; • ur(s1 −v, tv) = 1 para todo v ∈ V ; • ur(s2 −v, tv) = 0 para todo v ∈ V ; • ur(s1 +v, t1) = 1 para todo v ∈ V ; • ur(s2 +v, t1) = 0 para todo v ∈ V ; • ur(s1 −v, t1) = 0 para todo v ∈ V ; • ur(s2 −v, t1) = 1 para todo v ∈ V ; • ur(sb +v, t+v) = 1 para todo v ∈ V y b ∈ {1, 2}; • ur(sb −v, t−v) = 1 para todo v ∈ V y b ∈ {1, 2}; • ur(sl, t) = 0 de lo contrario para todo l ∈ L y t ∈ S2; • ur(s1 0, tc) = 0 para todo c ∈ C; • ur(s2 0, tc) = 1 para todo c ∈ C; • ur(sb 0, t1 0) = 1 para todo b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 de lo contrario para todo b ∈ {1, 2} y t ∈ S2; • ur(sb c, t) = 0 de lo contrario para todo c ∈ C y b ∈ {1, 2}; y la utilidad del jugador de la fila es 0 en todos los demás casos. La función de utilidad para el jugador de la columna se da de la siguiente manera: • uc(s, tv) = 0 para todo v ∈ V y s ∈ S1; • uc(s, t1) = 0 para todo s ∈ S1; • uc(s2 l , tc) = 1 para todo c ∈ C y l ∈ L donde l ∈ c (literal l ocurre en la cláusula c); • uc(s2 l2 , tc,l1 ) = 1 para todo c ∈ C y l1, l2 ∈ L, l1 = l2 donde l2 ∈ c; • uc(s1 c, tc) = 1 para todo c ∈ C; • uc(s2 c, tc) = 0 para todo c ∈ C; • uc(sb c, tc,l) = 1 para todo c ∈ C, l ∈ L, y b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 en otro caso para todo c ∈ C y l ∈ L; y la utilidad del jugador de la columna es 0 en todos los demás casos. Ahora demostramos que las dos instancias son equivalentes. Primero, supongamos que hay una solución para la instancia de satisfactibilidad: es decir, una asignación de valores de verdad a las variables en V tal que todas las cláusulas se satisfacen. Entonces, considera la siguiente secuencia de eliminaciones en nuestro juego: 1. Para cada variable v que se establezca como verdadera en la asignación, elimine tv (lo que da como resultado una utilidad de 0 para el jugador de la columna en todas partes). 2. Entonces, para cada variable v que se establezca como verdadera en la asignación, elimine s2 +v usando s1 +v (lo cual es posible porque tv ha sido eliminado, y porque t1 no ha sido eliminado (aún)). 3. Ahora elimina t1 (lo cual da como resultado una utilidad de 0 para el jugador de la columna). 4. A continuación, para cada variable v que se establezca como falso en la asignación, elimine s2 −v usando s1 −v (lo cual es posible porque t1 ha sido eliminado, y porque tv no ha sido eliminado (aún)). 5. Para cada cláusula c que tenga la variable correspondiente a uno de sus literales positivos l = +v establecido como verdadero en la asignación, elimine tc utilizando tc,l (lo cual es posible porque s2 l ha sido eliminado, y s2 c no ha sido eliminado (aún)). 6. Para cada cláusula c en la que la variable correspondiente a uno de sus literales negativos l = −v se establece en falso en la asignación, elimine tc utilizando tc,l 91 (lo cual es posible porque s2 l ha sido eliminado, y s2 c no ha sido eliminado (aún)). 7. Debido a que la tarea cumplió con la fórmula, todos los tc han sido eliminados ahora. Por lo tanto, podemos eliminar s2 0 = σ∗ r usando s1 0. Se deduce que hay una solución para la instancia IWD-STRATEGY-ELIMINATION. Ahora supongamos que hay una solución para la instancia IWD-STRATEGYELIMINATION. Por el Lema 1, podemos asumir que todas las dominancias son por estrategias puras. Primero observamos que solo s1 0 puede eliminar s2 0 = σ∗ r, porque es la única otra estrategia que le da al jugador de la fila una utilidad de 1 contra t1 0, y t1 0 es ineliminable. Sin embargo, dado que s2 0 tiene un mejor rendimiento que s1 0 contra las estrategias de tc, se deduce que todas las estrategias de tc deben ser eliminadas. Para cada c ∈ C, la estrategia tc solo puede ser eliminada por una de las estrategias tc,l (con el mismo c), ya que estas son las únicas otras estrategias que le dan al jugador de la columna una utilidad de 1 contra s1 c, y s1 c es ineliminable. Pero, para que algún tc,l elimine tc, primero se debe eliminar s2 l. Solo s1 l puede eliminar s2 l, porque es la única otra estrategia que le otorga al jugador de la fila una utilidad de 1 contra tl, y tl es ineliminable. A continuación mostramos que para cada v ∈ V solo se puede eliminar uno de s2 +v, s2 −v. Esto se debe a que para que s1 +v elimine s2 +v, tv debe haber sido eliminado y t1, no (por lo tanto, tv debe ser eliminado antes que t1); pero para que s1 -v elimine s2 -v, t1 debe haber sido eliminado y tv, no (por lo tanto, t1 debe ser eliminado antes que tv). Por lo tanto, establezca v en verdadero si s2 + v es eliminado, y en falso de lo contrario. Debido a lo anterior, para cada cláusula c, uno de los s2 con l ∈ c debe ser eliminado, por lo que se deduce que esta es una asignación satisfactoria para la instancia de satisfactibilidad. Usando el Teorema 1, ahora es (relativamente) fácil demostrar que IWD-UNIQUE-SOLUTION también es NP-completo bajo las mismas restricciones. Teorema 2. IWD-UNIQUE-SOLUTION es NP-completo, incluso con 2 jugadores, y con 0 y 1 siendo las únicas utilidades que ocurren en la matriz, ya sea que se permita o no la dominancia por estrategias mixtas. Prueba. Nuevamente, el problema está en NP porque podemos elegir de manera no determinista la secuencia de eliminaciones y verificar si es correcta. Para demostrar la NP-dificultad, reducimos una instancia arbitraria de IWD-STRATEGY-ELIMINATION a la siguiente instancia de IWD-UNIQUE-SOLUTION. Que todas las estrategias de cada jugador de la instancia original formen parte de la nueva instancia, y que las utilidades resultantes de los jugadores al jugar un par de estas estrategias sean las mismas. Añadimos tres estrategias adicionales σ1 r , σ2 r , σ3 r para el jugador de fila, y tres estrategias adicionales σ1 c , σ2 c , σ3 c para el jugador de columna. Que las utilidades adicionales sean las siguientes: • ur(σr, σj c) = 1 para todo σr /∈ {σ1 r , σ2 r , σ3 r } y j ∈ {2, 3}; • ur(σi r, σc) = 1 para todo i ∈ {1, 2, 3} y σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 para todo i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • y la utilidad de los jugadores de fila es 0 en todos los demás casos que involucren una nueva estrategia. • uc(σ3 r , σc) = 1 para todo σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 para todo j ∈ {2, 3} (σ∗ r es la estrategia a ser eliminada en la instancia original); • uc(σi r, σ1 c ) = 1 para todo i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • y la utilidad de los jugadores de columna es 0 en todos los demás casos que involucren una nueva estrategia. Procedemos a demostrar que las dos instancias son equivalentes. Primero supongamos que existe una solución para la instancia original de IWDSTRATEGY-ELIMINATION. Luego, realiza la misma secuencia de eliminaciones para eliminar σ∗ r en la nueva instancia IWD-UNIQUE-SOLUTION. (Esto es posible porque en cualquier etapa, cualquier dominancia débil para el jugador de fila en la instancia original sigue siendo una dominancia débil en la nueva instancia, ya que las utilidades de las dos estrategias para el jugador de fila son las mismas cuando el jugador de columna juega una de las nuevas estrategias; y lo mismo ocurre para el jugador de columna). Una vez que σ∗ r sea eliminado, permita que σ1 c elimine a σ2 c. (Se desempeña mejor contra σ2 r.) Entonces, dejemos que σ1 r elimine todas las demás estrategias restantes para el jugador de la fila. (Siempre tiene un mejor desempeño contra σ1 c o σ3 c.) Finalmente, σ1 c es la mejor respuesta única contra σ1 r entre las estrategias restantes de los jugadores de columna, así que permitamos que elimine todas las demás estrategias restantes para el jugador de columna. Por lo tanto, existe una solución para la instancia IWD-UNIQUE-SOLUTION. Ahora supongamos que existe una solución para la instancia IWD-UNIQUESOLUTION. Por el Lema 1, podemos asumir que todas las dominancias son por estrategias puras. Mostraremos que ninguna de las nuevas estrategias (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) puede eliminar a otra estrategia, ni ser eliminada antes de que σ∗ r sea eliminada. Por lo tanto, debe haber una secuencia de eliminaciones que termine con la eliminación de σ∗ r, la cual no involucre ninguna de las nuevas estrategias y, por lo tanto, sea una secuencia válida de eliminaciones en el juego original (porque todas las estrategias originales tienen el mismo rendimiento contra cada nueva estrategia). Ahora demostramos que esto es cierto agotando todas las posibilidades para la primera eliminación antes de que se elimine σ∗ r que implica una nueva estrategia. Ninguno de los σi r puede ser eliminado por un σr /∈ {σ1 r , σ2 r , σ3 r}, porque los σi r tienen un mejor desempeño contra σ1 c. σ1 r no puede eliminar ninguna otra estrategia, porque siempre tiene un desempeño inferior contra σ2 c. σ2 r y σ3 r son equivalentes desde la perspectiva de los jugadores de fila (y por lo tanto no pueden eliminarse entre sí), y no pueden eliminar ninguna otra estrategia porque siempre tienen un desempeño inferior contra σ3 c. Ninguno de los σj c puede ser eliminado por un σc /∈ {σ1 c , σ2 c , σ3 c}, porque los σj c siempre tienen un mejor desempeño contra σ1 r o σ2 r. σ1 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ∗ r o σ3 r. σ2 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ2 r o σ3 r. σ3 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ1 r o σ3 r. Por lo tanto, existe una solución para la instancia IWDSTRATEGY-ELIMINATION. Una versión ligeramente más débil de la parte del Teorema 2 que concierne la dominancia solo por estrategias puras es el resultado principal de Gilboa et al. [7]. (Además de no demostrar el resultado para la dominancia por estrategias mixtas, el resultado original era más débil porque requería utilidades {0, 1, 2, 3, 4, 5, 6, 7, 8} en lugar de solo {0, 1} (y debido a esto, nuestro Lema 1 no se puede aplicar para obtener el resultado para estrategias mixtas).) 5. DOMINANCIA (ITERADA) USANDO ESTRATEGIAS MIXTAS CON SOPORTES PEQUEÑOS Al demostrar que una estrategia es dominada por una estrategia mixta, hay varias razones para preferir exhibir una estrategia dominante que coloque probabilidad positiva en la menor cantidad posible de estrategias puras. Primero, esto reducirá el número de bits necesarios para especificar la estrategia dominante (y así la prueba de dominancia se puede comunicar más rápido): si la estrategia mixta dominante coloca probabilidad positiva en solo k estrategias, entonces se puede especificar usando k números reales para las probabilidades, más k log m (donde m es el número de estrategias para el jugador en consideración) bits para indicar qué estrategias se utilizan. Segundo, la prueba de dominancia será más clara: para una estrategia mixta dominante, es típicamente (siempre en el caso de dominancia estricta) posible distribuir parte de la probabilidad en cualquier estrategia pura no utilizada y aún así tener una estrategia dominante, pero esto oscurece cuáles estrategias puras son las clave para hacer que la estrategia mixta sea dominante. Tercero, debido a que el argumento para eliminar la estrategia dominada es más simple y fácil de entender, es más probable que sea aceptado. En cuarto lugar, el nivel de neutralidad al riesgo requerido para que el argumento funcione se reduce, al menos en el caso extremo donde se puede exhibir la dominancia de una única estrategia pura (no se requiere neutralidad al riesgo aquí). Esto motiva el siguiente problema. Definición 4 (CONJUNTO DOMINANTE MÍNIMO). Se nos dan las utilidades de los jugadores de fila de un juego en forma normal, una estrategia distinguida σ∗ para el jugador de fila, una especificación de si la dominancia debe ser estricta o débil, y un número k. Se nos pregunta si existe una estrategia mixta σ para el jugador de fila que coloque probabilidad positiva en como máximo k estrategias puras, y domine a σ∗ en el sentido requerido. Lamentablemente, este problema es NP-completo. Teorema 3. El problema del CONJUNTO DOMINANTE MÍNIMO es NP-completo, tanto para dominancia estricta como para dominancia débil. Prueba. El problema está en NP porque podemos elegir de manera no determinista un conjunto de a lo sumo k estrategias para dar probabilidad positiva, y decidir si podemos dominar a σ∗ con estas k estrategias como se describe en la Proposición 1. Para demostrar la NP-dificultad, reducimos una instancia arbitraria de COBERTURA-DE-CONJUNTOS (dado un conjunto S, subconjuntos S1, S2, . . . , Sr, y un número t, ¿puede S ser cubierto por a lo sumo t de los subconjuntos?) a la siguiente instancia de CONJUNTO-DOMINANTE-MÍNIMO. Para cada elemento s ∈ S, hay una estrategia pura σs para el jugador de la columna. Para cada subconjunto Si, hay una estrategia pura σSi para el jugador de la fila. Finalmente, está la distinguida estrategia pura σ∗ para el jugador de la fila. Las utilidades de los jugadores de la fila son las siguientes: ur(σSi , σs) = t + 1 si s ∈ Si; ur(σSi , σs) = 0 si s /∈ Si; ur(σ∗ , σs) = 1 para todo s ∈ S. Finalmente, dejamos que k = t. Ahora procedemos a demostrar que las dos instancias son equivalentes. Primero supongamos que existe una solución para la instancia de COBERTURA-CONJUNTO. Sin pérdida de generalidad, podemos asumir que hay exactamente k subconjuntos en la cobertura. Entonces, para cada Si que esté en la cobertura, dejemos que la estrategia dominante σ coloque exactamente 1 k de probabilidad en la estrategia pura correspondiente σSi. Ahora, si dejamos que n(s) sea el número de subconjuntos en la cobertura que contienen a s (observamos que n(s) ≥ 1), entonces para cada estrategia σs del jugador de la columna, la utilidad esperada de los jugadores de la fila al jugar σ cuando el jugador de la columna está jugando σs es u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs). Entonces, σ domina estrictamente (y por lo tanto también débilmente) a σ∗, y existe una solución para la instancia del conjunto de dominación mínimo. Ahora supongamos que existe una solución para la instancia de CONJUNTO-DOMINANTE-MÍNIMO. Considera las estrategias puras (a lo sumo k) de la forma σSi en las que la estrategia mixta dominante σ asigna probabilidad positiva, y deja que T sea la colección de los subconjuntos correspondientes Si. Sostenemos que T es una cubierta. Supongamos que hay algún s ∈ S que no está en ninguno de los subconjuntos en T. Entonces, si el jugador de la columna juega σs, el jugador de la fila (cuando juega σ) siempre recibirá una utilidad de 0, en contraposición a la utilidad de 1 que el jugador de la fila recibiría al jugar σ∗, contradiciendo el hecho de que σ domina a σ∗ (ya sea esta dominancia débil o estricta). Se deduce que existe una solución para la instancia de COBERTURA-DE-CONJUNTOS. Por otro lado, si requerimos que la estrategia dominante solo coloque probabilidad positiva en un número muy pequeño de estrategias puras, entonces una vez más resulta fácil verificar si una estrategia está dominada. Específicamente, para determinar si la estrategia σ∗ del jugador está dominada por una estrategia que coloca probabilidad positiva solo en k estrategias puras, simplemente podemos verificar, para cada subconjunto de k de las estrategias puras del jugador, si hay una estrategia que coloca probabilidad positiva solo en esas k estrategias y domina a σ∗, utilizando la Proposición 1. Esto solo requiere O(|Σi|k) comprobaciones. Por lo tanto, si k es una constante, esto constituye un algoritmo de tiempo polinómico. Una pregunta natural que surge a continuación es si la dominancia estricta iterada sigue siendo computacionalmente fácil cuando se requiere que las estrategias dominantes coloquen una probabilidad positiva en como máximo k estrategias puras, donde k es una constante pequeña. (Ya hemos demostrado en la Sección 4 que la dominancia débil iterada es difícil incluso cuando k = 1, es decir, solo se permite la dominancia por estrategias puras). Por supuesto, si la dominancia estricta iterada fuera independiente del camino bajo esta restricción, la facilidad computacional seguiría como lo hizo en la Sección 4. Sin embargo, resulta que esto no es así. Observación 1. Si restringimos las estrategias dominantes para asignar probabilidad positiva a lo sumo a dos estrategias puras, la dominancia estricta iterada se vuelve dependiente del camino. Prueba. Considera el siguiente juego: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Sea (i, j) el resultado en el que el jugador de la fila juega en la fila i y el jugador de la columna juega en la columna j. Dado que (1, 1), (2, 2) y (4, 3) son todos equilibrios de Nash, ninguna de las estrategias puras de los jugadores de columna será eliminada, al igual que las filas 1, 2 y 4. Ahora observamos que la aleatorización uniforme entre las filas 1 y 2 domina a la fila 3, y la aleatorización uniforme entre las filas 3 y 4 domina a la fila 5. Sin embargo, si eliminamos la fila 3 primero, se vuelve imposible dominar la fila 5 sin aleatorizar al menos 3 estrategias puras. De hecho, la dominancia estricta iterada resulta ser difícil incluso cuando k = 3. Teorema 4. Si restringimos las estrategias dominantes para colocar una probabilidad positiva en como máximo tres estrategias puras, se vuelve NP-completo decidir si una estrategia dada puede ser eliminada usando dominancia estricta iterada. 93 Prueba. El problema está en NP porque, dado una secuencia de estrategias a ser eliminadas, podemos verificar en tiempo polinómico si esta es una secuencia válida de eliminaciones (para cualquier estrategia a ser eliminada, podemos verificar, para cada subconjunto de tres otras estrategias, si hay una estrategia que coloca probabilidad positiva solo en estas tres estrategias que domina a la estrategia a ser eliminada, utilizando la Proposición 1). Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto no vacío de cláusulas C sobre un conjunto no vacío de variables V, con literales correspondientes L = {+v : v ∈ V} ∪ {−v : v ∈ V}) al siguiente juego de dos jugadores. Para cada variable v ∈ V, el jugador de la fila tiene estrategias s+v, s−v, s1 v, s2 v, s3 v, s4 v, y el jugador de la columna tiene estrategias t1 v, t2 v, t3 v, t4 v. Para cada cláusula c ∈ C, el jugador de la fila tiene una estrategia sc, y el jugador de la columna tiene una estrategia tc, así como, para cada literal l que ocurre en c, una estrategia adicional tl c. El jugador de la fila tiene dos estrategias adicionales s1 y s2. (s2 es la estrategia que estamos buscando eliminar). Finalmente, el jugador de la columna tiene una estrategia adicional t1. La función de utilidad para el jugador de la fila se da de la siguiente manera (donde ε es algún número suficientemente pequeño): • ur(s+v, tj v) = 4 si j ∈ {1, 2}, para todo v ∈ V; • ur(s+v, tj v) = 1 si j ∈ {3, 4}, para todo v ∈ V; • ur(s−v, tj v) = 1 si j ∈ {1, 2}, para todo v ∈ V; • ur(s−v, tj v) = 4 si j ∈ {3, 4}, para todo v ∈ V; • ur(s+v, t) = ur(s−v, t) = 0 para todo v ∈ V y t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 para todo v ∈ V e i ∈ {1, 2, 3, 4}; • ur(si v, t) = para todo v ∈ V, i ∈ {1, 2, 3, 4}, y t = ti v; • ur(sc, tc) = 2 para todo c ∈ C; • ur(sc, t) = 0 para todo c ∈ C y t = tc; • ur(s1, t1) = 1 + ε; • ur(s1, t) = para todo t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 para todo c ∈ C; • ur(s2, t) = 0 para todo t /∈ {t1} ∪ {tc : c ∈ C}. La función de utilidad para el jugador de la columna se da de la siguiente manera: • uc(si v, ti v) = 1 para todo v ∈ V e i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 para todo v ∈ V, i ∈ {1, 2, 3, 4}, y s = si v; • uc(sc, tc) = 1 para todo c ∈ C; • uc(sl, tc) = 1 para todo c ∈ C y l ∈ L que ocurre en c; • uc(s, tc) = 0 para todo c ∈ C y s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + para todo c ∈ C; • uc(sl, tl c) = 1 + para todo c ∈ C y l = l que ocurre en c; • uc(s, tl c) = para todo c ∈ C y s /∈ {sc} ∪ {sl : l ∈ c, l = l}; • uc(s2, t1) = 1; • uc(s, t1) = 0 para todo s = s2. Ahora demostramos que las dos instancias son equivalentes. Primero, supongamos que hay una solución para la instancia de satisfactibilidad. Entonces, considera la siguiente secuencia de eliminaciones en nuestro juego: 1. Para cada variable v que se establezca como verdadera en la asignación satisfactoria, elimine s+v con la estrategia mixta σr que coloca probabilidad 1/3 en s−v, probabilidad 1/3 en s1 v y probabilidad 1/3 en s2 v. (La utilidad esperada de jugar σr contra t1 v o t2 v es 14/3 > 4; contra t3 v o t4 v, es 4/3 > 1; y contra cualquier otra cosa es 2/3 > 0. Por lo tanto, la dominancia es válida. De manera similar, para cada variable v que se establezca como falso en la asignación satisfactoria, elimine s−v con la estrategia mixta σr que coloca probabilidad 1/3 en s+v, probabilidad 1/3 en s3 v, y probabilidad 1/3 en s4 v. (La utilidad esperada de jugar σr contra t1 v o t2 v es 4/3 > 1; contra t3 v o t4 v, es 14/3 > 4; y contra cualquier otra cosa es 2/3 > 0. Por lo tanto, la dominancia es válida. Para cada c ∈ C, elimine tc con cualquier tl c para el cual l se haya establecido como verdadero en la asignación satisfactoria. (Esta es una dominancia válida porque tl c funciona mejor que tc contra cualquier estrategia que no sea sl, y eliminamos sl en el paso 1 o en el paso 2.) 4. Finalmente, elimina s2 con s1. (Esta es una dominancia válida porque s1 tiene un mejor rendimiento que s2 contra cualquier estrategia que no esté en {tc : c ∈ C}, la cual eliminamos en el paso 3.) Por lo tanto, hay un camino de eliminación que elimina s2. Ahora, supongamos que hay un camino de eliminación que elimina s2. La estrategia que eventualmente domina a s2 debe colocar la mayor parte de su probabilidad en s1, ya que s1 es la única otra estrategia que se desempeña bien contra t1, la cual no puede ser eliminada antes que s2. Sin embargo, s1 tiene un rendimiento significativamente peor que s2 contra cualquier estrategia tc con c ∈ C, por lo que se deduce que todas estas estrategias deben ser eliminadas primero. Cada estrategia tc solo puede ser eliminada por una estrategia que coloque la mayor parte de su peso en las estrategias correspondientes tl c con l ∈ c, ya que son las únicas otras estrategias que funcionan bien contra sc, las cuales no pueden ser eliminadas antes de tc. Sin embargo, cada estrategia tl c funciona significativamente peor que tc contra sl, por lo que se deduce que para cada cláusula c, para uno de los literales l que aparecen en ella, sl debe ser eliminado primero. Ahora, las estrategias de la forma tj v nunca serán eliminadas porque son las únicas mejores respuestas a las estrategias correspondientes sj v (que, a su vez, son las mejores respuestas a las tj v correspondientes). Como resultado, si la estrategia s+v (respectivamente, s−v) es eliminada, entonces su estrategia opuesta s−v (respectivamente, s+v) ya no puede ser eliminada, por la siguiente razón. No hay otra estrategia pura restante que obtenga una utilidad significativa contra más de una de las estrategias t1 v, t2 v, t3 v, t4 v, pero s−v (respectivamente, s+v) obtiene una utilidad significativa contra las 4, y por lo tanto no puede ser dominada por una estrategia mixta que coloque una probabilidad positiva en como máximo 3 estrategias. Se deduce que para cada v ∈ V, a lo sumo una de las estrategias s+v, s−v es eliminada, de tal manera que para cada cláusula c, para uno de los literales l que aparece en ella, sl debe ser eliminada. Pero luego, establecer todas las literales l de manera que sl sea eliminado a verdadero constituye una solución a la instancia de satisfactibilidad. En la siguiente sección, regresamos al escenario donde no hay restricción en el número de estrategias puras en las que una estrategia mixta dominante puede colocar probabilidad positiva. 6. DOMINANCIA (ITERADA) EN JUEGOS BAYESIANOS Hasta ahora, nos hemos enfocado en juegos de forma normal que están representados de manera plana (es decir, cada entrada de la matriz se da explícitamente). Sin embargo, para muchos juegos, la representación plana es demasiado grande para escribirse explícitamente, y en su lugar, se necesita utilizar alguna representación que aproveche la estructura del juego. Los juegos bayesianos, además de ser de interés por sí mismos, pueden considerarse como una representación estructurada útil de los juegos en forma normal, y los estudiaremos en esta sección. En un juego bayesiano, cada jugador recibe primero información de preferencia de manera privada (el tipo de jugador) de una distribución, la cual determina la utilidad que ese jugador recibe por cada resultado del juego (es decir, el vector de acciones jugadas en el juego). Después de recibir este tipo, el jugador realiza una acción basada en él. Definición 7. Un juego bayesiano está dado por un conjunto de jugadores {1, 2, . . . , n}; y, para cada jugador i, un conjunto (finito) de acciones Ai, un espacio de tipos (finito) Θi con una distribución de probabilidad πi sobre él, y una función de utilidad ui : Θi × A1 × A2 × . . . × An → R (donde ui(θi, a1, a2, . . . , an) denota la utilidad del jugador i cuando su tipo es θi y cada jugador j juega la acción aj). Una estrategia pura en un juego bayesiano es una asignación de tipos a acciones, σi: Θi → Ai, donde σi(θi) denota la acción que el jugador i elige para el tipo θi. Cualquier vector de estrategias puras en un juego bayesiano define una utilidad (esperada) para cada jugador, y por lo tanto podemos traducir un juego bayesiano en un juego en forma normal. En este juego en forma normal, las nociones de dominancia y dominancia iterada se definen como antes. Sin embargo, la representación en forma normal del juego es exponencialmente más grande que la representación bayesiana, ya que cada jugador i tiene |Ai||Θi| estrategias puras distintas. Por lo tanto, cualquier algoritmo para juegos bayesianos que dependa de expandir el juego a su forma normal requerirá tiempo exponencial. Específicamente, nuestros resultados de facilidad para juegos en forma normal no se transfieren directamente a esta configuración. De hecho, resulta que verificar si una estrategia está dominada por una estrategia pura es difícil en juegos bayesianos. Teorema 5. En un juego bayesiano, es NP-completo decidir si una estrategia pura dada σr : Θr → Ar está dominada por alguna otra estrategia pura (tanto para la dominancia estricta como débil), incluso cuando la distribución de los jugadores de fila sobre los tipos es uniforme. Prueba. El problema está en NP porque es fácil verificar si una estrategia dominante candidata es realmente una estrategia dominante. Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto de cláusulas C utilizando variables de V) al siguiente juego bayesiano. Que el conjunto de acciones de los jugadores de la fila sea Ar = {t, f, 0} y que el conjunto de acciones de los jugadores de la columna sea Ac = {ac : c ∈ C}. Que el conjunto de tipos de jugadores de fila sea Θr = {θv : v ∈ V}, con una distribución πr que es uniforme. Que la función de utilidad de los jugadores de la fila sea la siguiente: • ur(θv, 0, ac) = 0 para todo v ∈ V y c ∈ C; • ur(θv, b, ac) = |V | para todo v ∈ V, c ∈ C y b ∈ {t, f} tal que establecer v como b satisface c; • ur(θv, b, ac) = −1 para todo v ∈ V, c ∈ C y b ∈ {t, f} tal que establecer v como b no satisface c. En general, un jugador también puede recibir una señal sobre las preferencias de los otros jugadores, pero aquí no nos ocuparemos de eso. Que la estrategia pura que se va a dominar sea aquella que juega 0 para cada tipo. Mostramos que la estrategia está dominada por una estrategia pura si y solo si hay una solución a la instancia de satisfactibilidad. Primero, supongamos que hay una solución para la instancia de satisfactibilidad. Entonces, sea σd r dado por: σd r (θv) = t si v se establece como verdadero en la solución de la instancia de satisfactibilidad, y σd r (θv) = f en caso contrario. Entonces, en contra de cualquier acción ac realizada por el jugador de la columna, existe al menos un tipo θv tal que o bien +v ∈ c y σd r (θv) = t, o bien −v ∈ c y σd r (θv) = f. Por lo tanto, la utilidad esperada de los jugadores de la fila contra la acción ac es al menos |V| |V| − |V|−1 |V| = 1 |V| > 0. Entonces, σd r es una estrategia dominante. Ahora, supongamos que existe una estrategia pura dominante σd r. Esta estrategia dominante debe jugar t o f al menos para un tipo. Por lo tanto, en contra de cualquier ac por el jugador de la columna, debe haber al menos algún tipo θv para el cual ur(θv, σd r (θv), ac) > 0. Es decir, debe haber al menos una variable v tal que al establecer v en σd r (θv) satisfaga c. Pero entonces, al establecer cada v en σd r (θv) deben satisfacerse todas las cláusulas. Entonces, existe una asignación satisfactoria. Sin embargo, resulta que podemos modificar los programas lineales de la Proposición 1 para obtener un algoritmo de tiempo polinómico para verificar si una estrategia está dominada por una estrategia mixta en juegos bayesianos. Teorema 6. En un juego bayesiano, se puede decidir en tiempo polinómico si una estrategia dada (posiblemente mixta) σr está dominada por alguna otra estrategia mixta, utilizando programación lineal (tanto para dominancia estricta como débil). Prueba. Podemos modificar los programas lineales presentados en la Proposición 1 de la siguiente manera. Para la dominancia estricta, asumiendo nuevamente sin pérdida de generalidad que todas las utilidades en el juego son positivas, utilice el siguiente programa lineal (en el cual pσr r (θr, ar) es la probabilidad de que σr, la estrategia a ser dominada, coloque en ar para el tipo θr): minimizar θr∈Θr ar∈Ar pr(ar) tal que para cualquier ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); para cualquier θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1. Suponiendo que π(θr) > 0 para todo θr ∈ Θr, este programa devolverá un valor objetivo menor que |Θr| si y solo si σr está estrictamente dominado, mediante un razonamiento similar al realizado en la Proposición 1. Para la dominancia débil, utiliza el siguiente programa lineal: maximizar ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) tal que para cualquier ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); para cualquier θr ∈ Θr, ar∈Ar pr(θr, ar) = 1. Este programa devolverá un valor objetivo mayor que 0 si y solo si σr está débilmente dominado, mediante un razonamiento similar al realizado en la Proposición 1. Ahora pasamos al dominio iterado en juegos bayesianos. Ingenuamente, uno podría argumentar que la dominancia iterada en juegos bayesianos de 95 siempre requiere un número exponencial de pasos cuando se puede eliminar una fracción significativa de las estrategias puras de los juegos, ya que hay un número exponencial de estrategias puras. Sin embargo, este no es un argumento muy sólido porque muchas veces podemos eliminar exponencialmente muchas estrategias puras en un solo paso. Por ejemplo, si para algún tipo θr ∈ Θr tenemos, para todo ac ∈ Ac, que u(θr, a1 r, ac) > u(θr, a2 r, ac), entonces cualquier estrategia pura para el jugador de la fila que juega la acción a2 r para el tipo θr está dominada (por la estrategia que juega la acción a1 r para el tipo θr en su lugar) - y hay exponencialmente muchas (|Ar||Θr|−1) tales estrategias. Por lo tanto, es concebible que solo necesitemos un número polinomial de eliminaciones de colecciones de estrategias de un jugador. Sin embargo, el siguiente teorema muestra que este no es el caso, al dar un ejemplo donde se requiere un número exponencial de iteraciones (es decir, alternancias entre los jugadores en la eliminación de estrategias). (Enfatizamos que este no es un resultado sobre complejidad computacional). Teorema 7. Incluso en juegos bayesianos simétricos de 3 jugadores, la dominancia iterada por estrategias puras puede requerir un número exponencial de iteraciones (tanto para la dominancia estricta como débil), incluso con solo tres acciones por jugador. Prueba. Que cada jugador i ∈ {1, 2, 3} tenga n + 1 tipos θ1 i , θ2 i , . . . , θn+1 i. Que cada jugador i tenga 3 acciones ai, bi, ci, y que la función de utilidad de cada jugador esté definida de la siguiente manera. (En lo siguiente, i + 1 e i + 2 son abreviaturas de i + 1 (mod 3) e i + 2 (mod 3) cuando se utilizan como índices de jugador. Además, −∞ puede ser reemplazado por un número suficientemente negativo. Finalmente, δ y deberían elegirse muy pequeños (incluso en comparación con 2−(n+1)), y deberían ser más del doble de grandes que δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 para si+1 = ci+1 o si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − para si+1 = ai+1 y si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ para si+1 = ai+1 o si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ para todos los si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ para todos los si+1, si+2 cuando j > 1; • ui(θj i ; bi, si+1, si+2) = − para todos los si+1, si+2 cuando j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 para todos los si+1 cuando j > 1; • ui(θj i ; ci, si+1, si+2) = δ− para todos los si+1 y si+2 = ci+2 cuando j > 1. Que la distribución sobre los tipos de cada jugador esté dada por p(θj i ) = 2−j (con la excepción de que p(θ2 i ) = 2−2 +2−(n+1) ). Estaremos interesados en eliminar estrategias de la siguiente forma: jugar bi para el tipo θ1 i, y jugar bi o ci de lo contrario. Dado que la función de utilidad es la misma para cualquier tipo θj i con j > 1, estas estrategias están efectivamente definidas por la probabilidad total que asignan a ci,8, que es t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j donde tj i = 1 si el jugador i 8. Observa que las estrategias siguen siendo estrategias puras; la probabilidad asignada a una acción por una estrategia aquí es simplemente la suma de las probabilidades de los tipos para los cuales la estrategia elige esa acción. juega ci para el tipo θj i, y 0 en caso contrario. Esta probabilidad es diferente para cualquier par de estrategias diferentes de la forma dada, y tenemos exponencialmente muchas estrategias diferentes de la forma dada. Para cualquier probabilidad q que pueda expresarse como t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (con todos los tj ∈ {0, 1}), dejemos que σi(q) denote la estrategia (única) de la forma dada para el jugador i que coloca una probabilidad total de q en ci. Cualquier estrategia que juegue ci para el tipo θ1 i o ai para algún tipo θj i con j > 1 puede ser eliminada inmediatamente. Mostraremos que, después de eso, debemos eliminar primero las estrategias σi(q) con q alto, trabajando lentamente hacia abajo hasta aquellas con q más bajo. Reclamo 1: Si σi+1(q) y σi+2(q) aún no han sido eliminados, y q < q, entonces σi(q) aún no puede ser eliminado. Prueba: Primero, demostramos que ninguna estrategia σi(q) puede eliminar a σi(q). Contra σi+1(q), σi+2(q), la utilidad de jugar σi(p) es − + p · δ − p · q /2. Por lo tanto, cuando q = 0, es mejor establecer p lo más alto posible (y observamos que σi+1(0) y σi+2(0) no han sido eliminados), pero cuando q > 0, es mejor establecer p lo más bajo posible porque δ < q /2. Por lo tanto, ya sea que q > q o q < q, σi(q) siempre será estrictamente mejor que σi(q) contra algunas estrategias restantes de los oponentes. Por lo tanto, ninguna estrategia σi(q) puede eliminar a σi(q). Las únicas otras estrategias puras que podrían dominar a σi(q) son estrategias que juegan ai para el tipo θ1 i, y bi o ci para todos los demás tipos. Tomemos tal estrategia y supongamos que juega c con probabilidad p. Contra σi+1(q), σi+2(q) (que aún no han sido eliminadas), la utilidad de jugar esta estrategia es −(q)2 /2 − /2 + p · δ − p · q /2. Por otro lado, jugar σi(q) da como resultado − + q · δ − q · q /2. Dado que q > q, tenemos −(q )2 /2 < −q · q /2, y dado que δ y son pequeños, se deduce que σi(q) recibe una utilidad mayor. Por lo tanto, ninguna estrategia domina a σi(q), lo que demuestra la afirmación. Afirmación 2: Si para todo q > q, σi+1(q) y σi+2(q) han sido eliminados, entonces σi(q) puede ser eliminado. Prueba: Considera la estrategia para el jugador i que juega ai para el tipo θ1 i, y bi para todos los demás tipos (llamemos a esta estrategia σi); afirmamos que σi domina a σi(q). Primero, si alguno de los otros jugadores k juega ak para θ1 k, entonces σi se desempeña mejor que σi(q) (que recibe −∞ en algunos casos). Dado que las estrategias para el jugador k que juega ck para el tipo θ1 k, o ak para algún tipo θj k con j > 1, ya han sido eliminadas, todo lo que queda por comprobar es que σi sea mejor que σi(q) siempre que los otros dos jugadores jueguen estrategias de la siguiente forma: jugar bk para el tipo θ1 k, y jugar uno de bk o ck en caso contrario. Observamos que entre estas estrategias, no queda ninguna que coloque una probabilidad mayor que q en ck. Si dejamos que qk denote la probabilidad con la que el jugador k juega ck, la utilidad esperada de jugar σi es −qi+1 · qi+2/2 − /2. Por otro lado, la utilidad de jugar σi(q) es − + q · δ − q · qi+2/2. Dado que qi+1 ≤ q, la diferencia entre estas dos expresiones es al menos /2 − δ, la cual es positiva. Se deduce que σi domina a σi(q). A partir de la Reclamación 2, se deduce que todas las estrategias de la forma σi(q) serán eliminadas eventualmente. Sin embargo, la Reclamación 1 muestra que no podemos avanzar y eliminar múltiples estrategias de este tipo para un jugador, a menos que al menos otro jugador mantenga simultáneamente las estrategias eliminadas: cada vez que se elimina un σi(q) tal que σi+1(q) y σi+2(q) aún no han sido eliminados, necesitamos eliminar una de las dos últimas estrategias antes de que se pueda eliminar cualquier σi(q) con q > q, es decir, necesitamos alternar entre jugadores. Dado que hay exponencialmente muchas estrategias de la forma σi(q), se sigue que la eliminación iterada requerirá exponencialmente muchas iteraciones para completarse. Por lo tanto, un algoritmo eficiente para la dominancia iterada (estricta o débil) por estrategias puras en juegos bayesianos, si existe, debe ser capaz de realizar (al menos parte de) muchas iteraciones en un solo paso del algoritmo (porque si cada paso solo realizara una sola iteración, necesitaríamos exponencialmente muchos pasos). Interesantemente, Knuth et al. [11] argumentan que la dominancia iterada parece ser un problema inherentemente secuencial (a la luz de su resultado de que la dominancia muy débil iterada es P-completa, es decir, aparentemente no paralelizable de manera eficiente), lo que sugiere que la agregación de muchas iteraciones puede ser difícil. 7. CONCLUSIONES Aunque el concepto de <br>equilibrio de Nash</br> se estudia cada vez más intensamente en nuestra comunidad, el concepto quizás más elemental de dominancia (iterada) ha recibido mucha menos atención. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "dominance": {
            "translated_key": "dominancia",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Complexity of (Iterated) <br>dominance</br>∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using <br>dominance</br> and iterated dominance.",
                "We first study both strict and weak <br>dominance</br> (not iterated), and show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then move on to iterated <br>dominance</br>.",
                "We show that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak <br>dominance</br>.",
                "This allows us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without <br>dominance</br> by mixed strategies. (A weaker version of the second result (only without <br>dominance</br> by mixed strategies) was already known [7].)",
                "Iterated strict <br>dominance</br>, on the other hand, is path-independent (both with and without <br>dominance</br> by mixed strategies) and can therefore be done in polynomial time.",
                "We then study what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we show that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak <br>dominance</br>).",
                "Then, we show that iterated strict <br>dominance</br> becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict <br>dominance</br> under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we study Bayesian games.",
                "We show that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak <br>dominance</br>); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak ∗ This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858, and a Sloan Fellowship. <br>dominance</br>).",
                "Finally, we show that iterated <br>dominance</br> using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak <br>dominance</br>).",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent systems with self-interested agents, the optimal action for one agent may depend on the actions taken by other agents.",
                "In such settings, the agents require tools from game theory to rationally decide on an action.",
                "Game theory offers various formal models of strategic settings-the best-known of which is a game in normal (or matrix) form, specifying a utility (payoff) for each agent for each combination of strategies that the agents choose-as well as solution concepts, which, given a game, specify which outcomes are reasonable (under various assumptions of rationality and common knowledge).",
                "Probably the best-known (and certainly the most-studied) solution concept is that of Nash equilibrium.",
                "A Nash equilibrium specifies a strategy for each player, in such a way that no player has an incentive to (unilaterally) deviate from the prescribed strategy.",
                "Recently, numerous papers have studied computing Nash equilibria in various settings [9, 4, 12, 3, 13, 14], and the complexity of constructing a Nash equilibrium in normal form games has been labeled one of the two most important open problems on the boundary of P today [20].",
                "The problem of computing solutions according to the perhaps more elementary solution concepts of <br>dominance</br> and iterated <br>dominance</br> has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the game theory community [7].1 ) A strategy strictly dominates another strategy if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one.",
                "The idea is that dominated strategies can be eliminated from consideration.",
                "In iterated <br>dominance</br>, the elimination proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating strategy no longer needs to perform better than or as well as the dominated strategy against opponent strategies that were eliminated in earlier rounds.",
                "Computing solutions according to (iterated) <br>dominance</br> is important for at least the following reasons: 1) it can be computationally easier than computing (for instance) a Nash equilibrium (and therefore it can be useful as a preprocessing step in computing a Nash equilibrium), and 2) (iterated) <br>dominance</br> requires a weaker rationality assumption on the players than (for instance) Nash equilibrium, and therefore solutions derived according to it are more likely to occur.",
                "In this paper, we study some fundamental computational questions concerning <br>dominance</br> and iterated <br>dominance</br>, including how hard it is to check whether a given strategy can be eliminated by each of the variants of these notions.",
                "The rest of the paper is organized as follows.",
                "In Section 2, we briefly review definitions and basic properties of normal form games, strict and weak <br>dominance</br>, and iterated strict and weak <br>dominance</br>.",
                "In the remaining sections, we study computational aspects of <br>dominance</br> and iterated <br>dominance</br>.",
                "In Section 3, we study one-shot (not iterated) <br>dominance</br>.",
                "In Section 4, we study iterated <br>dominance</br>.",
                "In Section 5, we study <br>dominance</br> and iterated <br>dominance</br> when the dominating strategy can only place probability on a few pure strategies.",
                "Finally, in Section 6, we study <br>dominance</br> and iterated <br>dominance</br> in Bayesian games. 2.",
                "DEFINITIONS AND BASIC PROPERTIES In this section, we briefly review normal form games, as well as <br>dominance</br> and iterated <br>dominance</br> (both strict and weak).",
                "An n-player normal form game is defined as follows.",
                "Definition 1.",
                "A normal form game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of pure strategies Σi and a utility function ui : Σ1 × Σ2 × . . . × Σn → R (where ui(σ1, σ2, . . . , σn) denotes player is utility when each player j plays action σj).",
                "The two main notions of <br>dominance</br> are defined as follows.",
                "Definition 2.",
                "Player is strategy σi is said to be strictly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "Player is strategy σi is said to be weakly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) ≥ ui(σi, σ−i), and for at least one vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "In this definition, it is sometimes allowed for the dominating strategy σi to be a mixed strategy, that is, a probability distribution over pure strategies.",
                "In this case, the utilities in <br>dominance</br> altogether.",
                "For example, simple <br>dominance</br> checks are sometimes used as a subroutine in searching for Nash equilibria [21]. the definition are the expected utilities.2 There are other notions of <br>dominance</br>, such as very weak dominance (in which no strict inequality is required, so two strategies can dominate each other), but we will not study them here.",
                "When we are looking at the <br>dominance</br> relations for player i, the other players (−i) can be thought of as a single player.3 Therefore, in the rest of the paper, when we study one-shot (not iterated) <br>dominance</br>, we will focus without loss of generality on two-player games.4 In two-player games, we will generally refer to the players as r (row) and c (column) rather than 1 and 2.",
                "In iterated <br>dominance</br>, dominated strategies are removed from the game, and no longer have any effect on future <br>dominance</br> relations.",
                "Iterated <br>dominance</br> can eliminate more strategies than <br>dominance</br>, as follows. σr may originally not dominate σr because the latter performs better against σc; but then, once σc is removed because it is dominated by σc, σr dominates σr, and the latter can be removed.",
                "For example, in the following game, R can be removed first, after which D is dominated.",
                "L R U 1, 1 0, 0 D 0, 1 1, 0 Either strict or weak <br>dominance</br> can be used in the definition of iterated <br>dominance</br>.",
                "We note that the process of iterated <br>dominance</br> is never helped by removing a dominated mixed strategy, for the following reason.",
                "If σi gives player i a higher utility than σi against mixed strategy σj for player j = i (and strategies σ−{i,j} for the other players), then for at least one pure strategy σj that σj places positive probability on, σi must perform better than σi against σj (and strategies σ−{i,j} for the other players).",
                "Thus, removing the mixed strategy σj does not introduce any new dominances.",
                "More detailed discussions and examples can be found in standard texts on microeconomics or game theory [17, 5].",
                "We are now ready to move on to the core of this paper. 3.",
                "<br>dominance</br> (NOT ITERATED) In this section, we study the notion of one-shot (not iterated) <br>dominance</br>.",
                "As a first observation, checking whether a given strategy is strictly (weakly) dominated by some pure strategy is straightforward, by checking, for every pure strategy for that player, whether the latter strategy performs strictly better against all the opponents strategies (at least as well against all the opponents strategies, and strictly 2 The dominated strategy σi is, of course, also allowed to be mixed, but this has no technical implications for the paper: when we study one-shot <br>dominance</br>, we ask whether a given strategy is dominated, and it does not matter whether the given strategy is pure or mixed; when we study iterated <br>dominance</br>, there is no use in eliminating mixed strategies, as we will see shortly. 3 This player may have a very large strategy space (one pure strategy for every vector of pure strategies for the players that are being replaced).",
                "Nevertheless, this will not result in an increase in our representation size, because the original representation already had to specify utilities for each of these vectors. 4 We note that a restriction to two-player games would not be without loss of generality for iterated <br>dominance</br>.",
                "This is because for iterated <br>dominance</br>, we need to look at the dominated strategies of each individual player, so we cannot merge any players. 89 better against at least one).5 Next, we show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time by solving a single linear program. (Similar linear programs have been given before [18]; we present the result here for completeness, and because we will build on the linear programs given below in Theorem 6.)",
                "Proposition 1.",
                "Given the row players utilities, a subset Dr of the row players pure strategies Σr, and a distinguished strategy σ∗ r for the row player, we can check in time polynomial in the size of the game (by solving a single linear program of polynomial size) whether there exists some mixed strategy σr, that places positive probability only on strategies in Dr and dominates σ∗ r , both for strict and for weak <br>dominance</br>.",
                "Proof.",
                "Let pdr be the probability that σr places on dr ∈ Dr. We will solve a single linear program in each of our algorithms; linear programs can be solved in polynomial time [10].",
                "For strict <br>dominance</br>, the question is whether the pdr can be set so that for every pure strategy for the column player σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc).",
                "Because the inequality must be strict, we cannot solve this directly by linear programming.",
                "We proceed as follows.",
                "Because the game is finite, we may assume without loss of generality that all utilities are positive (if not, simply add a constant to all utilities.)",
                "Solve the following linear program: minimize dr∈Dr pdr such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc).",
                "If σ∗ r is strictly dominated by some mixed strategy, this linear program has a solution with objective value < 1. (The dominating strategy is a feasible solution with objective value exactly 1.",
                "Because no constraint is binding for this solution, we can reduce one of the probabilities slightly without affecting feasibility, thereby obtaining a solution with objective value < 1.)",
                "Moreover, if this linear program has a solution with objective value < 1, there is a mixed strategy strictly dominating σ∗ r , which can be obtained by taking the LP solution and adding the remaining probability to any strategy (because all the utilities are positive, this will add to the left side of any inequality, so all inequalities will become strict).",
                "For weak <br>dominance</br>, we can solve the following linear program: maximize σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1.",
                "If σ∗ r is weakly dominated by some mixed strategy, then that mixed strategy is a feasible solution to this program with objective value > 0, because for at least one strategy σc ∈ Σc we have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0.",
                "On the other hand, if this program has a solution with objective value > 0, then for at least one strategy σc ∈ Σc we 5 Recall that the assumption of a single opponent (that is, the assumption of two players) is without loss of generality for one-shot <br>dominance</br>. must have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, and thus the linear programs solution is a weakly dominating mixed strategy. 4.",
                "ITERATED <br>dominance</br> We now move on to iterated <br>dominance</br>.",
                "It is well-known that iterated strict <br>dominance</br> is path-independent [6, 19]that is, if we remove dominated strategies until no more dominated strategies remain, in the end the remaining strategies for each player will be the same, regardless of the order in which strategies are removed.",
                "Because of this, to see whether a given strategy can be eliminated by iterated strict <br>dominance</br>, all that needs to be done is to repeatedly remove strategies that are strictly dominated, until no more dominated strategies remain.",
                "Because we can check in polynomial time whether any given strategy is dominated (whether or not <br>dominance</br> by mixed strategies is allowed, as described in Section 3), this whole procedure takes only polynomial time.",
                "In the case of iterated <br>dominance</br> by pure strategies with two players, Knuth et al. [11] slightly improve on (speed up) the straightforward implementation of this procedure by keeping track of, for each ordered pair of strategies for a player, the number of opponent strategies that prevent the first strategy from dominating the second.",
                "Hereby the runtime for an m × n game is reduced from O((m + n)4 ) to O((m + n)3 ). (Actually, they only study very weak <br>dominance</br> (for which no strict inequalities are required), but the approach is easily extended.)",
                "In contrast, iterated weak <br>dominance</br> is known to be pathdependent.6 For example, in the following game, using iterated weak <br>dominance</br> we can eliminate M first, and then D, or R first, and then U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Therefore, while the procedure of removing weakly dominated strategies until no more weakly dominated strategies remain can certainly be executed in polynomial time, which strategies survive in the end depends on the order in which we remove the dominated strategies.",
                "We will investigate two questions for iterated weak <br>dominance</br>: whether a given strategy is eliminated in some path, and whether there is a path to a unique solution (one pure strategy left per player).",
                "We will show that both of these problems are computationally hard.",
                "Definition 3.",
                "Given a game in normal form and a distinguished strategy σ∗ , IWD-STRATEGY-ELIMINATION asks whether there is some path of iterated weak <br>dominance</br> that eliminates σ∗ .",
                "Given a game in normal form, IWDUNIQUE-SOLUTION asks whether there is some path of iterated weak <br>dominance</br> that leads to a unique solution (one strategy left per player).",
                "The following lemma shows a special case of normal form games in which allowing for weak <br>dominance</br> by mixed strategies (in addition to weak <br>dominance</br> by pure strategies) does 6 There is, however, a restriction of weak dominance called nice weak dominance which is path-independent [15, 16].",
                "For an overview of path-independence results, see Apt [1]. 90 not help.",
                "We will prove the hardness results in this setting, so that they will hold whether or not <br>dominance</br> by mixed strategies is allowed.",
                "Lemma 1.",
                "Suppose that all the utilities in a game are in {0, 1}.",
                "Then every pure strategy that is weakly dominated by a mixed strategy is also weakly dominated by a pure strategy.",
                "Proof.",
                "Suppose pure strategy σ is weakly dominated by mixed strategy σ∗ .",
                "If σ gets a utility of 1 against some opponent strategy (or vector of opponent strategies if there are more than 2 players), then all the pure strategies that σ∗ places positive probability on must also get a utility of 1 against that opponent strategy (or else the expected utility would be smaller than 1).",
                "Moreover, at least one of the pure strategies that σ∗ places positive probability on must get a utility of 1 against an opponent strategy that σ gets 0 against (or else the inequality would never be strict).",
                "It follows that this pure strategy weakly dominates σ.",
                "We are now ready to prove the main results of this section.",
                "Theorem 1.",
                "IWD-STRATEGY-ELIMINATION is NPcomplete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not <br>dominance</br> by mixed strategies is allowed.",
                "Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can easily check whether this is a valid sequence of eliminations (even when <br>dominance</br> by mixed strategies is allowed, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following IWD-STRATEGY-ELIMINATION instance. (In this instance, we will specify that certain strategies are uneliminable.",
                "A strategy σr can be made uneliminable, even when 0 and 1 are the only allowed utilities, by adding another strategy σr and another opponent strategy σc, so that: 1. σr and σr are the only strategies that give the row player a utility of 1 against σc. 2. σr and σr always give the row player the same utility. 3. σc is the only strategy that gives the column player a utility of 1 against σr, but otherwise σc always gives the column player utility 0.",
                "This makes it impossible to eliminate any of these three strategies.",
                "We will not explicitly specify the additional strategies to make the proof more legible.)",
                "In this proof, we will denote row player strategies by s, and column player strategies by t, to improve legibility.",
                "Let the row players pure strategy set be given as follows.",
                "For every variable v ∈ V , the row player has corresponding strategies s1 +v, s2 +v, s1 −v, s2 −v.",
                "Additionally, the row player has the following 2 strategies: s1 0 and s2 0, where s2 0 = σ∗ r (that is, it is the strategy we seek to eliminate).",
                "Finally, for every clause c ∈ C, the row player has corresponding strategies s1 c (uneliminable) and s2 c. Let the column players pure strategy set be given as follows.",
                "For every variable v ∈ V , the column player has a corresponding strategy tv.",
                "For every clause c ∈ C, the column player has a corresponding strategy tc, and additionally, for every literal l ∈ L that occurs in c, a strategy tc,l.",
                "For every variable v ∈ V , the column player has corresponding strategies t+v, t−v (both uneliminable).",
                "Finally, the column player has three additional strategies: t1 0 (uneliminable), t2 0, and t1.",
                "The utility function for the row player is given as follows: • ur(s1 +v, tv) = 0 for all v ∈ V ; • ur(s2 +v, tv) = 1 for all v ∈ V ; • ur(s1 −v, tv) = 1 for all v ∈ V ; • ur(s2 −v, tv) = 0 for all v ∈ V ; • ur(s1 +v, t1) = 1 for all v ∈ V ; • ur(s2 +v, t1) = 0 for all v ∈ V ; • ur(s1 −v, t1) = 0 for all v ∈ V ; • ur(s2 −v, t1) = 1 for all v ∈ V ; • ur(sb +v, t+v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sb −v, t−v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sl, t) = 0 otherwise for all l ∈ L and t ∈ S2; • ur(s1 0, tc) = 0 for all c ∈ C; • ur(s2 0, tc) = 1 for all c ∈ C; • ur(sb 0, t1 0) = 1 for all b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 otherwise for all b ∈ {1, 2} and t ∈ S2; • ur(sb c, t) = 0 otherwise for all c ∈ C and b ∈ {1, 2}; and the row players utility is 0 in every other case.",
                "The utility function for the column player is given as follows: • uc(s, tv) = 0 for all v ∈ V and s ∈ S1; • uc(s, t1) = 0 for all s ∈ S1; • uc(s2 l , tc) = 1 for all c ∈ C and l ∈ L where l ∈ c (literal l occurs in clause c); • uc(s2 l2 , tc,l1 ) = 1 for all c ∈ C and l1, l2 ∈ L, l1 = l2 where l2 ∈ c; • uc(s1 c, tc) = 1 for all c ∈ C; • uc(s2 c, tc) = 0 for all c ∈ C; • uc(sb c, tc,l) = 1 for all c ∈ C, l ∈ L, and b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 otherwise for all c ∈ C and l ∈ L; and the column players utility is 0 in every other case.",
                "We now show that the two instances are equivalent.",
                "First, suppose there is a solution to the satisfiability instance: that is, a truth-value assignment to the variables in V such that all clauses are satisfied.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the assignment, eliminate tv (which gives the column player utility 0 everywhere). 2.",
                "Then, for every variable v that is set to true in the assignment, eliminate s2 +v using s1 +v (which is possible because tv has been eliminated, and because t1 has not been eliminated (yet)). 3.",
                "Now eliminate t1 (which gives the column player utility 0 everywhere). 4.",
                "Next, for every variable v that is set to false in the assignment, eliminate s2 −v using s1 −v (which is possible because t1 has been eliminated, and because tv has not been eliminated (yet)). 5.",
                "For every clause c which has the variable corresponding to one of its positive literals l = +v set to true in the assignment, eliminate tc using tc,l (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 6.",
                "For every clause c which has the variable corresponding to one of its negative literals l = −v set to false in the assignment, eliminate tc using tc,l 91 (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 7.",
                "Because the assignment satisfied the formula, all the tc have now been eliminated.",
                "Thus, we can eliminate s2 0 = σ∗ r using s1 0.",
                "It follows that there is a solution to the IWD-STRATEGY-ELIMINATION instance.",
                "Now suppose there is a solution to the IWD-STRATEGYELIMINATION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We first observe that only s1 0 can eliminate s2 0 = σ∗ r , because it is the only other strategy that gets the row player a utility of 1 against t1 0, and t1 0 is uneliminable.",
                "However, because s2 0 performs better than s1 0 against the tc strategies, it follows that all of the tc strategies must be eliminated.",
                "For each c ∈ C, the strategy tc can only be eliminated by one of the strategies tc,l (with the same c), because these are the only other strategies that get the column player a utility of 1 against s1 c, and s1 c is uneliminable.",
                "But, in order for some tc,l to eliminate tc, s2 l must be eliminated first.",
                "Only s1 l can eliminate s2 l , because it is the only other strategy that gets the row player a utility of 1 against tl, and tl is uneliminable.",
                "We next show that for every v ∈ V only one of s2 +v, s2 −v can be eliminated.",
                "This is because in order for s1 +v to eliminate s2 +v, tv needs to have been eliminated and t1, not (so tv must be eliminated before t1); but in order for s1 −v to eliminate s2 −v, t1 needs to have been eliminated and tv, not (so t1 must be eliminated before tv).",
                "So, set v to true if s2 +v is eliminated, and to false otherwise Because by the above, for every clause c, one of the s2 l with l ∈ c must be eliminated, it follows that this is a satisfying assignment to the satisfiability instance.",
                "Using Theorem 1, it is now (relatively) easy to show that IWD-UNIQUE-SOLUTION is also NP-complete under the same restrictions.",
                "Theorem 2.",
                "IWD-UNIQUE-SOLUTION is NP-complete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not <br>dominance</br> by mixed strategies is allowed.",
                "Proof.",
                "Again, the problem is in NP because we can nondeterministically choose the sequence of eliminations and verify whether it is correct.",
                "To show NP-hardness, we reduce an arbitrary IWD-STRATEGY-ELIMINATION instance to the following IWD-UNIQUE-SOLUTION instance.",
                "Let all the strategies for each player from the original instance remain part of the new instance, and let the utilities resulting from the players playing a pair of these strategies be the same.",
                "We add three additional strategies σ1 r , σ2 r , σ3 r for the row player, and three additional strategies σ1 c , σ2 c , σ3 c for the column player.",
                "Let the additional utilities be as follows: • ur(σr, σj c) = 1 for all σr /∈ {σ1 r , σ2 r , σ3 r } and j ∈ {2, 3}; • ur(σi r, σc) = 1 for all i ∈ {1, 2, 3} and σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 for all i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • and the row players utility is 0 in all other cases involving a new strategy. • uc(σ3 r , σc) = 1 for all σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 for all j ∈ {2, 3} (σ∗ r is the strategy to be eliminated in the original instance); • uc(σi r, σ1 c ) = 1 for all i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • and the column players utility is 0 in all other cases involving a new strategy.",
                "We proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the original IWDSTRATEGY-ELIMINATION instance.",
                "Then, perform the same sequence of eliminations to eliminate σ∗ r in the new IWD-UNIQUE-SOLUTION instance. (This is possible because at any stage, any weak <br>dominance</br> for the row player in the original instance is still a weak <br>dominance</br> in the new instance, because the two strategies utilities for the row player are the same when the column player plays one of the new strategies; and the same is true for the column player.)",
                "Once σ∗ r is eliminated, let σ1 c eliminate σ2 c . (It performs better against σ2 r .)",
                "Then, let σ1 r eliminate all the other remaining strategies for the row player. (It always performs better against either σ1 c or σ3 c .)",
                "Finally, σ1 c is the unique best response against σ1 r among the column players remaining strategies, so let it eliminate all the other remaining strategies for the column player.",
                "Thus, there exists a solution to the IWD-UNIQUE-SOLUTION instance.",
                "Now suppose there exists a solution to the IWD-UNIQUESOLUTION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We will show that none of the new strategies (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) can either eliminate another strategy, or be eliminated before σ∗ r is eliminated.",
                "Thus, there must be a sequence of eliminations ending in the elimination of σ∗ r , which does not involve any of the new strategies, and is therefore a valid sequence of eliminations in the original game (because all original strategies perform the same against each new strategy).",
                "We now show that this is true by exhausting all possibilities for the first elimination before σ∗ r is eliminated that involves a new strategy.",
                "None of the σi r can be eliminated by a σr /∈ {σ1 r , σ2 r , σ3 r }, because the σi r perform better against σ1 c . σ1 r cannot eliminate any other strategy, because it always performs poorer against σ2 c . σ2 r and σ3 r are equivalent from the row players perspective (and thus cannot eliminate each other), and cannot eliminate any other strategy because they always perform poorer against σ3 c .",
                "None of the σj c can be eliminated by a σc /∈ {σ1 c , σ2 c , σ3 c }, because the σj c always perform better against either σ1 r or σ2 r . σ1 c cannot eliminate any other strategy, because it always performs poorer against either σ∗ r or σ3 r . σ2 c cannot eliminate any other strategy, because it always performs poorer against σ2 r or σ3 r . σ3 c cannot eliminate any other strategy, because it always performs poorer against σ1 r or σ3 r .",
                "Thus, there exists a solution to the IWDSTRATEGY-ELIMINATION instance.",
                "A slightly weaker version of the part of Theorem 2 concerning <br>dominance</br> by pure strategies only is the main result of Gilboa et al. [7]. (Besides not proving the result for <br>dominance</br> by mixed strategies, the original result was weaker because it required utilities {0, 1, 2, 3, 4, 5, 6, 7, 8} rather than just {0, 1} (and because of this, our Lemma 1 cannot be applied to it to get the result for mixed strategies).) 5. (ITERATED) DOMINANCE USING MIXED STRATEGIES WITH SMALL SUPPORTS When showing that a strategy is dominated by a mixed strategy, there are several reasons to prefer exhibiting a 92 dominating strategy that places positive probability on as few pure strategies as possible.",
                "First, this will reduce the number of bits required to specify the dominating strategy (and thus the proof of <br>dominance</br> can be communicated quicker): if the dominating mixed strategy places positive probability on only k strategies, then it can be specified using k real numbers for the probabilities, plus k log m (where m is the number of strategies for the player under consideration) bits to indicate which strategies are used.",
                "Second, the proof of <br>dominance</br> will be cleaner: for a dominating mixed strategy, it is typically (always in the case of strict <br>dominance</br>) possible to spread some of the probability onto any unused pure strategy and still have a dominating strategy, but this obscures which pure strategies are the ones that are key in making the mixed strategy dominating.",
                "Third, because (by the previous) the argument for eliminating the dominated strategy is simpler and easier to understand, it is more likely to be accepted.",
                "Fourth, the level of risk neutrality required for the argument to work is reduced, at least in the extreme case where <br>dominance</br> by a single pure strategy can be exhibited (no risk neutrality is required here).",
                "This motivates the following problem.",
                "Definition 4 (MINIMUM-DOMINATING-SET).",
                "We are given the row players utilities of a game in normal form, a distinguished strategy σ∗ for the row player, a specification of whether the <br>dominance</br> should be strict or weak, and a number k. We are asked whether there exists a mixed strategy σ for the row player that places positive probability on at most k pure strategies, and dominates σ∗ in the required sense.",
                "Unfortunately, this problem is NP-complete.",
                "Theorem 3.",
                "MINIMUM-DOMINATING-SET is NPcomplete, both for strict and for weak <br>dominance</br>.",
                "Proof.",
                "The problem is in NP because we can nondeterministically choose a set of at most k strategies to give positive probability, and decide whether we can dominate σ∗ with these k strategies as described in Proposition 1.",
                "To show NP-hardness, we reduce an arbitrary SET-COVER instance (given a set S, subsets S1, S2, . . . , Sr, and a number t, can all of S be covered by at most t of the subsets?) to the following MINIMUM-DOMINATING-SET instance.",
                "For every element s ∈ S, there is a pure strategy σs for the column player.",
                "For every subset Si, there is a pure strategy σSi for the row player.",
                "Finally, there is the distinguished pure strategy σ∗ for the row player.",
                "The row players utilities are as follows: ur(σSi , σs) = t + 1 if s ∈ Si; ur(σSi , σs) = 0 if s /∈ Si; ur(σ∗ , σs) = 1 for all s ∈ S. Finally, we let k = t. We now proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the SET-COVER instance.",
                "Without loss of generality, we can assume that there are exactly k subsets in the cover.",
                "Then, for every Si that is in the cover, let the dominating strategy σ place exactly 1 k probability on the corresponding pure strategy σSi .",
                "Now, if we let n(s) be the number of subsets in the cover containing s (we observe that that n(s) ≥ 1), then for every strategy σs for the column player, the row players expected utility for playing σ when the column player is playing σs is u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs).",
                "So σ strictly (and thus also weakly) dominates σ∗ , and there exists a solution to the MINIMUM-DOMINATING-SET instance.",
                "Now suppose there exists a solution to the MINIMUMDOMINATING-SET instance.",
                "Consider the (at most k) pure strategies of the form σSi on which the dominating mixed strategy σ places positive probability, and let T be the collection of the corresponding subsets Si.",
                "We claim that T is a cover.",
                "For suppose there is some s ∈ S that is not in any of the subsets in T .",
                "Then, if the column player plays σs, the row player (when playing σ) will always receive utility 0-as opposed to the utility of 1 the row player would receive for playing σ∗ , contradicting the fact that σ dominates σ∗ (whether this <br>dominance</br> is weak or strict).",
                "It follows that there exists a solution to the SET-COVER instance.",
                "On the other hand, if we require that the dominating strategy only places positive probability on a very small number of pure strategies, then it once again becomes easy to check whether a strategy is dominated.",
                "Specifically, to find out whether player is strategy σ∗ is dominated by a strategy that places positive probability on only k pure strategies, we can simply check, for every subset of k of player is pure strategies, whether there is a strategy that places positive probability only on these k strategies and dominates σ∗ , using Proposition 1.",
                "This requires only O(|Σi|k ) such checks.",
                "Thus, if k is a constant, this constitutes a polynomial-time algorithm.",
                "A natural question to ask next is whether iterated strict <br>dominance</br> remains computationally easy when dominating strategies are required to place positive probability on at most k pure strategies, where k is a small constant. (We have already shown in Section 4 that iterated weak <br>dominance</br> is hard even when k = 1, that is, only dominance by pure strategies is allowed.)",
                "Of course, if iterated strict <br>dominance</br> were path-independent under this restriction, computational easiness would follow as it did in Section 4.",
                "However, it turns out that this is not the case.",
                "Observation 1.",
                "If we restrict the dominating strategies to place positive probability on at most two pure strategies, iterated strict <br>dominance</br> becomes path-dependent.",
                "Proof.",
                "Consider the following game: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Let (i, j) denote the outcome in which the row player plays the ith row and the column player plays the jth column.",
                "Because (1, 1), (2, 2), and (4, 3) are all Nash equilibria, none of the column players pure strategies will ever be eliminated, and neither will rows 1, 2, and 4.",
                "We now observe that randomizing uniformly over rows 1 and 2 dominates row 3, and randomizing uniformly over rows 3 and 4 dominates row 5.",
                "However, if we eliminate row 3 first, it becomes impossible to dominate row 5 without randomizing over at least 3 pure strategies.",
                "Indeed, iterated strict <br>dominance</br> turns out to be hard even when k = 3.",
                "Theorem 4.",
                "If we restrict the dominating strategies to place positive probability on at most three pure strategies, it becomes NP-complete to decide whether a given strategy can be eliminated using iterated strict <br>dominance</br>. 93 Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can check in polynomial time whether this is a valid sequence of eliminations (for any strategy to be eliminated, we can check, for every subset of three other strategies, whether there is a strategy placing positive probability on only these three strategies that dominates the strategy to be eliminated, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following two-player game.",
                "For every variable v ∈ V , the row player has strategies s+v, s−v, s1 v, s2 v, s3 v, s4 v, and the column player has strategies t1 v, t2 v, t3 v, t4 v. For every clause c ∈ C, the row player has a strategy sc, and the column player has a strategy tc, as well as, for every literal l occurring in c, an additional strategy tl c. The row player has two additional strategies s1 and s2. (s2 is the strategy that we are seeking to eliminate.)",
                "Finally, the column player has one additional strategy t1.",
                "The utility function for the row player is given as follows (where is some sufficiently small number): • ur(s+v, tj v) = 4 if j ∈ {1, 2}, for all v ∈ V ; • ur(s+v, tj v) = 1 if j ∈ {3, 4}, for all v ∈ V ; • ur(s−v, tj v) = 1 if j ∈ {1, 2}, for all v ∈ V ; • ur(s−v, tj v) = 4 if j ∈ {3, 4}, for all v ∈ V ; • ur(s+v, t) = ur(s−v, t) = 0 for all v ∈ V and t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 for all v ∈ V and i ∈ {1, 2, 3, 4}; • ur(si v, t) = for all v ∈ V , i ∈ {1, 2, 3, 4}, and t = ti v; • ur(sc, tc) = 2 for all c ∈ C; • ur(sc, t) = 0 for all c ∈ C and t = tc; • ur(s1, t1) = 1 + ; • ur(s1, t) = for all t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 for all c ∈ C; • ur(s2, t) = 0 for all t /∈ {t1} ∪ {tc : c ∈ C}.",
                "The utility function for the column player is given as follows: • uc(si v, ti v) = 1 for all v ∈ V and i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 for all v ∈ V , i ∈ {1, 2, 3, 4}, and s = si v; • uc(sc, tc) = 1 for all c ∈ C; • uc(sl, tc) = 1 for all c ∈ C and l ∈ L occurring in c; • uc(s, tc) = 0 for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + for all c ∈ C; • uc(sl , tl c) = 1 + for all c ∈ C and l = l occurring in c; • uc(s, tl c) = for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c, l = l }; • uc(s2, t1) = 1; • uc(s, t1) = 0 for all s = s2.",
                "We now show that the two instances are equivalent.",
                "First, suppose that there is a solution to the satisfiability instance.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the satisfying assignment, eliminate s+v with the mixed strategy σr that places probability 1/3 on s−v, probability 1/3 on s1 v, and probability 1/3 on s2 v. (The expected utility of playing σr against t1 v or t2 v is 14/3 > 4; against t3 v or t4 v, it is 4/3 > 1; and against anything else it is 2 /3 > 0.",
                "Hence the <br>dominance</br> is valid.) 2.",
                "Similarly, for every variable v that is set to false in the satisfying assignment, eliminate s−v with the mixed strategy σr that places probability 1/3 on s+v, probability 1/3 on s3 v, and probability 1/3 on s4 v. (The expected utility of playing σr against t1 v or t2 v is 4/3 > 1; against t3 v or t4 v, it is 14/3 > 4; and against anything else it is 2 /3 > 0.",
                "Hence the <br>dominance</br> is valid.) 3.",
                "For every c ∈ C, eliminate tc with any tl c for which l was set to true in the satisfying assignment. (This is a valid <br>dominance</br> because tl c performs better than tc against any strategy other than sl, and we eliminated sl in step 1 or in step 2.) 4.",
                "Finally, eliminate s2 with s1. (This is a valid <br>dominance</br> because s1 performs better than s2 against any strategy other than those in {tc : c ∈ C}, which we eliminated in step 3.)",
                "Hence, there is an elimination path that eliminates s2.",
                "Now, suppose that there is an elimination path that eliminates s2.",
                "The strategy that eventually dominates s2 must place most of its probability on s1, because s1 is the only other strategy that performs well against t1, which cannot be eliminated before s2.",
                "But, s1 performs significantly worse than s2 against any strategy tc with c ∈ C, so it follows that all these strategies must be eliminated first.",
                "Each strategy tc can only be eliminated by a strategy that places most of its weight on the corresponding strategies tl c with l ∈ c, because they are the only other strategies that perform well against sc, which cannot be eliminated before tc.",
                "But, each strategy tl c performs significantly worse than tc against sl, so it follows that for every clause c, for one of the literals l occurring in it, sl must be eliminated first.",
                "Now, strategies of the form tj v will never be eliminated because they are the unique best responses to the corresponding strategies sj v (which are, in turn, the best responses to the corresponding tj v).",
                "As a result, if strategy s+v (respectively, s−v) is eliminated, then its opposite strategy s−v (respectively, s+v) can no longer be eliminated, for the following reason.",
                "There is no other pure strategy remaining that gets a significant utility against more than one of the strategies t1 v, t2 v, t3 v, t4 v, but s−v (respectively, s+v) gets significant utility against all 4, and therefore cannot be dominated by a mixed strategy placing positive probability on at most 3 strategies.",
                "It follows that for each v ∈ V , at most one of the strategies s+v, s−v is eliminated, in such a way that for every clause c, for one of the literals l occurring in it, sl must be eliminated.",
                "But then setting all the literals l such that sl is eliminated to true constitutes a solution to the satisfiability instance.",
                "In the next section, we return to the setting where there is no restriction on the number of pure strategies on which a dominating mixed strategy can place positive probability. 6. (ITERATED) <br>dominance</br> IN BAYESIAN GAMES So far, we have focused on normal form games that are flatly represented (that is, every matrix entry is given ex94 plicitly).",
                "However, for many games, the flat representation is too large to write down explicitly, and instead, some representation that exploits the structure of the game needs to be used.",
                "Bayesian games, besides being of interest in their own right, can be thought of as a useful structured representation of normal form games, and we will study them in this section.",
                "In a Bayesian game, each player first receives privately held preference information (the players type) from a distribution, which determines the utility that that player receives for every outcome of (that is, vector of actions played in) the game.",
                "After receiving this type, the player plays an action based on it.7 Definition 5.",
                "A Bayesian game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of actions Ai, a (finite) type space Θi with a probability distribution πi over it, and a utility function ui : Θi × A1 × A2 × . . . × An → R (where ui(θi, a1, a2, . . . , an) denotes player is utility when is type is θi and each player j plays action aj).",
                "A pure strategy in a Bayesian game is a mapping from types to actions, σi : Θi → Ai, where σi(θi) denotes the action that player i plays for type θi.",
                "Any vector of pure strategies in a Bayesian game defines an (expected) utility for each player, and therefore we can translate a Bayesian game into a normal form game.",
                "In this normal form game, the notions of <br>dominance</br> and iterated <br>dominance</br> are defined as before.",
                "However, the normal form representation of the game is exponentially larger than the Bayesian representation, because each player i has |Ai||Θi| distinct pure strategies.",
                "Thus, any algorithm for Bayesian games that relies on expanding the game to its normal form will require exponential time.",
                "Specifically, our easiness results for normal form games do not directly transfer to this setting.",
                "In fact, it turns out that checking whether a strategy is dominated by a pure strategy is hard in Bayesian games.",
                "Theorem 5.",
                "In a Bayesian game, it is NP-complete to decide whether a given pure strategy σr : Θr → Ar is dominated by some other pure strategy (both for strict and weak <br>dominance</br>), even when the row players distribution over types is uniform.",
                "Proof.",
                "The problem is in NP because it is easy to verify whether a candidate dominating strategy is indeed a dominating strategy.",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a set of clauses C using variables from V ) to the following Bayesian game.",
                "Let the row players action set be Ar = {t, f, 0} and let the column players action set be Ac = {ac : c ∈ C}.",
                "Let the row players type set be Θr = {θv : v ∈ V }, with a distribution πr that is uniform.",
                "Let the row players utility function be as follows: • ur(θv, 0, ac) = 0 for all v ∈ V and c ∈ C; • ur(θv, b, ac) = |V | for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b satisfies c; • ur(θv, b, ac) = −1 for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b does not satisfy c. 7 In general, a player can also receive a signal about the other players preferences, but we will not concern ourselves with that here.",
                "Let the pure strategy to be dominated be the one that plays 0 for every type.",
                "We show that the strategy is dominated by a pure strategy if and only if there is a solution to the satisfiability instance.",
                "First, suppose there is a solution to the satisfiability instance.",
                "Then, let σd r be given by: σd r (θv) = t if v is set to true in the solution to the satisfiability instance, and σd r (θv) = f otherwise.",
                "Then, against any action ac by the column player, there is at least one type θv such that either +v ∈ c and σd r (θv) = t, or −v ∈ c and σd r (θv) = f. Thus, the row players expected utility against action ac is at least |V | |V | − |V |−1 |V | = 1 |V | > 0.",
                "So, σd r is a dominating strategy.",
                "Now, suppose there is a dominating pure strategy σd r .",
                "This dominating strategy must play t or f for at least one type.",
                "Thus, against any ac by the column player, there must at least be some type θv for which ur(θv, σd r (θv), ac) > 0.",
                "That is, there must be at least one variable v such that setting v to σd r (θv) satifies c. But then, setting each v to σd r (θv) must satisfy all the clauses.",
                "So a satisfying assignment exists.",
                "However, it turns out that we can modify the linear programs from Proposition 1 to obtain a polynomial time algorithm for checking whether a strategy is dominated by a mixed strategy in Bayesian games.",
                "Theorem 6.",
                "In a Bayesian game, it can be decided in polynomial time whether a given (possibly mixed) strategy σr is dominated by some other mixed strategy, using linear programming (both for strict and weak <br>dominance</br>).",
                "Proof.",
                "We can modify the linear programs presented in Proposition 1 as follows.",
                "For strict <br>dominance</br>, again assuming without loss of generality that all the utilities in the game are positive, use the following linear program (in which pσr r (θr, ar) is the probability that σr, the strategy to be dominated, places on ar for type θr): minimize θr∈Θr ar∈Ar pr(ar) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1.",
                "Assuming that π(θr) > 0 for all θr ∈ Θr, this program will return an objective value smaller than |Θr| if and only if σr is strictly dominated, by reasoning similar to that done in Proposition 1.",
                "For weak <br>dominance</br>, use the following linear program: maximize ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) = 1.",
                "This program will return an objective value greater than 0 if and only if σr is weakly dominated, by reasoning similar to that done in Proposition 1.",
                "We now turn to iterated <br>dominance</br> in Bayesian games.",
                "Na¨ıvely, one might argue that iterated <br>dominance</br> in Bayesian 95 games always requires an exponential number of steps when a significant fraction of the games pure strategies can be eliminated, because there are exponentially many pure strategies.",
                "However, this is not a very strong argument because oftentimes we can eliminate exponentially many pure strategies in one step.",
                "For example, if for some type θr ∈ Θr we have, for all ac ∈ Ac, that u(θr, a1 r, ac) > u(θr, a2 r, ac), then any pure strategy for the row player which plays action a2 r for type θr is dominated (by the strategy that plays action a1 r for type θr instead)-and there are exponentially many (|Ar||Θr|−1 ) such strategies.",
                "It is therefore conceivable that we need only polynomially many eliminations of collections of a players strategies.",
                "However, the following theorem shows that this is not the case, by giving an example where an exponential number of iterations (that is, alternations between the players in eliminating strategies) is required. (We emphasize that this is not a result about computational complexity.)",
                "Theorem 7.",
                "Even in symmetric 3-player Bayesian games, iterated <br>dominance</br> by pure strategies can require an exponential number of iterations (both for strict and weak <br>dominance</br>), even with only three actions per player.",
                "Proof.",
                "Let each player i ∈ {1, 2, 3} have n + 1 types θ1 i , θ2 i , . . . , θn+1 i .",
                "Let each player i have 3 actions ai, bi, ci, and let the utility function of each player be defined as follows. (In the below, i + 1 and i + 2 are shorthand for i + 1(mod 3) and i + 2(mod 3) when used as player indices.",
                "Also, −∞ can be replaced by a sufficiently negative number.",
                "Finally, δ and should be chosen to be very small (even compared to 2−(n+1) ), and should be more than twice as large as δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 for si+1 = ci+1 or si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − for si+1 = ai+1 and si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ for si+1 = ai+1 or si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ for all si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ for all si+1, si+2 when j > 1; • ui(θj i ; bi, si+1, si+2) = − for all si+1, si+2 when j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 for all si+1 when j > 1; • ui(θj i ; ci, si+1, si+2) = δ− for all si+1 and si+2 = ci+2 when j > 1.",
                "Let the distribution over each players types be given by p(θj i ) = 2−j (with the exception that p(θ2 i ) = 2−2 +2−(n+1) ).",
                "We will be interested in eliminating strategies of the following form: play bi for type θ1 i , and play one of bi or ci otherwise.",
                "Because the utility function is the same for any type θj i with j > 1, these strategies are effectively defined by the total probability that they place on ci,8 which is t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j where tj i = 1 if player i 8 Note that the strategies are still pure strategies; the probability placed on an action by a strategy here is simply the sum of the probabilities of the types for which the strategy chooses that action. plays ci for type θj i , and 0 otherwise.",
                "This probability is different for any two different strategies of the given form, and we have exponentially many different strategies of the given form.",
                "For any probability q which can be expressed as t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (with all tj ∈ {0, 1}), let σi(q) denote the (unique) strategy of the given form for player i which places a total probability of q on ci.",
                "Any strategy that plays ci for type θ1 i or ai for some type θj i with j > 1 can immediately be eliminated.",
                "We will show that, after that, we must eliminate the strategies σi(q) with high q first, slowly working down to those with lower q.",
                "Claim 1: If σi+1(q ) and σi+2(q ) have not yet been eliminated, and q < q , then σi(q) cannot yet be eliminated.",
                "Proof: First, we show that no strategy σi(q ) can eliminate σi(q).",
                "Against σi+1(q ), σi+2(q ), the utility of playing σi(p) is − + p · δ − p · q /2.",
                "Thus, when q = 0, it is best to set p as high as possible (and we note that σi+1(0) and σi+2(0) have not been eliminated), but when q > 0, it is best to set p as low as possible because δ < q /2.",
                "Thus, whether q > q or q < q , σi(q) will always do strictly better than σi(q ) against some remaining opponent strategies.",
                "Hence, no strategy σi(q ) can eliminate σi(q).",
                "The only other pure strategies that could dominate σi(q) are strategies that play ai for type θ1 i , and bi or ci for all other types.",
                "Let us take such a strategy and suppose that it plays c with probability p. Against σi+1(q ), σi+2(q ) (which have not yet been eliminated), the utility of playing this strategy is −(q )2 /2 − /2 + p · δ − p · q /2.",
                "On the other hand, playing σi(q) gives − + q · δ − q · q /2.",
                "Because q > q, we have −(q )2 /2 < −q · q /2, and because δ and are small, it follows that σi(q) receives a higher utility.",
                "Therefore, no strategy dominates σi(q), proving the claim.",
                "Claim 2: If for all q > q, σi+1(q ) and σi+2(q ) have been eliminated, then σi(q) can be eliminated.",
                "Proof: Consider the strategy for player i that plays ai for type θ1 i , and bi for all other types (call this strategy σi); we claim σi dominates σi(q).",
                "First, if either of the other players k plays ak for θ1 k, then σi performs better than σi(q) (which receives −∞ in some cases).",
                "Because the strategies for player k that play ck for type θ1 k, or ak for some type θj k with j > 1, have already been eliminated, all that remains to check is that σi performs better than σi(q) whenever both of the other two players play strategies of the following form: play bk for type θ1 k, and play one of bk or ck otherwise.",
                "We note that among these strategies, there are none left that place probability greater than q on ck.",
                "Letting qk denote the probability with which player k plays ck, the expected utility of playing σi is −qi+1 · qi+2/2 − /2.",
                "On the other hand, the utility of playing σi(q) is − + q · δ − q · qi+2/2.",
                "Because qi+1 ≤ q, the difference between these two expressions is at least /2 − δ, which is positive.",
                "It follows that σi dominates σi(q).",
                "From Claim 2, it follows that all strategies of the form σi(q) will eventually be eliminated.",
                "However, Claim 1 shows that we cannot go ahead and eliminate multiple such strategies for one player, unless at least one other player simultaneously keeps up in the eliminated strategies: every time a σi(q) is eliminated such that σi+1(q) and σi+2(q) have not yet been eliminated, we need to eliminate one of the latter two strategies before any σi(q ) with q > q can be eliminated-that is, we need to alternate between players.",
                "Because there are exponentially many strategies of the form σi(q), it follows that iterated elimination will require exponentially many iterations to complete. 96 It follows that an efficient algorithm for iterated <br>dominance</br> (strict or weak) by pure strategies in Bayesian games, if it exists, must somehow be able to perform (at least part of) many iterations in a single step of the algorithm (because if each step only performed a single iteration, we would need exponentially many steps).",
                "Interestingly, Knuth et al. [11] argue that iterated <br>dominance</br> appears to be an inherently sequential problem (in light of their result that iterated very weak <br>dominance</br> is P-complete, that is, apparently not efficiently parallelizable), suggesting that aggregating many iterations may be difficult. 7.",
                "CONCLUSIONS While the Nash equilibrium solution concept is studied more and more intensely in our community, the perhaps more elementary concept of (iterated) <br>dominance</br> has received much less attention.",
                "In this paper we studied various computational aspects of this concept.",
                "We first studied both strict and weak <br>dominance</br> (not iterated), and showed that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then moved on to iterated <br>dominance</br>.",
                "We showed that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak <br>dominance</br>.",
                "This allowed us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without <br>dominance</br> by mixed strategies. (A weaker version of the second result (only without <br>dominance</br> by mixed strategies) was already known [7].)",
                "Iterated strict <br>dominance</br>, on the other hand, is path-independent (both with and without <br>dominance</br> by mixed strategies) and can therefore be done in polynomial time.",
                "We then studied what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we showed that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak <br>dominance</br>).",
                "Then, we showed that iterated strict <br>dominance</br> becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict <br>dominance</br> under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we studied <br>dominance</br> and iterated <br>dominance</br> in Bayesian games, as an example of a concise representation language for normal form games that is interesting in its own right.",
                "We showed that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak <br>dominance</br>); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak <br>dominance</br>).",
                "Finally, we showed that iterated <br>dominance</br> using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak <br>dominance</br>).",
                "There are various avenues for future research.",
                "First, there is the open question of whether it is possible to complete iterated <br>dominance</br> in Bayesian games in polynomial time (even though we showed that an exponential number of alternations between the players in eliminating strategies is sometimes required).",
                "Second, we can study computational aspects of (iterated) <br>dominance</br> in concise representations of normal form games other than Bayesian games-for example, in graphical games [9] or local-effect/action graph games [12, 2]. (How to efficiently perform iterated very weak <br>dominance</br> has already been studied for partially observable stochastic games [8].)",
                "Finally, we can ask whether some of the algorithms we described (such as the one for iterated strict <br>dominance</br> with mixed strategies) can be made faster. 8.",
                "REFERENCES [1] Krzysztof R. Apt.",
                "Uniform proofs of order independence for various strategy elimination procedures.",
                "Contributions to Theoretical Economics, 4(1), 2004. [2] Nivan A. R. Bhat and Kevin Leyton-Brown.",
                "Computing Nash equilibria of action-graph games.",
                "In UAI, 2004. [3] Ben Blum, Christian R. Shelton, and Daphne Koller.",
                "A continuation method for Nash equilibria in structured games.",
                "In IJCAI, 2003. [4] Vincent Conitzer and Tuomas Sandholm.",
                "Complexity results about Nash equilibria.",
                "In IJCAI, pages 765-771, 2003. [5] Drew Fudenberg and Jean Tirole.",
                "Game Theory.",
                "MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "On the order of eliminating dominated strategies.",
                "Operations Research Letters, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "The complexity of eliminating dominated strategies.",
                "Mathematics of Operation Research, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein, and Shlomo Zilberstein.",
                "Dynamic programming for partially observable stochastic games.",
                "In AAAI, pages 709-715, 2004. [9] Michael Kearns, Michael Littman, and Satinder Singh.",
                "Graphical models for game theory.",
                "In UAI, 2001. [10] Leonid Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou, and John N Tsitsiklis.",
                "A note on strategy elimination in bimatrix games.",
                "Operations Research Letters, 7(3):103-107, 1988. [12] Kevin Leyton-Brown and Moshe Tennenholtz.",
                "Local-effect games.",
                "In IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [14] Michael Littman and Peter Stone.",
                "A polynomial-time Nash equilibrium algorithm for repeated games.",
                "In ACM-EC, pages 48-54, 2003. [15] Leslie M. Marx and Jeroen M. Swinkels.",
                "Order independence for iterated weak <br>dominance</br>.",
                "Games and Economic Behavior, 18:219-245, 1997. [16] Leslie M. Marx and Jeroen M. Swinkels.",
                "Corrigendum, order independence for iterated weak <br>dominance</br>.",
                "Games and Economic Behavior, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston, and Jerry R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [18] Roger Myerson.",
                "Game Theory: Analysis of Conflict.",
                "Harvard University Press, Cambridge, 1991. [19] Martin J Osborne and Ariel Rubinstein.",
                "A Course in Game Theory.",
                "MIT Press, 1994. [20] Christos Papadimitriou.",
                "Algorithms, games and the Internet.",
                "In STOC, pages 749-753, 2001. [21] Ryan Porter, Eugene Nudelman, and Yoav Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, 2004. 97"
            ],
            "original_annotated_samples": [
                "Complexity of (Iterated) <br>dominance</br>∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using <br>dominance</br> and iterated dominance.",
                "We first study both strict and weak <br>dominance</br> (not iterated), and show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then move on to iterated <br>dominance</br>.",
                "We show that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak <br>dominance</br>.",
                "Both of these results hold both with and without <br>dominance</br> by mixed strategies. (A weaker version of the second result (only without <br>dominance</br> by mixed strategies) was already known [7].)"
            ],
            "translated_annotated_samples": [
                "Estudiamos varios aspectos computacionales de la resolución de juegos utilizando la <br>dominancia</br> y la <br>dominancia</br> iterada.",
                "Primero estudiamos tanto la <br>dominancia</br> estricta como la débil (no iterada), y demostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta se puede hacer en tiempo polinómico utilizando la resolución de un único programa lineal.",
                "Luego pasamos a la <br>dominancia</br> iterada.",
                "Mostramos que determinar si existe algún camino que elimine una estrategia dada es NP-completo con <br>dominancia</br> débil iterada.",
                "Ambos resultados se mantienen tanto con como sin <br>dominancia</br> de estrategias mixtas. (Una versión más débil del segundo resultado (solo sin <br>dominancia</br> de estrategias mixtas) ya se conocía [7].)"
            ],
            "translated_text": "Estudiamos varios aspectos computacionales de la resolución de juegos utilizando la <br>dominancia</br> y la <br>dominancia</br> iterada. Primero estudiamos tanto la <br>dominancia</br> estricta como la débil (no iterada), y demostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta se puede hacer en tiempo polinómico utilizando la resolución de un único programa lineal. Luego pasamos a la <br>dominancia</br> iterada. Mostramos que determinar si existe algún camino que elimine una estrategia dada es NP-completo con <br>dominancia</br> débil iterada. Esto nos permite también demostrar que determinar si existe un camino que conduce a una solución única es NP-completo. Ambos resultados se mantienen tanto con como sin <br>dominancia</br> de estrategias mixtas. (Una versión más débil del segundo resultado (solo sin <br>dominancia</br> de estrategias mixtas) ya se conocía [7].) ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "elimination": {
            "translated_key": "eliminación",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Complexity of (Iterated) Dominance∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using dominance and iterated dominance.",
                "We first study both strict and weak dominance (not iterated), and show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then move on to iterated dominance.",
                "We show that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allows us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then study what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we show that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we show that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we study Bayesian games.",
                "We show that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak ∗ This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858, and a Sloan Fellowship. dominance).",
                "Finally, we show that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent systems with self-interested agents, the optimal action for one agent may depend on the actions taken by other agents.",
                "In such settings, the agents require tools from game theory to rationally decide on an action.",
                "Game theory offers various formal models of strategic settings-the best-known of which is a game in normal (or matrix) form, specifying a utility (payoff) for each agent for each combination of strategies that the agents choose-as well as solution concepts, which, given a game, specify which outcomes are reasonable (under various assumptions of rationality and common knowledge).",
                "Probably the best-known (and certainly the most-studied) solution concept is that of Nash equilibrium.",
                "A Nash equilibrium specifies a strategy for each player, in such a way that no player has an incentive to (unilaterally) deviate from the prescribed strategy.",
                "Recently, numerous papers have studied computing Nash equilibria in various settings [9, 4, 12, 3, 13, 14], and the complexity of constructing a Nash equilibrium in normal form games has been labeled one of the two most important open problems on the boundary of P today [20].",
                "The problem of computing solutions according to the perhaps more elementary solution concepts of dominance and iterated dominance has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the game theory community [7].1 ) A strategy strictly dominates another strategy if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one.",
                "The idea is that dominated strategies can be eliminated from consideration.",
                "In iterated dominance, the <br>elimination</br> proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating strategy no longer needs to perform better than or as well as the dominated strategy against opponent strategies that were eliminated in earlier rounds.",
                "Computing solutions according to (iterated) dominance is important for at least the following reasons: 1) it can be computationally easier than computing (for instance) a Nash equilibrium (and therefore it can be useful as a preprocessing step in computing a Nash equilibrium), and 2) (iterated) dominance requires a weaker rationality assumption on the players than (for instance) Nash equilibrium, and therefore solutions derived according to it are more likely to occur.",
                "In this paper, we study some fundamental computational questions concerning dominance and iterated dominance, including how hard it is to check whether a given strategy can be eliminated by each of the variants of these notions.",
                "The rest of the paper is organized as follows.",
                "In Section 2, we briefly review definitions and basic properties of normal form games, strict and weak dominance, and iterated strict and weak dominance.",
                "In the remaining sections, we study computational aspects of dominance and iterated dominance.",
                "In Section 3, we study one-shot (not iterated) dominance.",
                "In Section 4, we study iterated dominance.",
                "In Section 5, we study dominance and iterated dominance when the dominating strategy can only place probability on a few pure strategies.",
                "Finally, in Section 6, we study dominance and iterated dominance in Bayesian games. 2.",
                "DEFINITIONS AND BASIC PROPERTIES In this section, we briefly review normal form games, as well as dominance and iterated dominance (both strict and weak).",
                "An n-player normal form game is defined as follows.",
                "Definition 1.",
                "A normal form game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of pure strategies Σi and a utility function ui : Σ1 × Σ2 × . . . × Σn → R (where ui(σ1, σ2, . . . , σn) denotes player is utility when each player j plays action σj).",
                "The two main notions of dominance are defined as follows.",
                "Definition 2.",
                "Player is strategy σi is said to be strictly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "Player is strategy σi is said to be weakly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) ≥ ui(σi, σ−i), and for at least one vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "In this definition, it is sometimes allowed for the dominating strategy σi to be a mixed strategy, that is, a probability distribution over pure strategies.",
                "In this case, the utilities in dominance altogether.",
                "For example, simple dominance checks are sometimes used as a subroutine in searching for Nash equilibria [21]. the definition are the expected utilities.2 There are other notions of dominance, such as very weak dominance (in which no strict inequality is required, so two strategies can dominate each other), but we will not study them here.",
                "When we are looking at the dominance relations for player i, the other players (−i) can be thought of as a single player.3 Therefore, in the rest of the paper, when we study one-shot (not iterated) dominance, we will focus without loss of generality on two-player games.4 In two-player games, we will generally refer to the players as r (row) and c (column) rather than 1 and 2.",
                "In iterated dominance, dominated strategies are removed from the game, and no longer have any effect on future dominance relations.",
                "Iterated dominance can eliminate more strategies than dominance, as follows. σr may originally not dominate σr because the latter performs better against σc; but then, once σc is removed because it is dominated by σc, σr dominates σr, and the latter can be removed.",
                "For example, in the following game, R can be removed first, after which D is dominated.",
                "L R U 1, 1 0, 0 D 0, 1 1, 0 Either strict or weak dominance can be used in the definition of iterated dominance.",
                "We note that the process of iterated dominance is never helped by removing a dominated mixed strategy, for the following reason.",
                "If σi gives player i a higher utility than σi against mixed strategy σj for player j = i (and strategies σ−{i,j} for the other players), then for at least one pure strategy σj that σj places positive probability on, σi must perform better than σi against σj (and strategies σ−{i,j} for the other players).",
                "Thus, removing the mixed strategy σj does not introduce any new dominances.",
                "More detailed discussions and examples can be found in standard texts on microeconomics or game theory [17, 5].",
                "We are now ready to move on to the core of this paper. 3.",
                "DOMINANCE (NOT ITERATED) In this section, we study the notion of one-shot (not iterated) dominance.",
                "As a first observation, checking whether a given strategy is strictly (weakly) dominated by some pure strategy is straightforward, by checking, for every pure strategy for that player, whether the latter strategy performs strictly better against all the opponents strategies (at least as well against all the opponents strategies, and strictly 2 The dominated strategy σi is, of course, also allowed to be mixed, but this has no technical implications for the paper: when we study one-shot dominance, we ask whether a given strategy is dominated, and it does not matter whether the given strategy is pure or mixed; when we study iterated dominance, there is no use in eliminating mixed strategies, as we will see shortly. 3 This player may have a very large strategy space (one pure strategy for every vector of pure strategies for the players that are being replaced).",
                "Nevertheless, this will not result in an increase in our representation size, because the original representation already had to specify utilities for each of these vectors. 4 We note that a restriction to two-player games would not be without loss of generality for iterated dominance.",
                "This is because for iterated dominance, we need to look at the dominated strategies of each individual player, so we cannot merge any players. 89 better against at least one).5 Next, we show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time by solving a single linear program. (Similar linear programs have been given before [18]; we present the result here for completeness, and because we will build on the linear programs given below in Theorem 6.)",
                "Proposition 1.",
                "Given the row players utilities, a subset Dr of the row players pure strategies Σr, and a distinguished strategy σ∗ r for the row player, we can check in time polynomial in the size of the game (by solving a single linear program of polynomial size) whether there exists some mixed strategy σr, that places positive probability only on strategies in Dr and dominates σ∗ r , both for strict and for weak dominance.",
                "Proof.",
                "Let pdr be the probability that σr places on dr ∈ Dr. We will solve a single linear program in each of our algorithms; linear programs can be solved in polynomial time [10].",
                "For strict dominance, the question is whether the pdr can be set so that for every pure strategy for the column player σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc).",
                "Because the inequality must be strict, we cannot solve this directly by linear programming.",
                "We proceed as follows.",
                "Because the game is finite, we may assume without loss of generality that all utilities are positive (if not, simply add a constant to all utilities.)",
                "Solve the following linear program: minimize dr∈Dr pdr such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc).",
                "If σ∗ r is strictly dominated by some mixed strategy, this linear program has a solution with objective value < 1. (The dominating strategy is a feasible solution with objective value exactly 1.",
                "Because no constraint is binding for this solution, we can reduce one of the probabilities slightly without affecting feasibility, thereby obtaining a solution with objective value < 1.)",
                "Moreover, if this linear program has a solution with objective value < 1, there is a mixed strategy strictly dominating σ∗ r , which can be obtained by taking the LP solution and adding the remaining probability to any strategy (because all the utilities are positive, this will add to the left side of any inequality, so all inequalities will become strict).",
                "For weak dominance, we can solve the following linear program: maximize σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1.",
                "If σ∗ r is weakly dominated by some mixed strategy, then that mixed strategy is a feasible solution to this program with objective value > 0, because for at least one strategy σc ∈ Σc we have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0.",
                "On the other hand, if this program has a solution with objective value > 0, then for at least one strategy σc ∈ Σc we 5 Recall that the assumption of a single opponent (that is, the assumption of two players) is without loss of generality for one-shot dominance. must have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, and thus the linear programs solution is a weakly dominating mixed strategy. 4.",
                "ITERATED DOMINANCE We now move on to iterated dominance.",
                "It is well-known that iterated strict dominance is path-independent [6, 19]that is, if we remove dominated strategies until no more dominated strategies remain, in the end the remaining strategies for each player will be the same, regardless of the order in which strategies are removed.",
                "Because of this, to see whether a given strategy can be eliminated by iterated strict dominance, all that needs to be done is to repeatedly remove strategies that are strictly dominated, until no more dominated strategies remain.",
                "Because we can check in polynomial time whether any given strategy is dominated (whether or not dominance by mixed strategies is allowed, as described in Section 3), this whole procedure takes only polynomial time.",
                "In the case of iterated dominance by pure strategies with two players, Knuth et al. [11] slightly improve on (speed up) the straightforward implementation of this procedure by keeping track of, for each ordered pair of strategies for a player, the number of opponent strategies that prevent the first strategy from dominating the second.",
                "Hereby the runtime for an m × n game is reduced from O((m + n)4 ) to O((m + n)3 ). (Actually, they only study very weak dominance (for which no strict inequalities are required), but the approach is easily extended.)",
                "In contrast, iterated weak dominance is known to be pathdependent.6 For example, in the following game, using iterated weak dominance we can eliminate M first, and then D, or R first, and then U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Therefore, while the procedure of removing weakly dominated strategies until no more weakly dominated strategies remain can certainly be executed in polynomial time, which strategies survive in the end depends on the order in which we remove the dominated strategies.",
                "We will investigate two questions for iterated weak dominance: whether a given strategy is eliminated in some path, and whether there is a path to a unique solution (one pure strategy left per player).",
                "We will show that both of these problems are computationally hard.",
                "Definition 3.",
                "Given a game in normal form and a distinguished strategy σ∗ , IWD-STRATEGY-<br>elimination</br> asks whether there is some path of iterated weak dominance that eliminates σ∗ .",
                "Given a game in normal form, IWDUNIQUE-SOLUTION asks whether there is some path of iterated weak dominance that leads to a unique solution (one strategy left per player).",
                "The following lemma shows a special case of normal form games in which allowing for weak dominance by mixed strategies (in addition to weak dominance by pure strategies) does 6 There is, however, a restriction of weak dominance called nice weak dominance which is path-independent [15, 16].",
                "For an overview of path-independence results, see Apt [1]. 90 not help.",
                "We will prove the hardness results in this setting, so that they will hold whether or not dominance by mixed strategies is allowed.",
                "Lemma 1.",
                "Suppose that all the utilities in a game are in {0, 1}.",
                "Then every pure strategy that is weakly dominated by a mixed strategy is also weakly dominated by a pure strategy.",
                "Proof.",
                "Suppose pure strategy σ is weakly dominated by mixed strategy σ∗ .",
                "If σ gets a utility of 1 against some opponent strategy (or vector of opponent strategies if there are more than 2 players), then all the pure strategies that σ∗ places positive probability on must also get a utility of 1 against that opponent strategy (or else the expected utility would be smaller than 1).",
                "Moreover, at least one of the pure strategies that σ∗ places positive probability on must get a utility of 1 against an opponent strategy that σ gets 0 against (or else the inequality would never be strict).",
                "It follows that this pure strategy weakly dominates σ.",
                "We are now ready to prove the main results of this section.",
                "Theorem 1.",
                "IWD-STRATEGY-<br>elimination</br> is NPcomplete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can easily check whether this is a valid sequence of eliminations (even when dominance by mixed strategies is allowed, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following IWD-STRATEGY-<br>elimination</br> instance. (In this instance, we will specify that certain strategies are uneliminable.",
                "A strategy σr can be made uneliminable, even when 0 and 1 are the only allowed utilities, by adding another strategy σr and another opponent strategy σc, so that: 1. σr and σr are the only strategies that give the row player a utility of 1 against σc. 2. σr and σr always give the row player the same utility. 3. σc is the only strategy that gives the column player a utility of 1 against σr, but otherwise σc always gives the column player utility 0.",
                "This makes it impossible to eliminate any of these three strategies.",
                "We will not explicitly specify the additional strategies to make the proof more legible.)",
                "In this proof, we will denote row player strategies by s, and column player strategies by t, to improve legibility.",
                "Let the row players pure strategy set be given as follows.",
                "For every variable v ∈ V , the row player has corresponding strategies s1 +v, s2 +v, s1 −v, s2 −v.",
                "Additionally, the row player has the following 2 strategies: s1 0 and s2 0, where s2 0 = σ∗ r (that is, it is the strategy we seek to eliminate).",
                "Finally, for every clause c ∈ C, the row player has corresponding strategies s1 c (uneliminable) and s2 c. Let the column players pure strategy set be given as follows.",
                "For every variable v ∈ V , the column player has a corresponding strategy tv.",
                "For every clause c ∈ C, the column player has a corresponding strategy tc, and additionally, for every literal l ∈ L that occurs in c, a strategy tc,l.",
                "For every variable v ∈ V , the column player has corresponding strategies t+v, t−v (both uneliminable).",
                "Finally, the column player has three additional strategies: t1 0 (uneliminable), t2 0, and t1.",
                "The utility function for the row player is given as follows: • ur(s1 +v, tv) = 0 for all v ∈ V ; • ur(s2 +v, tv) = 1 for all v ∈ V ; • ur(s1 −v, tv) = 1 for all v ∈ V ; • ur(s2 −v, tv) = 0 for all v ∈ V ; • ur(s1 +v, t1) = 1 for all v ∈ V ; • ur(s2 +v, t1) = 0 for all v ∈ V ; • ur(s1 −v, t1) = 0 for all v ∈ V ; • ur(s2 −v, t1) = 1 for all v ∈ V ; • ur(sb +v, t+v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sb −v, t−v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sl, t) = 0 otherwise for all l ∈ L and t ∈ S2; • ur(s1 0, tc) = 0 for all c ∈ C; • ur(s2 0, tc) = 1 for all c ∈ C; • ur(sb 0, t1 0) = 1 for all b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 otherwise for all b ∈ {1, 2} and t ∈ S2; • ur(sb c, t) = 0 otherwise for all c ∈ C and b ∈ {1, 2}; and the row players utility is 0 in every other case.",
                "The utility function for the column player is given as follows: • uc(s, tv) = 0 for all v ∈ V and s ∈ S1; • uc(s, t1) = 0 for all s ∈ S1; • uc(s2 l , tc) = 1 for all c ∈ C and l ∈ L where l ∈ c (literal l occurs in clause c); • uc(s2 l2 , tc,l1 ) = 1 for all c ∈ C and l1, l2 ∈ L, l1 = l2 where l2 ∈ c; • uc(s1 c, tc) = 1 for all c ∈ C; • uc(s2 c, tc) = 0 for all c ∈ C; • uc(sb c, tc,l) = 1 for all c ∈ C, l ∈ L, and b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 otherwise for all c ∈ C and l ∈ L; and the column players utility is 0 in every other case.",
                "We now show that the two instances are equivalent.",
                "First, suppose there is a solution to the satisfiability instance: that is, a truth-value assignment to the variables in V such that all clauses are satisfied.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the assignment, eliminate tv (which gives the column player utility 0 everywhere). 2.",
                "Then, for every variable v that is set to true in the assignment, eliminate s2 +v using s1 +v (which is possible because tv has been eliminated, and because t1 has not been eliminated (yet)). 3.",
                "Now eliminate t1 (which gives the column player utility 0 everywhere). 4.",
                "Next, for every variable v that is set to false in the assignment, eliminate s2 −v using s1 −v (which is possible because t1 has been eliminated, and because tv has not been eliminated (yet)). 5.",
                "For every clause c which has the variable corresponding to one of its positive literals l = +v set to true in the assignment, eliminate tc using tc,l (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 6.",
                "For every clause c which has the variable corresponding to one of its negative literals l = −v set to false in the assignment, eliminate tc using tc,l 91 (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 7.",
                "Because the assignment satisfied the formula, all the tc have now been eliminated.",
                "Thus, we can eliminate s2 0 = σ∗ r using s1 0.",
                "It follows that there is a solution to the IWD-STRATEGY-<br>elimination</br> instance.",
                "Now suppose there is a solution to the IWD-STRATEGYELIMINATION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We first observe that only s1 0 can eliminate s2 0 = σ∗ r , because it is the only other strategy that gets the row player a utility of 1 against t1 0, and t1 0 is uneliminable.",
                "However, because s2 0 performs better than s1 0 against the tc strategies, it follows that all of the tc strategies must be eliminated.",
                "For each c ∈ C, the strategy tc can only be eliminated by one of the strategies tc,l (with the same c), because these are the only other strategies that get the column player a utility of 1 against s1 c, and s1 c is uneliminable.",
                "But, in order for some tc,l to eliminate tc, s2 l must be eliminated first.",
                "Only s1 l can eliminate s2 l , because it is the only other strategy that gets the row player a utility of 1 against tl, and tl is uneliminable.",
                "We next show that for every v ∈ V only one of s2 +v, s2 −v can be eliminated.",
                "This is because in order for s1 +v to eliminate s2 +v, tv needs to have been eliminated and t1, not (so tv must be eliminated before t1); but in order for s1 −v to eliminate s2 −v, t1 needs to have been eliminated and tv, not (so t1 must be eliminated before tv).",
                "So, set v to true if s2 +v is eliminated, and to false otherwise Because by the above, for every clause c, one of the s2 l with l ∈ c must be eliminated, it follows that this is a satisfying assignment to the satisfiability instance.",
                "Using Theorem 1, it is now (relatively) easy to show that IWD-UNIQUE-SOLUTION is also NP-complete under the same restrictions.",
                "Theorem 2.",
                "IWD-UNIQUE-SOLUTION is NP-complete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "Again, the problem is in NP because we can nondeterministically choose the sequence of eliminations and verify whether it is correct.",
                "To show NP-hardness, we reduce an arbitrary IWD-STRATEGY-<br>elimination</br> instance to the following IWD-UNIQUE-SOLUTION instance.",
                "Let all the strategies for each player from the original instance remain part of the new instance, and let the utilities resulting from the players playing a pair of these strategies be the same.",
                "We add three additional strategies σ1 r , σ2 r , σ3 r for the row player, and three additional strategies σ1 c , σ2 c , σ3 c for the column player.",
                "Let the additional utilities be as follows: • ur(σr, σj c) = 1 for all σr /∈ {σ1 r , σ2 r , σ3 r } and j ∈ {2, 3}; • ur(σi r, σc) = 1 for all i ∈ {1, 2, 3} and σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 for all i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • and the row players utility is 0 in all other cases involving a new strategy. • uc(σ3 r , σc) = 1 for all σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 for all j ∈ {2, 3} (σ∗ r is the strategy to be eliminated in the original instance); • uc(σi r, σ1 c ) = 1 for all i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • and the column players utility is 0 in all other cases involving a new strategy.",
                "We proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the original IWDSTRATEGY-<br>elimination</br> instance.",
                "Then, perform the same sequence of eliminations to eliminate σ∗ r in the new IWD-UNIQUE-SOLUTION instance. (This is possible because at any stage, any weak dominance for the row player in the original instance is still a weak dominance in the new instance, because the two strategies utilities for the row player are the same when the column player plays one of the new strategies; and the same is true for the column player.)",
                "Once σ∗ r is eliminated, let σ1 c eliminate σ2 c . (It performs better against σ2 r .)",
                "Then, let σ1 r eliminate all the other remaining strategies for the row player. (It always performs better against either σ1 c or σ3 c .)",
                "Finally, σ1 c is the unique best response against σ1 r among the column players remaining strategies, so let it eliminate all the other remaining strategies for the column player.",
                "Thus, there exists a solution to the IWD-UNIQUE-SOLUTION instance.",
                "Now suppose there exists a solution to the IWD-UNIQUESOLUTION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We will show that none of the new strategies (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) can either eliminate another strategy, or be eliminated before σ∗ r is eliminated.",
                "Thus, there must be a sequence of eliminations ending in the <br>elimination</br> of σ∗ r , which does not involve any of the new strategies, and is therefore a valid sequence of eliminations in the original game (because all original strategies perform the same against each new strategy).",
                "We now show that this is true by exhausting all possibilities for the first <br>elimination</br> before σ∗ r is eliminated that involves a new strategy.",
                "None of the σi r can be eliminated by a σr /∈ {σ1 r , σ2 r , σ3 r }, because the σi r perform better against σ1 c . σ1 r cannot eliminate any other strategy, because it always performs poorer against σ2 c . σ2 r and σ3 r are equivalent from the row players perspective (and thus cannot eliminate each other), and cannot eliminate any other strategy because they always perform poorer against σ3 c .",
                "None of the σj c can be eliminated by a σc /∈ {σ1 c , σ2 c , σ3 c }, because the σj c always perform better against either σ1 r or σ2 r . σ1 c cannot eliminate any other strategy, because it always performs poorer against either σ∗ r or σ3 r . σ2 c cannot eliminate any other strategy, because it always performs poorer against σ2 r or σ3 r . σ3 c cannot eliminate any other strategy, because it always performs poorer against σ1 r or σ3 r .",
                "Thus, there exists a solution to the IWDSTRATEGY-<br>elimination</br> instance.",
                "A slightly weaker version of the part of Theorem 2 concerning dominance by pure strategies only is the main result of Gilboa et al. [7]. (Besides not proving the result for dominance by mixed strategies, the original result was weaker because it required utilities {0, 1, 2, 3, 4, 5, 6, 7, 8} rather than just {0, 1} (and because of this, our Lemma 1 cannot be applied to it to get the result for mixed strategies).) 5. (ITERATED) DOMINANCE USING MIXED STRATEGIES WITH SMALL SUPPORTS When showing that a strategy is dominated by a mixed strategy, there are several reasons to prefer exhibiting a 92 dominating strategy that places positive probability on as few pure strategies as possible.",
                "First, this will reduce the number of bits required to specify the dominating strategy (and thus the proof of dominance can be communicated quicker): if the dominating mixed strategy places positive probability on only k strategies, then it can be specified using k real numbers for the probabilities, plus k log m (where m is the number of strategies for the player under consideration) bits to indicate which strategies are used.",
                "Second, the proof of dominance will be cleaner: for a dominating mixed strategy, it is typically (always in the case of strict dominance) possible to spread some of the probability onto any unused pure strategy and still have a dominating strategy, but this obscures which pure strategies are the ones that are key in making the mixed strategy dominating.",
                "Third, because (by the previous) the argument for eliminating the dominated strategy is simpler and easier to understand, it is more likely to be accepted.",
                "Fourth, the level of risk neutrality required for the argument to work is reduced, at least in the extreme case where dominance by a single pure strategy can be exhibited (no risk neutrality is required here).",
                "This motivates the following problem.",
                "Definition 4 (MINIMUM-DOMINATING-SET).",
                "We are given the row players utilities of a game in normal form, a distinguished strategy σ∗ for the row player, a specification of whether the dominance should be strict or weak, and a number k. We are asked whether there exists a mixed strategy σ for the row player that places positive probability on at most k pure strategies, and dominates σ∗ in the required sense.",
                "Unfortunately, this problem is NP-complete.",
                "Theorem 3.",
                "MINIMUM-DOMINATING-SET is NPcomplete, both for strict and for weak dominance.",
                "Proof.",
                "The problem is in NP because we can nondeterministically choose a set of at most k strategies to give positive probability, and decide whether we can dominate σ∗ with these k strategies as described in Proposition 1.",
                "To show NP-hardness, we reduce an arbitrary SET-COVER instance (given a set S, subsets S1, S2, . . . , Sr, and a number t, can all of S be covered by at most t of the subsets?) to the following MINIMUM-DOMINATING-SET instance.",
                "For every element s ∈ S, there is a pure strategy σs for the column player.",
                "For every subset Si, there is a pure strategy σSi for the row player.",
                "Finally, there is the distinguished pure strategy σ∗ for the row player.",
                "The row players utilities are as follows: ur(σSi , σs) = t + 1 if s ∈ Si; ur(σSi , σs) = 0 if s /∈ Si; ur(σ∗ , σs) = 1 for all s ∈ S. Finally, we let k = t. We now proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the SET-COVER instance.",
                "Without loss of generality, we can assume that there are exactly k subsets in the cover.",
                "Then, for every Si that is in the cover, let the dominating strategy σ place exactly 1 k probability on the corresponding pure strategy σSi .",
                "Now, if we let n(s) be the number of subsets in the cover containing s (we observe that that n(s) ≥ 1), then for every strategy σs for the column player, the row players expected utility for playing σ when the column player is playing σs is u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs).",
                "So σ strictly (and thus also weakly) dominates σ∗ , and there exists a solution to the MINIMUM-DOMINATING-SET instance.",
                "Now suppose there exists a solution to the MINIMUMDOMINATING-SET instance.",
                "Consider the (at most k) pure strategies of the form σSi on which the dominating mixed strategy σ places positive probability, and let T be the collection of the corresponding subsets Si.",
                "We claim that T is a cover.",
                "For suppose there is some s ∈ S that is not in any of the subsets in T .",
                "Then, if the column player plays σs, the row player (when playing σ) will always receive utility 0-as opposed to the utility of 1 the row player would receive for playing σ∗ , contradicting the fact that σ dominates σ∗ (whether this dominance is weak or strict).",
                "It follows that there exists a solution to the SET-COVER instance.",
                "On the other hand, if we require that the dominating strategy only places positive probability on a very small number of pure strategies, then it once again becomes easy to check whether a strategy is dominated.",
                "Specifically, to find out whether player is strategy σ∗ is dominated by a strategy that places positive probability on only k pure strategies, we can simply check, for every subset of k of player is pure strategies, whether there is a strategy that places positive probability only on these k strategies and dominates σ∗ , using Proposition 1.",
                "This requires only O(|Σi|k ) such checks.",
                "Thus, if k is a constant, this constitutes a polynomial-time algorithm.",
                "A natural question to ask next is whether iterated strict dominance remains computationally easy when dominating strategies are required to place positive probability on at most k pure strategies, where k is a small constant. (We have already shown in Section 4 that iterated weak dominance is hard even when k = 1, that is, only dominance by pure strategies is allowed.)",
                "Of course, if iterated strict dominance were path-independent under this restriction, computational easiness would follow as it did in Section 4.",
                "However, it turns out that this is not the case.",
                "Observation 1.",
                "If we restrict the dominating strategies to place positive probability on at most two pure strategies, iterated strict dominance becomes path-dependent.",
                "Proof.",
                "Consider the following game: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Let (i, j) denote the outcome in which the row player plays the ith row and the column player plays the jth column.",
                "Because (1, 1), (2, 2), and (4, 3) are all Nash equilibria, none of the column players pure strategies will ever be eliminated, and neither will rows 1, 2, and 4.",
                "We now observe that randomizing uniformly over rows 1 and 2 dominates row 3, and randomizing uniformly over rows 3 and 4 dominates row 5.",
                "However, if we eliminate row 3 first, it becomes impossible to dominate row 5 without randomizing over at least 3 pure strategies.",
                "Indeed, iterated strict dominance turns out to be hard even when k = 3.",
                "Theorem 4.",
                "If we restrict the dominating strategies to place positive probability on at most three pure strategies, it becomes NP-complete to decide whether a given strategy can be eliminated using iterated strict dominance. 93 Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can check in polynomial time whether this is a valid sequence of eliminations (for any strategy to be eliminated, we can check, for every subset of three other strategies, whether there is a strategy placing positive probability on only these three strategies that dominates the strategy to be eliminated, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following two-player game.",
                "For every variable v ∈ V , the row player has strategies s+v, s−v, s1 v, s2 v, s3 v, s4 v, and the column player has strategies t1 v, t2 v, t3 v, t4 v. For every clause c ∈ C, the row player has a strategy sc, and the column player has a strategy tc, as well as, for every literal l occurring in c, an additional strategy tl c. The row player has two additional strategies s1 and s2. (s2 is the strategy that we are seeking to eliminate.)",
                "Finally, the column player has one additional strategy t1.",
                "The utility function for the row player is given as follows (where is some sufficiently small number): • ur(s+v, tj v) = 4 if j ∈ {1, 2}, for all v ∈ V ; • ur(s+v, tj v) = 1 if j ∈ {3, 4}, for all v ∈ V ; • ur(s−v, tj v) = 1 if j ∈ {1, 2}, for all v ∈ V ; • ur(s−v, tj v) = 4 if j ∈ {3, 4}, for all v ∈ V ; • ur(s+v, t) = ur(s−v, t) = 0 for all v ∈ V and t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 for all v ∈ V and i ∈ {1, 2, 3, 4}; • ur(si v, t) = for all v ∈ V , i ∈ {1, 2, 3, 4}, and t = ti v; • ur(sc, tc) = 2 for all c ∈ C; • ur(sc, t) = 0 for all c ∈ C and t = tc; • ur(s1, t1) = 1 + ; • ur(s1, t) = for all t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 for all c ∈ C; • ur(s2, t) = 0 for all t /∈ {t1} ∪ {tc : c ∈ C}.",
                "The utility function for the column player is given as follows: • uc(si v, ti v) = 1 for all v ∈ V and i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 for all v ∈ V , i ∈ {1, 2, 3, 4}, and s = si v; • uc(sc, tc) = 1 for all c ∈ C; • uc(sl, tc) = 1 for all c ∈ C and l ∈ L occurring in c; • uc(s, tc) = 0 for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + for all c ∈ C; • uc(sl , tl c) = 1 + for all c ∈ C and l = l occurring in c; • uc(s, tl c) = for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c, l = l }; • uc(s2, t1) = 1; • uc(s, t1) = 0 for all s = s2.",
                "We now show that the two instances are equivalent.",
                "First, suppose that there is a solution to the satisfiability instance.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the satisfying assignment, eliminate s+v with the mixed strategy σr that places probability 1/3 on s−v, probability 1/3 on s1 v, and probability 1/3 on s2 v. (The expected utility of playing σr against t1 v or t2 v is 14/3 > 4; against t3 v or t4 v, it is 4/3 > 1; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 2.",
                "Similarly, for every variable v that is set to false in the satisfying assignment, eliminate s−v with the mixed strategy σr that places probability 1/3 on s+v, probability 1/3 on s3 v, and probability 1/3 on s4 v. (The expected utility of playing σr against t1 v or t2 v is 4/3 > 1; against t3 v or t4 v, it is 14/3 > 4; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 3.",
                "For every c ∈ C, eliminate tc with any tl c for which l was set to true in the satisfying assignment. (This is a valid dominance because tl c performs better than tc against any strategy other than sl, and we eliminated sl in step 1 or in step 2.) 4.",
                "Finally, eliminate s2 with s1. (This is a valid dominance because s1 performs better than s2 against any strategy other than those in {tc : c ∈ C}, which we eliminated in step 3.)",
                "Hence, there is an <br>elimination</br> path that eliminates s2.",
                "Now, suppose that there is an <br>elimination</br> path that eliminates s2.",
                "The strategy that eventually dominates s2 must place most of its probability on s1, because s1 is the only other strategy that performs well against t1, which cannot be eliminated before s2.",
                "But, s1 performs significantly worse than s2 against any strategy tc with c ∈ C, so it follows that all these strategies must be eliminated first.",
                "Each strategy tc can only be eliminated by a strategy that places most of its weight on the corresponding strategies tl c with l ∈ c, because they are the only other strategies that perform well against sc, which cannot be eliminated before tc.",
                "But, each strategy tl c performs significantly worse than tc against sl, so it follows that for every clause c, for one of the literals l occurring in it, sl must be eliminated first.",
                "Now, strategies of the form tj v will never be eliminated because they are the unique best responses to the corresponding strategies sj v (which are, in turn, the best responses to the corresponding tj v).",
                "As a result, if strategy s+v (respectively, s−v) is eliminated, then its opposite strategy s−v (respectively, s+v) can no longer be eliminated, for the following reason.",
                "There is no other pure strategy remaining that gets a significant utility against more than one of the strategies t1 v, t2 v, t3 v, t4 v, but s−v (respectively, s+v) gets significant utility against all 4, and therefore cannot be dominated by a mixed strategy placing positive probability on at most 3 strategies.",
                "It follows that for each v ∈ V , at most one of the strategies s+v, s−v is eliminated, in such a way that for every clause c, for one of the literals l occurring in it, sl must be eliminated.",
                "But then setting all the literals l such that sl is eliminated to true constitutes a solution to the satisfiability instance.",
                "In the next section, we return to the setting where there is no restriction on the number of pure strategies on which a dominating mixed strategy can place positive probability. 6. (ITERATED) DOMINANCE IN BAYESIAN GAMES So far, we have focused on normal form games that are flatly represented (that is, every matrix entry is given ex94 plicitly).",
                "However, for many games, the flat representation is too large to write down explicitly, and instead, some representation that exploits the structure of the game needs to be used.",
                "Bayesian games, besides being of interest in their own right, can be thought of as a useful structured representation of normal form games, and we will study them in this section.",
                "In a Bayesian game, each player first receives privately held preference information (the players type) from a distribution, which determines the utility that that player receives for every outcome of (that is, vector of actions played in) the game.",
                "After receiving this type, the player plays an action based on it.7 Definition 5.",
                "A Bayesian game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of actions Ai, a (finite) type space Θi with a probability distribution πi over it, and a utility function ui : Θi × A1 × A2 × . . . × An → R (where ui(θi, a1, a2, . . . , an) denotes player is utility when is type is θi and each player j plays action aj).",
                "A pure strategy in a Bayesian game is a mapping from types to actions, σi : Θi → Ai, where σi(θi) denotes the action that player i plays for type θi.",
                "Any vector of pure strategies in a Bayesian game defines an (expected) utility for each player, and therefore we can translate a Bayesian game into a normal form game.",
                "In this normal form game, the notions of dominance and iterated dominance are defined as before.",
                "However, the normal form representation of the game is exponentially larger than the Bayesian representation, because each player i has |Ai||Θi| distinct pure strategies.",
                "Thus, any algorithm for Bayesian games that relies on expanding the game to its normal form will require exponential time.",
                "Specifically, our easiness results for normal form games do not directly transfer to this setting.",
                "In fact, it turns out that checking whether a strategy is dominated by a pure strategy is hard in Bayesian games.",
                "Theorem 5.",
                "In a Bayesian game, it is NP-complete to decide whether a given pure strategy σr : Θr → Ar is dominated by some other pure strategy (both for strict and weak dominance), even when the row players distribution over types is uniform.",
                "Proof.",
                "The problem is in NP because it is easy to verify whether a candidate dominating strategy is indeed a dominating strategy.",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a set of clauses C using variables from V ) to the following Bayesian game.",
                "Let the row players action set be Ar = {t, f, 0} and let the column players action set be Ac = {ac : c ∈ C}.",
                "Let the row players type set be Θr = {θv : v ∈ V }, with a distribution πr that is uniform.",
                "Let the row players utility function be as follows: • ur(θv, 0, ac) = 0 for all v ∈ V and c ∈ C; • ur(θv, b, ac) = |V | for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b satisfies c; • ur(θv, b, ac) = −1 for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b does not satisfy c. 7 In general, a player can also receive a signal about the other players preferences, but we will not concern ourselves with that here.",
                "Let the pure strategy to be dominated be the one that plays 0 for every type.",
                "We show that the strategy is dominated by a pure strategy if and only if there is a solution to the satisfiability instance.",
                "First, suppose there is a solution to the satisfiability instance.",
                "Then, let σd r be given by: σd r (θv) = t if v is set to true in the solution to the satisfiability instance, and σd r (θv) = f otherwise.",
                "Then, against any action ac by the column player, there is at least one type θv such that either +v ∈ c and σd r (θv) = t, or −v ∈ c and σd r (θv) = f. Thus, the row players expected utility against action ac is at least |V | |V | − |V |−1 |V | = 1 |V | > 0.",
                "So, σd r is a dominating strategy.",
                "Now, suppose there is a dominating pure strategy σd r .",
                "This dominating strategy must play t or f for at least one type.",
                "Thus, against any ac by the column player, there must at least be some type θv for which ur(θv, σd r (θv), ac) > 0.",
                "That is, there must be at least one variable v such that setting v to σd r (θv) satifies c. But then, setting each v to σd r (θv) must satisfy all the clauses.",
                "So a satisfying assignment exists.",
                "However, it turns out that we can modify the linear programs from Proposition 1 to obtain a polynomial time algorithm for checking whether a strategy is dominated by a mixed strategy in Bayesian games.",
                "Theorem 6.",
                "In a Bayesian game, it can be decided in polynomial time whether a given (possibly mixed) strategy σr is dominated by some other mixed strategy, using linear programming (both for strict and weak dominance).",
                "Proof.",
                "We can modify the linear programs presented in Proposition 1 as follows.",
                "For strict dominance, again assuming without loss of generality that all the utilities in the game are positive, use the following linear program (in which pσr r (θr, ar) is the probability that σr, the strategy to be dominated, places on ar for type θr): minimize θr∈Θr ar∈Ar pr(ar) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1.",
                "Assuming that π(θr) > 0 for all θr ∈ Θr, this program will return an objective value smaller than |Θr| if and only if σr is strictly dominated, by reasoning similar to that done in Proposition 1.",
                "For weak dominance, use the following linear program: maximize ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) = 1.",
                "This program will return an objective value greater than 0 if and only if σr is weakly dominated, by reasoning similar to that done in Proposition 1.",
                "We now turn to iterated dominance in Bayesian games.",
                "Na¨ıvely, one might argue that iterated dominance in Bayesian 95 games always requires an exponential number of steps when a significant fraction of the games pure strategies can be eliminated, because there are exponentially many pure strategies.",
                "However, this is not a very strong argument because oftentimes we can eliminate exponentially many pure strategies in one step.",
                "For example, if for some type θr ∈ Θr we have, for all ac ∈ Ac, that u(θr, a1 r, ac) > u(θr, a2 r, ac), then any pure strategy for the row player which plays action a2 r for type θr is dominated (by the strategy that plays action a1 r for type θr instead)-and there are exponentially many (|Ar||Θr|−1 ) such strategies.",
                "It is therefore conceivable that we need only polynomially many eliminations of collections of a players strategies.",
                "However, the following theorem shows that this is not the case, by giving an example where an exponential number of iterations (that is, alternations between the players in eliminating strategies) is required. (We emphasize that this is not a result about computational complexity.)",
                "Theorem 7.",
                "Even in symmetric 3-player Bayesian games, iterated dominance by pure strategies can require an exponential number of iterations (both for strict and weak dominance), even with only three actions per player.",
                "Proof.",
                "Let each player i ∈ {1, 2, 3} have n + 1 types θ1 i , θ2 i , . . . , θn+1 i .",
                "Let each player i have 3 actions ai, bi, ci, and let the utility function of each player be defined as follows. (In the below, i + 1 and i + 2 are shorthand for i + 1(mod 3) and i + 2(mod 3) when used as player indices.",
                "Also, −∞ can be replaced by a sufficiently negative number.",
                "Finally, δ and should be chosen to be very small (even compared to 2−(n+1) ), and should be more than twice as large as δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 for si+1 = ci+1 or si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − for si+1 = ai+1 and si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ for si+1 = ai+1 or si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ for all si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ for all si+1, si+2 when j > 1; • ui(θj i ; bi, si+1, si+2) = − for all si+1, si+2 when j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 for all si+1 when j > 1; • ui(θj i ; ci, si+1, si+2) = δ− for all si+1 and si+2 = ci+2 when j > 1.",
                "Let the distribution over each players types be given by p(θj i ) = 2−j (with the exception that p(θ2 i ) = 2−2 +2−(n+1) ).",
                "We will be interested in eliminating strategies of the following form: play bi for type θ1 i , and play one of bi or ci otherwise.",
                "Because the utility function is the same for any type θj i with j > 1, these strategies are effectively defined by the total probability that they place on ci,8 which is t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j where tj i = 1 if player i 8 Note that the strategies are still pure strategies; the probability placed on an action by a strategy here is simply the sum of the probabilities of the types for which the strategy chooses that action. plays ci for type θj i , and 0 otherwise.",
                "This probability is different for any two different strategies of the given form, and we have exponentially many different strategies of the given form.",
                "For any probability q which can be expressed as t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (with all tj ∈ {0, 1}), let σi(q) denote the (unique) strategy of the given form for player i which places a total probability of q on ci.",
                "Any strategy that plays ci for type θ1 i or ai for some type θj i with j > 1 can immediately be eliminated.",
                "We will show that, after that, we must eliminate the strategies σi(q) with high q first, slowly working down to those with lower q.",
                "Claim 1: If σi+1(q ) and σi+2(q ) have not yet been eliminated, and q < q , then σi(q) cannot yet be eliminated.",
                "Proof: First, we show that no strategy σi(q ) can eliminate σi(q).",
                "Against σi+1(q ), σi+2(q ), the utility of playing σi(p) is − + p · δ − p · q /2.",
                "Thus, when q = 0, it is best to set p as high as possible (and we note that σi+1(0) and σi+2(0) have not been eliminated), but when q > 0, it is best to set p as low as possible because δ < q /2.",
                "Thus, whether q > q or q < q , σi(q) will always do strictly better than σi(q ) against some remaining opponent strategies.",
                "Hence, no strategy σi(q ) can eliminate σi(q).",
                "The only other pure strategies that could dominate σi(q) are strategies that play ai for type θ1 i , and bi or ci for all other types.",
                "Let us take such a strategy and suppose that it plays c with probability p. Against σi+1(q ), σi+2(q ) (which have not yet been eliminated), the utility of playing this strategy is −(q )2 /2 − /2 + p · δ − p · q /2.",
                "On the other hand, playing σi(q) gives − + q · δ − q · q /2.",
                "Because q > q, we have −(q )2 /2 < −q · q /2, and because δ and are small, it follows that σi(q) receives a higher utility.",
                "Therefore, no strategy dominates σi(q), proving the claim.",
                "Claim 2: If for all q > q, σi+1(q ) and σi+2(q ) have been eliminated, then σi(q) can be eliminated.",
                "Proof: Consider the strategy for player i that plays ai for type θ1 i , and bi for all other types (call this strategy σi); we claim σi dominates σi(q).",
                "First, if either of the other players k plays ak for θ1 k, then σi performs better than σi(q) (which receives −∞ in some cases).",
                "Because the strategies for player k that play ck for type θ1 k, or ak for some type θj k with j > 1, have already been eliminated, all that remains to check is that σi performs better than σi(q) whenever both of the other two players play strategies of the following form: play bk for type θ1 k, and play one of bk or ck otherwise.",
                "We note that among these strategies, there are none left that place probability greater than q on ck.",
                "Letting qk denote the probability with which player k plays ck, the expected utility of playing σi is −qi+1 · qi+2/2 − /2.",
                "On the other hand, the utility of playing σi(q) is − + q · δ − q · qi+2/2.",
                "Because qi+1 ≤ q, the difference between these two expressions is at least /2 − δ, which is positive.",
                "It follows that σi dominates σi(q).",
                "From Claim 2, it follows that all strategies of the form σi(q) will eventually be eliminated.",
                "However, Claim 1 shows that we cannot go ahead and eliminate multiple such strategies for one player, unless at least one other player simultaneously keeps up in the eliminated strategies: every time a σi(q) is eliminated such that σi+1(q) and σi+2(q) have not yet been eliminated, we need to eliminate one of the latter two strategies before any σi(q ) with q > q can be eliminated-that is, we need to alternate between players.",
                "Because there are exponentially many strategies of the form σi(q), it follows that iterated <br>elimination</br> will require exponentially many iterations to complete. 96 It follows that an efficient algorithm for iterated dominance (strict or weak) by pure strategies in Bayesian games, if it exists, must somehow be able to perform (at least part of) many iterations in a single step of the algorithm (because if each step only performed a single iteration, we would need exponentially many steps).",
                "Interestingly, Knuth et al. [11] argue that iterated dominance appears to be an inherently sequential problem (in light of their result that iterated very weak dominance is P-complete, that is, apparently not efficiently parallelizable), suggesting that aggregating many iterations may be difficult. 7.",
                "CONCLUSIONS While the Nash equilibrium solution concept is studied more and more intensely in our community, the perhaps more elementary concept of (iterated) dominance has received much less attention.",
                "In this paper we studied various computational aspects of this concept.",
                "We first studied both strict and weak dominance (not iterated), and showed that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then moved on to iterated dominance.",
                "We showed that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allowed us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then studied what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we showed that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we showed that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we studied dominance and iterated dominance in Bayesian games, as an example of a concise representation language for normal form games that is interesting in its own right.",
                "We showed that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak dominance).",
                "Finally, we showed that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "There are various avenues for future research.",
                "First, there is the open question of whether it is possible to complete iterated dominance in Bayesian games in polynomial time (even though we showed that an exponential number of alternations between the players in eliminating strategies is sometimes required).",
                "Second, we can study computational aspects of (iterated) dominance in concise representations of normal form games other than Bayesian games-for example, in graphical games [9] or local-effect/action graph games [12, 2]. (How to efficiently perform iterated very weak dominance has already been studied for partially observable stochastic games [8].)",
                "Finally, we can ask whether some of the algorithms we described (such as the one for iterated strict dominance with mixed strategies) can be made faster. 8.",
                "REFERENCES [1] Krzysztof R. Apt.",
                "Uniform proofs of order independence for various strategy <br>elimination</br> procedures.",
                "Contributions to Theoretical Economics, 4(1), 2004. [2] Nivan A. R. Bhat and Kevin Leyton-Brown.",
                "Computing Nash equilibria of action-graph games.",
                "In UAI, 2004. [3] Ben Blum, Christian R. Shelton, and Daphne Koller.",
                "A continuation method for Nash equilibria in structured games.",
                "In IJCAI, 2003. [4] Vincent Conitzer and Tuomas Sandholm.",
                "Complexity results about Nash equilibria.",
                "In IJCAI, pages 765-771, 2003. [5] Drew Fudenberg and Jean Tirole.",
                "Game Theory.",
                "MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "On the order of eliminating dominated strategies.",
                "Operations Research Letters, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "The complexity of eliminating dominated strategies.",
                "Mathematics of Operation Research, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein, and Shlomo Zilberstein.",
                "Dynamic programming for partially observable stochastic games.",
                "In AAAI, pages 709-715, 2004. [9] Michael Kearns, Michael Littman, and Satinder Singh.",
                "Graphical models for game theory.",
                "In UAI, 2001. [10] Leonid Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou, and John N Tsitsiklis.",
                "A note on strategy <br>elimination</br> in bimatrix games.",
                "Operations Research Letters, 7(3):103-107, 1988. [12] Kevin Leyton-Brown and Moshe Tennenholtz.",
                "Local-effect games.",
                "In IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [14] Michael Littman and Peter Stone.",
                "A polynomial-time Nash equilibrium algorithm for repeated games.",
                "In ACM-EC, pages 48-54, 2003. [15] Leslie M. Marx and Jeroen M. Swinkels.",
                "Order independence for iterated weak dominance.",
                "Games and Economic Behavior, 18:219-245, 1997. [16] Leslie M. Marx and Jeroen M. Swinkels.",
                "Corrigendum, order independence for iterated weak dominance.",
                "Games and Economic Behavior, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston, and Jerry R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [18] Roger Myerson.",
                "Game Theory: Analysis of Conflict.",
                "Harvard University Press, Cambridge, 1991. [19] Martin J Osborne and Ariel Rubinstein.",
                "A Course in Game Theory.",
                "MIT Press, 1994. [20] Christos Papadimitriou.",
                "Algorithms, games and the Internet.",
                "In STOC, pages 749-753, 2001. [21] Ryan Porter, Eugene Nudelman, and Yoav Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, 2004. 97"
            ],
            "original_annotated_samples": [
                "In iterated dominance, the <br>elimination</br> proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating strategy no longer needs to perform better than or as well as the dominated strategy against opponent strategies that were eliminated in earlier rounds.",
                "Given a game in normal form and a distinguished strategy σ∗ , IWD-STRATEGY-<br>elimination</br> asks whether there is some path of iterated weak dominance that eliminates σ∗ .",
                "IWD-STRATEGY-<br>elimination</br> is NPcomplete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following IWD-STRATEGY-<br>elimination</br> instance. (In this instance, we will specify that certain strategies are uneliminable.",
                "It follows that there is a solution to the IWD-STRATEGY-<br>elimination</br> instance."
            ],
            "translated_annotated_samples": [
                "En la dominancia iterada, la <br>eliminación</br> avanza en rondas y se vuelve más fácil a medida que se eliminan más estrategias: en cualquier ronda dada, la estrategia dominante ya no necesita desempeñarse mejor que o igual que la estrategia dominada contra las estrategias oponentes que fueron eliminadas en rondas anteriores.",
                "Dada un juego en forma normal y una estrategia distinguida σ∗ , la ELIMINACIÓN DE ESTRATEGIAS POR DOMINANCIA DÉBIL (IWD-STRATEGY-ELIMINATION) pregunta si existe algún camino de dominancia débil iterada que elimine σ∗ .",
                "IWD-STRATEGY-ELIMINATION es NPcompleto, incluso con 2 jugadores, y con 0 y 1 siendo las únicas utilidades que ocurren en la matriz, ya sea que se permita o no la dominancia por estrategias mixtas.",
                "Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto no vacío de cláusulas C sobre un conjunto no vacío de variables V, con literales correspondientes L = {+v : v ∈ V} ∪ {−v : v ∈ V}) a la siguiente instancia de ELIMINACIÓN DE ESTRATEGIA IWD. (En esta instancia, especificaremos que ciertas estrategias son ineliminables.",
                "Se deduce que hay una solución para la instancia IWD-STRATEGY-ELIMINATION."
            ],
            "translated_text": "Estudiamos varios aspectos computacionales de la resolución de juegos utilizando la dominancia y la dominancia iterada. Primero estudiamos tanto la dominancia estricta como la débil (no iterada), y demostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta se puede hacer en tiempo polinómico utilizando la resolución de un único programa lineal. Luego pasamos a la dominancia iterada. Mostramos que determinar si existe algún camino que elimine una estrategia dada es NP-completo con dominancia débil iterada. Esto nos permite también demostrar que determinar si existe un camino que conduce a una solución única es NP-completo. Ambos resultados se mantienen tanto con como sin dominancia de estrategias mixtas. (Una versión más débil del segundo resultado (solo sin dominancia de estrategias mixtas) ya se conocía [7].) La dominancia estricta iterada, por otro lado, es independiente de la ruta (tanto con como sin dominancia por estrategias mixtas) y, por lo tanto, se puede realizar en tiempo polinómico. Luego estudiamos qué sucede cuando la estrategia dominante puede asignar una probabilidad positiva solo a unas pocas estrategias puras. Primero, demostramos que encontrar la estrategia dominante con el tamaño de soporte mínimo es NP-completo (tanto para dominancia estricta como débil). Luego, demostramos que la dominancia estricta iterada se vuelve dependiente del camino cuando hay un límite en el tamaño del soporte de las estrategias dominantes, y que decidir si una estrategia dada puede ser eliminada por dominancia estricta iterada bajo esta restricción es NP-completo (incluso cuando el límite en el tamaño del soporte es 3). Finalmente, estudiamos juegos bayesianos. Mostramos que, a diferencia de los juegos en forma normal, decidir si una estrategia pura dada está dominada por otra estrategia pura en un juego bayesiano es NP-completo (tanto con dominancia estricta como débil); sin embargo, decidir si una estrategia está dominada por alguna estrategia mixta aún puede hacerse en tiempo polinómico con la resolución de un único programa lineal (tanto con dominancia estricta como débil). Finalmente, demostramos que la dominancia iterada utilizando estrategias puras puede requerir un número exponencial de iteraciones en un juego bayesiano (tanto con dominancia estricta como débil). Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN En sistemas multiagentes con agentes auto-interesados, la acción óptima para un agente puede depender de las acciones tomadas por otros agentes. En tales contextos, los agentes necesitan herramientas de teoría de juegos para decidir racionalmente sobre una acción. La teoría de juegos ofrece varios modelos formales de escenarios estratégicos, el más conocido de los cuales es un juego en forma normal (o matriz), que especifica una utilidad (pago) para cada agente en cada combinación de estrategias que los agentes eligen, así como conceptos de solución que, dados un juego, especifican qué resultados son razonables (bajo varias suposiciones de racionalidad y conocimiento común). Probablemente el concepto de solución más conocido (y ciertamente el más estudiado) es el equilibrio de Nash. Un equilibrio de Nash especifica una estrategia para cada jugador, de tal manera que ningún jugador tiene un incentivo para desviarse (unilateralmente) de la estrategia prescrita. Recientemente, numerosos artículos han estudiado el cálculo de equilibrios de Nash en diferentes contextos [9, 4, 12, 3, 13, 14], y la complejidad de construir un equilibrio de Nash en juegos en forma normal ha sido etiquetada como uno de los dos problemas abiertos más importantes en el límite de P hoy en día [20]. El problema de calcular soluciones de acuerdo con los conceptos de solución quizás más elementales de dominancia y dominancia iterada ha recibido mucha menos atención. (Después de un breve artículo temprano sobre un caso sencillo [11], el principal estudio computacional de estos conceptos ha tenido lugar en realidad en un artículo de la comunidad de teoría de juegos [7].) Una estrategia domina estrictamente a otra estrategia si tiene un rendimiento estrictamente mejor contra todos los vectores de estrategias del oponente, y la domina débilmente si tiene al menos el mismo rendimiento contra todos los vectores de estrategias del oponente, y estrictamente mejor contra al menos uno. La idea es que las estrategias dominadas pueden ser eliminadas de consideración. En la dominancia iterada, la <br>eliminación</br> avanza en rondas y se vuelve más fácil a medida que se eliminan más estrategias: en cualquier ronda dada, la estrategia dominante ya no necesita desempeñarse mejor que o igual que la estrategia dominada contra las estrategias oponentes que fueron eliminadas en rondas anteriores. Calcular soluciones según la dominancia (iterada) es importante por al menos las siguientes razones: 1) puede ser computacionalmente más fácil que calcular (por ejemplo) un equilibrio de Nash (y por lo tanto puede ser útil como paso de preprocesamiento en el cálculo de un equilibrio de Nash), y 2) la dominancia (iterada) requiere una suposición de racionalidad más débil en los jugadores que (por ejemplo) el equilibrio de Nash, y por lo tanto las soluciones derivadas según ella son más propensas a ocurrir. En este artículo, estudiamos algunas preguntas computacionales fundamentales relacionadas con la dominancia y la dominancia iterada, incluyendo qué tan difícil es verificar si una estrategia dada puede ser eliminada por cada una de las variantes de estos conceptos. El resto del documento está organizado de la siguiente manera. En la Sección 2, revisamos brevemente las definiciones y propiedades básicas de los juegos en forma normal, la dominancia estricta y débil, y la dominancia estricta y débil iterada. En las secciones restantes, estudiamos los aspectos computacionales de la dominancia y la dominancia iterada. En la Sección 3, estudiamos la dominancia de un solo disparo (no iterada). En la Sección 4, estudiamos la dominancia iterada. En la Sección 5, estudiamos la dominancia y la dominancia iterada cuando la estrategia dominante solo puede asignar probabilidad a unas pocas estrategias puras. Finalmente, en la Sección 6, estudiamos la dominancia y la dominancia iterada en juegos bayesianos. 2. DEFINICIONES Y PROPIEDADES BÁSICAS En esta sección, revisamos brevemente los juegos en forma normal, así como la dominancia y la dominancia iterada (tanto estricta como débil). Un juego de forma normal de n jugadores se define de la siguiente manera. Definición 1. Un juego en forma normal está dado por un conjunto de jugadores {1, 2, . . . , n}; y, para cada jugador i, un conjunto (finito) de estrategias puras Σi y una función de utilidad ui : Σ1 × Σ2 × . . . × Σn → R (donde ui(σ1, σ2, . . . , σn) denota la utilidad del jugador i cuando cada jugador j juega la acción σj). Las dos principales nociones de dominancia se definen de la siguiente manera. Definición 2. La estrategia σi del jugador se dice que está estrictamente dominada por la estrategia σi del jugador si, para cualquier vector de estrategias σ−i de los otros jugadores, ui(σi, σ−i) > ui(σi, σ−i). La estrategia σi del jugador se dice que está débilmente dominada por la estrategia σi del jugador si, para cualquier vector de estrategias σ−i para los otros jugadores, ui(σi, σ−i) ≥ ui(σi, σ−i), y para al menos un vector de estrategias σ−i para los otros jugadores, ui(σi, σ−i) > ui(σi, σ−i). En esta definición, a veces se permite que la estrategia dominante σi sea una estrategia mixta, es decir, una distribución de probabilidad sobre estrategias puras. En este caso, las utilidades están en dominancia en conjunto. Por ejemplo, a veces se utilizan comprobaciones de dominancia simple como una subrutina en la búsqueda de equilibrios de Nash [21]. Las definiciones son las utilidades esperadas. Hay otras nociones de dominancia, como la dominancia muy débil (en la que no se requiere ninguna desigualdad estricta, por lo que dos estrategias pueden dominarse mutuamente), pero no las estudiaremos aquí. Cuando estamos analizando las relaciones de dominancia para el jugador i, los otros jugadores (−i) pueden ser considerados como un solo jugador. Por lo tanto, en el resto del documento, cuando estudiamos la dominancia de un solo paso (no iterada), nos centraremos sin pérdida de generalidad en juegos de dos jugadores. En juegos de dos jugadores, generalmente nos referiremos a los jugadores como r (fila) y c (columna) en lugar de 1 y 2. En la dominancia iterada, las estrategias dominadas son eliminadas del juego y ya no tienen ningún efecto en las relaciones de dominancia futuras. La dominancia iterada puede eliminar más estrategias que la dominancia, de la siguiente manera. σr puede originalmente no dominar a σr porque este último tiene un mejor desempeño contra σc; pero luego, una vez que σc es eliminado porque es dominado por σc, σr domina a σr, y este último puede ser eliminado. Por ejemplo, en el siguiente juego, se puede eliminar primero a R, después de lo cual D queda dominado. Tanto la dominancia estricta como la dominancia débil pueden ser utilizadas en la definición de la dominancia iterada. Observamos que el proceso de dominancia iterada nunca se ve favorecido al eliminar una estrategia mixta dominada, por la siguiente razón. Si σi le da al jugador i una utilidad mayor que σi contra la estrategia mixta σj para el jugador j = i (y estrategias σ−{i,j} para los otros jugadores), entonces para al menos una estrategia pura σj en la que σj coloque probabilidad positiva, σi debe desempeñarse mejor que σi contra σj (y estrategias σ−{i,j} para los otros jugadores). Por lo tanto, eliminar la estrategia mixta σj no introduce nuevas dominancias. Discusiones más detalladas y ejemplos se pueden encontrar en textos estándar sobre microeconomía o teoría de juegos [17, 5]. Ahora estamos listos para pasar al núcleo de este documento. 3. En esta sección, estudiamos la noción de dominancia de un solo turno (no iterada). Como primera observación, verificar si una estrategia dada está estrictamente (débilmente) dominada por alguna estrategia pura es sencillo, al comprobar, para cada estrategia pura de ese jugador, si la última estrategia tiene un rendimiento estrictamente mejor contra todas las estrategias de los oponentes (al menos igual de bien contra todas las estrategias de los oponentes, y estrictamente 2 La estrategia dominada σi, por supuesto, también puede ser mixta, pero esto no tiene implicaciones técnicas para el documento: cuando estudiamos la dominancia de un solo disparo, preguntamos si una estrategia dada está dominada, y no importa si la estrategia dada es pura o mixta; cuando estudiamos la dominancia iterada, no tiene sentido eliminar las estrategias mixtas, como veremos en breve. 3 Este jugador puede tener un espacio de estrategias muy grande (una estrategia pura para cada vector de estrategias puras de los jugadores que están siendo reemplazados). Sin embargo, esto no resultará en un aumento en el tamaño de nuestra representación, ya que la representación original ya tenía que especificar las utilidades para cada uno de estos vectores. Observamos que una restricción a juegos de dos jugadores no sería sin pérdida de generalidad para la dominancia iterada. Esto se debe a que para la dominancia iterada, necesitamos analizar las estrategias dominadas de cada jugador individual, por lo que no podemos fusionar a ningún jugador. A continuación, mostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta se puede hacer en tiempo polinómico resolviendo un único programa lineal. (Programas lineales similares se han presentado anteriormente [18]; presentamos el resultado aquí por completitud, y porque construiremos sobre los programas lineales dados a continuación en el Teorema 6.) Proposición 1. Dadas las utilidades de los jugadores de fila, un subconjunto Dr de las estrategias puras de los jugadores de fila Σr, y una estrategia distinguida σ∗ r para el jugador de fila, podemos verificar en tiempo polinómico en el tamaño del juego (resolviendo un único programa lineal de tamaño polinómico) si existe alguna estrategia mixta σr, que coloque probabilidad positiva solo en estrategias en Dr y domine a σ∗ r, tanto en dominancia estricta como débil. Prueba. Sea pdr la probabilidad que σr asigna a dr ∈ Dr. Resolveremos un único programa lineal en cada uno de nuestros algoritmos; los programas lineales pueden resolverse en tiempo polinómico [10]. Para la dominancia estricta, la pregunta es si se puede establecer el pdr de manera que para cada estrategia pura del jugador de la columna σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc). Debido a que la desigualdad debe ser estricta, no podemos resolver esto directamente mediante programación lineal. Procedemos de la siguiente manera. Dado que el juego es finito, podemos asumir sin pérdida de generalidad que todas las utilidades son positivas (si no lo son, simplemente añade una constante a todas las utilidades). Resolver el siguiente programa lineal: minimizar dr∈Dr pdr tal que para cualquier σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc). Si σ∗ r es estrictamente dominada por alguna estrategia mixta, este programa lineal tiene una solución con un valor objetivo < 1. (La estrategia dominante es una solución factible con un valor objetivo exactamente igual a 1. Dado que ninguna restricción es vinculante para esta solución, podemos reducir ligeramente una de las probabilidades sin afectar la viabilidad, obteniendo así una solución con un valor objetivo < 1. Además, si este programa lineal tiene una solución con un valor objetivo < 1, existe una estrategia mixta que domina estrictamente a σ∗ r, la cual se puede obtener tomando la solución del PL y agregando la probabilidad restante a cualquier estrategia (debido a que todas las utilidades son positivas, esto sumará al lado izquierdo de cualquier desigualdad, por lo que todas las desigualdades se volverán estrictas). Para la dominancia débil, podemos resolver el siguiente programa lineal: maximizar σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) tal que para cualquier σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1. Si σ∗ r está débilmente dominado por alguna estrategia mixta, entonces esa estrategia mixta es una solución factible para este programa con un valor objetivo > 0, porque para al menos una estrategia σc ∈ Σc tenemos ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0. Por otro lado, si este programa tiene una solución con un valor objetivo > 0, entonces para al menos una estrategia σc ∈ Σc debemos tener ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, y por lo tanto la solución de los programas lineales es una estrategia mixta débilmente dominante. 4. DOMINANCIA ITERADA Ahora pasamos a la dominancia iterada. Es bien sabido que la dominancia estricta iterada es independiente del camino [6, 19], es decir, si eliminamos las estrategias dominadas hasta que ya no queden más estrategias dominadas, al final las estrategias restantes para cada jugador serán las mismas, independientemente del orden en que se eliminen las estrategias. Por lo tanto, para determinar si una estrategia dada puede ser eliminada por dominancia estricta iterada, todo lo que se necesita hacer es eliminar repetidamente las estrategias que son estrictamente dominadas, hasta que no queden más estrategias dominadas. Dado que podemos verificar en tiempo polinómico si alguna estrategia dada está dominada (ya sea que se permita o no la dominancia por estrategias mixtas, como se describe en la Sección 3), todo este procedimiento toma solo tiempo polinómico. En el caso de la dominancia iterada por estrategias puras con dos jugadores, Knuth et al. [11] mejoran ligeramente (aceleran) la implementación directa de este procedimiento al llevar un registro, para cada par ordenado de estrategias de un jugador, del número de estrategias del oponente que impiden que la primera estrategia domine a la segunda. Por lo tanto, el tiempo de ejecución para un juego m × n se reduce de O((m + n)4 ) a O((m + n)3 ). (En realidad, solo estudian dominancia muy débil (para la cual no se requieren desigualdades estrictas), pero el enfoque se puede extender fácilmente). Por el contrario, se sabe que la dominancia débil iterada es dependiente del camino. Por ejemplo, en el siguiente juego, utilizando la dominancia débil iterada podemos eliminar primero M y luego D, o primero R y luego U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Por lo tanto, si bien el procedimiento de eliminar estrategias débilmente dominadas hasta que no queden más estrategias débilmente dominadas puede ciertamente ejecutarse en tiempo polinómico, qué estrategias sobreviven al final depende del orden en el que eliminamos las estrategias dominadas. Investigaremos dos preguntas para la dominancia débil iterada: si una estrategia dada es eliminada en algún camino, y si hay un camino hacia una solución única (una única estrategia pura por jugador). Mostraremos que ambos de estos problemas son computacionalmente difíciles. Definición 3. Dada un juego en forma normal y una estrategia distinguida σ∗ , la ELIMINACIÓN DE ESTRATEGIAS POR DOMINANCIA DÉBIL (IWD-STRATEGY-ELIMINATION) pregunta si existe algún camino de dominancia débil iterada que elimine σ∗ . Dada un juego en forma normal, IWDUNIQUE-SOLUTION pregunta si existe algún camino de dominancia débil iterada que conduzca a una solución única (una estrategia restante por jugador). El siguiente lema muestra un caso especial de juegos en forma normal en el que permitir la dominancia débil a través de estrategias mixtas (además de la dominancia débil a través de estrategias puras) hace 6. Sin embargo, existe una restricción de dominancia débil llamada dominancia débil agradable que es independiente de la ruta [15, 16]. Para obtener una visión general de los resultados de independencia de la ruta, consulte Apt [1]. 90 no ayuda. Demostraremos los resultados de dificultad en este contexto, de modo que se mantengan independientemente de si se permite o no la dominancia por estrategias mixtas. Lema 1. Supongamos que todas las utilidades en un juego están en {0, 1}. Entonces, toda estrategia pura que es débilmente dominada por una estrategia mixta también es débilmente dominada por una estrategia pura. Prueba. Se supone que la estrategia pura σ es débilmente dominada por la estrategia mixta σ∗. Si σ obtiene una utilidad de 1 contra alguna estrategia o vector de estrategias del oponente (si hay más de 2 jugadores), entonces todas las estrategias puras en las que σ∗ asigna una probabilidad positiva también deben obtener una utilidad de 1 contra esa estrategia del oponente (de lo contrario, la utilidad esperada sería menor que 1). Además, al menos una de las estrategias puras en las que σ∗ coloca probabilidad positiva debe obtener una utilidad de 1 contra una estrategia del oponente que σ obtiene 0 (de lo contrario, la desigualdad nunca sería estricta). Se deduce que esta estrategia pura domina débilmente a σ. Ahora estamos listos para demostrar los resultados principales de esta sección. Teorema 1. IWD-STRATEGY-ELIMINATION es NPcompleto, incluso con 2 jugadores, y con 0 y 1 siendo las únicas utilidades que ocurren en la matriz, ya sea que se permita o no la dominancia por estrategias mixtas. Prueba. El problema está en NP porque, dado una secuencia de estrategias a ser eliminadas, podemos verificar fácilmente si esta es una secuencia válida de eliminaciones (incluso cuando se permite la dominancia por estrategias mixtas, utilizando la Proposición 1). Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto no vacío de cláusulas C sobre un conjunto no vacío de variables V, con literales correspondientes L = {+v : v ∈ V} ∪ {−v : v ∈ V}) a la siguiente instancia de ELIMINACIÓN DE ESTRATEGIA IWD. (En esta instancia, especificaremos que ciertas estrategias son ineliminables. Una estrategia σr puede hacerse ineliminable, incluso cuando 0 y 1 son las únicas utilidades permitidas, al agregar otra estrategia σr y otra estrategia del oponente σc, de modo que: 1. σr y σr son las únicas estrategias que le dan al jugador de la fila una utilidad de 1 contra σc. 2. σr y σr siempre le dan al jugador de la fila la misma utilidad. 3. σc es la única estrategia que le da al jugador de la columna una utilidad de 1 contra σr, pero de lo contrario σc siempre le da al jugador de la columna una utilidad de 0. Esto hace imposible eliminar cualquiera de estas tres estrategias. No especificaremos explícitamente las estrategias adicionales para hacer la prueba más legible. En esta demostración, designaremos las estrategias del jugador de fila como s, y las estrategias del jugador de columna como t, para mejorar la legibilidad. Que se dé el conjunto de estrategias puras de los jugadores de fila como sigue. Para cada variable v ∈ V, el jugador de la fila tiene estrategias correspondientes s1 +v, s2 +v, s1 −v, s2 −v. Además, el jugador de la fila tiene las siguientes 2 estrategias: s1 0 y s2 0, donde s2 0 = σ∗ r (es decir, es la estrategia que buscamos eliminar). Finalmente, para cada cláusula c ∈ C, el jugador de la fila tiene estrategias correspondientes s1 c (ineliminables) y s2 c. Dado el conjunto de estrategias puras de los jugadores de la columna de la siguiente manera. Para cada variable v ∈ V, el jugador de la columna tiene una estrategia correspondiente tv. Para cada cláusula c ∈ C, el jugador de la columna tiene una estrategia correspondiente tc, y además, para cada literal l ∈ L que ocurre en c, una estrategia tc,l. Para cada variable v ∈ V, el jugador de la columna tiene estrategias correspondientes t+v, t−v (ambas no eliminables). Finalmente, el jugador de la columna tiene tres estrategias adicionales: t1 0 (ineliminable), t2 0 y t1. La función de utilidad para el jugador de la fila se da de la siguiente manera: • ur(s1 +v, tv) = 0 para todo v ∈ V ; • ur(s2 +v, tv) = 1 para todo v ∈ V ; • ur(s1 −v, tv) = 1 para todo v ∈ V ; • ur(s2 −v, tv) = 0 para todo v ∈ V ; • ur(s1 +v, t1) = 1 para todo v ∈ V ; • ur(s2 +v, t1) = 0 para todo v ∈ V ; • ur(s1 −v, t1) = 0 para todo v ∈ V ; • ur(s2 −v, t1) = 1 para todo v ∈ V ; • ur(sb +v, t+v) = 1 para todo v ∈ V y b ∈ {1, 2}; • ur(sb −v, t−v) = 1 para todo v ∈ V y b ∈ {1, 2}; • ur(sl, t) = 0 de lo contrario para todo l ∈ L y t ∈ S2; • ur(s1 0, tc) = 0 para todo c ∈ C; • ur(s2 0, tc) = 1 para todo c ∈ C; • ur(sb 0, t1 0) = 1 para todo b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 de lo contrario para todo b ∈ {1, 2} y t ∈ S2; • ur(sb c, t) = 0 de lo contrario para todo c ∈ C y b ∈ {1, 2}; y la utilidad del jugador de la fila es 0 en todos los demás casos. La función de utilidad para el jugador de la columna se da de la siguiente manera: • uc(s, tv) = 0 para todo v ∈ V y s ∈ S1; • uc(s, t1) = 0 para todo s ∈ S1; • uc(s2 l , tc) = 1 para todo c ∈ C y l ∈ L donde l ∈ c (literal l ocurre en la cláusula c); • uc(s2 l2 , tc,l1 ) = 1 para todo c ∈ C y l1, l2 ∈ L, l1 = l2 donde l2 ∈ c; • uc(s1 c, tc) = 1 para todo c ∈ C; • uc(s2 c, tc) = 0 para todo c ∈ C; • uc(sb c, tc,l) = 1 para todo c ∈ C, l ∈ L, y b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 en otro caso para todo c ∈ C y l ∈ L; y la utilidad del jugador de la columna es 0 en todos los demás casos. Ahora demostramos que las dos instancias son equivalentes. Primero, supongamos que hay una solución para la instancia de satisfactibilidad: es decir, una asignación de valores de verdad a las variables en V tal que todas las cláusulas se satisfacen. Entonces, considera la siguiente secuencia de eliminaciones en nuestro juego: 1. Para cada variable v que se establezca como verdadera en la asignación, elimine tv (lo que da como resultado una utilidad de 0 para el jugador de la columna en todas partes). 2. Entonces, para cada variable v que se establezca como verdadera en la asignación, elimine s2 +v usando s1 +v (lo cual es posible porque tv ha sido eliminado, y porque t1 no ha sido eliminado (aún)). 3. Ahora elimina t1 (lo cual da como resultado una utilidad de 0 para el jugador de la columna). 4. A continuación, para cada variable v que se establezca como falso en la asignación, elimine s2 −v usando s1 −v (lo cual es posible porque t1 ha sido eliminado, y porque tv no ha sido eliminado (aún)). 5. Para cada cláusula c que tenga la variable correspondiente a uno de sus literales positivos l = +v establecido como verdadero en la asignación, elimine tc utilizando tc,l (lo cual es posible porque s2 l ha sido eliminado, y s2 c no ha sido eliminado (aún)). 6. Para cada cláusula c en la que la variable correspondiente a uno de sus literales negativos l = −v se establece en falso en la asignación, elimine tc utilizando tc,l 91 (lo cual es posible porque s2 l ha sido eliminado, y s2 c no ha sido eliminado (aún)). 7. Debido a que la tarea cumplió con la fórmula, todos los tc han sido eliminados ahora. Por lo tanto, podemos eliminar s2 0 = σ∗ r usando s1 0. Se deduce que hay una solución para la instancia IWD-STRATEGY-ELIMINATION. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "strategy": {
            "translated_key": "estrategia",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Complexity of (Iterated) Dominance∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using dominance and iterated dominance.",
                "We first study both strict and weak dominance (not iterated), and show that checking whether a given <br>strategy</br> is dominated by some mixed <br>strategy</br> can be done in polynomial time using a single linear program solve.",
                "We then move on to iterated dominance.",
                "We show that determining whether there is some path that eliminates a given <br>strategy</br> is NP-complete with iterated weak dominance.",
                "This allows us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then study what happens when the dominating <br>strategy</br> is allowed to place positive probability on only a few pure strategies.",
                "First, we show that finding the dominating <br>strategy</br> with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we show that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given <br>strategy</br> can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we study Bayesian games.",
                "We show that, unlike in normal form games, deciding whether a given pure <br>strategy</br> is dominated by another pure <br>strategy</br> in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak ∗ This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858, and a Sloan Fellowship. dominance).",
                "Finally, we show that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent systems with self-interested agents, the optimal action for one agent may depend on the actions taken by other agents.",
                "In such settings, the agents require tools from game theory to rationally decide on an action.",
                "Game theory offers various formal models of strategic settings-the best-known of which is a game in normal (or matrix) form, specifying a utility (payoff) for each agent for each combination of strategies that the agents choose-as well as solution concepts, which, given a game, specify which outcomes are reasonable (under various assumptions of rationality and common knowledge).",
                "Probably the best-known (and certainly the most-studied) solution concept is that of Nash equilibrium.",
                "A Nash equilibrium specifies a <br>strategy</br> for each player, in such a way that no player has an incentive to (unilaterally) deviate from the prescribed <br>strategy</br>.",
                "Recently, numerous papers have studied computing Nash equilibria in various settings [9, 4, 12, 3, 13, 14], and the complexity of constructing a Nash equilibrium in normal form games has been labeled one of the two most important open problems on the boundary of P today [20].",
                "The problem of computing solutions according to the perhaps more elementary solution concepts of dominance and iterated dominance has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the game theory community [7].1 ) A <br>strategy</br> strictly dominates another <br>strategy</br> if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one.",
                "The idea is that dominated strategies can be eliminated from consideration.",
                "In iterated dominance, the elimination proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating <br>strategy</br> no longer needs to perform better than or as well as the dominated <br>strategy</br> against opponent strategies that were eliminated in earlier rounds.",
                "Computing solutions according to (iterated) dominance is important for at least the following reasons: 1) it can be computationally easier than computing (for instance) a Nash equilibrium (and therefore it can be useful as a preprocessing step in computing a Nash equilibrium), and 2) (iterated) dominance requires a weaker rationality assumption on the players than (for instance) Nash equilibrium, and therefore solutions derived according to it are more likely to occur.",
                "In this paper, we study some fundamental computational questions concerning dominance and iterated dominance, including how hard it is to check whether a given <br>strategy</br> can be eliminated by each of the variants of these notions.",
                "The rest of the paper is organized as follows.",
                "In Section 2, we briefly review definitions and basic properties of normal form games, strict and weak dominance, and iterated strict and weak dominance.",
                "In the remaining sections, we study computational aspects of dominance and iterated dominance.",
                "In Section 3, we study one-shot (not iterated) dominance.",
                "In Section 4, we study iterated dominance.",
                "In Section 5, we study dominance and iterated dominance when the dominating <br>strategy</br> can only place probability on a few pure strategies.",
                "Finally, in Section 6, we study dominance and iterated dominance in Bayesian games. 2.",
                "DEFINITIONS AND BASIC PROPERTIES In this section, we briefly review normal form games, as well as dominance and iterated dominance (both strict and weak).",
                "An n-player normal form game is defined as follows.",
                "Definition 1.",
                "A normal form game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of pure strategies Σi and a utility function ui : Σ1 × Σ2 × . . . × Σn → R (where ui(σ1, σ2, . . . , σn) denotes player is utility when each player j plays action σj).",
                "The two main notions of dominance are defined as follows.",
                "Definition 2.",
                "Player is <br>strategy</br> σi is said to be strictly dominated by player is <br>strategy</br> σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "Player is <br>strategy</br> σi is said to be weakly dominated by player is <br>strategy</br> σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) ≥ ui(σi, σ−i), and for at least one vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "In this definition, it is sometimes allowed for the dominating <br>strategy</br> σi to be a mixed <br>strategy</br>, that is, a probability distribution over pure strategies.",
                "In this case, the utilities in dominance altogether.",
                "For example, simple dominance checks are sometimes used as a subroutine in searching for Nash equilibria [21]. the definition are the expected utilities.2 There are other notions of dominance, such as very weak dominance (in which no strict inequality is required, so two strategies can dominate each other), but we will not study them here.",
                "When we are looking at the dominance relations for player i, the other players (−i) can be thought of as a single player.3 Therefore, in the rest of the paper, when we study one-shot (not iterated) dominance, we will focus without loss of generality on two-player games.4 In two-player games, we will generally refer to the players as r (row) and c (column) rather than 1 and 2.",
                "In iterated dominance, dominated strategies are removed from the game, and no longer have any effect on future dominance relations.",
                "Iterated dominance can eliminate more strategies than dominance, as follows. σr may originally not dominate σr because the latter performs better against σc; but then, once σc is removed because it is dominated by σc, σr dominates σr, and the latter can be removed.",
                "For example, in the following game, R can be removed first, after which D is dominated.",
                "L R U 1, 1 0, 0 D 0, 1 1, 0 Either strict or weak dominance can be used in the definition of iterated dominance.",
                "We note that the process of iterated dominance is never helped by removing a dominated mixed <br>strategy</br>, for the following reason.",
                "If σi gives player i a higher utility than σi against mixed <br>strategy</br> σj for player j = i (and strategies σ−{i,j} for the other players), then for at least one pure <br>strategy</br> σj that σj places positive probability on, σi must perform better than σi against σj (and strategies σ−{i,j} for the other players).",
                "Thus, removing the mixed <br>strategy</br> σj does not introduce any new dominances.",
                "More detailed discussions and examples can be found in standard texts on microeconomics or game theory [17, 5].",
                "We are now ready to move on to the core of this paper. 3.",
                "DOMINANCE (NOT ITERATED) In this section, we study the notion of one-shot (not iterated) dominance.",
                "As a first observation, checking whether a given <br>strategy</br> is strictly (weakly) dominated by some pure <br>strategy</br> is straightforward, by checking, for every pure strategy for that player, whether the latter strategy performs strictly better against all the opponents strategies (at least as well against all the opponents strategies, and strictly 2 The dominated strategy σi is, of course, also allowed to be mixed, but this has no technical implications for the paper: when we study one-shot dominance, we ask whether a given strategy is dominated, and it does not matter whether the given strategy is pure or mixed; when we study iterated dominance, there is no use in eliminating mixed strategies, as we will see shortly. 3 This player may have a very large strategy space (one pure strategy for every vector of pure strategies for the players that are being replaced).",
                "Nevertheless, this will not result in an increase in our representation size, because the original representation already had to specify utilities for each of these vectors. 4 We note that a restriction to two-player games would not be without loss of generality for iterated dominance.",
                "This is because for iterated dominance, we need to look at the dominated strategies of each individual player, so we cannot merge any players. 89 better against at least one).5 Next, we show that checking whether a given <br>strategy</br> is dominated by some mixed <br>strategy</br> can be done in polynomial time by solving a single linear program. (Similar linear programs have been given before [18]; we present the result here for completeness, and because we will build on the linear programs given below in Theorem 6.)",
                "Proposition 1.",
                "Given the row players utilities, a subset Dr of the row players pure strategies Σr, and a distinguished <br>strategy</br> σ∗ r for the row player, we can check in time polynomial in the size of the game (by solving a single linear program of polynomial size) whether there exists some mixed <br>strategy</br> σr, that places positive probability only on strategies in Dr and dominates σ∗ r , both for strict and for weak dominance.",
                "Proof.",
                "Let pdr be the probability that σr places on dr ∈ Dr. We will solve a single linear program in each of our algorithms; linear programs can be solved in polynomial time [10].",
                "For strict dominance, the question is whether the pdr can be set so that for every pure <br>strategy</br> for the column player σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc).",
                "Because the inequality must be strict, we cannot solve this directly by linear programming.",
                "We proceed as follows.",
                "Because the game is finite, we may assume without loss of generality that all utilities are positive (if not, simply add a constant to all utilities.)",
                "Solve the following linear program: minimize dr∈Dr pdr such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc).",
                "If σ∗ r is strictly dominated by some mixed <br>strategy</br>, this linear program has a solution with objective value < 1. (The dominating <br>strategy</br> is a feasible solution with objective value exactly 1.",
                "Because no constraint is binding for this solution, we can reduce one of the probabilities slightly without affecting feasibility, thereby obtaining a solution with objective value < 1.)",
                "Moreover, if this linear program has a solution with objective value < 1, there is a mixed <br>strategy</br> strictly dominating σ∗ r , which can be obtained by taking the LP solution and adding the remaining probability to any <br>strategy</br> (because all the utilities are positive, this will add to the left side of any inequality, so all inequalities will become strict).",
                "For weak dominance, we can solve the following linear program: maximize σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1.",
                "If σ∗ r is weakly dominated by some mixed <br>strategy</br>, then that mixed <br>strategy</br> is a feasible solution to this program with objective value > 0, because for at least one strategy σc ∈ Σc we have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0.",
                "On the other hand, if this program has a solution with objective value > 0, then for at least one <br>strategy</br> σc ∈ Σc we 5 Recall that the assumption of a single opponent (that is, the assumption of two players) is without loss of generality for one-shot dominance. must have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, and thus the linear programs solution is a weakly dominating mixed <br>strategy</br>. 4.",
                "ITERATED DOMINANCE We now move on to iterated dominance.",
                "It is well-known that iterated strict dominance is path-independent [6, 19]that is, if we remove dominated strategies until no more dominated strategies remain, in the end the remaining strategies for each player will be the same, regardless of the order in which strategies are removed.",
                "Because of this, to see whether a given <br>strategy</br> can be eliminated by iterated strict dominance, all that needs to be done is to repeatedly remove strategies that are strictly dominated, until no more dominated strategies remain.",
                "Because we can check in polynomial time whether any given <br>strategy</br> is dominated (whether or not dominance by mixed strategies is allowed, as described in Section 3), this whole procedure takes only polynomial time.",
                "In the case of iterated dominance by pure strategies with two players, Knuth et al. [11] slightly improve on (speed up) the straightforward implementation of this procedure by keeping track of, for each ordered pair of strategies for a player, the number of opponent strategies that prevent the first <br>strategy</br> from dominating the second.",
                "Hereby the runtime for an m × n game is reduced from O((m + n)4 ) to O((m + n)3 ). (Actually, they only study very weak dominance (for which no strict inequalities are required), but the approach is easily extended.)",
                "In contrast, iterated weak dominance is known to be pathdependent.6 For example, in the following game, using iterated weak dominance we can eliminate M first, and then D, or R first, and then U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Therefore, while the procedure of removing weakly dominated strategies until no more weakly dominated strategies remain can certainly be executed in polynomial time, which strategies survive in the end depends on the order in which we remove the dominated strategies.",
                "We will investigate two questions for iterated weak dominance: whether a given <br>strategy</br> is eliminated in some path, and whether there is a path to a unique solution (one pure <br>strategy</br> left per player).",
                "We will show that both of these problems are computationally hard.",
                "Definition 3.",
                "Given a game in normal form and a distinguished <br>strategy</br> σ∗ , IWD-<br>strategy</br>-ELIMINATION asks whether there is some path of iterated weak dominance that eliminates σ∗ .",
                "Given a game in normal form, IWDUNIQUE-SOLUTION asks whether there is some path of iterated weak dominance that leads to a unique solution (one <br>strategy</br> left per player).",
                "The following lemma shows a special case of normal form games in which allowing for weak dominance by mixed strategies (in addition to weak dominance by pure strategies) does 6 There is, however, a restriction of weak dominance called nice weak dominance which is path-independent [15, 16].",
                "For an overview of path-independence results, see Apt [1]. 90 not help.",
                "We will prove the hardness results in this setting, so that they will hold whether or not dominance by mixed strategies is allowed.",
                "Lemma 1.",
                "Suppose that all the utilities in a game are in {0, 1}.",
                "Then every pure <br>strategy</br> that is weakly dominated by a mixed <br>strategy</br> is also weakly dominated by a pure strategy.",
                "Proof.",
                "Suppose pure <br>strategy</br> σ is weakly dominated by mixed <br>strategy</br> σ∗ .",
                "If σ gets a utility of 1 against some opponent <br>strategy</br> (or vector of opponent strategies if there are more than 2 players), then all the pure strategies that σ∗ places positive probability on must also get a utility of 1 against that opponent <br>strategy</br> (or else the expected utility would be smaller than 1).",
                "Moreover, at least one of the pure strategies that σ∗ places positive probability on must get a utility of 1 against an opponent <br>strategy</br> that σ gets 0 against (or else the inequality would never be strict).",
                "It follows that this pure <br>strategy</br> weakly dominates σ.",
                "We are now ready to prove the main results of this section.",
                "Theorem 1.",
                "IWD-<br>strategy</br>-ELIMINATION is NPcomplete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can easily check whether this is a valid sequence of eliminations (even when dominance by mixed strategies is allowed, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following IWD-<br>strategy</br>-ELIMINATION instance. (In this instance, we will specify that certain strategies are uneliminable.",
                "A <br>strategy</br> σr can be made uneliminable, even when 0 and 1 are the only allowed utilities, by adding another <br>strategy</br> σr and another opponent strategy σc, so that: 1. σr and σr are the only strategies that give the row player a utility of 1 against σc. 2. σr and σr always give the row player the same utility. 3. σc is the only strategy that gives the column player a utility of 1 against σr, but otherwise σc always gives the column player utility 0.",
                "This makes it impossible to eliminate any of these three strategies.",
                "We will not explicitly specify the additional strategies to make the proof more legible.)",
                "In this proof, we will denote row player strategies by s, and column player strategies by t, to improve legibility.",
                "Let the row players pure <br>strategy</br> set be given as follows.",
                "For every variable v ∈ V , the row player has corresponding strategies s1 +v, s2 +v, s1 −v, s2 −v.",
                "Additionally, the row player has the following 2 strategies: s1 0 and s2 0, where s2 0 = σ∗ r (that is, it is the <br>strategy</br> we seek to eliminate).",
                "Finally, for every clause c ∈ C, the row player has corresponding strategies s1 c (uneliminable) and s2 c. Let the column players pure <br>strategy</br> set be given as follows.",
                "For every variable v ∈ V , the column player has a corresponding <br>strategy</br> tv.",
                "For every clause c ∈ C, the column player has a corresponding <br>strategy</br> tc, and additionally, for every literal l ∈ L that occurs in c, a <br>strategy</br> tc,l.",
                "For every variable v ∈ V , the column player has corresponding strategies t+v, t−v (both uneliminable).",
                "Finally, the column player has three additional strategies: t1 0 (uneliminable), t2 0, and t1.",
                "The utility function for the row player is given as follows: • ur(s1 +v, tv) = 0 for all v ∈ V ; • ur(s2 +v, tv) = 1 for all v ∈ V ; • ur(s1 −v, tv) = 1 for all v ∈ V ; • ur(s2 −v, tv) = 0 for all v ∈ V ; • ur(s1 +v, t1) = 1 for all v ∈ V ; • ur(s2 +v, t1) = 0 for all v ∈ V ; • ur(s1 −v, t1) = 0 for all v ∈ V ; • ur(s2 −v, t1) = 1 for all v ∈ V ; • ur(sb +v, t+v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sb −v, t−v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sl, t) = 0 otherwise for all l ∈ L and t ∈ S2; • ur(s1 0, tc) = 0 for all c ∈ C; • ur(s2 0, tc) = 1 for all c ∈ C; • ur(sb 0, t1 0) = 1 for all b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 otherwise for all b ∈ {1, 2} and t ∈ S2; • ur(sb c, t) = 0 otherwise for all c ∈ C and b ∈ {1, 2}; and the row players utility is 0 in every other case.",
                "The utility function for the column player is given as follows: • uc(s, tv) = 0 for all v ∈ V and s ∈ S1; • uc(s, t1) = 0 for all s ∈ S1; • uc(s2 l , tc) = 1 for all c ∈ C and l ∈ L where l ∈ c (literal l occurs in clause c); • uc(s2 l2 , tc,l1 ) = 1 for all c ∈ C and l1, l2 ∈ L, l1 = l2 where l2 ∈ c; • uc(s1 c, tc) = 1 for all c ∈ C; • uc(s2 c, tc) = 0 for all c ∈ C; • uc(sb c, tc,l) = 1 for all c ∈ C, l ∈ L, and b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 otherwise for all c ∈ C and l ∈ L; and the column players utility is 0 in every other case.",
                "We now show that the two instances are equivalent.",
                "First, suppose there is a solution to the satisfiability instance: that is, a truth-value assignment to the variables in V such that all clauses are satisfied.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the assignment, eliminate tv (which gives the column player utility 0 everywhere). 2.",
                "Then, for every variable v that is set to true in the assignment, eliminate s2 +v using s1 +v (which is possible because tv has been eliminated, and because t1 has not been eliminated (yet)). 3.",
                "Now eliminate t1 (which gives the column player utility 0 everywhere). 4.",
                "Next, for every variable v that is set to false in the assignment, eliminate s2 −v using s1 −v (which is possible because t1 has been eliminated, and because tv has not been eliminated (yet)). 5.",
                "For every clause c which has the variable corresponding to one of its positive literals l = +v set to true in the assignment, eliminate tc using tc,l (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 6.",
                "For every clause c which has the variable corresponding to one of its negative literals l = −v set to false in the assignment, eliminate tc using tc,l 91 (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 7.",
                "Because the assignment satisfied the formula, all the tc have now been eliminated.",
                "Thus, we can eliminate s2 0 = σ∗ r using s1 0.",
                "It follows that there is a solution to the IWD-<br>strategy</br>-ELIMINATION instance.",
                "Now suppose there is a solution to the IWD-STRATEGYELIMINATION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We first observe that only s1 0 can eliminate s2 0 = σ∗ r , because it is the only other <br>strategy</br> that gets the row player a utility of 1 against t1 0, and t1 0 is uneliminable.",
                "However, because s2 0 performs better than s1 0 against the tc strategies, it follows that all of the tc strategies must be eliminated.",
                "For each c ∈ C, the <br>strategy</br> tc can only be eliminated by one of the strategies tc,l (with the same c), because these are the only other strategies that get the column player a utility of 1 against s1 c, and s1 c is uneliminable.",
                "But, in order for some tc,l to eliminate tc, s2 l must be eliminated first.",
                "Only s1 l can eliminate s2 l , because it is the only other <br>strategy</br> that gets the row player a utility of 1 against tl, and tl is uneliminable.",
                "We next show that for every v ∈ V only one of s2 +v, s2 −v can be eliminated.",
                "This is because in order for s1 +v to eliminate s2 +v, tv needs to have been eliminated and t1, not (so tv must be eliminated before t1); but in order for s1 −v to eliminate s2 −v, t1 needs to have been eliminated and tv, not (so t1 must be eliminated before tv).",
                "So, set v to true if s2 +v is eliminated, and to false otherwise Because by the above, for every clause c, one of the s2 l with l ∈ c must be eliminated, it follows that this is a satisfying assignment to the satisfiability instance.",
                "Using Theorem 1, it is now (relatively) easy to show that IWD-UNIQUE-SOLUTION is also NP-complete under the same restrictions.",
                "Theorem 2.",
                "IWD-UNIQUE-SOLUTION is NP-complete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "Again, the problem is in NP because we can nondeterministically choose the sequence of eliminations and verify whether it is correct.",
                "To show NP-hardness, we reduce an arbitrary IWD-<br>strategy</br>-ELIMINATION instance to the following IWD-UNIQUE-SOLUTION instance.",
                "Let all the strategies for each player from the original instance remain part of the new instance, and let the utilities resulting from the players playing a pair of these strategies be the same.",
                "We add three additional strategies σ1 r , σ2 r , σ3 r for the row player, and three additional strategies σ1 c , σ2 c , σ3 c for the column player.",
                "Let the additional utilities be as follows: • ur(σr, σj c) = 1 for all σr /∈ {σ1 r , σ2 r , σ3 r } and j ∈ {2, 3}; • ur(σi r, σc) = 1 for all i ∈ {1, 2, 3} and σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 for all i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • and the row players utility is 0 in all other cases involving a new <br>strategy</br>. • uc(σ3 r , σc) = 1 for all σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 for all j ∈ {2, 3} (σ∗ r is the <br>strategy</br> to be eliminated in the original instance); • uc(σi r, σ1 c ) = 1 for all i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • and the column players utility is 0 in all other cases involving a new strategy.",
                "We proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the original IWDSTRATEGY-ELIMINATION instance.",
                "Then, perform the same sequence of eliminations to eliminate σ∗ r in the new IWD-UNIQUE-SOLUTION instance. (This is possible because at any stage, any weak dominance for the row player in the original instance is still a weak dominance in the new instance, because the two strategies utilities for the row player are the same when the column player plays one of the new strategies; and the same is true for the column player.)",
                "Once σ∗ r is eliminated, let σ1 c eliminate σ2 c . (It performs better against σ2 r .)",
                "Then, let σ1 r eliminate all the other remaining strategies for the row player. (It always performs better against either σ1 c or σ3 c .)",
                "Finally, σ1 c is the unique best response against σ1 r among the column players remaining strategies, so let it eliminate all the other remaining strategies for the column player.",
                "Thus, there exists a solution to the IWD-UNIQUE-SOLUTION instance.",
                "Now suppose there exists a solution to the IWD-UNIQUESOLUTION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We will show that none of the new strategies (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) can either eliminate another <br>strategy</br>, or be eliminated before σ∗ r is eliminated.",
                "Thus, there must be a sequence of eliminations ending in the elimination of σ∗ r , which does not involve any of the new strategies, and is therefore a valid sequence of eliminations in the original game (because all original strategies perform the same against each new <br>strategy</br>).",
                "We now show that this is true by exhausting all possibilities for the first elimination before σ∗ r is eliminated that involves a new <br>strategy</br>.",
                "None of the σi r can be eliminated by a σr /∈ {σ1 r , σ2 r , σ3 r }, because the σi r perform better against σ1 c . σ1 r cannot eliminate any other <br>strategy</br>, because it always performs poorer against σ2 c . σ2 r and σ3 r are equivalent from the row players perspective (and thus cannot eliminate each other), and cannot eliminate any other <br>strategy</br> because they always perform poorer against σ3 c .",
                "None of the σj c can be eliminated by a σc /∈ {σ1 c , σ2 c , σ3 c }, because the σj c always perform better against either σ1 r or σ2 r . σ1 c cannot eliminate any other <br>strategy</br>, because it always performs poorer against either σ∗ r or σ3 r . σ2 c cannot eliminate any other <br>strategy</br>, because it always performs poorer against σ2 r or σ3 r . σ3 c cannot eliminate any other strategy, because it always performs poorer against σ1 r or σ3 r .",
                "Thus, there exists a solution to the IWDSTRATEGY-ELIMINATION instance.",
                "A slightly weaker version of the part of Theorem 2 concerning dominance by pure strategies only is the main result of Gilboa et al. [7]. (Besides not proving the result for dominance by mixed strategies, the original result was weaker because it required utilities {0, 1, 2, 3, 4, 5, 6, 7, 8} rather than just {0, 1} (and because of this, our Lemma 1 cannot be applied to it to get the result for mixed strategies).) 5. (ITERATED) DOMINANCE USING MIXED STRATEGIES WITH SMALL SUPPORTS When showing that a <br>strategy</br> is dominated by a mixed <br>strategy</br>, there are several reasons to prefer exhibiting a 92 dominating strategy that places positive probability on as few pure strategies as possible.",
                "First, this will reduce the number of bits required to specify the dominating <br>strategy</br> (and thus the proof of dominance can be communicated quicker): if the dominating mixed <br>strategy</br> places positive probability on only k strategies, then it can be specified using k real numbers for the probabilities, plus k log m (where m is the number of strategies for the player under consideration) bits to indicate which strategies are used.",
                "Second, the proof of dominance will be cleaner: for a dominating mixed <br>strategy</br>, it is typically (always in the case of strict dominance) possible to spread some of the probability onto any unused pure <br>strategy</br> and still have a dominating strategy, but this obscures which pure strategies are the ones that are key in making the mixed strategy dominating.",
                "Third, because (by the previous) the argument for eliminating the dominated <br>strategy</br> is simpler and easier to understand, it is more likely to be accepted.",
                "Fourth, the level of risk neutrality required for the argument to work is reduced, at least in the extreme case where dominance by a single pure <br>strategy</br> can be exhibited (no risk neutrality is required here).",
                "This motivates the following problem.",
                "Definition 4 (MINIMUM-DOMINATING-SET).",
                "We are given the row players utilities of a game in normal form, a distinguished <br>strategy</br> σ∗ for the row player, a specification of whether the dominance should be strict or weak, and a number k. We are asked whether there exists a mixed <br>strategy</br> σ for the row player that places positive probability on at most k pure strategies, and dominates σ∗ in the required sense.",
                "Unfortunately, this problem is NP-complete.",
                "Theorem 3.",
                "MINIMUM-DOMINATING-SET is NPcomplete, both for strict and for weak dominance.",
                "Proof.",
                "The problem is in NP because we can nondeterministically choose a set of at most k strategies to give positive probability, and decide whether we can dominate σ∗ with these k strategies as described in Proposition 1.",
                "To show NP-hardness, we reduce an arbitrary SET-COVER instance (given a set S, subsets S1, S2, . . . , Sr, and a number t, can all of S be covered by at most t of the subsets?) to the following MINIMUM-DOMINATING-SET instance.",
                "For every element s ∈ S, there is a pure <br>strategy</br> σs for the column player.",
                "For every subset Si, there is a pure <br>strategy</br> σSi for the row player.",
                "Finally, there is the distinguished pure <br>strategy</br> σ∗ for the row player.",
                "The row players utilities are as follows: ur(σSi , σs) = t + 1 if s ∈ Si; ur(σSi , σs) = 0 if s /∈ Si; ur(σ∗ , σs) = 1 for all s ∈ S. Finally, we let k = t. We now proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the SET-COVER instance.",
                "Without loss of generality, we can assume that there are exactly k subsets in the cover.",
                "Then, for every Si that is in the cover, let the dominating <br>strategy</br> σ place exactly 1 k probability on the corresponding pure <br>strategy</br> σSi .",
                "Now, if we let n(s) be the number of subsets in the cover containing s (we observe that that n(s) ≥ 1), then for every <br>strategy</br> σs for the column player, the row players expected utility for playing σ when the column player is playing σs is u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs).",
                "So σ strictly (and thus also weakly) dominates σ∗ , and there exists a solution to the MINIMUM-DOMINATING-SET instance.",
                "Now suppose there exists a solution to the MINIMUMDOMINATING-SET instance.",
                "Consider the (at most k) pure strategies of the form σSi on which the dominating mixed <br>strategy</br> σ places positive probability, and let T be the collection of the corresponding subsets Si.",
                "We claim that T is a cover.",
                "For suppose there is some s ∈ S that is not in any of the subsets in T .",
                "Then, if the column player plays σs, the row player (when playing σ) will always receive utility 0-as opposed to the utility of 1 the row player would receive for playing σ∗ , contradicting the fact that σ dominates σ∗ (whether this dominance is weak or strict).",
                "It follows that there exists a solution to the SET-COVER instance.",
                "On the other hand, if we require that the dominating <br>strategy</br> only places positive probability on a very small number of pure strategies, then it once again becomes easy to check whether a <br>strategy</br> is dominated.",
                "Specifically, to find out whether player is <br>strategy</br> σ∗ is dominated by a <br>strategy</br> that places positive probability on only k pure strategies, we can simply check, for every subset of k of player is pure strategies, whether there is a strategy that places positive probability only on these k strategies and dominates σ∗ , using Proposition 1.",
                "This requires only O(|Σi|k ) such checks.",
                "Thus, if k is a constant, this constitutes a polynomial-time algorithm.",
                "A natural question to ask next is whether iterated strict dominance remains computationally easy when dominating strategies are required to place positive probability on at most k pure strategies, where k is a small constant. (We have already shown in Section 4 that iterated weak dominance is hard even when k = 1, that is, only dominance by pure strategies is allowed.)",
                "Of course, if iterated strict dominance were path-independent under this restriction, computational easiness would follow as it did in Section 4.",
                "However, it turns out that this is not the case.",
                "Observation 1.",
                "If we restrict the dominating strategies to place positive probability on at most two pure strategies, iterated strict dominance becomes path-dependent.",
                "Proof.",
                "Consider the following game: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Let (i, j) denote the outcome in which the row player plays the ith row and the column player plays the jth column.",
                "Because (1, 1), (2, 2), and (4, 3) are all Nash equilibria, none of the column players pure strategies will ever be eliminated, and neither will rows 1, 2, and 4.",
                "We now observe that randomizing uniformly over rows 1 and 2 dominates row 3, and randomizing uniformly over rows 3 and 4 dominates row 5.",
                "However, if we eliminate row 3 first, it becomes impossible to dominate row 5 without randomizing over at least 3 pure strategies.",
                "Indeed, iterated strict dominance turns out to be hard even when k = 3.",
                "Theorem 4.",
                "If we restrict the dominating strategies to place positive probability on at most three pure strategies, it becomes NP-complete to decide whether a given <br>strategy</br> can be eliminated using iterated strict dominance. 93 Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can check in polynomial time whether this is a valid sequence of eliminations (for any <br>strategy</br> to be eliminated, we can check, for every subset of three other strategies, whether there is a <br>strategy</br> placing positive probability on only these three strategies that dominates the strategy to be eliminated, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following two-player game.",
                "For every variable v ∈ V , the row player has strategies s+v, s−v, s1 v, s2 v, s3 v, s4 v, and the column player has strategies t1 v, t2 v, t3 v, t4 v. For every clause c ∈ C, the row player has a <br>strategy</br> sc, and the column player has a <br>strategy</br> tc, as well as, for every literal l occurring in c, an additional strategy tl c. The row player has two additional strategies s1 and s2. (s2 is the strategy that we are seeking to eliminate.)",
                "Finally, the column player has one additional <br>strategy</br> t1.",
                "The utility function for the row player is given as follows (where is some sufficiently small number): • ur(s+v, tj v) = 4 if j ∈ {1, 2}, for all v ∈ V ; • ur(s+v, tj v) = 1 if j ∈ {3, 4}, for all v ∈ V ; • ur(s−v, tj v) = 1 if j ∈ {1, 2}, for all v ∈ V ; • ur(s−v, tj v) = 4 if j ∈ {3, 4}, for all v ∈ V ; • ur(s+v, t) = ur(s−v, t) = 0 for all v ∈ V and t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 for all v ∈ V and i ∈ {1, 2, 3, 4}; • ur(si v, t) = for all v ∈ V , i ∈ {1, 2, 3, 4}, and t = ti v; • ur(sc, tc) = 2 for all c ∈ C; • ur(sc, t) = 0 for all c ∈ C and t = tc; • ur(s1, t1) = 1 + ; • ur(s1, t) = for all t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 for all c ∈ C; • ur(s2, t) = 0 for all t /∈ {t1} ∪ {tc : c ∈ C}.",
                "The utility function for the column player is given as follows: • uc(si v, ti v) = 1 for all v ∈ V and i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 for all v ∈ V , i ∈ {1, 2, 3, 4}, and s = si v; • uc(sc, tc) = 1 for all c ∈ C; • uc(sl, tc) = 1 for all c ∈ C and l ∈ L occurring in c; • uc(s, tc) = 0 for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + for all c ∈ C; • uc(sl , tl c) = 1 + for all c ∈ C and l = l occurring in c; • uc(s, tl c) = for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c, l = l }; • uc(s2, t1) = 1; • uc(s, t1) = 0 for all s = s2.",
                "We now show that the two instances are equivalent.",
                "First, suppose that there is a solution to the satisfiability instance.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the satisfying assignment, eliminate s+v with the mixed <br>strategy</br> σr that places probability 1/3 on s−v, probability 1/3 on s1 v, and probability 1/3 on s2 v. (The expected utility of playing σr against t1 v or t2 v is 14/3 > 4; against t3 v or t4 v, it is 4/3 > 1; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 2.",
                "Similarly, for every variable v that is set to false in the satisfying assignment, eliminate s−v with the mixed <br>strategy</br> σr that places probability 1/3 on s+v, probability 1/3 on s3 v, and probability 1/3 on s4 v. (The expected utility of playing σr against t1 v or t2 v is 4/3 > 1; against t3 v or t4 v, it is 14/3 > 4; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 3.",
                "For every c ∈ C, eliminate tc with any tl c for which l was set to true in the satisfying assignment. (This is a valid dominance because tl c performs better than tc against any <br>strategy</br> other than sl, and we eliminated sl in step 1 or in step 2.) 4.",
                "Finally, eliminate s2 with s1. (This is a valid dominance because s1 performs better than s2 against any <br>strategy</br> other than those in {tc : c ∈ C}, which we eliminated in step 3.)",
                "Hence, there is an elimination path that eliminates s2.",
                "Now, suppose that there is an elimination path that eliminates s2.",
                "The <br>strategy</br> that eventually dominates s2 must place most of its probability on s1, because s1 is the only other <br>strategy</br> that performs well against t1, which cannot be eliminated before s2.",
                "But, s1 performs significantly worse than s2 against any <br>strategy</br> tc with c ∈ C, so it follows that all these strategies must be eliminated first.",
                "Each <br>strategy</br> tc can only be eliminated by a <br>strategy</br> that places most of its weight on the corresponding strategies tl c with l ∈ c, because they are the only other strategies that perform well against sc, which cannot be eliminated before tc.",
                "But, each <br>strategy</br> tl c performs significantly worse than tc against sl, so it follows that for every clause c, for one of the literals l occurring in it, sl must be eliminated first.",
                "Now, strategies of the form tj v will never be eliminated because they are the unique best responses to the corresponding strategies sj v (which are, in turn, the best responses to the corresponding tj v).",
                "As a result, if <br>strategy</br> s+v (respectively, s−v) is eliminated, then its opposite <br>strategy</br> s−v (respectively, s+v) can no longer be eliminated, for the following reason.",
                "There is no other pure <br>strategy</br> remaining that gets a significant utility against more than one of the strategies t1 v, t2 v, t3 v, t4 v, but s−v (respectively, s+v) gets significant utility against all 4, and therefore cannot be dominated by a mixed <br>strategy</br> placing positive probability on at most 3 strategies.",
                "It follows that for each v ∈ V , at most one of the strategies s+v, s−v is eliminated, in such a way that for every clause c, for one of the literals l occurring in it, sl must be eliminated.",
                "But then setting all the literals l such that sl is eliminated to true constitutes a solution to the satisfiability instance.",
                "In the next section, we return to the setting where there is no restriction on the number of pure strategies on which a dominating mixed <br>strategy</br> can place positive probability. 6. (ITERATED) DOMINANCE IN BAYESIAN GAMES So far, we have focused on normal form games that are flatly represented (that is, every matrix entry is given ex94 plicitly).",
                "However, for many games, the flat representation is too large to write down explicitly, and instead, some representation that exploits the structure of the game needs to be used.",
                "Bayesian games, besides being of interest in their own right, can be thought of as a useful structured representation of normal form games, and we will study them in this section.",
                "In a Bayesian game, each player first receives privately held preference information (the players type) from a distribution, which determines the utility that that player receives for every outcome of (that is, vector of actions played in) the game.",
                "After receiving this type, the player plays an action based on it.7 Definition 5.",
                "A Bayesian game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of actions Ai, a (finite) type space Θi with a probability distribution πi over it, and a utility function ui : Θi × A1 × A2 × . . . × An → R (where ui(θi, a1, a2, . . . , an) denotes player is utility when is type is θi and each player j plays action aj).",
                "A pure <br>strategy</br> in a Bayesian game is a mapping from types to actions, σi : Θi → Ai, where σi(θi) denotes the action that player i plays for type θi.",
                "Any vector of pure strategies in a Bayesian game defines an (expected) utility for each player, and therefore we can translate a Bayesian game into a normal form game.",
                "In this normal form game, the notions of dominance and iterated dominance are defined as before.",
                "However, the normal form representation of the game is exponentially larger than the Bayesian representation, because each player i has |Ai||Θi| distinct pure strategies.",
                "Thus, any algorithm for Bayesian games that relies on expanding the game to its normal form will require exponential time.",
                "Specifically, our easiness results for normal form games do not directly transfer to this setting.",
                "In fact, it turns out that checking whether a <br>strategy</br> is dominated by a pure <br>strategy</br> is hard in Bayesian games.",
                "Theorem 5.",
                "In a Bayesian game, it is NP-complete to decide whether a given pure <br>strategy</br> σr : Θr → Ar is dominated by some other pure <br>strategy</br> (both for strict and weak dominance), even when the row players distribution over types is uniform.",
                "Proof.",
                "The problem is in NP because it is easy to verify whether a candidate dominating <br>strategy</br> is indeed a dominating <br>strategy</br>.",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a set of clauses C using variables from V ) to the following Bayesian game.",
                "Let the row players action set be Ar = {t, f, 0} and let the column players action set be Ac = {ac : c ∈ C}.",
                "Let the row players type set be Θr = {θv : v ∈ V }, with a distribution πr that is uniform.",
                "Let the row players utility function be as follows: • ur(θv, 0, ac) = 0 for all v ∈ V and c ∈ C; • ur(θv, b, ac) = |V | for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b satisfies c; • ur(θv, b, ac) = −1 for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b does not satisfy c. 7 In general, a player can also receive a signal about the other players preferences, but we will not concern ourselves with that here.",
                "Let the pure <br>strategy</br> to be dominated be the one that plays 0 for every type.",
                "We show that the <br>strategy</br> is dominated by a pure <br>strategy</br> if and only if there is a solution to the satisfiability instance.",
                "First, suppose there is a solution to the satisfiability instance.",
                "Then, let σd r be given by: σd r (θv) = t if v is set to true in the solution to the satisfiability instance, and σd r (θv) = f otherwise.",
                "Then, against any action ac by the column player, there is at least one type θv such that either +v ∈ c and σd r (θv) = t, or −v ∈ c and σd r (θv) = f. Thus, the row players expected utility against action ac is at least |V | |V | − |V |−1 |V | = 1 |V | > 0.",
                "So, σd r is a dominating <br>strategy</br>.",
                "Now, suppose there is a dominating pure <br>strategy</br> σd r .",
                "This dominating <br>strategy</br> must play t or f for at least one type.",
                "Thus, against any ac by the column player, there must at least be some type θv for which ur(θv, σd r (θv), ac) > 0.",
                "That is, there must be at least one variable v such that setting v to σd r (θv) satifies c. But then, setting each v to σd r (θv) must satisfy all the clauses.",
                "So a satisfying assignment exists.",
                "However, it turns out that we can modify the linear programs from Proposition 1 to obtain a polynomial time algorithm for checking whether a <br>strategy</br> is dominated by a mixed <br>strategy</br> in Bayesian games.",
                "Theorem 6.",
                "In a Bayesian game, it can be decided in polynomial time whether a given (possibly mixed) <br>strategy</br> σr is dominated by some other mixed <br>strategy</br>, using linear programming (both for strict and weak dominance).",
                "Proof.",
                "We can modify the linear programs presented in Proposition 1 as follows.",
                "For strict dominance, again assuming without loss of generality that all the utilities in the game are positive, use the following linear program (in which pσr r (θr, ar) is the probability that σr, the <br>strategy</br> to be dominated, places on ar for type θr): minimize θr∈Θr ar∈Ar pr(ar) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1.",
                "Assuming that π(θr) > 0 for all θr ∈ Θr, this program will return an objective value smaller than |Θr| if and only if σr is strictly dominated, by reasoning similar to that done in Proposition 1.",
                "For weak dominance, use the following linear program: maximize ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) = 1.",
                "This program will return an objective value greater than 0 if and only if σr is weakly dominated, by reasoning similar to that done in Proposition 1.",
                "We now turn to iterated dominance in Bayesian games.",
                "Na¨ıvely, one might argue that iterated dominance in Bayesian 95 games always requires an exponential number of steps when a significant fraction of the games pure strategies can be eliminated, because there are exponentially many pure strategies.",
                "However, this is not a very strong argument because oftentimes we can eliminate exponentially many pure strategies in one step.",
                "For example, if for some type θr ∈ Θr we have, for all ac ∈ Ac, that u(θr, a1 r, ac) > u(θr, a2 r, ac), then any pure <br>strategy</br> for the row player which plays action a2 r for type θr is dominated (by the <br>strategy</br> that plays action a1 r for type θr instead)-and there are exponentially many (|Ar||Θr|−1 ) such strategies.",
                "It is therefore conceivable that we need only polynomially many eliminations of collections of a players strategies.",
                "However, the following theorem shows that this is not the case, by giving an example where an exponential number of iterations (that is, alternations between the players in eliminating strategies) is required. (We emphasize that this is not a result about computational complexity.)",
                "Theorem 7.",
                "Even in symmetric 3-player Bayesian games, iterated dominance by pure strategies can require an exponential number of iterations (both for strict and weak dominance), even with only three actions per player.",
                "Proof.",
                "Let each player i ∈ {1, 2, 3} have n + 1 types θ1 i , θ2 i , . . . , θn+1 i .",
                "Let each player i have 3 actions ai, bi, ci, and let the utility function of each player be defined as follows. (In the below, i + 1 and i + 2 are shorthand for i + 1(mod 3) and i + 2(mod 3) when used as player indices.",
                "Also, −∞ can be replaced by a sufficiently negative number.",
                "Finally, δ and should be chosen to be very small (even compared to 2−(n+1) ), and should be more than twice as large as δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 for si+1 = ci+1 or si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − for si+1 = ai+1 and si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ for si+1 = ai+1 or si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ for all si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ for all si+1, si+2 when j > 1; • ui(θj i ; bi, si+1, si+2) = − for all si+1, si+2 when j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 for all si+1 when j > 1; • ui(θj i ; ci, si+1, si+2) = δ− for all si+1 and si+2 = ci+2 when j > 1.",
                "Let the distribution over each players types be given by p(θj i ) = 2−j (with the exception that p(θ2 i ) = 2−2 +2−(n+1) ).",
                "We will be interested in eliminating strategies of the following form: play bi for type θ1 i , and play one of bi or ci otherwise.",
                "Because the utility function is the same for any type θj i with j > 1, these strategies are effectively defined by the total probability that they place on ci,8 which is t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j where tj i = 1 if player i 8 Note that the strategies are still pure strategies; the probability placed on an action by a <br>strategy</br> here is simply the sum of the probabilities of the types for which the <br>strategy</br> chooses that action. plays ci for type θj i , and 0 otherwise.",
                "This probability is different for any two different strategies of the given form, and we have exponentially many different strategies of the given form.",
                "For any probability q which can be expressed as t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (with all tj ∈ {0, 1}), let σi(q) denote the (unique) <br>strategy</br> of the given form for player i which places a total probability of q on ci.",
                "Any <br>strategy</br> that plays ci for type θ1 i or ai for some type θj i with j > 1 can immediately be eliminated.",
                "We will show that, after that, we must eliminate the strategies σi(q) with high q first, slowly working down to those with lower q.",
                "Claim 1: If σi+1(q ) and σi+2(q ) have not yet been eliminated, and q < q , then σi(q) cannot yet be eliminated.",
                "Proof: First, we show that no <br>strategy</br> σi(q ) can eliminate σi(q).",
                "Against σi+1(q ), σi+2(q ), the utility of playing σi(p) is − + p · δ − p · q /2.",
                "Thus, when q = 0, it is best to set p as high as possible (and we note that σi+1(0) and σi+2(0) have not been eliminated), but when q > 0, it is best to set p as low as possible because δ < q /2.",
                "Thus, whether q > q or q < q , σi(q) will always do strictly better than σi(q ) against some remaining opponent strategies.",
                "Hence, no <br>strategy</br> σi(q ) can eliminate σi(q).",
                "The only other pure strategies that could dominate σi(q) are strategies that play ai for type θ1 i , and bi or ci for all other types.",
                "Let us take such a <br>strategy</br> and suppose that it plays c with probability p. Against σi+1(q ), σi+2(q ) (which have not yet been eliminated), the utility of playing this <br>strategy</br> is −(q )2 /2 − /2 + p · δ − p · q /2.",
                "On the other hand, playing σi(q) gives − + q · δ − q · q /2.",
                "Because q > q, we have −(q )2 /2 < −q · q /2, and because δ and are small, it follows that σi(q) receives a higher utility.",
                "Therefore, no <br>strategy</br> dominates σi(q), proving the claim.",
                "Claim 2: If for all q > q, σi+1(q ) and σi+2(q ) have been eliminated, then σi(q) can be eliminated.",
                "Proof: Consider the <br>strategy</br> for player i that plays ai for type θ1 i , and bi for all other types (call this <br>strategy</br> σi); we claim σi dominates σi(q).",
                "First, if either of the other players k plays ak for θ1 k, then σi performs better than σi(q) (which receives −∞ in some cases).",
                "Because the strategies for player k that play ck for type θ1 k, or ak for some type θj k with j > 1, have already been eliminated, all that remains to check is that σi performs better than σi(q) whenever both of the other two players play strategies of the following form: play bk for type θ1 k, and play one of bk or ck otherwise.",
                "We note that among these strategies, there are none left that place probability greater than q on ck.",
                "Letting qk denote the probability with which player k plays ck, the expected utility of playing σi is −qi+1 · qi+2/2 − /2.",
                "On the other hand, the utility of playing σi(q) is − + q · δ − q · qi+2/2.",
                "Because qi+1 ≤ q, the difference between these two expressions is at least /2 − δ, which is positive.",
                "It follows that σi dominates σi(q).",
                "From Claim 2, it follows that all strategies of the form σi(q) will eventually be eliminated.",
                "However, Claim 1 shows that we cannot go ahead and eliminate multiple such strategies for one player, unless at least one other player simultaneously keeps up in the eliminated strategies: every time a σi(q) is eliminated such that σi+1(q) and σi+2(q) have not yet been eliminated, we need to eliminate one of the latter two strategies before any σi(q ) with q > q can be eliminated-that is, we need to alternate between players.",
                "Because there are exponentially many strategies of the form σi(q), it follows that iterated elimination will require exponentially many iterations to complete. 96 It follows that an efficient algorithm for iterated dominance (strict or weak) by pure strategies in Bayesian games, if it exists, must somehow be able to perform (at least part of) many iterations in a single step of the algorithm (because if each step only performed a single iteration, we would need exponentially many steps).",
                "Interestingly, Knuth et al. [11] argue that iterated dominance appears to be an inherently sequential problem (in light of their result that iterated very weak dominance is P-complete, that is, apparently not efficiently parallelizable), suggesting that aggregating many iterations may be difficult. 7.",
                "CONCLUSIONS While the Nash equilibrium solution concept is studied more and more intensely in our community, the perhaps more elementary concept of (iterated) dominance has received much less attention.",
                "In this paper we studied various computational aspects of this concept.",
                "We first studied both strict and weak dominance (not iterated), and showed that checking whether a given <br>strategy</br> is dominated by some mixed <br>strategy</br> can be done in polynomial time using a single linear program solve.",
                "We then moved on to iterated dominance.",
                "We showed that determining whether there is some path that eliminates a given <br>strategy</br> is NP-complete with iterated weak dominance.",
                "This allowed us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then studied what happens when the dominating <br>strategy</br> is allowed to place positive probability on only a few pure strategies.",
                "First, we showed that finding the dominating <br>strategy</br> with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we showed that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given <br>strategy</br> can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we studied dominance and iterated dominance in Bayesian games, as an example of a concise representation language for normal form games that is interesting in its own right.",
                "We showed that, unlike in normal form games, deciding whether a given pure <br>strategy</br> is dominated by another pure <br>strategy</br> in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak dominance).",
                "Finally, we showed that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "There are various avenues for future research.",
                "First, there is the open question of whether it is possible to complete iterated dominance in Bayesian games in polynomial time (even though we showed that an exponential number of alternations between the players in eliminating strategies is sometimes required).",
                "Second, we can study computational aspects of (iterated) dominance in concise representations of normal form games other than Bayesian games-for example, in graphical games [9] or local-effect/action graph games [12, 2]. (How to efficiently perform iterated very weak dominance has already been studied for partially observable stochastic games [8].)",
                "Finally, we can ask whether some of the algorithms we described (such as the one for iterated strict dominance with mixed strategies) can be made faster. 8.",
                "REFERENCES [1] Krzysztof R. Apt.",
                "Uniform proofs of order independence for various <br>strategy</br> elimination procedures.",
                "Contributions to Theoretical Economics, 4(1), 2004. [2] Nivan A. R. Bhat and Kevin Leyton-Brown.",
                "Computing Nash equilibria of action-graph games.",
                "In UAI, 2004. [3] Ben Blum, Christian R. Shelton, and Daphne Koller.",
                "A continuation method for Nash equilibria in structured games.",
                "In IJCAI, 2003. [4] Vincent Conitzer and Tuomas Sandholm.",
                "Complexity results about Nash equilibria.",
                "In IJCAI, pages 765-771, 2003. [5] Drew Fudenberg and Jean Tirole.",
                "Game Theory.",
                "MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "On the order of eliminating dominated strategies.",
                "Operations Research Letters, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "The complexity of eliminating dominated strategies.",
                "Mathematics of Operation Research, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein, and Shlomo Zilberstein.",
                "Dynamic programming for partially observable stochastic games.",
                "In AAAI, pages 709-715, 2004. [9] Michael Kearns, Michael Littman, and Satinder Singh.",
                "Graphical models for game theory.",
                "In UAI, 2001. [10] Leonid Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou, and John N Tsitsiklis.",
                "A note on <br>strategy</br> elimination in bimatrix games.",
                "Operations Research Letters, 7(3):103-107, 1988. [12] Kevin Leyton-Brown and Moshe Tennenholtz.",
                "Local-effect games.",
                "In IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [14] Michael Littman and Peter Stone.",
                "A polynomial-time Nash equilibrium algorithm for repeated games.",
                "In ACM-EC, pages 48-54, 2003. [15] Leslie M. Marx and Jeroen M. Swinkels.",
                "Order independence for iterated weak dominance.",
                "Games and Economic Behavior, 18:219-245, 1997. [16] Leslie M. Marx and Jeroen M. Swinkels.",
                "Corrigendum, order independence for iterated weak dominance.",
                "Games and Economic Behavior, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston, and Jerry R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [18] Roger Myerson.",
                "Game Theory: Analysis of Conflict.",
                "Harvard University Press, Cambridge, 1991. [19] Martin J Osborne and Ariel Rubinstein.",
                "A Course in Game Theory.",
                "MIT Press, 1994. [20] Christos Papadimitriou.",
                "Algorithms, games and the Internet.",
                "In STOC, pages 749-753, 2001. [21] Ryan Porter, Eugene Nudelman, and Yoav Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, 2004. 97"
            ],
            "original_annotated_samples": [
                "We first study both strict and weak dominance (not iterated), and show that checking whether a given <br>strategy</br> is dominated by some mixed <br>strategy</br> can be done in polynomial time using a single linear program solve.",
                "We show that determining whether there is some path that eliminates a given <br>strategy</br> is NP-complete with iterated weak dominance.",
                "We then study what happens when the dominating <br>strategy</br> is allowed to place positive probability on only a few pure strategies.",
                "First, we show that finding the dominating <br>strategy</br> with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we show that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given <br>strategy</br> can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3)."
            ],
            "translated_annotated_samples": [
                "Primero estudiamos tanto la dominancia estricta como la débil (no iterada), y demostramos que verificar si una <br>estrategia</br> dada es dominada por alguna <br>estrategia</br> mixta se puede hacer en tiempo polinómico utilizando la resolución de un único programa lineal.",
                "Mostramos que determinar si existe algún camino que elimine una <br>estrategia</br> dada es NP-completo con dominancia débil iterada.",
                "Luego estudiamos qué sucede cuando la <br>estrategia</br> dominante puede asignar una probabilidad positiva solo a unas pocas <br>estrategia</br>s puras.",
                "Primero, demostramos que encontrar la <br>estrategia</br> dominante con el tamaño de soporte mínimo es NP-completo (tanto para dominancia estricta como débil).",
                "Luego, demostramos que la dominancia estricta iterada se vuelve dependiente del camino cuando hay un límite en el tamaño del soporte de las <br>estrategia</br>s dominantes, y que decidir si una <br>estrategia</br> dada puede ser eliminada por dominancia estricta iterada bajo esta restricción es NP-completo (incluso cuando el límite en el tamaño del soporte es 3)."
            ],
            "translated_text": "Estudiamos varios aspectos computacionales de la resolución de juegos utilizando la dominancia y la dominancia iterada. Primero estudiamos tanto la dominancia estricta como la débil (no iterada), y demostramos que verificar si una <br>estrategia</br> dada es dominada por alguna <br>estrategia</br> mixta se puede hacer en tiempo polinómico utilizando la resolución de un único programa lineal. Luego pasamos a la dominancia iterada. Mostramos que determinar si existe algún camino que elimine una <br>estrategia</br> dada es NP-completo con dominancia débil iterada. Esto nos permite también demostrar que determinar si existe un camino que conduce a una solución única es NP-completo. Ambos resultados se mantienen tanto con como sin dominancia de estrategias mixtas. (Una versión más débil del segundo resultado (solo sin dominancia de estrategias mixtas) ya se conocía [7].) La dominancia estricta iterada, por otro lado, es independiente de la ruta (tanto con como sin dominancia por estrategias mixtas) y, por lo tanto, se puede realizar en tiempo polinómico. Luego estudiamos qué sucede cuando la <br>estrategia</br> dominante puede asignar una probabilidad positiva solo a unas pocas <br>estrategia</br>s puras. Primero, demostramos que encontrar la <br>estrategia</br> dominante con el tamaño de soporte mínimo es NP-completo (tanto para dominancia estricta como débil). Luego, demostramos que la dominancia estricta iterada se vuelve dependiente del camino cuando hay un límite en el tamaño del soporte de las <br>estrategia</br>s dominantes, y que decidir si una <br>estrategia</br> dada puede ser eliminada por dominancia estricta iterada bajo esta restricción es NP-completo (incluso cuando el límite en el tamaño del soporte es 3). ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "bayesian game": {
            "translated_key": "juego bayesiano",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Complexity of (Iterated) Dominance∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using dominance and iterated dominance.",
                "We first study both strict and weak dominance (not iterated), and show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then move on to iterated dominance.",
                "We show that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allows us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then study what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we show that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we show that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we study Bayesian games.",
                "We show that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a <br>bayesian game</br> is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak ∗ This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858, and a Sloan Fellowship. dominance).",
                "Finally, we show that iterated dominance using pure strategies can require an exponential number of iterations in a <br>bayesian game</br> (both with strict and weak dominance).",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent systems with self-interested agents, the optimal action for one agent may depend on the actions taken by other agents.",
                "In such settings, the agents require tools from game theory to rationally decide on an action.",
                "Game theory offers various formal models of strategic settings-the best-known of which is a game in normal (or matrix) form, specifying a utility (payoff) for each agent for each combination of strategies that the agents choose-as well as solution concepts, which, given a game, specify which outcomes are reasonable (under various assumptions of rationality and common knowledge).",
                "Probably the best-known (and certainly the most-studied) solution concept is that of Nash equilibrium.",
                "A Nash equilibrium specifies a strategy for each player, in such a way that no player has an incentive to (unilaterally) deviate from the prescribed strategy.",
                "Recently, numerous papers have studied computing Nash equilibria in various settings [9, 4, 12, 3, 13, 14], and the complexity of constructing a Nash equilibrium in normal form games has been labeled one of the two most important open problems on the boundary of P today [20].",
                "The problem of computing solutions according to the perhaps more elementary solution concepts of dominance and iterated dominance has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the game theory community [7].1 ) A strategy strictly dominates another strategy if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one.",
                "The idea is that dominated strategies can be eliminated from consideration.",
                "In iterated dominance, the elimination proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating strategy no longer needs to perform better than or as well as the dominated strategy against opponent strategies that were eliminated in earlier rounds.",
                "Computing solutions according to (iterated) dominance is important for at least the following reasons: 1) it can be computationally easier than computing (for instance) a Nash equilibrium (and therefore it can be useful as a preprocessing step in computing a Nash equilibrium), and 2) (iterated) dominance requires a weaker rationality assumption on the players than (for instance) Nash equilibrium, and therefore solutions derived according to it are more likely to occur.",
                "In this paper, we study some fundamental computational questions concerning dominance and iterated dominance, including how hard it is to check whether a given strategy can be eliminated by each of the variants of these notions.",
                "The rest of the paper is organized as follows.",
                "In Section 2, we briefly review definitions and basic properties of normal form games, strict and weak dominance, and iterated strict and weak dominance.",
                "In the remaining sections, we study computational aspects of dominance and iterated dominance.",
                "In Section 3, we study one-shot (not iterated) dominance.",
                "In Section 4, we study iterated dominance.",
                "In Section 5, we study dominance and iterated dominance when the dominating strategy can only place probability on a few pure strategies.",
                "Finally, in Section 6, we study dominance and iterated dominance in Bayesian games. 2.",
                "DEFINITIONS AND BASIC PROPERTIES In this section, we briefly review normal form games, as well as dominance and iterated dominance (both strict and weak).",
                "An n-player normal form game is defined as follows.",
                "Definition 1.",
                "A normal form game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of pure strategies Σi and a utility function ui : Σ1 × Σ2 × . . . × Σn → R (where ui(σ1, σ2, . . . , σn) denotes player is utility when each player j plays action σj).",
                "The two main notions of dominance are defined as follows.",
                "Definition 2.",
                "Player is strategy σi is said to be strictly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "Player is strategy σi is said to be weakly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) ≥ ui(σi, σ−i), and for at least one vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "In this definition, it is sometimes allowed for the dominating strategy σi to be a mixed strategy, that is, a probability distribution over pure strategies.",
                "In this case, the utilities in dominance altogether.",
                "For example, simple dominance checks are sometimes used as a subroutine in searching for Nash equilibria [21]. the definition are the expected utilities.2 There are other notions of dominance, such as very weak dominance (in which no strict inequality is required, so two strategies can dominate each other), but we will not study them here.",
                "When we are looking at the dominance relations for player i, the other players (−i) can be thought of as a single player.3 Therefore, in the rest of the paper, when we study one-shot (not iterated) dominance, we will focus without loss of generality on two-player games.4 In two-player games, we will generally refer to the players as r (row) and c (column) rather than 1 and 2.",
                "In iterated dominance, dominated strategies are removed from the game, and no longer have any effect on future dominance relations.",
                "Iterated dominance can eliminate more strategies than dominance, as follows. σr may originally not dominate σr because the latter performs better against σc; but then, once σc is removed because it is dominated by σc, σr dominates σr, and the latter can be removed.",
                "For example, in the following game, R can be removed first, after which D is dominated.",
                "L R U 1, 1 0, 0 D 0, 1 1, 0 Either strict or weak dominance can be used in the definition of iterated dominance.",
                "We note that the process of iterated dominance is never helped by removing a dominated mixed strategy, for the following reason.",
                "If σi gives player i a higher utility than σi against mixed strategy σj for player j = i (and strategies σ−{i,j} for the other players), then for at least one pure strategy σj that σj places positive probability on, σi must perform better than σi against σj (and strategies σ−{i,j} for the other players).",
                "Thus, removing the mixed strategy σj does not introduce any new dominances.",
                "More detailed discussions and examples can be found in standard texts on microeconomics or game theory [17, 5].",
                "We are now ready to move on to the core of this paper. 3.",
                "DOMINANCE (NOT ITERATED) In this section, we study the notion of one-shot (not iterated) dominance.",
                "As a first observation, checking whether a given strategy is strictly (weakly) dominated by some pure strategy is straightforward, by checking, for every pure strategy for that player, whether the latter strategy performs strictly better against all the opponents strategies (at least as well against all the opponents strategies, and strictly 2 The dominated strategy σi is, of course, also allowed to be mixed, but this has no technical implications for the paper: when we study one-shot dominance, we ask whether a given strategy is dominated, and it does not matter whether the given strategy is pure or mixed; when we study iterated dominance, there is no use in eliminating mixed strategies, as we will see shortly. 3 This player may have a very large strategy space (one pure strategy for every vector of pure strategies for the players that are being replaced).",
                "Nevertheless, this will not result in an increase in our representation size, because the original representation already had to specify utilities for each of these vectors. 4 We note that a restriction to two-player games would not be without loss of generality for iterated dominance.",
                "This is because for iterated dominance, we need to look at the dominated strategies of each individual player, so we cannot merge any players. 89 better against at least one).5 Next, we show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time by solving a single linear program. (Similar linear programs have been given before [18]; we present the result here for completeness, and because we will build on the linear programs given below in Theorem 6.)",
                "Proposition 1.",
                "Given the row players utilities, a subset Dr of the row players pure strategies Σr, and a distinguished strategy σ∗ r for the row player, we can check in time polynomial in the size of the game (by solving a single linear program of polynomial size) whether there exists some mixed strategy σr, that places positive probability only on strategies in Dr and dominates σ∗ r , both for strict and for weak dominance.",
                "Proof.",
                "Let pdr be the probability that σr places on dr ∈ Dr. We will solve a single linear program in each of our algorithms; linear programs can be solved in polynomial time [10].",
                "For strict dominance, the question is whether the pdr can be set so that for every pure strategy for the column player σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc).",
                "Because the inequality must be strict, we cannot solve this directly by linear programming.",
                "We proceed as follows.",
                "Because the game is finite, we may assume without loss of generality that all utilities are positive (if not, simply add a constant to all utilities.)",
                "Solve the following linear program: minimize dr∈Dr pdr such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc).",
                "If σ∗ r is strictly dominated by some mixed strategy, this linear program has a solution with objective value < 1. (The dominating strategy is a feasible solution with objective value exactly 1.",
                "Because no constraint is binding for this solution, we can reduce one of the probabilities slightly without affecting feasibility, thereby obtaining a solution with objective value < 1.)",
                "Moreover, if this linear program has a solution with objective value < 1, there is a mixed strategy strictly dominating σ∗ r , which can be obtained by taking the LP solution and adding the remaining probability to any strategy (because all the utilities are positive, this will add to the left side of any inequality, so all inequalities will become strict).",
                "For weak dominance, we can solve the following linear program: maximize σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1.",
                "If σ∗ r is weakly dominated by some mixed strategy, then that mixed strategy is a feasible solution to this program with objective value > 0, because for at least one strategy σc ∈ Σc we have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0.",
                "On the other hand, if this program has a solution with objective value > 0, then for at least one strategy σc ∈ Σc we 5 Recall that the assumption of a single opponent (that is, the assumption of two players) is without loss of generality for one-shot dominance. must have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, and thus the linear programs solution is a weakly dominating mixed strategy. 4.",
                "ITERATED DOMINANCE We now move on to iterated dominance.",
                "It is well-known that iterated strict dominance is path-independent [6, 19]that is, if we remove dominated strategies until no more dominated strategies remain, in the end the remaining strategies for each player will be the same, regardless of the order in which strategies are removed.",
                "Because of this, to see whether a given strategy can be eliminated by iterated strict dominance, all that needs to be done is to repeatedly remove strategies that are strictly dominated, until no more dominated strategies remain.",
                "Because we can check in polynomial time whether any given strategy is dominated (whether or not dominance by mixed strategies is allowed, as described in Section 3), this whole procedure takes only polynomial time.",
                "In the case of iterated dominance by pure strategies with two players, Knuth et al. [11] slightly improve on (speed up) the straightforward implementation of this procedure by keeping track of, for each ordered pair of strategies for a player, the number of opponent strategies that prevent the first strategy from dominating the second.",
                "Hereby the runtime for an m × n game is reduced from O((m + n)4 ) to O((m + n)3 ). (Actually, they only study very weak dominance (for which no strict inequalities are required), but the approach is easily extended.)",
                "In contrast, iterated weak dominance is known to be pathdependent.6 For example, in the following game, using iterated weak dominance we can eliminate M first, and then D, or R first, and then U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Therefore, while the procedure of removing weakly dominated strategies until no more weakly dominated strategies remain can certainly be executed in polynomial time, which strategies survive in the end depends on the order in which we remove the dominated strategies.",
                "We will investigate two questions for iterated weak dominance: whether a given strategy is eliminated in some path, and whether there is a path to a unique solution (one pure strategy left per player).",
                "We will show that both of these problems are computationally hard.",
                "Definition 3.",
                "Given a game in normal form and a distinguished strategy σ∗ , IWD-STRATEGY-ELIMINATION asks whether there is some path of iterated weak dominance that eliminates σ∗ .",
                "Given a game in normal form, IWDUNIQUE-SOLUTION asks whether there is some path of iterated weak dominance that leads to a unique solution (one strategy left per player).",
                "The following lemma shows a special case of normal form games in which allowing for weak dominance by mixed strategies (in addition to weak dominance by pure strategies) does 6 There is, however, a restriction of weak dominance called nice weak dominance which is path-independent [15, 16].",
                "For an overview of path-independence results, see Apt [1]. 90 not help.",
                "We will prove the hardness results in this setting, so that they will hold whether or not dominance by mixed strategies is allowed.",
                "Lemma 1.",
                "Suppose that all the utilities in a game are in {0, 1}.",
                "Then every pure strategy that is weakly dominated by a mixed strategy is also weakly dominated by a pure strategy.",
                "Proof.",
                "Suppose pure strategy σ is weakly dominated by mixed strategy σ∗ .",
                "If σ gets a utility of 1 against some opponent strategy (or vector of opponent strategies if there are more than 2 players), then all the pure strategies that σ∗ places positive probability on must also get a utility of 1 against that opponent strategy (or else the expected utility would be smaller than 1).",
                "Moreover, at least one of the pure strategies that σ∗ places positive probability on must get a utility of 1 against an opponent strategy that σ gets 0 against (or else the inequality would never be strict).",
                "It follows that this pure strategy weakly dominates σ.",
                "We are now ready to prove the main results of this section.",
                "Theorem 1.",
                "IWD-STRATEGY-ELIMINATION is NPcomplete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can easily check whether this is a valid sequence of eliminations (even when dominance by mixed strategies is allowed, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following IWD-STRATEGY-ELIMINATION instance. (In this instance, we will specify that certain strategies are uneliminable.",
                "A strategy σr can be made uneliminable, even when 0 and 1 are the only allowed utilities, by adding another strategy σr and another opponent strategy σc, so that: 1. σr and σr are the only strategies that give the row player a utility of 1 against σc. 2. σr and σr always give the row player the same utility. 3. σc is the only strategy that gives the column player a utility of 1 against σr, but otherwise σc always gives the column player utility 0.",
                "This makes it impossible to eliminate any of these three strategies.",
                "We will not explicitly specify the additional strategies to make the proof more legible.)",
                "In this proof, we will denote row player strategies by s, and column player strategies by t, to improve legibility.",
                "Let the row players pure strategy set be given as follows.",
                "For every variable v ∈ V , the row player has corresponding strategies s1 +v, s2 +v, s1 −v, s2 −v.",
                "Additionally, the row player has the following 2 strategies: s1 0 and s2 0, where s2 0 = σ∗ r (that is, it is the strategy we seek to eliminate).",
                "Finally, for every clause c ∈ C, the row player has corresponding strategies s1 c (uneliminable) and s2 c. Let the column players pure strategy set be given as follows.",
                "For every variable v ∈ V , the column player has a corresponding strategy tv.",
                "For every clause c ∈ C, the column player has a corresponding strategy tc, and additionally, for every literal l ∈ L that occurs in c, a strategy tc,l.",
                "For every variable v ∈ V , the column player has corresponding strategies t+v, t−v (both uneliminable).",
                "Finally, the column player has three additional strategies: t1 0 (uneliminable), t2 0, and t1.",
                "The utility function for the row player is given as follows: • ur(s1 +v, tv) = 0 for all v ∈ V ; • ur(s2 +v, tv) = 1 for all v ∈ V ; • ur(s1 −v, tv) = 1 for all v ∈ V ; • ur(s2 −v, tv) = 0 for all v ∈ V ; • ur(s1 +v, t1) = 1 for all v ∈ V ; • ur(s2 +v, t1) = 0 for all v ∈ V ; • ur(s1 −v, t1) = 0 for all v ∈ V ; • ur(s2 −v, t1) = 1 for all v ∈ V ; • ur(sb +v, t+v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sb −v, t−v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sl, t) = 0 otherwise for all l ∈ L and t ∈ S2; • ur(s1 0, tc) = 0 for all c ∈ C; • ur(s2 0, tc) = 1 for all c ∈ C; • ur(sb 0, t1 0) = 1 for all b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 otherwise for all b ∈ {1, 2} and t ∈ S2; • ur(sb c, t) = 0 otherwise for all c ∈ C and b ∈ {1, 2}; and the row players utility is 0 in every other case.",
                "The utility function for the column player is given as follows: • uc(s, tv) = 0 for all v ∈ V and s ∈ S1; • uc(s, t1) = 0 for all s ∈ S1; • uc(s2 l , tc) = 1 for all c ∈ C and l ∈ L where l ∈ c (literal l occurs in clause c); • uc(s2 l2 , tc,l1 ) = 1 for all c ∈ C and l1, l2 ∈ L, l1 = l2 where l2 ∈ c; • uc(s1 c, tc) = 1 for all c ∈ C; • uc(s2 c, tc) = 0 for all c ∈ C; • uc(sb c, tc,l) = 1 for all c ∈ C, l ∈ L, and b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 otherwise for all c ∈ C and l ∈ L; and the column players utility is 0 in every other case.",
                "We now show that the two instances are equivalent.",
                "First, suppose there is a solution to the satisfiability instance: that is, a truth-value assignment to the variables in V such that all clauses are satisfied.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the assignment, eliminate tv (which gives the column player utility 0 everywhere). 2.",
                "Then, for every variable v that is set to true in the assignment, eliminate s2 +v using s1 +v (which is possible because tv has been eliminated, and because t1 has not been eliminated (yet)). 3.",
                "Now eliminate t1 (which gives the column player utility 0 everywhere). 4.",
                "Next, for every variable v that is set to false in the assignment, eliminate s2 −v using s1 −v (which is possible because t1 has been eliminated, and because tv has not been eliminated (yet)). 5.",
                "For every clause c which has the variable corresponding to one of its positive literals l = +v set to true in the assignment, eliminate tc using tc,l (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 6.",
                "For every clause c which has the variable corresponding to one of its negative literals l = −v set to false in the assignment, eliminate tc using tc,l 91 (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 7.",
                "Because the assignment satisfied the formula, all the tc have now been eliminated.",
                "Thus, we can eliminate s2 0 = σ∗ r using s1 0.",
                "It follows that there is a solution to the IWD-STRATEGY-ELIMINATION instance.",
                "Now suppose there is a solution to the IWD-STRATEGYELIMINATION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We first observe that only s1 0 can eliminate s2 0 = σ∗ r , because it is the only other strategy that gets the row player a utility of 1 against t1 0, and t1 0 is uneliminable.",
                "However, because s2 0 performs better than s1 0 against the tc strategies, it follows that all of the tc strategies must be eliminated.",
                "For each c ∈ C, the strategy tc can only be eliminated by one of the strategies tc,l (with the same c), because these are the only other strategies that get the column player a utility of 1 against s1 c, and s1 c is uneliminable.",
                "But, in order for some tc,l to eliminate tc, s2 l must be eliminated first.",
                "Only s1 l can eliminate s2 l , because it is the only other strategy that gets the row player a utility of 1 against tl, and tl is uneliminable.",
                "We next show that for every v ∈ V only one of s2 +v, s2 −v can be eliminated.",
                "This is because in order for s1 +v to eliminate s2 +v, tv needs to have been eliminated and t1, not (so tv must be eliminated before t1); but in order for s1 −v to eliminate s2 −v, t1 needs to have been eliminated and tv, not (so t1 must be eliminated before tv).",
                "So, set v to true if s2 +v is eliminated, and to false otherwise Because by the above, for every clause c, one of the s2 l with l ∈ c must be eliminated, it follows that this is a satisfying assignment to the satisfiability instance.",
                "Using Theorem 1, it is now (relatively) easy to show that IWD-UNIQUE-SOLUTION is also NP-complete under the same restrictions.",
                "Theorem 2.",
                "IWD-UNIQUE-SOLUTION is NP-complete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "Again, the problem is in NP because we can nondeterministically choose the sequence of eliminations and verify whether it is correct.",
                "To show NP-hardness, we reduce an arbitrary IWD-STRATEGY-ELIMINATION instance to the following IWD-UNIQUE-SOLUTION instance.",
                "Let all the strategies for each player from the original instance remain part of the new instance, and let the utilities resulting from the players playing a pair of these strategies be the same.",
                "We add three additional strategies σ1 r , σ2 r , σ3 r for the row player, and three additional strategies σ1 c , σ2 c , σ3 c for the column player.",
                "Let the additional utilities be as follows: • ur(σr, σj c) = 1 for all σr /∈ {σ1 r , σ2 r , σ3 r } and j ∈ {2, 3}; • ur(σi r, σc) = 1 for all i ∈ {1, 2, 3} and σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 for all i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • and the row players utility is 0 in all other cases involving a new strategy. • uc(σ3 r , σc) = 1 for all σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 for all j ∈ {2, 3} (σ∗ r is the strategy to be eliminated in the original instance); • uc(σi r, σ1 c ) = 1 for all i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • and the column players utility is 0 in all other cases involving a new strategy.",
                "We proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the original IWDSTRATEGY-ELIMINATION instance.",
                "Then, perform the same sequence of eliminations to eliminate σ∗ r in the new IWD-UNIQUE-SOLUTION instance. (This is possible because at any stage, any weak dominance for the row player in the original instance is still a weak dominance in the new instance, because the two strategies utilities for the row player are the same when the column player plays one of the new strategies; and the same is true for the column player.)",
                "Once σ∗ r is eliminated, let σ1 c eliminate σ2 c . (It performs better against σ2 r .)",
                "Then, let σ1 r eliminate all the other remaining strategies for the row player. (It always performs better against either σ1 c or σ3 c .)",
                "Finally, σ1 c is the unique best response against σ1 r among the column players remaining strategies, so let it eliminate all the other remaining strategies for the column player.",
                "Thus, there exists a solution to the IWD-UNIQUE-SOLUTION instance.",
                "Now suppose there exists a solution to the IWD-UNIQUESOLUTION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We will show that none of the new strategies (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) can either eliminate another strategy, or be eliminated before σ∗ r is eliminated.",
                "Thus, there must be a sequence of eliminations ending in the elimination of σ∗ r , which does not involve any of the new strategies, and is therefore a valid sequence of eliminations in the original game (because all original strategies perform the same against each new strategy).",
                "We now show that this is true by exhausting all possibilities for the first elimination before σ∗ r is eliminated that involves a new strategy.",
                "None of the σi r can be eliminated by a σr /∈ {σ1 r , σ2 r , σ3 r }, because the σi r perform better against σ1 c . σ1 r cannot eliminate any other strategy, because it always performs poorer against σ2 c . σ2 r and σ3 r are equivalent from the row players perspective (and thus cannot eliminate each other), and cannot eliminate any other strategy because they always perform poorer against σ3 c .",
                "None of the σj c can be eliminated by a σc /∈ {σ1 c , σ2 c , σ3 c }, because the σj c always perform better against either σ1 r or σ2 r . σ1 c cannot eliminate any other strategy, because it always performs poorer against either σ∗ r or σ3 r . σ2 c cannot eliminate any other strategy, because it always performs poorer against σ2 r or σ3 r . σ3 c cannot eliminate any other strategy, because it always performs poorer against σ1 r or σ3 r .",
                "Thus, there exists a solution to the IWDSTRATEGY-ELIMINATION instance.",
                "A slightly weaker version of the part of Theorem 2 concerning dominance by pure strategies only is the main result of Gilboa et al. [7]. (Besides not proving the result for dominance by mixed strategies, the original result was weaker because it required utilities {0, 1, 2, 3, 4, 5, 6, 7, 8} rather than just {0, 1} (and because of this, our Lemma 1 cannot be applied to it to get the result for mixed strategies).) 5. (ITERATED) DOMINANCE USING MIXED STRATEGIES WITH SMALL SUPPORTS When showing that a strategy is dominated by a mixed strategy, there are several reasons to prefer exhibiting a 92 dominating strategy that places positive probability on as few pure strategies as possible.",
                "First, this will reduce the number of bits required to specify the dominating strategy (and thus the proof of dominance can be communicated quicker): if the dominating mixed strategy places positive probability on only k strategies, then it can be specified using k real numbers for the probabilities, plus k log m (where m is the number of strategies for the player under consideration) bits to indicate which strategies are used.",
                "Second, the proof of dominance will be cleaner: for a dominating mixed strategy, it is typically (always in the case of strict dominance) possible to spread some of the probability onto any unused pure strategy and still have a dominating strategy, but this obscures which pure strategies are the ones that are key in making the mixed strategy dominating.",
                "Third, because (by the previous) the argument for eliminating the dominated strategy is simpler and easier to understand, it is more likely to be accepted.",
                "Fourth, the level of risk neutrality required for the argument to work is reduced, at least in the extreme case where dominance by a single pure strategy can be exhibited (no risk neutrality is required here).",
                "This motivates the following problem.",
                "Definition 4 (MINIMUM-DOMINATING-SET).",
                "We are given the row players utilities of a game in normal form, a distinguished strategy σ∗ for the row player, a specification of whether the dominance should be strict or weak, and a number k. We are asked whether there exists a mixed strategy σ for the row player that places positive probability on at most k pure strategies, and dominates σ∗ in the required sense.",
                "Unfortunately, this problem is NP-complete.",
                "Theorem 3.",
                "MINIMUM-DOMINATING-SET is NPcomplete, both for strict and for weak dominance.",
                "Proof.",
                "The problem is in NP because we can nondeterministically choose a set of at most k strategies to give positive probability, and decide whether we can dominate σ∗ with these k strategies as described in Proposition 1.",
                "To show NP-hardness, we reduce an arbitrary SET-COVER instance (given a set S, subsets S1, S2, . . . , Sr, and a number t, can all of S be covered by at most t of the subsets?) to the following MINIMUM-DOMINATING-SET instance.",
                "For every element s ∈ S, there is a pure strategy σs for the column player.",
                "For every subset Si, there is a pure strategy σSi for the row player.",
                "Finally, there is the distinguished pure strategy σ∗ for the row player.",
                "The row players utilities are as follows: ur(σSi , σs) = t + 1 if s ∈ Si; ur(σSi , σs) = 0 if s /∈ Si; ur(σ∗ , σs) = 1 for all s ∈ S. Finally, we let k = t. We now proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the SET-COVER instance.",
                "Without loss of generality, we can assume that there are exactly k subsets in the cover.",
                "Then, for every Si that is in the cover, let the dominating strategy σ place exactly 1 k probability on the corresponding pure strategy σSi .",
                "Now, if we let n(s) be the number of subsets in the cover containing s (we observe that that n(s) ≥ 1), then for every strategy σs for the column player, the row players expected utility for playing σ when the column player is playing σs is u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs).",
                "So σ strictly (and thus also weakly) dominates σ∗ , and there exists a solution to the MINIMUM-DOMINATING-SET instance.",
                "Now suppose there exists a solution to the MINIMUMDOMINATING-SET instance.",
                "Consider the (at most k) pure strategies of the form σSi on which the dominating mixed strategy σ places positive probability, and let T be the collection of the corresponding subsets Si.",
                "We claim that T is a cover.",
                "For suppose there is some s ∈ S that is not in any of the subsets in T .",
                "Then, if the column player plays σs, the row player (when playing σ) will always receive utility 0-as opposed to the utility of 1 the row player would receive for playing σ∗ , contradicting the fact that σ dominates σ∗ (whether this dominance is weak or strict).",
                "It follows that there exists a solution to the SET-COVER instance.",
                "On the other hand, if we require that the dominating strategy only places positive probability on a very small number of pure strategies, then it once again becomes easy to check whether a strategy is dominated.",
                "Specifically, to find out whether player is strategy σ∗ is dominated by a strategy that places positive probability on only k pure strategies, we can simply check, for every subset of k of player is pure strategies, whether there is a strategy that places positive probability only on these k strategies and dominates σ∗ , using Proposition 1.",
                "This requires only O(|Σi|k ) such checks.",
                "Thus, if k is a constant, this constitutes a polynomial-time algorithm.",
                "A natural question to ask next is whether iterated strict dominance remains computationally easy when dominating strategies are required to place positive probability on at most k pure strategies, where k is a small constant. (We have already shown in Section 4 that iterated weak dominance is hard even when k = 1, that is, only dominance by pure strategies is allowed.)",
                "Of course, if iterated strict dominance were path-independent under this restriction, computational easiness would follow as it did in Section 4.",
                "However, it turns out that this is not the case.",
                "Observation 1.",
                "If we restrict the dominating strategies to place positive probability on at most two pure strategies, iterated strict dominance becomes path-dependent.",
                "Proof.",
                "Consider the following game: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Let (i, j) denote the outcome in which the row player plays the ith row and the column player plays the jth column.",
                "Because (1, 1), (2, 2), and (4, 3) are all Nash equilibria, none of the column players pure strategies will ever be eliminated, and neither will rows 1, 2, and 4.",
                "We now observe that randomizing uniformly over rows 1 and 2 dominates row 3, and randomizing uniformly over rows 3 and 4 dominates row 5.",
                "However, if we eliminate row 3 first, it becomes impossible to dominate row 5 without randomizing over at least 3 pure strategies.",
                "Indeed, iterated strict dominance turns out to be hard even when k = 3.",
                "Theorem 4.",
                "If we restrict the dominating strategies to place positive probability on at most three pure strategies, it becomes NP-complete to decide whether a given strategy can be eliminated using iterated strict dominance. 93 Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can check in polynomial time whether this is a valid sequence of eliminations (for any strategy to be eliminated, we can check, for every subset of three other strategies, whether there is a strategy placing positive probability on only these three strategies that dominates the strategy to be eliminated, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following two-player game.",
                "For every variable v ∈ V , the row player has strategies s+v, s−v, s1 v, s2 v, s3 v, s4 v, and the column player has strategies t1 v, t2 v, t3 v, t4 v. For every clause c ∈ C, the row player has a strategy sc, and the column player has a strategy tc, as well as, for every literal l occurring in c, an additional strategy tl c. The row player has two additional strategies s1 and s2. (s2 is the strategy that we are seeking to eliminate.)",
                "Finally, the column player has one additional strategy t1.",
                "The utility function for the row player is given as follows (where is some sufficiently small number): • ur(s+v, tj v) = 4 if j ∈ {1, 2}, for all v ∈ V ; • ur(s+v, tj v) = 1 if j ∈ {3, 4}, for all v ∈ V ; • ur(s−v, tj v) = 1 if j ∈ {1, 2}, for all v ∈ V ; • ur(s−v, tj v) = 4 if j ∈ {3, 4}, for all v ∈ V ; • ur(s+v, t) = ur(s−v, t) = 0 for all v ∈ V and t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 for all v ∈ V and i ∈ {1, 2, 3, 4}; • ur(si v, t) = for all v ∈ V , i ∈ {1, 2, 3, 4}, and t = ti v; • ur(sc, tc) = 2 for all c ∈ C; • ur(sc, t) = 0 for all c ∈ C and t = tc; • ur(s1, t1) = 1 + ; • ur(s1, t) = for all t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 for all c ∈ C; • ur(s2, t) = 0 for all t /∈ {t1} ∪ {tc : c ∈ C}.",
                "The utility function for the column player is given as follows: • uc(si v, ti v) = 1 for all v ∈ V and i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 for all v ∈ V , i ∈ {1, 2, 3, 4}, and s = si v; • uc(sc, tc) = 1 for all c ∈ C; • uc(sl, tc) = 1 for all c ∈ C and l ∈ L occurring in c; • uc(s, tc) = 0 for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + for all c ∈ C; • uc(sl , tl c) = 1 + for all c ∈ C and l = l occurring in c; • uc(s, tl c) = for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c, l = l }; • uc(s2, t1) = 1; • uc(s, t1) = 0 for all s = s2.",
                "We now show that the two instances are equivalent.",
                "First, suppose that there is a solution to the satisfiability instance.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the satisfying assignment, eliminate s+v with the mixed strategy σr that places probability 1/3 on s−v, probability 1/3 on s1 v, and probability 1/3 on s2 v. (The expected utility of playing σr against t1 v or t2 v is 14/3 > 4; against t3 v or t4 v, it is 4/3 > 1; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 2.",
                "Similarly, for every variable v that is set to false in the satisfying assignment, eliminate s−v with the mixed strategy σr that places probability 1/3 on s+v, probability 1/3 on s3 v, and probability 1/3 on s4 v. (The expected utility of playing σr against t1 v or t2 v is 4/3 > 1; against t3 v or t4 v, it is 14/3 > 4; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 3.",
                "For every c ∈ C, eliminate tc with any tl c for which l was set to true in the satisfying assignment. (This is a valid dominance because tl c performs better than tc against any strategy other than sl, and we eliminated sl in step 1 or in step 2.) 4.",
                "Finally, eliminate s2 with s1. (This is a valid dominance because s1 performs better than s2 against any strategy other than those in {tc : c ∈ C}, which we eliminated in step 3.)",
                "Hence, there is an elimination path that eliminates s2.",
                "Now, suppose that there is an elimination path that eliminates s2.",
                "The strategy that eventually dominates s2 must place most of its probability on s1, because s1 is the only other strategy that performs well against t1, which cannot be eliminated before s2.",
                "But, s1 performs significantly worse than s2 against any strategy tc with c ∈ C, so it follows that all these strategies must be eliminated first.",
                "Each strategy tc can only be eliminated by a strategy that places most of its weight on the corresponding strategies tl c with l ∈ c, because they are the only other strategies that perform well against sc, which cannot be eliminated before tc.",
                "But, each strategy tl c performs significantly worse than tc against sl, so it follows that for every clause c, for one of the literals l occurring in it, sl must be eliminated first.",
                "Now, strategies of the form tj v will never be eliminated because they are the unique best responses to the corresponding strategies sj v (which are, in turn, the best responses to the corresponding tj v).",
                "As a result, if strategy s+v (respectively, s−v) is eliminated, then its opposite strategy s−v (respectively, s+v) can no longer be eliminated, for the following reason.",
                "There is no other pure strategy remaining that gets a significant utility against more than one of the strategies t1 v, t2 v, t3 v, t4 v, but s−v (respectively, s+v) gets significant utility against all 4, and therefore cannot be dominated by a mixed strategy placing positive probability on at most 3 strategies.",
                "It follows that for each v ∈ V , at most one of the strategies s+v, s−v is eliminated, in such a way that for every clause c, for one of the literals l occurring in it, sl must be eliminated.",
                "But then setting all the literals l such that sl is eliminated to true constitutes a solution to the satisfiability instance.",
                "In the next section, we return to the setting where there is no restriction on the number of pure strategies on which a dominating mixed strategy can place positive probability. 6. (ITERATED) DOMINANCE IN BAYESIAN GAMES So far, we have focused on normal form games that are flatly represented (that is, every matrix entry is given ex94 plicitly).",
                "However, for many games, the flat representation is too large to write down explicitly, and instead, some representation that exploits the structure of the game needs to be used.",
                "Bayesian games, besides being of interest in their own right, can be thought of as a useful structured representation of normal form games, and we will study them in this section.",
                "In a <br>bayesian game</br>, each player first receives privately held preference information (the players type) from a distribution, which determines the utility that that player receives for every outcome of (that is, vector of actions played in) the game.",
                "After receiving this type, the player plays an action based on it.7 Definition 5.",
                "A <br>bayesian game</br> is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of actions Ai, a (finite) type space Θi with a probability distribution πi over it, and a utility function ui : Θi × A1 × A2 × . . . × An → R (where ui(θi, a1, a2, . . . , an) denotes player is utility when is type is θi and each player j plays action aj).",
                "A pure strategy in a <br>bayesian game</br> is a mapping from types to actions, σi : Θi → Ai, where σi(θi) denotes the action that player i plays for type θi.",
                "Any vector of pure strategies in a <br>bayesian game</br> defines an (expected) utility for each player, and therefore we can translate a <br>bayesian game</br> into a normal form game.",
                "In this normal form game, the notions of dominance and iterated dominance are defined as before.",
                "However, the normal form representation of the game is exponentially larger than the Bayesian representation, because each player i has |Ai||Θi| distinct pure strategies.",
                "Thus, any algorithm for Bayesian games that relies on expanding the game to its normal form will require exponential time.",
                "Specifically, our easiness results for normal form games do not directly transfer to this setting.",
                "In fact, it turns out that checking whether a strategy is dominated by a pure strategy is hard in Bayesian games.",
                "Theorem 5.",
                "In a <br>bayesian game</br>, it is NP-complete to decide whether a given pure strategy σr : Θr → Ar is dominated by some other pure strategy (both for strict and weak dominance), even when the row players distribution over types is uniform.",
                "Proof.",
                "The problem is in NP because it is easy to verify whether a candidate dominating strategy is indeed a dominating strategy.",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a set of clauses C using variables from V ) to the following <br>bayesian game</br>.",
                "Let the row players action set be Ar = {t, f, 0} and let the column players action set be Ac = {ac : c ∈ C}.",
                "Let the row players type set be Θr = {θv : v ∈ V }, with a distribution πr that is uniform.",
                "Let the row players utility function be as follows: • ur(θv, 0, ac) = 0 for all v ∈ V and c ∈ C; • ur(θv, b, ac) = |V | for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b satisfies c; • ur(θv, b, ac) = −1 for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b does not satisfy c. 7 In general, a player can also receive a signal about the other players preferences, but we will not concern ourselves with that here.",
                "Let the pure strategy to be dominated be the one that plays 0 for every type.",
                "We show that the strategy is dominated by a pure strategy if and only if there is a solution to the satisfiability instance.",
                "First, suppose there is a solution to the satisfiability instance.",
                "Then, let σd r be given by: σd r (θv) = t if v is set to true in the solution to the satisfiability instance, and σd r (θv) = f otherwise.",
                "Then, against any action ac by the column player, there is at least one type θv such that either +v ∈ c and σd r (θv) = t, or −v ∈ c and σd r (θv) = f. Thus, the row players expected utility against action ac is at least |V | |V | − |V |−1 |V | = 1 |V | > 0.",
                "So, σd r is a dominating strategy.",
                "Now, suppose there is a dominating pure strategy σd r .",
                "This dominating strategy must play t or f for at least one type.",
                "Thus, against any ac by the column player, there must at least be some type θv for which ur(θv, σd r (θv), ac) > 0.",
                "That is, there must be at least one variable v such that setting v to σd r (θv) satifies c. But then, setting each v to σd r (θv) must satisfy all the clauses.",
                "So a satisfying assignment exists.",
                "However, it turns out that we can modify the linear programs from Proposition 1 to obtain a polynomial time algorithm for checking whether a strategy is dominated by a mixed strategy in Bayesian games.",
                "Theorem 6.",
                "In a <br>bayesian game</br>, it can be decided in polynomial time whether a given (possibly mixed) strategy σr is dominated by some other mixed strategy, using linear programming (both for strict and weak dominance).",
                "Proof.",
                "We can modify the linear programs presented in Proposition 1 as follows.",
                "For strict dominance, again assuming without loss of generality that all the utilities in the game are positive, use the following linear program (in which pσr r (θr, ar) is the probability that σr, the strategy to be dominated, places on ar for type θr): minimize θr∈Θr ar∈Ar pr(ar) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1.",
                "Assuming that π(θr) > 0 for all θr ∈ Θr, this program will return an objective value smaller than |Θr| if and only if σr is strictly dominated, by reasoning similar to that done in Proposition 1.",
                "For weak dominance, use the following linear program: maximize ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) = 1.",
                "This program will return an objective value greater than 0 if and only if σr is weakly dominated, by reasoning similar to that done in Proposition 1.",
                "We now turn to iterated dominance in Bayesian games.",
                "Na¨ıvely, one might argue that iterated dominance in Bayesian 95 games always requires an exponential number of steps when a significant fraction of the games pure strategies can be eliminated, because there are exponentially many pure strategies.",
                "However, this is not a very strong argument because oftentimes we can eliminate exponentially many pure strategies in one step.",
                "For example, if for some type θr ∈ Θr we have, for all ac ∈ Ac, that u(θr, a1 r, ac) > u(θr, a2 r, ac), then any pure strategy for the row player which plays action a2 r for type θr is dominated (by the strategy that plays action a1 r for type θr instead)-and there are exponentially many (|Ar||Θr|−1 ) such strategies.",
                "It is therefore conceivable that we need only polynomially many eliminations of collections of a players strategies.",
                "However, the following theorem shows that this is not the case, by giving an example where an exponential number of iterations (that is, alternations between the players in eliminating strategies) is required. (We emphasize that this is not a result about computational complexity.)",
                "Theorem 7.",
                "Even in symmetric 3-player Bayesian games, iterated dominance by pure strategies can require an exponential number of iterations (both for strict and weak dominance), even with only three actions per player.",
                "Proof.",
                "Let each player i ∈ {1, 2, 3} have n + 1 types θ1 i , θ2 i , . . . , θn+1 i .",
                "Let each player i have 3 actions ai, bi, ci, and let the utility function of each player be defined as follows. (In the below, i + 1 and i + 2 are shorthand for i + 1(mod 3) and i + 2(mod 3) when used as player indices.",
                "Also, −∞ can be replaced by a sufficiently negative number.",
                "Finally, δ and should be chosen to be very small (even compared to 2−(n+1) ), and should be more than twice as large as δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 for si+1 = ci+1 or si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − for si+1 = ai+1 and si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ for si+1 = ai+1 or si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ for all si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ for all si+1, si+2 when j > 1; • ui(θj i ; bi, si+1, si+2) = − for all si+1, si+2 when j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 for all si+1 when j > 1; • ui(θj i ; ci, si+1, si+2) = δ− for all si+1 and si+2 = ci+2 when j > 1.",
                "Let the distribution over each players types be given by p(θj i ) = 2−j (with the exception that p(θ2 i ) = 2−2 +2−(n+1) ).",
                "We will be interested in eliminating strategies of the following form: play bi for type θ1 i , and play one of bi or ci otherwise.",
                "Because the utility function is the same for any type θj i with j > 1, these strategies are effectively defined by the total probability that they place on ci,8 which is t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j where tj i = 1 if player i 8 Note that the strategies are still pure strategies; the probability placed on an action by a strategy here is simply the sum of the probabilities of the types for which the strategy chooses that action. plays ci for type θj i , and 0 otherwise.",
                "This probability is different for any two different strategies of the given form, and we have exponentially many different strategies of the given form.",
                "For any probability q which can be expressed as t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (with all tj ∈ {0, 1}), let σi(q) denote the (unique) strategy of the given form for player i which places a total probability of q on ci.",
                "Any strategy that plays ci for type θ1 i or ai for some type θj i with j > 1 can immediately be eliminated.",
                "We will show that, after that, we must eliminate the strategies σi(q) with high q first, slowly working down to those with lower q.",
                "Claim 1: If σi+1(q ) and σi+2(q ) have not yet been eliminated, and q < q , then σi(q) cannot yet be eliminated.",
                "Proof: First, we show that no strategy σi(q ) can eliminate σi(q).",
                "Against σi+1(q ), σi+2(q ), the utility of playing σi(p) is − + p · δ − p · q /2.",
                "Thus, when q = 0, it is best to set p as high as possible (and we note that σi+1(0) and σi+2(0) have not been eliminated), but when q > 0, it is best to set p as low as possible because δ < q /2.",
                "Thus, whether q > q or q < q , σi(q) will always do strictly better than σi(q ) against some remaining opponent strategies.",
                "Hence, no strategy σi(q ) can eliminate σi(q).",
                "The only other pure strategies that could dominate σi(q) are strategies that play ai for type θ1 i , and bi or ci for all other types.",
                "Let us take such a strategy and suppose that it plays c with probability p. Against σi+1(q ), σi+2(q ) (which have not yet been eliminated), the utility of playing this strategy is −(q )2 /2 − /2 + p · δ − p · q /2.",
                "On the other hand, playing σi(q) gives − + q · δ − q · q /2.",
                "Because q > q, we have −(q )2 /2 < −q · q /2, and because δ and are small, it follows that σi(q) receives a higher utility.",
                "Therefore, no strategy dominates σi(q), proving the claim.",
                "Claim 2: If for all q > q, σi+1(q ) and σi+2(q ) have been eliminated, then σi(q) can be eliminated.",
                "Proof: Consider the strategy for player i that plays ai for type θ1 i , and bi for all other types (call this strategy σi); we claim σi dominates σi(q).",
                "First, if either of the other players k plays ak for θ1 k, then σi performs better than σi(q) (which receives −∞ in some cases).",
                "Because the strategies for player k that play ck for type θ1 k, or ak for some type θj k with j > 1, have already been eliminated, all that remains to check is that σi performs better than σi(q) whenever both of the other two players play strategies of the following form: play bk for type θ1 k, and play one of bk or ck otherwise.",
                "We note that among these strategies, there are none left that place probability greater than q on ck.",
                "Letting qk denote the probability with which player k plays ck, the expected utility of playing σi is −qi+1 · qi+2/2 − /2.",
                "On the other hand, the utility of playing σi(q) is − + q · δ − q · qi+2/2.",
                "Because qi+1 ≤ q, the difference between these two expressions is at least /2 − δ, which is positive.",
                "It follows that σi dominates σi(q).",
                "From Claim 2, it follows that all strategies of the form σi(q) will eventually be eliminated.",
                "However, Claim 1 shows that we cannot go ahead and eliminate multiple such strategies for one player, unless at least one other player simultaneously keeps up in the eliminated strategies: every time a σi(q) is eliminated such that σi+1(q) and σi+2(q) have not yet been eliminated, we need to eliminate one of the latter two strategies before any σi(q ) with q > q can be eliminated-that is, we need to alternate between players.",
                "Because there are exponentially many strategies of the form σi(q), it follows that iterated elimination will require exponentially many iterations to complete. 96 It follows that an efficient algorithm for iterated dominance (strict or weak) by pure strategies in Bayesian games, if it exists, must somehow be able to perform (at least part of) many iterations in a single step of the algorithm (because if each step only performed a single iteration, we would need exponentially many steps).",
                "Interestingly, Knuth et al. [11] argue that iterated dominance appears to be an inherently sequential problem (in light of their result that iterated very weak dominance is P-complete, that is, apparently not efficiently parallelizable), suggesting that aggregating many iterations may be difficult. 7.",
                "CONCLUSIONS While the Nash equilibrium solution concept is studied more and more intensely in our community, the perhaps more elementary concept of (iterated) dominance has received much less attention.",
                "In this paper we studied various computational aspects of this concept.",
                "We first studied both strict and weak dominance (not iterated), and showed that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then moved on to iterated dominance.",
                "We showed that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allowed us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then studied what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we showed that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we showed that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we studied dominance and iterated dominance in Bayesian games, as an example of a concise representation language for normal form games that is interesting in its own right.",
                "We showed that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a <br>bayesian game</br> is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak dominance).",
                "Finally, we showed that iterated dominance using pure strategies can require an exponential number of iterations in a <br>bayesian game</br> (both with strict and weak dominance).",
                "There are various avenues for future research.",
                "First, there is the open question of whether it is possible to complete iterated dominance in Bayesian games in polynomial time (even though we showed that an exponential number of alternations between the players in eliminating strategies is sometimes required).",
                "Second, we can study computational aspects of (iterated) dominance in concise representations of normal form games other than Bayesian games-for example, in graphical games [9] or local-effect/action graph games [12, 2]. (How to efficiently perform iterated very weak dominance has already been studied for partially observable stochastic games [8].)",
                "Finally, we can ask whether some of the algorithms we described (such as the one for iterated strict dominance with mixed strategies) can be made faster. 8.",
                "REFERENCES [1] Krzysztof R. Apt.",
                "Uniform proofs of order independence for various strategy elimination procedures.",
                "Contributions to Theoretical Economics, 4(1), 2004. [2] Nivan A. R. Bhat and Kevin Leyton-Brown.",
                "Computing Nash equilibria of action-graph games.",
                "In UAI, 2004. [3] Ben Blum, Christian R. Shelton, and Daphne Koller.",
                "A continuation method for Nash equilibria in structured games.",
                "In IJCAI, 2003. [4] Vincent Conitzer and Tuomas Sandholm.",
                "Complexity results about Nash equilibria.",
                "In IJCAI, pages 765-771, 2003. [5] Drew Fudenberg and Jean Tirole.",
                "Game Theory.",
                "MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "On the order of eliminating dominated strategies.",
                "Operations Research Letters, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "The complexity of eliminating dominated strategies.",
                "Mathematics of Operation Research, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein, and Shlomo Zilberstein.",
                "Dynamic programming for partially observable stochastic games.",
                "In AAAI, pages 709-715, 2004. [9] Michael Kearns, Michael Littman, and Satinder Singh.",
                "Graphical models for game theory.",
                "In UAI, 2001. [10] Leonid Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou, and John N Tsitsiklis.",
                "A note on strategy elimination in bimatrix games.",
                "Operations Research Letters, 7(3):103-107, 1988. [12] Kevin Leyton-Brown and Moshe Tennenholtz.",
                "Local-effect games.",
                "In IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [14] Michael Littman and Peter Stone.",
                "A polynomial-time Nash equilibrium algorithm for repeated games.",
                "In ACM-EC, pages 48-54, 2003. [15] Leslie M. Marx and Jeroen M. Swinkels.",
                "Order independence for iterated weak dominance.",
                "Games and Economic Behavior, 18:219-245, 1997. [16] Leslie M. Marx and Jeroen M. Swinkels.",
                "Corrigendum, order independence for iterated weak dominance.",
                "Games and Economic Behavior, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston, and Jerry R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [18] Roger Myerson.",
                "Game Theory: Analysis of Conflict.",
                "Harvard University Press, Cambridge, 1991. [19] Martin J Osborne and Ariel Rubinstein.",
                "A Course in Game Theory.",
                "MIT Press, 1994. [20] Christos Papadimitriou.",
                "Algorithms, games and the Internet.",
                "In STOC, pages 749-753, 2001. [21] Ryan Porter, Eugene Nudelman, and Yoav Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, 2004. 97"
            ],
            "original_annotated_samples": [
                "We show that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a <br>bayesian game</br> is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak ∗ This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858, and a Sloan Fellowship. dominance).",
                "Finally, we show that iterated dominance using pure strategies can require an exponential number of iterations in a <br>bayesian game</br> (both with strict and weak dominance).",
                "In a <br>bayesian game</br>, each player first receives privately held preference information (the players type) from a distribution, which determines the utility that that player receives for every outcome of (that is, vector of actions played in) the game.",
                "A <br>bayesian game</br> is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of actions Ai, a (finite) type space Θi with a probability distribution πi over it, and a utility function ui : Θi × A1 × A2 × . . . × An → R (where ui(θi, a1, a2, . . . , an) denotes player is utility when is type is θi and each player j plays action aj).",
                "A pure strategy in a <br>bayesian game</br> is a mapping from types to actions, σi : Θi → Ai, where σi(θi) denotes the action that player i plays for type θi."
            ],
            "translated_annotated_samples": [
                "Mostramos que, a diferencia de los juegos en forma normal, decidir si una estrategia pura dada está dominada por otra estrategia pura en un <br>juego bayesiano</br> es NP-completo (tanto con dominancia estricta como débil); sin embargo, decidir si una estrategia está dominada por alguna estrategia mixta aún puede hacerse en tiempo polinómico con la resolución de un único programa lineal (tanto con dominancia estricta como débil).",
                "Finalmente, demostramos que la dominancia iterada utilizando estrategias puras puede requerir un número exponencial de iteraciones en un <br>juego bayesiano</br> (tanto con dominancia estricta como débil).",
                "En un <br>juego bayesiano</br>, cada jugador recibe primero información de preferencia de manera privada (el tipo de jugador) de una distribución, la cual determina la utilidad que ese jugador recibe por cada resultado del juego (es decir, el vector de acciones jugadas en el juego).",
                "Un <br>juego bayesiano</br> está dado por un conjunto de jugadores {1, 2, . . . , n}; y, para cada jugador i, un conjunto (finito) de acciones Ai, un espacio de tipos (finito) Θi con una distribución de probabilidad πi sobre él, y una función de utilidad ui : Θi × A1 × A2 × . . . × An → R (donde ui(θi, a1, a2, . . . , an) denota la utilidad del jugador i cuando su tipo es θi y cada jugador j juega la acción aj).",
                "Una estrategia pura en un <br>juego bayesiano</br> es una asignación de tipos a acciones, σi: Θi → Ai, donde σi(θi) denota la acción que el jugador i elige para el tipo θi."
            ],
            "translated_text": "Estudiamos varios aspectos computacionales de la resolución de juegos utilizando la dominancia y la dominancia iterada. Primero estudiamos tanto la dominancia estricta como la débil (no iterada), y demostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta se puede hacer en tiempo polinómico utilizando la resolución de un único programa lineal. Luego pasamos a la dominancia iterada. Mostramos que determinar si existe algún camino que elimine una estrategia dada es NP-completo con dominancia débil iterada. Esto nos permite también demostrar que determinar si existe un camino que conduce a una solución única es NP-completo. Ambos resultados se mantienen tanto con como sin dominancia de estrategias mixtas. (Una versión más débil del segundo resultado (solo sin dominancia de estrategias mixtas) ya se conocía [7].) La dominancia estricta iterada, por otro lado, es independiente de la ruta (tanto con como sin dominancia por estrategias mixtas) y, por lo tanto, se puede realizar en tiempo polinómico. Luego estudiamos qué sucede cuando la estrategia dominante puede asignar una probabilidad positiva solo a unas pocas estrategias puras. Primero, demostramos que encontrar la estrategia dominante con el tamaño de soporte mínimo es NP-completo (tanto para dominancia estricta como débil). Luego, demostramos que la dominancia estricta iterada se vuelve dependiente del camino cuando hay un límite en el tamaño del soporte de las estrategias dominantes, y que decidir si una estrategia dada puede ser eliminada por dominancia estricta iterada bajo esta restricción es NP-completo (incluso cuando el límite en el tamaño del soporte es 3). Finalmente, estudiamos juegos bayesianos. Mostramos que, a diferencia de los juegos en forma normal, decidir si una estrategia pura dada está dominada por otra estrategia pura en un <br>juego bayesiano</br> es NP-completo (tanto con dominancia estricta como débil); sin embargo, decidir si una estrategia está dominada por alguna estrategia mixta aún puede hacerse en tiempo polinómico con la resolución de un único programa lineal (tanto con dominancia estricta como débil). Finalmente, demostramos que la dominancia iterada utilizando estrategias puras puede requerir un número exponencial de iteraciones en un <br>juego bayesiano</br> (tanto con dominancia estricta como débil). Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN En sistemas multiagentes con agentes auto-interesados, la acción óptima para un agente puede depender de las acciones tomadas por otros agentes. En tales contextos, los agentes necesitan herramientas de teoría de juegos para decidir racionalmente sobre una acción. La teoría de juegos ofrece varios modelos formales de escenarios estratégicos, el más conocido de los cuales es un juego en forma normal (o matriz), que especifica una utilidad (pago) para cada agente en cada combinación de estrategias que los agentes eligen, así como conceptos de solución que, dados un juego, especifican qué resultados son razonables (bajo varias suposiciones de racionalidad y conocimiento común). Probablemente el concepto de solución más conocido (y ciertamente el más estudiado) es el equilibrio de Nash. Un equilibrio de Nash especifica una estrategia para cada jugador, de tal manera que ningún jugador tiene un incentivo para desviarse (unilateralmente) de la estrategia prescrita. Recientemente, numerosos artículos han estudiado el cálculo de equilibrios de Nash en diferentes contextos [9, 4, 12, 3, 13, 14], y la complejidad de construir un equilibrio de Nash en juegos en forma normal ha sido etiquetada como uno de los dos problemas abiertos más importantes en el límite de P hoy en día [20]. El problema de calcular soluciones de acuerdo con los conceptos de solución quizás más elementales de dominancia y dominancia iterada ha recibido mucha menos atención. (Después de un breve artículo temprano sobre un caso sencillo [11], el principal estudio computacional de estos conceptos ha tenido lugar en realidad en un artículo de la comunidad de teoría de juegos [7].) Una estrategia domina estrictamente a otra estrategia si tiene un rendimiento estrictamente mejor contra todos los vectores de estrategias del oponente, y la domina débilmente si tiene al menos el mismo rendimiento contra todos los vectores de estrategias del oponente, y estrictamente mejor contra al menos uno. La idea es que las estrategias dominadas pueden ser eliminadas de consideración. En la dominancia iterada, la eliminación avanza en rondas y se vuelve más fácil a medida que se eliminan más estrategias: en cualquier ronda dada, la estrategia dominante ya no necesita desempeñarse mejor que o igual que la estrategia dominada contra las estrategias oponentes que fueron eliminadas en rondas anteriores. Calcular soluciones según la dominancia (iterada) es importante por al menos las siguientes razones: 1) puede ser computacionalmente más fácil que calcular (por ejemplo) un equilibrio de Nash (y por lo tanto puede ser útil como paso de preprocesamiento en el cálculo de un equilibrio de Nash), y 2) la dominancia (iterada) requiere una suposición de racionalidad más débil en los jugadores que (por ejemplo) el equilibrio de Nash, y por lo tanto las soluciones derivadas según ella son más propensas a ocurrir. En este artículo, estudiamos algunas preguntas computacionales fundamentales relacionadas con la dominancia y la dominancia iterada, incluyendo qué tan difícil es verificar si una estrategia dada puede ser eliminada por cada una de las variantes de estos conceptos. El resto del documento está organizado de la siguiente manera. En la Sección 2, revisamos brevemente las definiciones y propiedades básicas de los juegos en forma normal, la dominancia estricta y débil, y la dominancia estricta y débil iterada. En las secciones restantes, estudiamos los aspectos computacionales de la dominancia y la dominancia iterada. En la Sección 3, estudiamos la dominancia de un solo disparo (no iterada). En la Sección 4, estudiamos la dominancia iterada. En la Sección 5, estudiamos la dominancia y la dominancia iterada cuando la estrategia dominante solo puede asignar probabilidad a unas pocas estrategias puras. Finalmente, en la Sección 6, estudiamos la dominancia y la dominancia iterada en juegos bayesianos. 2. DEFINICIONES Y PROPIEDADES BÁSICAS En esta sección, revisamos brevemente los juegos en forma normal, así como la dominancia y la dominancia iterada (tanto estricta como débil). Un juego de forma normal de n jugadores se define de la siguiente manera. Definición 1. Un juego en forma normal está dado por un conjunto de jugadores {1, 2, . . . , n}; y, para cada jugador i, un conjunto (finito) de estrategias puras Σi y una función de utilidad ui : Σ1 × Σ2 × . . . × Σn → R (donde ui(σ1, σ2, . . . , σn) denota la utilidad del jugador i cuando cada jugador j juega la acción σj). Las dos principales nociones de dominancia se definen de la siguiente manera. Definición 2. La estrategia σi del jugador se dice que está estrictamente dominada por la estrategia σi del jugador si, para cualquier vector de estrategias σ−i de los otros jugadores, ui(σi, σ−i) > ui(σi, σ−i). La estrategia σi del jugador se dice que está débilmente dominada por la estrategia σi del jugador si, para cualquier vector de estrategias σ−i para los otros jugadores, ui(σi, σ−i) ≥ ui(σi, σ−i), y para al menos un vector de estrategias σ−i para los otros jugadores, ui(σi, σ−i) > ui(σi, σ−i). En esta definición, a veces se permite que la estrategia dominante σi sea una estrategia mixta, es decir, una distribución de probabilidad sobre estrategias puras. En este caso, las utilidades están en dominancia en conjunto. Por ejemplo, a veces se utilizan comprobaciones de dominancia simple como una subrutina en la búsqueda de equilibrios de Nash [21]. Las definiciones son las utilidades esperadas. Hay otras nociones de dominancia, como la dominancia muy débil (en la que no se requiere ninguna desigualdad estricta, por lo que dos estrategias pueden dominarse mutuamente), pero no las estudiaremos aquí. Cuando estamos analizando las relaciones de dominancia para el jugador i, los otros jugadores (−i) pueden ser considerados como un solo jugador. Por lo tanto, en el resto del documento, cuando estudiamos la dominancia de un solo paso (no iterada), nos centraremos sin pérdida de generalidad en juegos de dos jugadores. En juegos de dos jugadores, generalmente nos referiremos a los jugadores como r (fila) y c (columna) en lugar de 1 y 2. En la dominancia iterada, las estrategias dominadas son eliminadas del juego y ya no tienen ningún efecto en las relaciones de dominancia futuras. La dominancia iterada puede eliminar más estrategias que la dominancia, de la siguiente manera. σr puede originalmente no dominar a σr porque este último tiene un mejor desempeño contra σc; pero luego, una vez que σc es eliminado porque es dominado por σc, σr domina a σr, y este último puede ser eliminado. Por ejemplo, en el siguiente juego, se puede eliminar primero a R, después de lo cual D queda dominado. Tanto la dominancia estricta como la dominancia débil pueden ser utilizadas en la definición de la dominancia iterada. Observamos que el proceso de dominancia iterada nunca se ve favorecido al eliminar una estrategia mixta dominada, por la siguiente razón. Si σi le da al jugador i una utilidad mayor que σi contra la estrategia mixta σj para el jugador j = i (y estrategias σ−{i,j} para los otros jugadores), entonces para al menos una estrategia pura σj en la que σj coloque probabilidad positiva, σi debe desempeñarse mejor que σi contra σj (y estrategias σ−{i,j} para los otros jugadores). Por lo tanto, eliminar la estrategia mixta σj no introduce nuevas dominancias. Discusiones más detalladas y ejemplos se pueden encontrar en textos estándar sobre microeconomía o teoría de juegos [17, 5]. Ahora estamos listos para pasar al núcleo de este documento. 3. En esta sección, estudiamos la noción de dominancia de un solo turno (no iterada). Como primera observación, verificar si una estrategia dada está estrictamente (débilmente) dominada por alguna estrategia pura es sencillo, al comprobar, para cada estrategia pura de ese jugador, si la última estrategia tiene un rendimiento estrictamente mejor contra todas las estrategias de los oponentes (al menos igual de bien contra todas las estrategias de los oponentes, y estrictamente 2 La estrategia dominada σi, por supuesto, también puede ser mixta, pero esto no tiene implicaciones técnicas para el documento: cuando estudiamos la dominancia de un solo disparo, preguntamos si una estrategia dada está dominada, y no importa si la estrategia dada es pura o mixta; cuando estudiamos la dominancia iterada, no tiene sentido eliminar las estrategias mixtas, como veremos en breve. 3 Este jugador puede tener un espacio de estrategias muy grande (una estrategia pura para cada vector de estrategias puras de los jugadores que están siendo reemplazados). Sin embargo, esto no resultará en un aumento en el tamaño de nuestra representación, ya que la representación original ya tenía que especificar las utilidades para cada uno de estos vectores. Observamos que una restricción a juegos de dos jugadores no sería sin pérdida de generalidad para la dominancia iterada. Esto se debe a que para la dominancia iterada, necesitamos analizar las estrategias dominadas de cada jugador individual, por lo que no podemos fusionar a ningún jugador. A continuación, mostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta se puede hacer en tiempo polinómico resolviendo un único programa lineal. (Programas lineales similares se han presentado anteriormente [18]; presentamos el resultado aquí por completitud, y porque construiremos sobre los programas lineales dados a continuación en el Teorema 6.) Proposición 1. Dadas las utilidades de los jugadores de fila, un subconjunto Dr de las estrategias puras de los jugadores de fila Σr, y una estrategia distinguida σ∗ r para el jugador de fila, podemos verificar en tiempo polinómico en el tamaño del juego (resolviendo un único programa lineal de tamaño polinómico) si existe alguna estrategia mixta σr, que coloque probabilidad positiva solo en estrategias en Dr y domine a σ∗ r, tanto en dominancia estricta como débil. Prueba. Sea pdr la probabilidad que σr asigna a dr ∈ Dr. Resolveremos un único programa lineal en cada uno de nuestros algoritmos; los programas lineales pueden resolverse en tiempo polinómico [10]. Para la dominancia estricta, la pregunta es si se puede establecer el pdr de manera que para cada estrategia pura del jugador de la columna σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc). Debido a que la desigualdad debe ser estricta, no podemos resolver esto directamente mediante programación lineal. Procedemos de la siguiente manera. Dado que el juego es finito, podemos asumir sin pérdida de generalidad que todas las utilidades son positivas (si no lo son, simplemente añade una constante a todas las utilidades). Resolver el siguiente programa lineal: minimizar dr∈Dr pdr tal que para cualquier σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc). Si σ∗ r es estrictamente dominada por alguna estrategia mixta, este programa lineal tiene una solución con un valor objetivo < 1. (La estrategia dominante es una solución factible con un valor objetivo exactamente igual a 1. Dado que ninguna restricción es vinculante para esta solución, podemos reducir ligeramente una de las probabilidades sin afectar la viabilidad, obteniendo así una solución con un valor objetivo < 1. Además, si este programa lineal tiene una solución con un valor objetivo < 1, existe una estrategia mixta que domina estrictamente a σ∗ r, la cual se puede obtener tomando la solución del PL y agregando la probabilidad restante a cualquier estrategia (debido a que todas las utilidades son positivas, esto sumará al lado izquierdo de cualquier desigualdad, por lo que todas las desigualdades se volverán estrictas). Para la dominancia débil, podemos resolver el siguiente programa lineal: maximizar σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) tal que para cualquier σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1. Si σ∗ r está débilmente dominado por alguna estrategia mixta, entonces esa estrategia mixta es una solución factible para este programa con un valor objetivo > 0, porque para al menos una estrategia σc ∈ Σc tenemos ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0. Por otro lado, si este programa tiene una solución con un valor objetivo > 0, entonces para al menos una estrategia σc ∈ Σc debemos tener ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, y por lo tanto la solución de los programas lineales es una estrategia mixta débilmente dominante. 4. DOMINANCIA ITERADA Ahora pasamos a la dominancia iterada. Es bien sabido que la dominancia estricta iterada es independiente del camino [6, 19], es decir, si eliminamos las estrategias dominadas hasta que ya no queden más estrategias dominadas, al final las estrategias restantes para cada jugador serán las mismas, independientemente del orden en que se eliminen las estrategias. Por lo tanto, para determinar si una estrategia dada puede ser eliminada por dominancia estricta iterada, todo lo que se necesita hacer es eliminar repetidamente las estrategias que son estrictamente dominadas, hasta que no queden más estrategias dominadas. Dado que podemos verificar en tiempo polinómico si alguna estrategia dada está dominada (ya sea que se permita o no la dominancia por estrategias mixtas, como se describe en la Sección 3), todo este procedimiento toma solo tiempo polinómico. En el caso de la dominancia iterada por estrategias puras con dos jugadores, Knuth et al. [11] mejoran ligeramente (aceleran) la implementación directa de este procedimiento al llevar un registro, para cada par ordenado de estrategias de un jugador, del número de estrategias del oponente que impiden que la primera estrategia domine a la segunda. Por lo tanto, el tiempo de ejecución para un juego m × n se reduce de O((m + n)4 ) a O((m + n)3 ). (En realidad, solo estudian dominancia muy débil (para la cual no se requieren desigualdades estrictas), pero el enfoque se puede extender fácilmente). Por el contrario, se sabe que la dominancia débil iterada es dependiente del camino. Por ejemplo, en el siguiente juego, utilizando la dominancia débil iterada podemos eliminar primero M y luego D, o primero R y luego U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Por lo tanto, si bien el procedimiento de eliminar estrategias débilmente dominadas hasta que no queden más estrategias débilmente dominadas puede ciertamente ejecutarse en tiempo polinómico, qué estrategias sobreviven al final depende del orden en el que eliminamos las estrategias dominadas. Investigaremos dos preguntas para la dominancia débil iterada: si una estrategia dada es eliminada en algún camino, y si hay un camino hacia una solución única (una única estrategia pura por jugador). Mostraremos que ambos de estos problemas son computacionalmente difíciles. Definición 3. Dada un juego en forma normal y una estrategia distinguida σ∗ , la ELIMINACIÓN DE ESTRATEGIAS POR DOMINANCIA DÉBIL (IWD-STRATEGY-ELIMINATION) pregunta si existe algún camino de dominancia débil iterada que elimine σ∗ . Dada un juego en forma normal, IWDUNIQUE-SOLUTION pregunta si existe algún camino de dominancia débil iterada que conduzca a una solución única (una estrategia restante por jugador). El siguiente lema muestra un caso especial de juegos en forma normal en el que permitir la dominancia débil a través de estrategias mixtas (además de la dominancia débil a través de estrategias puras) hace 6. Sin embargo, existe una restricción de dominancia débil llamada dominancia débil agradable que es independiente de la ruta [15, 16]. Para obtener una visión general de los resultados de independencia de la ruta, consulte Apt [1]. 90 no ayuda. Demostraremos los resultados de dificultad en este contexto, de modo que se mantengan independientemente de si se permite o no la dominancia por estrategias mixtas. Lema 1. Supongamos que todas las utilidades en un juego están en {0, 1}. Entonces, toda estrategia pura que es débilmente dominada por una estrategia mixta también es débilmente dominada por una estrategia pura. Prueba. Se supone que la estrategia pura σ es débilmente dominada por la estrategia mixta σ∗. Si σ obtiene una utilidad de 1 contra alguna estrategia o vector de estrategias del oponente (si hay más de 2 jugadores), entonces todas las estrategias puras en las que σ∗ asigna una probabilidad positiva también deben obtener una utilidad de 1 contra esa estrategia del oponente (de lo contrario, la utilidad esperada sería menor que 1). Además, al menos una de las estrategias puras en las que σ∗ coloca probabilidad positiva debe obtener una utilidad de 1 contra una estrategia del oponente que σ obtiene 0 (de lo contrario, la desigualdad nunca sería estricta). Se deduce que esta estrategia pura domina débilmente a σ. Ahora estamos listos para demostrar los resultados principales de esta sección. Teorema 1. IWD-STRATEGY-ELIMINATION es NPcompleto, incluso con 2 jugadores, y con 0 y 1 siendo las únicas utilidades que ocurren en la matriz, ya sea que se permita o no la dominancia por estrategias mixtas. Prueba. El problema está en NP porque, dado una secuencia de estrategias a ser eliminadas, podemos verificar fácilmente si esta es una secuencia válida de eliminaciones (incluso cuando se permite la dominancia por estrategias mixtas, utilizando la Proposición 1). Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto no vacío de cláusulas C sobre un conjunto no vacío de variables V, con literales correspondientes L = {+v : v ∈ V} ∪ {−v : v ∈ V}) a la siguiente instancia de ELIMINACIÓN DE ESTRATEGIA IWD. (En esta instancia, especificaremos que ciertas estrategias son ineliminables. Una estrategia σr puede hacerse ineliminable, incluso cuando 0 y 1 son las únicas utilidades permitidas, al agregar otra estrategia σr y otra estrategia del oponente σc, de modo que: 1. σr y σr son las únicas estrategias que le dan al jugador de la fila una utilidad de 1 contra σc. 2. σr y σr siempre le dan al jugador de la fila la misma utilidad. 3. σc es la única estrategia que le da al jugador de la columna una utilidad de 1 contra σr, pero de lo contrario σc siempre le da al jugador de la columna una utilidad de 0. Esto hace imposible eliminar cualquiera de estas tres estrategias. No especificaremos explícitamente las estrategias adicionales para hacer la prueba más legible. En esta demostración, designaremos las estrategias del jugador de fila como s, y las estrategias del jugador de columna como t, para mejorar la legibilidad. Que se dé el conjunto de estrategias puras de los jugadores de fila como sigue. Para cada variable v ∈ V, el jugador de la fila tiene estrategias correspondientes s1 +v, s2 +v, s1 −v, s2 −v. Además, el jugador de la fila tiene las siguientes 2 estrategias: s1 0 y s2 0, donde s2 0 = σ∗ r (es decir, es la estrategia que buscamos eliminar). Finalmente, para cada cláusula c ∈ C, el jugador de la fila tiene estrategias correspondientes s1 c (ineliminables) y s2 c. Dado el conjunto de estrategias puras de los jugadores de la columna de la siguiente manera. Para cada variable v ∈ V, el jugador de la columna tiene una estrategia correspondiente tv. Para cada cláusula c ∈ C, el jugador de la columna tiene una estrategia correspondiente tc, y además, para cada literal l ∈ L que ocurre en c, una estrategia tc,l. Para cada variable v ∈ V, el jugador de la columna tiene estrategias correspondientes t+v, t−v (ambas no eliminables). Finalmente, el jugador de la columna tiene tres estrategias adicionales: t1 0 (ineliminable), t2 0 y t1. La función de utilidad para el jugador de la fila se da de la siguiente manera: • ur(s1 +v, tv) = 0 para todo v ∈ V ; • ur(s2 +v, tv) = 1 para todo v ∈ V ; • ur(s1 −v, tv) = 1 para todo v ∈ V ; • ur(s2 −v, tv) = 0 para todo v ∈ V ; • ur(s1 +v, t1) = 1 para todo v ∈ V ; • ur(s2 +v, t1) = 0 para todo v ∈ V ; • ur(s1 −v, t1) = 0 para todo v ∈ V ; • ur(s2 −v, t1) = 1 para todo v ∈ V ; • ur(sb +v, t+v) = 1 para todo v ∈ V y b ∈ {1, 2}; • ur(sb −v, t−v) = 1 para todo v ∈ V y b ∈ {1, 2}; • ur(sl, t) = 0 de lo contrario para todo l ∈ L y t ∈ S2; • ur(s1 0, tc) = 0 para todo c ∈ C; • ur(s2 0, tc) = 1 para todo c ∈ C; • ur(sb 0, t1 0) = 1 para todo b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 de lo contrario para todo b ∈ {1, 2} y t ∈ S2; • ur(sb c, t) = 0 de lo contrario para todo c ∈ C y b ∈ {1, 2}; y la utilidad del jugador de la fila es 0 en todos los demás casos. La función de utilidad para el jugador de la columna se da de la siguiente manera: • uc(s, tv) = 0 para todo v ∈ V y s ∈ S1; • uc(s, t1) = 0 para todo s ∈ S1; • uc(s2 l , tc) = 1 para todo c ∈ C y l ∈ L donde l ∈ c (literal l ocurre en la cláusula c); • uc(s2 l2 , tc,l1 ) = 1 para todo c ∈ C y l1, l2 ∈ L, l1 = l2 donde l2 ∈ c; • uc(s1 c, tc) = 1 para todo c ∈ C; • uc(s2 c, tc) = 0 para todo c ∈ C; • uc(sb c, tc,l) = 1 para todo c ∈ C, l ∈ L, y b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 en otro caso para todo c ∈ C y l ∈ L; y la utilidad del jugador de la columna es 0 en todos los demás casos. Ahora demostramos que las dos instancias son equivalentes. Primero, supongamos que hay una solución para la instancia de satisfactibilidad: es decir, una asignación de valores de verdad a las variables en V tal que todas las cláusulas se satisfacen. Entonces, considera la siguiente secuencia de eliminaciones en nuestro juego: 1. Para cada variable v que se establezca como verdadera en la asignación, elimine tv (lo que da como resultado una utilidad de 0 para el jugador de la columna en todas partes). 2. Entonces, para cada variable v que se establezca como verdadera en la asignación, elimine s2 +v usando s1 +v (lo cual es posible porque tv ha sido eliminado, y porque t1 no ha sido eliminado (aún)). 3. Ahora elimina t1 (lo cual da como resultado una utilidad de 0 para el jugador de la columna). 4. A continuación, para cada variable v que se establezca como falso en la asignación, elimine s2 −v usando s1 −v (lo cual es posible porque t1 ha sido eliminado, y porque tv no ha sido eliminado (aún)). 5. Para cada cláusula c que tenga la variable correspondiente a uno de sus literales positivos l = +v establecido como verdadero en la asignación, elimine tc utilizando tc,l (lo cual es posible porque s2 l ha sido eliminado, y s2 c no ha sido eliminado (aún)). 6. Para cada cláusula c en la que la variable correspondiente a uno de sus literales negativos l = −v se establece en falso en la asignación, elimine tc utilizando tc,l 91 (lo cual es posible porque s2 l ha sido eliminado, y s2 c no ha sido eliminado (aún)). 7. Debido a que la tarea cumplió con la fórmula, todos los tc han sido eliminados ahora. Por lo tanto, podemos eliminar s2 0 = σ∗ r usando s1 0. Se deduce que hay una solución para la instancia IWD-STRATEGY-ELIMINATION. Ahora supongamos que hay una solución para la instancia IWD-STRATEGYELIMINATION. Por el Lema 1, podemos asumir que todas las dominancias son por estrategias puras. Primero observamos que solo s1 0 puede eliminar s2 0 = σ∗ r, porque es la única otra estrategia que le da al jugador de la fila una utilidad de 1 contra t1 0, y t1 0 es ineliminable. Sin embargo, dado que s2 0 tiene un mejor rendimiento que s1 0 contra las estrategias de tc, se deduce que todas las estrategias de tc deben ser eliminadas. Para cada c ∈ C, la estrategia tc solo puede ser eliminada por una de las estrategias tc,l (con el mismo c), ya que estas son las únicas otras estrategias que le dan al jugador de la columna una utilidad de 1 contra s1 c, y s1 c es ineliminable. Pero, para que algún tc,l elimine tc, primero se debe eliminar s2 l. Solo s1 l puede eliminar s2 l, porque es la única otra estrategia que le otorga al jugador de la fila una utilidad de 1 contra tl, y tl es ineliminable. A continuación mostramos que para cada v ∈ V solo se puede eliminar uno de s2 +v, s2 −v. Esto se debe a que para que s1 +v elimine s2 +v, tv debe haber sido eliminado y t1, no (por lo tanto, tv debe ser eliminado antes que t1); pero para que s1 -v elimine s2 -v, t1 debe haber sido eliminado y tv, no (por lo tanto, t1 debe ser eliminado antes que tv). Por lo tanto, establezca v en verdadero si s2 + v es eliminado, y en falso de lo contrario. Debido a lo anterior, para cada cláusula c, uno de los s2 con l ∈ c debe ser eliminado, por lo que se deduce que esta es una asignación satisfactoria para la instancia de satisfactibilidad. Usando el Teorema 1, ahora es (relativamente) fácil demostrar que IWD-UNIQUE-SOLUTION también es NP-completo bajo las mismas restricciones. Teorema 2. IWD-UNIQUE-SOLUTION es NP-completo, incluso con 2 jugadores, y con 0 y 1 siendo las únicas utilidades que ocurren en la matriz, ya sea que se permita o no la dominancia por estrategias mixtas. Prueba. Nuevamente, el problema está en NP porque podemos elegir de manera no determinista la secuencia de eliminaciones y verificar si es correcta. Para demostrar la NP-dificultad, reducimos una instancia arbitraria de IWD-STRATEGY-ELIMINATION a la siguiente instancia de IWD-UNIQUE-SOLUTION. Que todas las estrategias de cada jugador de la instancia original formen parte de la nueva instancia, y que las utilidades resultantes de los jugadores al jugar un par de estas estrategias sean las mismas. Añadimos tres estrategias adicionales σ1 r , σ2 r , σ3 r para el jugador de fila, y tres estrategias adicionales σ1 c , σ2 c , σ3 c para el jugador de columna. Que las utilidades adicionales sean las siguientes: • ur(σr, σj c) = 1 para todo σr /∈ {σ1 r , σ2 r , σ3 r } y j ∈ {2, 3}; • ur(σi r, σc) = 1 para todo i ∈ {1, 2, 3} y σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 para todo i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • y la utilidad de los jugadores de fila es 0 en todos los demás casos que involucren una nueva estrategia. • uc(σ3 r , σc) = 1 para todo σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 para todo j ∈ {2, 3} (σ∗ r es la estrategia a ser eliminada en la instancia original); • uc(σi r, σ1 c ) = 1 para todo i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • y la utilidad de los jugadores de columna es 0 en todos los demás casos que involucren una nueva estrategia. Procedemos a demostrar que las dos instancias son equivalentes. Primero supongamos que existe una solución para la instancia original de IWDSTRATEGY-ELIMINATION. Luego, realiza la misma secuencia de eliminaciones para eliminar σ∗ r en la nueva instancia IWD-UNIQUE-SOLUTION. (Esto es posible porque en cualquier etapa, cualquier dominancia débil para el jugador de fila en la instancia original sigue siendo una dominancia débil en la nueva instancia, ya que las utilidades de las dos estrategias para el jugador de fila son las mismas cuando el jugador de columna juega una de las nuevas estrategias; y lo mismo ocurre para el jugador de columna). Una vez que σ∗ r sea eliminado, permita que σ1 c elimine a σ2 c. (Se desempeña mejor contra σ2 r.) Entonces, dejemos que σ1 r elimine todas las demás estrategias restantes para el jugador de la fila. (Siempre tiene un mejor desempeño contra σ1 c o σ3 c.) Finalmente, σ1 c es la mejor respuesta única contra σ1 r entre las estrategias restantes de los jugadores de columna, así que permitamos que elimine todas las demás estrategias restantes para el jugador de columna. Por lo tanto, existe una solución para la instancia IWD-UNIQUE-SOLUTION. Ahora supongamos que existe una solución para la instancia IWD-UNIQUESOLUTION. Por el Lema 1, podemos asumir que todas las dominancias son por estrategias puras. Mostraremos que ninguna de las nuevas estrategias (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) puede eliminar a otra estrategia, ni ser eliminada antes de que σ∗ r sea eliminada. Por lo tanto, debe haber una secuencia de eliminaciones que termine con la eliminación de σ∗ r, la cual no involucre ninguna de las nuevas estrategias y, por lo tanto, sea una secuencia válida de eliminaciones en el juego original (porque todas las estrategias originales tienen el mismo rendimiento contra cada nueva estrategia). Ahora demostramos que esto es cierto agotando todas las posibilidades para la primera eliminación antes de que se elimine σ∗ r que implica una nueva estrategia. Ninguno de los σi r puede ser eliminado por un σr /∈ {σ1 r , σ2 r , σ3 r}, porque los σi r tienen un mejor desempeño contra σ1 c. σ1 r no puede eliminar ninguna otra estrategia, porque siempre tiene un desempeño inferior contra σ2 c. σ2 r y σ3 r son equivalentes desde la perspectiva de los jugadores de fila (y por lo tanto no pueden eliminarse entre sí), y no pueden eliminar ninguna otra estrategia porque siempre tienen un desempeño inferior contra σ3 c. Ninguno de los σj c puede ser eliminado por un σc /∈ {σ1 c , σ2 c , σ3 c}, porque los σj c siempre tienen un mejor desempeño contra σ1 r o σ2 r. σ1 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ∗ r o σ3 r. σ2 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ2 r o σ3 r. σ3 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ1 r o σ3 r. Por lo tanto, existe una solución para la instancia IWDSTRATEGY-ELIMINATION. Una versión ligeramente más débil de la parte del Teorema 2 que concierne la dominancia solo por estrategias puras es el resultado principal de Gilboa et al. [7]. (Además de no demostrar el resultado para la dominancia por estrategias mixtas, el resultado original era más débil porque requería utilidades {0, 1, 2, 3, 4, 5, 6, 7, 8} en lugar de solo {0, 1} (y debido a esto, nuestro Lema 1 no se puede aplicar para obtener el resultado para estrategias mixtas).) 5. DOMINANCIA (ITERADA) USANDO ESTRATEGIAS MIXTAS CON SOPORTES PEQUEÑOS Al demostrar que una estrategia es dominada por una estrategia mixta, hay varias razones para preferir exhibir una estrategia dominante que coloque probabilidad positiva en la menor cantidad posible de estrategias puras. Primero, esto reducirá el número de bits necesarios para especificar la estrategia dominante (y así la prueba de dominancia se puede comunicar más rápido): si la estrategia mixta dominante coloca probabilidad positiva en solo k estrategias, entonces se puede especificar usando k números reales para las probabilidades, más k log m (donde m es el número de estrategias para el jugador en consideración) bits para indicar qué estrategias se utilizan. Segundo, la prueba de dominancia será más clara: para una estrategia mixta dominante, es típicamente (siempre en el caso de dominancia estricta) posible distribuir parte de la probabilidad en cualquier estrategia pura no utilizada y aún así tener una estrategia dominante, pero esto oscurece cuáles estrategias puras son las clave para hacer que la estrategia mixta sea dominante. Tercero, debido a que el argumento para eliminar la estrategia dominada es más simple y fácil de entender, es más probable que sea aceptado. En cuarto lugar, el nivel de neutralidad al riesgo requerido para que el argumento funcione se reduce, al menos en el caso extremo donde se puede exhibir la dominancia de una única estrategia pura (no se requiere neutralidad al riesgo aquí). Esto motiva el siguiente problema. Definición 4 (CONJUNTO DOMINANTE MÍNIMO). Se nos dan las utilidades de los jugadores de fila de un juego en forma normal, una estrategia distinguida σ∗ para el jugador de fila, una especificación de si la dominancia debe ser estricta o débil, y un número k. Se nos pregunta si existe una estrategia mixta σ para el jugador de fila que coloque probabilidad positiva en como máximo k estrategias puras, y domine a σ∗ en el sentido requerido. Lamentablemente, este problema es NP-completo. Teorema 3. El problema del CONJUNTO DOMINANTE MÍNIMO es NP-completo, tanto para dominancia estricta como para dominancia débil. Prueba. El problema está en NP porque podemos elegir de manera no determinista un conjunto de a lo sumo k estrategias para dar probabilidad positiva, y decidir si podemos dominar a σ∗ con estas k estrategias como se describe en la Proposición 1. Para demostrar la NP-dificultad, reducimos una instancia arbitraria de COBERTURA-DE-CONJUNTOS (dado un conjunto S, subconjuntos S1, S2, . . . , Sr, y un número t, ¿puede S ser cubierto por a lo sumo t de los subconjuntos?) a la siguiente instancia de CONJUNTO-DOMINANTE-MÍNIMO. Para cada elemento s ∈ S, hay una estrategia pura σs para el jugador de la columna. Para cada subconjunto Si, hay una estrategia pura σSi para el jugador de la fila. Finalmente, está la distinguida estrategia pura σ∗ para el jugador de la fila. Las utilidades de los jugadores de la fila son las siguientes: ur(σSi , σs) = t + 1 si s ∈ Si; ur(σSi , σs) = 0 si s /∈ Si; ur(σ∗ , σs) = 1 para todo s ∈ S. Finalmente, dejamos que k = t. Ahora procedemos a demostrar que las dos instancias son equivalentes. Primero supongamos que existe una solución para la instancia de COBERTURA-CONJUNTO. Sin pérdida de generalidad, podemos asumir que hay exactamente k subconjuntos en la cobertura. Entonces, para cada Si que esté en la cobertura, dejemos que la estrategia dominante σ coloque exactamente 1 k de probabilidad en la estrategia pura correspondiente σSi. Ahora, si dejamos que n(s) sea el número de subconjuntos en la cobertura que contienen a s (observamos que n(s) ≥ 1), entonces para cada estrategia σs del jugador de la columna, la utilidad esperada de los jugadores de la fila al jugar σ cuando el jugador de la columna está jugando σs es u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs). Entonces, σ domina estrictamente (y por lo tanto también débilmente) a σ∗, y existe una solución para la instancia del conjunto de dominación mínimo. Ahora supongamos que existe una solución para la instancia de CONJUNTO-DOMINANTE-MÍNIMO. Considera las estrategias puras (a lo sumo k) de la forma σSi en las que la estrategia mixta dominante σ asigna probabilidad positiva, y deja que T sea la colección de los subconjuntos correspondientes Si. Sostenemos que T es una cubierta. Supongamos que hay algún s ∈ S que no está en ninguno de los subconjuntos en T. Entonces, si el jugador de la columna juega σs, el jugador de la fila (cuando juega σ) siempre recibirá una utilidad de 0, en contraposición a la utilidad de 1 que el jugador de la fila recibiría al jugar σ∗, contradiciendo el hecho de que σ domina a σ∗ (ya sea esta dominancia débil o estricta). Se deduce que existe una solución para la instancia de COBERTURA-DE-CONJUNTOS. Por otro lado, si requerimos que la estrategia dominante solo coloque probabilidad positiva en un número muy pequeño de estrategias puras, entonces una vez más resulta fácil verificar si una estrategia está dominada. Específicamente, para determinar si la estrategia σ∗ del jugador está dominada por una estrategia que coloca probabilidad positiva solo en k estrategias puras, simplemente podemos verificar, para cada subconjunto de k de las estrategias puras del jugador, si hay una estrategia que coloca probabilidad positiva solo en esas k estrategias y domina a σ∗, utilizando la Proposición 1. Esto solo requiere O(|Σi|k) comprobaciones. Por lo tanto, si k es una constante, esto constituye un algoritmo de tiempo polinómico. Una pregunta natural que surge a continuación es si la dominancia estricta iterada sigue siendo computacionalmente fácil cuando se requiere que las estrategias dominantes coloquen una probabilidad positiva en como máximo k estrategias puras, donde k es una constante pequeña. (Ya hemos demostrado en la Sección 4 que la dominancia débil iterada es difícil incluso cuando k = 1, es decir, solo se permite la dominancia por estrategias puras). Por supuesto, si la dominancia estricta iterada fuera independiente del camino bajo esta restricción, la facilidad computacional seguiría como lo hizo en la Sección 4. Sin embargo, resulta que esto no es así. Observación 1. Si restringimos las estrategias dominantes para asignar probabilidad positiva a lo sumo a dos estrategias puras, la dominancia estricta iterada se vuelve dependiente del camino. Prueba. Considera el siguiente juego: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Sea (i, j) el resultado en el que el jugador de la fila juega en la fila i y el jugador de la columna juega en la columna j. Dado que (1, 1), (2, 2) y (4, 3) son todos equilibrios de Nash, ninguna de las estrategias puras de los jugadores de columna será eliminada, al igual que las filas 1, 2 y 4. Ahora observamos que la aleatorización uniforme entre las filas 1 y 2 domina a la fila 3, y la aleatorización uniforme entre las filas 3 y 4 domina a la fila 5. Sin embargo, si eliminamos la fila 3 primero, se vuelve imposible dominar la fila 5 sin aleatorizar al menos 3 estrategias puras. De hecho, la dominancia estricta iterada resulta ser difícil incluso cuando k = 3. Teorema 4. Si restringimos las estrategias dominantes para colocar una probabilidad positiva en como máximo tres estrategias puras, se vuelve NP-completo decidir si una estrategia dada puede ser eliminada usando dominancia estricta iterada. 93 Prueba. El problema está en NP porque, dado una secuencia de estrategias a ser eliminadas, podemos verificar en tiempo polinómico si esta es una secuencia válida de eliminaciones (para cualquier estrategia a ser eliminada, podemos verificar, para cada subconjunto de tres otras estrategias, si hay una estrategia que coloca probabilidad positiva solo en estas tres estrategias que domina a la estrategia a ser eliminada, utilizando la Proposición 1). Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto no vacío de cláusulas C sobre un conjunto no vacío de variables V, con literales correspondientes L = {+v : v ∈ V} ∪ {−v : v ∈ V}) al siguiente juego de dos jugadores. Para cada variable v ∈ V, el jugador de la fila tiene estrategias s+v, s−v, s1 v, s2 v, s3 v, s4 v, y el jugador de la columna tiene estrategias t1 v, t2 v, t3 v, t4 v. Para cada cláusula c ∈ C, el jugador de la fila tiene una estrategia sc, y el jugador de la columna tiene una estrategia tc, así como, para cada literal l que ocurre en c, una estrategia adicional tl c. El jugador de la fila tiene dos estrategias adicionales s1 y s2. (s2 es la estrategia que estamos buscando eliminar). Finalmente, el jugador de la columna tiene una estrategia adicional t1. La función de utilidad para el jugador de la fila se da de la siguiente manera (donde ε es algún número suficientemente pequeño): • ur(s+v, tj v) = 4 si j ∈ {1, 2}, para todo v ∈ V; • ur(s+v, tj v) = 1 si j ∈ {3, 4}, para todo v ∈ V; • ur(s−v, tj v) = 1 si j ∈ {1, 2}, para todo v ∈ V; • ur(s−v, tj v) = 4 si j ∈ {3, 4}, para todo v ∈ V; • ur(s+v, t) = ur(s−v, t) = 0 para todo v ∈ V y t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 para todo v ∈ V e i ∈ {1, 2, 3, 4}; • ur(si v, t) = para todo v ∈ V, i ∈ {1, 2, 3, 4}, y t = ti v; • ur(sc, tc) = 2 para todo c ∈ C; • ur(sc, t) = 0 para todo c ∈ C y t = tc; • ur(s1, t1) = 1 + ε; • ur(s1, t) = para todo t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 para todo c ∈ C; • ur(s2, t) = 0 para todo t /∈ {t1} ∪ {tc : c ∈ C}. La función de utilidad para el jugador de la columna se da de la siguiente manera: • uc(si v, ti v) = 1 para todo v ∈ V e i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 para todo v ∈ V, i ∈ {1, 2, 3, 4}, y s = si v; • uc(sc, tc) = 1 para todo c ∈ C; • uc(sl, tc) = 1 para todo c ∈ C y l ∈ L que ocurre en c; • uc(s, tc) = 0 para todo c ∈ C y s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + para todo c ∈ C; • uc(sl, tl c) = 1 + para todo c ∈ C y l = l que ocurre en c; • uc(s, tl c) = para todo c ∈ C y s /∈ {sc} ∪ {sl : l ∈ c, l = l}; • uc(s2, t1) = 1; • uc(s, t1) = 0 para todo s = s2. Ahora demostramos que las dos instancias son equivalentes. Primero, supongamos que hay una solución para la instancia de satisfactibilidad. Entonces, considera la siguiente secuencia de eliminaciones en nuestro juego: 1. Para cada variable v que se establezca como verdadera en la asignación satisfactoria, elimine s+v con la estrategia mixta σr que coloca probabilidad 1/3 en s−v, probabilidad 1/3 en s1 v y probabilidad 1/3 en s2 v. (La utilidad esperada de jugar σr contra t1 v o t2 v es 14/3 > 4; contra t3 v o t4 v, es 4/3 > 1; y contra cualquier otra cosa es 2/3 > 0. Por lo tanto, la dominancia es válida. De manera similar, para cada variable v que se establezca como falso en la asignación satisfactoria, elimine s−v con la estrategia mixta σr que coloca probabilidad 1/3 en s+v, probabilidad 1/3 en s3 v, y probabilidad 1/3 en s4 v. (La utilidad esperada de jugar σr contra t1 v o t2 v es 4/3 > 1; contra t3 v o t4 v, es 14/3 > 4; y contra cualquier otra cosa es 2/3 > 0. Por lo tanto, la dominancia es válida. Para cada c ∈ C, elimine tc con cualquier tl c para el cual l se haya establecido como verdadero en la asignación satisfactoria. (Esta es una dominancia válida porque tl c funciona mejor que tc contra cualquier estrategia que no sea sl, y eliminamos sl en el paso 1 o en el paso 2.) 4. Finalmente, elimina s2 con s1. (Esta es una dominancia válida porque s1 tiene un mejor rendimiento que s2 contra cualquier estrategia que no esté en {tc : c ∈ C}, la cual eliminamos en el paso 3.) Por lo tanto, hay un camino de eliminación que elimina s2. Ahora, supongamos que hay un camino de eliminación que elimina s2. La estrategia que eventualmente domina a s2 debe colocar la mayor parte de su probabilidad en s1, ya que s1 es la única otra estrategia que se desempeña bien contra t1, la cual no puede ser eliminada antes que s2. Sin embargo, s1 tiene un rendimiento significativamente peor que s2 contra cualquier estrategia tc con c ∈ C, por lo que se deduce que todas estas estrategias deben ser eliminadas primero. Cada estrategia tc solo puede ser eliminada por una estrategia que coloque la mayor parte de su peso en las estrategias correspondientes tl c con l ∈ c, ya que son las únicas otras estrategias que funcionan bien contra sc, las cuales no pueden ser eliminadas antes de tc. Sin embargo, cada estrategia tl c funciona significativamente peor que tc contra sl, por lo que se deduce que para cada cláusula c, para uno de los literales l que aparecen en ella, sl debe ser eliminado primero. Ahora, las estrategias de la forma tj v nunca serán eliminadas porque son las únicas mejores respuestas a las estrategias correspondientes sj v (que, a su vez, son las mejores respuestas a las tj v correspondientes). Como resultado, si la estrategia s+v (respectivamente, s−v) es eliminada, entonces su estrategia opuesta s−v (respectivamente, s+v) ya no puede ser eliminada, por la siguiente razón. No hay otra estrategia pura restante que obtenga una utilidad significativa contra más de una de las estrategias t1 v, t2 v, t3 v, t4 v, pero s−v (respectivamente, s+v) obtiene una utilidad significativa contra las 4, y por lo tanto no puede ser dominada por una estrategia mixta que coloque una probabilidad positiva en como máximo 3 estrategias. Se deduce que para cada v ∈ V, a lo sumo una de las estrategias s+v, s−v es eliminada, de tal manera que para cada cláusula c, para uno de los literales l que aparece en ella, sl debe ser eliminada. Pero luego, establecer todas las literales l de manera que sl sea eliminado a verdadero constituye una solución a la instancia de satisfactibilidad. En la siguiente sección, regresamos al escenario donde no hay restricción en el número de estrategias puras en las que una estrategia mixta dominante puede colocar probabilidad positiva. 6. DOMINANCIA (ITERADA) EN JUEGOS BAYESIANOS Hasta ahora, nos hemos enfocado en juegos de forma normal que están representados de manera plana (es decir, cada entrada de la matriz se da explícitamente). Sin embargo, para muchos juegos, la representación plana es demasiado grande para escribirse explícitamente, y en su lugar, se necesita utilizar alguna representación que aproveche la estructura del juego. Los juegos bayesianos, además de ser de interés por sí mismos, pueden considerarse como una representación estructurada útil de los juegos en forma normal, y los estudiaremos en esta sección. En un <br>juego bayesiano</br>, cada jugador recibe primero información de preferencia de manera privada (el tipo de jugador) de una distribución, la cual determina la utilidad que ese jugador recibe por cada resultado del juego (es decir, el vector de acciones jugadas en el juego). Después de recibir este tipo, el jugador realiza una acción basada en él. Definición 7. Un <br>juego bayesiano</br> está dado por un conjunto de jugadores {1, 2, . . . , n}; y, para cada jugador i, un conjunto (finito) de acciones Ai, un espacio de tipos (finito) Θi con una distribución de probabilidad πi sobre él, y una función de utilidad ui : Θi × A1 × A2 × . . . × An → R (donde ui(θi, a1, a2, . . . , an) denota la utilidad del jugador i cuando su tipo es θi y cada jugador j juega la acción aj). Una estrategia pura en un <br>juego bayesiano</br> es una asignación de tipos a acciones, σi: Θi → Ai, donde σi(θi) denota la acción que el jugador i elige para el tipo θi. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "iterated dominance": {
            "translated_key": "dominancia iterada",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Complexity of (Iterated) Dominance∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using dominance and <br>iterated dominance</br>.",
                "We first study both strict and weak dominance (not iterated), and show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then move on to <br>iterated dominance</br>.",
                "We show that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allows us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then study what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we show that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we show that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we study Bayesian games.",
                "We show that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak ∗ This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858, and a Sloan Fellowship. dominance).",
                "Finally, we show that <br>iterated dominance</br> using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION In multiagent systems with self-interested agents, the optimal action for one agent may depend on the actions taken by other agents.",
                "In such settings, the agents require tools from game theory to rationally decide on an action.",
                "Game theory offers various formal models of strategic settings-the best-known of which is a game in normal (or matrix) form, specifying a utility (payoff) for each agent for each combination of strategies that the agents choose-as well as solution concepts, which, given a game, specify which outcomes are reasonable (under various assumptions of rationality and common knowledge).",
                "Probably the best-known (and certainly the most-studied) solution concept is that of Nash equilibrium.",
                "A Nash equilibrium specifies a strategy for each player, in such a way that no player has an incentive to (unilaterally) deviate from the prescribed strategy.",
                "Recently, numerous papers have studied computing Nash equilibria in various settings [9, 4, 12, 3, 13, 14], and the complexity of constructing a Nash equilibrium in normal form games has been labeled one of the two most important open problems on the boundary of P today [20].",
                "The problem of computing solutions according to the perhaps more elementary solution concepts of dominance and <br>iterated dominance</br> has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the game theory community [7].1 ) A strategy strictly dominates another strategy if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one.",
                "The idea is that dominated strategies can be eliminated from consideration.",
                "In <br>iterated dominance</br>, the elimination proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating strategy no longer needs to perform better than or as well as the dominated strategy against opponent strategies that were eliminated in earlier rounds.",
                "Computing solutions according to (iterated) dominance is important for at least the following reasons: 1) it can be computationally easier than computing (for instance) a Nash equilibrium (and therefore it can be useful as a preprocessing step in computing a Nash equilibrium), and 2) (iterated) dominance requires a weaker rationality assumption on the players than (for instance) Nash equilibrium, and therefore solutions derived according to it are more likely to occur.",
                "In this paper, we study some fundamental computational questions concerning dominance and <br>iterated dominance</br>, including how hard it is to check whether a given strategy can be eliminated by each of the variants of these notions.",
                "The rest of the paper is organized as follows.",
                "In Section 2, we briefly review definitions and basic properties of normal form games, strict and weak dominance, and iterated strict and weak dominance.",
                "In the remaining sections, we study computational aspects of dominance and <br>iterated dominance</br>.",
                "In Section 3, we study one-shot (not iterated) dominance.",
                "In Section 4, we study <br>iterated dominance</br>.",
                "In Section 5, we study dominance and <br>iterated dominance</br> when the dominating strategy can only place probability on a few pure strategies.",
                "Finally, in Section 6, we study dominance and <br>iterated dominance</br> in Bayesian games. 2.",
                "DEFINITIONS AND BASIC PROPERTIES In this section, we briefly review normal form games, as well as dominance and <br>iterated dominance</br> (both strict and weak).",
                "An n-player normal form game is defined as follows.",
                "Definition 1.",
                "A normal form game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of pure strategies Σi and a utility function ui : Σ1 × Σ2 × . . . × Σn → R (where ui(σ1, σ2, . . . , σn) denotes player is utility when each player j plays action σj).",
                "The two main notions of dominance are defined as follows.",
                "Definition 2.",
                "Player is strategy σi is said to be strictly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "Player is strategy σi is said to be weakly dominated by player is strategy σi if for any vector of strategies σ−i for the other players, ui(σi, σ−i) ≥ ui(σi, σ−i), and for at least one vector of strategies σ−i for the other players, ui(σi, σ−i) > ui(σi, σ−i).",
                "In this definition, it is sometimes allowed for the dominating strategy σi to be a mixed strategy, that is, a probability distribution over pure strategies.",
                "In this case, the utilities in dominance altogether.",
                "For example, simple dominance checks are sometimes used as a subroutine in searching for Nash equilibria [21]. the definition are the expected utilities.2 There are other notions of dominance, such as very weak dominance (in which no strict inequality is required, so two strategies can dominate each other), but we will not study them here.",
                "When we are looking at the dominance relations for player i, the other players (−i) can be thought of as a single player.3 Therefore, in the rest of the paper, when we study one-shot (not iterated) dominance, we will focus without loss of generality on two-player games.4 In two-player games, we will generally refer to the players as r (row) and c (column) rather than 1 and 2.",
                "In <br>iterated dominance</br>, dominated strategies are removed from the game, and no longer have any effect on future dominance relations.",
                "<br>iterated dominance</br> can eliminate more strategies than dominance, as follows. σr may originally not dominate σr because the latter performs better against σc; but then, once σc is removed because it is dominated by σc, σr dominates σr, and the latter can be removed.",
                "For example, in the following game, R can be removed first, after which D is dominated.",
                "L R U 1, 1 0, 0 D 0, 1 1, 0 Either strict or weak dominance can be used in the definition of <br>iterated dominance</br>.",
                "We note that the process of <br>iterated dominance</br> is never helped by removing a dominated mixed strategy, for the following reason.",
                "If σi gives player i a higher utility than σi against mixed strategy σj for player j = i (and strategies σ−{i,j} for the other players), then for at least one pure strategy σj that σj places positive probability on, σi must perform better than σi against σj (and strategies σ−{i,j} for the other players).",
                "Thus, removing the mixed strategy σj does not introduce any new dominances.",
                "More detailed discussions and examples can be found in standard texts on microeconomics or game theory [17, 5].",
                "We are now ready to move on to the core of this paper. 3.",
                "DOMINANCE (NOT ITERATED) In this section, we study the notion of one-shot (not iterated) dominance.",
                "As a first observation, checking whether a given strategy is strictly (weakly) dominated by some pure strategy is straightforward, by checking, for every pure strategy for that player, whether the latter strategy performs strictly better against all the opponents strategies (at least as well against all the opponents strategies, and strictly 2 The dominated strategy σi is, of course, also allowed to be mixed, but this has no technical implications for the paper: when we study one-shot dominance, we ask whether a given strategy is dominated, and it does not matter whether the given strategy is pure or mixed; when we study <br>iterated dominance</br>, there is no use in eliminating mixed strategies, as we will see shortly. 3 This player may have a very large strategy space (one pure strategy for every vector of pure strategies for the players that are being replaced).",
                "Nevertheless, this will not result in an increase in our representation size, because the original representation already had to specify utilities for each of these vectors. 4 We note that a restriction to two-player games would not be without loss of generality for <br>iterated dominance</br>.",
                "This is because for <br>iterated dominance</br>, we need to look at the dominated strategies of each individual player, so we cannot merge any players. 89 better against at least one).5 Next, we show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time by solving a single linear program. (Similar linear programs have been given before [18]; we present the result here for completeness, and because we will build on the linear programs given below in Theorem 6.)",
                "Proposition 1.",
                "Given the row players utilities, a subset Dr of the row players pure strategies Σr, and a distinguished strategy σ∗ r for the row player, we can check in time polynomial in the size of the game (by solving a single linear program of polynomial size) whether there exists some mixed strategy σr, that places positive probability only on strategies in Dr and dominates σ∗ r , both for strict and for weak dominance.",
                "Proof.",
                "Let pdr be the probability that σr places on dr ∈ Dr. We will solve a single linear program in each of our algorithms; linear programs can be solved in polynomial time [10].",
                "For strict dominance, the question is whether the pdr can be set so that for every pure strategy for the column player σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc).",
                "Because the inequality must be strict, we cannot solve this directly by linear programming.",
                "We proceed as follows.",
                "Because the game is finite, we may assume without loss of generality that all utilities are positive (if not, simply add a constant to all utilities.)",
                "Solve the following linear program: minimize dr∈Dr pdr such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc).",
                "If σ∗ r is strictly dominated by some mixed strategy, this linear program has a solution with objective value < 1. (The dominating strategy is a feasible solution with objective value exactly 1.",
                "Because no constraint is binding for this solution, we can reduce one of the probabilities slightly without affecting feasibility, thereby obtaining a solution with objective value < 1.)",
                "Moreover, if this linear program has a solution with objective value < 1, there is a mixed strategy strictly dominating σ∗ r , which can be obtained by taking the LP solution and adding the remaining probability to any strategy (because all the utilities are positive, this will add to the left side of any inequality, so all inequalities will become strict).",
                "For weak dominance, we can solve the following linear program: maximize σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) such that for any σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1.",
                "If σ∗ r is weakly dominated by some mixed strategy, then that mixed strategy is a feasible solution to this program with objective value > 0, because for at least one strategy σc ∈ Σc we have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0.",
                "On the other hand, if this program has a solution with objective value > 0, then for at least one strategy σc ∈ Σc we 5 Recall that the assumption of a single opponent (that is, the assumption of two players) is without loss of generality for one-shot dominance. must have ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, and thus the linear programs solution is a weakly dominating mixed strategy. 4.",
                "<br>iterated dominance</br> We now move on to <br>iterated dominance</br>.",
                "It is well-known that iterated strict dominance is path-independent [6, 19]that is, if we remove dominated strategies until no more dominated strategies remain, in the end the remaining strategies for each player will be the same, regardless of the order in which strategies are removed.",
                "Because of this, to see whether a given strategy can be eliminated by iterated strict dominance, all that needs to be done is to repeatedly remove strategies that are strictly dominated, until no more dominated strategies remain.",
                "Because we can check in polynomial time whether any given strategy is dominated (whether or not dominance by mixed strategies is allowed, as described in Section 3), this whole procedure takes only polynomial time.",
                "In the case of <br>iterated dominance</br> by pure strategies with two players, Knuth et al. [11] slightly improve on (speed up) the straightforward implementation of this procedure by keeping track of, for each ordered pair of strategies for a player, the number of opponent strategies that prevent the first strategy from dominating the second.",
                "Hereby the runtime for an m × n game is reduced from O((m + n)4 ) to O((m + n)3 ). (Actually, they only study very weak dominance (for which no strict inequalities are required), but the approach is easily extended.)",
                "In contrast, iterated weak dominance is known to be pathdependent.6 For example, in the following game, using iterated weak dominance we can eliminate M first, and then D, or R first, and then U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Therefore, while the procedure of removing weakly dominated strategies until no more weakly dominated strategies remain can certainly be executed in polynomial time, which strategies survive in the end depends on the order in which we remove the dominated strategies.",
                "We will investigate two questions for iterated weak dominance: whether a given strategy is eliminated in some path, and whether there is a path to a unique solution (one pure strategy left per player).",
                "We will show that both of these problems are computationally hard.",
                "Definition 3.",
                "Given a game in normal form and a distinguished strategy σ∗ , IWD-STRATEGY-ELIMINATION asks whether there is some path of iterated weak dominance that eliminates σ∗ .",
                "Given a game in normal form, IWDUNIQUE-SOLUTION asks whether there is some path of iterated weak dominance that leads to a unique solution (one strategy left per player).",
                "The following lemma shows a special case of normal form games in which allowing for weak dominance by mixed strategies (in addition to weak dominance by pure strategies) does 6 There is, however, a restriction of weak dominance called nice weak dominance which is path-independent [15, 16].",
                "For an overview of path-independence results, see Apt [1]. 90 not help.",
                "We will prove the hardness results in this setting, so that they will hold whether or not dominance by mixed strategies is allowed.",
                "Lemma 1.",
                "Suppose that all the utilities in a game are in {0, 1}.",
                "Then every pure strategy that is weakly dominated by a mixed strategy is also weakly dominated by a pure strategy.",
                "Proof.",
                "Suppose pure strategy σ is weakly dominated by mixed strategy σ∗ .",
                "If σ gets a utility of 1 against some opponent strategy (or vector of opponent strategies if there are more than 2 players), then all the pure strategies that σ∗ places positive probability on must also get a utility of 1 against that opponent strategy (or else the expected utility would be smaller than 1).",
                "Moreover, at least one of the pure strategies that σ∗ places positive probability on must get a utility of 1 against an opponent strategy that σ gets 0 against (or else the inequality would never be strict).",
                "It follows that this pure strategy weakly dominates σ.",
                "We are now ready to prove the main results of this section.",
                "Theorem 1.",
                "IWD-STRATEGY-ELIMINATION is NPcomplete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can easily check whether this is a valid sequence of eliminations (even when dominance by mixed strategies is allowed, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following IWD-STRATEGY-ELIMINATION instance. (In this instance, we will specify that certain strategies are uneliminable.",
                "A strategy σr can be made uneliminable, even when 0 and 1 are the only allowed utilities, by adding another strategy σr and another opponent strategy σc, so that: 1. σr and σr are the only strategies that give the row player a utility of 1 against σc. 2. σr and σr always give the row player the same utility. 3. σc is the only strategy that gives the column player a utility of 1 against σr, but otherwise σc always gives the column player utility 0.",
                "This makes it impossible to eliminate any of these three strategies.",
                "We will not explicitly specify the additional strategies to make the proof more legible.)",
                "In this proof, we will denote row player strategies by s, and column player strategies by t, to improve legibility.",
                "Let the row players pure strategy set be given as follows.",
                "For every variable v ∈ V , the row player has corresponding strategies s1 +v, s2 +v, s1 −v, s2 −v.",
                "Additionally, the row player has the following 2 strategies: s1 0 and s2 0, where s2 0 = σ∗ r (that is, it is the strategy we seek to eliminate).",
                "Finally, for every clause c ∈ C, the row player has corresponding strategies s1 c (uneliminable) and s2 c. Let the column players pure strategy set be given as follows.",
                "For every variable v ∈ V , the column player has a corresponding strategy tv.",
                "For every clause c ∈ C, the column player has a corresponding strategy tc, and additionally, for every literal l ∈ L that occurs in c, a strategy tc,l.",
                "For every variable v ∈ V , the column player has corresponding strategies t+v, t−v (both uneliminable).",
                "Finally, the column player has three additional strategies: t1 0 (uneliminable), t2 0, and t1.",
                "The utility function for the row player is given as follows: • ur(s1 +v, tv) = 0 for all v ∈ V ; • ur(s2 +v, tv) = 1 for all v ∈ V ; • ur(s1 −v, tv) = 1 for all v ∈ V ; • ur(s2 −v, tv) = 0 for all v ∈ V ; • ur(s1 +v, t1) = 1 for all v ∈ V ; • ur(s2 +v, t1) = 0 for all v ∈ V ; • ur(s1 −v, t1) = 0 for all v ∈ V ; • ur(s2 −v, t1) = 1 for all v ∈ V ; • ur(sb +v, t+v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sb −v, t−v) = 1 for all v ∈ V and b ∈ {1, 2}; • ur(sl, t) = 0 otherwise for all l ∈ L and t ∈ S2; • ur(s1 0, tc) = 0 for all c ∈ C; • ur(s2 0, tc) = 1 for all c ∈ C; • ur(sb 0, t1 0) = 1 for all b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 otherwise for all b ∈ {1, 2} and t ∈ S2; • ur(sb c, t) = 0 otherwise for all c ∈ C and b ∈ {1, 2}; and the row players utility is 0 in every other case.",
                "The utility function for the column player is given as follows: • uc(s, tv) = 0 for all v ∈ V and s ∈ S1; • uc(s, t1) = 0 for all s ∈ S1; • uc(s2 l , tc) = 1 for all c ∈ C and l ∈ L where l ∈ c (literal l occurs in clause c); • uc(s2 l2 , tc,l1 ) = 1 for all c ∈ C and l1, l2 ∈ L, l1 = l2 where l2 ∈ c; • uc(s1 c, tc) = 1 for all c ∈ C; • uc(s2 c, tc) = 0 for all c ∈ C; • uc(sb c, tc,l) = 1 for all c ∈ C, l ∈ L, and b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 otherwise for all c ∈ C and l ∈ L; and the column players utility is 0 in every other case.",
                "We now show that the two instances are equivalent.",
                "First, suppose there is a solution to the satisfiability instance: that is, a truth-value assignment to the variables in V such that all clauses are satisfied.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the assignment, eliminate tv (which gives the column player utility 0 everywhere). 2.",
                "Then, for every variable v that is set to true in the assignment, eliminate s2 +v using s1 +v (which is possible because tv has been eliminated, and because t1 has not been eliminated (yet)). 3.",
                "Now eliminate t1 (which gives the column player utility 0 everywhere). 4.",
                "Next, for every variable v that is set to false in the assignment, eliminate s2 −v using s1 −v (which is possible because t1 has been eliminated, and because tv has not been eliminated (yet)). 5.",
                "For every clause c which has the variable corresponding to one of its positive literals l = +v set to true in the assignment, eliminate tc using tc,l (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 6.",
                "For every clause c which has the variable corresponding to one of its negative literals l = −v set to false in the assignment, eliminate tc using tc,l 91 (which is possible because s2 l has been eliminated, and s2 c has not been eliminated (yet)). 7.",
                "Because the assignment satisfied the formula, all the tc have now been eliminated.",
                "Thus, we can eliminate s2 0 = σ∗ r using s1 0.",
                "It follows that there is a solution to the IWD-STRATEGY-ELIMINATION instance.",
                "Now suppose there is a solution to the IWD-STRATEGYELIMINATION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We first observe that only s1 0 can eliminate s2 0 = σ∗ r , because it is the only other strategy that gets the row player a utility of 1 against t1 0, and t1 0 is uneliminable.",
                "However, because s2 0 performs better than s1 0 against the tc strategies, it follows that all of the tc strategies must be eliminated.",
                "For each c ∈ C, the strategy tc can only be eliminated by one of the strategies tc,l (with the same c), because these are the only other strategies that get the column player a utility of 1 against s1 c, and s1 c is uneliminable.",
                "But, in order for some tc,l to eliminate tc, s2 l must be eliminated first.",
                "Only s1 l can eliminate s2 l , because it is the only other strategy that gets the row player a utility of 1 against tl, and tl is uneliminable.",
                "We next show that for every v ∈ V only one of s2 +v, s2 −v can be eliminated.",
                "This is because in order for s1 +v to eliminate s2 +v, tv needs to have been eliminated and t1, not (so tv must be eliminated before t1); but in order for s1 −v to eliminate s2 −v, t1 needs to have been eliminated and tv, not (so t1 must be eliminated before tv).",
                "So, set v to true if s2 +v is eliminated, and to false otherwise Because by the above, for every clause c, one of the s2 l with l ∈ c must be eliminated, it follows that this is a satisfying assignment to the satisfiability instance.",
                "Using Theorem 1, it is now (relatively) easy to show that IWD-UNIQUE-SOLUTION is also NP-complete under the same restrictions.",
                "Theorem 2.",
                "IWD-UNIQUE-SOLUTION is NP-complete, even with 2 players, and with 0 and 1 being the only utilities occurring in the matrix-whether or not dominance by mixed strategies is allowed.",
                "Proof.",
                "Again, the problem is in NP because we can nondeterministically choose the sequence of eliminations and verify whether it is correct.",
                "To show NP-hardness, we reduce an arbitrary IWD-STRATEGY-ELIMINATION instance to the following IWD-UNIQUE-SOLUTION instance.",
                "Let all the strategies for each player from the original instance remain part of the new instance, and let the utilities resulting from the players playing a pair of these strategies be the same.",
                "We add three additional strategies σ1 r , σ2 r , σ3 r for the row player, and three additional strategies σ1 c , σ2 c , σ3 c for the column player.",
                "Let the additional utilities be as follows: • ur(σr, σj c) = 1 for all σr /∈ {σ1 r , σ2 r , σ3 r } and j ∈ {2, 3}; • ur(σi r, σc) = 1 for all i ∈ {1, 2, 3} and σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 for all i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • and the row players utility is 0 in all other cases involving a new strategy. • uc(σ3 r , σc) = 1 for all σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 for all j ∈ {2, 3} (σ∗ r is the strategy to be eliminated in the original instance); • uc(σi r, σ1 c ) = 1 for all i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • and the column players utility is 0 in all other cases involving a new strategy.",
                "We proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the original IWDSTRATEGY-ELIMINATION instance.",
                "Then, perform the same sequence of eliminations to eliminate σ∗ r in the new IWD-UNIQUE-SOLUTION instance. (This is possible because at any stage, any weak dominance for the row player in the original instance is still a weak dominance in the new instance, because the two strategies utilities for the row player are the same when the column player plays one of the new strategies; and the same is true for the column player.)",
                "Once σ∗ r is eliminated, let σ1 c eliminate σ2 c . (It performs better against σ2 r .)",
                "Then, let σ1 r eliminate all the other remaining strategies for the row player. (It always performs better against either σ1 c or σ3 c .)",
                "Finally, σ1 c is the unique best response against σ1 r among the column players remaining strategies, so let it eliminate all the other remaining strategies for the column player.",
                "Thus, there exists a solution to the IWD-UNIQUE-SOLUTION instance.",
                "Now suppose there exists a solution to the IWD-UNIQUESOLUTION instance.",
                "By Lemma 1, we can assume that all the dominances are by pure strategies.",
                "We will show that none of the new strategies (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) can either eliminate another strategy, or be eliminated before σ∗ r is eliminated.",
                "Thus, there must be a sequence of eliminations ending in the elimination of σ∗ r , which does not involve any of the new strategies, and is therefore a valid sequence of eliminations in the original game (because all original strategies perform the same against each new strategy).",
                "We now show that this is true by exhausting all possibilities for the first elimination before σ∗ r is eliminated that involves a new strategy.",
                "None of the σi r can be eliminated by a σr /∈ {σ1 r , σ2 r , σ3 r }, because the σi r perform better against σ1 c . σ1 r cannot eliminate any other strategy, because it always performs poorer against σ2 c . σ2 r and σ3 r are equivalent from the row players perspective (and thus cannot eliminate each other), and cannot eliminate any other strategy because they always perform poorer against σ3 c .",
                "None of the σj c can be eliminated by a σc /∈ {σ1 c , σ2 c , σ3 c }, because the σj c always perform better against either σ1 r or σ2 r . σ1 c cannot eliminate any other strategy, because it always performs poorer against either σ∗ r or σ3 r . σ2 c cannot eliminate any other strategy, because it always performs poorer against σ2 r or σ3 r . σ3 c cannot eliminate any other strategy, because it always performs poorer against σ1 r or σ3 r .",
                "Thus, there exists a solution to the IWDSTRATEGY-ELIMINATION instance.",
                "A slightly weaker version of the part of Theorem 2 concerning dominance by pure strategies only is the main result of Gilboa et al. [7]. (Besides not proving the result for dominance by mixed strategies, the original result was weaker because it required utilities {0, 1, 2, 3, 4, 5, 6, 7, 8} rather than just {0, 1} (and because of this, our Lemma 1 cannot be applied to it to get the result for mixed strategies).) 5. (ITERATED) DOMINANCE USING MIXED STRATEGIES WITH SMALL SUPPORTS When showing that a strategy is dominated by a mixed strategy, there are several reasons to prefer exhibiting a 92 dominating strategy that places positive probability on as few pure strategies as possible.",
                "First, this will reduce the number of bits required to specify the dominating strategy (and thus the proof of dominance can be communicated quicker): if the dominating mixed strategy places positive probability on only k strategies, then it can be specified using k real numbers for the probabilities, plus k log m (where m is the number of strategies for the player under consideration) bits to indicate which strategies are used.",
                "Second, the proof of dominance will be cleaner: for a dominating mixed strategy, it is typically (always in the case of strict dominance) possible to spread some of the probability onto any unused pure strategy and still have a dominating strategy, but this obscures which pure strategies are the ones that are key in making the mixed strategy dominating.",
                "Third, because (by the previous) the argument for eliminating the dominated strategy is simpler and easier to understand, it is more likely to be accepted.",
                "Fourth, the level of risk neutrality required for the argument to work is reduced, at least in the extreme case where dominance by a single pure strategy can be exhibited (no risk neutrality is required here).",
                "This motivates the following problem.",
                "Definition 4 (MINIMUM-DOMINATING-SET).",
                "We are given the row players utilities of a game in normal form, a distinguished strategy σ∗ for the row player, a specification of whether the dominance should be strict or weak, and a number k. We are asked whether there exists a mixed strategy σ for the row player that places positive probability on at most k pure strategies, and dominates σ∗ in the required sense.",
                "Unfortunately, this problem is NP-complete.",
                "Theorem 3.",
                "MINIMUM-DOMINATING-SET is NPcomplete, both for strict and for weak dominance.",
                "Proof.",
                "The problem is in NP because we can nondeterministically choose a set of at most k strategies to give positive probability, and decide whether we can dominate σ∗ with these k strategies as described in Proposition 1.",
                "To show NP-hardness, we reduce an arbitrary SET-COVER instance (given a set S, subsets S1, S2, . . . , Sr, and a number t, can all of S be covered by at most t of the subsets?) to the following MINIMUM-DOMINATING-SET instance.",
                "For every element s ∈ S, there is a pure strategy σs for the column player.",
                "For every subset Si, there is a pure strategy σSi for the row player.",
                "Finally, there is the distinguished pure strategy σ∗ for the row player.",
                "The row players utilities are as follows: ur(σSi , σs) = t + 1 if s ∈ Si; ur(σSi , σs) = 0 if s /∈ Si; ur(σ∗ , σs) = 1 for all s ∈ S. Finally, we let k = t. We now proceed to show that the two instances are equivalent.",
                "First suppose there exists a solution to the SET-COVER instance.",
                "Without loss of generality, we can assume that there are exactly k subsets in the cover.",
                "Then, for every Si that is in the cover, let the dominating strategy σ place exactly 1 k probability on the corresponding pure strategy σSi .",
                "Now, if we let n(s) be the number of subsets in the cover containing s (we observe that that n(s) ≥ 1), then for every strategy σs for the column player, the row players expected utility for playing σ when the column player is playing σs is u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs).",
                "So σ strictly (and thus also weakly) dominates σ∗ , and there exists a solution to the MINIMUM-DOMINATING-SET instance.",
                "Now suppose there exists a solution to the MINIMUMDOMINATING-SET instance.",
                "Consider the (at most k) pure strategies of the form σSi on which the dominating mixed strategy σ places positive probability, and let T be the collection of the corresponding subsets Si.",
                "We claim that T is a cover.",
                "For suppose there is some s ∈ S that is not in any of the subsets in T .",
                "Then, if the column player plays σs, the row player (when playing σ) will always receive utility 0-as opposed to the utility of 1 the row player would receive for playing σ∗ , contradicting the fact that σ dominates σ∗ (whether this dominance is weak or strict).",
                "It follows that there exists a solution to the SET-COVER instance.",
                "On the other hand, if we require that the dominating strategy only places positive probability on a very small number of pure strategies, then it once again becomes easy to check whether a strategy is dominated.",
                "Specifically, to find out whether player is strategy σ∗ is dominated by a strategy that places positive probability on only k pure strategies, we can simply check, for every subset of k of player is pure strategies, whether there is a strategy that places positive probability only on these k strategies and dominates σ∗ , using Proposition 1.",
                "This requires only O(|Σi|k ) such checks.",
                "Thus, if k is a constant, this constitutes a polynomial-time algorithm.",
                "A natural question to ask next is whether iterated strict dominance remains computationally easy when dominating strategies are required to place positive probability on at most k pure strategies, where k is a small constant. (We have already shown in Section 4 that iterated weak dominance is hard even when k = 1, that is, only dominance by pure strategies is allowed.)",
                "Of course, if iterated strict dominance were path-independent under this restriction, computational easiness would follow as it did in Section 4.",
                "However, it turns out that this is not the case.",
                "Observation 1.",
                "If we restrict the dominating strategies to place positive probability on at most two pure strategies, iterated strict dominance becomes path-dependent.",
                "Proof.",
                "Consider the following game: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Let (i, j) denote the outcome in which the row player plays the ith row and the column player plays the jth column.",
                "Because (1, 1), (2, 2), and (4, 3) are all Nash equilibria, none of the column players pure strategies will ever be eliminated, and neither will rows 1, 2, and 4.",
                "We now observe that randomizing uniformly over rows 1 and 2 dominates row 3, and randomizing uniformly over rows 3 and 4 dominates row 5.",
                "However, if we eliminate row 3 first, it becomes impossible to dominate row 5 without randomizing over at least 3 pure strategies.",
                "Indeed, iterated strict dominance turns out to be hard even when k = 3.",
                "Theorem 4.",
                "If we restrict the dominating strategies to place positive probability on at most three pure strategies, it becomes NP-complete to decide whether a given strategy can be eliminated using iterated strict dominance. 93 Proof.",
                "The problem is in NP because given a sequence of strategies to be eliminated, we can check in polynomial time whether this is a valid sequence of eliminations (for any strategy to be eliminated, we can check, for every subset of three other strategies, whether there is a strategy placing positive probability on only these three strategies that dominates the strategy to be eliminated, using Proposition 1).",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = {+v : v ∈ V } ∪ {−v : v ∈ V }) to the following two-player game.",
                "For every variable v ∈ V , the row player has strategies s+v, s−v, s1 v, s2 v, s3 v, s4 v, and the column player has strategies t1 v, t2 v, t3 v, t4 v. For every clause c ∈ C, the row player has a strategy sc, and the column player has a strategy tc, as well as, for every literal l occurring in c, an additional strategy tl c. The row player has two additional strategies s1 and s2. (s2 is the strategy that we are seeking to eliminate.)",
                "Finally, the column player has one additional strategy t1.",
                "The utility function for the row player is given as follows (where is some sufficiently small number): • ur(s+v, tj v) = 4 if j ∈ {1, 2}, for all v ∈ V ; • ur(s+v, tj v) = 1 if j ∈ {3, 4}, for all v ∈ V ; • ur(s−v, tj v) = 1 if j ∈ {1, 2}, for all v ∈ V ; • ur(s−v, tj v) = 4 if j ∈ {3, 4}, for all v ∈ V ; • ur(s+v, t) = ur(s−v, t) = 0 for all v ∈ V and t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 for all v ∈ V and i ∈ {1, 2, 3, 4}; • ur(si v, t) = for all v ∈ V , i ∈ {1, 2, 3, 4}, and t = ti v; • ur(sc, tc) = 2 for all c ∈ C; • ur(sc, t) = 0 for all c ∈ C and t = tc; • ur(s1, t1) = 1 + ; • ur(s1, t) = for all t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 for all c ∈ C; • ur(s2, t) = 0 for all t /∈ {t1} ∪ {tc : c ∈ C}.",
                "The utility function for the column player is given as follows: • uc(si v, ti v) = 1 for all v ∈ V and i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 for all v ∈ V , i ∈ {1, 2, 3, 4}, and s = si v; • uc(sc, tc) = 1 for all c ∈ C; • uc(sl, tc) = 1 for all c ∈ C and l ∈ L occurring in c; • uc(s, tc) = 0 for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + for all c ∈ C; • uc(sl , tl c) = 1 + for all c ∈ C and l = l occurring in c; • uc(s, tl c) = for all c ∈ C and s /∈ {sc} ∪ {sl : l ∈ c, l = l }; • uc(s2, t1) = 1; • uc(s, t1) = 0 for all s = s2.",
                "We now show that the two instances are equivalent.",
                "First, suppose that there is a solution to the satisfiability instance.",
                "Then, consider the following sequence of eliminations in our game: 1.",
                "For every variable v that is set to true in the satisfying assignment, eliminate s+v with the mixed strategy σr that places probability 1/3 on s−v, probability 1/3 on s1 v, and probability 1/3 on s2 v. (The expected utility of playing σr against t1 v or t2 v is 14/3 > 4; against t3 v or t4 v, it is 4/3 > 1; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 2.",
                "Similarly, for every variable v that is set to false in the satisfying assignment, eliminate s−v with the mixed strategy σr that places probability 1/3 on s+v, probability 1/3 on s3 v, and probability 1/3 on s4 v. (The expected utility of playing σr against t1 v or t2 v is 4/3 > 1; against t3 v or t4 v, it is 14/3 > 4; and against anything else it is 2 /3 > 0.",
                "Hence the dominance is valid.) 3.",
                "For every c ∈ C, eliminate tc with any tl c for which l was set to true in the satisfying assignment. (This is a valid dominance because tl c performs better than tc against any strategy other than sl, and we eliminated sl in step 1 or in step 2.) 4.",
                "Finally, eliminate s2 with s1. (This is a valid dominance because s1 performs better than s2 against any strategy other than those in {tc : c ∈ C}, which we eliminated in step 3.)",
                "Hence, there is an elimination path that eliminates s2.",
                "Now, suppose that there is an elimination path that eliminates s2.",
                "The strategy that eventually dominates s2 must place most of its probability on s1, because s1 is the only other strategy that performs well against t1, which cannot be eliminated before s2.",
                "But, s1 performs significantly worse than s2 against any strategy tc with c ∈ C, so it follows that all these strategies must be eliminated first.",
                "Each strategy tc can only be eliminated by a strategy that places most of its weight on the corresponding strategies tl c with l ∈ c, because they are the only other strategies that perform well against sc, which cannot be eliminated before tc.",
                "But, each strategy tl c performs significantly worse than tc against sl, so it follows that for every clause c, for one of the literals l occurring in it, sl must be eliminated first.",
                "Now, strategies of the form tj v will never be eliminated because they are the unique best responses to the corresponding strategies sj v (which are, in turn, the best responses to the corresponding tj v).",
                "As a result, if strategy s+v (respectively, s−v) is eliminated, then its opposite strategy s−v (respectively, s+v) can no longer be eliminated, for the following reason.",
                "There is no other pure strategy remaining that gets a significant utility against more than one of the strategies t1 v, t2 v, t3 v, t4 v, but s−v (respectively, s+v) gets significant utility against all 4, and therefore cannot be dominated by a mixed strategy placing positive probability on at most 3 strategies.",
                "It follows that for each v ∈ V , at most one of the strategies s+v, s−v is eliminated, in such a way that for every clause c, for one of the literals l occurring in it, sl must be eliminated.",
                "But then setting all the literals l such that sl is eliminated to true constitutes a solution to the satisfiability instance.",
                "In the next section, we return to the setting where there is no restriction on the number of pure strategies on which a dominating mixed strategy can place positive probability. 6. (ITERATED) DOMINANCE IN BAYESIAN GAMES So far, we have focused on normal form games that are flatly represented (that is, every matrix entry is given ex94 plicitly).",
                "However, for many games, the flat representation is too large to write down explicitly, and instead, some representation that exploits the structure of the game needs to be used.",
                "Bayesian games, besides being of interest in their own right, can be thought of as a useful structured representation of normal form games, and we will study them in this section.",
                "In a Bayesian game, each player first receives privately held preference information (the players type) from a distribution, which determines the utility that that player receives for every outcome of (that is, vector of actions played in) the game.",
                "After receiving this type, the player plays an action based on it.7 Definition 5.",
                "A Bayesian game is given by a set of players {1, 2, . . . , n}; and, for each player i, a (finite) set of actions Ai, a (finite) type space Θi with a probability distribution πi over it, and a utility function ui : Θi × A1 × A2 × . . . × An → R (where ui(θi, a1, a2, . . . , an) denotes player is utility when is type is θi and each player j plays action aj).",
                "A pure strategy in a Bayesian game is a mapping from types to actions, σi : Θi → Ai, where σi(θi) denotes the action that player i plays for type θi.",
                "Any vector of pure strategies in a Bayesian game defines an (expected) utility for each player, and therefore we can translate a Bayesian game into a normal form game.",
                "In this normal form game, the notions of dominance and <br>iterated dominance</br> are defined as before.",
                "However, the normal form representation of the game is exponentially larger than the Bayesian representation, because each player i has |Ai||Θi| distinct pure strategies.",
                "Thus, any algorithm for Bayesian games that relies on expanding the game to its normal form will require exponential time.",
                "Specifically, our easiness results for normal form games do not directly transfer to this setting.",
                "In fact, it turns out that checking whether a strategy is dominated by a pure strategy is hard in Bayesian games.",
                "Theorem 5.",
                "In a Bayesian game, it is NP-complete to decide whether a given pure strategy σr : Θr → Ar is dominated by some other pure strategy (both for strict and weak dominance), even when the row players distribution over types is uniform.",
                "Proof.",
                "The problem is in NP because it is easy to verify whether a candidate dominating strategy is indeed a dominating strategy.",
                "To show that the problem is NP-hard, we reduce an arbitrary satisfiability instance (given by a set of clauses C using variables from V ) to the following Bayesian game.",
                "Let the row players action set be Ar = {t, f, 0} and let the column players action set be Ac = {ac : c ∈ C}.",
                "Let the row players type set be Θr = {θv : v ∈ V }, with a distribution πr that is uniform.",
                "Let the row players utility function be as follows: • ur(θv, 0, ac) = 0 for all v ∈ V and c ∈ C; • ur(θv, b, ac) = |V | for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b satisfies c; • ur(θv, b, ac) = −1 for all v ∈ V , c ∈ C, and b ∈ {t, f} such that setting v to b does not satisfy c. 7 In general, a player can also receive a signal about the other players preferences, but we will not concern ourselves with that here.",
                "Let the pure strategy to be dominated be the one that plays 0 for every type.",
                "We show that the strategy is dominated by a pure strategy if and only if there is a solution to the satisfiability instance.",
                "First, suppose there is a solution to the satisfiability instance.",
                "Then, let σd r be given by: σd r (θv) = t if v is set to true in the solution to the satisfiability instance, and σd r (θv) = f otherwise.",
                "Then, against any action ac by the column player, there is at least one type θv such that either +v ∈ c and σd r (θv) = t, or −v ∈ c and σd r (θv) = f. Thus, the row players expected utility against action ac is at least |V | |V | − |V |−1 |V | = 1 |V | > 0.",
                "So, σd r is a dominating strategy.",
                "Now, suppose there is a dominating pure strategy σd r .",
                "This dominating strategy must play t or f for at least one type.",
                "Thus, against any ac by the column player, there must at least be some type θv for which ur(θv, σd r (θv), ac) > 0.",
                "That is, there must be at least one variable v such that setting v to σd r (θv) satifies c. But then, setting each v to σd r (θv) must satisfy all the clauses.",
                "So a satisfying assignment exists.",
                "However, it turns out that we can modify the linear programs from Proposition 1 to obtain a polynomial time algorithm for checking whether a strategy is dominated by a mixed strategy in Bayesian games.",
                "Theorem 6.",
                "In a Bayesian game, it can be decided in polynomial time whether a given (possibly mixed) strategy σr is dominated by some other mixed strategy, using linear programming (both for strict and weak dominance).",
                "Proof.",
                "We can modify the linear programs presented in Proposition 1 as follows.",
                "For strict dominance, again assuming without loss of generality that all the utilities in the game are positive, use the following linear program (in which pσr r (θr, ar) is the probability that σr, the strategy to be dominated, places on ar for type θr): minimize θr∈Θr ar∈Ar pr(ar) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1.",
                "Assuming that π(θr) > 0 for all θr ∈ Θr, this program will return an objective value smaller than |Θr| if and only if σr is strictly dominated, by reasoning similar to that done in Proposition 1.",
                "For weak dominance, use the following linear program: maximize ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) such that for any ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); for any θr ∈ Θr, ar∈Ar pr(θr, ar) = 1.",
                "This program will return an objective value greater than 0 if and only if σr is weakly dominated, by reasoning similar to that done in Proposition 1.",
                "We now turn to <br>iterated dominance</br> in Bayesian games.",
                "Na¨ıvely, one might argue that <br>iterated dominance</br> in Bayesian 95 games always requires an exponential number of steps when a significant fraction of the games pure strategies can be eliminated, because there are exponentially many pure strategies.",
                "However, this is not a very strong argument because oftentimes we can eliminate exponentially many pure strategies in one step.",
                "For example, if for some type θr ∈ Θr we have, for all ac ∈ Ac, that u(θr, a1 r, ac) > u(θr, a2 r, ac), then any pure strategy for the row player which plays action a2 r for type θr is dominated (by the strategy that plays action a1 r for type θr instead)-and there are exponentially many (|Ar||Θr|−1 ) such strategies.",
                "It is therefore conceivable that we need only polynomially many eliminations of collections of a players strategies.",
                "However, the following theorem shows that this is not the case, by giving an example where an exponential number of iterations (that is, alternations between the players in eliminating strategies) is required. (We emphasize that this is not a result about computational complexity.)",
                "Theorem 7.",
                "Even in symmetric 3-player Bayesian games, <br>iterated dominance</br> by pure strategies can require an exponential number of iterations (both for strict and weak dominance), even with only three actions per player.",
                "Proof.",
                "Let each player i ∈ {1, 2, 3} have n + 1 types θ1 i , θ2 i , . . . , θn+1 i .",
                "Let each player i have 3 actions ai, bi, ci, and let the utility function of each player be defined as follows. (In the below, i + 1 and i + 2 are shorthand for i + 1(mod 3) and i + 2(mod 3) when used as player indices.",
                "Also, −∞ can be replaced by a sufficiently negative number.",
                "Finally, δ and should be chosen to be very small (even compared to 2−(n+1) ), and should be more than twice as large as δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 for si+1 = ci+1 or si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − for si+1 = ai+1 and si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ for si+1 = ai+1 or si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ for all si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ for all si+1, si+2 when j > 1; • ui(θj i ; bi, si+1, si+2) = − for all si+1, si+2 when j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 for all si+1 when j > 1; • ui(θj i ; ci, si+1, si+2) = δ− for all si+1 and si+2 = ci+2 when j > 1.",
                "Let the distribution over each players types be given by p(θj i ) = 2−j (with the exception that p(θ2 i ) = 2−2 +2−(n+1) ).",
                "We will be interested in eliminating strategies of the following form: play bi for type θ1 i , and play one of bi or ci otherwise.",
                "Because the utility function is the same for any type θj i with j > 1, these strategies are effectively defined by the total probability that they place on ci,8 which is t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j where tj i = 1 if player i 8 Note that the strategies are still pure strategies; the probability placed on an action by a strategy here is simply the sum of the probabilities of the types for which the strategy chooses that action. plays ci for type θj i , and 0 otherwise.",
                "This probability is different for any two different strategies of the given form, and we have exponentially many different strategies of the given form.",
                "For any probability q which can be expressed as t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (with all tj ∈ {0, 1}), let σi(q) denote the (unique) strategy of the given form for player i which places a total probability of q on ci.",
                "Any strategy that plays ci for type θ1 i or ai for some type θj i with j > 1 can immediately be eliminated.",
                "We will show that, after that, we must eliminate the strategies σi(q) with high q first, slowly working down to those with lower q.",
                "Claim 1: If σi+1(q ) and σi+2(q ) have not yet been eliminated, and q < q , then σi(q) cannot yet be eliminated.",
                "Proof: First, we show that no strategy σi(q ) can eliminate σi(q).",
                "Against σi+1(q ), σi+2(q ), the utility of playing σi(p) is − + p · δ − p · q /2.",
                "Thus, when q = 0, it is best to set p as high as possible (and we note that σi+1(0) and σi+2(0) have not been eliminated), but when q > 0, it is best to set p as low as possible because δ < q /2.",
                "Thus, whether q > q or q < q , σi(q) will always do strictly better than σi(q ) against some remaining opponent strategies.",
                "Hence, no strategy σi(q ) can eliminate σi(q).",
                "The only other pure strategies that could dominate σi(q) are strategies that play ai for type θ1 i , and bi or ci for all other types.",
                "Let us take such a strategy and suppose that it plays c with probability p. Against σi+1(q ), σi+2(q ) (which have not yet been eliminated), the utility of playing this strategy is −(q )2 /2 − /2 + p · δ − p · q /2.",
                "On the other hand, playing σi(q) gives − + q · δ − q · q /2.",
                "Because q > q, we have −(q )2 /2 < −q · q /2, and because δ and are small, it follows that σi(q) receives a higher utility.",
                "Therefore, no strategy dominates σi(q), proving the claim.",
                "Claim 2: If for all q > q, σi+1(q ) and σi+2(q ) have been eliminated, then σi(q) can be eliminated.",
                "Proof: Consider the strategy for player i that plays ai for type θ1 i , and bi for all other types (call this strategy σi); we claim σi dominates σi(q).",
                "First, if either of the other players k plays ak for θ1 k, then σi performs better than σi(q) (which receives −∞ in some cases).",
                "Because the strategies for player k that play ck for type θ1 k, or ak for some type θj k with j > 1, have already been eliminated, all that remains to check is that σi performs better than σi(q) whenever both of the other two players play strategies of the following form: play bk for type θ1 k, and play one of bk or ck otherwise.",
                "We note that among these strategies, there are none left that place probability greater than q on ck.",
                "Letting qk denote the probability with which player k plays ck, the expected utility of playing σi is −qi+1 · qi+2/2 − /2.",
                "On the other hand, the utility of playing σi(q) is − + q · δ − q · qi+2/2.",
                "Because qi+1 ≤ q, the difference between these two expressions is at least /2 − δ, which is positive.",
                "It follows that σi dominates σi(q).",
                "From Claim 2, it follows that all strategies of the form σi(q) will eventually be eliminated.",
                "However, Claim 1 shows that we cannot go ahead and eliminate multiple such strategies for one player, unless at least one other player simultaneously keeps up in the eliminated strategies: every time a σi(q) is eliminated such that σi+1(q) and σi+2(q) have not yet been eliminated, we need to eliminate one of the latter two strategies before any σi(q ) with q > q can be eliminated-that is, we need to alternate between players.",
                "Because there are exponentially many strategies of the form σi(q), it follows that iterated elimination will require exponentially many iterations to complete. 96 It follows that an efficient algorithm for <br>iterated dominance</br> (strict or weak) by pure strategies in Bayesian games, if it exists, must somehow be able to perform (at least part of) many iterations in a single step of the algorithm (because if each step only performed a single iteration, we would need exponentially many steps).",
                "Interestingly, Knuth et al. [11] argue that <br>iterated dominance</br> appears to be an inherently sequential problem (in light of their result that iterated very weak dominance is P-complete, that is, apparently not efficiently parallelizable), suggesting that aggregating many iterations may be difficult. 7.",
                "CONCLUSIONS While the Nash equilibrium solution concept is studied more and more intensely in our community, the perhaps more elementary concept of (iterated) dominance has received much less attention.",
                "In this paper we studied various computational aspects of this concept.",
                "We first studied both strict and weak dominance (not iterated), and showed that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve.",
                "We then moved on to <br>iterated dominance</br>.",
                "We showed that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance.",
                "This allowed us to also show that determining whether there is a path that leads to a unique solution is NP-complete.",
                "Both of these results hold both with and without dominance by mixed strategies. (A weaker version of the second result (only without dominance by mixed strategies) was already known [7].)",
                "Iterated strict dominance, on the other hand, is path-independent (both with and without dominance by mixed strategies) and can therefore be done in polynomial time.",
                "We then studied what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies.",
                "First, we showed that finding the dominating strategy with minimum support size is NP-complete (both for strict and weak dominance).",
                "Then, we showed that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies, and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete (even when the limit on the support size is 3).",
                "Finally, we studied dominance and <br>iterated dominance</br> in Bayesian games, as an example of a concise representation language for normal form games that is interesting in its own right.",
                "We showed that, unlike in normal form games, deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete (both with strict and weak dominance); however, deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve (both with strict and weak dominance).",
                "Finally, we showed that <br>iterated dominance</br> using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "There are various avenues for future research.",
                "First, there is the open question of whether it is possible to complete <br>iterated dominance</br> in Bayesian games in polynomial time (even though we showed that an exponential number of alternations between the players in eliminating strategies is sometimes required).",
                "Second, we can study computational aspects of (iterated) dominance in concise representations of normal form games other than Bayesian games-for example, in graphical games [9] or local-effect/action graph games [12, 2]. (How to efficiently perform iterated very weak dominance has already been studied for partially observable stochastic games [8].)",
                "Finally, we can ask whether some of the algorithms we described (such as the one for iterated strict dominance with mixed strategies) can be made faster. 8.",
                "REFERENCES [1] Krzysztof R. Apt.",
                "Uniform proofs of order independence for various strategy elimination procedures.",
                "Contributions to Theoretical Economics, 4(1), 2004. [2] Nivan A. R. Bhat and Kevin Leyton-Brown.",
                "Computing Nash equilibria of action-graph games.",
                "In UAI, 2004. [3] Ben Blum, Christian R. Shelton, and Daphne Koller.",
                "A continuation method for Nash equilibria in structured games.",
                "In IJCAI, 2003. [4] Vincent Conitzer and Tuomas Sandholm.",
                "Complexity results about Nash equilibria.",
                "In IJCAI, pages 765-771, 2003. [5] Drew Fudenberg and Jean Tirole.",
                "Game Theory.",
                "MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "On the order of eliminating dominated strategies.",
                "Operations Research Letters, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai, and Eitan Zemel.",
                "The complexity of eliminating dominated strategies.",
                "Mathematics of Operation Research, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein, and Shlomo Zilberstein.",
                "Dynamic programming for partially observable stochastic games.",
                "In AAAI, pages 709-715, 2004. [9] Michael Kearns, Michael Littman, and Satinder Singh.",
                "Graphical models for game theory.",
                "In UAI, 2001. [10] Leonid Khachiyan.",
                "A polynomial algorithm in linear programming.",
                "Soviet Math.",
                "Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou, and John N Tsitsiklis.",
                "A note on strategy elimination in bimatrix games.",
                "Operations Research Letters, 7(3):103-107, 1988. [12] Kevin Leyton-Brown and Moshe Tennenholtz.",
                "Local-effect games.",
                "In IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Playing large games using simple strategies.",
                "In ACM-EC, pages 36-41, 2003. [14] Michael Littman and Peter Stone.",
                "A polynomial-time Nash equilibrium algorithm for repeated games.",
                "In ACM-EC, pages 48-54, 2003. [15] Leslie M. Marx and Jeroen M. Swinkels.",
                "Order independence for iterated weak dominance.",
                "Games and Economic Behavior, 18:219-245, 1997. [16] Leslie M. Marx and Jeroen M. Swinkels.",
                "Corrigendum, order independence for iterated weak dominance.",
                "Games and Economic Behavior, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston, and Jerry R. Green.",
                "Microeconomic Theory.",
                "Oxford University Press, 1995. [18] Roger Myerson.",
                "Game Theory: Analysis of Conflict.",
                "Harvard University Press, Cambridge, 1991. [19] Martin J Osborne and Ariel Rubinstein.",
                "A Course in Game Theory.",
                "MIT Press, 1994. [20] Christos Papadimitriou.",
                "Algorithms, games and the Internet.",
                "In STOC, pages 749-753, 2001. [21] Ryan Porter, Eugene Nudelman, and Yoav Shoham.",
                "Simple search methods for finding a Nash equilibrium.",
                "In AAAI, pages 664-669, 2004. 97"
            ],
            "original_annotated_samples": [
                "Complexity of (Iterated) Dominance∗ Vincent Conitzer Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA conitzer@cs.cmu.edu Tuomas Sandholm Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213, USA sandholm@cs.cmu.edu ABSTRACT We study various computational aspects of solving games using dominance and <br>iterated dominance</br>.",
                "We then move on to <br>iterated dominance</br>.",
                "Finally, we show that <br>iterated dominance</br> using pure strategies can require an exponential number of iterations in a Bayesian game (both with strict and weak dominance).",
                "The problem of computing solutions according to the perhaps more elementary solution concepts of dominance and <br>iterated dominance</br> has received much less attention. (After an early short paper on an easy case [11], the main computational study of these concepts has actually taken place in a paper in the game theory community [7].1 ) A strategy strictly dominates another strategy if it performs strictly 1 This is not to say that computer scientists have ignored 88 better against all vectors of opponent strategies, and weakly dominates it if it performs at least as well against all vectors of opponent strategies, and strictly better against at least one.",
                "In <br>iterated dominance</br>, the elimination proceeds in rounds, and becomes easier as more strategies are eliminated: in any given round, the dominating strategy no longer needs to perform better than or as well as the dominated strategy against opponent strategies that were eliminated in earlier rounds."
            ],
            "translated_annotated_samples": [
                "Estudiamos varios aspectos computacionales de la resolución de juegos utilizando la <br>dominancia y la dominancia iterada</br>.",
                "Luego pasamos a la <br>dominancia iterada</br>.",
                "Finalmente, demostramos que la <br>dominancia iterada</br> utilizando estrategias puras puede requerir un número exponencial de iteraciones en un juego bayesiano (tanto con dominancia estricta como débil).",
                "El problema de calcular soluciones de acuerdo con los conceptos de solución quizás más elementales de <br>dominancia y dominancia iterada</br> ha recibido mucha menos atención. (Después de un breve artículo temprano sobre un caso sencillo [11], el principal estudio computacional de estos conceptos ha tenido lugar en realidad en un artículo de la comunidad de teoría de juegos [7].) Una estrategia domina estrictamente a otra estrategia si tiene un rendimiento estrictamente mejor contra todos los vectores de estrategias del oponente, y la domina débilmente si tiene al menos el mismo rendimiento contra todos los vectores de estrategias del oponente, y estrictamente mejor contra al menos uno.",
                "En la <br>dominancia iterada</br>, la eliminación avanza en rondas y se vuelve más fácil a medida que se eliminan más estrategias: en cualquier ronda dada, la estrategia dominante ya no necesita desempeñarse mejor que o igual que la estrategia dominada contra las estrategias oponentes que fueron eliminadas en rondas anteriores."
            ],
            "translated_text": "Estudiamos varios aspectos computacionales de la resolución de juegos utilizando la <br>dominancia y la dominancia iterada</br>. Primero estudiamos tanto la dominancia estricta como la débil (no iterada), y demostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta se puede hacer en tiempo polinómico utilizando la resolución de un único programa lineal. Luego pasamos a la <br>dominancia iterada</br>. Mostramos que determinar si existe algún camino que elimine una estrategia dada es NP-completo con dominancia débil iterada. Esto nos permite también demostrar que determinar si existe un camino que conduce a una solución única es NP-completo. Ambos resultados se mantienen tanto con como sin dominancia de estrategias mixtas. (Una versión más débil del segundo resultado (solo sin dominancia de estrategias mixtas) ya se conocía [7].) La dominancia estricta iterada, por otro lado, es independiente de la ruta (tanto con como sin dominancia por estrategias mixtas) y, por lo tanto, se puede realizar en tiempo polinómico. Luego estudiamos qué sucede cuando la estrategia dominante puede asignar una probabilidad positiva solo a unas pocas estrategias puras. Primero, demostramos que encontrar la estrategia dominante con el tamaño de soporte mínimo es NP-completo (tanto para dominancia estricta como débil). Luego, demostramos que la dominancia estricta iterada se vuelve dependiente del camino cuando hay un límite en el tamaño del soporte de las estrategias dominantes, y que decidir si una estrategia dada puede ser eliminada por dominancia estricta iterada bajo esta restricción es NP-completo (incluso cuando el límite en el tamaño del soporte es 3). Finalmente, estudiamos juegos bayesianos. Mostramos que, a diferencia de los juegos en forma normal, decidir si una estrategia pura dada está dominada por otra estrategia pura en un juego bayesiano es NP-completo (tanto con dominancia estricta como débil); sin embargo, decidir si una estrategia está dominada por alguna estrategia mixta aún puede hacerse en tiempo polinómico con la resolución de un único programa lineal (tanto con dominancia estricta como débil). Finalmente, demostramos que la <br>dominancia iterada</br> utilizando estrategias puras puede requerir un número exponencial de iteraciones en un juego bayesiano (tanto con dominancia estricta como débil). Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN En sistemas multiagentes con agentes auto-interesados, la acción óptima para un agente puede depender de las acciones tomadas por otros agentes. En tales contextos, los agentes necesitan herramientas de teoría de juegos para decidir racionalmente sobre una acción. La teoría de juegos ofrece varios modelos formales de escenarios estratégicos, el más conocido de los cuales es un juego en forma normal (o matriz), que especifica una utilidad (pago) para cada agente en cada combinación de estrategias que los agentes eligen, así como conceptos de solución que, dados un juego, especifican qué resultados son razonables (bajo varias suposiciones de racionalidad y conocimiento común). Probablemente el concepto de solución más conocido (y ciertamente el más estudiado) es el equilibrio de Nash. Un equilibrio de Nash especifica una estrategia para cada jugador, de tal manera que ningún jugador tiene un incentivo para desviarse (unilateralmente) de la estrategia prescrita. Recientemente, numerosos artículos han estudiado el cálculo de equilibrios de Nash en diferentes contextos [9, 4, 12, 3, 13, 14], y la complejidad de construir un equilibrio de Nash en juegos en forma normal ha sido etiquetada como uno de los dos problemas abiertos más importantes en el límite de P hoy en día [20]. El problema de calcular soluciones de acuerdo con los conceptos de solución quizás más elementales de <br>dominancia y dominancia iterada</br> ha recibido mucha menos atención. (Después de un breve artículo temprano sobre un caso sencillo [11], el principal estudio computacional de estos conceptos ha tenido lugar en realidad en un artículo de la comunidad de teoría de juegos [7].) Una estrategia domina estrictamente a otra estrategia si tiene un rendimiento estrictamente mejor contra todos los vectores de estrategias del oponente, y la domina débilmente si tiene al menos el mismo rendimiento contra todos los vectores de estrategias del oponente, y estrictamente mejor contra al menos uno. La idea es que las estrategias dominadas pueden ser eliminadas de consideración. En la <br>dominancia iterada</br>, la eliminación avanza en rondas y se vuelve más fácil a medida que se eliminan más estrategias: en cualquier ronda dada, la estrategia dominante ya no necesita desempeñarse mejor que o igual que la estrategia dominada contra las estrategias oponentes que fueron eliminadas en rondas anteriores. ",
            "candidates": [],
            "error": [
                [
                    "dominancia y la dominancia iterada",
                    "dominancia iterada",
                    "dominancia iterada",
                    "dominancia y dominancia iterada",
                    "dominancia iterada"
                ]
            ]
        }
    }
}