{
    "id": "S2212667812000032",
    "original_text": "Aspect-oriented Programming (AOP) can well solve the cross-cutting concerns. Because of the different features of aspect, AOP requires new techniques for testing. First, this paper proposes a model to test aspect-oriented software. In order to support the testing model of the first three steps, we propose the algorithm of selecting aspect relevant test cases. Then, we develop a new tool to implement the theoretical of automating select test case. Finally, a case of the Bank Account System is studied to illustrate our testing approach.",
    "original_translation": "La Programación Orientada a Aspectos (AOP) puede resolver bien las preocupaciones transversales. Debido a las diferentes características del aspecto, la AOP requiere nuevas técnicas para realizar pruebas. En primer lugar, este documento propone un modelo para probar software orientado a aspectos. Para respaldar el modelo de pruebas de los primeros tres pasos, proponemos el algoritmo de selección de casos de prueba relevantes para el aspecto. Luego, desarrollamos una nueva herramienta para implementar la teoría de automatización de la selección de casos de prueba. Finalmente, se estudia un caso del Sistema de Cuentas Bancarias para ilustrar nuestro enfoque de pruebas.",
    "original_sentences": [
        "Aspect-oriented Programming (AOP) can well solve the cross-cutting concerns.",
        "Because of the different features of aspect, AOP requires new techniques for testing.",
        "First, this paper proposes a model to test aspect-oriented software.",
        "In order to support the testing model of the first three steps, we propose the algorithm of selecting aspect relevant test cases.",
        "Then, we develop a new tool to implement the theoretical of automating select test case.",
        "Finally, a case of the Bank Account System is studied to illustrate our testing approach."
    ],
    "translated_text_sentences": [
        "La Programación Orientada a Aspectos (AOP) puede resolver bien las preocupaciones transversales.",
        "Debido a las diferentes características del aspecto, la AOP requiere nuevas técnicas para realizar pruebas.",
        "En primer lugar, este documento propone un modelo para probar software orientado a aspectos.",
        "Para respaldar el modelo de pruebas de los primeros tres pasos, proponemos el algoritmo de selección de casos de prueba relevantes para el aspecto.",
        "Luego, desarrollamos una nueva herramienta para implementar la teoría de automatización de la selección de casos de prueba.",
        "Finalmente, se estudia un caso del Sistema de Cuentas Bancarias para ilustrar nuestro enfoque de pruebas."
    ],
    "error_count": 0,
    "keys": {
        "algorithm of selecting aspect relevant test cases": {
            "translated_key": "algoritmo de selección de casos de prueba relevantes para el aspecto",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Aspect-oriented Programming (AOP) can well solve the cross-cutting concerns.",
                "Because of the different features of aspect, AOP requires new techniques for testing.",
                "First, this paper proposes a model to test aspect-oriented software.",
                "In order to support the testing model of the first three steps, we propose the <br>algorithm of selecting aspect relevant test cases</br>.",
                "Then, we develop a new tool to implement the theoretical of automating select test case.",
                "Finally, a case of the Bank Account System is studied to illustrate our testing approach."
            ],
            "original_annotated_samples": [
                "In order to support the testing model of the first three steps, we propose the <br>algorithm of selecting aspect relevant test cases</br>."
            ],
            "translated_annotated_samples": [
                "Para respaldar el modelo de pruebas de los primeros tres pasos, proponemos el <br>algoritmo de selección de casos de prueba relevantes para el aspecto</br>."
            ],
            "translated_text": "La Programación Orientada a Aspectos (AOP) puede resolver bien las preocupaciones transversales. Debido a las diferentes características del aspecto, la AOP requiere nuevas técnicas para realizar pruebas. En primer lugar, este documento propone un modelo para probar software orientado a aspectos. Para respaldar el modelo de pruebas de los primeros tres pasos, proponemos el <br>algoritmo de selección de casos de prueba relevantes para el aspecto</br>. Luego, desarrollamos una nueva herramienta para implementar la teoría de automatización de la selección de casos de prueba. Finalmente, se estudia un caso del Sistema de Cuentas Bancarias para ilustrar nuestro enfoque de pruebas. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "AOP": {
            "translated_key": "AOP",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Aspect-oriented Programming (<br>AOP</br>) can well solve the cross-cutting concerns.",
                "Because of the different features of aspect, <br>AOP</br> requires new techniques for testing.",
                "First, this paper proposes a model to test aspect-oriented software.",
                "In order to support the testing model of the first three steps, we propose the algorithm of selecting aspect relevant test cases.",
                "Then, we develop a new tool to implement the theoretical of automating select test case.",
                "Finally, a case of the Bank Account System is studied to illustrate our testing approach."
            ],
            "original_annotated_samples": [
                "Aspect-oriented Programming (<br>AOP</br>) can well solve the cross-cutting concerns.",
                "Because of the different features of aspect, <br>AOP</br> requires new techniques for testing."
            ],
            "translated_annotated_samples": [
                "La <br>Programación Orientada a Aspectos</br> (AOP) puede resolver bien las preocupaciones transversales.",
                "Debido a las diferentes características del aspecto, la <br>AOP</br> requiere nuevas técnicas para realizar pruebas."
            ],
            "translated_text": "La <br>Programación Orientada a Aspectos</br> (AOP) puede resolver bien las preocupaciones transversales. Debido a las diferentes características del aspecto, la <br>AOP</br> requiere nuevas técnicas para realizar pruebas. En primer lugar, este documento propone un modelo para probar software orientado a aspectos. Para respaldar el modelo de pruebas de los primeros tres pasos, proponemos el algoritmo de selección de casos de prueba relevantes para el aspecto. Luego, desarrollamos una nueva herramienta para implementar la teoría de automatización de la selección de casos de prueba. Finalmente, se estudia un caso del Sistema de Cuentas Bancarias para ilustrar nuestro enfoque de pruebas. ",
            "candidates": [],
            "error": [
                [
                    "Programación Orientada a Aspectos",
                    "AOP"
                ]
            ]
        },
        "Aspect-oriented Programming": {
            "translated_key": "Programación Orientada a Aspectos",
            "is_in_text": true,
            "original_annotated_sentences": [
                "<br>Aspect-oriented Programming</br> (AOP) can well solve the cross-cutting concerns.",
                "Because of the different features of aspect, AOP requires new techniques for testing.",
                "First, this paper proposes a model to test aspect-oriented software.",
                "In order to support the testing model of the first three steps, we propose the algorithm of selecting aspect relevant test cases.",
                "Then, we develop a new tool to implement the theoretical of automating select test case.",
                "Finally, a case of the Bank Account System is studied to illustrate our testing approach."
            ],
            "original_annotated_samples": [
                "<br>Aspect-oriented Programming</br> (AOP) can well solve the cross-cutting concerns."
            ],
            "translated_annotated_samples": [
                "La <br>Programación Orientada a Aspectos</br> (AOP) puede resolver bien las preocupaciones transversales."
            ],
            "translated_text": "La <br>Programación Orientada a Aspectos</br> (AOP) puede resolver bien las preocupaciones transversales. Debido a las diferentes características del aspecto, la AOP requiere nuevas técnicas para realizar pruebas. En primer lugar, este documento propone un modelo para probar software orientado a aspectos. Para respaldar el modelo de pruebas de los primeros tres pasos, proponemos el algoritmo de selección de casos de prueba relevantes para el aspecto. Luego, desarrollamos una nueva herramienta para implementar la teoría de automatización de la selección de casos de prueba. Finalmente, se estudia un caso del Sistema de Cuentas Bancarias para ilustrar nuestro enfoque de pruebas. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "automating select test case": {
            "translated_key": "automatización de la selección de casos de prueba",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Aspect-oriented Programming (AOP) can well solve the cross-cutting concerns.",
                "Because of the different features of aspect, AOP requires new techniques for testing.",
                "First, this paper proposes a model to test aspect-oriented software.",
                "In order to support the testing model of the first three steps, we propose the algorithm of selecting aspect relevant test cases.",
                "Then, we develop a new tool to implement the theoretical of <br>automating select test case</br>.",
                "Finally, a case of the Bank Account System is studied to illustrate our testing approach."
            ],
            "original_annotated_samples": [
                "Then, we develop a new tool to implement the theoretical of <br>automating select test case</br>."
            ],
            "translated_annotated_samples": [
                "Luego, desarrollamos una nueva herramienta para implementar la teoría de <br>automatización de la selección de casos de prueba</br>."
            ],
            "translated_text": "La Programación Orientada a Aspectos (AOP) puede resolver bien las preocupaciones transversales. Debido a las diferentes características del aspecto, la AOP requiere nuevas técnicas para realizar pruebas. En primer lugar, este documento propone un modelo para probar software orientado a aspectos. Para respaldar el modelo de pruebas de los primeros tres pasos, proponemos el algoritmo de selección de casos de prueba relevantes para el aspecto. Luego, desarrollamos una nueva herramienta para implementar la teoría de <br>automatización de la selección de casos de prueba</br>. Finalmente, se estudia un caso del Sistema de Cuentas Bancarias para ilustrar nuestro enfoque de pruebas. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "Bank Account System": {
            "translated_key": "Sistema de Cuentas Bancarias",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Aspect-oriented Programming (AOP) can well solve the cross-cutting concerns.",
                "Because of the different features of aspect, AOP requires new techniques for testing.",
                "First, this paper proposes a model to test aspect-oriented software.",
                "In order to support the testing model of the first three steps, we propose the algorithm of selecting aspect relevant test cases.",
                "Then, we develop a new tool to implement the theoretical of automating select test case.",
                "Finally, a case of the <br>Bank Account System</br> is studied to illustrate our testing approach."
            ],
            "original_annotated_samples": [
                "Finally, a case of the <br>Bank Account System</br> is studied to illustrate our testing approach."
            ],
            "translated_annotated_samples": [
                "Finalmente, se estudia un caso del <br>Sistema de Cuentas Bancarias</br> para ilustrar nuestro enfoque de pruebas."
            ],
            "translated_text": "La Programación Orientada a Aspectos (AOP) puede resolver bien las preocupaciones transversales. Debido a las diferentes características del aspecto, la AOP requiere nuevas técnicas para realizar pruebas. En primer lugar, este documento propone un modelo para probar software orientado a aspectos. Para respaldar el modelo de pruebas de los primeros tres pasos, proponemos el algoritmo de selección de casos de prueba relevantes para el aspecto. Luego, desarrollamos una nueva herramienta para implementar la teoría de automatización de la selección de casos de prueba. Finalmente, se estudia un caso del <br>Sistema de Cuentas Bancarias</br> para ilustrar nuestro enfoque de pruebas. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "develop a new tool to implement the theoretical of automating select test case": {
            "translated_key": "desarrollar una nueva herramienta para implementar la teoría de automatizar el caso de prueba seleccionado",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Aspect-oriented Programming (AOP) can well solve the cross-cutting concerns.",
                "Because of the different features of aspect, AOP requires new techniques for testing.",
                "First, this paper proposes a model to test aspect-oriented software.",
                "In order to support the testing model of the first three steps, we propose the algorithm of selecting aspect relevant test cases.",
                "Then, we <br>develop a new tool to implement the theoretical of automating select test case</br>.",
                "Finally, a case of the Bank Account System is studied to illustrate our testing approach."
            ],
            "original_annotated_samples": [
                "Then, we <br>develop a new tool to implement the theoretical of automating select test case</br>."
            ],
            "translated_annotated_samples": [
                "Luego, desarrollamos una nueva herramienta para implementar la teoría de automatización de la selección de casos de prueba."
            ],
            "translated_text": "La Programación Orientada a Aspectos (AOP) puede resolver bien las preocupaciones transversales. Debido a las diferentes características del aspecto, la AOP requiere nuevas técnicas para realizar pruebas. En primer lugar, este documento propone un modelo para probar software orientado a aspectos. Para respaldar el modelo de pruebas de los primeros tres pasos, proponemos el algoritmo de selección de casos de prueba relevantes para el aspecto. Luego, desarrollamos una nueva herramienta para implementar la teoría de automatización de la selección de casos de prueba. Finalmente, se estudia un caso del Sistema de Cuentas Bancarias para ilustrar nuestro enfoque de pruebas. ",
            "candidates": [],
            "error": [
                []
            ]
        },
        "model to test aspect-oriented software": {
            "translated_key": "modelo para probar software orientado a aspectos",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Aspect-oriented Programming (AOP) can well solve the cross-cutting concerns.",
                "Because of the different features of aspect, AOP requires new techniques for testing.",
                "First, this paper proposes a <br>model to test aspect-oriented software</br>.",
                "In order to support the testing model of the first three steps, we propose the algorithm of selecting aspect relevant test cases.",
                "Then, we develop a new tool to implement the theoretical of automating select test case.",
                "Finally, a case of the Bank Account System is studied to illustrate our testing approach."
            ],
            "original_annotated_samples": [
                "First, this paper proposes a <br>model to test aspect-oriented software</br>."
            ],
            "translated_annotated_samples": [
                "En primer lugar, este documento propone un <br>modelo para probar software orientado a aspectos</br>."
            ],
            "translated_text": "La Programación Orientada a Aspectos (AOP) puede resolver bien las preocupaciones transversales. Debido a las diferentes características del aspecto, la AOP requiere nuevas técnicas para realizar pruebas. En primer lugar, este documento propone un <br>modelo para probar software orientado a aspectos</br>. Para respaldar el modelo de pruebas de los primeros tres pasos, proponemos el algoritmo de selección de casos de prueba relevantes para el aspecto. Luego, desarrollamos una nueva herramienta para implementar la teoría de automatización de la selección de casos de prueba. Finalmente, se estudia un caso del Sistema de Cuentas Bancarias para ilustrar nuestro enfoque de pruebas. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "solve the cross-cutting concerns": {
            "translated_key": "preocupaciones transversales",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Aspect-oriented Programming (AOP) can well <br>solve the cross-cutting concerns</br>.",
                "Because of the different features of aspect, AOP requires new techniques for testing.",
                "First, this paper proposes a model to test aspect-oriented software.",
                "In order to support the testing model of the first three steps, we propose the algorithm of selecting aspect relevant test cases.",
                "Then, we develop a new tool to implement the theoretical of automating select test case.",
                "Finally, a case of the Bank Account System is studied to illustrate our testing approach."
            ],
            "original_annotated_samples": [
                "Aspect-oriented Programming (AOP) can well <br>solve the cross-cutting concerns</br>."
            ],
            "translated_annotated_samples": [
                "La Programación Orientada a Aspectos (AOP) puede resolver bien las <br>preocupaciones transversales</br>."
            ],
            "translated_text": "La Programación Orientada a Aspectos (AOP) puede resolver bien las <br>preocupaciones transversales</br>. Debido a las diferentes características del aspecto, la AOP requiere nuevas técnicas para realizar pruebas. En primer lugar, este documento propone un modelo para probar software orientado a aspectos. Para respaldar el modelo de pruebas de los primeros tres pasos, proponemos el algoritmo de selección de casos de prueba relevantes para el aspecto. Luego, desarrollamos una nueva herramienta para implementar la teoría de automatización de la selección de casos de prueba. Finalmente, se estudia un caso del Sistema de Cuentas Bancarias para ilustrar nuestro enfoque de pruebas. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "testing model": {
            "translated_key": "modelo de pruebas",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Aspect-oriented Programming (AOP) can well solve the cross-cutting concerns.",
                "Because of the different features of aspect, AOP requires new techniques for testing.",
                "First, this paper proposes a model to test aspect-oriented software.",
                "In order to support the <br>testing model</br> of the first three steps, we propose the algorithm of selecting aspect relevant test cases.",
                "Then, we develop a new tool to implement the theoretical of automating select test case.",
                "Finally, a case of the Bank Account System is studied to illustrate our testing approach."
            ],
            "original_annotated_samples": [
                "In order to support the <br>testing model</br> of the first three steps, we propose the algorithm of selecting aspect relevant test cases."
            ],
            "translated_annotated_samples": [
                "Para respaldar el <br>modelo de pruebas</br> de los primeros tres pasos, proponemos el algoritmo de selección de casos de prueba relevantes para el aspecto."
            ],
            "translated_text": "La Programación Orientada a Aspectos (AOP) puede resolver bien las preocupaciones transversales. Debido a las diferentes características del aspecto, la AOP requiere nuevas técnicas para realizar pruebas. En primer lugar, este documento propone un modelo para probar software orientado a aspectos. Para respaldar el <br>modelo de pruebas</br> de los primeros tres pasos, proponemos el algoritmo de selección de casos de prueba relevantes para el aspecto. Luego, desarrollamos una nueva herramienta para implementar la teoría de automatización de la selección de casos de prueba. Finalmente, se estudia un caso del Sistema de Cuentas Bancarias para ilustrar nuestro enfoque de pruebas. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        }
    }
}