{
    "id": "C-31",
    "original_text": "Apocrita: A Distributed Peer-to-Peer File Sharing System for Intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Distributed Computing and Wireless & Telecommunications Technology University of Guelph-Humber Toronto, ON, M9W 5L7 Canada {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca ABSTRACT Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all member of the organization. This access may be needed for editing or simply viewing a document. In some cases these documents are shared between authors, via email, to be edited. This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document. There may even be multiple different documents in the process of being edited. The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine. Another problem arises when a document is made available on a users machine and that user is offline, in which case the document is no longer accessible. In this paper we present Apocrita, a revolutionary distributed P2P file sharing system for Intranets. Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Distributed applications. General Terms Design, Experimentation, Performance. 1. INTRODUCTION The Peer-to-Peer (P2P) computing paradigm is becoming a completely new form of mutual resource sharing over the Internet. With the increasingly common place broadband Internet access, P2P technology has finally become a viable way to share documents and media files. There are already programs on the market that enable P2P file sharing. These programs enable millions of users to share files among themselves. While the utilization of P2P clients is already a gigantic step forward compared to downloading files off websites, using such programs are not without their problems. The downloaded files still require a lot of manual management by the user. The user still needs to put the files in the proper directory, manage files with multiple versions, delete the files when they are no longer wanted. We strive to make the process of sharing documents within an Intranet easier. Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all members of the organization. This access may be needed for editing or simply viewing a document. In some cases these documents are sent between authors, via email, to be edited. This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document. There may even be multiple different documents in the process of being edited. The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine. Furthermore, some organizations do not have a file sharing server or the necessary network infrastructure to enable one. In this paper we present Apocrita, which is a cost-effective distributed P2P file sharing system for such organizations. The rest of this paper is organized as follows. In section 2, we present Apocrita. The distributed indexing mechanism and protocol are presented in Section 3. Section 4 presents the peer-topeer distribution model. A proof of concept prototype is presented in Section 5, and performance evaluations are discussed in Section 6. Related work is presented is Section 7, and finally conclusions and future work are discussed in Section 8. 2. APOCRITA Apocrita is a distributed peer-to-peer file sharing system, and has been designed to make finding documents easier in an Intranet environment. Currently, it is possible for documents to be located on a users machine or on a remote machine. It is even possible that different revisions could reside on each node on the Intranet. This means there must be a manual process to maintain document versions. Apocrita solves this problem using two approaches. First, due to the inherent nature of Apocrita, the document will only reside on a single logical location. Second, Apocrita provides a method of reverting to previous document versions. Apocrita Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. ACMSE07, MARCH 23-24, 2007, WINSTON-SALEM, NC, USA. COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 will also distribute documents across multiple machines to ensure high availability of important documents. For example, if a machine contains an important document and the machine is currently inaccessible, the system is capable of maintaining availability of the document through this distribution mechanism. It provides a simple interface for searching and accessing files that may exist either locally or remotely. The distributed nature of the documents is transparent to the user. Apocrita supports a decentralized network model where the peers use a discovery protocol to determine peers. Apocrita is intended for network users on an Intranet. The main focus is organizations that may not have a network large enough to require a file server and supporting infrastructure. It eliminates the need for documents to be manually shared between users while being edited and reduces the possibility of conflicting versions being distributed. The system also provides some redundancy and in the event of a single machine failure, no important documents will be lost. It is operating system independent, and easy to access through a web browser or through a standalone application. To decrease the time required for indexing a large number of documents, the indexing process is distributed across available idle nodes. Local and remote files should be easily accessible through a virtual mountable file system, providing transparency for users. 3. DISTRIBUTED INDEXING Apocrita uses a distributed index for all the documents that are available on the Intranet. Each node will contain part of the full index, and be aware of what part of the index each other node has. A node will be able to contact each node that contains a unique portion of the index. In addition, each node has a separate local index of its own documents. But as discussed later, in the current implementation, each node has a copy of the entire index. Indexing of the documents is distributed. Therefore, if a node is in the process of indexing many documents, it will break up the work over the nodes. Once a nodes local index is updated with the new documents, the distributed index will then be updated. The current distributed indexing system consists of three separate modules: NodeController, FileSender, and NodeIndexer. The responsibility of each module is discussed later in this section. 3.1 Indexing Protocol The protocol we have designed for the distributed indexing is depicted in Figure 1. Figure 1. Apocrita distributed indexing protocol. IDLE QUERY: The IDLE QUERY is sent out from the initiating node to determine which other nodes may be able to help with the overall indexing process. There are no parameters sent with the command. The receiving node will respond with either a BUSY or IDLE command. If the IDLE command is received, the initiating node will add the responding node to a list of available distributed indexing helpers. In the case of a BUSY command being received, the responding node is ignored. BUSY: Once a node received an IDL QUERY, it will determine whether it can be considered a candidate for distributed indexing. This determination is based on the overall CPU usage of the node. If the node is using most of its CPU for other processes, the node will respond to the IDLE QUERY with a BUSY command. IDLE: As with the case of the BUSY response, the node receiving the IDLE QUERY will determine its eligibility for distributed indexing. To be considered a candidate for distributed indexing, the overall CPU usage must be at a minimum to all for dedicated indexing of the distributed documents. If this is the case, the node will respond with an IDLE command. INCOMING FILE: Once the initiating node assembles a set of idle nodes to assist with the distributed indexing, it will divide the documents to be sent to the nodes. To do this, it sends an INCOMING FILE message, which contains the name of the file as well as the size in bytes. After the INCOMING FILE command has been sent, the initiating node will begin to stream the file to the other node. The initiating node will loop through the files that are to be sent to the other node; each file stream being preceded by the INCOMING FILE command with the appropriate parameters. INDEX FILE: Once the indexing node has completed the indexing process of the set of files, it must send the resultant index back to the initiating node. The index is comprised of multiple files, which exist on the file system of the indexing node. As with the INCOMING FILE command, the indexing node streams each index file after sending an INDEX FILE command. The INDEX FILE command has two parameters: the first being the name of the index, and the second is the size of the file in bytes. SEND COMPLETE: When sending the sets of files for both the index and the files to be indexed, the node must notify the corresponding node when the process is complete. Once the initiating node is finished sending the set of documents to be indexed, it will then send a SEND COMPLETE command indicating to the indexing node that there are no more files and the node can proceed with indexing the files. In the case of the initiating node sending the index files, the indexing node will complete the transfer with the SEND COMPLETE command indicating to the initiating node that there are no more index files to be sent and the initiating node can then assemble those index files into the main index. The NodeController is responsible for setting up connections with nodes in the idle state to distribute the indexing process. Using JXTA [5], the node controller will obtain a set of nodes. This set of nodes is iterated and each one is sent the IDLE QUERY command. The nodes that respond with idle are then collected. The set of idle nodes includes the node initiating the distributed indexing process, referred to as the local node. Once the collection of idle nodes is obtained, the node updates the set of controllers and evenly divides the set of documents that are to be indexed. For example, if there are 100 documents and 10 nodes (including the local node) then each node will have 10 documents to index. For each indexing node an instance of the FileSender object is created. The FileSender is aware of the set of documents that node is responsible for. Once a FileSender object has been created for each node, the NodeController waits for each FileSender to complete. When the FileSender objects have completed the NodeController will take the resultant indexes from 175 each node and pass them to an instance of the IndexCompiler, which maintains the index and the list of FileSenders. Once the IndexCompiler has completed it will return to the idle state and activate the directory scanner to monitor the locally owned set of documents for changes that may require reindexing. The NodeIndexer is responsible for receiving documents sent to it by the initiating node and then indexing them using the Lucene engine [7]. Once the indexing is complete the resulting index is streamed back to the initiating node as well as compiled in the indexer nodes own local index. Before initiating the indexing process it must be sent an IDLE QUERY message. This is the first command that sets off the indexing process. The indexer node will determine whether it is considered idle based on the current CPU usage. As outlined in the protocol section if the node is not being used and has a low overall CPU usage percentage it will return IDLE to the IDLE QUERY command. If the indexer nodes CPU usage is above 50% for a specified amount of time it is then considered to be busy and will respond to the IDLE QUERY command with BUSY. If a node is determined busy it returns to its listening state waiting for another IDLE QUERY from another initiating node. If the node is determined to be idle it will enter the state where it will receive files from the initiating node that it is responsible for indexing. Once all of the files are received by the initiating node, indicated by a SEND COMPLETE message, it starts an instance of the Lucene indexing engine. The files are stored in a temporary directory separate from the nodes local documents that it is responsible for maintaining an index of. The Lucene index writer then indexes all of the transferred files. The index is stored on the drive within a temporary directory separate from the current index. After the indexing of the files completes the indexer node enters the state where the index files are sent back to the initiating node. The indexer node loops through all of the files created by Lucenes IndexWriter and streams them to the initiating node. Once these files are sent back that index is then merged into the indexer nodes own full index of the existing files. It then enters the idle state where it will then listen for any other nodes that required distributing the indexing process. The FileSender object is the initiating node equivalent of the indexer node. It initiates the communication between the initiating node and the node that will assist in the distributed indexing. The initiating node runs many instances of the FileSender node one for each other node it has determined to be idle. Upon instantiation of the FileSender it is passed the node that it is responsible for contacting and the set of files that must be sent. The FileSenders first job is to send the files that are to be indexed by the other idle node. The files are streamed one at a time to the other node. It sends each file using the INCOMING FILE command. With that command it sends the name of the file being sent and the size in bytes. Once all files have been sent the FileSender sends the SEND COMPLETE command. The FileSender creates an instance of Lucenes IndexWriter and prepares to create the index in a temporary directory on the file system. The FileSender will begin to receive the files that are to be saved within the index. It receives an INDEX FILE command with the name of the files and the size in bytes. This file is then streamed into the temporary index directory on the FileSender node. After the transfer of the index files has been completed the FileSender notifies the instance of the index compiler that it is ready to combine the index. Each instance of the FileSender has its own unique section of temporary space to store the index that has been transferred back from the indexing node. When notifying the IndexCompiler it will also pass the location of the particular FileSenders directory location of that index. 4. PEER-TO-PEER DISTRIBUTION Apocrita uses a peer-to-peer distribution model in order to distribute files. Files are distributed solely from a serving node to a client node without regard for the availability of file pieces from other clients in the network. This means that the file transfers will be fast and efficient and should not severely affect the usability of serving nodes from the point of view of a local user. The JXTA framework [5] is used in order to implement peer-to-peer functionality. This has been decided due to the extremely shorttimeline of the project which allows us to take advantage of over five years of testing and development and support from many large organizations employing JXTA in their own products. We are not concerned with any potential quality problems because JXTA is considered to be the most mature and stable peer-to-peer framework available. Using JXTA terminology, there are three types of peers used in node classification. Edge peers are typically low-bandwidth, non-dedicated nodes. Due to these characteristics, edge peers are not used with Apocrita. Relay peers are typically higher-bandwidth, dedicated nodes. This is the classification of all nodes in the Apocrita network, and, as such, are the default classification used. Rendezvous peers are used to coordinate message passing between nodes in the Apocrita network. This means that a minimum of one rendezvous peer per subnet is required. 4.1 Peer Discovery The Apocrita server subsystem uses the JXTA Peer Discovery Protocol (PDP) in order to find participating peers within the network as shown in Figure 2. Figure 2. Apocrita peer discovery process. 176 The PDP listens for peer advertisements from other nodes in the Apocrita swarm. If a peer advertisement is detected, the server will attempt to join the peer group and start actively contributing to the network. If no peers are found by the discovery service, the server will create a new peer group and start advertising this peer group. This new peer group will be periodically advertised on the network; any new peers joining the network will attach to this peer group. A distinct advantage of using the JXTA PDP is that Apocrita does not have to be sensitive to particular networking nuances such as Maximum Transmission Unit (MTU). In addition, Apocrita does not have to support one-to-many packet delivery methods such as multicast and instead can rely on JXTA for this support. 4.2 Index Query Operation All nodes in the Apocrita swarm have a complete and up-to-date copy of the network index stored locally. This makes querying the index for search results trivial. Unlike the Gnutella protocol, a query does not have to propagate throughout the network. This also means that the time to return query results is very fast - much faster than protocols that rely on nodes in the network to pass the query throughout the network and then wait for results. This is demonstrated in Figure 3. Figure 3. Apocrita query operation. Each document in the swarm has a unique document identification number (ID). A node will query the index and a result will be returned with both the document ID number as well as a list of peers with a copy of the matched document ID. It is then the responsibility of the searching peer to contact the peers in the list to negotiate file transfer between the client and server. 5. PROTOTYPE IMPLEMENTATION Apocrita uses the Lucene framework [7], which is a project under development by the Apache Software Foundation. Apache Lucene is a high-performance, full-featured text search engine library written entirely in Java. In the current implementation, Apocrita is only capable of indexing plain text documents. Apocrita uses the JXTA framework [5] as a peer-to-peer transport library between nodes. JXTA is used to pass both messages and files between nodes in the search network. By using JXTA, Apocrita takes advantage of a reliable, and proven peer-to-peer transport mechanism. It uses the pipe facility in order to pass messages and files between nodes. The pipe facility provides many different types of pipe advertisements. This includes an unsecured unicast pipe, a secured unicast pipe, and a propagated unsecured pipe. Message passing is used to pass status messages between nodes in order to aid in indexing, searching, and retrieval. For example, a node attempting to find an idle node to participate in indexing will query nodes via the message facility. Idle nodes will reply with a status message to indicate they are available to start indexing. File passing is used within Apocrita for file transfer. After a file has been searched for and located within the peer group, a JXTA socket will be opened and file transfer will take place. A JXTA socket is similar to a standard Java socket, however a JXTA socket uses JXTA pipes in underlying network transport. File passing uses an unsecured unicast pipe in order to transfer data. File passing is also used within Apocrita for index transfer. Index transfer works exactly like a file transfer. In fact, the index transfer actually passes the index as a file. However, there is one key difference between file transfer and index transfer. In the case of file transfer, a socket is created between only two nodes. In the case of index transfer, a socket must be created between all nodes in the network in order to pass the index, which allows for all nodes to have a full and complete index of the entire network. In order to facilitate this transfer efficiently, index transfer will use an unsecured propagated pipe to communicate with all nodes in the Apocrita network. 6. PERFORMANCE EVALUATION It is difficult to objectively benchmark the results obtained through Apocrita because there is no other system currently available with the same goals as Apocrita. We have, however, evaluated the performance of the critical sections of the system. The critical sections were determined to be the processes that are the most time intensive. The evaluation was completed on standard lab computers on a 100Mb/s Ethernet LAN; the machines run Windows XP with a Pentium 4 CPU running at 2.4GHz with 512 MB of RAM. The indexing time has been run against both: the Time Magazine collection [8], which contains 432 documents and 83 queries and their most relevant results, and the NPL collection [8] that has a total of 11,429 documents and 93 queries with expected results. Each document ranges in size between 4KB and 8KB. As Figure 4 demonstrates, the number of nodes involved in the indexing process affects the time taken to complete the indexing processsometimes even drastically. Figure 4. Node vs. index time. The difference in going from one indexing node to two indexing nodes is the most drastic and equates to an indexing time 37% faster than a single indexing node. The different between two 177 indexing nodes and three indexing nodes is still significant and represents a 16% faster time than two indexing nodes. As the number of indexing nodes increases the results are less dramatic. This can be attributed to the time overhead associated with having many nodes perform indexing. The time needed to communicate with a node is constant, so as the number of nodes increases, this constant becomes more prevalent. Also, the complexity of joining the indexing results is a complex operation and is complicated further as the number of indexing nodes increases. Socket performance is also a very important part of Apocrita. Benchmarks were performed using a 65MB file on a system with both the client and server running locally. This was done to isolate possible network issues. Although less drastic, similar results were shown when the client and server run on independent hardware. In order to mitigate possible unexpected errors, each test was run 10 times. Figure 5. Java sockets vs. JXTA sockets. As Figure 5 demonstrates, the performance of JXTA sockets is abysmal as compared to the performance of standard Java sockets. The minimum transfer rate obtained using Java sockets is 81,945KB/s while the minimum transfer rater obtained using JXTA sockets is much lower at 3, 805KB/s. The maximum transfer rater obtain using Java sockets is 97,412KB/s while the maximum transfer rate obtained using JXTA sockets is 5,530KB/s. Finally, the average transfer rate using Java sockets is 87,540KB/s while the average transfer rate using JXTA sockets is 4,293KB/s. The major problem found in these benchmarks is that the underlying network transport mechanism does not perform as quickly or efficiently as expected. In order to garner a performance increase, the JXTA framework needs to be substituted with a more traditional approach. The indexing time is also a bottleneck and will need to be improved for the overall quality of Apocrita to be improved. 7. RELATED WORK Several decentralized P2P systems [1, 2, 3] exist today that Apocrita features some of their functionality. However, Apocrita also has unique novel searching and indexing features that make this system unique. For example, Majestic-12 [4] is a distributed search and indexing project designed for searching the Internet. Each user would install a client, which is responsible for indexing a portion of the web. A central area for querying the index is available on the Majestic-12 web page. The index itself is not distributed, only the act of indexing is distributed. The distributed indexing aspect of this project most closely relates Apocrita goals. YaCy [6] is a peer-to-peer web search application. YaCy consists of a web crawler, an indexer, a built-in database engine, and a p2p index exchange protocol. YaCy is designed to maintain a distributed index of the Internet. It used a distributed hash table (DHT) to maintain the index. The local node is used to query but all results that are returned are accessible on the Internet. YaCy used many peers and DHT to maintain a distributed index. Apocrita will also use a distributed index in future implementations and may benefit from using an implementation of a DHT. YaCy however, is designed as a web search engine and, as such solves a much different problem than Apocrita. 8. CONCLUSIONS AND FUTURE WORK We presented Apocrita, a distributed P2P searching and indexing system intended for network users on an Intranet. It can help organizations with no network file server or necessary network infrastructure to share documents. It eliminates the need for documents to be manually shared among users while being edited and reduce the possibility of conflicting versions being distributed. A proof of concept prototype has been constructed, but the results from measuring the network transport mechanism and the indexing time were not as impressive as initially envisioned. Despite these shortcomings, the experience gained from the design and implementation of Apocrita has given us more insight into building challenging distributed systems. For future work, Apocrita will have a smart content distribution model in which a single instance of a file can intelligently and transparently replicate throughout the network to ensure a copy of every important file will always be available regardless of the availability of specific nodes in the network. In addition, we plan to integrate a revision control system into the content distribution portion of Apocrita so that users could have the ability to update an existing file that they found and have the old revision maintained and the new revision propagated. Finally, the current implementation has some overhead and redundancy due to the fact that the entire index is maintained on each individual node, we plan to design a distributed index. 9. REFERENCES [1] Rodrigues, R., Liskov, B., Shrira, L.: The Design of a Robust Peer-to-Peer System. Available online: http://www.pmg.lcs.mit.edu/~rodrigo/ew02-robust.pdf. [2] Chawathe, Y., Ratnasamy, S., Breslau, L., Lanham, N., and Chenker, S.: Making Gnutella-like P2P Systems Scalable. In Proceedings of SIGCOMM03, Karlsruhe, Germany. [3] Harvest: A Distributed Search System: http://harvest.sourceforge.net. [4] Majestic-12: Distributed Search Engine: http://www.majestic12.co.uk. [5] JXTA: http://www.jxta.org. [6] YaCy: Distributed P2P-based Web Indexing: http://www.yacy.net/yacy. [7] Lucene Search Engine Library: http://lucene.apache.org. [8] Test Collections (Time Magazine and NPL): www.dcs.gla.ac.uk/idom/ir_resources/test_collections. 178",
    "original_translation": "Apocrita: Un sistema de intercambio de archivos distribuido de igual a igual para intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Computación Distribuida y Tecnología Inalámbrica y de Telecomunicaciones Universidad de Guelph-Humber Toronto, ON, M9W 5L7 Canadá {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca RESUMEN Muchas organizaciones necesitan redactar documentos para diversos fines, y es posible que estos documentos deban ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un documento. En algunos casos, estos documentos son compartidos entre autores, a través de correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento. Incluso puede haber varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario. Otro problema surge cuando un documento está disponible en la máquina de un usuario y ese usuario está desconectado, en cuyo caso el documento ya no es accesible. En este artículo presentamos Apocrita, un revolucionario sistema distribuido de intercambio de archivos P2P para intranets. Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos - Aplicaciones Distribuidas. Términos generales Diseño, Experimentación, Rendimiento. 1. INTRODUCCIÓN El paradigma de computación Peer-to-Peer (P2P) se está convirtiendo en una forma completamente nueva de compartir recursos mutuos a través de Internet. Con el acceso cada vez más común a Internet de banda ancha, la tecnología P2P finalmente se ha convertido en una forma viable de compartir documentos y archivos multimedia. Ya existen programas en el mercado que permiten compartir archivos P2P. Estos programas permiten a millones de usuarios compartir archivos entre ellos. Si bien la utilización de clientes P2P ya es un gran avance en comparación con descargar archivos de sitios web, el uso de dichos programas no está exento de problemas. Los archivos descargados todavía requieren mucho manejo manual por parte del usuario. El usuario todavía necesita colocar los archivos en el directorio adecuado, gestionar archivos con múltiples versiones, eliminar los archivos cuando ya no se deseen. Nos esforzamos por hacer que el proceso de compartir documentos dentro de una Intranet sea más fácil. Muchas organizaciones están obligadas a redactar documentos para diversos fines, y dichos documentos pueden necesitar ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un documento. En algunos casos, estos documentos son enviados entre autores, por correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o que se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento. Puede haber incluso varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario. Además, algunas organizaciones no cuentan con un servidor de intercambio de archivos o la infraestructura de red necesaria para habilitar uno. En este artículo presentamos Apocrita, que es un sistema de intercambio de archivos P2P distribuido y rentable para dichas organizaciones. El resto de este documento está organizado de la siguiente manera. En la sección 2, presentamos Apocrita. El mecanismo de indexación distribuida y el protocolo se presentan en la Sección 3. La sección 4 presenta el modelo de distribución peer-to-peer. Se presenta un prototipo de prueba de concepto en la Sección 5, y las evaluaciones de rendimiento se discuten en la Sección 6. El trabajo relacionado se presenta en la Sección 7, y finalmente las conclusiones y el trabajo futuro se discuten en la Sección 8. Apocrita es un sistema de intercambio de archivos entre pares distribuido, y ha sido diseñado para facilitar la búsqueda de documentos en un entorno de Intranet. Actualmente, es posible que los documentos se encuentren en la máquina de un usuario o en una máquina remota. Es incluso posible que diferentes revisiones puedan residir en cada nodo de la Intranet. Esto significa que debe haber un proceso manual para mantener las versiones de los documentos. Apocrita resuelve este problema utilizando dos enfoques. Primero, debido a la naturaleza inherente de Apocrita, el documento solo residirá en una ubicación lógica única. En segundo lugar, Apocrita proporciona un método para revertir a versiones anteriores de documentos. Se concede el permiso de hacer copias digitales o impresas de todo o parte de este trabajo para uso personal o en el aula sin cargo alguno, siempre y cuando las copias no se realicen ni distribuyan con fines de lucro o ventaja comercial, y que las copias lleven este aviso y la cita completa en la primera página. Para copiar de otra manera, o republicar, publicar en servidores o redistribuir en listas, se requiere permiso específico previo y/o un pago. ACMSE07, 23-24 DE MARZO DE 2007, WINSTON-SALEM, NC, EE. UU. COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 también distribuirá documentos en múltiples máquinas para garantizar la alta disponibilidad de documentos importantes. Por ejemplo, si una máquina contiene un documento importante y actualmente no es accesible, el sistema es capaz de mantener la disponibilidad del documento a través de este mecanismo de distribución. Proporciona una interfaz sencilla para buscar y acceder a archivos que pueden existir tanto local como remotamente. La naturaleza distribuida de los documentos es transparente para el usuario. Apocrita apoya un modelo de red descentralizada en el que los pares utilizan un protocolo de descubrimiento para determinar los pares. Apocrita está destinado para usuarios de red en una Intranet. El enfoque principal son las organizaciones que pueden no tener una red lo suficientemente grande como para necesitar un servidor de archivos y la infraestructura de soporte. Elimina la necesidad de que los documentos sean compartidos manualmente entre usuarios mientras se editan y reduce la posibilidad de que se distribuyan versiones conflictivas. El sistema también proporciona cierta redundancia y en caso de fallo de una máquina, no se perderán documentos importantes. Es independiente del sistema operativo y fácil de acceder a través de un navegador web o mediante una aplicación independiente. Para disminuir el tiempo requerido para indexar una gran cantidad de documentos, el proceso de indexación se distribuye entre los nodos inactivos disponibles. Los archivos locales y remotos deben ser fácilmente accesibles a través de un sistema de archivos virtual montable, proporcionando transparencia para los usuarios. Apocrita utiliza un índice distribuido para todos los documentos disponibles en la intranet. Cada nodo contendrá una parte del índice completo y estará al tanto de qué parte del índice tiene cada otro nodo. Un nodo podrá contactar a cada nodo que contenga una porción única del índice. Además, cada nodo tiene un índice local separado de sus propios documentos. Pero como se discutió más tarde, en la implementación actual, cada nodo tiene una copia de todo el índice. La indexación de los documentos está distribuida. Por lo tanto, si un nodo está en proceso de indexar muchos documentos, distribuirá el trabajo entre los nodos. Una vez que el índice local de un nodo se actualiza con los nuevos documentos, entonces se actualizará el índice distribuido. El sistema de indexación distribuida actual consta de tres módulos separados: NodeController, FileSender y NodeIndexer. La responsabilidad de cada módulo se discute más adelante en esta sección. 3.1 Protocolo de indexación El protocolo que hemos diseñado para la indexación distribuida se muestra en la Figura 1. Figura 1. Protocolo de indexación distribuida Apocrita. La CONSULTA INACTIVA se envía desde el nodo iniciador para determinar qué otros nodos pueden ayudar con el proceso de indexación en general. No se enviaron parámetros con el comando. El nodo receptor responderá con un comando BUSY o IDLE. Si se recibe el comando IDLE, el nodo iniciador agregará el nodo que responde a una lista de ayudantes de indexación distribuida disponibles. En caso de recibir un comando OCUPADO, el nodo que responde es ignorado. OCUPADO: Una vez que un nodo recibe una CONSULTA IDL, determinará si puede considerarse un candidato para la indexación distribuida. Esta determinación se basa en el uso general de la CPU del nodo. Si el nodo está utilizando la mayor parte de su CPU para otros procesos, el nodo responderá a la CONSULTA DE INACTIVIDAD con un comando OCUPADO. Como en el caso de la respuesta BUSY, el nodo que recibe la CONSULTA DE INACTIVIDAD determinará su elegibilidad para la indexación distribuida. Para ser considerado un candidato para la indexación distribuida, el uso total de la CPU debe ser mínimo para permitir la indexación dedicada de los documentos distribuidos. Si este es el caso, el nodo responderá con un comando IDLE. ARCHIVO ENTRANTE: Una vez que el nodo iniciador reúne un conjunto de nodos inactivos para ayudar con la indexación distribuida, dividirá los documentos que se enviarán a los nodos. Para hacer esto, envía un mensaje de ARCHIVO ENTRANTE, que contiene el nombre del archivo y su tamaño en bytes. Después de que se haya enviado el comando ARCHIVO ENTRANTE, el nodo iniciador comenzará a transmitir el archivo al otro nodo. El nodo iniciador recorrerá los archivos que se enviarán al otro nodo; cada flujo de archivo estará precedido por el comando ARCHIVO ENTRANTE con los parámetros apropiados. ARCHIVO DE ÍNDICE: Una vez que el nodo de indexación haya completado el proceso de indexación del conjunto de archivos, debe enviar el índice resultante de vuelta al nodo iniciador. El índice está compuesto por varios archivos, que existen en el sistema de archivos del nodo de indexación. Al igual que con el comando INCOMING FILE, el nodo de indexación transmite cada archivo de índice después de enviar un comando INDEX FILE. El comando INDEX FILE tiene dos parámetros: el primero es el nombre del índice y el segundo es el tamaño del archivo en bytes. Al enviar los conjuntos de archivos tanto para el índice como para los archivos a ser indexados, el nodo debe notificar al nodo correspondiente cuando el proceso esté completo. Una vez que el nodo iniciador haya terminado de enviar el conjunto de documentos a ser indexados, enviará entonces un comando de ENVÍO COMPLETO indicando al nodo de indexación que no hay más archivos y que el nodo puede proceder con la indexación de los archivos. En el caso de que el nodo iniciador envíe los archivos de índice, el nodo de indexación completará la transferencia con el comando ENVIAR COMPLETO indicando al nodo iniciador que no hay más archivos de índice por enviar y que el nodo iniciador puede entonces ensamblar esos archivos de índice en el índice principal. El NodeController es responsable de establecer conexiones con nodos en estado de reposo para distribuir el proceso de indexación. Usando JXTA [5], el controlador de nodos obtendrá un conjunto de nodos. Este conjunto de nodos se itera y a cada uno se le envía el comando IDLE QUERY. Los nodos que responden con inactividad son luego recopilados. El conjunto de nodos inactivos incluye al nodo que inicia el proceso de indexación distribuida, conocido como nodo local. Una vez que se obtiene la colección de nodos inactivos, el nodo actualiza el conjunto de controladores y divide equitativamente el conjunto de documentos que se van a indexar. Por ejemplo, si hay 100 documentos y 10 nodos (incluyendo el nodo local) entonces cada nodo tendrá 10 documentos para indexar. Para cada nodo de indexación se crea una instancia del objeto FileSender. El FileSender es consciente del conjunto de documentos de los que el nodo es responsable. Una vez que se ha creado un objeto FileSender para cada nodo, el NodeController espera a que cada FileSender termine. Cuando los objetos FileSender hayan completado, el NodeController tomará los índices resultantes de 175 nodos y los pasará a una instancia del IndexCompiler, que mantiene el índice y la lista de FileSenders. Una vez que el IndexCompiler haya completado, volverá al estado inactivo y activará el escáner de directorios para monitorear el conjunto de documentos de propiedad local en busca de cambios que puedan requerir reindexación. El NodeIndexer es responsable de recibir los documentos enviados por el nodo iniciador y luego indexarlos utilizando el motor Lucene [7]. Una vez que se completa el indexado, el índice resultante se transmite de vuelta al nodo iniciador y se compila en el índice local del propio nodo indexador. Antes de iniciar el proceso de indexación, se debe enviar un mensaje de CONSULTA INACTIVA. Esta es la primera orden que inicia el proceso de indexación. El nodo indexador determinará si se considera inactivo en función del uso actual de la CPU. Como se describe en la sección del protocolo, si el nodo no se está utilizando y tiene un bajo porcentaje de uso de CPU en general, devolverá IDLE al comando de CONSULTA DE INACTIVIDAD. Si el uso de la CPU de los nodos del indexador está por encima del 50% durante un período de tiempo especificado, se considerará ocupado y responderá al comando IDLE QUERY con BUSY. Si un nodo se determina ocupado, vuelve a su estado de escucha esperando otra CONSULTA INACTIVA de otro nodo iniciador. Si se determina que el nodo está inactivo, entrará en el estado en el que recibirá archivos del nodo iniciador de los que es responsable de indexar. Una vez que todos los archivos son recibidos por el nodo iniciador, indicado por un mensaje de ENVÍO COMPLETO, se inicia una instancia del motor de indexación de Lucene. Los archivos se almacenan en un directorio temporal separado de los documentos locales de los nodos que son responsables de mantener un índice de los mismos. El escritor de índices de Lucene indexa luego todos los archivos transferidos. El índice se almacena en la unidad dentro de un directorio temporal separado del índice actual. Después de que se completa la indexación de los archivos, el nodo indexador entra en el estado en el que los archivos de índice son enviados de vuelta al nodo iniciador. El nodo indexador recorre todos los archivos creados por Lucene's IndexWriter y los transmite al nodo iniciador. Una vez que estos archivos son devueltos, ese índice se fusiona en el índice completo de los nodos indexadores de los archivos existentes. Luego entra en el estado de espera, donde escuchará a otros nodos que requieran distribuir el proceso de indexación. El objeto FileSender es el nodo iniciador equivalente al nodo indexador. Inicia la comunicación entre el nodo iniciador y el nodo que ayudará en la indexación distribuida. El nodo iniciador ejecuta muchas instancias del nodo FileSender, una para cada otro nodo que haya determinado que está inactivo. Al instanciar el FileSender se le pasa el nodo al que es responsable de contactar y el conjunto de archivos que deben ser enviados. El primer trabajo de FileSenders es enviar los archivos que deben ser indexados por el otro nodo inactivo. Los archivos se transmiten uno a la vez al otro nodo. Envía cada archivo utilizando el comando ARCHIVO ENTRANTE. Con ese comando se envía el nombre del archivo que se está enviando y el tamaño en bytes. Una vez que todos los archivos hayan sido enviados, el FileSender envía el comando de ENVÍO COMPLETADO. El FileSender crea una instancia de Lucene's IndexWriter y se prepara para crear el índice en un directorio temporal en el sistema de archivos. El FileSender comenzará a recibir los archivos que se guardarán dentro del índice. Recibe un comando de ARCHIVO DE ÍNDICE con el nombre de los archivos y el tamaño en bytes. Este archivo se transmite luego al directorio de índice temporal en el nodo de FileSender. Después de que se haya completado la transferencia de los archivos de índice, el FileSender notifica a la instancia del compilador de índices que está lista para combinar el índice. Cada instancia del FileSender tiene su propia sección única de espacio temporal para almacenar el índice que ha sido transferido desde el nodo de indexación. Al notificar al IndexCompiler, también pasará la ubicación del directorio particular de FileSenders de ese índice. 4. Apocrita utiliza un modelo de distribución peer-to-peer para distribuir archivos. Los archivos se distribuyen únicamente desde un nodo servidor a un nodo cliente sin tener en cuenta la disponibilidad de las partes de archivo de otros clientes en la red. Esto significa que las transferencias de archivos serán rápidas y eficientes y no deberían afectar severamente la usabilidad de los nodos de servicio desde el punto de vista de un usuario local. El marco de trabajo JXTA se utiliza para implementar funcionalidades peer-to-peer. Esto se ha decidido debido al plazo extremadamente corto del proyecto, lo que nos permite aprovechar más de cinco años de pruebas y desarrollo, así como el apoyo de muchas organizaciones grandes que emplean JXTA en sus propios productos. No estamos preocupados por posibles problemas de calidad porque JXTA se considera el marco de pares a pares más maduro y estable disponible. Usando la terminología de JXTA, hay tres tipos de pares utilizados en la clasificación de nodos. Los pares de borde suelen ser nodos de baja capacidad de ancho de banda y no dedicados. Debido a estas características, los pares de borde no se utilizan con Apocrita. Los nodos de retransmisión suelen ser nodos dedicados de mayor ancho de banda. Esta es la clasificación de todos los nodos en la red de Apocrita, y, como tal, es la clasificación predeterminada utilizada. Los pares de encuentro se utilizan para coordinar el intercambio de mensajes entre nodos en la red de Apocrita. Esto significa que se requiere un mínimo de un par de encuentro por subred. 4.1 Descubrimiento de pares El subsistema del servidor Apocrita utiliza el Protocolo de Descubrimiento de Pares (PDP) de JXTA para encontrar pares participantes dentro de la red, como se muestra en la Figura 2. Figura 2. El proceso de descubrimiento de pares de Apocrita. 176 El PDP escucha los anuncios de pares de otros nodos en el enjambre de Apocrita. Si se detecta un anuncio de pares, el servidor intentará unirse al grupo de pares y comenzar a contribuir activamente a la red. Si el servicio de descubrimiento no encuentra pares, el servidor creará un nuevo grupo de pares y comenzará a anunciar este grupo de pares. Este nuevo grupo de pares se anunciará periódicamente en la red; cualquier nuevo par que se una a la red se conectará a este grupo de pares. Una ventaja distintiva de usar el PDP de JXTA es que Apocrita no tiene que ser sensible a matices de redes particulares como la Unidad de Transmisión Máxima (MTU). Además, Apocrita no tiene que admitir métodos de entrega de paquetes uno a muchos, como la multidifusión, y en su lugar puede depender de JXTA para este soporte. Operación de consulta de índice 4.2 Todos los nodos en el enjambre de Apocrita tienen una copia completa y actualizada del índice de red almacenado localmente. Esto hace que la consulta del índice para obtener resultados de búsqueda sea trivial. A diferencia del protocolo Gnutella, una consulta no tiene que propagarse por toda la red. Esto también significa que el tiempo para devolver los resultados de la consulta es muy rápido, mucho más rápido que los protocolos que dependen de los nodos en la red para pasar la consulta a lo largo de la red y luego esperar los resultados. Esto se demuestra en la Figura 3. Figura 3. Operación de consulta de Apocrita. Cada documento en el enjambre tiene un número de identificación único (ID) para el documento. Un nodo consultará el índice y se devolverá un resultado con el número de identificación del documento, así como una lista de pares con una copia del documento coincidente. Es entonces responsabilidad del par que busca contactar a los pares de la lista para negociar la transferencia de archivos entre el cliente y el servidor. IMPLEMENTACIÓN DEL PROTOTIPO Apocrita utiliza el marco de trabajo Lucene [7], el cual es un proyecto en desarrollo por la Fundación de Software Apache. Apache Lucene es una biblioteca de motor de búsqueda de texto de alto rendimiento y con todas las funciones, escrita completamente en Java. En la implementación actual, Apocrita solo es capaz de indexar documentos de texto plano. Apocrita utiliza el marco de trabajo JXTA [5] como una biblioteca de transporte peer-to-peer entre nodos. JXTA se utiliza para pasar tanto mensajes como archivos entre nodos en la red de búsqueda. Al utilizar JXTA, Apocrita aprovecha un mecanismo de transporte peer-to-peer confiable y probado. Utiliza la facilidad de tuberías para pasar mensajes y archivos entre nodos. La instalación de tuberías ofrece muchos tipos diferentes de anuncios de tuberías. Esto incluye un conducto unicast no seguro, un conducto unicast seguro y un conducto no seguro propagado. El paso de mensajes se utiliza para enviar mensajes de estado entre nodos con el fin de ayudar en la indexación, búsqueda y recuperación. Por ejemplo, un nodo que intenta encontrar un nodo inactivo para participar en la indexación consultará a otros nodos a través de la facilidad de mensajes. Los nodos inactivos responderán con un mensaje de estado para indicar que están disponibles para comenzar a indexar. La transferencia de archivos se utiliza dentro de Apocrita para la transferencia de archivos. Después de que un archivo haya sido buscado y localizado dentro del grupo de pares, se abrirá un socket JXTA y se llevará a cabo la transferencia de archivos. Un socket JXTA es similar a un socket Java estándar, sin embargo un socket JXTA utiliza tuberías JXTA en el transporte de red subyacente. El paso de archivos utiliza un conducto unicast no seguro para transferir datos. La transferencia de archivos también se utiliza dentro de Apocrita para la transferencia de índices. La transferencia de índice funciona exactamente igual que la transferencia de archivos. De hecho, la transferencia de índice realmente pasa el índice como un archivo. Sin embargo, hay una diferencia clave entre la transferencia de archivos y la transferencia de índices. En el caso de la transferencia de archivos, se crea un socket entre solo dos nodos. En el caso de la transferencia de índices, se debe crear un socket entre todos los nodos de la red para pasar el índice, lo que permite que todos los nodos tengan un índice completo y total de toda la red. Para facilitar esta transferencia de manera eficiente, la transferencia de índices utilizará un tubo propagado no seguro para comunicarse con todos los nodos en la red de Apocrita. 6. EVALUACIÓN DEL RENDIMIENTO Es difícil comparar objetivamente los resultados obtenidos a través de Apocrita porque no hay otro sistema disponible actualmente con los mismos objetivos que Apocrita. Sin embargo, hemos evaluado el rendimiento de las secciones críticas del sistema. Las secciones críticas fueron determinadas como los procesos que requieren más tiempo. La evaluación se completó en computadoras de laboratorio estándar en una LAN Ethernet de 100Mb/s; las máquinas ejecutan Windows XP con un CPU Pentium 4 funcionando a 2.4GHz con 512 MB de RAM. El tiempo de indexación se ha ejecutado tanto en la colección de la revista Time [8], que contiene 432 documentos y 83 consultas con sus resultados más relevantes, como en la colección NPL [8], que tiene un total de 11,429 documentos y 93 consultas con resultados esperados. Cada documento tiene un tamaño que oscila entre 4KB y 8KB. Como muestra la Figura 4, el número de nodos involucrados en el proceso de indexación afecta el tiempo necesario para completar el proceso de indexación, a veces de manera drástica. Figura 4. Tiempo de nodo vs. tiempo de índice. La diferencia al pasar de un nodo de indexación a dos nodos de indexación es la más drástica y equivale a un tiempo de indexación un 37% más rápido que un solo nodo de indexación. La diferencia entre dos nodos de indexación y tres nodos de indexación sigue siendo significativa y representa un tiempo un 16% más rápido que dos nodos de indexación. A medida que aumenta el número de nodos de indexación, los resultados son menos dramáticos. Esto se puede atribuir al tiempo adicional asociado con tener muchos nodos realizando indexación. El tiempo necesario para comunicarse con un nodo es constante, por lo que a medida que aumenta el número de nodos, esta constante se vuelve más predominante. Además, la complejidad de unir los resultados de indexación es una operación compleja y se complica aún más a medida que aumenta el número de nodos de indexación. El rendimiento del socket también es una parte muy importante de Apocrita. Se realizaron pruebas de rendimiento utilizando un archivo de 65MB en un sistema con el cliente y el servidor ejecutándose localmente. Esto se hizo para aislar posibles problemas de red. Aunque menos drásticos, se mostraron resultados similares cuando el cliente y el servidor se ejecutan en hardware independiente. Para mitigar posibles errores inesperados, cada prueba se ejecutó 10 veces. Figura 5. Sockets de Java vs. sockets de JXTA. Como muestra la Figura 5, el rendimiento de los sockets JXTA es pésimo en comparación con el rendimiento de los sockets estándar de Java. La tasa de transferencia mínima obtenida utilizando sockets de Java es de 81,945KB/s, mientras que la tasa de transferencia mínima obtenida utilizando sockets de JXTA es mucho menor, de 3,805KB/s. La tasa de transferencia máxima obtenida usando sockets de Java es de 97,412KB/s, mientras que la tasa de transferencia máxima obtenida usando sockets de JXTA es de 5,530KB/s. Finalmente, la tasa de transferencia promedio utilizando sockets de Java es de 87,540KB/s, mientras que la tasa de transferencia promedio utilizando sockets de JXTA es de 4,293KB/s. El problema principal encontrado en estos benchmarks es que el mecanismo de transporte de red subyacente no funciona tan rápido o eficientemente como se esperaba. Para obtener un aumento en el rendimiento, el marco de trabajo JXTA necesita ser sustituido por un enfoque más tradicional. El tiempo de indexación también es un cuello de botella y deberá mejorarse para que la calidad general de Apocrita mejore. 7. TRABAJO RELACIONADO Existen hoy varios sistemas descentralizados P2P [1, 2, 3] que Apocrita incluye algunas de sus funcionalidades. Sin embargo, Apocrita también cuenta con características únicas de búsqueda e indexación novedosas que hacen que este sistema sea único. Por ejemplo, Majestic-12 [4] es un proyecto de búsqueda e indexación distribuida diseñado para buscar en Internet. Cada usuario instalaría un cliente, el cual es responsable de indexar una parte de la web. Una área central para consultar el índice está disponible en la página web de Majestic-12. El índice en sí no se distribuye, solo la acción de indexar se distribuye. El aspecto de indexación distribuida de este proyecto se relaciona más estrechamente con los objetivos de Apocrita. YaCy es una aplicación de búsqueda web peer-to-peer. YaCy consta de un rastreador web, un indexador, un motor de base de datos incorporado y un protocolo de intercambio de índices p2p. YaCy está diseñado para mantener un índice distribuido de Internet. Utilizaba una tabla hash distribuida (DHT) para mantener el índice. El nodo local se utiliza para hacer consultas, pero todos los resultados que se devuelven son accesibles en Internet. YaCy utilizó muchos pares y DHT para mantener un índice distribuido. Apocrita también utilizará un índice distribuido en futuras implementaciones y podría beneficiarse de utilizar una implementación de un DHT. Sin embargo, YaCy está diseñado como un motor de búsqueda web y, por lo tanto, resuelve un problema muy diferente al de Apocrita. 8. CONCLUSIONES Y TRABAJO FUTURO Presentamos Apocrita, un sistema distribuido de búsqueda e indexación P2P destinado a usuarios de redes en una intranet. Puede ayudar a las organizaciones que no cuentan con un servidor de archivos en red o con la infraestructura de red necesaria para compartir documentos. Elimina la necesidad de que los documentos sean compartidos manualmente entre usuarios mientras se editan y reduce la posibilidad de que se distribuyan versiones conflictivas. Se ha construido un prototipo de prueba de concepto, pero los resultados de medir el mecanismo de transporte de red y el tiempo de indexación no fueron tan impresionantes como se había imaginado inicialmente. A pesar de estas deficiencias, la experiencia adquirida en el diseño e implementación de Apocrita nos ha brindado una mayor comprensión sobre la construcción de sistemas distribuidos desafiantes. Para trabajos futuros, Apocrita contará con un modelo inteligente de distribución de contenido en el que una única instancia de un archivo puede replicarse de manera inteligente y transparente en toda la red para garantizar que una copia de cada archivo importante esté siempre disponible independientemente de la disponibilidad de nodos específicos en la red. Además, planeamos integrar un sistema de control de revisiones en la parte de distribución de contenido de Apocrita para que los usuarios puedan actualizar un archivo existente que encontraron y mantener la revisión antigua, propagando la nueva revisión. Finalmente, la implementación actual tiene cierto sobrecosto y redundancia debido a que se mantiene todo el índice en cada nodo individual, planeamos diseñar un índice distribuido. 9. REFERENCIAS [1] Rodrigues, R., Liskov, B., Shrira, L.: El diseño de un sistema peer-to-peer robusto. Disponible en línea: http://www.pmg.lcs.mit.edu/~rodrigo/ew02-robust.pdf. [2] Chawathe, Y., Ratnasamy, S., Breslau, L., Lanham, N., y Chenker, S.: Haciendo escalables los sistemas P2P similares a Gnutella. En Actas de SIGCOMM03, Karlsruhe, Alemania. [3] Harvest: Un Sistema de Búsqueda Distribuida: http://harvest.sourceforge.net. [4] Majestic-12: Motor de Búsqueda Distribuido: http://www.majestic12.co.uk. [5] JXTA: http://www.jxta.org. [6] YaCy: Indexación Web Distribuida basada en P2P: http://www.yacy.net/yacy. [7] Biblioteca del Motor de Búsqueda Lucene: http://lucene.apache.org. [8] Colecciones de Pruebas (Time Magazine y NPL): www.dcs.gla.ac.uk/idom/ir_resources/test_collections. 178",
    "original_sentences": [
        "Apocrita: A Distributed Peer-to-Peer File Sharing System for Intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Distributed Computing and Wireless & Telecommunications Technology University of Guelph-Humber Toronto, ON, M9W 5L7 Canada {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca ABSTRACT Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all member of the organization.",
        "This access may be needed for editing or simply viewing a document.",
        "In some cases these documents are shared between authors, via email, to be edited.",
        "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
        "There may even be multiple different documents in the process of being edited.",
        "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
        "Another problem arises when a document is made available on a users machine and that user is offline, in which case the document is no longer accessible.",
        "In this paper we present Apocrita, a revolutionary distributed P2P file sharing system for Intranets.",
        "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Distributed applications.",
        "General Terms Design, Experimentation, Performance. 1.",
        "INTRODUCTION The Peer-to-Peer (P2P) computing paradigm is becoming a completely new form of mutual resource sharing over the Internet.",
        "With the increasingly common place broadband Internet access, P2P technology has finally become a viable way to share documents and media files.",
        "There are already programs on the market that enable P2P file sharing.",
        "These programs enable millions of users to share files among themselves.",
        "While the utilization of P2P clients is already a gigantic step forward compared to downloading files off websites, using such programs are not without their problems.",
        "The downloaded files still require a lot of manual management by the user.",
        "The user still needs to put the files in the proper directory, manage files with multiple versions, delete the files when they are no longer wanted.",
        "We strive to make the process of sharing documents within an Intranet easier.",
        "Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all members of the organization.",
        "This access may be needed for editing or simply viewing a document.",
        "In some cases these documents are sent between authors, via email, to be edited.",
        "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
        "There may even be multiple different documents in the process of being edited.",
        "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
        "Furthermore, some organizations do not have a file sharing server or the necessary network infrastructure to enable one.",
        "In this paper we present Apocrita, which is a cost-effective distributed P2P file sharing system for such organizations.",
        "The rest of this paper is organized as follows.",
        "In section 2, we present Apocrita.",
        "The distributed indexing mechanism and protocol are presented in Section 3.",
        "Section 4 presents the peer-topeer distribution model.",
        "A proof of concept prototype is presented in Section 5, and performance evaluations are discussed in Section 6.",
        "Related work is presented is Section 7, and finally conclusions and future work are discussed in Section 8. 2.",
        "APOCRITA Apocrita is a distributed peer-to-peer file sharing system, and has been designed to make finding documents easier in an Intranet environment.",
        "Currently, it is possible for documents to be located on a users machine or on a remote machine.",
        "It is even possible that different revisions could reside on each node on the Intranet.",
        "This means there must be a manual process to maintain document versions.",
        "Apocrita solves this problem using two approaches.",
        "First, due to the inherent nature of Apocrita, the document will only reside on a single logical location.",
        "Second, Apocrita provides a method of reverting to previous document versions.",
        "Apocrita Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page.",
        "To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.",
        "ACMSE07, MARCH 23-24, 2007, WINSTON-SALEM, NC, USA.",
        "COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 will also distribute documents across multiple machines to ensure high availability of important documents.",
        "For example, if a machine contains an important document and the machine is currently inaccessible, the system is capable of maintaining availability of the document through this distribution mechanism.",
        "It provides a simple interface for searching and accessing files that may exist either locally or remotely.",
        "The distributed nature of the documents is transparent to the user.",
        "Apocrita supports a decentralized network model where the peers use a discovery protocol to determine peers.",
        "Apocrita is intended for network users on an Intranet.",
        "The main focus is organizations that may not have a network large enough to require a file server and supporting infrastructure.",
        "It eliminates the need for documents to be manually shared between users while being edited and reduces the possibility of conflicting versions being distributed.",
        "The system also provides some redundancy and in the event of a single machine failure, no important documents will be lost.",
        "It is operating system independent, and easy to access through a web browser or through a standalone application.",
        "To decrease the time required for indexing a large number of documents, the indexing process is distributed across available idle nodes.",
        "Local and remote files should be easily accessible through a virtual mountable file system, providing transparency for users. 3.",
        "DISTRIBUTED INDEXING Apocrita uses a distributed index for all the documents that are available on the Intranet.",
        "Each node will contain part of the full index, and be aware of what part of the index each other node has.",
        "A node will be able to contact each node that contains a unique portion of the index.",
        "In addition, each node has a separate local index of its own documents.",
        "But as discussed later, in the current implementation, each node has a copy of the entire index.",
        "Indexing of the documents is distributed.",
        "Therefore, if a node is in the process of indexing many documents, it will break up the work over the nodes.",
        "Once a nodes local index is updated with the new documents, the distributed index will then be updated.",
        "The current distributed indexing system consists of three separate modules: NodeController, FileSender, and NodeIndexer.",
        "The responsibility of each module is discussed later in this section. 3.1 Indexing Protocol The protocol we have designed for the distributed indexing is depicted in Figure 1.",
        "Figure 1.",
        "Apocrita distributed indexing protocol.",
        "IDLE QUERY: The IDLE QUERY is sent out from the initiating node to determine which other nodes may be able to help with the overall indexing process.",
        "There are no parameters sent with the command.",
        "The receiving node will respond with either a BUSY or IDLE command.",
        "If the IDLE command is received, the initiating node will add the responding node to a list of available distributed indexing helpers.",
        "In the case of a BUSY command being received, the responding node is ignored.",
        "BUSY: Once a node received an IDL QUERY, it will determine whether it can be considered a candidate for distributed indexing.",
        "This determination is based on the overall CPU usage of the node.",
        "If the node is using most of its CPU for other processes, the node will respond to the IDLE QUERY with a BUSY command.",
        "IDLE: As with the case of the BUSY response, the node receiving the IDLE QUERY will determine its eligibility for distributed indexing.",
        "To be considered a candidate for distributed indexing, the overall CPU usage must be at a minimum to all for dedicated indexing of the distributed documents.",
        "If this is the case, the node will respond with an IDLE command.",
        "INCOMING FILE: Once the initiating node assembles a set of idle nodes to assist with the distributed indexing, it will divide the documents to be sent to the nodes.",
        "To do this, it sends an INCOMING FILE message, which contains the name of the file as well as the size in bytes.",
        "After the INCOMING FILE command has been sent, the initiating node will begin to stream the file to the other node.",
        "The initiating node will loop through the files that are to be sent to the other node; each file stream being preceded by the INCOMING FILE command with the appropriate parameters.",
        "INDEX FILE: Once the indexing node has completed the indexing process of the set of files, it must send the resultant index back to the initiating node.",
        "The index is comprised of multiple files, which exist on the file system of the indexing node.",
        "As with the INCOMING FILE command, the indexing node streams each index file after sending an INDEX FILE command.",
        "The INDEX FILE command has two parameters: the first being the name of the index, and the second is the size of the file in bytes.",
        "SEND COMPLETE: When sending the sets of files for both the index and the files to be indexed, the node must notify the corresponding node when the process is complete.",
        "Once the initiating node is finished sending the set of documents to be indexed, it will then send a SEND COMPLETE command indicating to the indexing node that there are no more files and the node can proceed with indexing the files.",
        "In the case of the initiating node sending the index files, the indexing node will complete the transfer with the SEND COMPLETE command indicating to the initiating node that there are no more index files to be sent and the initiating node can then assemble those index files into the main index.",
        "The NodeController is responsible for setting up connections with nodes in the idle state to distribute the indexing process.",
        "Using JXTA [5], the node controller will obtain a set of nodes.",
        "This set of nodes is iterated and each one is sent the IDLE QUERY command.",
        "The nodes that respond with idle are then collected.",
        "The set of idle nodes includes the node initiating the distributed indexing process, referred to as the local node.",
        "Once the collection of idle nodes is obtained, the node updates the set of controllers and evenly divides the set of documents that are to be indexed.",
        "For example, if there are 100 documents and 10 nodes (including the local node) then each node will have 10 documents to index.",
        "For each indexing node an instance of the FileSender object is created.",
        "The FileSender is aware of the set of documents that node is responsible for.",
        "Once a FileSender object has been created for each node, the NodeController waits for each FileSender to complete.",
        "When the FileSender objects have completed the NodeController will take the resultant indexes from 175 each node and pass them to an instance of the IndexCompiler, which maintains the index and the list of FileSenders.",
        "Once the IndexCompiler has completed it will return to the idle state and activate the directory scanner to monitor the locally owned set of documents for changes that may require reindexing.",
        "The NodeIndexer is responsible for receiving documents sent to it by the initiating node and then indexing them using the Lucene engine [7].",
        "Once the indexing is complete the resulting index is streamed back to the initiating node as well as compiled in the indexer nodes own local index.",
        "Before initiating the indexing process it must be sent an IDLE QUERY message.",
        "This is the first command that sets off the indexing process.",
        "The indexer node will determine whether it is considered idle based on the current CPU usage.",
        "As outlined in the protocol section if the node is not being used and has a low overall CPU usage percentage it will return IDLE to the IDLE QUERY command.",
        "If the indexer nodes CPU usage is above 50% for a specified amount of time it is then considered to be busy and will respond to the IDLE QUERY command with BUSY.",
        "If a node is determined busy it returns to its listening state waiting for another IDLE QUERY from another initiating node.",
        "If the node is determined to be idle it will enter the state where it will receive files from the initiating node that it is responsible for indexing.",
        "Once all of the files are received by the initiating node, indicated by a SEND COMPLETE message, it starts an instance of the Lucene indexing engine.",
        "The files are stored in a temporary directory separate from the nodes local documents that it is responsible for maintaining an index of.",
        "The Lucene index writer then indexes all of the transferred files.",
        "The index is stored on the drive within a temporary directory separate from the current index.",
        "After the indexing of the files completes the indexer node enters the state where the index files are sent back to the initiating node.",
        "The indexer node loops through all of the files created by Lucenes IndexWriter and streams them to the initiating node.",
        "Once these files are sent back that index is then merged into the indexer nodes own full index of the existing files.",
        "It then enters the idle state where it will then listen for any other nodes that required distributing the indexing process.",
        "The FileSender object is the initiating node equivalent of the indexer node.",
        "It initiates the communication between the initiating node and the node that will assist in the distributed indexing.",
        "The initiating node runs many instances of the FileSender node one for each other node it has determined to be idle.",
        "Upon instantiation of the FileSender it is passed the node that it is responsible for contacting and the set of files that must be sent.",
        "The FileSenders first job is to send the files that are to be indexed by the other idle node.",
        "The files are streamed one at a time to the other node.",
        "It sends each file using the INCOMING FILE command.",
        "With that command it sends the name of the file being sent and the size in bytes.",
        "Once all files have been sent the FileSender sends the SEND COMPLETE command.",
        "The FileSender creates an instance of Lucenes IndexWriter and prepares to create the index in a temporary directory on the file system.",
        "The FileSender will begin to receive the files that are to be saved within the index.",
        "It receives an INDEX FILE command with the name of the files and the size in bytes.",
        "This file is then streamed into the temporary index directory on the FileSender node.",
        "After the transfer of the index files has been completed the FileSender notifies the instance of the index compiler that it is ready to combine the index.",
        "Each instance of the FileSender has its own unique section of temporary space to store the index that has been transferred back from the indexing node.",
        "When notifying the IndexCompiler it will also pass the location of the particular FileSenders directory location of that index. 4.",
        "PEER-TO-PEER DISTRIBUTION Apocrita uses a peer-to-peer distribution model in order to distribute files.",
        "Files are distributed solely from a serving node to a client node without regard for the availability of file pieces from other clients in the network.",
        "This means that the file transfers will be fast and efficient and should not severely affect the usability of serving nodes from the point of view of a local user.",
        "The JXTA framework [5] is used in order to implement peer-to-peer functionality.",
        "This has been decided due to the extremely shorttimeline of the project which allows us to take advantage of over five years of testing and development and support from many large organizations employing JXTA in their own products.",
        "We are not concerned with any potential quality problems because JXTA is considered to be the most mature and stable peer-to-peer framework available.",
        "Using JXTA terminology, there are three types of peers used in node classification.",
        "Edge peers are typically low-bandwidth, non-dedicated nodes.",
        "Due to these characteristics, edge peers are not used with Apocrita.",
        "Relay peers are typically higher-bandwidth, dedicated nodes.",
        "This is the classification of all nodes in the Apocrita network, and, as such, are the default classification used.",
        "Rendezvous peers are used to coordinate message passing between nodes in the Apocrita network.",
        "This means that a minimum of one rendezvous peer per subnet is required. 4.1 Peer Discovery The Apocrita server subsystem uses the JXTA Peer Discovery Protocol (PDP) in order to find participating peers within the network as shown in Figure 2.",
        "Figure 2.",
        "Apocrita peer discovery process. 176 The PDP listens for peer advertisements from other nodes in the Apocrita swarm.",
        "If a peer advertisement is detected, the server will attempt to join the peer group and start actively contributing to the network.",
        "If no peers are found by the discovery service, the server will create a new peer group and start advertising this peer group.",
        "This new peer group will be periodically advertised on the network; any new peers joining the network will attach to this peer group.",
        "A distinct advantage of using the JXTA PDP is that Apocrita does not have to be sensitive to particular networking nuances such as Maximum Transmission Unit (MTU).",
        "In addition, Apocrita does not have to support one-to-many packet delivery methods such as multicast and instead can rely on JXTA for this support. 4.2 Index Query Operation All nodes in the Apocrita swarm have a complete and up-to-date copy of the network index stored locally.",
        "This makes querying the index for search results trivial.",
        "Unlike the Gnutella protocol, a query does not have to propagate throughout the network.",
        "This also means that the time to return query results is very fast - much faster than protocols that rely on nodes in the network to pass the query throughout the network and then wait for results.",
        "This is demonstrated in Figure 3.",
        "Figure 3.",
        "Apocrita query operation.",
        "Each document in the swarm has a unique document identification number (ID).",
        "A node will query the index and a result will be returned with both the document ID number as well as a list of peers with a copy of the matched document ID.",
        "It is then the responsibility of the searching peer to contact the peers in the list to negotiate file transfer between the client and server. 5.",
        "PROTOTYPE IMPLEMENTATION Apocrita uses the Lucene framework [7], which is a project under development by the Apache Software Foundation.",
        "Apache Lucene is a high-performance, full-featured text search engine library written entirely in Java.",
        "In the current implementation, Apocrita is only capable of indexing plain text documents.",
        "Apocrita uses the JXTA framework [5] as a peer-to-peer transport library between nodes.",
        "JXTA is used to pass both messages and files between nodes in the search network.",
        "By using JXTA, Apocrita takes advantage of a reliable, and proven peer-to-peer transport mechanism.",
        "It uses the pipe facility in order to pass messages and files between nodes.",
        "The pipe facility provides many different types of pipe advertisements.",
        "This includes an unsecured unicast pipe, a secured unicast pipe, and a propagated unsecured pipe.",
        "Message passing is used to pass status messages between nodes in order to aid in indexing, searching, and retrieval.",
        "For example, a node attempting to find an idle node to participate in indexing will query nodes via the message facility.",
        "Idle nodes will reply with a status message to indicate they are available to start indexing.",
        "File passing is used within Apocrita for file transfer.",
        "After a file has been searched for and located within the peer group, a JXTA socket will be opened and file transfer will take place.",
        "A JXTA socket is similar to a standard Java socket, however a JXTA socket uses JXTA pipes in underlying network transport.",
        "File passing uses an unsecured unicast pipe in order to transfer data.",
        "File passing is also used within Apocrita for index transfer.",
        "Index transfer works exactly like a file transfer.",
        "In fact, the index transfer actually passes the index as a file.",
        "However, there is one key difference between file transfer and index transfer.",
        "In the case of file transfer, a socket is created between only two nodes.",
        "In the case of index transfer, a socket must be created between all nodes in the network in order to pass the index, which allows for all nodes to have a full and complete index of the entire network.",
        "In order to facilitate this transfer efficiently, index transfer will use an unsecured propagated pipe to communicate with all nodes in the Apocrita network. 6.",
        "PERFORMANCE EVALUATION It is difficult to objectively benchmark the results obtained through Apocrita because there is no other system currently available with the same goals as Apocrita.",
        "We have, however, evaluated the performance of the critical sections of the system.",
        "The critical sections were determined to be the processes that are the most time intensive.",
        "The evaluation was completed on standard lab computers on a 100Mb/s Ethernet LAN; the machines run Windows XP with a Pentium 4 CPU running at 2.4GHz with 512 MB of RAM.",
        "The indexing time has been run against both: the Time Magazine collection [8], which contains 432 documents and 83 queries and their most relevant results, and the NPL collection [8] that has a total of 11,429 documents and 93 queries with expected results.",
        "Each document ranges in size between 4KB and 8KB.",
        "As Figure 4 demonstrates, the number of nodes involved in the indexing process affects the time taken to complete the indexing processsometimes even drastically.",
        "Figure 4.",
        "Node vs. index time.",
        "The difference in going from one indexing node to two indexing nodes is the most drastic and equates to an indexing time 37% faster than a single indexing node.",
        "The different between two 177 indexing nodes and three indexing nodes is still significant and represents a 16% faster time than two indexing nodes.",
        "As the number of indexing nodes increases the results are less dramatic.",
        "This can be attributed to the time overhead associated with having many nodes perform indexing.",
        "The time needed to communicate with a node is constant, so as the number of nodes increases, this constant becomes more prevalent.",
        "Also, the complexity of joining the indexing results is a complex operation and is complicated further as the number of indexing nodes increases.",
        "Socket performance is also a very important part of Apocrita.",
        "Benchmarks were performed using a 65MB file on a system with both the client and server running locally.",
        "This was done to isolate possible network issues.",
        "Although less drastic, similar results were shown when the client and server run on independent hardware.",
        "In order to mitigate possible unexpected errors, each test was run 10 times.",
        "Figure 5.",
        "Java sockets vs. JXTA sockets.",
        "As Figure 5 demonstrates, the performance of JXTA sockets is abysmal as compared to the performance of standard Java sockets.",
        "The minimum transfer rate obtained using Java sockets is 81,945KB/s while the minimum transfer rater obtained using JXTA sockets is much lower at 3, 805KB/s.",
        "The maximum transfer rater obtain using Java sockets is 97,412KB/s while the maximum transfer rate obtained using JXTA sockets is 5,530KB/s.",
        "Finally, the average transfer rate using Java sockets is 87,540KB/s while the average transfer rate using JXTA sockets is 4,293KB/s.",
        "The major problem found in these benchmarks is that the underlying network transport mechanism does not perform as quickly or efficiently as expected.",
        "In order to garner a performance increase, the JXTA framework needs to be substituted with a more traditional approach.",
        "The indexing time is also a bottleneck and will need to be improved for the overall quality of Apocrita to be improved. 7.",
        "RELATED WORK Several decentralized P2P systems [1, 2, 3] exist today that Apocrita features some of their functionality.",
        "However, Apocrita also has unique novel searching and indexing features that make this system unique.",
        "For example, Majestic-12 [4] is a distributed search and indexing project designed for searching the Internet.",
        "Each user would install a client, which is responsible for indexing a portion of the web.",
        "A central area for querying the index is available on the Majestic-12 web page.",
        "The index itself is not distributed, only the act of indexing is distributed.",
        "The distributed indexing aspect of this project most closely relates Apocrita goals.",
        "YaCy [6] is a peer-to-peer web search application.",
        "YaCy consists of a web crawler, an indexer, a built-in database engine, and a p2p index exchange protocol.",
        "YaCy is designed to maintain a distributed index of the Internet.",
        "It used a distributed hash table (DHT) to maintain the index.",
        "The local node is used to query but all results that are returned are accessible on the Internet.",
        "YaCy used many peers and DHT to maintain a distributed index.",
        "Apocrita will also use a distributed index in future implementations and may benefit from using an implementation of a DHT.",
        "YaCy however, is designed as a web search engine and, as such solves a much different problem than Apocrita. 8.",
        "CONCLUSIONS AND FUTURE WORK We presented Apocrita, a distributed P2P searching and indexing system intended for network users on an Intranet.",
        "It can help organizations with no network file server or necessary network infrastructure to share documents.",
        "It eliminates the need for documents to be manually shared among users while being edited and reduce the possibility of conflicting versions being distributed.",
        "A proof of concept prototype has been constructed, but the results from measuring the network transport mechanism and the indexing time were not as impressive as initially envisioned.",
        "Despite these shortcomings, the experience gained from the design and implementation of Apocrita has given us more insight into building challenging distributed systems.",
        "For future work, Apocrita will have a smart content distribution model in which a single instance of a file can intelligently and transparently replicate throughout the network to ensure a copy of every important file will always be available regardless of the availability of specific nodes in the network.",
        "In addition, we plan to integrate a revision control system into the content distribution portion of Apocrita so that users could have the ability to update an existing file that they found and have the old revision maintained and the new revision propagated.",
        "Finally, the current implementation has some overhead and redundancy due to the fact that the entire index is maintained on each individual node, we plan to design a distributed index. 9.",
        "REFERENCES [1] Rodrigues, R., Liskov, B., Shrira, L.: The Design of a Robust Peer-to-Peer System.",
        "Available online: http://www.pmg.lcs.mit.edu/~rodrigo/ew02-robust.pdf. [2] Chawathe, Y., Ratnasamy, S., Breslau, L., Lanham, N., and Chenker, S.: Making Gnutella-like P2P Systems Scalable.",
        "In Proceedings of SIGCOMM03, Karlsruhe, Germany. [3] Harvest: A Distributed Search System: http://harvest.sourceforge.net. [4] Majestic-12: Distributed Search Engine: http://www.majestic12.co.uk. [5] JXTA: http://www.jxta.org. [6] YaCy: Distributed P2P-based Web Indexing: http://www.yacy.net/yacy. [7] Lucene Search Engine Library: http://lucene.apache.org. [8] Test Collections (Time Magazine and NPL): www.dcs.gla.ac.uk/idom/ir_resources/test_collections. 178"
    ],
    "translated_text_sentences": [
        "Apocrita: Un sistema de intercambio de archivos distribuido de igual a igual para intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Computación Distribuida y Tecnología Inalámbrica y de Telecomunicaciones Universidad de Guelph-Humber Toronto, ON, M9W 5L7 Canadá {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca RESUMEN Muchas organizaciones necesitan redactar documentos para diversos fines, y es posible que estos documentos deban ser accesibles para todos los miembros de la organización.",
        "Este acceso puede ser necesario para editar o simplemente ver un documento.",
        "En algunos casos, estos documentos son compartidos entre autores, a través de correo electrónico, para ser editados.",
        "Esto puede causar fácilmente que se envíe una versión incorrecta o se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento.",
        "Incluso puede haber varios documentos diferentes en proceso de edición.",
        "El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario.",
        "Otro problema surge cuando un documento está disponible en la máquina de un usuario y ese usuario está desconectado, en cuyo caso el documento ya no es accesible.",
        "En este artículo presentamos Apocrita, un revolucionario sistema distribuido de intercambio de archivos P2P para intranets.",
        "Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos - Aplicaciones Distribuidas.",
        "Términos generales Diseño, Experimentación, Rendimiento. 1.",
        "INTRODUCCIÓN El paradigma de computación Peer-to-Peer (P2P) se está convirtiendo en una forma completamente nueva de compartir recursos mutuos a través de Internet.",
        "Con el acceso cada vez más común a Internet de banda ancha, la tecnología P2P finalmente se ha convertido en una forma viable de compartir documentos y archivos multimedia.",
        "Ya existen programas en el mercado que permiten compartir archivos P2P.",
        "Estos programas permiten a millones de usuarios compartir archivos entre ellos.",
        "Si bien la utilización de clientes P2P ya es un gran avance en comparación con descargar archivos de sitios web, el uso de dichos programas no está exento de problemas.",
        "Los archivos descargados todavía requieren mucho manejo manual por parte del usuario.",
        "El usuario todavía necesita colocar los archivos en el directorio adecuado, gestionar archivos con múltiples versiones, eliminar los archivos cuando ya no se deseen.",
        "Nos esforzamos por hacer que el proceso de compartir documentos dentro de una Intranet sea más fácil.",
        "Muchas organizaciones están obligadas a redactar documentos para diversos fines, y dichos documentos pueden necesitar ser accesibles para todos los miembros de la organización.",
        "Este acceso puede ser necesario para editar o simplemente ver un documento.",
        "En algunos casos, estos documentos son enviados entre autores, por correo electrónico, para ser editados.",
        "Esto puede causar fácilmente que se envíe una versión incorrecta o que se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento.",
        "Puede haber incluso varios documentos diferentes en proceso de edición.",
        "El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario.",
        "Además, algunas organizaciones no cuentan con un servidor de intercambio de archivos o la infraestructura de red necesaria para habilitar uno.",
        "En este artículo presentamos Apocrita, que es un sistema de intercambio de archivos P2P distribuido y rentable para dichas organizaciones.",
        "El resto de este documento está organizado de la siguiente manera.",
        "En la sección 2, presentamos Apocrita.",
        "El mecanismo de indexación distribuida y el protocolo se presentan en la Sección 3.",
        "La sección 4 presenta el modelo de distribución peer-to-peer.",
        "Se presenta un prototipo de prueba de concepto en la Sección 5, y las evaluaciones de rendimiento se discuten en la Sección 6.",
        "El trabajo relacionado se presenta en la Sección 7, y finalmente las conclusiones y el trabajo futuro se discuten en la Sección 8.",
        "Apocrita es un sistema de intercambio de archivos entre pares distribuido, y ha sido diseñado para facilitar la búsqueda de documentos en un entorno de Intranet.",
        "Actualmente, es posible que los documentos se encuentren en la máquina de un usuario o en una máquina remota.",
        "Es incluso posible que diferentes revisiones puedan residir en cada nodo de la Intranet.",
        "Esto significa que debe haber un proceso manual para mantener las versiones de los documentos.",
        "Apocrita resuelve este problema utilizando dos enfoques.",
        "Primero, debido a la naturaleza inherente de Apocrita, el documento solo residirá en una ubicación lógica única.",
        "En segundo lugar, Apocrita proporciona un método para revertir a versiones anteriores de documentos.",
        "Se concede el permiso de hacer copias digitales o impresas de todo o parte de este trabajo para uso personal o en el aula sin cargo alguno, siempre y cuando las copias no se realicen ni distribuyan con fines de lucro o ventaja comercial, y que las copias lleven este aviso y la cita completa en la primera página.",
        "Para copiar de otra manera, o republicar, publicar en servidores o redistribuir en listas, se requiere permiso específico previo y/o un pago.",
        "ACMSE07, 23-24 DE MARZO DE 2007, WINSTON-SALEM, NC, EE. UU.",
        "COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 también distribuirá documentos en múltiples máquinas para garantizar la alta disponibilidad de documentos importantes.",
        "Por ejemplo, si una máquina contiene un documento importante y actualmente no es accesible, el sistema es capaz de mantener la disponibilidad del documento a través de este mecanismo de distribución.",
        "Proporciona una interfaz sencilla para buscar y acceder a archivos que pueden existir tanto local como remotamente.",
        "La naturaleza distribuida de los documentos es transparente para el usuario.",
        "Apocrita apoya un modelo de red descentralizada en el que los pares utilizan un protocolo de descubrimiento para determinar los pares.",
        "Apocrita está destinado para usuarios de red en una Intranet.",
        "El enfoque principal son las organizaciones que pueden no tener una red lo suficientemente grande como para necesitar un servidor de archivos y la infraestructura de soporte.",
        "Elimina la necesidad de que los documentos sean compartidos manualmente entre usuarios mientras se editan y reduce la posibilidad de que se distribuyan versiones conflictivas.",
        "El sistema también proporciona cierta redundancia y en caso de fallo de una máquina, no se perderán documentos importantes.",
        "Es independiente del sistema operativo y fácil de acceder a través de un navegador web o mediante una aplicación independiente.",
        "Para disminuir el tiempo requerido para indexar una gran cantidad de documentos, el proceso de indexación se distribuye entre los nodos inactivos disponibles.",
        "Los archivos locales y remotos deben ser fácilmente accesibles a través de un sistema de archivos virtual montable, proporcionando transparencia para los usuarios.",
        "Apocrita utiliza un índice distribuido para todos los documentos disponibles en la intranet.",
        "Cada nodo contendrá una parte del índice completo y estará al tanto de qué parte del índice tiene cada otro nodo.",
        "Un nodo podrá contactar a cada nodo que contenga una porción única del índice.",
        "Además, cada nodo tiene un índice local separado de sus propios documentos.",
        "Pero como se discutió más tarde, en la implementación actual, cada nodo tiene una copia de todo el índice.",
        "La indexación de los documentos está distribuida.",
        "Por lo tanto, si un nodo está en proceso de indexar muchos documentos, distribuirá el trabajo entre los nodos.",
        "Una vez que el índice local de un nodo se actualiza con los nuevos documentos, entonces se actualizará el índice distribuido.",
        "El sistema de indexación distribuida actual consta de tres módulos separados: NodeController, FileSender y NodeIndexer.",
        "La responsabilidad de cada módulo se discute más adelante en esta sección. 3.1 Protocolo de indexación El protocolo que hemos diseñado para la indexación distribuida se muestra en la Figura 1.",
        "Figura 1.",
        "Protocolo de indexación distribuida Apocrita.",
        "La CONSULTA INACTIVA se envía desde el nodo iniciador para determinar qué otros nodos pueden ayudar con el proceso de indexación en general.",
        "No se enviaron parámetros con el comando.",
        "El nodo receptor responderá con un comando BUSY o IDLE.",
        "Si se recibe el comando IDLE, el nodo iniciador agregará el nodo que responde a una lista de ayudantes de indexación distribuida disponibles.",
        "En caso de recibir un comando OCUPADO, el nodo que responde es ignorado.",
        "OCUPADO: Una vez que un nodo recibe una CONSULTA IDL, determinará si puede considerarse un candidato para la indexación distribuida.",
        "Esta determinación se basa en el uso general de la CPU del nodo.",
        "Si el nodo está utilizando la mayor parte de su CPU para otros procesos, el nodo responderá a la CONSULTA DE INACTIVIDAD con un comando OCUPADO.",
        "Como en el caso de la respuesta BUSY, el nodo que recibe la CONSULTA DE INACTIVIDAD determinará su elegibilidad para la indexación distribuida.",
        "Para ser considerado un candidato para la indexación distribuida, el uso total de la CPU debe ser mínimo para permitir la indexación dedicada de los documentos distribuidos.",
        "Si este es el caso, el nodo responderá con un comando IDLE.",
        "ARCHIVO ENTRANTE: Una vez que el nodo iniciador reúne un conjunto de nodos inactivos para ayudar con la indexación distribuida, dividirá los documentos que se enviarán a los nodos.",
        "Para hacer esto, envía un mensaje de ARCHIVO ENTRANTE, que contiene el nombre del archivo y su tamaño en bytes.",
        "Después de que se haya enviado el comando ARCHIVO ENTRANTE, el nodo iniciador comenzará a transmitir el archivo al otro nodo.",
        "El nodo iniciador recorrerá los archivos que se enviarán al otro nodo; cada flujo de archivo estará precedido por el comando ARCHIVO ENTRANTE con los parámetros apropiados.",
        "ARCHIVO DE ÍNDICE: Una vez que el nodo de indexación haya completado el proceso de indexación del conjunto de archivos, debe enviar el índice resultante de vuelta al nodo iniciador.",
        "El índice está compuesto por varios archivos, que existen en el sistema de archivos del nodo de indexación.",
        "Al igual que con el comando INCOMING FILE, el nodo de indexación transmite cada archivo de índice después de enviar un comando INDEX FILE.",
        "El comando INDEX FILE tiene dos parámetros: el primero es el nombre del índice y el segundo es el tamaño del archivo en bytes.",
        "Al enviar los conjuntos de archivos tanto para el índice como para los archivos a ser indexados, el nodo debe notificar al nodo correspondiente cuando el proceso esté completo.",
        "Una vez que el nodo iniciador haya terminado de enviar el conjunto de documentos a ser indexados, enviará entonces un comando de ENVÍO COMPLETO indicando al nodo de indexación que no hay más archivos y que el nodo puede proceder con la indexación de los archivos.",
        "En el caso de que el nodo iniciador envíe los archivos de índice, el nodo de indexación completará la transferencia con el comando ENVIAR COMPLETO indicando al nodo iniciador que no hay más archivos de índice por enviar y que el nodo iniciador puede entonces ensamblar esos archivos de índice en el índice principal.",
        "El NodeController es responsable de establecer conexiones con nodos en estado de reposo para distribuir el proceso de indexación.",
        "Usando JXTA [5], el controlador de nodos obtendrá un conjunto de nodos.",
        "Este conjunto de nodos se itera y a cada uno se le envía el comando IDLE QUERY.",
        "Los nodos que responden con inactividad son luego recopilados.",
        "El conjunto de nodos inactivos incluye al nodo que inicia el proceso de indexación distribuida, conocido como nodo local.",
        "Una vez que se obtiene la colección de nodos inactivos, el nodo actualiza el conjunto de controladores y divide equitativamente el conjunto de documentos que se van a indexar.",
        "Por ejemplo, si hay 100 documentos y 10 nodos (incluyendo el nodo local) entonces cada nodo tendrá 10 documentos para indexar.",
        "Para cada nodo de indexación se crea una instancia del objeto FileSender.",
        "El FileSender es consciente del conjunto de documentos de los que el nodo es responsable.",
        "Una vez que se ha creado un objeto FileSender para cada nodo, el NodeController espera a que cada FileSender termine.",
        "Cuando los objetos FileSender hayan completado, el NodeController tomará los índices resultantes de 175 nodos y los pasará a una instancia del IndexCompiler, que mantiene el índice y la lista de FileSenders.",
        "Una vez que el IndexCompiler haya completado, volverá al estado inactivo y activará el escáner de directorios para monitorear el conjunto de documentos de propiedad local en busca de cambios que puedan requerir reindexación.",
        "El NodeIndexer es responsable de recibir los documentos enviados por el nodo iniciador y luego indexarlos utilizando el motor Lucene [7].",
        "Una vez que se completa el indexado, el índice resultante se transmite de vuelta al nodo iniciador y se compila en el índice local del propio nodo indexador.",
        "Antes de iniciar el proceso de indexación, se debe enviar un mensaje de CONSULTA INACTIVA.",
        "Esta es la primera orden que inicia el proceso de indexación.",
        "El nodo indexador determinará si se considera inactivo en función del uso actual de la CPU.",
        "Como se describe en la sección del protocolo, si el nodo no se está utilizando y tiene un bajo porcentaje de uso de CPU en general, devolverá IDLE al comando de CONSULTA DE INACTIVIDAD.",
        "Si el uso de la CPU de los nodos del indexador está por encima del 50% durante un período de tiempo especificado, se considerará ocupado y responderá al comando IDLE QUERY con BUSY.",
        "Si un nodo se determina ocupado, vuelve a su estado de escucha esperando otra CONSULTA INACTIVA de otro nodo iniciador.",
        "Si se determina que el nodo está inactivo, entrará en el estado en el que recibirá archivos del nodo iniciador de los que es responsable de indexar.",
        "Una vez que todos los archivos son recibidos por el nodo iniciador, indicado por un mensaje de ENVÍO COMPLETO, se inicia una instancia del motor de indexación de Lucene.",
        "Los archivos se almacenan en un directorio temporal separado de los documentos locales de los nodos que son responsables de mantener un índice de los mismos.",
        "El escritor de índices de Lucene indexa luego todos los archivos transferidos.",
        "El índice se almacena en la unidad dentro de un directorio temporal separado del índice actual.",
        "Después de que se completa la indexación de los archivos, el nodo indexador entra en el estado en el que los archivos de índice son enviados de vuelta al nodo iniciador.",
        "El nodo indexador recorre todos los archivos creados por Lucene's IndexWriter y los transmite al nodo iniciador.",
        "Una vez que estos archivos son devueltos, ese índice se fusiona en el índice completo de los nodos indexadores de los archivos existentes.",
        "Luego entra en el estado de espera, donde escuchará a otros nodos que requieran distribuir el proceso de indexación.",
        "El objeto FileSender es el nodo iniciador equivalente al nodo indexador.",
        "Inicia la comunicación entre el nodo iniciador y el nodo que ayudará en la indexación distribuida.",
        "El nodo iniciador ejecuta muchas instancias del nodo FileSender, una para cada otro nodo que haya determinado que está inactivo.",
        "Al instanciar el FileSender se le pasa el nodo al que es responsable de contactar y el conjunto de archivos que deben ser enviados.",
        "El primer trabajo de FileSenders es enviar los archivos que deben ser indexados por el otro nodo inactivo.",
        "Los archivos se transmiten uno a la vez al otro nodo.",
        "Envía cada archivo utilizando el comando ARCHIVO ENTRANTE.",
        "Con ese comando se envía el nombre del archivo que se está enviando y el tamaño en bytes.",
        "Una vez que todos los archivos hayan sido enviados, el FileSender envía el comando de ENVÍO COMPLETADO.",
        "El FileSender crea una instancia de Lucene's IndexWriter y se prepara para crear el índice en un directorio temporal en el sistema de archivos.",
        "El FileSender comenzará a recibir los archivos que se guardarán dentro del índice.",
        "Recibe un comando de ARCHIVO DE ÍNDICE con el nombre de los archivos y el tamaño en bytes.",
        "Este archivo se transmite luego al directorio de índice temporal en el nodo de FileSender.",
        "Después de que se haya completado la transferencia de los archivos de índice, el FileSender notifica a la instancia del compilador de índices que está lista para combinar el índice.",
        "Cada instancia del FileSender tiene su propia sección única de espacio temporal para almacenar el índice que ha sido transferido desde el nodo de indexación.",
        "Al notificar al IndexCompiler, también pasará la ubicación del directorio particular de FileSenders de ese índice. 4.",
        "Apocrita utiliza un modelo de distribución peer-to-peer para distribuir archivos.",
        "Los archivos se distribuyen únicamente desde un nodo servidor a un nodo cliente sin tener en cuenta la disponibilidad de las partes de archivo de otros clientes en la red.",
        "Esto significa que las transferencias de archivos serán rápidas y eficientes y no deberían afectar severamente la usabilidad de los nodos de servicio desde el punto de vista de un usuario local.",
        "El marco de trabajo JXTA se utiliza para implementar funcionalidades peer-to-peer.",
        "Esto se ha decidido debido al plazo extremadamente corto del proyecto, lo que nos permite aprovechar más de cinco años de pruebas y desarrollo, así como el apoyo de muchas organizaciones grandes que emplean JXTA en sus propios productos.",
        "No estamos preocupados por posibles problemas de calidad porque JXTA se considera el marco de pares a pares más maduro y estable disponible.",
        "Usando la terminología de JXTA, hay tres tipos de pares utilizados en la clasificación de nodos.",
        "Los pares de borde suelen ser nodos de baja capacidad de ancho de banda y no dedicados.",
        "Debido a estas características, los pares de borde no se utilizan con Apocrita.",
        "Los nodos de retransmisión suelen ser nodos dedicados de mayor ancho de banda.",
        "Esta es la clasificación de todos los nodos en la red de Apocrita, y, como tal, es la clasificación predeterminada utilizada.",
        "Los pares de encuentro se utilizan para coordinar el intercambio de mensajes entre nodos en la red de Apocrita.",
        "Esto significa que se requiere un mínimo de un par de encuentro por subred. 4.1 Descubrimiento de pares El subsistema del servidor Apocrita utiliza el Protocolo de Descubrimiento de Pares (PDP) de JXTA para encontrar pares participantes dentro de la red, como se muestra en la Figura 2.",
        "Figura 2.",
        "El proceso de descubrimiento de pares de Apocrita. 176 El PDP escucha los anuncios de pares de otros nodos en el enjambre de Apocrita.",
        "Si se detecta un anuncio de pares, el servidor intentará unirse al grupo de pares y comenzar a contribuir activamente a la red.",
        "Si el servicio de descubrimiento no encuentra pares, el servidor creará un nuevo grupo de pares y comenzará a anunciar este grupo de pares.",
        "Este nuevo grupo de pares se anunciará periódicamente en la red; cualquier nuevo par que se una a la red se conectará a este grupo de pares.",
        "Una ventaja distintiva de usar el PDP de JXTA es que Apocrita no tiene que ser sensible a matices de redes particulares como la Unidad de Transmisión Máxima (MTU).",
        "Además, Apocrita no tiene que admitir métodos de entrega de paquetes uno a muchos, como la multidifusión, y en su lugar puede depender de JXTA para este soporte. Operación de consulta de índice 4.2 Todos los nodos en el enjambre de Apocrita tienen una copia completa y actualizada del índice de red almacenado localmente.",
        "Esto hace que la consulta del índice para obtener resultados de búsqueda sea trivial.",
        "A diferencia del protocolo Gnutella, una consulta no tiene que propagarse por toda la red.",
        "Esto también significa que el tiempo para devolver los resultados de la consulta es muy rápido, mucho más rápido que los protocolos que dependen de los nodos en la red para pasar la consulta a lo largo de la red y luego esperar los resultados.",
        "Esto se demuestra en la Figura 3.",
        "Figura 3.",
        "Operación de consulta de Apocrita.",
        "Cada documento en el enjambre tiene un número de identificación único (ID) para el documento.",
        "Un nodo consultará el índice y se devolverá un resultado con el número de identificación del documento, así como una lista de pares con una copia del documento coincidente.",
        "Es entonces responsabilidad del par que busca contactar a los pares de la lista para negociar la transferencia de archivos entre el cliente y el servidor.",
        "IMPLEMENTACIÓN DEL PROTOTIPO Apocrita utiliza el marco de trabajo Lucene [7], el cual es un proyecto en desarrollo por la Fundación de Software Apache.",
        "Apache Lucene es una biblioteca de motor de búsqueda de texto de alto rendimiento y con todas las funciones, escrita completamente en Java.",
        "En la implementación actual, Apocrita solo es capaz de indexar documentos de texto plano.",
        "Apocrita utiliza el marco de trabajo JXTA [5] como una biblioteca de transporte peer-to-peer entre nodos.",
        "JXTA se utiliza para pasar tanto mensajes como archivos entre nodos en la red de búsqueda.",
        "Al utilizar JXTA, Apocrita aprovecha un mecanismo de transporte peer-to-peer confiable y probado.",
        "Utiliza la facilidad de tuberías para pasar mensajes y archivos entre nodos.",
        "La instalación de tuberías ofrece muchos tipos diferentes de anuncios de tuberías.",
        "Esto incluye un conducto unicast no seguro, un conducto unicast seguro y un conducto no seguro propagado.",
        "El paso de mensajes se utiliza para enviar mensajes de estado entre nodos con el fin de ayudar en la indexación, búsqueda y recuperación.",
        "Por ejemplo, un nodo que intenta encontrar un nodo inactivo para participar en la indexación consultará a otros nodos a través de la facilidad de mensajes.",
        "Los nodos inactivos responderán con un mensaje de estado para indicar que están disponibles para comenzar a indexar.",
        "La transferencia de archivos se utiliza dentro de Apocrita para la transferencia de archivos.",
        "Después de que un archivo haya sido buscado y localizado dentro del grupo de pares, se abrirá un socket JXTA y se llevará a cabo la transferencia de archivos.",
        "Un socket JXTA es similar a un socket Java estándar, sin embargo un socket JXTA utiliza tuberías JXTA en el transporte de red subyacente.",
        "El paso de archivos utiliza un conducto unicast no seguro para transferir datos.",
        "La transferencia de archivos también se utiliza dentro de Apocrita para la transferencia de índices.",
        "La transferencia de índice funciona exactamente igual que la transferencia de archivos.",
        "De hecho, la transferencia de índice realmente pasa el índice como un archivo.",
        "Sin embargo, hay una diferencia clave entre la transferencia de archivos y la transferencia de índices.",
        "En el caso de la transferencia de archivos, se crea un socket entre solo dos nodos.",
        "En el caso de la transferencia de índices, se debe crear un socket entre todos los nodos de la red para pasar el índice, lo que permite que todos los nodos tengan un índice completo y total de toda la red.",
        "Para facilitar esta transferencia de manera eficiente, la transferencia de índices utilizará un tubo propagado no seguro para comunicarse con todos los nodos en la red de Apocrita. 6.",
        "EVALUACIÓN DEL RENDIMIENTO Es difícil comparar objetivamente los resultados obtenidos a través de Apocrita porque no hay otro sistema disponible actualmente con los mismos objetivos que Apocrita.",
        "Sin embargo, hemos evaluado el rendimiento de las secciones críticas del sistema.",
        "Las secciones críticas fueron determinadas como los procesos que requieren más tiempo.",
        "La evaluación se completó en computadoras de laboratorio estándar en una LAN Ethernet de 100Mb/s; las máquinas ejecutan Windows XP con un CPU Pentium 4 funcionando a 2.4GHz con 512 MB de RAM.",
        "El tiempo de indexación se ha ejecutado tanto en la colección de la revista Time [8], que contiene 432 documentos y 83 consultas con sus resultados más relevantes, como en la colección NPL [8], que tiene un total de 11,429 documentos y 93 consultas con resultados esperados.",
        "Cada documento tiene un tamaño que oscila entre 4KB y 8KB.",
        "Como muestra la Figura 4, el número de nodos involucrados en el proceso de indexación afecta el tiempo necesario para completar el proceso de indexación, a veces de manera drástica.",
        "Figura 4.",
        "Tiempo de nodo vs. tiempo de índice.",
        "La diferencia al pasar de un nodo de indexación a dos nodos de indexación es la más drástica y equivale a un tiempo de indexación un 37% más rápido que un solo nodo de indexación.",
        "La diferencia entre dos nodos de indexación y tres nodos de indexación sigue siendo significativa y representa un tiempo un 16% más rápido que dos nodos de indexación.",
        "A medida que aumenta el número de nodos de indexación, los resultados son menos dramáticos.",
        "Esto se puede atribuir al tiempo adicional asociado con tener muchos nodos realizando indexación.",
        "El tiempo necesario para comunicarse con un nodo es constante, por lo que a medida que aumenta el número de nodos, esta constante se vuelve más predominante.",
        "Además, la complejidad de unir los resultados de indexación es una operación compleja y se complica aún más a medida que aumenta el número de nodos de indexación.",
        "El rendimiento del socket también es una parte muy importante de Apocrita.",
        "Se realizaron pruebas de rendimiento utilizando un archivo de 65MB en un sistema con el cliente y el servidor ejecutándose localmente.",
        "Esto se hizo para aislar posibles problemas de red.",
        "Aunque menos drásticos, se mostraron resultados similares cuando el cliente y el servidor se ejecutan en hardware independiente.",
        "Para mitigar posibles errores inesperados, cada prueba se ejecutó 10 veces.",
        "Figura 5.",
        "Sockets de Java vs. sockets de JXTA.",
        "Como muestra la Figura 5, el rendimiento de los sockets JXTA es pésimo en comparación con el rendimiento de los sockets estándar de Java.",
        "La tasa de transferencia mínima obtenida utilizando sockets de Java es de 81,945KB/s, mientras que la tasa de transferencia mínima obtenida utilizando sockets de JXTA es mucho menor, de 3,805KB/s.",
        "La tasa de transferencia máxima obtenida usando sockets de Java es de 97,412KB/s, mientras que la tasa de transferencia máxima obtenida usando sockets de JXTA es de 5,530KB/s.",
        "Finalmente, la tasa de transferencia promedio utilizando sockets de Java es de 87,540KB/s, mientras que la tasa de transferencia promedio utilizando sockets de JXTA es de 4,293KB/s.",
        "El problema principal encontrado en estos benchmarks es que el mecanismo de transporte de red subyacente no funciona tan rápido o eficientemente como se esperaba.",
        "Para obtener un aumento en el rendimiento, el marco de trabajo JXTA necesita ser sustituido por un enfoque más tradicional.",
        "El tiempo de indexación también es un cuello de botella y deberá mejorarse para que la calidad general de Apocrita mejore. 7.",
        "TRABAJO RELACIONADO Existen hoy varios sistemas descentralizados P2P [1, 2, 3] que Apocrita incluye algunas de sus funcionalidades.",
        "Sin embargo, Apocrita también cuenta con características únicas de búsqueda e indexación novedosas que hacen que este sistema sea único.",
        "Por ejemplo, Majestic-12 [4] es un proyecto de búsqueda e indexación distribuida diseñado para buscar en Internet.",
        "Cada usuario instalaría un cliente, el cual es responsable de indexar una parte de la web.",
        "Una área central para consultar el índice está disponible en la página web de Majestic-12.",
        "El índice en sí no se distribuye, solo la acción de indexar se distribuye.",
        "El aspecto de indexación distribuida de este proyecto se relaciona más estrechamente con los objetivos de Apocrita.",
        "YaCy es una aplicación de búsqueda web peer-to-peer.",
        "YaCy consta de un rastreador web, un indexador, un motor de base de datos incorporado y un protocolo de intercambio de índices p2p.",
        "YaCy está diseñado para mantener un índice distribuido de Internet.",
        "Utilizaba una tabla hash distribuida (DHT) para mantener el índice.",
        "El nodo local se utiliza para hacer consultas, pero todos los resultados que se devuelven son accesibles en Internet.",
        "YaCy utilizó muchos pares y DHT para mantener un índice distribuido.",
        "Apocrita también utilizará un índice distribuido en futuras implementaciones y podría beneficiarse de utilizar una implementación de un DHT.",
        "Sin embargo, YaCy está diseñado como un motor de búsqueda web y, por lo tanto, resuelve un problema muy diferente al de Apocrita. 8.",
        "CONCLUSIONES Y TRABAJO FUTURO Presentamos Apocrita, un sistema distribuido de búsqueda e indexación P2P destinado a usuarios de redes en una intranet.",
        "Puede ayudar a las organizaciones que no cuentan con un servidor de archivos en red o con la infraestructura de red necesaria para compartir documentos.",
        "Elimina la necesidad de que los documentos sean compartidos manualmente entre usuarios mientras se editan y reduce la posibilidad de que se distribuyan versiones conflictivas.",
        "Se ha construido un prototipo de prueba de concepto, pero los resultados de medir el mecanismo de transporte de red y el tiempo de indexación no fueron tan impresionantes como se había imaginado inicialmente.",
        "A pesar de estas deficiencias, la experiencia adquirida en el diseño e implementación de Apocrita nos ha brindado una mayor comprensión sobre la construcción de sistemas distribuidos desafiantes.",
        "Para trabajos futuros, Apocrita contará con un modelo inteligente de distribución de contenido en el que una única instancia de un archivo puede replicarse de manera inteligente y transparente en toda la red para garantizar que una copia de cada archivo importante esté siempre disponible independientemente de la disponibilidad de nodos específicos en la red.",
        "Además, planeamos integrar un sistema de control de revisiones en la parte de distribución de contenido de Apocrita para que los usuarios puedan actualizar un archivo existente que encontraron y mantener la revisión antigua, propagando la nueva revisión.",
        "Finalmente, la implementación actual tiene cierto sobrecosto y redundancia debido a que se mantiene todo el índice en cada nodo individual, planeamos diseñar un índice distribuido. 9.",
        "REFERENCIAS [1] Rodrigues, R., Liskov, B., Shrira, L.: El diseño de un sistema peer-to-peer robusto.",
        "Disponible en línea: http://www.pmg.lcs.mit.edu/~rodrigo/ew02-robust.pdf. [2] Chawathe, Y., Ratnasamy, S., Breslau, L., Lanham, N., y Chenker, S.: Haciendo escalables los sistemas P2P similares a Gnutella.",
        "En Actas de SIGCOMM03, Karlsruhe, Alemania. [3] Harvest: Un Sistema de Búsqueda Distribuida: http://harvest.sourceforge.net. [4] Majestic-12: Motor de Búsqueda Distribuido: http://www.majestic12.co.uk. [5] JXTA: http://www.jxta.org. [6] YaCy: Indexación Web Distribuida basada en P2P: http://www.yacy.net/yacy. [7] Biblioteca del Motor de Búsqueda Lucene: http://lucene.apache.org. [8] Colecciones de Pruebas (Time Magazine y NPL): www.dcs.gla.ac.uk/idom/ir_resources/test_collections. 178"
    ],
    "error_count": 9,
    "keys": {
        "peer-to-peer": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Apocrita: A Distributed <br>peer-to-peer</br> File Sharing System for Intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Distributed Computing and Wireless & Telecommunications Technology University of Guelph-Humber Toronto, ON, M9W 5L7 Canada {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca ABSTRACT Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all member of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are shared between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Another problem arises when a document is made available on a users machine and that user is offline, in which case the document is no longer accessible.",
                "In this paper we present Apocrita, a revolutionary distributed P2P file sharing system for Intranets.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Distributed applications.",
                "General Terms Design, Experimentation, Performance. 1.",
                "INTRODUCTION The <br>peer-to-peer</br> (P2P) computing paradigm is becoming a completely new form of mutual resource sharing over the Internet.",
                "With the increasingly common place broadband Internet access, P2P technology has finally become a viable way to share documents and media files.",
                "There are already programs on the market that enable P2P file sharing.",
                "These programs enable millions of users to share files among themselves.",
                "While the utilization of P2P clients is already a gigantic step forward compared to downloading files off websites, using such programs are not without their problems.",
                "The downloaded files still require a lot of manual management by the user.",
                "The user still needs to put the files in the proper directory, manage files with multiple versions, delete the files when they are no longer wanted.",
                "We strive to make the process of sharing documents within an Intranet easier.",
                "Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all members of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are sent between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Furthermore, some organizations do not have a file sharing server or the necessary network infrastructure to enable one.",
                "In this paper we present Apocrita, which is a cost-effective distributed P2P file sharing system for such organizations.",
                "The rest of this paper is organized as follows.",
                "In section 2, we present Apocrita.",
                "The distributed indexing mechanism and protocol are presented in Section 3.",
                "Section 4 presents the peer-topeer distribution model.",
                "A proof of concept prototype is presented in Section 5, and performance evaluations are discussed in Section 6.",
                "Related work is presented is Section 7, and finally conclusions and future work are discussed in Section 8. 2.",
                "APOCRITA Apocrita is a distributed <br>peer-to-peer</br> file sharing system, and has been designed to make finding documents easier in an Intranet environment.",
                "Currently, it is possible for documents to be located on a users machine or on a remote machine.",
                "It is even possible that different revisions could reside on each node on the Intranet.",
                "This means there must be a manual process to maintain document versions.",
                "Apocrita solves this problem using two approaches.",
                "First, due to the inherent nature of Apocrita, the document will only reside on a single logical location.",
                "Second, Apocrita provides a method of reverting to previous document versions.",
                "Apocrita Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page.",
                "To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.",
                "ACMSE07, MARCH 23-24, 2007, WINSTON-SALEM, NC, USA.",
                "COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 will also distribute documents across multiple machines to ensure high availability of important documents.",
                "For example, if a machine contains an important document and the machine is currently inaccessible, the system is capable of maintaining availability of the document through this distribution mechanism.",
                "It provides a simple interface for searching and accessing files that may exist either locally or remotely.",
                "The distributed nature of the documents is transparent to the user.",
                "Apocrita supports a decentralized network model where the peers use a discovery protocol to determine peers.",
                "Apocrita is intended for network users on an Intranet.",
                "The main focus is organizations that may not have a network large enough to require a file server and supporting infrastructure.",
                "It eliminates the need for documents to be manually shared between users while being edited and reduces the possibility of conflicting versions being distributed.",
                "The system also provides some redundancy and in the event of a single machine failure, no important documents will be lost.",
                "It is operating system independent, and easy to access through a web browser or through a standalone application.",
                "To decrease the time required for indexing a large number of documents, the indexing process is distributed across available idle nodes.",
                "Local and remote files should be easily accessible through a virtual mountable file system, providing transparency for users. 3.",
                "DISTRIBUTED INDEXING Apocrita uses a distributed index for all the documents that are available on the Intranet.",
                "Each node will contain part of the full index, and be aware of what part of the index each other node has.",
                "A node will be able to contact each node that contains a unique portion of the index.",
                "In addition, each node has a separate local index of its own documents.",
                "But as discussed later, in the current implementation, each node has a copy of the entire index.",
                "Indexing of the documents is distributed.",
                "Therefore, if a node is in the process of indexing many documents, it will break up the work over the nodes.",
                "Once a nodes local index is updated with the new documents, the distributed index will then be updated.",
                "The current distributed indexing system consists of three separate modules: NodeController, FileSender, and NodeIndexer.",
                "The responsibility of each module is discussed later in this section. 3.1 Indexing Protocol The protocol we have designed for the distributed indexing is depicted in Figure 1.",
                "Figure 1.",
                "Apocrita distributed indexing protocol.",
                "IDLE QUERY: The IDLE QUERY is sent out from the initiating node to determine which other nodes may be able to help with the overall indexing process.",
                "There are no parameters sent with the command.",
                "The receiving node will respond with either a BUSY or IDLE command.",
                "If the IDLE command is received, the initiating node will add the responding node to a list of available distributed indexing helpers.",
                "In the case of a BUSY command being received, the responding node is ignored.",
                "BUSY: Once a node received an IDL QUERY, it will determine whether it can be considered a candidate for distributed indexing.",
                "This determination is based on the overall CPU usage of the node.",
                "If the node is using most of its CPU for other processes, the node will respond to the IDLE QUERY with a BUSY command.",
                "IDLE: As with the case of the BUSY response, the node receiving the IDLE QUERY will determine its eligibility for distributed indexing.",
                "To be considered a candidate for distributed indexing, the overall CPU usage must be at a minimum to all for dedicated indexing of the distributed documents.",
                "If this is the case, the node will respond with an IDLE command.",
                "INCOMING FILE: Once the initiating node assembles a set of idle nodes to assist with the distributed indexing, it will divide the documents to be sent to the nodes.",
                "To do this, it sends an INCOMING FILE message, which contains the name of the file as well as the size in bytes.",
                "After the INCOMING FILE command has been sent, the initiating node will begin to stream the file to the other node.",
                "The initiating node will loop through the files that are to be sent to the other node; each file stream being preceded by the INCOMING FILE command with the appropriate parameters.",
                "INDEX FILE: Once the indexing node has completed the indexing process of the set of files, it must send the resultant index back to the initiating node.",
                "The index is comprised of multiple files, which exist on the file system of the indexing node.",
                "As with the INCOMING FILE command, the indexing node streams each index file after sending an INDEX FILE command.",
                "The INDEX FILE command has two parameters: the first being the name of the index, and the second is the size of the file in bytes.",
                "SEND COMPLETE: When sending the sets of files for both the index and the files to be indexed, the node must notify the corresponding node when the process is complete.",
                "Once the initiating node is finished sending the set of documents to be indexed, it will then send a SEND COMPLETE command indicating to the indexing node that there are no more files and the node can proceed with indexing the files.",
                "In the case of the initiating node sending the index files, the indexing node will complete the transfer with the SEND COMPLETE command indicating to the initiating node that there are no more index files to be sent and the initiating node can then assemble those index files into the main index.",
                "The NodeController is responsible for setting up connections with nodes in the idle state to distribute the indexing process.",
                "Using JXTA [5], the node controller will obtain a set of nodes.",
                "This set of nodes is iterated and each one is sent the IDLE QUERY command.",
                "The nodes that respond with idle are then collected.",
                "The set of idle nodes includes the node initiating the distributed indexing process, referred to as the local node.",
                "Once the collection of idle nodes is obtained, the node updates the set of controllers and evenly divides the set of documents that are to be indexed.",
                "For example, if there are 100 documents and 10 nodes (including the local node) then each node will have 10 documents to index.",
                "For each indexing node an instance of the FileSender object is created.",
                "The FileSender is aware of the set of documents that node is responsible for.",
                "Once a FileSender object has been created for each node, the NodeController waits for each FileSender to complete.",
                "When the FileSender objects have completed the NodeController will take the resultant indexes from 175 each node and pass them to an instance of the IndexCompiler, which maintains the index and the list of FileSenders.",
                "Once the IndexCompiler has completed it will return to the idle state and activate the directory scanner to monitor the locally owned set of documents for changes that may require reindexing.",
                "The NodeIndexer is responsible for receiving documents sent to it by the initiating node and then indexing them using the Lucene engine [7].",
                "Once the indexing is complete the resulting index is streamed back to the initiating node as well as compiled in the indexer nodes own local index.",
                "Before initiating the indexing process it must be sent an IDLE QUERY message.",
                "This is the first command that sets off the indexing process.",
                "The indexer node will determine whether it is considered idle based on the current CPU usage.",
                "As outlined in the protocol section if the node is not being used and has a low overall CPU usage percentage it will return IDLE to the IDLE QUERY command.",
                "If the indexer nodes CPU usage is above 50% for a specified amount of time it is then considered to be busy and will respond to the IDLE QUERY command with BUSY.",
                "If a node is determined busy it returns to its listening state waiting for another IDLE QUERY from another initiating node.",
                "If the node is determined to be idle it will enter the state where it will receive files from the initiating node that it is responsible for indexing.",
                "Once all of the files are received by the initiating node, indicated by a SEND COMPLETE message, it starts an instance of the Lucene indexing engine.",
                "The files are stored in a temporary directory separate from the nodes local documents that it is responsible for maintaining an index of.",
                "The Lucene index writer then indexes all of the transferred files.",
                "The index is stored on the drive within a temporary directory separate from the current index.",
                "After the indexing of the files completes the indexer node enters the state where the index files are sent back to the initiating node.",
                "The indexer node loops through all of the files created by Lucenes IndexWriter and streams them to the initiating node.",
                "Once these files are sent back that index is then merged into the indexer nodes own full index of the existing files.",
                "It then enters the idle state where it will then listen for any other nodes that required distributing the indexing process.",
                "The FileSender object is the initiating node equivalent of the indexer node.",
                "It initiates the communication between the initiating node and the node that will assist in the distributed indexing.",
                "The initiating node runs many instances of the FileSender node one for each other node it has determined to be idle.",
                "Upon instantiation of the FileSender it is passed the node that it is responsible for contacting and the set of files that must be sent.",
                "The FileSenders first job is to send the files that are to be indexed by the other idle node.",
                "The files are streamed one at a time to the other node.",
                "It sends each file using the INCOMING FILE command.",
                "With that command it sends the name of the file being sent and the size in bytes.",
                "Once all files have been sent the FileSender sends the SEND COMPLETE command.",
                "The FileSender creates an instance of Lucenes IndexWriter and prepares to create the index in a temporary directory on the file system.",
                "The FileSender will begin to receive the files that are to be saved within the index.",
                "It receives an INDEX FILE command with the name of the files and the size in bytes.",
                "This file is then streamed into the temporary index directory on the FileSender node.",
                "After the transfer of the index files has been completed the FileSender notifies the instance of the index compiler that it is ready to combine the index.",
                "Each instance of the FileSender has its own unique section of temporary space to store the index that has been transferred back from the indexing node.",
                "When notifying the IndexCompiler it will also pass the location of the particular FileSenders directory location of that index. 4.",
                "<br>peer-to-peer</br> DISTRIBUTION Apocrita uses a <br>peer-to-peer</br> distribution model in order to distribute files.",
                "Files are distributed solely from a serving node to a client node without regard for the availability of file pieces from other clients in the network.",
                "This means that the file transfers will be fast and efficient and should not severely affect the usability of serving nodes from the point of view of a local user.",
                "The JXTA framework [5] is used in order to implement <br>peer-to-peer</br> functionality.",
                "This has been decided due to the extremely shorttimeline of the project which allows us to take advantage of over five years of testing and development and support from many large organizations employing JXTA in their own products.",
                "We are not concerned with any potential quality problems because JXTA is considered to be the most mature and stable <br>peer-to-peer</br> framework available.",
                "Using JXTA terminology, there are three types of peers used in node classification.",
                "Edge peers are typically low-bandwidth, non-dedicated nodes.",
                "Due to these characteristics, edge peers are not used with Apocrita.",
                "Relay peers are typically higher-bandwidth, dedicated nodes.",
                "This is the classification of all nodes in the Apocrita network, and, as such, are the default classification used.",
                "Rendezvous peers are used to coordinate message passing between nodes in the Apocrita network.",
                "This means that a minimum of one rendezvous peer per subnet is required. 4.1 Peer Discovery The Apocrita server subsystem uses the JXTA Peer Discovery Protocol (PDP) in order to find participating peers within the network as shown in Figure 2.",
                "Figure 2.",
                "Apocrita peer discovery process. 176 The PDP listens for peer advertisements from other nodes in the Apocrita swarm.",
                "If a peer advertisement is detected, the server will attempt to join the peer group and start actively contributing to the network.",
                "If no peers are found by the discovery service, the server will create a new peer group and start advertising this peer group.",
                "This new peer group will be periodically advertised on the network; any new peers joining the network will attach to this peer group.",
                "A distinct advantage of using the JXTA PDP is that Apocrita does not have to be sensitive to particular networking nuances such as Maximum Transmission Unit (MTU).",
                "In addition, Apocrita does not have to support one-to-many packet delivery methods such as multicast and instead can rely on JXTA for this support. 4.2 Index Query Operation All nodes in the Apocrita swarm have a complete and up-to-date copy of the network index stored locally.",
                "This makes querying the index for search results trivial.",
                "Unlike the Gnutella protocol, a query does not have to propagate throughout the network.",
                "This also means that the time to return query results is very fast - much faster than protocols that rely on nodes in the network to pass the query throughout the network and then wait for results.",
                "This is demonstrated in Figure 3.",
                "Figure 3.",
                "Apocrita query operation.",
                "Each document in the swarm has a unique document identification number (ID).",
                "A node will query the index and a result will be returned with both the document ID number as well as a list of peers with a copy of the matched document ID.",
                "It is then the responsibility of the searching peer to contact the peers in the list to negotiate file transfer between the client and server. 5.",
                "PROTOTYPE IMPLEMENTATION Apocrita uses the Lucene framework [7], which is a project under development by the Apache Software Foundation.",
                "Apache Lucene is a high-performance, full-featured text search engine library written entirely in Java.",
                "In the current implementation, Apocrita is only capable of indexing plain text documents.",
                "Apocrita uses the JXTA framework [5] as a <br>peer-to-peer</br> transport library between nodes.",
                "JXTA is used to pass both messages and files between nodes in the search network.",
                "By using JXTA, Apocrita takes advantage of a reliable, and proven <br>peer-to-peer</br> transport mechanism.",
                "It uses the pipe facility in order to pass messages and files between nodes.",
                "The pipe facility provides many different types of pipe advertisements.",
                "This includes an unsecured unicast pipe, a secured unicast pipe, and a propagated unsecured pipe.",
                "Message passing is used to pass status messages between nodes in order to aid in indexing, searching, and retrieval.",
                "For example, a node attempting to find an idle node to participate in indexing will query nodes via the message facility.",
                "Idle nodes will reply with a status message to indicate they are available to start indexing.",
                "File passing is used within Apocrita for file transfer.",
                "After a file has been searched for and located within the peer group, a JXTA socket will be opened and file transfer will take place.",
                "A JXTA socket is similar to a standard Java socket, however a JXTA socket uses JXTA pipes in underlying network transport.",
                "File passing uses an unsecured unicast pipe in order to transfer data.",
                "File passing is also used within Apocrita for index transfer.",
                "Index transfer works exactly like a file transfer.",
                "In fact, the index transfer actually passes the index as a file.",
                "However, there is one key difference between file transfer and index transfer.",
                "In the case of file transfer, a socket is created between only two nodes.",
                "In the case of index transfer, a socket must be created between all nodes in the network in order to pass the index, which allows for all nodes to have a full and complete index of the entire network.",
                "In order to facilitate this transfer efficiently, index transfer will use an unsecured propagated pipe to communicate with all nodes in the Apocrita network. 6.",
                "PERFORMANCE EVALUATION It is difficult to objectively benchmark the results obtained through Apocrita because there is no other system currently available with the same goals as Apocrita.",
                "We have, however, evaluated the performance of the critical sections of the system.",
                "The critical sections were determined to be the processes that are the most time intensive.",
                "The evaluation was completed on standard lab computers on a 100Mb/s Ethernet LAN; the machines run Windows XP with a Pentium 4 CPU running at 2.4GHz with 512 MB of RAM.",
                "The indexing time has been run against both: the Time Magazine collection [8], which contains 432 documents and 83 queries and their most relevant results, and the NPL collection [8] that has a total of 11,429 documents and 93 queries with expected results.",
                "Each document ranges in size between 4KB and 8KB.",
                "As Figure 4 demonstrates, the number of nodes involved in the indexing process affects the time taken to complete the indexing processsometimes even drastically.",
                "Figure 4.",
                "Node vs. index time.",
                "The difference in going from one indexing node to two indexing nodes is the most drastic and equates to an indexing time 37% faster than a single indexing node.",
                "The different between two 177 indexing nodes and three indexing nodes is still significant and represents a 16% faster time than two indexing nodes.",
                "As the number of indexing nodes increases the results are less dramatic.",
                "This can be attributed to the time overhead associated with having many nodes perform indexing.",
                "The time needed to communicate with a node is constant, so as the number of nodes increases, this constant becomes more prevalent.",
                "Also, the complexity of joining the indexing results is a complex operation and is complicated further as the number of indexing nodes increases.",
                "Socket performance is also a very important part of Apocrita.",
                "Benchmarks were performed using a 65MB file on a system with both the client and server running locally.",
                "This was done to isolate possible network issues.",
                "Although less drastic, similar results were shown when the client and server run on independent hardware.",
                "In order to mitigate possible unexpected errors, each test was run 10 times.",
                "Figure 5.",
                "Java sockets vs. JXTA sockets.",
                "As Figure 5 demonstrates, the performance of JXTA sockets is abysmal as compared to the performance of standard Java sockets.",
                "The minimum transfer rate obtained using Java sockets is 81,945KB/s while the minimum transfer rater obtained using JXTA sockets is much lower at 3, 805KB/s.",
                "The maximum transfer rater obtain using Java sockets is 97,412KB/s while the maximum transfer rate obtained using JXTA sockets is 5,530KB/s.",
                "Finally, the average transfer rate using Java sockets is 87,540KB/s while the average transfer rate using JXTA sockets is 4,293KB/s.",
                "The major problem found in these benchmarks is that the underlying network transport mechanism does not perform as quickly or efficiently as expected.",
                "In order to garner a performance increase, the JXTA framework needs to be substituted with a more traditional approach.",
                "The indexing time is also a bottleneck and will need to be improved for the overall quality of Apocrita to be improved. 7.",
                "RELATED WORK Several decentralized P2P systems [1, 2, 3] exist today that Apocrita features some of their functionality.",
                "However, Apocrita also has unique novel searching and indexing features that make this system unique.",
                "For example, Majestic-12 [4] is a distributed search and indexing project designed for searching the Internet.",
                "Each user would install a client, which is responsible for indexing a portion of the web.",
                "A central area for querying the index is available on the Majestic-12 web page.",
                "The index itself is not distributed, only the act of indexing is distributed.",
                "The distributed indexing aspect of this project most closely relates Apocrita goals.",
                "YaCy [6] is a <br>peer-to-peer</br> web search application.",
                "YaCy consists of a web crawler, an indexer, a built-in database engine, and a p2p index exchange protocol.",
                "YaCy is designed to maintain a distributed index of the Internet.",
                "It used a distributed hash table (DHT) to maintain the index.",
                "The local node is used to query but all results that are returned are accessible on the Internet.",
                "YaCy used many peers and DHT to maintain a distributed index.",
                "Apocrita will also use a distributed index in future implementations and may benefit from using an implementation of a DHT.",
                "YaCy however, is designed as a web search engine and, as such solves a much different problem than Apocrita. 8.",
                "CONCLUSIONS AND FUTURE WORK We presented Apocrita, a distributed P2P searching and indexing system intended for network users on an Intranet.",
                "It can help organizations with no network file server or necessary network infrastructure to share documents.",
                "It eliminates the need for documents to be manually shared among users while being edited and reduce the possibility of conflicting versions being distributed.",
                "A proof of concept prototype has been constructed, but the results from measuring the network transport mechanism and the indexing time were not as impressive as initially envisioned.",
                "Despite these shortcomings, the experience gained from the design and implementation of Apocrita has given us more insight into building challenging distributed systems.",
                "For future work, Apocrita will have a smart content distribution model in which a single instance of a file can intelligently and transparently replicate throughout the network to ensure a copy of every important file will always be available regardless of the availability of specific nodes in the network.",
                "In addition, we plan to integrate a revision control system into the content distribution portion of Apocrita so that users could have the ability to update an existing file that they found and have the old revision maintained and the new revision propagated.",
                "Finally, the current implementation has some overhead and redundancy due to the fact that the entire index is maintained on each individual node, we plan to design a distributed index. 9.",
                "REFERENCES [1] Rodrigues, R., Liskov, B., Shrira, L.: The Design of a Robust <br>peer-to-peer</br> System.",
                "Available online: http://www.pmg.lcs.mit.edu/~rodrigo/ew02-robust.pdf. [2] Chawathe, Y., Ratnasamy, S., Breslau, L., Lanham, N., and Chenker, S.: Making Gnutella-like P2P Systems Scalable.",
                "In Proceedings of SIGCOMM03, Karlsruhe, Germany. [3] Harvest: A Distributed Search System: http://harvest.sourceforge.net. [4] Majestic-12: Distributed Search Engine: http://www.majestic12.co.uk. [5] JXTA: http://www.jxta.org. [6] YaCy: Distributed P2P-based Web Indexing: http://www.yacy.net/yacy. [7] Lucene Search Engine Library: http://lucene.apache.org. [8] Test Collections (Time Magazine and NPL): www.dcs.gla.ac.uk/idom/ir_resources/test_collections. 178"
            ],
            "original_annotated_samples": [
                "Apocrita: A Distributed <br>peer-to-peer</br> File Sharing System for Intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Distributed Computing and Wireless & Telecommunications Technology University of Guelph-Humber Toronto, ON, M9W 5L7 Canada {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca ABSTRACT Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all member of the organization.",
                "INTRODUCTION The <br>peer-to-peer</br> (P2P) computing paradigm is becoming a completely new form of mutual resource sharing over the Internet.",
                "APOCRITA Apocrita is a distributed <br>peer-to-peer</br> file sharing system, and has been designed to make finding documents easier in an Intranet environment.",
                "<br>peer-to-peer</br> DISTRIBUTION Apocrita uses a <br>peer-to-peer</br> distribution model in order to distribute files.",
                "The JXTA framework [5] is used in order to implement <br>peer-to-peer</br> functionality."
            ],
            "translated_annotated_samples": [
                "Apocrita: Un sistema de intercambio de archivos distribuido <br>de igual a igual</br> para intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Computación Distribuida y Tecnología Inalámbrica y de Telecomunicaciones Universidad de Guelph-Humber Toronto, ON, M9W 5L7 Canadá {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca RESUMEN Muchas organizaciones necesitan redactar documentos para diversos fines, y es posible que estos documentos deban ser accesibles para todos los miembros de la organización.",
                "INTRODUCCIÓN El paradigma de <br>computación Peer-to-Peer</br> (P2P) se está convirtiendo en una forma completamente nueva de compartir recursos mutuos a través de Internet.",
                "Apocrita es un sistema de <br>intercambio de archivos entre pares</br> distribuido, y ha sido diseñado para facilitar la búsqueda de documentos en un entorno de Intranet.",
                "Apocrita utiliza un modelo de distribución <br>peer-to-peer</br> para distribuir archivos.",
                "El marco de trabajo JXTA se utiliza para implementar funcionalidades <br>peer-to-peer</br>."
            ],
            "translated_text": "Apocrita: Un sistema de intercambio de archivos distribuido <br>de igual a igual</br> para intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Computación Distribuida y Tecnología Inalámbrica y de Telecomunicaciones Universidad de Guelph-Humber Toronto, ON, M9W 5L7 Canadá {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca RESUMEN Muchas organizaciones necesitan redactar documentos para diversos fines, y es posible que estos documentos deban ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un documento. En algunos casos, estos documentos son compartidos entre autores, a través de correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento. Incluso puede haber varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario. Otro problema surge cuando un documento está disponible en la máquina de un usuario y ese usuario está desconectado, en cuyo caso el documento ya no es accesible. En este artículo presentamos Apocrita, un revolucionario sistema distribuido de intercambio de archivos P2P para intranets. Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos - Aplicaciones Distribuidas. Términos generales Diseño, Experimentación, Rendimiento. 1. INTRODUCCIÓN El paradigma de <br>computación Peer-to-Peer</br> (P2P) se está convirtiendo en una forma completamente nueva de compartir recursos mutuos a través de Internet. Con el acceso cada vez más común a Internet de banda ancha, la tecnología P2P finalmente se ha convertido en una forma viable de compartir documentos y archivos multimedia. Ya existen programas en el mercado que permiten compartir archivos P2P. Estos programas permiten a millones de usuarios compartir archivos entre ellos. Si bien la utilización de clientes P2P ya es un gran avance en comparación con descargar archivos de sitios web, el uso de dichos programas no está exento de problemas. Los archivos descargados todavía requieren mucho manejo manual por parte del usuario. El usuario todavía necesita colocar los archivos en el directorio adecuado, gestionar archivos con múltiples versiones, eliminar los archivos cuando ya no se deseen. Nos esforzamos por hacer que el proceso de compartir documentos dentro de una Intranet sea más fácil. Muchas organizaciones están obligadas a redactar documentos para diversos fines, y dichos documentos pueden necesitar ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un documento. En algunos casos, estos documentos son enviados entre autores, por correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o que se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento. Puede haber incluso varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario. Además, algunas organizaciones no cuentan con un servidor de intercambio de archivos o la infraestructura de red necesaria para habilitar uno. En este artículo presentamos Apocrita, que es un sistema de intercambio de archivos P2P distribuido y rentable para dichas organizaciones. El resto de este documento está organizado de la siguiente manera. En la sección 2, presentamos Apocrita. El mecanismo de indexación distribuida y el protocolo se presentan en la Sección 3. La sección 4 presenta el modelo de distribución peer-to-peer. Se presenta un prototipo de prueba de concepto en la Sección 5, y las evaluaciones de rendimiento se discuten en la Sección 6. El trabajo relacionado se presenta en la Sección 7, y finalmente las conclusiones y el trabajo futuro se discuten en la Sección 8. Apocrita es un sistema de <br>intercambio de archivos entre pares</br> distribuido, y ha sido diseñado para facilitar la búsqueda de documentos en un entorno de Intranet. Actualmente, es posible que los documentos se encuentren en la máquina de un usuario o en una máquina remota. Es incluso posible que diferentes revisiones puedan residir en cada nodo de la Intranet. Esto significa que debe haber un proceso manual para mantener las versiones de los documentos. Apocrita resuelve este problema utilizando dos enfoques. Primero, debido a la naturaleza inherente de Apocrita, el documento solo residirá en una ubicación lógica única. En segundo lugar, Apocrita proporciona un método para revertir a versiones anteriores de documentos. Se concede el permiso de hacer copias digitales o impresas de todo o parte de este trabajo para uso personal o en el aula sin cargo alguno, siempre y cuando las copias no se realicen ni distribuyan con fines de lucro o ventaja comercial, y que las copias lleven este aviso y la cita completa en la primera página. Para copiar de otra manera, o republicar, publicar en servidores o redistribuir en listas, se requiere permiso específico previo y/o un pago. ACMSE07, 23-24 DE MARZO DE 2007, WINSTON-SALEM, NC, EE. UU. COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 también distribuirá documentos en múltiples máquinas para garantizar la alta disponibilidad de documentos importantes. Por ejemplo, si una máquina contiene un documento importante y actualmente no es accesible, el sistema es capaz de mantener la disponibilidad del documento a través de este mecanismo de distribución. Proporciona una interfaz sencilla para buscar y acceder a archivos que pueden existir tanto local como remotamente. La naturaleza distribuida de los documentos es transparente para el usuario. Apocrita apoya un modelo de red descentralizada en el que los pares utilizan un protocolo de descubrimiento para determinar los pares. Apocrita está destinado para usuarios de red en una Intranet. El enfoque principal son las organizaciones que pueden no tener una red lo suficientemente grande como para necesitar un servidor de archivos y la infraestructura de soporte. Elimina la necesidad de que los documentos sean compartidos manualmente entre usuarios mientras se editan y reduce la posibilidad de que se distribuyan versiones conflictivas. El sistema también proporciona cierta redundancia y en caso de fallo de una máquina, no se perderán documentos importantes. Es independiente del sistema operativo y fácil de acceder a través de un navegador web o mediante una aplicación independiente. Para disminuir el tiempo requerido para indexar una gran cantidad de documentos, el proceso de indexación se distribuye entre los nodos inactivos disponibles. Los archivos locales y remotos deben ser fácilmente accesibles a través de un sistema de archivos virtual montable, proporcionando transparencia para los usuarios. Apocrita utiliza un índice distribuido para todos los documentos disponibles en la intranet. Cada nodo contendrá una parte del índice completo y estará al tanto de qué parte del índice tiene cada otro nodo. Un nodo podrá contactar a cada nodo que contenga una porción única del índice. Además, cada nodo tiene un índice local separado de sus propios documentos. Pero como se discutió más tarde, en la implementación actual, cada nodo tiene una copia de todo el índice. La indexación de los documentos está distribuida. Por lo tanto, si un nodo está en proceso de indexar muchos documentos, distribuirá el trabajo entre los nodos. Una vez que el índice local de un nodo se actualiza con los nuevos documentos, entonces se actualizará el índice distribuido. El sistema de indexación distribuida actual consta de tres módulos separados: NodeController, FileSender y NodeIndexer. La responsabilidad de cada módulo se discute más adelante en esta sección. 3.1 Protocolo de indexación El protocolo que hemos diseñado para la indexación distribuida se muestra en la Figura 1. Figura 1. Protocolo de indexación distribuida Apocrita. La CONSULTA INACTIVA se envía desde el nodo iniciador para determinar qué otros nodos pueden ayudar con el proceso de indexación en general. No se enviaron parámetros con el comando. El nodo receptor responderá con un comando BUSY o IDLE. Si se recibe el comando IDLE, el nodo iniciador agregará el nodo que responde a una lista de ayudantes de indexación distribuida disponibles. En caso de recibir un comando OCUPADO, el nodo que responde es ignorado. OCUPADO: Una vez que un nodo recibe una CONSULTA IDL, determinará si puede considerarse un candidato para la indexación distribuida. Esta determinación se basa en el uso general de la CPU del nodo. Si el nodo está utilizando la mayor parte de su CPU para otros procesos, el nodo responderá a la CONSULTA DE INACTIVIDAD con un comando OCUPADO. Como en el caso de la respuesta BUSY, el nodo que recibe la CONSULTA DE INACTIVIDAD determinará su elegibilidad para la indexación distribuida. Para ser considerado un candidato para la indexación distribuida, el uso total de la CPU debe ser mínimo para permitir la indexación dedicada de los documentos distribuidos. Si este es el caso, el nodo responderá con un comando IDLE. ARCHIVO ENTRANTE: Una vez que el nodo iniciador reúne un conjunto de nodos inactivos para ayudar con la indexación distribuida, dividirá los documentos que se enviarán a los nodos. Para hacer esto, envía un mensaje de ARCHIVO ENTRANTE, que contiene el nombre del archivo y su tamaño en bytes. Después de que se haya enviado el comando ARCHIVO ENTRANTE, el nodo iniciador comenzará a transmitir el archivo al otro nodo. El nodo iniciador recorrerá los archivos que se enviarán al otro nodo; cada flujo de archivo estará precedido por el comando ARCHIVO ENTRANTE con los parámetros apropiados. ARCHIVO DE ÍNDICE: Una vez que el nodo de indexación haya completado el proceso de indexación del conjunto de archivos, debe enviar el índice resultante de vuelta al nodo iniciador. El índice está compuesto por varios archivos, que existen en el sistema de archivos del nodo de indexación. Al igual que con el comando INCOMING FILE, el nodo de indexación transmite cada archivo de índice después de enviar un comando INDEX FILE. El comando INDEX FILE tiene dos parámetros: el primero es el nombre del índice y el segundo es el tamaño del archivo en bytes. Al enviar los conjuntos de archivos tanto para el índice como para los archivos a ser indexados, el nodo debe notificar al nodo correspondiente cuando el proceso esté completo. Una vez que el nodo iniciador haya terminado de enviar el conjunto de documentos a ser indexados, enviará entonces un comando de ENVÍO COMPLETO indicando al nodo de indexación que no hay más archivos y que el nodo puede proceder con la indexación de los archivos. En el caso de que el nodo iniciador envíe los archivos de índice, el nodo de indexación completará la transferencia con el comando ENVIAR COMPLETO indicando al nodo iniciador que no hay más archivos de índice por enviar y que el nodo iniciador puede entonces ensamblar esos archivos de índice en el índice principal. El NodeController es responsable de establecer conexiones con nodos en estado de reposo para distribuir el proceso de indexación. Usando JXTA [5], el controlador de nodos obtendrá un conjunto de nodos. Este conjunto de nodos se itera y a cada uno se le envía el comando IDLE QUERY. Los nodos que responden con inactividad son luego recopilados. El conjunto de nodos inactivos incluye al nodo que inicia el proceso de indexación distribuida, conocido como nodo local. Una vez que se obtiene la colección de nodos inactivos, el nodo actualiza el conjunto de controladores y divide equitativamente el conjunto de documentos que se van a indexar. Por ejemplo, si hay 100 documentos y 10 nodos (incluyendo el nodo local) entonces cada nodo tendrá 10 documentos para indexar. Para cada nodo de indexación se crea una instancia del objeto FileSender. El FileSender es consciente del conjunto de documentos de los que el nodo es responsable. Una vez que se ha creado un objeto FileSender para cada nodo, el NodeController espera a que cada FileSender termine. Cuando los objetos FileSender hayan completado, el NodeController tomará los índices resultantes de 175 nodos y los pasará a una instancia del IndexCompiler, que mantiene el índice y la lista de FileSenders. Una vez que el IndexCompiler haya completado, volverá al estado inactivo y activará el escáner de directorios para monitorear el conjunto de documentos de propiedad local en busca de cambios que puedan requerir reindexación. El NodeIndexer es responsable de recibir los documentos enviados por el nodo iniciador y luego indexarlos utilizando el motor Lucene [7]. Una vez que se completa el indexado, el índice resultante se transmite de vuelta al nodo iniciador y se compila en el índice local del propio nodo indexador. Antes de iniciar el proceso de indexación, se debe enviar un mensaje de CONSULTA INACTIVA. Esta es la primera orden que inicia el proceso de indexación. El nodo indexador determinará si se considera inactivo en función del uso actual de la CPU. Como se describe en la sección del protocolo, si el nodo no se está utilizando y tiene un bajo porcentaje de uso de CPU en general, devolverá IDLE al comando de CONSULTA DE INACTIVIDAD. Si el uso de la CPU de los nodos del indexador está por encima del 50% durante un período de tiempo especificado, se considerará ocupado y responderá al comando IDLE QUERY con BUSY. Si un nodo se determina ocupado, vuelve a su estado de escucha esperando otra CONSULTA INACTIVA de otro nodo iniciador. Si se determina que el nodo está inactivo, entrará en el estado en el que recibirá archivos del nodo iniciador de los que es responsable de indexar. Una vez que todos los archivos son recibidos por el nodo iniciador, indicado por un mensaje de ENVÍO COMPLETO, se inicia una instancia del motor de indexación de Lucene. Los archivos se almacenan en un directorio temporal separado de los documentos locales de los nodos que son responsables de mantener un índice de los mismos. El escritor de índices de Lucene indexa luego todos los archivos transferidos. El índice se almacena en la unidad dentro de un directorio temporal separado del índice actual. Después de que se completa la indexación de los archivos, el nodo indexador entra en el estado en el que los archivos de índice son enviados de vuelta al nodo iniciador. El nodo indexador recorre todos los archivos creados por Lucene's IndexWriter y los transmite al nodo iniciador. Una vez que estos archivos son devueltos, ese índice se fusiona en el índice completo de los nodos indexadores de los archivos existentes. Luego entra en el estado de espera, donde escuchará a otros nodos que requieran distribuir el proceso de indexación. El objeto FileSender es el nodo iniciador equivalente al nodo indexador. Inicia la comunicación entre el nodo iniciador y el nodo que ayudará en la indexación distribuida. El nodo iniciador ejecuta muchas instancias del nodo FileSender, una para cada otro nodo que haya determinado que está inactivo. Al instanciar el FileSender se le pasa el nodo al que es responsable de contactar y el conjunto de archivos que deben ser enviados. El primer trabajo de FileSenders es enviar los archivos que deben ser indexados por el otro nodo inactivo. Los archivos se transmiten uno a la vez al otro nodo. Envía cada archivo utilizando el comando ARCHIVO ENTRANTE. Con ese comando se envía el nombre del archivo que se está enviando y el tamaño en bytes. Una vez que todos los archivos hayan sido enviados, el FileSender envía el comando de ENVÍO COMPLETADO. El FileSender crea una instancia de Lucene's IndexWriter y se prepara para crear el índice en un directorio temporal en el sistema de archivos. El FileSender comenzará a recibir los archivos que se guardarán dentro del índice. Recibe un comando de ARCHIVO DE ÍNDICE con el nombre de los archivos y el tamaño en bytes. Este archivo se transmite luego al directorio de índice temporal en el nodo de FileSender. Después de que se haya completado la transferencia de los archivos de índice, el FileSender notifica a la instancia del compilador de índices que está lista para combinar el índice. Cada instancia del FileSender tiene su propia sección única de espacio temporal para almacenar el índice que ha sido transferido desde el nodo de indexación. Al notificar al IndexCompiler, también pasará la ubicación del directorio particular de FileSenders de ese índice. 4. Apocrita utiliza un modelo de distribución <br>peer-to-peer</br> para distribuir archivos. Los archivos se distribuyen únicamente desde un nodo servidor a un nodo cliente sin tener en cuenta la disponibilidad de las partes de archivo de otros clientes en la red. Esto significa que las transferencias de archivos serán rápidas y eficientes y no deberían afectar severamente la usabilidad de los nodos de servicio desde el punto de vista de un usuario local. El marco de trabajo JXTA se utiliza para implementar funcionalidades <br>peer-to-peer</br>. ",
            "candidates": [],
            "error": [
                [
                    "de igual a igual",
                    "computación Peer-to-Peer",
                    "intercambio de archivos entre pares",
                    "peer-to-peer",
                    "peer-to-peer"
                ]
            ]
        },
        "file sharing system": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Apocrita: A Distributed Peer-to-Peer <br>file sharing system</br> for Intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Distributed Computing and Wireless & Telecommunications Technology University of Guelph-Humber Toronto, ON, M9W 5L7 Canada {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca ABSTRACT Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all member of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are shared between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Another problem arises when a document is made available on a users machine and that user is offline, in which case the document is no longer accessible.",
                "In this paper we present Apocrita, a revolutionary distributed P2P <br>file sharing system</br> for Intranets.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Distributed applications.",
                "General Terms Design, Experimentation, Performance. 1.",
                "INTRODUCTION The Peer-to-Peer (P2P) computing paradigm is becoming a completely new form of mutual resource sharing over the Internet.",
                "With the increasingly common place broadband Internet access, P2P technology has finally become a viable way to share documents and media files.",
                "There are already programs on the market that enable P2P file sharing.",
                "These programs enable millions of users to share files among themselves.",
                "While the utilization of P2P clients is already a gigantic step forward compared to downloading files off websites, using such programs are not without their problems.",
                "The downloaded files still require a lot of manual management by the user.",
                "The user still needs to put the files in the proper directory, manage files with multiple versions, delete the files when they are no longer wanted.",
                "We strive to make the process of sharing documents within an Intranet easier.",
                "Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all members of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are sent between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Furthermore, some organizations do not have a file sharing server or the necessary network infrastructure to enable one.",
                "In this paper we present Apocrita, which is a cost-effective distributed P2P <br>file sharing system</br> for such organizations.",
                "The rest of this paper is organized as follows.",
                "In section 2, we present Apocrita.",
                "The distributed indexing mechanism and protocol are presented in Section 3.",
                "Section 4 presents the peer-topeer distribution model.",
                "A proof of concept prototype is presented in Section 5, and performance evaluations are discussed in Section 6.",
                "Related work is presented is Section 7, and finally conclusions and future work are discussed in Section 8. 2.",
                "APOCRITA Apocrita is a distributed peer-to-peer <br>file sharing system</br>, and has been designed to make finding documents easier in an Intranet environment.",
                "Currently, it is possible for documents to be located on a users machine or on a remote machine.",
                "It is even possible that different revisions could reside on each node on the Intranet.",
                "This means there must be a manual process to maintain document versions.",
                "Apocrita solves this problem using two approaches.",
                "First, due to the inherent nature of Apocrita, the document will only reside on a single logical location.",
                "Second, Apocrita provides a method of reverting to previous document versions.",
                "Apocrita Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page.",
                "To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.",
                "ACMSE07, MARCH 23-24, 2007, WINSTON-SALEM, NC, USA.",
                "COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 will also distribute documents across multiple machines to ensure high availability of important documents.",
                "For example, if a machine contains an important document and the machine is currently inaccessible, the system is capable of maintaining availability of the document through this distribution mechanism.",
                "It provides a simple interface for searching and accessing files that may exist either locally or remotely.",
                "The distributed nature of the documents is transparent to the user.",
                "Apocrita supports a decentralized network model where the peers use a discovery protocol to determine peers.",
                "Apocrita is intended for network users on an Intranet.",
                "The main focus is organizations that may not have a network large enough to require a file server and supporting infrastructure.",
                "It eliminates the need for documents to be manually shared between users while being edited and reduces the possibility of conflicting versions being distributed.",
                "The system also provides some redundancy and in the event of a single machine failure, no important documents will be lost.",
                "It is operating system independent, and easy to access through a web browser or through a standalone application.",
                "To decrease the time required for indexing a large number of documents, the indexing process is distributed across available idle nodes.",
                "Local and remote files should be easily accessible through a virtual mountable file system, providing transparency for users. 3.",
                "DISTRIBUTED INDEXING Apocrita uses a distributed index for all the documents that are available on the Intranet.",
                "Each node will contain part of the full index, and be aware of what part of the index each other node has.",
                "A node will be able to contact each node that contains a unique portion of the index.",
                "In addition, each node has a separate local index of its own documents.",
                "But as discussed later, in the current implementation, each node has a copy of the entire index.",
                "Indexing of the documents is distributed.",
                "Therefore, if a node is in the process of indexing many documents, it will break up the work over the nodes.",
                "Once a nodes local index is updated with the new documents, the distributed index will then be updated.",
                "The current distributed indexing system consists of three separate modules: NodeController, FileSender, and NodeIndexer.",
                "The responsibility of each module is discussed later in this section. 3.1 Indexing Protocol The protocol we have designed for the distributed indexing is depicted in Figure 1.",
                "Figure 1.",
                "Apocrita distributed indexing protocol.",
                "IDLE QUERY: The IDLE QUERY is sent out from the initiating node to determine which other nodes may be able to help with the overall indexing process.",
                "There are no parameters sent with the command.",
                "The receiving node will respond with either a BUSY or IDLE command.",
                "If the IDLE command is received, the initiating node will add the responding node to a list of available distributed indexing helpers.",
                "In the case of a BUSY command being received, the responding node is ignored.",
                "BUSY: Once a node received an IDL QUERY, it will determine whether it can be considered a candidate for distributed indexing.",
                "This determination is based on the overall CPU usage of the node.",
                "If the node is using most of its CPU for other processes, the node will respond to the IDLE QUERY with a BUSY command.",
                "IDLE: As with the case of the BUSY response, the node receiving the IDLE QUERY will determine its eligibility for distributed indexing.",
                "To be considered a candidate for distributed indexing, the overall CPU usage must be at a minimum to all for dedicated indexing of the distributed documents.",
                "If this is the case, the node will respond with an IDLE command.",
                "INCOMING FILE: Once the initiating node assembles a set of idle nodes to assist with the distributed indexing, it will divide the documents to be sent to the nodes.",
                "To do this, it sends an INCOMING FILE message, which contains the name of the file as well as the size in bytes.",
                "After the INCOMING FILE command has been sent, the initiating node will begin to stream the file to the other node.",
                "The initiating node will loop through the files that are to be sent to the other node; each file stream being preceded by the INCOMING FILE command with the appropriate parameters.",
                "INDEX FILE: Once the indexing node has completed the indexing process of the set of files, it must send the resultant index back to the initiating node.",
                "The index is comprised of multiple files, which exist on the file system of the indexing node.",
                "As with the INCOMING FILE command, the indexing node streams each index file after sending an INDEX FILE command.",
                "The INDEX FILE command has two parameters: the first being the name of the index, and the second is the size of the file in bytes.",
                "SEND COMPLETE: When sending the sets of files for both the index and the files to be indexed, the node must notify the corresponding node when the process is complete.",
                "Once the initiating node is finished sending the set of documents to be indexed, it will then send a SEND COMPLETE command indicating to the indexing node that there are no more files and the node can proceed with indexing the files.",
                "In the case of the initiating node sending the index files, the indexing node will complete the transfer with the SEND COMPLETE command indicating to the initiating node that there are no more index files to be sent and the initiating node can then assemble those index files into the main index.",
                "The NodeController is responsible for setting up connections with nodes in the idle state to distribute the indexing process.",
                "Using JXTA [5], the node controller will obtain a set of nodes.",
                "This set of nodes is iterated and each one is sent the IDLE QUERY command.",
                "The nodes that respond with idle are then collected.",
                "The set of idle nodes includes the node initiating the distributed indexing process, referred to as the local node.",
                "Once the collection of idle nodes is obtained, the node updates the set of controllers and evenly divides the set of documents that are to be indexed.",
                "For example, if there are 100 documents and 10 nodes (including the local node) then each node will have 10 documents to index.",
                "For each indexing node an instance of the FileSender object is created.",
                "The FileSender is aware of the set of documents that node is responsible for.",
                "Once a FileSender object has been created for each node, the NodeController waits for each FileSender to complete.",
                "When the FileSender objects have completed the NodeController will take the resultant indexes from 175 each node and pass them to an instance of the IndexCompiler, which maintains the index and the list of FileSenders.",
                "Once the IndexCompiler has completed it will return to the idle state and activate the directory scanner to monitor the locally owned set of documents for changes that may require reindexing.",
                "The NodeIndexer is responsible for receiving documents sent to it by the initiating node and then indexing them using the Lucene engine [7].",
                "Once the indexing is complete the resulting index is streamed back to the initiating node as well as compiled in the indexer nodes own local index.",
                "Before initiating the indexing process it must be sent an IDLE QUERY message.",
                "This is the first command that sets off the indexing process.",
                "The indexer node will determine whether it is considered idle based on the current CPU usage.",
                "As outlined in the protocol section if the node is not being used and has a low overall CPU usage percentage it will return IDLE to the IDLE QUERY command.",
                "If the indexer nodes CPU usage is above 50% for a specified amount of time it is then considered to be busy and will respond to the IDLE QUERY command with BUSY.",
                "If a node is determined busy it returns to its listening state waiting for another IDLE QUERY from another initiating node.",
                "If the node is determined to be idle it will enter the state where it will receive files from the initiating node that it is responsible for indexing.",
                "Once all of the files are received by the initiating node, indicated by a SEND COMPLETE message, it starts an instance of the Lucene indexing engine.",
                "The files are stored in a temporary directory separate from the nodes local documents that it is responsible for maintaining an index of.",
                "The Lucene index writer then indexes all of the transferred files.",
                "The index is stored on the drive within a temporary directory separate from the current index.",
                "After the indexing of the files completes the indexer node enters the state where the index files are sent back to the initiating node.",
                "The indexer node loops through all of the files created by Lucenes IndexWriter and streams them to the initiating node.",
                "Once these files are sent back that index is then merged into the indexer nodes own full index of the existing files.",
                "It then enters the idle state where it will then listen for any other nodes that required distributing the indexing process.",
                "The FileSender object is the initiating node equivalent of the indexer node.",
                "It initiates the communication between the initiating node and the node that will assist in the distributed indexing.",
                "The initiating node runs many instances of the FileSender node one for each other node it has determined to be idle.",
                "Upon instantiation of the FileSender it is passed the node that it is responsible for contacting and the set of files that must be sent.",
                "The FileSenders first job is to send the files that are to be indexed by the other idle node.",
                "The files are streamed one at a time to the other node.",
                "It sends each file using the INCOMING FILE command.",
                "With that command it sends the name of the file being sent and the size in bytes.",
                "Once all files have been sent the FileSender sends the SEND COMPLETE command.",
                "The FileSender creates an instance of Lucenes IndexWriter and prepares to create the index in a temporary directory on the file system.",
                "The FileSender will begin to receive the files that are to be saved within the index.",
                "It receives an INDEX FILE command with the name of the files and the size in bytes.",
                "This file is then streamed into the temporary index directory on the FileSender node.",
                "After the transfer of the index files has been completed the FileSender notifies the instance of the index compiler that it is ready to combine the index.",
                "Each instance of the FileSender has its own unique section of temporary space to store the index that has been transferred back from the indexing node.",
                "When notifying the IndexCompiler it will also pass the location of the particular FileSenders directory location of that index. 4.",
                "PEER-TO-PEER DISTRIBUTION Apocrita uses a peer-to-peer distribution model in order to distribute files.",
                "Files are distributed solely from a serving node to a client node without regard for the availability of file pieces from other clients in the network.",
                "This means that the file transfers will be fast and efficient and should not severely affect the usability of serving nodes from the point of view of a local user.",
                "The JXTA framework [5] is used in order to implement peer-to-peer functionality.",
                "This has been decided due to the extremely shorttimeline of the project which allows us to take advantage of over five years of testing and development and support from many large organizations employing JXTA in their own products.",
                "We are not concerned with any potential quality problems because JXTA is considered to be the most mature and stable peer-to-peer framework available.",
                "Using JXTA terminology, there are three types of peers used in node classification.",
                "Edge peers are typically low-bandwidth, non-dedicated nodes.",
                "Due to these characteristics, edge peers are not used with Apocrita.",
                "Relay peers are typically higher-bandwidth, dedicated nodes.",
                "This is the classification of all nodes in the Apocrita network, and, as such, are the default classification used.",
                "Rendezvous peers are used to coordinate message passing between nodes in the Apocrita network.",
                "This means that a minimum of one rendezvous peer per subnet is required. 4.1 Peer Discovery The Apocrita server subsystem uses the JXTA Peer Discovery Protocol (PDP) in order to find participating peers within the network as shown in Figure 2.",
                "Figure 2.",
                "Apocrita peer discovery process. 176 The PDP listens for peer advertisements from other nodes in the Apocrita swarm.",
                "If a peer advertisement is detected, the server will attempt to join the peer group and start actively contributing to the network.",
                "If no peers are found by the discovery service, the server will create a new peer group and start advertising this peer group.",
                "This new peer group will be periodically advertised on the network; any new peers joining the network will attach to this peer group.",
                "A distinct advantage of using the JXTA PDP is that Apocrita does not have to be sensitive to particular networking nuances such as Maximum Transmission Unit (MTU).",
                "In addition, Apocrita does not have to support one-to-many packet delivery methods such as multicast and instead can rely on JXTA for this support. 4.2 Index Query Operation All nodes in the Apocrita swarm have a complete and up-to-date copy of the network index stored locally.",
                "This makes querying the index for search results trivial.",
                "Unlike the Gnutella protocol, a query does not have to propagate throughout the network.",
                "This also means that the time to return query results is very fast - much faster than protocols that rely on nodes in the network to pass the query throughout the network and then wait for results.",
                "This is demonstrated in Figure 3.",
                "Figure 3.",
                "Apocrita query operation.",
                "Each document in the swarm has a unique document identification number (ID).",
                "A node will query the index and a result will be returned with both the document ID number as well as a list of peers with a copy of the matched document ID.",
                "It is then the responsibility of the searching peer to contact the peers in the list to negotiate file transfer between the client and server. 5.",
                "PROTOTYPE IMPLEMENTATION Apocrita uses the Lucene framework [7], which is a project under development by the Apache Software Foundation.",
                "Apache Lucene is a high-performance, full-featured text search engine library written entirely in Java.",
                "In the current implementation, Apocrita is only capable of indexing plain text documents.",
                "Apocrita uses the JXTA framework [5] as a peer-to-peer transport library between nodes.",
                "JXTA is used to pass both messages and files between nodes in the search network.",
                "By using JXTA, Apocrita takes advantage of a reliable, and proven peer-to-peer transport mechanism.",
                "It uses the pipe facility in order to pass messages and files between nodes.",
                "The pipe facility provides many different types of pipe advertisements.",
                "This includes an unsecured unicast pipe, a secured unicast pipe, and a propagated unsecured pipe.",
                "Message passing is used to pass status messages between nodes in order to aid in indexing, searching, and retrieval.",
                "For example, a node attempting to find an idle node to participate in indexing will query nodes via the message facility.",
                "Idle nodes will reply with a status message to indicate they are available to start indexing.",
                "File passing is used within Apocrita for file transfer.",
                "After a file has been searched for and located within the peer group, a JXTA socket will be opened and file transfer will take place.",
                "A JXTA socket is similar to a standard Java socket, however a JXTA socket uses JXTA pipes in underlying network transport.",
                "File passing uses an unsecured unicast pipe in order to transfer data.",
                "File passing is also used within Apocrita for index transfer.",
                "Index transfer works exactly like a file transfer.",
                "In fact, the index transfer actually passes the index as a file.",
                "However, there is one key difference between file transfer and index transfer.",
                "In the case of file transfer, a socket is created between only two nodes.",
                "In the case of index transfer, a socket must be created between all nodes in the network in order to pass the index, which allows for all nodes to have a full and complete index of the entire network.",
                "In order to facilitate this transfer efficiently, index transfer will use an unsecured propagated pipe to communicate with all nodes in the Apocrita network. 6.",
                "PERFORMANCE EVALUATION It is difficult to objectively benchmark the results obtained through Apocrita because there is no other system currently available with the same goals as Apocrita.",
                "We have, however, evaluated the performance of the critical sections of the system.",
                "The critical sections were determined to be the processes that are the most time intensive.",
                "The evaluation was completed on standard lab computers on a 100Mb/s Ethernet LAN; the machines run Windows XP with a Pentium 4 CPU running at 2.4GHz with 512 MB of RAM.",
                "The indexing time has been run against both: the Time Magazine collection [8], which contains 432 documents and 83 queries and their most relevant results, and the NPL collection [8] that has a total of 11,429 documents and 93 queries with expected results.",
                "Each document ranges in size between 4KB and 8KB.",
                "As Figure 4 demonstrates, the number of nodes involved in the indexing process affects the time taken to complete the indexing processsometimes even drastically.",
                "Figure 4.",
                "Node vs. index time.",
                "The difference in going from one indexing node to two indexing nodes is the most drastic and equates to an indexing time 37% faster than a single indexing node.",
                "The different between two 177 indexing nodes and three indexing nodes is still significant and represents a 16% faster time than two indexing nodes.",
                "As the number of indexing nodes increases the results are less dramatic.",
                "This can be attributed to the time overhead associated with having many nodes perform indexing.",
                "The time needed to communicate with a node is constant, so as the number of nodes increases, this constant becomes more prevalent.",
                "Also, the complexity of joining the indexing results is a complex operation and is complicated further as the number of indexing nodes increases.",
                "Socket performance is also a very important part of Apocrita.",
                "Benchmarks were performed using a 65MB file on a system with both the client and server running locally.",
                "This was done to isolate possible network issues.",
                "Although less drastic, similar results were shown when the client and server run on independent hardware.",
                "In order to mitigate possible unexpected errors, each test was run 10 times.",
                "Figure 5.",
                "Java sockets vs. JXTA sockets.",
                "As Figure 5 demonstrates, the performance of JXTA sockets is abysmal as compared to the performance of standard Java sockets.",
                "The minimum transfer rate obtained using Java sockets is 81,945KB/s while the minimum transfer rater obtained using JXTA sockets is much lower at 3, 805KB/s.",
                "The maximum transfer rater obtain using Java sockets is 97,412KB/s while the maximum transfer rate obtained using JXTA sockets is 5,530KB/s.",
                "Finally, the average transfer rate using Java sockets is 87,540KB/s while the average transfer rate using JXTA sockets is 4,293KB/s.",
                "The major problem found in these benchmarks is that the underlying network transport mechanism does not perform as quickly or efficiently as expected.",
                "In order to garner a performance increase, the JXTA framework needs to be substituted with a more traditional approach.",
                "The indexing time is also a bottleneck and will need to be improved for the overall quality of Apocrita to be improved. 7.",
                "RELATED WORK Several decentralized P2P systems [1, 2, 3] exist today that Apocrita features some of their functionality.",
                "However, Apocrita also has unique novel searching and indexing features that make this system unique.",
                "For example, Majestic-12 [4] is a distributed search and indexing project designed for searching the Internet.",
                "Each user would install a client, which is responsible for indexing a portion of the web.",
                "A central area for querying the index is available on the Majestic-12 web page.",
                "The index itself is not distributed, only the act of indexing is distributed.",
                "The distributed indexing aspect of this project most closely relates Apocrita goals.",
                "YaCy [6] is a peer-to-peer web search application.",
                "YaCy consists of a web crawler, an indexer, a built-in database engine, and a p2p index exchange protocol.",
                "YaCy is designed to maintain a distributed index of the Internet.",
                "It used a distributed hash table (DHT) to maintain the index.",
                "The local node is used to query but all results that are returned are accessible on the Internet.",
                "YaCy used many peers and DHT to maintain a distributed index.",
                "Apocrita will also use a distributed index in future implementations and may benefit from using an implementation of a DHT.",
                "YaCy however, is designed as a web search engine and, as such solves a much different problem than Apocrita. 8.",
                "CONCLUSIONS AND FUTURE WORK We presented Apocrita, a distributed P2P searching and indexing system intended for network users on an Intranet.",
                "It can help organizations with no network file server or necessary network infrastructure to share documents.",
                "It eliminates the need for documents to be manually shared among users while being edited and reduce the possibility of conflicting versions being distributed.",
                "A proof of concept prototype has been constructed, but the results from measuring the network transport mechanism and the indexing time were not as impressive as initially envisioned.",
                "Despite these shortcomings, the experience gained from the design and implementation of Apocrita has given us more insight into building challenging distributed systems.",
                "For future work, Apocrita will have a smart content distribution model in which a single instance of a file can intelligently and transparently replicate throughout the network to ensure a copy of every important file will always be available regardless of the availability of specific nodes in the network.",
                "In addition, we plan to integrate a revision control system into the content distribution portion of Apocrita so that users could have the ability to update an existing file that they found and have the old revision maintained and the new revision propagated.",
                "Finally, the current implementation has some overhead and redundancy due to the fact that the entire index is maintained on each individual node, we plan to design a distributed index. 9.",
                "REFERENCES [1] Rodrigues, R., Liskov, B., Shrira, L.: The Design of a Robust Peer-to-Peer System.",
                "Available online: http://www.pmg.lcs.mit.edu/~rodrigo/ew02-robust.pdf. [2] Chawathe, Y., Ratnasamy, S., Breslau, L., Lanham, N., and Chenker, S.: Making Gnutella-like P2P Systems Scalable.",
                "In Proceedings of SIGCOMM03, Karlsruhe, Germany. [3] Harvest: A Distributed Search System: http://harvest.sourceforge.net. [4] Majestic-12: Distributed Search Engine: http://www.majestic12.co.uk. [5] JXTA: http://www.jxta.org. [6] YaCy: Distributed P2P-based Web Indexing: http://www.yacy.net/yacy. [7] Lucene Search Engine Library: http://lucene.apache.org. [8] Test Collections (Time Magazine and NPL): www.dcs.gla.ac.uk/idom/ir_resources/test_collections. 178"
            ],
            "original_annotated_samples": [
                "Apocrita: A Distributed Peer-to-Peer <br>file sharing system</br> for Intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Distributed Computing and Wireless & Telecommunications Technology University of Guelph-Humber Toronto, ON, M9W 5L7 Canada {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca ABSTRACT Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all member of the organization.",
                "In this paper we present Apocrita, a revolutionary distributed P2P <br>file sharing system</br> for Intranets.",
                "In this paper we present Apocrita, which is a cost-effective distributed P2P <br>file sharing system</br> for such organizations.",
                "APOCRITA Apocrita is a distributed peer-to-peer <br>file sharing system</br>, and has been designed to make finding documents easier in an Intranet environment."
            ],
            "translated_annotated_samples": [
                "Apocrita: Un <br>sistema de intercambio de archivos</br> distribuido de igual a igual para intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Computación Distribuida y Tecnología Inalámbrica y de Telecomunicaciones Universidad de Guelph-Humber Toronto, ON, M9W 5L7 Canadá {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca RESUMEN Muchas organizaciones necesitan redactar documentos para diversos fines, y es posible que estos documentos deban ser accesibles para todos los miembros de la organización.",
                "En este artículo presentamos Apocrita, un revolucionario <br>sistema distribuido de intercambio de archivos</br> P2P para intranets.",
                "En este artículo presentamos Apocrita, que es un <br>sistema de intercambio de archivos</br> P2P distribuido y rentable para dichas organizaciones.",
                "Apocrita es un <br>sistema de intercambio de archivos</br> entre pares distribuido, y ha sido diseñado para facilitar la búsqueda de documentos en un entorno de Intranet."
            ],
            "translated_text": "Apocrita: Un <br>sistema de intercambio de archivos</br> distribuido de igual a igual para intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Computación Distribuida y Tecnología Inalámbrica y de Telecomunicaciones Universidad de Guelph-Humber Toronto, ON, M9W 5L7 Canadá {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca RESUMEN Muchas organizaciones necesitan redactar documentos para diversos fines, y es posible que estos documentos deban ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un documento. En algunos casos, estos documentos son compartidos entre autores, a través de correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento. Incluso puede haber varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario. Otro problema surge cuando un documento está disponible en la máquina de un usuario y ese usuario está desconectado, en cuyo caso el documento ya no es accesible. En este artículo presentamos Apocrita, un revolucionario <br>sistema distribuido de intercambio de archivos</br> P2P para intranets. Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos - Aplicaciones Distribuidas. Términos generales Diseño, Experimentación, Rendimiento. 1. INTRODUCCIÓN El paradigma de computación Peer-to-Peer (P2P) se está convirtiendo en una forma completamente nueva de compartir recursos mutuos a través de Internet. Con el acceso cada vez más común a Internet de banda ancha, la tecnología P2P finalmente se ha convertido en una forma viable de compartir documentos y archivos multimedia. Ya existen programas en el mercado que permiten compartir archivos P2P. Estos programas permiten a millones de usuarios compartir archivos entre ellos. Si bien la utilización de clientes P2P ya es un gran avance en comparación con descargar archivos de sitios web, el uso de dichos programas no está exento de problemas. Los archivos descargados todavía requieren mucho manejo manual por parte del usuario. El usuario todavía necesita colocar los archivos en el directorio adecuado, gestionar archivos con múltiples versiones, eliminar los archivos cuando ya no se deseen. Nos esforzamos por hacer que el proceso de compartir documentos dentro de una Intranet sea más fácil. Muchas organizaciones están obligadas a redactar documentos para diversos fines, y dichos documentos pueden necesitar ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un documento. En algunos casos, estos documentos son enviados entre autores, por correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o que se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento. Puede haber incluso varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario. Además, algunas organizaciones no cuentan con un servidor de intercambio de archivos o la infraestructura de red necesaria para habilitar uno. En este artículo presentamos Apocrita, que es un <br>sistema de intercambio de archivos</br> P2P distribuido y rentable para dichas organizaciones. El resto de este documento está organizado de la siguiente manera. En la sección 2, presentamos Apocrita. El mecanismo de indexación distribuida y el protocolo se presentan en la Sección 3. La sección 4 presenta el modelo de distribución peer-to-peer. Se presenta un prototipo de prueba de concepto en la Sección 5, y las evaluaciones de rendimiento se discuten en la Sección 6. El trabajo relacionado se presenta en la Sección 7, y finalmente las conclusiones y el trabajo futuro se discuten en la Sección 8. Apocrita es un <br>sistema de intercambio de archivos</br> entre pares distribuido, y ha sido diseñado para facilitar la búsqueda de documentos en un entorno de Intranet. Actualmente, es posible que los documentos se encuentren en la máquina de un usuario o en una máquina remota. Es incluso posible que diferentes revisiones puedan residir en cada nodo de la Intranet. Esto significa que debe haber un proceso manual para mantener las versiones de los documentos. Apocrita resuelve este problema utilizando dos enfoques. Primero, debido a la naturaleza inherente de Apocrita, el documento solo residirá en una ubicación lógica única. En segundo lugar, Apocrita proporciona un método para revertir a versiones anteriores de documentos. Se concede el permiso de hacer copias digitales o impresas de todo o parte de este trabajo para uso personal o en el aula sin cargo alguno, siempre y cuando las copias no se realicen ni distribuyan con fines de lucro o ventaja comercial, y que las copias lleven este aviso y la cita completa en la primera página. Para copiar de otra manera, o republicar, publicar en servidores o redistribuir en listas, se requiere permiso específico previo y/o un pago. ACMSE07, 23-24 DE MARZO DE 2007, WINSTON-SALEM, NC, EE. UU. COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 también distribuirá documentos en múltiples máquinas para garantizar la alta disponibilidad de documentos importantes. Por ejemplo, si una máquina contiene un documento importante y actualmente no es accesible, el sistema es capaz de mantener la disponibilidad del documento a través de este mecanismo de distribución. Proporciona una interfaz sencilla para buscar y acceder a archivos que pueden existir tanto local como remotamente. La naturaleza distribuida de los documentos es transparente para el usuario. Apocrita apoya un modelo de red descentralizada en el que los pares utilizan un protocolo de descubrimiento para determinar los pares. Apocrita está destinado para usuarios de red en una Intranet. El enfoque principal son las organizaciones que pueden no tener una red lo suficientemente grande como para necesitar un servidor de archivos y la infraestructura de soporte. Elimina la necesidad de que los documentos sean compartidos manualmente entre usuarios mientras se editan y reduce la posibilidad de que se distribuyan versiones conflictivas. El sistema también proporciona cierta redundancia y en caso de fallo de una máquina, no se perderán documentos importantes. Es independiente del sistema operativo y fácil de acceder a través de un navegador web o mediante una aplicación independiente. Para disminuir el tiempo requerido para indexar una gran cantidad de documentos, el proceso de indexación se distribuye entre los nodos inactivos disponibles. Los archivos locales y remotos deben ser fácilmente accesibles a través de un sistema de archivos virtual montable, proporcionando transparencia para los usuarios. Apocrita utiliza un índice distribuido para todos los documentos disponibles en la intranet. Cada nodo contendrá una parte del índice completo y estará al tanto de qué parte del índice tiene cada otro nodo. Un nodo podrá contactar a cada nodo que contenga una porción única del índice. Además, cada nodo tiene un índice local separado de sus propios documentos. Pero como se discutió más tarde, en la implementación actual, cada nodo tiene una copia de todo el índice. La indexación de los documentos está distribuida. Por lo tanto, si un nodo está en proceso de indexar muchos documentos, distribuirá el trabajo entre los nodos. Una vez que el índice local de un nodo se actualiza con los nuevos documentos, entonces se actualizará el índice distribuido. El sistema de indexación distribuida actual consta de tres módulos separados: NodeController, FileSender y NodeIndexer. La responsabilidad de cada módulo se discute más adelante en esta sección. 3.1 Protocolo de indexación El protocolo que hemos diseñado para la indexación distribuida se muestra en la Figura 1. Figura 1. Protocolo de indexación distribuida Apocrita. La CONSULTA INACTIVA se envía desde el nodo iniciador para determinar qué otros nodos pueden ayudar con el proceso de indexación en general. No se enviaron parámetros con el comando. El nodo receptor responderá con un comando BUSY o IDLE. Si se recibe el comando IDLE, el nodo iniciador agregará el nodo que responde a una lista de ayudantes de indexación distribuida disponibles. En caso de recibir un comando OCUPADO, el nodo que responde es ignorado. OCUPADO: Una vez que un nodo recibe una CONSULTA IDL, determinará si puede considerarse un candidato para la indexación distribuida. Esta determinación se basa en el uso general de la CPU del nodo. Si el nodo está utilizando la mayor parte de su CPU para otros procesos, el nodo responderá a la CONSULTA DE INACTIVIDAD con un comando OCUPADO. Como en el caso de la respuesta BUSY, el nodo que recibe la CONSULTA DE INACTIVIDAD determinará su elegibilidad para la indexación distribuida. Para ser considerado un candidato para la indexación distribuida, el uso total de la CPU debe ser mínimo para permitir la indexación dedicada de los documentos distribuidos. Si este es el caso, el nodo responderá con un comando IDLE. ARCHIVO ENTRANTE: Una vez que el nodo iniciador reúne un conjunto de nodos inactivos para ayudar con la indexación distribuida, dividirá los documentos que se enviarán a los nodos. Para hacer esto, envía un mensaje de ARCHIVO ENTRANTE, que contiene el nombre del archivo y su tamaño en bytes. Después de que se haya enviado el comando ARCHIVO ENTRANTE, el nodo iniciador comenzará a transmitir el archivo al otro nodo. El nodo iniciador recorrerá los archivos que se enviarán al otro nodo; cada flujo de archivo estará precedido por el comando ARCHIVO ENTRANTE con los parámetros apropiados. ARCHIVO DE ÍNDICE: Una vez que el nodo de indexación haya completado el proceso de indexación del conjunto de archivos, debe enviar el índice resultante de vuelta al nodo iniciador. El índice está compuesto por varios archivos, que existen en el sistema de archivos del nodo de indexación. Al igual que con el comando INCOMING FILE, el nodo de indexación transmite cada archivo de índice después de enviar un comando INDEX FILE. El comando INDEX FILE tiene dos parámetros: el primero es el nombre del índice y el segundo es el tamaño del archivo en bytes. Al enviar los conjuntos de archivos tanto para el índice como para los archivos a ser indexados, el nodo debe notificar al nodo correspondiente cuando el proceso esté completo. Una vez que el nodo iniciador haya terminado de enviar el conjunto de documentos a ser indexados, enviará entonces un comando de ENVÍO COMPLETO indicando al nodo de indexación que no hay más archivos y que el nodo puede proceder con la indexación de los archivos. En el caso de que el nodo iniciador envíe los archivos de índice, el nodo de indexación completará la transferencia con el comando ENVIAR COMPLETO indicando al nodo iniciador que no hay más archivos de índice por enviar y que el nodo iniciador puede entonces ensamblar esos archivos de índice en el índice principal. El NodeController es responsable de establecer conexiones con nodos en estado de reposo para distribuir el proceso de indexación. Usando JXTA [5], el controlador de nodos obtendrá un conjunto de nodos. Este conjunto de nodos se itera y a cada uno se le envía el comando IDLE QUERY. Los nodos que responden con inactividad son luego recopilados. El conjunto de nodos inactivos incluye al nodo que inicia el proceso de indexación distribuida, conocido como nodo local. Una vez que se obtiene la colección de nodos inactivos, el nodo actualiza el conjunto de controladores y divide equitativamente el conjunto de documentos que se van a indexar. Por ejemplo, si hay 100 documentos y 10 nodos (incluyendo el nodo local) entonces cada nodo tendrá 10 documentos para indexar. Para cada nodo de indexación se crea una instancia del objeto FileSender. El FileSender es consciente del conjunto de documentos de los que el nodo es responsable. Una vez que se ha creado un objeto FileSender para cada nodo, el NodeController espera a que cada FileSender termine. Cuando los objetos FileSender hayan completado, el NodeController tomará los índices resultantes de 175 nodos y los pasará a una instancia del IndexCompiler, que mantiene el índice y la lista de FileSenders. Una vez que el IndexCompiler haya completado, volverá al estado inactivo y activará el escáner de directorios para monitorear el conjunto de documentos de propiedad local en busca de cambios que puedan requerir reindexación. El NodeIndexer es responsable de recibir los documentos enviados por el nodo iniciador y luego indexarlos utilizando el motor Lucene [7]. Una vez que se completa el indexado, el índice resultante se transmite de vuelta al nodo iniciador y se compila en el índice local del propio nodo indexador. Antes de iniciar el proceso de indexación, se debe enviar un mensaje de CONSULTA INACTIVA. Esta es la primera orden que inicia el proceso de indexación. El nodo indexador determinará si se considera inactivo en función del uso actual de la CPU. Como se describe en la sección del protocolo, si el nodo no se está utilizando y tiene un bajo porcentaje de uso de CPU en general, devolverá IDLE al comando de CONSULTA DE INACTIVIDAD. Si el uso de la CPU de los nodos del indexador está por encima del 50% durante un período de tiempo especificado, se considerará ocupado y responderá al comando IDLE QUERY con BUSY. Si un nodo se determina ocupado, vuelve a su estado de escucha esperando otra CONSULTA INACTIVA de otro nodo iniciador. Si se determina que el nodo está inactivo, entrará en el estado en el que recibirá archivos del nodo iniciador de los que es responsable de indexar. Una vez que todos los archivos son recibidos por el nodo iniciador, indicado por un mensaje de ENVÍO COMPLETO, se inicia una instancia del motor de indexación de Lucene. Los archivos se almacenan en un directorio temporal separado de los documentos locales de los nodos que son responsables de mantener un índice de los mismos. El escritor de índices de Lucene indexa luego todos los archivos transferidos. El índice se almacena en la unidad dentro de un directorio temporal separado del índice actual. Después de que se completa la indexación de los archivos, el nodo indexador entra en el estado en el que los archivos de índice son enviados de vuelta al nodo iniciador. El nodo indexador recorre todos los archivos creados por Lucene's IndexWriter y los transmite al nodo iniciador. Una vez que estos archivos son devueltos, ese índice se fusiona en el índice completo de los nodos indexadores de los archivos existentes. Luego entra en el estado de espera, donde escuchará a otros nodos que requieran distribuir el proceso de indexación. El objeto FileSender es el nodo iniciador equivalente al nodo indexador. Inicia la comunicación entre el nodo iniciador y el nodo que ayudará en la indexación distribuida. El nodo iniciador ejecuta muchas instancias del nodo FileSender, una para cada otro nodo que haya determinado que está inactivo. Al instanciar el FileSender se le pasa el nodo al que es responsable de contactar y el conjunto de archivos que deben ser enviados. El primer trabajo de FileSenders es enviar los archivos que deben ser indexados por el otro nodo inactivo. Los archivos se transmiten uno a la vez al otro nodo. Envía cada archivo utilizando el comando ARCHIVO ENTRANTE. Con ese comando se envía el nombre del archivo que se está enviando y el tamaño en bytes. Una vez que todos los archivos hayan sido enviados, el FileSender envía el comando de ENVÍO COMPLETADO. El FileSender crea una instancia de Lucene's IndexWriter y se prepara para crear el índice en un directorio temporal en el sistema de archivos. El FileSender comenzará a recibir los archivos que se guardarán dentro del índice. Recibe un comando de ARCHIVO DE ÍNDICE con el nombre de los archivos y el tamaño en bytes. Este archivo se transmite luego al directorio de índice temporal en el nodo de FileSender. Después de que se haya completado la transferencia de los archivos de índice, el FileSender notifica a la instancia del compilador de índices que está lista para combinar el índice. Cada instancia del FileSender tiene su propia sección única de espacio temporal para almacenar el índice que ha sido transferido desde el nodo de indexación. Al notificar al IndexCompiler, también pasará la ubicación del directorio particular de FileSenders de ese índice. 4. Apocrita utiliza un modelo de distribución peer-to-peer para distribuir archivos. Los archivos se distribuyen únicamente desde un nodo servidor a un nodo cliente sin tener en cuenta la disponibilidad de las partes de archivo de otros clientes en la red. Esto significa que las transferencias de archivos serán rápidas y eficientes y no deberían afectar severamente la usabilidad de los nodos de servicio desde el punto de vista de un usuario local. El marco de trabajo JXTA se utiliza para implementar funcionalidades peer-to-peer. Esto se ha decidido debido al plazo extremadamente corto del proyecto, lo que nos permite aprovechar más de cinco años de pruebas y desarrollo, así como el apoyo de muchas organizaciones grandes que emplean JXTA en sus propios productos. No estamos preocupados por posibles problemas de calidad porque JXTA se considera el marco de pares a pares más maduro y estable disponible. Usando la terminología de JXTA, hay tres tipos de pares utilizados en la clasificación de nodos. Los pares de borde suelen ser nodos de baja capacidad de ancho de banda y no dedicados. Debido a estas características, los pares de borde no se utilizan con Apocrita. Los nodos de retransmisión suelen ser nodos dedicados de mayor ancho de banda. Esta es la clasificación de todos los nodos en la red de Apocrita, y, como tal, es la clasificación predeterminada utilizada. Los pares de encuentro se utilizan para coordinar el intercambio de mensajes entre nodos en la red de Apocrita. Esto significa que se requiere un mínimo de un par de encuentro por subred. 4.1 Descubrimiento de pares El subsistema del servidor Apocrita utiliza el Protocolo de Descubrimiento de Pares (PDP) de JXTA para encontrar pares participantes dentro de la red, como se muestra en la Figura 2. Figura 2. El proceso de descubrimiento de pares de Apocrita. 176 El PDP escucha los anuncios de pares de otros nodos en el enjambre de Apocrita. Si se detecta un anuncio de pares, el servidor intentará unirse al grupo de pares y comenzar a contribuir activamente a la red. Si el servicio de descubrimiento no encuentra pares, el servidor creará un nuevo grupo de pares y comenzará a anunciar este grupo de pares. Este nuevo grupo de pares se anunciará periódicamente en la red; cualquier nuevo par que se una a la red se conectará a este grupo de pares. Una ventaja distintiva de usar el PDP de JXTA es que Apocrita no tiene que ser sensible a matices de redes particulares como la Unidad de Transmisión Máxima (MTU). Además, Apocrita no tiene que admitir métodos de entrega de paquetes uno a muchos, como la multidifusión, y en su lugar puede depender de JXTA para este soporte. Operación de consulta de índice 4.2 Todos los nodos en el enjambre de Apocrita tienen una copia completa y actualizada del índice de red almacenado localmente. Esto hace que la consulta del índice para obtener resultados de búsqueda sea trivial. A diferencia del protocolo Gnutella, una consulta no tiene que propagarse por toda la red. Esto también significa que el tiempo para devolver los resultados de la consulta es muy rápido, mucho más rápido que los protocolos que dependen de los nodos en la red para pasar la consulta a lo largo de la red y luego esperar los resultados. Esto se demuestra en la Figura 3. Figura 3. Operación de consulta de Apocrita. Cada documento en el enjambre tiene un número de identificación único (ID) para el documento. Un nodo consultará el índice y se devolverá un resultado con el número de identificación del documento, así como una lista de pares con una copia del documento coincidente. Es entonces responsabilidad del par que busca contactar a los pares de la lista para negociar la transferencia de archivos entre el cliente y el servidor. IMPLEMENTACIÓN DEL PROTOTIPO Apocrita utiliza el marco de trabajo Lucene [7], el cual es un proyecto en desarrollo por la Fundación de Software Apache. Apache Lucene es una biblioteca de motor de búsqueda de texto de alto rendimiento y con todas las funciones, escrita completamente en Java. En la implementación actual, Apocrita solo es capaz de indexar documentos de texto plano. Apocrita utiliza el marco de trabajo JXTA [5] como una biblioteca de transporte peer-to-peer entre nodos. JXTA se utiliza para pasar tanto mensajes como archivos entre nodos en la red de búsqueda. Al utilizar JXTA, Apocrita aprovecha un mecanismo de transporte peer-to-peer confiable y probado. Utiliza la facilidad de tuberías para pasar mensajes y archivos entre nodos. La instalación de tuberías ofrece muchos tipos diferentes de anuncios de tuberías. Esto incluye un conducto unicast no seguro, un conducto unicast seguro y un conducto no seguro propagado. El paso de mensajes se utiliza para enviar mensajes de estado entre nodos con el fin de ayudar en la indexación, búsqueda y recuperación. Por ejemplo, un nodo que intenta encontrar un nodo inactivo para participar en la indexación consultará a otros nodos a través de la facilidad de mensajes. Los nodos inactivos responderán con un mensaje de estado para indicar que están disponibles para comenzar a indexar. La transferencia de archivos se utiliza dentro de Apocrita para la transferencia de archivos. Después de que un archivo haya sido buscado y localizado dentro del grupo de pares, se abrirá un socket JXTA y se llevará a cabo la transferencia de archivos. Un socket JXTA es similar a un socket Java estándar, sin embargo un socket JXTA utiliza tuberías JXTA en el transporte de red subyacente. El paso de archivos utiliza un conducto unicast no seguro para transferir datos. La transferencia de archivos también se utiliza dentro de Apocrita para la transferencia de índices. La transferencia de índice funciona exactamente igual que la transferencia de archivos. De hecho, la transferencia de índice realmente pasa el índice como un archivo. Sin embargo, hay una diferencia clave entre la transferencia de archivos y la transferencia de índices. En el caso de la transferencia de archivos, se crea un socket entre solo dos nodos. En el caso de la transferencia de índices, se debe crear un socket entre todos los nodos de la red para pasar el índice, lo que permite que todos los nodos tengan un índice completo y total de toda la red. Para facilitar esta transferencia de manera eficiente, la transferencia de índices utilizará un tubo propagado no seguro para comunicarse con todos los nodos en la red de Apocrita. 6. EVALUACIÓN DEL RENDIMIENTO Es difícil comparar objetivamente los resultados obtenidos a través de Apocrita porque no hay otro sistema disponible actualmente con los mismos objetivos que Apocrita. Sin embargo, hemos evaluado el rendimiento de las secciones críticas del sistema. Las secciones críticas fueron determinadas como los procesos que requieren más tiempo. La evaluación se completó en computadoras de laboratorio estándar en una LAN Ethernet de 100Mb/s; las máquinas ejecutan Windows XP con un CPU Pentium 4 funcionando a 2.4GHz con 512 MB de RAM. El tiempo de indexación se ha ejecutado tanto en la colección de la revista Time [8], que contiene 432 documentos y 83 consultas con sus resultados más relevantes, como en la colección NPL [8], que tiene un total de 11,429 documentos y 93 consultas con resultados esperados. Cada documento tiene un tamaño que oscila entre 4KB y 8KB. Como muestra la Figura 4, el número de nodos involucrados en el proceso de indexación afecta el tiempo necesario para completar el proceso de indexación, a veces de manera drástica. Figura 4. Tiempo de nodo vs. tiempo de índice. La diferencia al pasar de un nodo de indexación a dos nodos de indexación es la más drástica y equivale a un tiempo de indexación un 37% más rápido que un solo nodo de indexación. La diferencia entre dos nodos de indexación y tres nodos de indexación sigue siendo significativa y representa un tiempo un 16% más rápido que dos nodos de indexación. A medida que aumenta el número de nodos de indexación, los resultados son menos dramáticos. Esto se puede atribuir al tiempo adicional asociado con tener muchos nodos realizando indexación. El tiempo necesario para comunicarse con un nodo es constante, por lo que a medida que aumenta el número de nodos, esta constante se vuelve más predominante. Además, la complejidad de unir los resultados de indexación es una operación compleja y se complica aún más a medida que aumenta el número de nodos de indexación. El rendimiento del socket también es una parte muy importante de Apocrita. Se realizaron pruebas de rendimiento utilizando un archivo de 65MB en un sistema con el cliente y el servidor ejecutándose localmente. Esto se hizo para aislar posibles problemas de red. Aunque menos drásticos, se mostraron resultados similares cuando el cliente y el servidor se ejecutan en hardware independiente. Para mitigar posibles errores inesperados, cada prueba se ejecutó 10 veces. Figura 5. Sockets de Java vs. sockets de JXTA. Como muestra la Figura 5, el rendimiento de los sockets JXTA es pésimo en comparación con el rendimiento de los sockets estándar de Java. La tasa de transferencia mínima obtenida utilizando sockets de Java es de 81,945KB/s, mientras que la tasa de transferencia mínima obtenida utilizando sockets de JXTA es mucho menor, de 3,805KB/s. La tasa de transferencia máxima obtenida usando sockets de Java es de 97,412KB/s, mientras que la tasa de transferencia máxima obtenida usando sockets de JXTA es de 5,530KB/s. Finalmente, la tasa de transferencia promedio utilizando sockets de Java es de 87,540KB/s, mientras que la tasa de transferencia promedio utilizando sockets de JXTA es de 4,293KB/s. El problema principal encontrado en estos benchmarks es que el mecanismo de transporte de red subyacente no funciona tan rápido o eficientemente como se esperaba. Para obtener un aumento en el rendimiento, el marco de trabajo JXTA necesita ser sustituido por un enfoque más tradicional. El tiempo de indexación también es un cuello de botella y deberá mejorarse para que la calidad general de Apocrita mejore. 7. TRABAJO RELACIONADO Existen hoy varios sistemas descentralizados P2P [1, 2, 3] que Apocrita incluye algunas de sus funcionalidades. Sin embargo, Apocrita también cuenta con características únicas de búsqueda e indexación novedosas que hacen que este sistema sea único. Por ejemplo, Majestic-12 [4] es un proyecto de búsqueda e indexación distribuida diseñado para buscar en Internet. Cada usuario instalaría un cliente, el cual es responsable de indexar una parte de la web. Una área central para consultar el índice está disponible en la página web de Majestic-12. El índice en sí no se distribuye, solo la acción de indexar se distribuye. El aspecto de indexación distribuida de este proyecto se relaciona más estrechamente con los objetivos de Apocrita. YaCy es una aplicación de búsqueda web peer-to-peer. YaCy consta de un rastreador web, un indexador, un motor de base de datos incorporado y un protocolo de intercambio de índices p2p. YaCy está diseñado para mantener un índice distribuido de Internet. Utilizaba una tabla hash distribuida (DHT) para mantener el índice. El nodo local se utiliza para hacer consultas, pero todos los resultados que se devuelven son accesibles en Internet. YaCy utilizó muchos pares y DHT para mantener un índice distribuido. Apocrita también utilizará un índice distribuido en futuras implementaciones y podría beneficiarse de utilizar una implementación de un DHT. Sin embargo, YaCy está diseñado como un motor de búsqueda web y, por lo tanto, resuelve un problema muy diferente al de Apocrita. 8. CONCLUSIONES Y TRABAJO FUTURO Presentamos Apocrita, un sistema distribuido de búsqueda e indexación P2P destinado a usuarios de redes en una intranet. Puede ayudar a las organizaciones que no cuentan con un servidor de archivos en red o con la infraestructura de red necesaria para compartir documentos. Elimina la necesidad de que los documentos sean compartidos manualmente entre usuarios mientras se editan y reduce la posibilidad de que se distribuyan versiones conflictivas. Se ha construido un prototipo de prueba de concepto, pero los resultados de medir el mecanismo de transporte de red y el tiempo de indexación no fueron tan impresionantes como se había imaginado inicialmente. A pesar de estas deficiencias, la experiencia adquirida en el diseño e implementación de Apocrita nos ha brindado una mayor comprensión sobre la construcción de sistemas distribuidos desafiantes. Para trabajos futuros, Apocrita contará con un modelo inteligente de distribución de contenido en el que una única instancia de un archivo puede replicarse de manera inteligente y transparente en toda la red para garantizar que una copia de cada archivo importante esté siempre disponible independientemente de la disponibilidad de nodos específicos en la red. Además, planeamos integrar un sistema de control de revisiones en la parte de distribución de contenido de Apocrita para que los usuarios puedan actualizar un archivo existente que encontraron y mantener la revisión antigua, propagando la nueva revisión. Finalmente, la implementación actual tiene cierto sobrecosto y redundancia debido a que se mantiene todo el índice en cada nodo individual, planeamos diseñar un índice distribuido. 9. REFERENCIAS [1] Rodrigues, R., Liskov, B., Shrira, L.: El diseño de un sistema peer-to-peer robusto. Disponible en línea: http://www.pmg.lcs.mit.edu/~rodrigo/ew02-robust.pdf. [2] Chawathe, Y., Ratnasamy, S., Breslau, L., Lanham, N., y Chenker, S.: Haciendo escalables los sistemas P2P similares a Gnutella. En Actas de SIGCOMM03, Karlsruhe, Alemania. [3] Harvest: Un Sistema de Búsqueda Distribuida: http://harvest.sourceforge.net. [4] Majestic-12: Motor de Búsqueda Distribuido: http://www.majestic12.co.uk. [5] JXTA: http://www.jxta.org. [6] YaCy: Indexación Web Distribuida basada en P2P: http://www.yacy.net/yacy. [7] Biblioteca del Motor de Búsqueda Lucene: http://lucene.apache.org. [8] Colecciones de Pruebas (Time Magazine y NPL): www.dcs.gla.ac.uk/idom/ir_resources/test_collections. 178 ",
            "candidates": [],
            "error": [
                [
                    "sistema de intercambio de archivos",
                    "sistema distribuido de intercambio de archivos",
                    "sistema de intercambio de archivos",
                    "sistema de intercambio de archivos"
                ]
            ]
        },
        "intranet": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Apocrita: A Distributed Peer-to-Peer File Sharing System for Intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Distributed Computing and Wireless & Telecommunications Technology University of Guelph-Humber Toronto, ON, M9W 5L7 Canada {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca ABSTRACT Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all member of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are shared between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Another problem arises when a document is made available on a users machine and that user is offline, in which case the document is no longer accessible.",
                "In this paper we present Apocrita, a revolutionary distributed P2P file sharing system for Intranets.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Distributed applications.",
                "General Terms Design, Experimentation, Performance. 1.",
                "INTRODUCTION The Peer-to-Peer (P2P) computing paradigm is becoming a completely new form of mutual resource sharing over the Internet.",
                "With the increasingly common place broadband Internet access, P2P technology has finally become a viable way to share documents and media files.",
                "There are already programs on the market that enable P2P file sharing.",
                "These programs enable millions of users to share files among themselves.",
                "While the utilization of P2P clients is already a gigantic step forward compared to downloading files off websites, using such programs are not without their problems.",
                "The downloaded files still require a lot of manual management by the user.",
                "The user still needs to put the files in the proper directory, manage files with multiple versions, delete the files when they are no longer wanted.",
                "We strive to make the process of sharing documents within an <br>intranet</br> easier.",
                "Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all members of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are sent between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Furthermore, some organizations do not have a file sharing server or the necessary network infrastructure to enable one.",
                "In this paper we present Apocrita, which is a cost-effective distributed P2P file sharing system for such organizations.",
                "The rest of this paper is organized as follows.",
                "In section 2, we present Apocrita.",
                "The distributed indexing mechanism and protocol are presented in Section 3.",
                "Section 4 presents the peer-topeer distribution model.",
                "A proof of concept prototype is presented in Section 5, and performance evaluations are discussed in Section 6.",
                "Related work is presented is Section 7, and finally conclusions and future work are discussed in Section 8. 2.",
                "APOCRITA Apocrita is a distributed peer-to-peer file sharing system, and has been designed to make finding documents easier in an <br>intranet</br> environment.",
                "Currently, it is possible for documents to be located on a users machine or on a remote machine.",
                "It is even possible that different revisions could reside on each node on the <br>intranet</br>.",
                "This means there must be a manual process to maintain document versions.",
                "Apocrita solves this problem using two approaches.",
                "First, due to the inherent nature of Apocrita, the document will only reside on a single logical location.",
                "Second, Apocrita provides a method of reverting to previous document versions.",
                "Apocrita Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page.",
                "To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.",
                "ACMSE07, MARCH 23-24, 2007, WINSTON-SALEM, NC, USA.",
                "COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 will also distribute documents across multiple machines to ensure high availability of important documents.",
                "For example, if a machine contains an important document and the machine is currently inaccessible, the system is capable of maintaining availability of the document through this distribution mechanism.",
                "It provides a simple interface for searching and accessing files that may exist either locally or remotely.",
                "The distributed nature of the documents is transparent to the user.",
                "Apocrita supports a decentralized network model where the peers use a discovery protocol to determine peers.",
                "Apocrita is intended for network users on an <br>intranet</br>.",
                "The main focus is organizations that may not have a network large enough to require a file server and supporting infrastructure.",
                "It eliminates the need for documents to be manually shared between users while being edited and reduces the possibility of conflicting versions being distributed.",
                "The system also provides some redundancy and in the event of a single machine failure, no important documents will be lost.",
                "It is operating system independent, and easy to access through a web browser or through a standalone application.",
                "To decrease the time required for indexing a large number of documents, the indexing process is distributed across available idle nodes.",
                "Local and remote files should be easily accessible through a virtual mountable file system, providing transparency for users. 3.",
                "DISTRIBUTED INDEXING Apocrita uses a distributed index for all the documents that are available on the <br>intranet</br>.",
                "Each node will contain part of the full index, and be aware of what part of the index each other node has.",
                "A node will be able to contact each node that contains a unique portion of the index.",
                "In addition, each node has a separate local index of its own documents.",
                "But as discussed later, in the current implementation, each node has a copy of the entire index.",
                "Indexing of the documents is distributed.",
                "Therefore, if a node is in the process of indexing many documents, it will break up the work over the nodes.",
                "Once a nodes local index is updated with the new documents, the distributed index will then be updated.",
                "The current distributed indexing system consists of three separate modules: NodeController, FileSender, and NodeIndexer.",
                "The responsibility of each module is discussed later in this section. 3.1 Indexing Protocol The protocol we have designed for the distributed indexing is depicted in Figure 1.",
                "Figure 1.",
                "Apocrita distributed indexing protocol.",
                "IDLE QUERY: The IDLE QUERY is sent out from the initiating node to determine which other nodes may be able to help with the overall indexing process.",
                "There are no parameters sent with the command.",
                "The receiving node will respond with either a BUSY or IDLE command.",
                "If the IDLE command is received, the initiating node will add the responding node to a list of available distributed indexing helpers.",
                "In the case of a BUSY command being received, the responding node is ignored.",
                "BUSY: Once a node received an IDL QUERY, it will determine whether it can be considered a candidate for distributed indexing.",
                "This determination is based on the overall CPU usage of the node.",
                "If the node is using most of its CPU for other processes, the node will respond to the IDLE QUERY with a BUSY command.",
                "IDLE: As with the case of the BUSY response, the node receiving the IDLE QUERY will determine its eligibility for distributed indexing.",
                "To be considered a candidate for distributed indexing, the overall CPU usage must be at a minimum to all for dedicated indexing of the distributed documents.",
                "If this is the case, the node will respond with an IDLE command.",
                "INCOMING FILE: Once the initiating node assembles a set of idle nodes to assist with the distributed indexing, it will divide the documents to be sent to the nodes.",
                "To do this, it sends an INCOMING FILE message, which contains the name of the file as well as the size in bytes.",
                "After the INCOMING FILE command has been sent, the initiating node will begin to stream the file to the other node.",
                "The initiating node will loop through the files that are to be sent to the other node; each file stream being preceded by the INCOMING FILE command with the appropriate parameters.",
                "INDEX FILE: Once the indexing node has completed the indexing process of the set of files, it must send the resultant index back to the initiating node.",
                "The index is comprised of multiple files, which exist on the file system of the indexing node.",
                "As with the INCOMING FILE command, the indexing node streams each index file after sending an INDEX FILE command.",
                "The INDEX FILE command has two parameters: the first being the name of the index, and the second is the size of the file in bytes.",
                "SEND COMPLETE: When sending the sets of files for both the index and the files to be indexed, the node must notify the corresponding node when the process is complete.",
                "Once the initiating node is finished sending the set of documents to be indexed, it will then send a SEND COMPLETE command indicating to the indexing node that there are no more files and the node can proceed with indexing the files.",
                "In the case of the initiating node sending the index files, the indexing node will complete the transfer with the SEND COMPLETE command indicating to the initiating node that there are no more index files to be sent and the initiating node can then assemble those index files into the main index.",
                "The NodeController is responsible for setting up connections with nodes in the idle state to distribute the indexing process.",
                "Using JXTA [5], the node controller will obtain a set of nodes.",
                "This set of nodes is iterated and each one is sent the IDLE QUERY command.",
                "The nodes that respond with idle are then collected.",
                "The set of idle nodes includes the node initiating the distributed indexing process, referred to as the local node.",
                "Once the collection of idle nodes is obtained, the node updates the set of controllers and evenly divides the set of documents that are to be indexed.",
                "For example, if there are 100 documents and 10 nodes (including the local node) then each node will have 10 documents to index.",
                "For each indexing node an instance of the FileSender object is created.",
                "The FileSender is aware of the set of documents that node is responsible for.",
                "Once a FileSender object has been created for each node, the NodeController waits for each FileSender to complete.",
                "When the FileSender objects have completed the NodeController will take the resultant indexes from 175 each node and pass them to an instance of the IndexCompiler, which maintains the index and the list of FileSenders.",
                "Once the IndexCompiler has completed it will return to the idle state and activate the directory scanner to monitor the locally owned set of documents for changes that may require reindexing.",
                "The NodeIndexer is responsible for receiving documents sent to it by the initiating node and then indexing them using the Lucene engine [7].",
                "Once the indexing is complete the resulting index is streamed back to the initiating node as well as compiled in the indexer nodes own local index.",
                "Before initiating the indexing process it must be sent an IDLE QUERY message.",
                "This is the first command that sets off the indexing process.",
                "The indexer node will determine whether it is considered idle based on the current CPU usage.",
                "As outlined in the protocol section if the node is not being used and has a low overall CPU usage percentage it will return IDLE to the IDLE QUERY command.",
                "If the indexer nodes CPU usage is above 50% for a specified amount of time it is then considered to be busy and will respond to the IDLE QUERY command with BUSY.",
                "If a node is determined busy it returns to its listening state waiting for another IDLE QUERY from another initiating node.",
                "If the node is determined to be idle it will enter the state where it will receive files from the initiating node that it is responsible for indexing.",
                "Once all of the files are received by the initiating node, indicated by a SEND COMPLETE message, it starts an instance of the Lucene indexing engine.",
                "The files are stored in a temporary directory separate from the nodes local documents that it is responsible for maintaining an index of.",
                "The Lucene index writer then indexes all of the transferred files.",
                "The index is stored on the drive within a temporary directory separate from the current index.",
                "After the indexing of the files completes the indexer node enters the state where the index files are sent back to the initiating node.",
                "The indexer node loops through all of the files created by Lucenes IndexWriter and streams them to the initiating node.",
                "Once these files are sent back that index is then merged into the indexer nodes own full index of the existing files.",
                "It then enters the idle state where it will then listen for any other nodes that required distributing the indexing process.",
                "The FileSender object is the initiating node equivalent of the indexer node.",
                "It initiates the communication between the initiating node and the node that will assist in the distributed indexing.",
                "The initiating node runs many instances of the FileSender node one for each other node it has determined to be idle.",
                "Upon instantiation of the FileSender it is passed the node that it is responsible for contacting and the set of files that must be sent.",
                "The FileSenders first job is to send the files that are to be indexed by the other idle node.",
                "The files are streamed one at a time to the other node.",
                "It sends each file using the INCOMING FILE command.",
                "With that command it sends the name of the file being sent and the size in bytes.",
                "Once all files have been sent the FileSender sends the SEND COMPLETE command.",
                "The FileSender creates an instance of Lucenes IndexWriter and prepares to create the index in a temporary directory on the file system.",
                "The FileSender will begin to receive the files that are to be saved within the index.",
                "It receives an INDEX FILE command with the name of the files and the size in bytes.",
                "This file is then streamed into the temporary index directory on the FileSender node.",
                "After the transfer of the index files has been completed the FileSender notifies the instance of the index compiler that it is ready to combine the index.",
                "Each instance of the FileSender has its own unique section of temporary space to store the index that has been transferred back from the indexing node.",
                "When notifying the IndexCompiler it will also pass the location of the particular FileSenders directory location of that index. 4.",
                "PEER-TO-PEER DISTRIBUTION Apocrita uses a peer-to-peer distribution model in order to distribute files.",
                "Files are distributed solely from a serving node to a client node without regard for the availability of file pieces from other clients in the network.",
                "This means that the file transfers will be fast and efficient and should not severely affect the usability of serving nodes from the point of view of a local user.",
                "The JXTA framework [5] is used in order to implement peer-to-peer functionality.",
                "This has been decided due to the extremely shorttimeline of the project which allows us to take advantage of over five years of testing and development and support from many large organizations employing JXTA in their own products.",
                "We are not concerned with any potential quality problems because JXTA is considered to be the most mature and stable peer-to-peer framework available.",
                "Using JXTA terminology, there are three types of peers used in node classification.",
                "Edge peers are typically low-bandwidth, non-dedicated nodes.",
                "Due to these characteristics, edge peers are not used with Apocrita.",
                "Relay peers are typically higher-bandwidth, dedicated nodes.",
                "This is the classification of all nodes in the Apocrita network, and, as such, are the default classification used.",
                "Rendezvous peers are used to coordinate message passing between nodes in the Apocrita network.",
                "This means that a minimum of one rendezvous peer per subnet is required. 4.1 Peer Discovery The Apocrita server subsystem uses the JXTA Peer Discovery Protocol (PDP) in order to find participating peers within the network as shown in Figure 2.",
                "Figure 2.",
                "Apocrita peer discovery process. 176 The PDP listens for peer advertisements from other nodes in the Apocrita swarm.",
                "If a peer advertisement is detected, the server will attempt to join the peer group and start actively contributing to the network.",
                "If no peers are found by the discovery service, the server will create a new peer group and start advertising this peer group.",
                "This new peer group will be periodically advertised on the network; any new peers joining the network will attach to this peer group.",
                "A distinct advantage of using the JXTA PDP is that Apocrita does not have to be sensitive to particular networking nuances such as Maximum Transmission Unit (MTU).",
                "In addition, Apocrita does not have to support one-to-many packet delivery methods such as multicast and instead can rely on JXTA for this support. 4.2 Index Query Operation All nodes in the Apocrita swarm have a complete and up-to-date copy of the network index stored locally.",
                "This makes querying the index for search results trivial.",
                "Unlike the Gnutella protocol, a query does not have to propagate throughout the network.",
                "This also means that the time to return query results is very fast - much faster than protocols that rely on nodes in the network to pass the query throughout the network and then wait for results.",
                "This is demonstrated in Figure 3.",
                "Figure 3.",
                "Apocrita query operation.",
                "Each document in the swarm has a unique document identification number (ID).",
                "A node will query the index and a result will be returned with both the document ID number as well as a list of peers with a copy of the matched document ID.",
                "It is then the responsibility of the searching peer to contact the peers in the list to negotiate file transfer between the client and server. 5.",
                "PROTOTYPE IMPLEMENTATION Apocrita uses the Lucene framework [7], which is a project under development by the Apache Software Foundation.",
                "Apache Lucene is a high-performance, full-featured text search engine library written entirely in Java.",
                "In the current implementation, Apocrita is only capable of indexing plain text documents.",
                "Apocrita uses the JXTA framework [5] as a peer-to-peer transport library between nodes.",
                "JXTA is used to pass both messages and files between nodes in the search network.",
                "By using JXTA, Apocrita takes advantage of a reliable, and proven peer-to-peer transport mechanism.",
                "It uses the pipe facility in order to pass messages and files between nodes.",
                "The pipe facility provides many different types of pipe advertisements.",
                "This includes an unsecured unicast pipe, a secured unicast pipe, and a propagated unsecured pipe.",
                "Message passing is used to pass status messages between nodes in order to aid in indexing, searching, and retrieval.",
                "For example, a node attempting to find an idle node to participate in indexing will query nodes via the message facility.",
                "Idle nodes will reply with a status message to indicate they are available to start indexing.",
                "File passing is used within Apocrita for file transfer.",
                "After a file has been searched for and located within the peer group, a JXTA socket will be opened and file transfer will take place.",
                "A JXTA socket is similar to a standard Java socket, however a JXTA socket uses JXTA pipes in underlying network transport.",
                "File passing uses an unsecured unicast pipe in order to transfer data.",
                "File passing is also used within Apocrita for index transfer.",
                "Index transfer works exactly like a file transfer.",
                "In fact, the index transfer actually passes the index as a file.",
                "However, there is one key difference between file transfer and index transfer.",
                "In the case of file transfer, a socket is created between only two nodes.",
                "In the case of index transfer, a socket must be created between all nodes in the network in order to pass the index, which allows for all nodes to have a full and complete index of the entire network.",
                "In order to facilitate this transfer efficiently, index transfer will use an unsecured propagated pipe to communicate with all nodes in the Apocrita network. 6.",
                "PERFORMANCE EVALUATION It is difficult to objectively benchmark the results obtained through Apocrita because there is no other system currently available with the same goals as Apocrita.",
                "We have, however, evaluated the performance of the critical sections of the system.",
                "The critical sections were determined to be the processes that are the most time intensive.",
                "The evaluation was completed on standard lab computers on a 100Mb/s Ethernet LAN; the machines run Windows XP with a Pentium 4 CPU running at 2.4GHz with 512 MB of RAM.",
                "The indexing time has been run against both: the Time Magazine collection [8], which contains 432 documents and 83 queries and their most relevant results, and the NPL collection [8] that has a total of 11,429 documents and 93 queries with expected results.",
                "Each document ranges in size between 4KB and 8KB.",
                "As Figure 4 demonstrates, the number of nodes involved in the indexing process affects the time taken to complete the indexing processsometimes even drastically.",
                "Figure 4.",
                "Node vs. index time.",
                "The difference in going from one indexing node to two indexing nodes is the most drastic and equates to an indexing time 37% faster than a single indexing node.",
                "The different between two 177 indexing nodes and three indexing nodes is still significant and represents a 16% faster time than two indexing nodes.",
                "As the number of indexing nodes increases the results are less dramatic.",
                "This can be attributed to the time overhead associated with having many nodes perform indexing.",
                "The time needed to communicate with a node is constant, so as the number of nodes increases, this constant becomes more prevalent.",
                "Also, the complexity of joining the indexing results is a complex operation and is complicated further as the number of indexing nodes increases.",
                "Socket performance is also a very important part of Apocrita.",
                "Benchmarks were performed using a 65MB file on a system with both the client and server running locally.",
                "This was done to isolate possible network issues.",
                "Although less drastic, similar results were shown when the client and server run on independent hardware.",
                "In order to mitigate possible unexpected errors, each test was run 10 times.",
                "Figure 5.",
                "Java sockets vs. JXTA sockets.",
                "As Figure 5 demonstrates, the performance of JXTA sockets is abysmal as compared to the performance of standard Java sockets.",
                "The minimum transfer rate obtained using Java sockets is 81,945KB/s while the minimum transfer rater obtained using JXTA sockets is much lower at 3, 805KB/s.",
                "The maximum transfer rater obtain using Java sockets is 97,412KB/s while the maximum transfer rate obtained using JXTA sockets is 5,530KB/s.",
                "Finally, the average transfer rate using Java sockets is 87,540KB/s while the average transfer rate using JXTA sockets is 4,293KB/s.",
                "The major problem found in these benchmarks is that the underlying network transport mechanism does not perform as quickly or efficiently as expected.",
                "In order to garner a performance increase, the JXTA framework needs to be substituted with a more traditional approach.",
                "The indexing time is also a bottleneck and will need to be improved for the overall quality of Apocrita to be improved. 7.",
                "RELATED WORK Several decentralized P2P systems [1, 2, 3] exist today that Apocrita features some of their functionality.",
                "However, Apocrita also has unique novel searching and indexing features that make this system unique.",
                "For example, Majestic-12 [4] is a distributed search and indexing project designed for searching the Internet.",
                "Each user would install a client, which is responsible for indexing a portion of the web.",
                "A central area for querying the index is available on the Majestic-12 web page.",
                "The index itself is not distributed, only the act of indexing is distributed.",
                "The distributed indexing aspect of this project most closely relates Apocrita goals.",
                "YaCy [6] is a peer-to-peer web search application.",
                "YaCy consists of a web crawler, an indexer, a built-in database engine, and a p2p index exchange protocol.",
                "YaCy is designed to maintain a distributed index of the Internet.",
                "It used a distributed hash table (DHT) to maintain the index.",
                "The local node is used to query but all results that are returned are accessible on the Internet.",
                "YaCy used many peers and DHT to maintain a distributed index.",
                "Apocrita will also use a distributed index in future implementations and may benefit from using an implementation of a DHT.",
                "YaCy however, is designed as a web search engine and, as such solves a much different problem than Apocrita. 8.",
                "CONCLUSIONS AND FUTURE WORK We presented Apocrita, a distributed P2P searching and indexing system intended for network users on an <br>intranet</br>.",
                "It can help organizations with no network file server or necessary network infrastructure to share documents.",
                "It eliminates the need for documents to be manually shared among users while being edited and reduce the possibility of conflicting versions being distributed.",
                "A proof of concept prototype has been constructed, but the results from measuring the network transport mechanism and the indexing time were not as impressive as initially envisioned.",
                "Despite these shortcomings, the experience gained from the design and implementation of Apocrita has given us more insight into building challenging distributed systems.",
                "For future work, Apocrita will have a smart content distribution model in which a single instance of a file can intelligently and transparently replicate throughout the network to ensure a copy of every important file will always be available regardless of the availability of specific nodes in the network.",
                "In addition, we plan to integrate a revision control system into the content distribution portion of Apocrita so that users could have the ability to update an existing file that they found and have the old revision maintained and the new revision propagated.",
                "Finally, the current implementation has some overhead and redundancy due to the fact that the entire index is maintained on each individual node, we plan to design a distributed index. 9.",
                "REFERENCES [1] Rodrigues, R., Liskov, B., Shrira, L.: The Design of a Robust Peer-to-Peer System.",
                "Available online: http://www.pmg.lcs.mit.edu/~rodrigo/ew02-robust.pdf. [2] Chawathe, Y., Ratnasamy, S., Breslau, L., Lanham, N., and Chenker, S.: Making Gnutella-like P2P Systems Scalable.",
                "In Proceedings of SIGCOMM03, Karlsruhe, Germany. [3] Harvest: A Distributed Search System: http://harvest.sourceforge.net. [4] Majestic-12: Distributed Search Engine: http://www.majestic12.co.uk. [5] JXTA: http://www.jxta.org. [6] YaCy: Distributed P2P-based Web Indexing: http://www.yacy.net/yacy. [7] Lucene Search Engine Library: http://lucene.apache.org. [8] Test Collections (Time Magazine and NPL): www.dcs.gla.ac.uk/idom/ir_resources/test_collections. 178"
            ],
            "original_annotated_samples": [
                "We strive to make the process of sharing documents within an <br>intranet</br> easier.",
                "APOCRITA Apocrita is a distributed peer-to-peer file sharing system, and has been designed to make finding documents easier in an <br>intranet</br> environment.",
                "It is even possible that different revisions could reside on each node on the <br>intranet</br>.",
                "Apocrita is intended for network users on an <br>intranet</br>.",
                "DISTRIBUTED INDEXING Apocrita uses a distributed index for all the documents that are available on the <br>intranet</br>."
            ],
            "translated_annotated_samples": [
                "Nos esforzamos por hacer que el proceso de compartir documentos dentro de una <br>Intranet</br> sea más fácil.",
                "Apocrita es un sistema de intercambio de archivos entre pares distribuido, y ha sido diseñado para facilitar la búsqueda de documentos en un <br>entorno de Intranet</br>.",
                "Es incluso posible que diferentes revisiones puedan residir en cada nodo de la <br>Intranet</br>.",
                "Apocrita está destinado para usuarios de red en una <br>Intranet</br>.",
                "Apocrita utiliza un <br>índice distribuido</br> para todos los documentos disponibles en la intranet."
            ],
            "translated_text": "Apocrita: Un sistema de intercambio de archivos distribuido de igual a igual para intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Computación Distribuida y Tecnología Inalámbrica y de Telecomunicaciones Universidad de Guelph-Humber Toronto, ON, M9W 5L7 Canadá {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca RESUMEN Muchas organizaciones necesitan redactar documentos para diversos fines, y es posible que estos documentos deban ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un documento. En algunos casos, estos documentos son compartidos entre autores, a través de correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento. Incluso puede haber varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario. Otro problema surge cuando un documento está disponible en la máquina de un usuario y ese usuario está desconectado, en cuyo caso el documento ya no es accesible. En este artículo presentamos Apocrita, un revolucionario sistema distribuido de intercambio de archivos P2P para intranets. Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos - Aplicaciones Distribuidas. Términos generales Diseño, Experimentación, Rendimiento. 1. INTRODUCCIÓN El paradigma de computación Peer-to-Peer (P2P) se está convirtiendo en una forma completamente nueva de compartir recursos mutuos a través de Internet. Con el acceso cada vez más común a Internet de banda ancha, la tecnología P2P finalmente se ha convertido en una forma viable de compartir documentos y archivos multimedia. Ya existen programas en el mercado que permiten compartir archivos P2P. Estos programas permiten a millones de usuarios compartir archivos entre ellos. Si bien la utilización de clientes P2P ya es un gran avance en comparación con descargar archivos de sitios web, el uso de dichos programas no está exento de problemas. Los archivos descargados todavía requieren mucho manejo manual por parte del usuario. El usuario todavía necesita colocar los archivos en el directorio adecuado, gestionar archivos con múltiples versiones, eliminar los archivos cuando ya no se deseen. Nos esforzamos por hacer que el proceso de compartir documentos dentro de una <br>Intranet</br> sea más fácil. Muchas organizaciones están obligadas a redactar documentos para diversos fines, y dichos documentos pueden necesitar ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un documento. En algunos casos, estos documentos son enviados entre autores, por correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o que se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento. Puede haber incluso varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario. Además, algunas organizaciones no cuentan con un servidor de intercambio de archivos o la infraestructura de red necesaria para habilitar uno. En este artículo presentamos Apocrita, que es un sistema de intercambio de archivos P2P distribuido y rentable para dichas organizaciones. El resto de este documento está organizado de la siguiente manera. En la sección 2, presentamos Apocrita. El mecanismo de indexación distribuida y el protocolo se presentan en la Sección 3. La sección 4 presenta el modelo de distribución peer-to-peer. Se presenta un prototipo de prueba de concepto en la Sección 5, y las evaluaciones de rendimiento se discuten en la Sección 6. El trabajo relacionado se presenta en la Sección 7, y finalmente las conclusiones y el trabajo futuro se discuten en la Sección 8. Apocrita es un sistema de intercambio de archivos entre pares distribuido, y ha sido diseñado para facilitar la búsqueda de documentos en un <br>entorno de Intranet</br>. Actualmente, es posible que los documentos se encuentren en la máquina de un usuario o en una máquina remota. Es incluso posible que diferentes revisiones puedan residir en cada nodo de la <br>Intranet</br>. Esto significa que debe haber un proceso manual para mantener las versiones de los documentos. Apocrita resuelve este problema utilizando dos enfoques. Primero, debido a la naturaleza inherente de Apocrita, el documento solo residirá en una ubicación lógica única. En segundo lugar, Apocrita proporciona un método para revertir a versiones anteriores de documentos. Se concede el permiso de hacer copias digitales o impresas de todo o parte de este trabajo para uso personal o en el aula sin cargo alguno, siempre y cuando las copias no se realicen ni distribuyan con fines de lucro o ventaja comercial, y que las copias lleven este aviso y la cita completa en la primera página. Para copiar de otra manera, o republicar, publicar en servidores o redistribuir en listas, se requiere permiso específico previo y/o un pago. ACMSE07, 23-24 DE MARZO DE 2007, WINSTON-SALEM, NC, EE. UU. COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 también distribuirá documentos en múltiples máquinas para garantizar la alta disponibilidad de documentos importantes. Por ejemplo, si una máquina contiene un documento importante y actualmente no es accesible, el sistema es capaz de mantener la disponibilidad del documento a través de este mecanismo de distribución. Proporciona una interfaz sencilla para buscar y acceder a archivos que pueden existir tanto local como remotamente. La naturaleza distribuida de los documentos es transparente para el usuario. Apocrita apoya un modelo de red descentralizada en el que los pares utilizan un protocolo de descubrimiento para determinar los pares. Apocrita está destinado para usuarios de red en una <br>Intranet</br>. El enfoque principal son las organizaciones que pueden no tener una red lo suficientemente grande como para necesitar un servidor de archivos y la infraestructura de soporte. Elimina la necesidad de que los documentos sean compartidos manualmente entre usuarios mientras se editan y reduce la posibilidad de que se distribuyan versiones conflictivas. El sistema también proporciona cierta redundancia y en caso de fallo de una máquina, no se perderán documentos importantes. Es independiente del sistema operativo y fácil de acceder a través de un navegador web o mediante una aplicación independiente. Para disminuir el tiempo requerido para indexar una gran cantidad de documentos, el proceso de indexación se distribuye entre los nodos inactivos disponibles. Los archivos locales y remotos deben ser fácilmente accesibles a través de un sistema de archivos virtual montable, proporcionando transparencia para los usuarios. Apocrita utiliza un <br>índice distribuido</br> para todos los documentos disponibles en la intranet. ",
            "candidates": [],
            "error": [
                [
                    "Intranet",
                    "entorno de Intranet",
                    "Intranet",
                    "Intranet",
                    "índice distribuido"
                ]
            ]
        },
        "author": {
            "translated_key": "redactar",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Apocrita: A Distributed Peer-to-Peer File Sharing System for Intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Distributed Computing and Wireless & Telecommunications Technology University of Guelph-Humber Toronto, ON, M9W 5L7 Canada {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca ABSTRACT Many organizations are required to <br>author</br> documents for various purposes, and such documents may need to be accessible by all member of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are shared between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Another problem arises when a document is made available on a users machine and that user is offline, in which case the document is no longer accessible.",
                "In this paper we present Apocrita, a revolutionary distributed P2P file sharing system for Intranets.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Distributed applications.",
                "General Terms Design, Experimentation, Performance. 1.",
                "INTRODUCTION The Peer-to-Peer (P2P) computing paradigm is becoming a completely new form of mutual resource sharing over the Internet.",
                "With the increasingly common place broadband Internet access, P2P technology has finally become a viable way to share documents and media files.",
                "There are already programs on the market that enable P2P file sharing.",
                "These programs enable millions of users to share files among themselves.",
                "While the utilization of P2P clients is already a gigantic step forward compared to downloading files off websites, using such programs are not without their problems.",
                "The downloaded files still require a lot of manual management by the user.",
                "The user still needs to put the files in the proper directory, manage files with multiple versions, delete the files when they are no longer wanted.",
                "We strive to make the process of sharing documents within an Intranet easier.",
                "Many organizations are required to <br>author</br> documents for various purposes, and such documents may need to be accessible by all members of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are sent between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Furthermore, some organizations do not have a file sharing server or the necessary network infrastructure to enable one.",
                "In this paper we present Apocrita, which is a cost-effective distributed P2P file sharing system for such organizations.",
                "The rest of this paper is organized as follows.",
                "In section 2, we present Apocrita.",
                "The distributed indexing mechanism and protocol are presented in Section 3.",
                "Section 4 presents the peer-topeer distribution model.",
                "A proof of concept prototype is presented in Section 5, and performance evaluations are discussed in Section 6.",
                "Related work is presented is Section 7, and finally conclusions and future work are discussed in Section 8. 2.",
                "APOCRITA Apocrita is a distributed peer-to-peer file sharing system, and has been designed to make finding documents easier in an Intranet environment.",
                "Currently, it is possible for documents to be located on a users machine or on a remote machine.",
                "It is even possible that different revisions could reside on each node on the Intranet.",
                "This means there must be a manual process to maintain document versions.",
                "Apocrita solves this problem using two approaches.",
                "First, due to the inherent nature of Apocrita, the document will only reside on a single logical location.",
                "Second, Apocrita provides a method of reverting to previous document versions.",
                "Apocrita Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page.",
                "To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.",
                "ACMSE07, MARCH 23-24, 2007, WINSTON-SALEM, NC, USA.",
                "COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 will also distribute documents across multiple machines to ensure high availability of important documents.",
                "For example, if a machine contains an important document and the machine is currently inaccessible, the system is capable of maintaining availability of the document through this distribution mechanism.",
                "It provides a simple interface for searching and accessing files that may exist either locally or remotely.",
                "The distributed nature of the documents is transparent to the user.",
                "Apocrita supports a decentralized network model where the peers use a discovery protocol to determine peers.",
                "Apocrita is intended for network users on an Intranet.",
                "The main focus is organizations that may not have a network large enough to require a file server and supporting infrastructure.",
                "It eliminates the need for documents to be manually shared between users while being edited and reduces the possibility of conflicting versions being distributed.",
                "The system also provides some redundancy and in the event of a single machine failure, no important documents will be lost.",
                "It is operating system independent, and easy to access through a web browser or through a standalone application.",
                "To decrease the time required for indexing a large number of documents, the indexing process is distributed across available idle nodes.",
                "Local and remote files should be easily accessible through a virtual mountable file system, providing transparency for users. 3.",
                "DISTRIBUTED INDEXING Apocrita uses a distributed index for all the documents that are available on the Intranet.",
                "Each node will contain part of the full index, and be aware of what part of the index each other node has.",
                "A node will be able to contact each node that contains a unique portion of the index.",
                "In addition, each node has a separate local index of its own documents.",
                "But as discussed later, in the current implementation, each node has a copy of the entire index.",
                "Indexing of the documents is distributed.",
                "Therefore, if a node is in the process of indexing many documents, it will break up the work over the nodes.",
                "Once a nodes local index is updated with the new documents, the distributed index will then be updated.",
                "The current distributed indexing system consists of three separate modules: NodeController, FileSender, and NodeIndexer.",
                "The responsibility of each module is discussed later in this section. 3.1 Indexing Protocol The protocol we have designed for the distributed indexing is depicted in Figure 1.",
                "Figure 1.",
                "Apocrita distributed indexing protocol.",
                "IDLE QUERY: The IDLE QUERY is sent out from the initiating node to determine which other nodes may be able to help with the overall indexing process.",
                "There are no parameters sent with the command.",
                "The receiving node will respond with either a BUSY or IDLE command.",
                "If the IDLE command is received, the initiating node will add the responding node to a list of available distributed indexing helpers.",
                "In the case of a BUSY command being received, the responding node is ignored.",
                "BUSY: Once a node received an IDL QUERY, it will determine whether it can be considered a candidate for distributed indexing.",
                "This determination is based on the overall CPU usage of the node.",
                "If the node is using most of its CPU for other processes, the node will respond to the IDLE QUERY with a BUSY command.",
                "IDLE: As with the case of the BUSY response, the node receiving the IDLE QUERY will determine its eligibility for distributed indexing.",
                "To be considered a candidate for distributed indexing, the overall CPU usage must be at a minimum to all for dedicated indexing of the distributed documents.",
                "If this is the case, the node will respond with an IDLE command.",
                "INCOMING FILE: Once the initiating node assembles a set of idle nodes to assist with the distributed indexing, it will divide the documents to be sent to the nodes.",
                "To do this, it sends an INCOMING FILE message, which contains the name of the file as well as the size in bytes.",
                "After the INCOMING FILE command has been sent, the initiating node will begin to stream the file to the other node.",
                "The initiating node will loop through the files that are to be sent to the other node; each file stream being preceded by the INCOMING FILE command with the appropriate parameters.",
                "INDEX FILE: Once the indexing node has completed the indexing process of the set of files, it must send the resultant index back to the initiating node.",
                "The index is comprised of multiple files, which exist on the file system of the indexing node.",
                "As with the INCOMING FILE command, the indexing node streams each index file after sending an INDEX FILE command.",
                "The INDEX FILE command has two parameters: the first being the name of the index, and the second is the size of the file in bytes.",
                "SEND COMPLETE: When sending the sets of files for both the index and the files to be indexed, the node must notify the corresponding node when the process is complete.",
                "Once the initiating node is finished sending the set of documents to be indexed, it will then send a SEND COMPLETE command indicating to the indexing node that there are no more files and the node can proceed with indexing the files.",
                "In the case of the initiating node sending the index files, the indexing node will complete the transfer with the SEND COMPLETE command indicating to the initiating node that there are no more index files to be sent and the initiating node can then assemble those index files into the main index.",
                "The NodeController is responsible for setting up connections with nodes in the idle state to distribute the indexing process.",
                "Using JXTA [5], the node controller will obtain a set of nodes.",
                "This set of nodes is iterated and each one is sent the IDLE QUERY command.",
                "The nodes that respond with idle are then collected.",
                "The set of idle nodes includes the node initiating the distributed indexing process, referred to as the local node.",
                "Once the collection of idle nodes is obtained, the node updates the set of controllers and evenly divides the set of documents that are to be indexed.",
                "For example, if there are 100 documents and 10 nodes (including the local node) then each node will have 10 documents to index.",
                "For each indexing node an instance of the FileSender object is created.",
                "The FileSender is aware of the set of documents that node is responsible for.",
                "Once a FileSender object has been created for each node, the NodeController waits for each FileSender to complete.",
                "When the FileSender objects have completed the NodeController will take the resultant indexes from 175 each node and pass them to an instance of the IndexCompiler, which maintains the index and the list of FileSenders.",
                "Once the IndexCompiler has completed it will return to the idle state and activate the directory scanner to monitor the locally owned set of documents for changes that may require reindexing.",
                "The NodeIndexer is responsible for receiving documents sent to it by the initiating node and then indexing them using the Lucene engine [7].",
                "Once the indexing is complete the resulting index is streamed back to the initiating node as well as compiled in the indexer nodes own local index.",
                "Before initiating the indexing process it must be sent an IDLE QUERY message.",
                "This is the first command that sets off the indexing process.",
                "The indexer node will determine whether it is considered idle based on the current CPU usage.",
                "As outlined in the protocol section if the node is not being used and has a low overall CPU usage percentage it will return IDLE to the IDLE QUERY command.",
                "If the indexer nodes CPU usage is above 50% for a specified amount of time it is then considered to be busy and will respond to the IDLE QUERY command with BUSY.",
                "If a node is determined busy it returns to its listening state waiting for another IDLE QUERY from another initiating node.",
                "If the node is determined to be idle it will enter the state where it will receive files from the initiating node that it is responsible for indexing.",
                "Once all of the files are received by the initiating node, indicated by a SEND COMPLETE message, it starts an instance of the Lucene indexing engine.",
                "The files are stored in a temporary directory separate from the nodes local documents that it is responsible for maintaining an index of.",
                "The Lucene index writer then indexes all of the transferred files.",
                "The index is stored on the drive within a temporary directory separate from the current index.",
                "After the indexing of the files completes the indexer node enters the state where the index files are sent back to the initiating node.",
                "The indexer node loops through all of the files created by Lucenes IndexWriter and streams them to the initiating node.",
                "Once these files are sent back that index is then merged into the indexer nodes own full index of the existing files.",
                "It then enters the idle state where it will then listen for any other nodes that required distributing the indexing process.",
                "The FileSender object is the initiating node equivalent of the indexer node.",
                "It initiates the communication between the initiating node and the node that will assist in the distributed indexing.",
                "The initiating node runs many instances of the FileSender node one for each other node it has determined to be idle.",
                "Upon instantiation of the FileSender it is passed the node that it is responsible for contacting and the set of files that must be sent.",
                "The FileSenders first job is to send the files that are to be indexed by the other idle node.",
                "The files are streamed one at a time to the other node.",
                "It sends each file using the INCOMING FILE command.",
                "With that command it sends the name of the file being sent and the size in bytes.",
                "Once all files have been sent the FileSender sends the SEND COMPLETE command.",
                "The FileSender creates an instance of Lucenes IndexWriter and prepares to create the index in a temporary directory on the file system.",
                "The FileSender will begin to receive the files that are to be saved within the index.",
                "It receives an INDEX FILE command with the name of the files and the size in bytes.",
                "This file is then streamed into the temporary index directory on the FileSender node.",
                "After the transfer of the index files has been completed the FileSender notifies the instance of the index compiler that it is ready to combine the index.",
                "Each instance of the FileSender has its own unique section of temporary space to store the index that has been transferred back from the indexing node.",
                "When notifying the IndexCompiler it will also pass the location of the particular FileSenders directory location of that index. 4.",
                "PEER-TO-PEER DISTRIBUTION Apocrita uses a peer-to-peer distribution model in order to distribute files.",
                "Files are distributed solely from a serving node to a client node without regard for the availability of file pieces from other clients in the network.",
                "This means that the file transfers will be fast and efficient and should not severely affect the usability of serving nodes from the point of view of a local user.",
                "The JXTA framework [5] is used in order to implement peer-to-peer functionality.",
                "This has been decided due to the extremely shorttimeline of the project which allows us to take advantage of over five years of testing and development and support from many large organizations employing JXTA in their own products.",
                "We are not concerned with any potential quality problems because JXTA is considered to be the most mature and stable peer-to-peer framework available.",
                "Using JXTA terminology, there are three types of peers used in node classification.",
                "Edge peers are typically low-bandwidth, non-dedicated nodes.",
                "Due to these characteristics, edge peers are not used with Apocrita.",
                "Relay peers are typically higher-bandwidth, dedicated nodes.",
                "This is the classification of all nodes in the Apocrita network, and, as such, are the default classification used.",
                "Rendezvous peers are used to coordinate message passing between nodes in the Apocrita network.",
                "This means that a minimum of one rendezvous peer per subnet is required. 4.1 Peer Discovery The Apocrita server subsystem uses the JXTA Peer Discovery Protocol (PDP) in order to find participating peers within the network as shown in Figure 2.",
                "Figure 2.",
                "Apocrita peer discovery process. 176 The PDP listens for peer advertisements from other nodes in the Apocrita swarm.",
                "If a peer advertisement is detected, the server will attempt to join the peer group and start actively contributing to the network.",
                "If no peers are found by the discovery service, the server will create a new peer group and start advertising this peer group.",
                "This new peer group will be periodically advertised on the network; any new peers joining the network will attach to this peer group.",
                "A distinct advantage of using the JXTA PDP is that Apocrita does not have to be sensitive to particular networking nuances such as Maximum Transmission Unit (MTU).",
                "In addition, Apocrita does not have to support one-to-many packet delivery methods such as multicast and instead can rely on JXTA for this support. 4.2 Index Query Operation All nodes in the Apocrita swarm have a complete and up-to-date copy of the network index stored locally.",
                "This makes querying the index for search results trivial.",
                "Unlike the Gnutella protocol, a query does not have to propagate throughout the network.",
                "This also means that the time to return query results is very fast - much faster than protocols that rely on nodes in the network to pass the query throughout the network and then wait for results.",
                "This is demonstrated in Figure 3.",
                "Figure 3.",
                "Apocrita query operation.",
                "Each document in the swarm has a unique document identification number (ID).",
                "A node will query the index and a result will be returned with both the document ID number as well as a list of peers with a copy of the matched document ID.",
                "It is then the responsibility of the searching peer to contact the peers in the list to negotiate file transfer between the client and server. 5.",
                "PROTOTYPE IMPLEMENTATION Apocrita uses the Lucene framework [7], which is a project under development by the Apache Software Foundation.",
                "Apache Lucene is a high-performance, full-featured text search engine library written entirely in Java.",
                "In the current implementation, Apocrita is only capable of indexing plain text documents.",
                "Apocrita uses the JXTA framework [5] as a peer-to-peer transport library between nodes.",
                "JXTA is used to pass both messages and files between nodes in the search network.",
                "By using JXTA, Apocrita takes advantage of a reliable, and proven peer-to-peer transport mechanism.",
                "It uses the pipe facility in order to pass messages and files between nodes.",
                "The pipe facility provides many different types of pipe advertisements.",
                "This includes an unsecured unicast pipe, a secured unicast pipe, and a propagated unsecured pipe.",
                "Message passing is used to pass status messages between nodes in order to aid in indexing, searching, and retrieval.",
                "For example, a node attempting to find an idle node to participate in indexing will query nodes via the message facility.",
                "Idle nodes will reply with a status message to indicate they are available to start indexing.",
                "File passing is used within Apocrita for file transfer.",
                "After a file has been searched for and located within the peer group, a JXTA socket will be opened and file transfer will take place.",
                "A JXTA socket is similar to a standard Java socket, however a JXTA socket uses JXTA pipes in underlying network transport.",
                "File passing uses an unsecured unicast pipe in order to transfer data.",
                "File passing is also used within Apocrita for index transfer.",
                "Index transfer works exactly like a file transfer.",
                "In fact, the index transfer actually passes the index as a file.",
                "However, there is one key difference between file transfer and index transfer.",
                "In the case of file transfer, a socket is created between only two nodes.",
                "In the case of index transfer, a socket must be created between all nodes in the network in order to pass the index, which allows for all nodes to have a full and complete index of the entire network.",
                "In order to facilitate this transfer efficiently, index transfer will use an unsecured propagated pipe to communicate with all nodes in the Apocrita network. 6.",
                "PERFORMANCE EVALUATION It is difficult to objectively benchmark the results obtained through Apocrita because there is no other system currently available with the same goals as Apocrita.",
                "We have, however, evaluated the performance of the critical sections of the system.",
                "The critical sections were determined to be the processes that are the most time intensive.",
                "The evaluation was completed on standard lab computers on a 100Mb/s Ethernet LAN; the machines run Windows XP with a Pentium 4 CPU running at 2.4GHz with 512 MB of RAM.",
                "The indexing time has been run against both: the Time Magazine collection [8], which contains 432 documents and 83 queries and their most relevant results, and the NPL collection [8] that has a total of 11,429 documents and 93 queries with expected results.",
                "Each document ranges in size between 4KB and 8KB.",
                "As Figure 4 demonstrates, the number of nodes involved in the indexing process affects the time taken to complete the indexing processsometimes even drastically.",
                "Figure 4.",
                "Node vs. index time.",
                "The difference in going from one indexing node to two indexing nodes is the most drastic and equates to an indexing time 37% faster than a single indexing node.",
                "The different between two 177 indexing nodes and three indexing nodes is still significant and represents a 16% faster time than two indexing nodes.",
                "As the number of indexing nodes increases the results are less dramatic.",
                "This can be attributed to the time overhead associated with having many nodes perform indexing.",
                "The time needed to communicate with a node is constant, so as the number of nodes increases, this constant becomes more prevalent.",
                "Also, the complexity of joining the indexing results is a complex operation and is complicated further as the number of indexing nodes increases.",
                "Socket performance is also a very important part of Apocrita.",
                "Benchmarks were performed using a 65MB file on a system with both the client and server running locally.",
                "This was done to isolate possible network issues.",
                "Although less drastic, similar results were shown when the client and server run on independent hardware.",
                "In order to mitigate possible unexpected errors, each test was run 10 times.",
                "Figure 5.",
                "Java sockets vs. JXTA sockets.",
                "As Figure 5 demonstrates, the performance of JXTA sockets is abysmal as compared to the performance of standard Java sockets.",
                "The minimum transfer rate obtained using Java sockets is 81,945KB/s while the minimum transfer rater obtained using JXTA sockets is much lower at 3, 805KB/s.",
                "The maximum transfer rater obtain using Java sockets is 97,412KB/s while the maximum transfer rate obtained using JXTA sockets is 5,530KB/s.",
                "Finally, the average transfer rate using Java sockets is 87,540KB/s while the average transfer rate using JXTA sockets is 4,293KB/s.",
                "The major problem found in these benchmarks is that the underlying network transport mechanism does not perform as quickly or efficiently as expected.",
                "In order to garner a performance increase, the JXTA framework needs to be substituted with a more traditional approach.",
                "The indexing time is also a bottleneck and will need to be improved for the overall quality of Apocrita to be improved. 7.",
                "RELATED WORK Several decentralized P2P systems [1, 2, 3] exist today that Apocrita features some of their functionality.",
                "However, Apocrita also has unique novel searching and indexing features that make this system unique.",
                "For example, Majestic-12 [4] is a distributed search and indexing project designed for searching the Internet.",
                "Each user would install a client, which is responsible for indexing a portion of the web.",
                "A central area for querying the index is available on the Majestic-12 web page.",
                "The index itself is not distributed, only the act of indexing is distributed.",
                "The distributed indexing aspect of this project most closely relates Apocrita goals.",
                "YaCy [6] is a peer-to-peer web search application.",
                "YaCy consists of a web crawler, an indexer, a built-in database engine, and a p2p index exchange protocol.",
                "YaCy is designed to maintain a distributed index of the Internet.",
                "It used a distributed hash table (DHT) to maintain the index.",
                "The local node is used to query but all results that are returned are accessible on the Internet.",
                "YaCy used many peers and DHT to maintain a distributed index.",
                "Apocrita will also use a distributed index in future implementations and may benefit from using an implementation of a DHT.",
                "YaCy however, is designed as a web search engine and, as such solves a much different problem than Apocrita. 8.",
                "CONCLUSIONS AND FUTURE WORK We presented Apocrita, a distributed P2P searching and indexing system intended for network users on an Intranet.",
                "It can help organizations with no network file server or necessary network infrastructure to share documents.",
                "It eliminates the need for documents to be manually shared among users while being edited and reduce the possibility of conflicting versions being distributed.",
                "A proof of concept prototype has been constructed, but the results from measuring the network transport mechanism and the indexing time were not as impressive as initially envisioned.",
                "Despite these shortcomings, the experience gained from the design and implementation of Apocrita has given us more insight into building challenging distributed systems.",
                "For future work, Apocrita will have a smart content distribution model in which a single instance of a file can intelligently and transparently replicate throughout the network to ensure a copy of every important file will always be available regardless of the availability of specific nodes in the network.",
                "In addition, we plan to integrate a revision control system into the content distribution portion of Apocrita so that users could have the ability to update an existing file that they found and have the old revision maintained and the new revision propagated.",
                "Finally, the current implementation has some overhead and redundancy due to the fact that the entire index is maintained on each individual node, we plan to design a distributed index. 9.",
                "REFERENCES [1] Rodrigues, R., Liskov, B., Shrira, L.: The Design of a Robust Peer-to-Peer System.",
                "Available online: http://www.pmg.lcs.mit.edu/~rodrigo/ew02-robust.pdf. [2] Chawathe, Y., Ratnasamy, S., Breslau, L., Lanham, N., and Chenker, S.: Making Gnutella-like P2P Systems Scalable.",
                "In Proceedings of SIGCOMM03, Karlsruhe, Germany. [3] Harvest: A Distributed Search System: http://harvest.sourceforge.net. [4] Majestic-12: Distributed Search Engine: http://www.majestic12.co.uk. [5] JXTA: http://www.jxta.org. [6] YaCy: Distributed P2P-based Web Indexing: http://www.yacy.net/yacy. [7] Lucene Search Engine Library: http://lucene.apache.org. [8] Test Collections (Time Magazine and NPL): www.dcs.gla.ac.uk/idom/ir_resources/test_collections. 178"
            ],
            "original_annotated_samples": [
                "Apocrita: A Distributed Peer-to-Peer File Sharing System for Intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Distributed Computing and Wireless & Telecommunications Technology University of Guelph-Humber Toronto, ON, M9W 5L7 Canada {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca ABSTRACT Many organizations are required to <br>author</br> documents for various purposes, and such documents may need to be accessible by all member of the organization.",
                "Many organizations are required to <br>author</br> documents for various purposes, and such documents may need to be accessible by all members of the organization."
            ],
            "translated_annotated_samples": [
                "Apocrita: Un sistema de intercambio de archivos distribuido de igual a igual para intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Computación Distribuida y Tecnología Inalámbrica y de Telecomunicaciones Universidad de Guelph-Humber Toronto, ON, M9W 5L7 Canadá {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca RESUMEN Muchas organizaciones necesitan redactar documentos para diversos fines, y es posible que estos documentos deban ser accesibles para todos los miembros de la organización.",
                "Muchas organizaciones están obligadas a <br>redactar</br> documentos para diversos fines, y dichos documentos pueden necesitar ser accesibles para todos los miembros de la organización."
            ],
            "translated_text": "Apocrita: Un sistema de intercambio de archivos distribuido de igual a igual para intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Computación Distribuida y Tecnología Inalámbrica y de Telecomunicaciones Universidad de Guelph-Humber Toronto, ON, M9W 5L7 Canadá {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca RESUMEN Muchas organizaciones necesitan redactar documentos para diversos fines, y es posible que estos documentos deban ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un documento. En algunos casos, estos documentos son compartidos entre autores, a través de correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento. Incluso puede haber varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario. Otro problema surge cuando un documento está disponible en la máquina de un usuario y ese usuario está desconectado, en cuyo caso el documento ya no es accesible. En este artículo presentamos Apocrita, un revolucionario sistema distribuido de intercambio de archivos P2P para intranets. Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos - Aplicaciones Distribuidas. Términos generales Diseño, Experimentación, Rendimiento. 1. INTRODUCCIÓN El paradigma de computación Peer-to-Peer (P2P) se está convirtiendo en una forma completamente nueva de compartir recursos mutuos a través de Internet. Con el acceso cada vez más común a Internet de banda ancha, la tecnología P2P finalmente se ha convertido en una forma viable de compartir documentos y archivos multimedia. Ya existen programas en el mercado que permiten compartir archivos P2P. Estos programas permiten a millones de usuarios compartir archivos entre ellos. Si bien la utilización de clientes P2P ya es un gran avance en comparación con descargar archivos de sitios web, el uso de dichos programas no está exento de problemas. Los archivos descargados todavía requieren mucho manejo manual por parte del usuario. El usuario todavía necesita colocar los archivos en el directorio adecuado, gestionar archivos con múltiples versiones, eliminar los archivos cuando ya no se deseen. Nos esforzamos por hacer que el proceso de compartir documentos dentro de una Intranet sea más fácil. Muchas organizaciones están obligadas a <br>redactar</br> documentos para diversos fines, y dichos documentos pueden necesitar ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un documento. En algunos casos, estos documentos son enviados entre autores, por correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o que se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento. Puede haber incluso varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario. Además, algunas organizaciones no cuentan con un servidor de intercambio de archivos o la infraestructura de red necesaria para habilitar uno. En este artículo presentamos Apocrita, que es un sistema de intercambio de archivos P2P distribuido y rentable para dichas organizaciones. El resto de este documento está organizado de la siguiente manera. En la sección 2, presentamos Apocrita. El mecanismo de indexación distribuida y el protocolo se presentan en la Sección 3. La sección 4 presenta el modelo de distribución peer-to-peer. Se presenta un prototipo de prueba de concepto en la Sección 5, y las evaluaciones de rendimiento se discuten en la Sección 6. El trabajo relacionado se presenta en la Sección 7, y finalmente las conclusiones y el trabajo futuro se discuten en la Sección 8. Apocrita es un sistema de intercambio de archivos entre pares distribuido, y ha sido diseñado para facilitar la búsqueda de documentos en un entorno de Intranet. Actualmente, es posible que los documentos se encuentren en la máquina de un usuario o en una máquina remota. Es incluso posible que diferentes revisiones puedan residir en cada nodo de la Intranet. Esto significa que debe haber un proceso manual para mantener las versiones de los documentos. Apocrita resuelve este problema utilizando dos enfoques. Primero, debido a la naturaleza inherente de Apocrita, el documento solo residirá en una ubicación lógica única. En segundo lugar, Apocrita proporciona un método para revertir a versiones anteriores de documentos. Se concede el permiso de hacer copias digitales o impresas de todo o parte de este trabajo para uso personal o en el aula sin cargo alguno, siempre y cuando las copias no se realicen ni distribuyan con fines de lucro o ventaja comercial, y que las copias lleven este aviso y la cita completa en la primera página. Para copiar de otra manera, o republicar, publicar en servidores o redistribuir en listas, se requiere permiso específico previo y/o un pago. ACMSE07, 23-24 DE MARZO DE 2007, WINSTON-SALEM, NC, EE. UU. COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 también distribuirá documentos en múltiples máquinas para garantizar la alta disponibilidad de documentos importantes. Por ejemplo, si una máquina contiene un documento importante y actualmente no es accesible, el sistema es capaz de mantener la disponibilidad del documento a través de este mecanismo de distribución. Proporciona una interfaz sencilla para buscar y acceder a archivos que pueden existir tanto local como remotamente. La naturaleza distribuida de los documentos es transparente para el usuario. Apocrita apoya un modelo de red descentralizada en el que los pares utilizan un protocolo de descubrimiento para determinar los pares. Apocrita está destinado para usuarios de red en una Intranet. El enfoque principal son las organizaciones que pueden no tener una red lo suficientemente grande como para necesitar un servidor de archivos y la infraestructura de soporte. Elimina la necesidad de que los documentos sean compartidos manualmente entre usuarios mientras se editan y reduce la posibilidad de que se distribuyan versiones conflictivas. El sistema también proporciona cierta redundancia y en caso de fallo de una máquina, no se perderán documentos importantes. Es independiente del sistema operativo y fácil de acceder a través de un navegador web o mediante una aplicación independiente. Para disminuir el tiempo requerido para indexar una gran cantidad de documentos, el proceso de indexación se distribuye entre los nodos inactivos disponibles. Los archivos locales y remotos deben ser fácilmente accesibles a través de un sistema de archivos virtual montable, proporcionando transparencia para los usuarios. Apocrita utiliza un índice distribuido para todos los documentos disponibles en la intranet. Cada nodo contendrá una parte del índice completo y estará al tanto de qué parte del índice tiene cada otro nodo. Un nodo podrá contactar a cada nodo que contenga una porción única del índice. Además, cada nodo tiene un índice local separado de sus propios documentos. Pero como se discutió más tarde, en la implementación actual, cada nodo tiene una copia de todo el índice. La indexación de los documentos está distribuida. Por lo tanto, si un nodo está en proceso de indexar muchos documentos, distribuirá el trabajo entre los nodos. Una vez que el índice local de un nodo se actualiza con los nuevos documentos, entonces se actualizará el índice distribuido. El sistema de indexación distribuida actual consta de tres módulos separados: NodeController, FileSender y NodeIndexer. La responsabilidad de cada módulo se discute más adelante en esta sección. 3.1 Protocolo de indexación El protocolo que hemos diseñado para la indexación distribuida se muestra en la Figura 1. Figura 1. Protocolo de indexación distribuida Apocrita. La CONSULTA INACTIVA se envía desde el nodo iniciador para determinar qué otros nodos pueden ayudar con el proceso de indexación en general. No se enviaron parámetros con el comando. El nodo receptor responderá con un comando BUSY o IDLE. Si se recibe el comando IDLE, el nodo iniciador agregará el nodo que responde a una lista de ayudantes de indexación distribuida disponibles. En caso de recibir un comando OCUPADO, el nodo que responde es ignorado. OCUPADO: Una vez que un nodo recibe una CONSULTA IDL, determinará si puede considerarse un candidato para la indexación distribuida. Esta determinación se basa en el uso general de la CPU del nodo. Si el nodo está utilizando la mayor parte de su CPU para otros procesos, el nodo responderá a la CONSULTA DE INACTIVIDAD con un comando OCUPADO. Como en el caso de la respuesta BUSY, el nodo que recibe la CONSULTA DE INACTIVIDAD determinará su elegibilidad para la indexación distribuida. Para ser considerado un candidato para la indexación distribuida, el uso total de la CPU debe ser mínimo para permitir la indexación dedicada de los documentos distribuidos. Si este es el caso, el nodo responderá con un comando IDLE. ARCHIVO ENTRANTE: Una vez que el nodo iniciador reúne un conjunto de nodos inactivos para ayudar con la indexación distribuida, dividirá los documentos que se enviarán a los nodos. Para hacer esto, envía un mensaje de ARCHIVO ENTRANTE, que contiene el nombre del archivo y su tamaño en bytes. Después de que se haya enviado el comando ARCHIVO ENTRANTE, el nodo iniciador comenzará a transmitir el archivo al otro nodo. El nodo iniciador recorrerá los archivos que se enviarán al otro nodo; cada flujo de archivo estará precedido por el comando ARCHIVO ENTRANTE con los parámetros apropiados. ARCHIVO DE ÍNDICE: Una vez que el nodo de indexación haya completado el proceso de indexación del conjunto de archivos, debe enviar el índice resultante de vuelta al nodo iniciador. El índice está compuesto por varios archivos, que existen en el sistema de archivos del nodo de indexación. Al igual que con el comando INCOMING FILE, el nodo de indexación transmite cada archivo de índice después de enviar un comando INDEX FILE. El comando INDEX FILE tiene dos parámetros: el primero es el nombre del índice y el segundo es el tamaño del archivo en bytes. Al enviar los conjuntos de archivos tanto para el índice como para los archivos a ser indexados, el nodo debe notificar al nodo correspondiente cuando el proceso esté completo. Una vez que el nodo iniciador haya terminado de enviar el conjunto de documentos a ser indexados, enviará entonces un comando de ENVÍO COMPLETO indicando al nodo de indexación que no hay más archivos y que el nodo puede proceder con la indexación de los archivos. En el caso de que el nodo iniciador envíe los archivos de índice, el nodo de indexación completará la transferencia con el comando ENVIAR COMPLETO indicando al nodo iniciador que no hay más archivos de índice por enviar y que el nodo iniciador puede entonces ensamblar esos archivos de índice en el índice principal. El NodeController es responsable de establecer conexiones con nodos en estado de reposo para distribuir el proceso de indexación. Usando JXTA [5], el controlador de nodos obtendrá un conjunto de nodos. Este conjunto de nodos se itera y a cada uno se le envía el comando IDLE QUERY. Los nodos que responden con inactividad son luego recopilados. El conjunto de nodos inactivos incluye al nodo que inicia el proceso de indexación distribuida, conocido como nodo local. Una vez que se obtiene la colección de nodos inactivos, el nodo actualiza el conjunto de controladores y divide equitativamente el conjunto de documentos que se van a indexar. Por ejemplo, si hay 100 documentos y 10 nodos (incluyendo el nodo local) entonces cada nodo tendrá 10 documentos para indexar. Para cada nodo de indexación se crea una instancia del objeto FileSender. El FileSender es consciente del conjunto de documentos de los que el nodo es responsable. Una vez que se ha creado un objeto FileSender para cada nodo, el NodeController espera a que cada FileSender termine. Cuando los objetos FileSender hayan completado, el NodeController tomará los índices resultantes de 175 nodos y los pasará a una instancia del IndexCompiler, que mantiene el índice y la lista de FileSenders. Una vez que el IndexCompiler haya completado, volverá al estado inactivo y activará el escáner de directorios para monitorear el conjunto de documentos de propiedad local en busca de cambios que puedan requerir reindexación. El NodeIndexer es responsable de recibir los documentos enviados por el nodo iniciador y luego indexarlos utilizando el motor Lucene [7]. Una vez que se completa el indexado, el índice resultante se transmite de vuelta al nodo iniciador y se compila en el índice local del propio nodo indexador. Antes de iniciar el proceso de indexación, se debe enviar un mensaje de CONSULTA INACTIVA. Esta es la primera orden que inicia el proceso de indexación. El nodo indexador determinará si se considera inactivo en función del uso actual de la CPU. Como se describe en la sección del protocolo, si el nodo no se está utilizando y tiene un bajo porcentaje de uso de CPU en general, devolverá IDLE al comando de CONSULTA DE INACTIVIDAD. Si el uso de la CPU de los nodos del indexador está por encima del 50% durante un período de tiempo especificado, se considerará ocupado y responderá al comando IDLE QUERY con BUSY. Si un nodo se determina ocupado, vuelve a su estado de escucha esperando otra CONSULTA INACTIVA de otro nodo iniciador. Si se determina que el nodo está inactivo, entrará en el estado en el que recibirá archivos del nodo iniciador de los que es responsable de indexar. Una vez que todos los archivos son recibidos por el nodo iniciador, indicado por un mensaje de ENVÍO COMPLETO, se inicia una instancia del motor de indexación de Lucene. Los archivos se almacenan en un directorio temporal separado de los documentos locales de los nodos que son responsables de mantener un índice de los mismos. El escritor de índices de Lucene indexa luego todos los archivos transferidos. El índice se almacena en la unidad dentro de un directorio temporal separado del índice actual. Después de que se completa la indexación de los archivos, el nodo indexador entra en el estado en el que los archivos de índice son enviados de vuelta al nodo iniciador. El nodo indexador recorre todos los archivos creados por Lucene's IndexWriter y los transmite al nodo iniciador. Una vez que estos archivos son devueltos, ese índice se fusiona en el índice completo de los nodos indexadores de los archivos existentes. Luego entra en el estado de espera, donde escuchará a otros nodos que requieran distribuir el proceso de indexación. El objeto FileSender es el nodo iniciador equivalente al nodo indexador. Inicia la comunicación entre el nodo iniciador y el nodo que ayudará en la indexación distribuida. El nodo iniciador ejecuta muchas instancias del nodo FileSender, una para cada otro nodo que haya determinado que está inactivo. Al instanciar el FileSender se le pasa el nodo al que es responsable de contactar y el conjunto de archivos que deben ser enviados. El primer trabajo de FileSenders es enviar los archivos que deben ser indexados por el otro nodo inactivo. Los archivos se transmiten uno a la vez al otro nodo. Envía cada archivo utilizando el comando ARCHIVO ENTRANTE. Con ese comando se envía el nombre del archivo que se está enviando y el tamaño en bytes. Una vez que todos los archivos hayan sido enviados, el FileSender envía el comando de ENVÍO COMPLETADO. El FileSender crea una instancia de Lucene's IndexWriter y se prepara para crear el índice en un directorio temporal en el sistema de archivos. El FileSender comenzará a recibir los archivos que se guardarán dentro del índice. Recibe un comando de ARCHIVO DE ÍNDICE con el nombre de los archivos y el tamaño en bytes. Este archivo se transmite luego al directorio de índice temporal en el nodo de FileSender. Después de que se haya completado la transferencia de los archivos de índice, el FileSender notifica a la instancia del compilador de índices que está lista para combinar el índice. Cada instancia del FileSender tiene su propia sección única de espacio temporal para almacenar el índice que ha sido transferido desde el nodo de indexación. Al notificar al IndexCompiler, también pasará la ubicación del directorio particular de FileSenders de ese índice. 4. Apocrita utiliza un modelo de distribución peer-to-peer para distribuir archivos. Los archivos se distribuyen únicamente desde un nodo servidor a un nodo cliente sin tener en cuenta la disponibilidad de las partes de archivo de otros clientes en la red. Esto significa que las transferencias de archivos serán rápidas y eficientes y no deberían afectar severamente la usabilidad de los nodos de servicio desde el punto de vista de un usuario local. El marco de trabajo JXTA se utiliza para implementar funcionalidades peer-to-peer. Esto se ha decidido debido al plazo extremadamente corto del proyecto, lo que nos permite aprovechar más de cinco años de pruebas y desarrollo, así como el apoyo de muchas organizaciones grandes que emplean JXTA en sus propios productos. No estamos preocupados por posibles problemas de calidad porque JXTA se considera el marco de pares a pares más maduro y estable disponible. Usando la terminología de JXTA, hay tres tipos de pares utilizados en la clasificación de nodos. Los pares de borde suelen ser nodos de baja capacidad de ancho de banda y no dedicados. Debido a estas características, los pares de borde no se utilizan con Apocrita. Los nodos de retransmisión suelen ser nodos dedicados de mayor ancho de banda. Esta es la clasificación de todos los nodos en la red de Apocrita, y, como tal, es la clasificación predeterminada utilizada. Los pares de encuentro se utilizan para coordinar el intercambio de mensajes entre nodos en la red de Apocrita. Esto significa que se requiere un mínimo de un par de encuentro por subred. 4.1 Descubrimiento de pares El subsistema del servidor Apocrita utiliza el Protocolo de Descubrimiento de Pares (PDP) de JXTA para encontrar pares participantes dentro de la red, como se muestra en la Figura 2. Figura 2. El proceso de descubrimiento de pares de Apocrita. 176 El PDP escucha los anuncios de pares de otros nodos en el enjambre de Apocrita. Si se detecta un anuncio de pares, el servidor intentará unirse al grupo de pares y comenzar a contribuir activamente a la red. Si el servicio de descubrimiento no encuentra pares, el servidor creará un nuevo grupo de pares y comenzará a anunciar este grupo de pares. Este nuevo grupo de pares se anunciará periódicamente en la red; cualquier nuevo par que se una a la red se conectará a este grupo de pares. Una ventaja distintiva de usar el PDP de JXTA es que Apocrita no tiene que ser sensible a matices de redes particulares como la Unidad de Transmisión Máxima (MTU). Además, Apocrita no tiene que admitir métodos de entrega de paquetes uno a muchos, como la multidifusión, y en su lugar puede depender de JXTA para este soporte. Operación de consulta de índice 4.2 Todos los nodos en el enjambre de Apocrita tienen una copia completa y actualizada del índice de red almacenado localmente. Esto hace que la consulta del índice para obtener resultados de búsqueda sea trivial. A diferencia del protocolo Gnutella, una consulta no tiene que propagarse por toda la red. Esto también significa que el tiempo para devolver los resultados de la consulta es muy rápido, mucho más rápido que los protocolos que dependen de los nodos en la red para pasar la consulta a lo largo de la red y luego esperar los resultados. Esto se demuestra en la Figura 3. Figura 3. Operación de consulta de Apocrita. Cada documento en el enjambre tiene un número de identificación único (ID) para el documento. Un nodo consultará el índice y se devolverá un resultado con el número de identificación del documento, así como una lista de pares con una copia del documento coincidente. Es entonces responsabilidad del par que busca contactar a los pares de la lista para negociar la transferencia de archivos entre el cliente y el servidor. IMPLEMENTACIÓN DEL PROTOTIPO Apocrita utiliza el marco de trabajo Lucene [7], el cual es un proyecto en desarrollo por la Fundación de Software Apache. Apache Lucene es una biblioteca de motor de búsqueda de texto de alto rendimiento y con todas las funciones, escrita completamente en Java. En la implementación actual, Apocrita solo es capaz de indexar documentos de texto plano. Apocrita utiliza el marco de trabajo JXTA [5] como una biblioteca de transporte peer-to-peer entre nodos. JXTA se utiliza para pasar tanto mensajes como archivos entre nodos en la red de búsqueda. Al utilizar JXTA, Apocrita aprovecha un mecanismo de transporte peer-to-peer confiable y probado. Utiliza la facilidad de tuberías para pasar mensajes y archivos entre nodos. La instalación de tuberías ofrece muchos tipos diferentes de anuncios de tuberías. Esto incluye un conducto unicast no seguro, un conducto unicast seguro y un conducto no seguro propagado. El paso de mensajes se utiliza para enviar mensajes de estado entre nodos con el fin de ayudar en la indexación, búsqueda y recuperación. Por ejemplo, un nodo que intenta encontrar un nodo inactivo para participar en la indexación consultará a otros nodos a través de la facilidad de mensajes. Los nodos inactivos responderán con un mensaje de estado para indicar que están disponibles para comenzar a indexar. La transferencia de archivos se utiliza dentro de Apocrita para la transferencia de archivos. Después de que un archivo haya sido buscado y localizado dentro del grupo de pares, se abrirá un socket JXTA y se llevará a cabo la transferencia de archivos. Un socket JXTA es similar a un socket Java estándar, sin embargo un socket JXTA utiliza tuberías JXTA en el transporte de red subyacente. El paso de archivos utiliza un conducto unicast no seguro para transferir datos. La transferencia de archivos también se utiliza dentro de Apocrita para la transferencia de índices. La transferencia de índice funciona exactamente igual que la transferencia de archivos. De hecho, la transferencia de índice realmente pasa el índice como un archivo. Sin embargo, hay una diferencia clave entre la transferencia de archivos y la transferencia de índices. En el caso de la transferencia de archivos, se crea un socket entre solo dos nodos. En el caso de la transferencia de índices, se debe crear un socket entre todos los nodos de la red para pasar el índice, lo que permite que todos los nodos tengan un índice completo y total de toda la red. Para facilitar esta transferencia de manera eficiente, la transferencia de índices utilizará un tubo propagado no seguro para comunicarse con todos los nodos en la red de Apocrita. 6. EVALUACIÓN DEL RENDIMIENTO Es difícil comparar objetivamente los resultados obtenidos a través de Apocrita porque no hay otro sistema disponible actualmente con los mismos objetivos que Apocrita. Sin embargo, hemos evaluado el rendimiento de las secciones críticas del sistema. Las secciones críticas fueron determinadas como los procesos que requieren más tiempo. La evaluación se completó en computadoras de laboratorio estándar en una LAN Ethernet de 100Mb/s; las máquinas ejecutan Windows XP con un CPU Pentium 4 funcionando a 2.4GHz con 512 MB de RAM. El tiempo de indexación se ha ejecutado tanto en la colección de la revista Time [8], que contiene 432 documentos y 83 consultas con sus resultados más relevantes, como en la colección NPL [8], que tiene un total de 11,429 documentos y 93 consultas con resultados esperados. Cada documento tiene un tamaño que oscila entre 4KB y 8KB. Como muestra la Figura 4, el número de nodos involucrados en el proceso de indexación afecta el tiempo necesario para completar el proceso de indexación, a veces de manera drástica. Figura 4. Tiempo de nodo vs. tiempo de índice. La diferencia al pasar de un nodo de indexación a dos nodos de indexación es la más drástica y equivale a un tiempo de indexación un 37% más rápido que un solo nodo de indexación. La diferencia entre dos nodos de indexación y tres nodos de indexación sigue siendo significativa y representa un tiempo un 16% más rápido que dos nodos de indexación. A medida que aumenta el número de nodos de indexación, los resultados son menos dramáticos. Esto se puede atribuir al tiempo adicional asociado con tener muchos nodos realizando indexación. El tiempo necesario para comunicarse con un nodo es constante, por lo que a medida que aumenta el número de nodos, esta constante se vuelve más predominante. Además, la complejidad de unir los resultados de indexación es una operación compleja y se complica aún más a medida que aumenta el número de nodos de indexación. El rendimiento del socket también es una parte muy importante de Apocrita. Se realizaron pruebas de rendimiento utilizando un archivo de 65MB en un sistema con el cliente y el servidor ejecutándose localmente. Esto se hizo para aislar posibles problemas de red. Aunque menos drásticos, se mostraron resultados similares cuando el cliente y el servidor se ejecutan en hardware independiente. Para mitigar posibles errores inesperados, cada prueba se ejecutó 10 veces. Figura 5. Sockets de Java vs. sockets de JXTA. Como muestra la Figura 5, el rendimiento de los sockets JXTA es pésimo en comparación con el rendimiento de los sockets estándar de Java. La tasa de transferencia mínima obtenida utilizando sockets de Java es de 81,945KB/s, mientras que la tasa de transferencia mínima obtenida utilizando sockets de JXTA es mucho menor, de 3,805KB/s. La tasa de transferencia máxima obtenida usando sockets de Java es de 97,412KB/s, mientras que la tasa de transferencia máxima obtenida usando sockets de JXTA es de 5,530KB/s. Finalmente, la tasa de transferencia promedio utilizando sockets de Java es de 87,540KB/s, mientras que la tasa de transferencia promedio utilizando sockets de JXTA es de 4,293KB/s. El problema principal encontrado en estos benchmarks es que el mecanismo de transporte de red subyacente no funciona tan rápido o eficientemente como se esperaba. Para obtener un aumento en el rendimiento, el marco de trabajo JXTA necesita ser sustituido por un enfoque más tradicional. El tiempo de indexación también es un cuello de botella y deberá mejorarse para que la calidad general de Apocrita mejore. 7. TRABAJO RELACIONADO Existen hoy varios sistemas descentralizados P2P [1, 2, 3] que Apocrita incluye algunas de sus funcionalidades. Sin embargo, Apocrita también cuenta con características únicas de búsqueda e indexación novedosas que hacen que este sistema sea único. Por ejemplo, Majestic-12 [4] es un proyecto de búsqueda e indexación distribuida diseñado para buscar en Internet. Cada usuario instalaría un cliente, el cual es responsable de indexar una parte de la web. Una área central para consultar el índice está disponible en la página web de Majestic-12. El índice en sí no se distribuye, solo la acción de indexar se distribuye. El aspecto de indexación distribuida de este proyecto se relaciona más estrechamente con los objetivos de Apocrita. YaCy es una aplicación de búsqueda web peer-to-peer. YaCy consta de un rastreador web, un indexador, un motor de base de datos incorporado y un protocolo de intercambio de índices p2p. YaCy está diseñado para mantener un índice distribuido de Internet. Utilizaba una tabla hash distribuida (DHT) para mantener el índice. El nodo local se utiliza para hacer consultas, pero todos los resultados que se devuelven son accesibles en Internet. YaCy utilizó muchos pares y DHT para mantener un índice distribuido. Apocrita también utilizará un índice distribuido en futuras implementaciones y podría beneficiarse de utilizar una implementación de un DHT. Sin embargo, YaCy está diseñado como un motor de búsqueda web y, por lo tanto, resuelve un problema muy diferente al de Apocrita. 8. CONCLUSIONES Y TRABAJO FUTURO Presentamos Apocrita, un sistema distribuido de búsqueda e indexación P2P destinado a usuarios de redes en una intranet. Puede ayudar a las organizaciones que no cuentan con un servidor de archivos en red o con la infraestructura de red necesaria para compartir documentos. Elimina la necesidad de que los documentos sean compartidos manualmente entre usuarios mientras se editan y reduce la posibilidad de que se distribuyan versiones conflictivas. Se ha construido un prototipo de prueba de concepto, pero los resultados de medir el mecanismo de transporte de red y el tiempo de indexación no fueron tan impresionantes como se había imaginado inicialmente. A pesar de estas deficiencias, la experiencia adquirida en el diseño e implementación de Apocrita nos ha brindado una mayor comprensión sobre la construcción de sistemas distribuidos desafiantes. Para trabajos futuros, Apocrita contará con un modelo inteligente de distribución de contenido en el que una única instancia de un archivo puede replicarse de manera inteligente y transparente en toda la red para garantizar que una copia de cada archivo importante esté siempre disponible independientemente de la disponibilidad de nodos específicos en la red. Además, planeamos integrar un sistema de control de revisiones en la parte de distribución de contenido de Apocrita para que los usuarios puedan actualizar un archivo existente que encontraron y mantener la revisión antigua, propagando la nueva revisión. Finalmente, la implementación actual tiene cierto sobrecosto y redundancia debido a que se mantiene todo el índice en cada nodo individual, planeamos diseñar un índice distribuido. 9. REFERENCIAS [1] Rodrigues, R., Liskov, B., Shrira, L.: El diseño de un sistema peer-to-peer robusto. Disponible en línea: http://www.pmg.lcs.mit.edu/~rodrigo/ew02-robust.pdf. [2] Chawathe, Y., Ratnasamy, S., Breslau, L., Lanham, N., y Chenker, S.: Haciendo escalables los sistemas P2P similares a Gnutella. En Actas de SIGCOMM03, Karlsruhe, Alemania. [3] Harvest: Un Sistema de Búsqueda Distribuida: http://harvest.sourceforge.net. [4] Majestic-12: Motor de Búsqueda Distribuido: http://www.majestic12.co.uk. [5] JXTA: http://www.jxta.org. [6] YaCy: Indexación Web Distribuida basada en P2P: http://www.yacy.net/yacy. [7] Biblioteca del Motor de Búsqueda Lucene: http://lucene.apache.org. [8] Colecciones de Pruebas (Time Magazine y NPL): www.dcs.gla.ac.uk/idom/ir_resources/test_collections. 178 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "document": {
            "translated_key": "documento",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Apocrita: A Distributed Peer-to-Peer File Sharing System for Intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Distributed Computing and Wireless & Telecommunications Technology University of Guelph-Humber Toronto, ON, M9W 5L7 Canada {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca ABSTRACT Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all member of the organization.",
                "This access may be needed for editing or simply viewing a <br>document</br>.",
                "In some cases these documents are shared between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a <br>document</br>.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular <br>document</br>, which some search tools such as Google Desktop may be a solution for local documents but will not find a <br>document</br> on another users machine.",
                "Another problem arises when a <br>document</br> is made available on a users machine and that user is offline, in which case the <br>document</br> is no longer accessible.",
                "In this paper we present Apocrita, a revolutionary distributed P2P file sharing system for Intranets.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Distributed applications.",
                "General Terms Design, Experimentation, Performance. 1.",
                "INTRODUCTION The Peer-to-Peer (P2P) computing paradigm is becoming a completely new form of mutual resource sharing over the Internet.",
                "With the increasingly common place broadband Internet access, P2P technology has finally become a viable way to share documents and media files.",
                "There are already programs on the market that enable P2P file sharing.",
                "These programs enable millions of users to share files among themselves.",
                "While the utilization of P2P clients is already a gigantic step forward compared to downloading files off websites, using such programs are not without their problems.",
                "The downloaded files still require a lot of manual management by the user.",
                "The user still needs to put the files in the proper directory, manage files with multiple versions, delete the files when they are no longer wanted.",
                "We strive to make the process of sharing documents within an Intranet easier.",
                "Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all members of the organization.",
                "This access may be needed for editing or simply viewing a <br>document</br>.",
                "In some cases these documents are sent between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a <br>document</br>.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular <br>document</br>, which some search tools such as Google Desktop may be a solution for local documents but will not find a <br>document</br> on another users machine.",
                "Furthermore, some organizations do not have a file sharing server or the necessary network infrastructure to enable one.",
                "In this paper we present Apocrita, which is a cost-effective distributed P2P file sharing system for such organizations.",
                "The rest of this paper is organized as follows.",
                "In section 2, we present Apocrita.",
                "The distributed indexing mechanism and protocol are presented in Section 3.",
                "Section 4 presents the peer-topeer distribution model.",
                "A proof of concept prototype is presented in Section 5, and performance evaluations are discussed in Section 6.",
                "Related work is presented is Section 7, and finally conclusions and future work are discussed in Section 8. 2.",
                "APOCRITA Apocrita is a distributed peer-to-peer file sharing system, and has been designed to make finding documents easier in an Intranet environment.",
                "Currently, it is possible for documents to be located on a users machine or on a remote machine.",
                "It is even possible that different revisions could reside on each node on the Intranet.",
                "This means there must be a manual process to maintain <br>document</br> versions.",
                "Apocrita solves this problem using two approaches.",
                "First, due to the inherent nature of Apocrita, the <br>document</br> will only reside on a single logical location.",
                "Second, Apocrita provides a method of reverting to previous <br>document</br> versions.",
                "Apocrita Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page.",
                "To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.",
                "ACMSE07, MARCH 23-24, 2007, WINSTON-SALEM, NC, USA.",
                "COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 will also distribute documents across multiple machines to ensure high availability of important documents.",
                "For example, if a machine contains an important <br>document</br> and the machine is currently inaccessible, the system is capable of maintaining availability of the <br>document</br> through this distribution mechanism.",
                "It provides a simple interface for searching and accessing files that may exist either locally or remotely.",
                "The distributed nature of the documents is transparent to the user.",
                "Apocrita supports a decentralized network model where the peers use a discovery protocol to determine peers.",
                "Apocrita is intended for network users on an Intranet.",
                "The main focus is organizations that may not have a network large enough to require a file server and supporting infrastructure.",
                "It eliminates the need for documents to be manually shared between users while being edited and reduces the possibility of conflicting versions being distributed.",
                "The system also provides some redundancy and in the event of a single machine failure, no important documents will be lost.",
                "It is operating system independent, and easy to access through a web browser or through a standalone application.",
                "To decrease the time required for indexing a large number of documents, the indexing process is distributed across available idle nodes.",
                "Local and remote files should be easily accessible through a virtual mountable file system, providing transparency for users. 3.",
                "DISTRIBUTED INDEXING Apocrita uses a distributed index for all the documents that are available on the Intranet.",
                "Each node will contain part of the full index, and be aware of what part of the index each other node has.",
                "A node will be able to contact each node that contains a unique portion of the index.",
                "In addition, each node has a separate local index of its own documents.",
                "But as discussed later, in the current implementation, each node has a copy of the entire index.",
                "Indexing of the documents is distributed.",
                "Therefore, if a node is in the process of indexing many documents, it will break up the work over the nodes.",
                "Once a nodes local index is updated with the new documents, the distributed index will then be updated.",
                "The current distributed indexing system consists of three separate modules: NodeController, FileSender, and NodeIndexer.",
                "The responsibility of each module is discussed later in this section. 3.1 Indexing Protocol The protocol we have designed for the distributed indexing is depicted in Figure 1.",
                "Figure 1.",
                "Apocrita distributed indexing protocol.",
                "IDLE QUERY: The IDLE QUERY is sent out from the initiating node to determine which other nodes may be able to help with the overall indexing process.",
                "There are no parameters sent with the command.",
                "The receiving node will respond with either a BUSY or IDLE command.",
                "If the IDLE command is received, the initiating node will add the responding node to a list of available distributed indexing helpers.",
                "In the case of a BUSY command being received, the responding node is ignored.",
                "BUSY: Once a node received an IDL QUERY, it will determine whether it can be considered a candidate for distributed indexing.",
                "This determination is based on the overall CPU usage of the node.",
                "If the node is using most of its CPU for other processes, the node will respond to the IDLE QUERY with a BUSY command.",
                "IDLE: As with the case of the BUSY response, the node receiving the IDLE QUERY will determine its eligibility for distributed indexing.",
                "To be considered a candidate for distributed indexing, the overall CPU usage must be at a minimum to all for dedicated indexing of the distributed documents.",
                "If this is the case, the node will respond with an IDLE command.",
                "INCOMING FILE: Once the initiating node assembles a set of idle nodes to assist with the distributed indexing, it will divide the documents to be sent to the nodes.",
                "To do this, it sends an INCOMING FILE message, which contains the name of the file as well as the size in bytes.",
                "After the INCOMING FILE command has been sent, the initiating node will begin to stream the file to the other node.",
                "The initiating node will loop through the files that are to be sent to the other node; each file stream being preceded by the INCOMING FILE command with the appropriate parameters.",
                "INDEX FILE: Once the indexing node has completed the indexing process of the set of files, it must send the resultant index back to the initiating node.",
                "The index is comprised of multiple files, which exist on the file system of the indexing node.",
                "As with the INCOMING FILE command, the indexing node streams each index file after sending an INDEX FILE command.",
                "The INDEX FILE command has two parameters: the first being the name of the index, and the second is the size of the file in bytes.",
                "SEND COMPLETE: When sending the sets of files for both the index and the files to be indexed, the node must notify the corresponding node when the process is complete.",
                "Once the initiating node is finished sending the set of documents to be indexed, it will then send a SEND COMPLETE command indicating to the indexing node that there are no more files and the node can proceed with indexing the files.",
                "In the case of the initiating node sending the index files, the indexing node will complete the transfer with the SEND COMPLETE command indicating to the initiating node that there are no more index files to be sent and the initiating node can then assemble those index files into the main index.",
                "The NodeController is responsible for setting up connections with nodes in the idle state to distribute the indexing process.",
                "Using JXTA [5], the node controller will obtain a set of nodes.",
                "This set of nodes is iterated and each one is sent the IDLE QUERY command.",
                "The nodes that respond with idle are then collected.",
                "The set of idle nodes includes the node initiating the distributed indexing process, referred to as the local node.",
                "Once the collection of idle nodes is obtained, the node updates the set of controllers and evenly divides the set of documents that are to be indexed.",
                "For example, if there are 100 documents and 10 nodes (including the local node) then each node will have 10 documents to index.",
                "For each indexing node an instance of the FileSender object is created.",
                "The FileSender is aware of the set of documents that node is responsible for.",
                "Once a FileSender object has been created for each node, the NodeController waits for each FileSender to complete.",
                "When the FileSender objects have completed the NodeController will take the resultant indexes from 175 each node and pass them to an instance of the IndexCompiler, which maintains the index and the list of FileSenders.",
                "Once the IndexCompiler has completed it will return to the idle state and activate the directory scanner to monitor the locally owned set of documents for changes that may require reindexing.",
                "The NodeIndexer is responsible for receiving documents sent to it by the initiating node and then indexing them using the Lucene engine [7].",
                "Once the indexing is complete the resulting index is streamed back to the initiating node as well as compiled in the indexer nodes own local index.",
                "Before initiating the indexing process it must be sent an IDLE QUERY message.",
                "This is the first command that sets off the indexing process.",
                "The indexer node will determine whether it is considered idle based on the current CPU usage.",
                "As outlined in the protocol section if the node is not being used and has a low overall CPU usage percentage it will return IDLE to the IDLE QUERY command.",
                "If the indexer nodes CPU usage is above 50% for a specified amount of time it is then considered to be busy and will respond to the IDLE QUERY command with BUSY.",
                "If a node is determined busy it returns to its listening state waiting for another IDLE QUERY from another initiating node.",
                "If the node is determined to be idle it will enter the state where it will receive files from the initiating node that it is responsible for indexing.",
                "Once all of the files are received by the initiating node, indicated by a SEND COMPLETE message, it starts an instance of the Lucene indexing engine.",
                "The files are stored in a temporary directory separate from the nodes local documents that it is responsible for maintaining an index of.",
                "The Lucene index writer then indexes all of the transferred files.",
                "The index is stored on the drive within a temporary directory separate from the current index.",
                "After the indexing of the files completes the indexer node enters the state where the index files are sent back to the initiating node.",
                "The indexer node loops through all of the files created by Lucenes IndexWriter and streams them to the initiating node.",
                "Once these files are sent back that index is then merged into the indexer nodes own full index of the existing files.",
                "It then enters the idle state where it will then listen for any other nodes that required distributing the indexing process.",
                "The FileSender object is the initiating node equivalent of the indexer node.",
                "It initiates the communication between the initiating node and the node that will assist in the distributed indexing.",
                "The initiating node runs many instances of the FileSender node one for each other node it has determined to be idle.",
                "Upon instantiation of the FileSender it is passed the node that it is responsible for contacting and the set of files that must be sent.",
                "The FileSenders first job is to send the files that are to be indexed by the other idle node.",
                "The files are streamed one at a time to the other node.",
                "It sends each file using the INCOMING FILE command.",
                "With that command it sends the name of the file being sent and the size in bytes.",
                "Once all files have been sent the FileSender sends the SEND COMPLETE command.",
                "The FileSender creates an instance of Lucenes IndexWriter and prepares to create the index in a temporary directory on the file system.",
                "The FileSender will begin to receive the files that are to be saved within the index.",
                "It receives an INDEX FILE command with the name of the files and the size in bytes.",
                "This file is then streamed into the temporary index directory on the FileSender node.",
                "After the transfer of the index files has been completed the FileSender notifies the instance of the index compiler that it is ready to combine the index.",
                "Each instance of the FileSender has its own unique section of temporary space to store the index that has been transferred back from the indexing node.",
                "When notifying the IndexCompiler it will also pass the location of the particular FileSenders directory location of that index. 4.",
                "PEER-TO-PEER DISTRIBUTION Apocrita uses a peer-to-peer distribution model in order to distribute files.",
                "Files are distributed solely from a serving node to a client node without regard for the availability of file pieces from other clients in the network.",
                "This means that the file transfers will be fast and efficient and should not severely affect the usability of serving nodes from the point of view of a local user.",
                "The JXTA framework [5] is used in order to implement peer-to-peer functionality.",
                "This has been decided due to the extremely shorttimeline of the project which allows us to take advantage of over five years of testing and development and support from many large organizations employing JXTA in their own products.",
                "We are not concerned with any potential quality problems because JXTA is considered to be the most mature and stable peer-to-peer framework available.",
                "Using JXTA terminology, there are three types of peers used in node classification.",
                "Edge peers are typically low-bandwidth, non-dedicated nodes.",
                "Due to these characteristics, edge peers are not used with Apocrita.",
                "Relay peers are typically higher-bandwidth, dedicated nodes.",
                "This is the classification of all nodes in the Apocrita network, and, as such, are the default classification used.",
                "Rendezvous peers are used to coordinate message passing between nodes in the Apocrita network.",
                "This means that a minimum of one rendezvous peer per subnet is required. 4.1 Peer Discovery The Apocrita server subsystem uses the JXTA Peer Discovery Protocol (PDP) in order to find participating peers within the network as shown in Figure 2.",
                "Figure 2.",
                "Apocrita peer discovery process. 176 The PDP listens for peer advertisements from other nodes in the Apocrita swarm.",
                "If a peer advertisement is detected, the server will attempt to join the peer group and start actively contributing to the network.",
                "If no peers are found by the discovery service, the server will create a new peer group and start advertising this peer group.",
                "This new peer group will be periodically advertised on the network; any new peers joining the network will attach to this peer group.",
                "A distinct advantage of using the JXTA PDP is that Apocrita does not have to be sensitive to particular networking nuances such as Maximum Transmission Unit (MTU).",
                "In addition, Apocrita does not have to support one-to-many packet delivery methods such as multicast and instead can rely on JXTA for this support. 4.2 Index Query Operation All nodes in the Apocrita swarm have a complete and up-to-date copy of the network index stored locally.",
                "This makes querying the index for search results trivial.",
                "Unlike the Gnutella protocol, a query does not have to propagate throughout the network.",
                "This also means that the time to return query results is very fast - much faster than protocols that rely on nodes in the network to pass the query throughout the network and then wait for results.",
                "This is demonstrated in Figure 3.",
                "Figure 3.",
                "Apocrita query operation.",
                "Each <br>document</br> in the swarm has a unique <br>document</br> identification number (ID).",
                "A node will query the index and a result will be returned with both the <br>document</br> ID number as well as a list of peers with a copy of the matched <br>document</br> ID.",
                "It is then the responsibility of the searching peer to contact the peers in the list to negotiate file transfer between the client and server. 5.",
                "PROTOTYPE IMPLEMENTATION Apocrita uses the Lucene framework [7], which is a project under development by the Apache Software Foundation.",
                "Apache Lucene is a high-performance, full-featured text search engine library written entirely in Java.",
                "In the current implementation, Apocrita is only capable of indexing plain text documents.",
                "Apocrita uses the JXTA framework [5] as a peer-to-peer transport library between nodes.",
                "JXTA is used to pass both messages and files between nodes in the search network.",
                "By using JXTA, Apocrita takes advantage of a reliable, and proven peer-to-peer transport mechanism.",
                "It uses the pipe facility in order to pass messages and files between nodes.",
                "The pipe facility provides many different types of pipe advertisements.",
                "This includes an unsecured unicast pipe, a secured unicast pipe, and a propagated unsecured pipe.",
                "Message passing is used to pass status messages between nodes in order to aid in indexing, searching, and retrieval.",
                "For example, a node attempting to find an idle node to participate in indexing will query nodes via the message facility.",
                "Idle nodes will reply with a status message to indicate they are available to start indexing.",
                "File passing is used within Apocrita for file transfer.",
                "After a file has been searched for and located within the peer group, a JXTA socket will be opened and file transfer will take place.",
                "A JXTA socket is similar to a standard Java socket, however a JXTA socket uses JXTA pipes in underlying network transport.",
                "File passing uses an unsecured unicast pipe in order to transfer data.",
                "File passing is also used within Apocrita for index transfer.",
                "Index transfer works exactly like a file transfer.",
                "In fact, the index transfer actually passes the index as a file.",
                "However, there is one key difference between file transfer and index transfer.",
                "In the case of file transfer, a socket is created between only two nodes.",
                "In the case of index transfer, a socket must be created between all nodes in the network in order to pass the index, which allows for all nodes to have a full and complete index of the entire network.",
                "In order to facilitate this transfer efficiently, index transfer will use an unsecured propagated pipe to communicate with all nodes in the Apocrita network. 6.",
                "PERFORMANCE EVALUATION It is difficult to objectively benchmark the results obtained through Apocrita because there is no other system currently available with the same goals as Apocrita.",
                "We have, however, evaluated the performance of the critical sections of the system.",
                "The critical sections were determined to be the processes that are the most time intensive.",
                "The evaluation was completed on standard lab computers on a 100Mb/s Ethernet LAN; the machines run Windows XP with a Pentium 4 CPU running at 2.4GHz with 512 MB of RAM.",
                "The indexing time has been run against both: the Time Magazine collection [8], which contains 432 documents and 83 queries and their most relevant results, and the NPL collection [8] that has a total of 11,429 documents and 93 queries with expected results.",
                "Each <br>document</br> ranges in size between 4KB and 8KB.",
                "As Figure 4 demonstrates, the number of nodes involved in the indexing process affects the time taken to complete the indexing processsometimes even drastically.",
                "Figure 4.",
                "Node vs. index time.",
                "The difference in going from one indexing node to two indexing nodes is the most drastic and equates to an indexing time 37% faster than a single indexing node.",
                "The different between two 177 indexing nodes and three indexing nodes is still significant and represents a 16% faster time than two indexing nodes.",
                "As the number of indexing nodes increases the results are less dramatic.",
                "This can be attributed to the time overhead associated with having many nodes perform indexing.",
                "The time needed to communicate with a node is constant, so as the number of nodes increases, this constant becomes more prevalent.",
                "Also, the complexity of joining the indexing results is a complex operation and is complicated further as the number of indexing nodes increases.",
                "Socket performance is also a very important part of Apocrita.",
                "Benchmarks were performed using a 65MB file on a system with both the client and server running locally.",
                "This was done to isolate possible network issues.",
                "Although less drastic, similar results were shown when the client and server run on independent hardware.",
                "In order to mitigate possible unexpected errors, each test was run 10 times.",
                "Figure 5.",
                "Java sockets vs. JXTA sockets.",
                "As Figure 5 demonstrates, the performance of JXTA sockets is abysmal as compared to the performance of standard Java sockets.",
                "The minimum transfer rate obtained using Java sockets is 81,945KB/s while the minimum transfer rater obtained using JXTA sockets is much lower at 3, 805KB/s.",
                "The maximum transfer rater obtain using Java sockets is 97,412KB/s while the maximum transfer rate obtained using JXTA sockets is 5,530KB/s.",
                "Finally, the average transfer rate using Java sockets is 87,540KB/s while the average transfer rate using JXTA sockets is 4,293KB/s.",
                "The major problem found in these benchmarks is that the underlying network transport mechanism does not perform as quickly or efficiently as expected.",
                "In order to garner a performance increase, the JXTA framework needs to be substituted with a more traditional approach.",
                "The indexing time is also a bottleneck and will need to be improved for the overall quality of Apocrita to be improved. 7.",
                "RELATED WORK Several decentralized P2P systems [1, 2, 3] exist today that Apocrita features some of their functionality.",
                "However, Apocrita also has unique novel searching and indexing features that make this system unique.",
                "For example, Majestic-12 [4] is a distributed search and indexing project designed for searching the Internet.",
                "Each user would install a client, which is responsible for indexing a portion of the web.",
                "A central area for querying the index is available on the Majestic-12 web page.",
                "The index itself is not distributed, only the act of indexing is distributed.",
                "The distributed indexing aspect of this project most closely relates Apocrita goals.",
                "YaCy [6] is a peer-to-peer web search application.",
                "YaCy consists of a web crawler, an indexer, a built-in database engine, and a p2p index exchange protocol.",
                "YaCy is designed to maintain a distributed index of the Internet.",
                "It used a distributed hash table (DHT) to maintain the index.",
                "The local node is used to query but all results that are returned are accessible on the Internet.",
                "YaCy used many peers and DHT to maintain a distributed index.",
                "Apocrita will also use a distributed index in future implementations and may benefit from using an implementation of a DHT.",
                "YaCy however, is designed as a web search engine and, as such solves a much different problem than Apocrita. 8.",
                "CONCLUSIONS AND FUTURE WORK We presented Apocrita, a distributed P2P searching and indexing system intended for network users on an Intranet.",
                "It can help organizations with no network file server or necessary network infrastructure to share documents.",
                "It eliminates the need for documents to be manually shared among users while being edited and reduce the possibility of conflicting versions being distributed.",
                "A proof of concept prototype has been constructed, but the results from measuring the network transport mechanism and the indexing time were not as impressive as initially envisioned.",
                "Despite these shortcomings, the experience gained from the design and implementation of Apocrita has given us more insight into building challenging distributed systems.",
                "For future work, Apocrita will have a smart content distribution model in which a single instance of a file can intelligently and transparently replicate throughout the network to ensure a copy of every important file will always be available regardless of the availability of specific nodes in the network.",
                "In addition, we plan to integrate a revision control system into the content distribution portion of Apocrita so that users could have the ability to update an existing file that they found and have the old revision maintained and the new revision propagated.",
                "Finally, the current implementation has some overhead and redundancy due to the fact that the entire index is maintained on each individual node, we plan to design a distributed index. 9.",
                "REFERENCES [1] Rodrigues, R., Liskov, B., Shrira, L.: The Design of a Robust Peer-to-Peer System.",
                "Available online: http://www.pmg.lcs.mit.edu/~rodrigo/ew02-robust.pdf. [2] Chawathe, Y., Ratnasamy, S., Breslau, L., Lanham, N., and Chenker, S.: Making Gnutella-like P2P Systems Scalable.",
                "In Proceedings of SIGCOMM03, Karlsruhe, Germany. [3] Harvest: A Distributed Search System: http://harvest.sourceforge.net. [4] Majestic-12: Distributed Search Engine: http://www.majestic12.co.uk. [5] JXTA: http://www.jxta.org. [6] YaCy: Distributed P2P-based Web Indexing: http://www.yacy.net/yacy. [7] Lucene Search Engine Library: http://lucene.apache.org. [8] Test Collections (Time Magazine and NPL): www.dcs.gla.ac.uk/idom/ir_resources/test_collections. 178"
            ],
            "original_annotated_samples": [
                "This access may be needed for editing or simply viewing a <br>document</br>.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a <br>document</br>.",
                "The user may be required to search for a particular <br>document</br>, which some search tools such as Google Desktop may be a solution for local documents but will not find a <br>document</br> on another users machine.",
                "Another problem arises when a <br>document</br> is made available on a users machine and that user is offline, in which case the <br>document</br> is no longer accessible.",
                "This access may be needed for editing or simply viewing a <br>document</br>."
            ],
            "translated_annotated_samples": [
                "Este acceso puede ser necesario para editar o simplemente ver un <br>documento</br>.",
                "Esto puede causar fácilmente que se envíe una versión incorrecta o se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un <br>documento</br>.",
                "El usuario puede verse en la necesidad de buscar un <br>documento</br> en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para <br>documento</br>s locales, pero no encontrarán un documento en la máquina de otro usuario.",
                "Otro problema surge cuando un <br>documento</br> está disponible en la máquina de un usuario y ese usuario está desconectado, en cuyo caso el <br>documento</br> ya no es accesible.",
                "Este acceso puede ser necesario para editar o simplemente ver un <br>documento</br>."
            ],
            "translated_text": "Apocrita: Un sistema de intercambio de archivos distribuido de igual a igual para intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Computación Distribuida y Tecnología Inalámbrica y de Telecomunicaciones Universidad de Guelph-Humber Toronto, ON, M9W 5L7 Canadá {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca RESUMEN Muchas organizaciones necesitan redactar documentos para diversos fines, y es posible que estos documentos deban ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un <br>documento</br>. En algunos casos, estos documentos son compartidos entre autores, a través de correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un <br>documento</br>. Incluso puede haber varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un <br>documento</br> en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para <br>documento</br>s locales, pero no encontrarán un documento en la máquina de otro usuario. Otro problema surge cuando un <br>documento</br> está disponible en la máquina de un usuario y ese usuario está desconectado, en cuyo caso el <br>documento</br> ya no es accesible. En este artículo presentamos Apocrita, un revolucionario sistema distribuido de intercambio de archivos P2P para intranets. Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos - Aplicaciones Distribuidas. Términos generales Diseño, Experimentación, Rendimiento. 1. INTRODUCCIÓN El paradigma de computación Peer-to-Peer (P2P) se está convirtiendo en una forma completamente nueva de compartir recursos mutuos a través de Internet. Con el acceso cada vez más común a Internet de banda ancha, la tecnología P2P finalmente se ha convertido en una forma viable de compartir documentos y archivos multimedia. Ya existen programas en el mercado que permiten compartir archivos P2P. Estos programas permiten a millones de usuarios compartir archivos entre ellos. Si bien la utilización de clientes P2P ya es un gran avance en comparación con descargar archivos de sitios web, el uso de dichos programas no está exento de problemas. Los archivos descargados todavía requieren mucho manejo manual por parte del usuario. El usuario todavía necesita colocar los archivos en el directorio adecuado, gestionar archivos con múltiples versiones, eliminar los archivos cuando ya no se deseen. Nos esforzamos por hacer que el proceso de compartir documentos dentro de una Intranet sea más fácil. Muchas organizaciones están obligadas a redactar documentos para diversos fines, y dichos documentos pueden necesitar ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un <br>documento</br>. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "apocrita": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "<br>apocrita</br>: A Distributed Peer-to-Peer File Sharing System for Intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Distributed Computing and Wireless & Telecommunications Technology University of Guelph-Humber Toronto, ON, M9W 5L7 Canada {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca ABSTRACT Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all member of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are shared between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Another problem arises when a document is made available on a users machine and that user is offline, in which case the document is no longer accessible.",
                "In this paper we present <br>apocrita</br>, a revolutionary distributed P2P file sharing system for Intranets.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Distributed applications.",
                "General Terms Design, Experimentation, Performance. 1.",
                "INTRODUCTION The Peer-to-Peer (P2P) computing paradigm is becoming a completely new form of mutual resource sharing over the Internet.",
                "With the increasingly common place broadband Internet access, P2P technology has finally become a viable way to share documents and media files.",
                "There are already programs on the market that enable P2P file sharing.",
                "These programs enable millions of users to share files among themselves.",
                "While the utilization of P2P clients is already a gigantic step forward compared to downloading files off websites, using such programs are not without their problems.",
                "The downloaded files still require a lot of manual management by the user.",
                "The user still needs to put the files in the proper directory, manage files with multiple versions, delete the files when they are no longer wanted.",
                "We strive to make the process of sharing documents within an Intranet easier.",
                "Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all members of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are sent between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Furthermore, some organizations do not have a file sharing server or the necessary network infrastructure to enable one.",
                "In this paper we present <br>apocrita</br>, which is a cost-effective distributed P2P file sharing system for such organizations.",
                "The rest of this paper is organized as follows.",
                "In section 2, we present <br>apocrita</br>.",
                "The distributed indexing mechanism and protocol are presented in Section 3.",
                "Section 4 presents the peer-topeer distribution model.",
                "A proof of concept prototype is presented in Section 5, and performance evaluations are discussed in Section 6.",
                "Related work is presented is Section 7, and finally conclusions and future work are discussed in Section 8. 2.",
                "<br>apocrita</br> <br>apocrita</br> is a distributed peer-to-peer file sharing system, and has been designed to make finding documents easier in an Intranet environment.",
                "Currently, it is possible for documents to be located on a users machine or on a remote machine.",
                "It is even possible that different revisions could reside on each node on the Intranet.",
                "This means there must be a manual process to maintain document versions.",
                "<br>apocrita</br> solves this problem using two approaches.",
                "First, due to the inherent nature of <br>apocrita</br>, the document will only reside on a single logical location.",
                "Second, <br>apocrita</br> provides a method of reverting to previous document versions.",
                "<br>apocrita</br> Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page.",
                "To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.",
                "ACMSE07, MARCH 23-24, 2007, WINSTON-SALEM, NC, USA.",
                "COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 will also distribute documents across multiple machines to ensure high availability of important documents.",
                "For example, if a machine contains an important document and the machine is currently inaccessible, the system is capable of maintaining availability of the document through this distribution mechanism.",
                "It provides a simple interface for searching and accessing files that may exist either locally or remotely.",
                "The distributed nature of the documents is transparent to the user.",
                "<br>apocrita</br> supports a decentralized network model where the peers use a discovery protocol to determine peers.",
                "<br>apocrita</br> is intended for network users on an Intranet.",
                "The main focus is organizations that may not have a network large enough to require a file server and supporting infrastructure.",
                "It eliminates the need for documents to be manually shared between users while being edited and reduces the possibility of conflicting versions being distributed.",
                "The system also provides some redundancy and in the event of a single machine failure, no important documents will be lost.",
                "It is operating system independent, and easy to access through a web browser or through a standalone application.",
                "To decrease the time required for indexing a large number of documents, the indexing process is distributed across available idle nodes.",
                "Local and remote files should be easily accessible through a virtual mountable file system, providing transparency for users. 3.",
                "DISTRIBUTED INDEXING <br>apocrita</br> uses a distributed index for all the documents that are available on the Intranet.",
                "Each node will contain part of the full index, and be aware of what part of the index each other node has.",
                "A node will be able to contact each node that contains a unique portion of the index.",
                "In addition, each node has a separate local index of its own documents.",
                "But as discussed later, in the current implementation, each node has a copy of the entire index.",
                "Indexing of the documents is distributed.",
                "Therefore, if a node is in the process of indexing many documents, it will break up the work over the nodes.",
                "Once a nodes local index is updated with the new documents, the distributed index will then be updated.",
                "The current distributed indexing system consists of three separate modules: NodeController, FileSender, and NodeIndexer.",
                "The responsibility of each module is discussed later in this section. 3.1 Indexing Protocol The protocol we have designed for the distributed indexing is depicted in Figure 1.",
                "Figure 1.",
                "<br>apocrita</br> distributed indexing protocol.",
                "IDLE QUERY: The IDLE QUERY is sent out from the initiating node to determine which other nodes may be able to help with the overall indexing process.",
                "There are no parameters sent with the command.",
                "The receiving node will respond with either a BUSY or IDLE command.",
                "If the IDLE command is received, the initiating node will add the responding node to a list of available distributed indexing helpers.",
                "In the case of a BUSY command being received, the responding node is ignored.",
                "BUSY: Once a node received an IDL QUERY, it will determine whether it can be considered a candidate for distributed indexing.",
                "This determination is based on the overall CPU usage of the node.",
                "If the node is using most of its CPU for other processes, the node will respond to the IDLE QUERY with a BUSY command.",
                "IDLE: As with the case of the BUSY response, the node receiving the IDLE QUERY will determine its eligibility for distributed indexing.",
                "To be considered a candidate for distributed indexing, the overall CPU usage must be at a minimum to all for dedicated indexing of the distributed documents.",
                "If this is the case, the node will respond with an IDLE command.",
                "INCOMING FILE: Once the initiating node assembles a set of idle nodes to assist with the distributed indexing, it will divide the documents to be sent to the nodes.",
                "To do this, it sends an INCOMING FILE message, which contains the name of the file as well as the size in bytes.",
                "After the INCOMING FILE command has been sent, the initiating node will begin to stream the file to the other node.",
                "The initiating node will loop through the files that are to be sent to the other node; each file stream being preceded by the INCOMING FILE command with the appropriate parameters.",
                "INDEX FILE: Once the indexing node has completed the indexing process of the set of files, it must send the resultant index back to the initiating node.",
                "The index is comprised of multiple files, which exist on the file system of the indexing node.",
                "As with the INCOMING FILE command, the indexing node streams each index file after sending an INDEX FILE command.",
                "The INDEX FILE command has two parameters: the first being the name of the index, and the second is the size of the file in bytes.",
                "SEND COMPLETE: When sending the sets of files for both the index and the files to be indexed, the node must notify the corresponding node when the process is complete.",
                "Once the initiating node is finished sending the set of documents to be indexed, it will then send a SEND COMPLETE command indicating to the indexing node that there are no more files and the node can proceed with indexing the files.",
                "In the case of the initiating node sending the index files, the indexing node will complete the transfer with the SEND COMPLETE command indicating to the initiating node that there are no more index files to be sent and the initiating node can then assemble those index files into the main index.",
                "The NodeController is responsible for setting up connections with nodes in the idle state to distribute the indexing process.",
                "Using JXTA [5], the node controller will obtain a set of nodes.",
                "This set of nodes is iterated and each one is sent the IDLE QUERY command.",
                "The nodes that respond with idle are then collected.",
                "The set of idle nodes includes the node initiating the distributed indexing process, referred to as the local node.",
                "Once the collection of idle nodes is obtained, the node updates the set of controllers and evenly divides the set of documents that are to be indexed.",
                "For example, if there are 100 documents and 10 nodes (including the local node) then each node will have 10 documents to index.",
                "For each indexing node an instance of the FileSender object is created.",
                "The FileSender is aware of the set of documents that node is responsible for.",
                "Once a FileSender object has been created for each node, the NodeController waits for each FileSender to complete.",
                "When the FileSender objects have completed the NodeController will take the resultant indexes from 175 each node and pass them to an instance of the IndexCompiler, which maintains the index and the list of FileSenders.",
                "Once the IndexCompiler has completed it will return to the idle state and activate the directory scanner to monitor the locally owned set of documents for changes that may require reindexing.",
                "The NodeIndexer is responsible for receiving documents sent to it by the initiating node and then indexing them using the Lucene engine [7].",
                "Once the indexing is complete the resulting index is streamed back to the initiating node as well as compiled in the indexer nodes own local index.",
                "Before initiating the indexing process it must be sent an IDLE QUERY message.",
                "This is the first command that sets off the indexing process.",
                "The indexer node will determine whether it is considered idle based on the current CPU usage.",
                "As outlined in the protocol section if the node is not being used and has a low overall CPU usage percentage it will return IDLE to the IDLE QUERY command.",
                "If the indexer nodes CPU usage is above 50% for a specified amount of time it is then considered to be busy and will respond to the IDLE QUERY command with BUSY.",
                "If a node is determined busy it returns to its listening state waiting for another IDLE QUERY from another initiating node.",
                "If the node is determined to be idle it will enter the state where it will receive files from the initiating node that it is responsible for indexing.",
                "Once all of the files are received by the initiating node, indicated by a SEND COMPLETE message, it starts an instance of the Lucene indexing engine.",
                "The files are stored in a temporary directory separate from the nodes local documents that it is responsible for maintaining an index of.",
                "The Lucene index writer then indexes all of the transferred files.",
                "The index is stored on the drive within a temporary directory separate from the current index.",
                "After the indexing of the files completes the indexer node enters the state where the index files are sent back to the initiating node.",
                "The indexer node loops through all of the files created by Lucenes IndexWriter and streams them to the initiating node.",
                "Once these files are sent back that index is then merged into the indexer nodes own full index of the existing files.",
                "It then enters the idle state where it will then listen for any other nodes that required distributing the indexing process.",
                "The FileSender object is the initiating node equivalent of the indexer node.",
                "It initiates the communication between the initiating node and the node that will assist in the distributed indexing.",
                "The initiating node runs many instances of the FileSender node one for each other node it has determined to be idle.",
                "Upon instantiation of the FileSender it is passed the node that it is responsible for contacting and the set of files that must be sent.",
                "The FileSenders first job is to send the files that are to be indexed by the other idle node.",
                "The files are streamed one at a time to the other node.",
                "It sends each file using the INCOMING FILE command.",
                "With that command it sends the name of the file being sent and the size in bytes.",
                "Once all files have been sent the FileSender sends the SEND COMPLETE command.",
                "The FileSender creates an instance of Lucenes IndexWriter and prepares to create the index in a temporary directory on the file system.",
                "The FileSender will begin to receive the files that are to be saved within the index.",
                "It receives an INDEX FILE command with the name of the files and the size in bytes.",
                "This file is then streamed into the temporary index directory on the FileSender node.",
                "After the transfer of the index files has been completed the FileSender notifies the instance of the index compiler that it is ready to combine the index.",
                "Each instance of the FileSender has its own unique section of temporary space to store the index that has been transferred back from the indexing node.",
                "When notifying the IndexCompiler it will also pass the location of the particular FileSenders directory location of that index. 4.",
                "PEER-TO-PEER DISTRIBUTION <br>apocrita</br> uses a peer-to-peer distribution model in order to distribute files.",
                "Files are distributed solely from a serving node to a client node without regard for the availability of file pieces from other clients in the network.",
                "This means that the file transfers will be fast and efficient and should not severely affect the usability of serving nodes from the point of view of a local user.",
                "The JXTA framework [5] is used in order to implement peer-to-peer functionality.",
                "This has been decided due to the extremely shorttimeline of the project which allows us to take advantage of over five years of testing and development and support from many large organizations employing JXTA in their own products.",
                "We are not concerned with any potential quality problems because JXTA is considered to be the most mature and stable peer-to-peer framework available.",
                "Using JXTA terminology, there are three types of peers used in node classification.",
                "Edge peers are typically low-bandwidth, non-dedicated nodes.",
                "Due to these characteristics, edge peers are not used with <br>apocrita</br>.",
                "Relay peers are typically higher-bandwidth, dedicated nodes.",
                "This is the classification of all nodes in the <br>apocrita</br> network, and, as such, are the default classification used.",
                "Rendezvous peers are used to coordinate message passing between nodes in the <br>apocrita</br> network.",
                "This means that a minimum of one rendezvous peer per subnet is required. 4.1 Peer Discovery The <br>apocrita</br> server subsystem uses the JXTA Peer Discovery Protocol (PDP) in order to find participating peers within the network as shown in Figure 2.",
                "Figure 2.",
                "<br>apocrita</br> peer discovery process. 176 The PDP listens for peer advertisements from other nodes in the <br>apocrita</br> swarm.",
                "If a peer advertisement is detected, the server will attempt to join the peer group and start actively contributing to the network.",
                "If no peers are found by the discovery service, the server will create a new peer group and start advertising this peer group.",
                "This new peer group will be periodically advertised on the network; any new peers joining the network will attach to this peer group.",
                "A distinct advantage of using the JXTA PDP is that <br>apocrita</br> does not have to be sensitive to particular networking nuances such as Maximum Transmission Unit (MTU).",
                "In addition, <br>apocrita</br> does not have to support one-to-many packet delivery methods such as multicast and instead can rely on JXTA for this support. 4.2 Index Query Operation All nodes in the <br>apocrita</br> swarm have a complete and up-to-date copy of the network index stored locally.",
                "This makes querying the index for search results trivial.",
                "Unlike the Gnutella protocol, a query does not have to propagate throughout the network.",
                "This also means that the time to return query results is very fast - much faster than protocols that rely on nodes in the network to pass the query throughout the network and then wait for results.",
                "This is demonstrated in Figure 3.",
                "Figure 3.",
                "<br>apocrita</br> query operation.",
                "Each document in the swarm has a unique document identification number (ID).",
                "A node will query the index and a result will be returned with both the document ID number as well as a list of peers with a copy of the matched document ID.",
                "It is then the responsibility of the searching peer to contact the peers in the list to negotiate file transfer between the client and server. 5.",
                "PROTOTYPE IMPLEMENTATION <br>apocrita</br> uses the Lucene framework [7], which is a project under development by the Apache Software Foundation.",
                "Apache Lucene is a high-performance, full-featured text search engine library written entirely in Java.",
                "In the current implementation, <br>apocrita</br> is only capable of indexing plain text documents.",
                "<br>apocrita</br> uses the JXTA framework [5] as a peer-to-peer transport library between nodes.",
                "JXTA is used to pass both messages and files between nodes in the search network.",
                "By using JXTA, <br>apocrita</br> takes advantage of a reliable, and proven peer-to-peer transport mechanism.",
                "It uses the pipe facility in order to pass messages and files between nodes.",
                "The pipe facility provides many different types of pipe advertisements.",
                "This includes an unsecured unicast pipe, a secured unicast pipe, and a propagated unsecured pipe.",
                "Message passing is used to pass status messages between nodes in order to aid in indexing, searching, and retrieval.",
                "For example, a node attempting to find an idle node to participate in indexing will query nodes via the message facility.",
                "Idle nodes will reply with a status message to indicate they are available to start indexing.",
                "File passing is used within <br>apocrita</br> for file transfer.",
                "After a file has been searched for and located within the peer group, a JXTA socket will be opened and file transfer will take place.",
                "A JXTA socket is similar to a standard Java socket, however a JXTA socket uses JXTA pipes in underlying network transport.",
                "File passing uses an unsecured unicast pipe in order to transfer data.",
                "File passing is also used within <br>apocrita</br> for index transfer.",
                "Index transfer works exactly like a file transfer.",
                "In fact, the index transfer actually passes the index as a file.",
                "However, there is one key difference between file transfer and index transfer.",
                "In the case of file transfer, a socket is created between only two nodes.",
                "In the case of index transfer, a socket must be created between all nodes in the network in order to pass the index, which allows for all nodes to have a full and complete index of the entire network.",
                "In order to facilitate this transfer efficiently, index transfer will use an unsecured propagated pipe to communicate with all nodes in the <br>apocrita</br> network. 6.",
                "PERFORMANCE EVALUATION It is difficult to objectively benchmark the results obtained through <br>apocrita</br> because there is no other system currently available with the same goals as <br>apocrita</br>.",
                "We have, however, evaluated the performance of the critical sections of the system.",
                "The critical sections were determined to be the processes that are the most time intensive.",
                "The evaluation was completed on standard lab computers on a 100Mb/s Ethernet LAN; the machines run Windows XP with a Pentium 4 CPU running at 2.4GHz with 512 MB of RAM.",
                "The indexing time has been run against both: the Time Magazine collection [8], which contains 432 documents and 83 queries and their most relevant results, and the NPL collection [8] that has a total of 11,429 documents and 93 queries with expected results.",
                "Each document ranges in size between 4KB and 8KB.",
                "As Figure 4 demonstrates, the number of nodes involved in the indexing process affects the time taken to complete the indexing processsometimes even drastically.",
                "Figure 4.",
                "Node vs. index time.",
                "The difference in going from one indexing node to two indexing nodes is the most drastic and equates to an indexing time 37% faster than a single indexing node.",
                "The different between two 177 indexing nodes and three indexing nodes is still significant and represents a 16% faster time than two indexing nodes.",
                "As the number of indexing nodes increases the results are less dramatic.",
                "This can be attributed to the time overhead associated with having many nodes perform indexing.",
                "The time needed to communicate with a node is constant, so as the number of nodes increases, this constant becomes more prevalent.",
                "Also, the complexity of joining the indexing results is a complex operation and is complicated further as the number of indexing nodes increases.",
                "Socket performance is also a very important part of <br>apocrita</br>.",
                "Benchmarks were performed using a 65MB file on a system with both the client and server running locally.",
                "This was done to isolate possible network issues.",
                "Although less drastic, similar results were shown when the client and server run on independent hardware.",
                "In order to mitigate possible unexpected errors, each test was run 10 times.",
                "Figure 5.",
                "Java sockets vs. JXTA sockets.",
                "As Figure 5 demonstrates, the performance of JXTA sockets is abysmal as compared to the performance of standard Java sockets.",
                "The minimum transfer rate obtained using Java sockets is 81,945KB/s while the minimum transfer rater obtained using JXTA sockets is much lower at 3, 805KB/s.",
                "The maximum transfer rater obtain using Java sockets is 97,412KB/s while the maximum transfer rate obtained using JXTA sockets is 5,530KB/s.",
                "Finally, the average transfer rate using Java sockets is 87,540KB/s while the average transfer rate using JXTA sockets is 4,293KB/s.",
                "The major problem found in these benchmarks is that the underlying network transport mechanism does not perform as quickly or efficiently as expected.",
                "In order to garner a performance increase, the JXTA framework needs to be substituted with a more traditional approach.",
                "The indexing time is also a bottleneck and will need to be improved for the overall quality of <br>apocrita</br> to be improved. 7.",
                "RELATED WORK Several decentralized P2P systems [1, 2, 3] exist today that <br>apocrita</br> features some of their functionality.",
                "However, <br>apocrita</br> also has unique novel searching and indexing features that make this system unique.",
                "For example, Majestic-12 [4] is a distributed search and indexing project designed for searching the Internet.",
                "Each user would install a client, which is responsible for indexing a portion of the web.",
                "A central area for querying the index is available on the Majestic-12 web page.",
                "The index itself is not distributed, only the act of indexing is distributed.",
                "The distributed indexing aspect of this project most closely relates <br>apocrita</br> goals.",
                "YaCy [6] is a peer-to-peer web search application.",
                "YaCy consists of a web crawler, an indexer, a built-in database engine, and a p2p index exchange protocol.",
                "YaCy is designed to maintain a distributed index of the Internet.",
                "It used a distributed hash table (DHT) to maintain the index.",
                "The local node is used to query but all results that are returned are accessible on the Internet.",
                "YaCy used many peers and DHT to maintain a distributed index.",
                "<br>apocrita</br> will also use a distributed index in future implementations and may benefit from using an implementation of a DHT.",
                "YaCy however, is designed as a web search engine and, as such solves a much different problem than <br>apocrita</br>. 8.",
                "CONCLUSIONS AND FUTURE WORK We presented <br>apocrita</br>, a distributed P2P searching and indexing system intended for network users on an Intranet.",
                "It can help organizations with no network file server or necessary network infrastructure to share documents.",
                "It eliminates the need for documents to be manually shared among users while being edited and reduce the possibility of conflicting versions being distributed.",
                "A proof of concept prototype has been constructed, but the results from measuring the network transport mechanism and the indexing time were not as impressive as initially envisioned.",
                "Despite these shortcomings, the experience gained from the design and implementation of <br>apocrita</br> has given us more insight into building challenging distributed systems.",
                "For future work, <br>apocrita</br> will have a smart content distribution model in which a single instance of a file can intelligently and transparently replicate throughout the network to ensure a copy of every important file will always be available regardless of the availability of specific nodes in the network.",
                "In addition, we plan to integrate a revision control system into the content distribution portion of <br>apocrita</br> so that users could have the ability to update an existing file that they found and have the old revision maintained and the new revision propagated.",
                "Finally, the current implementation has some overhead and redundancy due to the fact that the entire index is maintained on each individual node, we plan to design a distributed index. 9.",
                "REFERENCES [1] Rodrigues, R., Liskov, B., Shrira, L.: The Design of a Robust Peer-to-Peer System.",
                "Available online: http://www.pmg.lcs.mit.edu/~rodrigo/ew02-robust.pdf. [2] Chawathe, Y., Ratnasamy, S., Breslau, L., Lanham, N., and Chenker, S.: Making Gnutella-like P2P Systems Scalable.",
                "In Proceedings of SIGCOMM03, Karlsruhe, Germany. [3] Harvest: A Distributed Search System: http://harvest.sourceforge.net. [4] Majestic-12: Distributed Search Engine: http://www.majestic12.co.uk. [5] JXTA: http://www.jxta.org. [6] YaCy: Distributed P2P-based Web Indexing: http://www.yacy.net/yacy. [7] Lucene Search Engine Library: http://lucene.apache.org. [8] Test Collections (Time Magazine and NPL): www.dcs.gla.ac.uk/idom/ir_resources/test_collections. 178"
            ],
            "original_annotated_samples": [
                "<br>apocrita</br>: A Distributed Peer-to-Peer File Sharing System for Intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Distributed Computing and Wireless & Telecommunications Technology University of Guelph-Humber Toronto, ON, M9W 5L7 Canada {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca ABSTRACT Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all member of the organization.",
                "In this paper we present <br>apocrita</br>, a revolutionary distributed P2P file sharing system for Intranets.",
                "In this paper we present <br>apocrita</br>, which is a cost-effective distributed P2P file sharing system for such organizations.",
                "In section 2, we present <br>apocrita</br>.",
                "<br>apocrita</br> <br>apocrita</br> is a distributed peer-to-peer file sharing system, and has been designed to make finding documents easier in an Intranet environment."
            ],
            "translated_annotated_samples": [
                "Apocrita: Un sistema de intercambio de archivos distribuido de igual a igual para intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Computación Distribuida y Tecnología Inalámbrica y de Telecomunicaciones Universidad de Guelph-Humber Toronto, ON, M9W 5L7 Canadá {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca RESUMEN Muchas organizaciones necesitan redactar documentos para diversos fines, y es posible que estos documentos deban ser accesibles para todos los miembros de la organización.",
                "En este artículo presentamos Apocrita, un revolucionario sistema distribuido de intercambio de archivos P2P para intranets.",
                "En este artículo presentamos Apocrita, que es un sistema de intercambio de archivos P2P distribuido y rentable para dichas organizaciones.",
                "En la sección 2, presentamos Apocrita.",
                "Apocrita es un sistema de intercambio de archivos entre pares distribuido, y ha sido diseñado para facilitar la búsqueda de documentos en un entorno de Intranet."
            ],
            "translated_text": "Apocrita: Un sistema de intercambio de archivos distribuido de igual a igual para intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Computación Distribuida y Tecnología Inalámbrica y de Telecomunicaciones Universidad de Guelph-Humber Toronto, ON, M9W 5L7 Canadá {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca RESUMEN Muchas organizaciones necesitan redactar documentos para diversos fines, y es posible que estos documentos deban ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un documento. En algunos casos, estos documentos son compartidos entre autores, a través de correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento. Incluso puede haber varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario. Otro problema surge cuando un documento está disponible en la máquina de un usuario y ese usuario está desconectado, en cuyo caso el documento ya no es accesible. En este artículo presentamos Apocrita, un revolucionario sistema distribuido de intercambio de archivos P2P para intranets. Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos - Aplicaciones Distribuidas. Términos generales Diseño, Experimentación, Rendimiento. 1. INTRODUCCIÓN El paradigma de computación Peer-to-Peer (P2P) se está convirtiendo en una forma completamente nueva de compartir recursos mutuos a través de Internet. Con el acceso cada vez más común a Internet de banda ancha, la tecnología P2P finalmente se ha convertido en una forma viable de compartir documentos y archivos multimedia. Ya existen programas en el mercado que permiten compartir archivos P2P. Estos programas permiten a millones de usuarios compartir archivos entre ellos. Si bien la utilización de clientes P2P ya es un gran avance en comparación con descargar archivos de sitios web, el uso de dichos programas no está exento de problemas. Los archivos descargados todavía requieren mucho manejo manual por parte del usuario. El usuario todavía necesita colocar los archivos en el directorio adecuado, gestionar archivos con múltiples versiones, eliminar los archivos cuando ya no se deseen. Nos esforzamos por hacer que el proceso de compartir documentos dentro de una Intranet sea más fácil. Muchas organizaciones están obligadas a redactar documentos para diversos fines, y dichos documentos pueden necesitar ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un documento. En algunos casos, estos documentos son enviados entre autores, por correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o que se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento. Puede haber incluso varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario. Además, algunas organizaciones no cuentan con un servidor de intercambio de archivos o la infraestructura de red necesaria para habilitar uno. En este artículo presentamos Apocrita, que es un sistema de intercambio de archivos P2P distribuido y rentable para dichas organizaciones. El resto de este documento está organizado de la siguiente manera. En la sección 2, presentamos Apocrita. El mecanismo de indexación distribuida y el protocolo se presentan en la Sección 3. La sección 4 presenta el modelo de distribución peer-to-peer. Se presenta un prototipo de prueba de concepto en la Sección 5, y las evaluaciones de rendimiento se discuten en la Sección 6. El trabajo relacionado se presenta en la Sección 7, y finalmente las conclusiones y el trabajo futuro se discuten en la Sección 8. Apocrita es un sistema de intercambio de archivos entre pares distribuido, y ha sido diseñado para facilitar la búsqueda de documentos en un entorno de Intranet. ",
            "candidates": [],
            "error": [
                []
            ]
        },
        "jxta": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Apocrita: A Distributed Peer-to-Peer File Sharing System for Intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Distributed Computing and Wireless & Telecommunications Technology University of Guelph-Humber Toronto, ON, M9W 5L7 Canada {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca ABSTRACT Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all member of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are shared between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Another problem arises when a document is made available on a users machine and that user is offline, in which case the document is no longer accessible.",
                "In this paper we present Apocrita, a revolutionary distributed P2P file sharing system for Intranets.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Distributed applications.",
                "General Terms Design, Experimentation, Performance. 1.",
                "INTRODUCTION The Peer-to-Peer (P2P) computing paradigm is becoming a completely new form of mutual resource sharing over the Internet.",
                "With the increasingly common place broadband Internet access, P2P technology has finally become a viable way to share documents and media files.",
                "There are already programs on the market that enable P2P file sharing.",
                "These programs enable millions of users to share files among themselves.",
                "While the utilization of P2P clients is already a gigantic step forward compared to downloading files off websites, using such programs are not without their problems.",
                "The downloaded files still require a lot of manual management by the user.",
                "The user still needs to put the files in the proper directory, manage files with multiple versions, delete the files when they are no longer wanted.",
                "We strive to make the process of sharing documents within an Intranet easier.",
                "Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all members of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are sent between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Furthermore, some organizations do not have a file sharing server or the necessary network infrastructure to enable one.",
                "In this paper we present Apocrita, which is a cost-effective distributed P2P file sharing system for such organizations.",
                "The rest of this paper is organized as follows.",
                "In section 2, we present Apocrita.",
                "The distributed indexing mechanism and protocol are presented in Section 3.",
                "Section 4 presents the peer-topeer distribution model.",
                "A proof of concept prototype is presented in Section 5, and performance evaluations are discussed in Section 6.",
                "Related work is presented is Section 7, and finally conclusions and future work are discussed in Section 8. 2.",
                "APOCRITA Apocrita is a distributed peer-to-peer file sharing system, and has been designed to make finding documents easier in an Intranet environment.",
                "Currently, it is possible for documents to be located on a users machine or on a remote machine.",
                "It is even possible that different revisions could reside on each node on the Intranet.",
                "This means there must be a manual process to maintain document versions.",
                "Apocrita solves this problem using two approaches.",
                "First, due to the inherent nature of Apocrita, the document will only reside on a single logical location.",
                "Second, Apocrita provides a method of reverting to previous document versions.",
                "Apocrita Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page.",
                "To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.",
                "ACMSE07, MARCH 23-24, 2007, WINSTON-SALEM, NC, USA.",
                "COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 will also distribute documents across multiple machines to ensure high availability of important documents.",
                "For example, if a machine contains an important document and the machine is currently inaccessible, the system is capable of maintaining availability of the document through this distribution mechanism.",
                "It provides a simple interface for searching and accessing files that may exist either locally or remotely.",
                "The distributed nature of the documents is transparent to the user.",
                "Apocrita supports a decentralized network model where the peers use a discovery protocol to determine peers.",
                "Apocrita is intended for network users on an Intranet.",
                "The main focus is organizations that may not have a network large enough to require a file server and supporting infrastructure.",
                "It eliminates the need for documents to be manually shared between users while being edited and reduces the possibility of conflicting versions being distributed.",
                "The system also provides some redundancy and in the event of a single machine failure, no important documents will be lost.",
                "It is operating system independent, and easy to access through a web browser or through a standalone application.",
                "To decrease the time required for indexing a large number of documents, the indexing process is distributed across available idle nodes.",
                "Local and remote files should be easily accessible through a virtual mountable file system, providing transparency for users. 3.",
                "DISTRIBUTED INDEXING Apocrita uses a distributed index for all the documents that are available on the Intranet.",
                "Each node will contain part of the full index, and be aware of what part of the index each other node has.",
                "A node will be able to contact each node that contains a unique portion of the index.",
                "In addition, each node has a separate local index of its own documents.",
                "But as discussed later, in the current implementation, each node has a copy of the entire index.",
                "Indexing of the documents is distributed.",
                "Therefore, if a node is in the process of indexing many documents, it will break up the work over the nodes.",
                "Once a nodes local index is updated with the new documents, the distributed index will then be updated.",
                "The current distributed indexing system consists of three separate modules: NodeController, FileSender, and NodeIndexer.",
                "The responsibility of each module is discussed later in this section. 3.1 Indexing Protocol The protocol we have designed for the distributed indexing is depicted in Figure 1.",
                "Figure 1.",
                "Apocrita distributed indexing protocol.",
                "IDLE QUERY: The IDLE QUERY is sent out from the initiating node to determine which other nodes may be able to help with the overall indexing process.",
                "There are no parameters sent with the command.",
                "The receiving node will respond with either a BUSY or IDLE command.",
                "If the IDLE command is received, the initiating node will add the responding node to a list of available distributed indexing helpers.",
                "In the case of a BUSY command being received, the responding node is ignored.",
                "BUSY: Once a node received an IDL QUERY, it will determine whether it can be considered a candidate for distributed indexing.",
                "This determination is based on the overall CPU usage of the node.",
                "If the node is using most of its CPU for other processes, the node will respond to the IDLE QUERY with a BUSY command.",
                "IDLE: As with the case of the BUSY response, the node receiving the IDLE QUERY will determine its eligibility for distributed indexing.",
                "To be considered a candidate for distributed indexing, the overall CPU usage must be at a minimum to all for dedicated indexing of the distributed documents.",
                "If this is the case, the node will respond with an IDLE command.",
                "INCOMING FILE: Once the initiating node assembles a set of idle nodes to assist with the distributed indexing, it will divide the documents to be sent to the nodes.",
                "To do this, it sends an INCOMING FILE message, which contains the name of the file as well as the size in bytes.",
                "After the INCOMING FILE command has been sent, the initiating node will begin to stream the file to the other node.",
                "The initiating node will loop through the files that are to be sent to the other node; each file stream being preceded by the INCOMING FILE command with the appropriate parameters.",
                "INDEX FILE: Once the indexing node has completed the indexing process of the set of files, it must send the resultant index back to the initiating node.",
                "The index is comprised of multiple files, which exist on the file system of the indexing node.",
                "As with the INCOMING FILE command, the indexing node streams each index file after sending an INDEX FILE command.",
                "The INDEX FILE command has two parameters: the first being the name of the index, and the second is the size of the file in bytes.",
                "SEND COMPLETE: When sending the sets of files for both the index and the files to be indexed, the node must notify the corresponding node when the process is complete.",
                "Once the initiating node is finished sending the set of documents to be indexed, it will then send a SEND COMPLETE command indicating to the indexing node that there are no more files and the node can proceed with indexing the files.",
                "In the case of the initiating node sending the index files, the indexing node will complete the transfer with the SEND COMPLETE command indicating to the initiating node that there are no more index files to be sent and the initiating node can then assemble those index files into the main index.",
                "The NodeController is responsible for setting up connections with nodes in the idle state to distribute the indexing process.",
                "Using <br>jxta</br> [5], the node controller will obtain a set of nodes.",
                "This set of nodes is iterated and each one is sent the IDLE QUERY command.",
                "The nodes that respond with idle are then collected.",
                "The set of idle nodes includes the node initiating the distributed indexing process, referred to as the local node.",
                "Once the collection of idle nodes is obtained, the node updates the set of controllers and evenly divides the set of documents that are to be indexed.",
                "For example, if there are 100 documents and 10 nodes (including the local node) then each node will have 10 documents to index.",
                "For each indexing node an instance of the FileSender object is created.",
                "The FileSender is aware of the set of documents that node is responsible for.",
                "Once a FileSender object has been created for each node, the NodeController waits for each FileSender to complete.",
                "When the FileSender objects have completed the NodeController will take the resultant indexes from 175 each node and pass them to an instance of the IndexCompiler, which maintains the index and the list of FileSenders.",
                "Once the IndexCompiler has completed it will return to the idle state and activate the directory scanner to monitor the locally owned set of documents for changes that may require reindexing.",
                "The NodeIndexer is responsible for receiving documents sent to it by the initiating node and then indexing them using the Lucene engine [7].",
                "Once the indexing is complete the resulting index is streamed back to the initiating node as well as compiled in the indexer nodes own local index.",
                "Before initiating the indexing process it must be sent an IDLE QUERY message.",
                "This is the first command that sets off the indexing process.",
                "The indexer node will determine whether it is considered idle based on the current CPU usage.",
                "As outlined in the protocol section if the node is not being used and has a low overall CPU usage percentage it will return IDLE to the IDLE QUERY command.",
                "If the indexer nodes CPU usage is above 50% for a specified amount of time it is then considered to be busy and will respond to the IDLE QUERY command with BUSY.",
                "If a node is determined busy it returns to its listening state waiting for another IDLE QUERY from another initiating node.",
                "If the node is determined to be idle it will enter the state where it will receive files from the initiating node that it is responsible for indexing.",
                "Once all of the files are received by the initiating node, indicated by a SEND COMPLETE message, it starts an instance of the Lucene indexing engine.",
                "The files are stored in a temporary directory separate from the nodes local documents that it is responsible for maintaining an index of.",
                "The Lucene index writer then indexes all of the transferred files.",
                "The index is stored on the drive within a temporary directory separate from the current index.",
                "After the indexing of the files completes the indexer node enters the state where the index files are sent back to the initiating node.",
                "The indexer node loops through all of the files created by Lucenes IndexWriter and streams them to the initiating node.",
                "Once these files are sent back that index is then merged into the indexer nodes own full index of the existing files.",
                "It then enters the idle state where it will then listen for any other nodes that required distributing the indexing process.",
                "The FileSender object is the initiating node equivalent of the indexer node.",
                "It initiates the communication between the initiating node and the node that will assist in the distributed indexing.",
                "The initiating node runs many instances of the FileSender node one for each other node it has determined to be idle.",
                "Upon instantiation of the FileSender it is passed the node that it is responsible for contacting and the set of files that must be sent.",
                "The FileSenders first job is to send the files that are to be indexed by the other idle node.",
                "The files are streamed one at a time to the other node.",
                "It sends each file using the INCOMING FILE command.",
                "With that command it sends the name of the file being sent and the size in bytes.",
                "Once all files have been sent the FileSender sends the SEND COMPLETE command.",
                "The FileSender creates an instance of Lucenes IndexWriter and prepares to create the index in a temporary directory on the file system.",
                "The FileSender will begin to receive the files that are to be saved within the index.",
                "It receives an INDEX FILE command with the name of the files and the size in bytes.",
                "This file is then streamed into the temporary index directory on the FileSender node.",
                "After the transfer of the index files has been completed the FileSender notifies the instance of the index compiler that it is ready to combine the index.",
                "Each instance of the FileSender has its own unique section of temporary space to store the index that has been transferred back from the indexing node.",
                "When notifying the IndexCompiler it will also pass the location of the particular FileSenders directory location of that index. 4.",
                "PEER-TO-PEER DISTRIBUTION Apocrita uses a peer-to-peer distribution model in order to distribute files.",
                "Files are distributed solely from a serving node to a client node without regard for the availability of file pieces from other clients in the network.",
                "This means that the file transfers will be fast and efficient and should not severely affect the usability of serving nodes from the point of view of a local user.",
                "The <br>jxta</br> framework [5] is used in order to implement peer-to-peer functionality.",
                "This has been decided due to the extremely shorttimeline of the project which allows us to take advantage of over five years of testing and development and support from many large organizations employing <br>jxta</br> in their own products.",
                "We are not concerned with any potential quality problems because <br>jxta</br> is considered to be the most mature and stable peer-to-peer framework available.",
                "Using <br>jxta</br> terminology, there are three types of peers used in node classification.",
                "Edge peers are typically low-bandwidth, non-dedicated nodes.",
                "Due to these characteristics, edge peers are not used with Apocrita.",
                "Relay peers are typically higher-bandwidth, dedicated nodes.",
                "This is the classification of all nodes in the Apocrita network, and, as such, are the default classification used.",
                "Rendezvous peers are used to coordinate message passing between nodes in the Apocrita network.",
                "This means that a minimum of one rendezvous peer per subnet is required. 4.1 Peer Discovery The Apocrita server subsystem uses the <br>jxta</br> Peer Discovery Protocol (PDP) in order to find participating peers within the network as shown in Figure 2.",
                "Figure 2.",
                "Apocrita peer discovery process. 176 The PDP listens for peer advertisements from other nodes in the Apocrita swarm.",
                "If a peer advertisement is detected, the server will attempt to join the peer group and start actively contributing to the network.",
                "If no peers are found by the discovery service, the server will create a new peer group and start advertising this peer group.",
                "This new peer group will be periodically advertised on the network; any new peers joining the network will attach to this peer group.",
                "A distinct advantage of using the <br>jxta</br> PDP is that Apocrita does not have to be sensitive to particular networking nuances such as Maximum Transmission Unit (MTU).",
                "In addition, Apocrita does not have to support one-to-many packet delivery methods such as multicast and instead can rely on <br>jxta</br> for this support. 4.2 Index Query Operation All nodes in the Apocrita swarm have a complete and up-to-date copy of the network index stored locally.",
                "This makes querying the index for search results trivial.",
                "Unlike the Gnutella protocol, a query does not have to propagate throughout the network.",
                "This also means that the time to return query results is very fast - much faster than protocols that rely on nodes in the network to pass the query throughout the network and then wait for results.",
                "This is demonstrated in Figure 3.",
                "Figure 3.",
                "Apocrita query operation.",
                "Each document in the swarm has a unique document identification number (ID).",
                "A node will query the index and a result will be returned with both the document ID number as well as a list of peers with a copy of the matched document ID.",
                "It is then the responsibility of the searching peer to contact the peers in the list to negotiate file transfer between the client and server. 5.",
                "PROTOTYPE IMPLEMENTATION Apocrita uses the Lucene framework [7], which is a project under development by the Apache Software Foundation.",
                "Apache Lucene is a high-performance, full-featured text search engine library written entirely in Java.",
                "In the current implementation, Apocrita is only capable of indexing plain text documents.",
                "Apocrita uses the <br>jxta</br> framework [5] as a peer-to-peer transport library between nodes.",
                "<br>jxta</br> is used to pass both messages and files between nodes in the search network.",
                "By using <br>jxta</br>, Apocrita takes advantage of a reliable, and proven peer-to-peer transport mechanism.",
                "It uses the pipe facility in order to pass messages and files between nodes.",
                "The pipe facility provides many different types of pipe advertisements.",
                "This includes an unsecured unicast pipe, a secured unicast pipe, and a propagated unsecured pipe.",
                "Message passing is used to pass status messages between nodes in order to aid in indexing, searching, and retrieval.",
                "For example, a node attempting to find an idle node to participate in indexing will query nodes via the message facility.",
                "Idle nodes will reply with a status message to indicate they are available to start indexing.",
                "File passing is used within Apocrita for file transfer.",
                "After a file has been searched for and located within the peer group, a <br>jxta</br> socket will be opened and file transfer will take place.",
                "A <br>jxta</br> socket is similar to a standard Java socket, however a <br>jxta</br> socket uses JXTA pipes in underlying network transport.",
                "File passing uses an unsecured unicast pipe in order to transfer data.",
                "File passing is also used within Apocrita for index transfer.",
                "Index transfer works exactly like a file transfer.",
                "In fact, the index transfer actually passes the index as a file.",
                "However, there is one key difference between file transfer and index transfer.",
                "In the case of file transfer, a socket is created between only two nodes.",
                "In the case of index transfer, a socket must be created between all nodes in the network in order to pass the index, which allows for all nodes to have a full and complete index of the entire network.",
                "In order to facilitate this transfer efficiently, index transfer will use an unsecured propagated pipe to communicate with all nodes in the Apocrita network. 6.",
                "PERFORMANCE EVALUATION It is difficult to objectively benchmark the results obtained through Apocrita because there is no other system currently available with the same goals as Apocrita.",
                "We have, however, evaluated the performance of the critical sections of the system.",
                "The critical sections were determined to be the processes that are the most time intensive.",
                "The evaluation was completed on standard lab computers on a 100Mb/s Ethernet LAN; the machines run Windows XP with a Pentium 4 CPU running at 2.4GHz with 512 MB of RAM.",
                "The indexing time has been run against both: the Time Magazine collection [8], which contains 432 documents and 83 queries and their most relevant results, and the NPL collection [8] that has a total of 11,429 documents and 93 queries with expected results.",
                "Each document ranges in size between 4KB and 8KB.",
                "As Figure 4 demonstrates, the number of nodes involved in the indexing process affects the time taken to complete the indexing processsometimes even drastically.",
                "Figure 4.",
                "Node vs. index time.",
                "The difference in going from one indexing node to two indexing nodes is the most drastic and equates to an indexing time 37% faster than a single indexing node.",
                "The different between two 177 indexing nodes and three indexing nodes is still significant and represents a 16% faster time than two indexing nodes.",
                "As the number of indexing nodes increases the results are less dramatic.",
                "This can be attributed to the time overhead associated with having many nodes perform indexing.",
                "The time needed to communicate with a node is constant, so as the number of nodes increases, this constant becomes more prevalent.",
                "Also, the complexity of joining the indexing results is a complex operation and is complicated further as the number of indexing nodes increases.",
                "Socket performance is also a very important part of Apocrita.",
                "Benchmarks were performed using a 65MB file on a system with both the client and server running locally.",
                "This was done to isolate possible network issues.",
                "Although less drastic, similar results were shown when the client and server run on independent hardware.",
                "In order to mitigate possible unexpected errors, each test was run 10 times.",
                "Figure 5.",
                "Java sockets vs. <br>jxta</br> sockets.",
                "As Figure 5 demonstrates, the performance of <br>jxta</br> sockets is abysmal as compared to the performance of standard Java sockets.",
                "The minimum transfer rate obtained using Java sockets is 81,945KB/s while the minimum transfer rater obtained using <br>jxta</br> sockets is much lower at 3, 805KB/s.",
                "The maximum transfer rater obtain using Java sockets is 97,412KB/s while the maximum transfer rate obtained using <br>jxta</br> sockets is 5,530KB/s.",
                "Finally, the average transfer rate using Java sockets is 87,540KB/s while the average transfer rate using <br>jxta</br> sockets is 4,293KB/s.",
                "The major problem found in these benchmarks is that the underlying network transport mechanism does not perform as quickly or efficiently as expected.",
                "In order to garner a performance increase, the <br>jxta</br> framework needs to be substituted with a more traditional approach.",
                "The indexing time is also a bottleneck and will need to be improved for the overall quality of Apocrita to be improved. 7.",
                "RELATED WORK Several decentralized P2P systems [1, 2, 3] exist today that Apocrita features some of their functionality.",
                "However, Apocrita also has unique novel searching and indexing features that make this system unique.",
                "For example, Majestic-12 [4] is a distributed search and indexing project designed for searching the Internet.",
                "Each user would install a client, which is responsible for indexing a portion of the web.",
                "A central area for querying the index is available on the Majestic-12 web page.",
                "The index itself is not distributed, only the act of indexing is distributed.",
                "The distributed indexing aspect of this project most closely relates Apocrita goals.",
                "YaCy [6] is a peer-to-peer web search application.",
                "YaCy consists of a web crawler, an indexer, a built-in database engine, and a p2p index exchange protocol.",
                "YaCy is designed to maintain a distributed index of the Internet.",
                "It used a distributed hash table (DHT) to maintain the index.",
                "The local node is used to query but all results that are returned are accessible on the Internet.",
                "YaCy used many peers and DHT to maintain a distributed index.",
                "Apocrita will also use a distributed index in future implementations and may benefit from using an implementation of a DHT.",
                "YaCy however, is designed as a web search engine and, as such solves a much different problem than Apocrita. 8.",
                "CONCLUSIONS AND FUTURE WORK We presented Apocrita, a distributed P2P searching and indexing system intended for network users on an Intranet.",
                "It can help organizations with no network file server or necessary network infrastructure to share documents.",
                "It eliminates the need for documents to be manually shared among users while being edited and reduce the possibility of conflicting versions being distributed.",
                "A proof of concept prototype has been constructed, but the results from measuring the network transport mechanism and the indexing time were not as impressive as initially envisioned.",
                "Despite these shortcomings, the experience gained from the design and implementation of Apocrita has given us more insight into building challenging distributed systems.",
                "For future work, Apocrita will have a smart content distribution model in which a single instance of a file can intelligently and transparently replicate throughout the network to ensure a copy of every important file will always be available regardless of the availability of specific nodes in the network.",
                "In addition, we plan to integrate a revision control system into the content distribution portion of Apocrita so that users could have the ability to update an existing file that they found and have the old revision maintained and the new revision propagated.",
                "Finally, the current implementation has some overhead and redundancy due to the fact that the entire index is maintained on each individual node, we plan to design a distributed index. 9.",
                "REFERENCES [1] Rodrigues, R., Liskov, B., Shrira, L.: The Design of a Robust Peer-to-Peer System.",
                "Available online: http://www.pmg.lcs.mit.edu/~rodrigo/ew02-robust.pdf. [2] Chawathe, Y., Ratnasamy, S., Breslau, L., Lanham, N., and Chenker, S.: Making Gnutella-like P2P Systems Scalable.",
                "In Proceedings of SIGCOMM03, Karlsruhe, Germany. [3] Harvest: A Distributed Search System: http://harvest.sourceforge.net. [4] Majestic-12: Distributed Search Engine: http://www.majestic12.co.uk. [5] <br>jxta</br>: http://www.<br>jxta</br>org. [6] YaCy: Distributed P2P-based Web Indexing: http://www.yacy.net/yacy. [7] Lucene Search Engine Library: http://lucene.apache.org. [8] Test Collections (Time Magazine and NPL): www.dcs.gla.ac.uk/idom/ir_resources/test_collections. 178"
            ],
            "original_annotated_samples": [
                "Using <br>jxta</br> [5], the node controller will obtain a set of nodes.",
                "The <br>jxta</br> framework [5] is used in order to implement peer-to-peer functionality.",
                "This has been decided due to the extremely shorttimeline of the project which allows us to take advantage of over five years of testing and development and support from many large organizations employing <br>jxta</br> in their own products.",
                "We are not concerned with any potential quality problems because <br>jxta</br> is considered to be the most mature and stable peer-to-peer framework available.",
                "Using <br>jxta</br> terminology, there are three types of peers used in node classification."
            ],
            "translated_annotated_samples": [
                "Usando JXTA [5], el controlador de nodos obtendrá un conjunto de nodos.",
                "El <br>marco de trabajo JXTA</br> se utiliza para implementar funcionalidades peer-to-peer.",
                "Esto se ha decidido debido al plazo extremadamente corto del proyecto, lo que nos permite aprovechar más de cinco años de pruebas y desarrollo, así como el apoyo de muchas organizaciones grandes que emplean <br>JXTA</br> en sus propios productos.",
                "No estamos preocupados por posibles problemas de calidad porque JXTA se considera el <br>marco de pares a pares</br> más maduro y estable disponible.",
                "Usando la <br>terminología de JXTA</br>, hay tres tipos de pares utilizados en la clasificación de nodos."
            ],
            "translated_text": "Apocrita: Un sistema de intercambio de archivos distribuido de igual a igual para intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Computación Distribuida y Tecnología Inalámbrica y de Telecomunicaciones Universidad de Guelph-Humber Toronto, ON, M9W 5L7 Canadá {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca RESUMEN Muchas organizaciones necesitan redactar documentos para diversos fines, y es posible que estos documentos deban ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un documento. En algunos casos, estos documentos son compartidos entre autores, a través de correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento. Incluso puede haber varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario. Otro problema surge cuando un documento está disponible en la máquina de un usuario y ese usuario está desconectado, en cuyo caso el documento ya no es accesible. En este artículo presentamos Apocrita, un revolucionario sistema distribuido de intercambio de archivos P2P para intranets. Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos - Aplicaciones Distribuidas. Términos generales Diseño, Experimentación, Rendimiento. 1. INTRODUCCIÓN El paradigma de computación Peer-to-Peer (P2P) se está convirtiendo en una forma completamente nueva de compartir recursos mutuos a través de Internet. Con el acceso cada vez más común a Internet de banda ancha, la tecnología P2P finalmente se ha convertido en una forma viable de compartir documentos y archivos multimedia. Ya existen programas en el mercado que permiten compartir archivos P2P. Estos programas permiten a millones de usuarios compartir archivos entre ellos. Si bien la utilización de clientes P2P ya es un gran avance en comparación con descargar archivos de sitios web, el uso de dichos programas no está exento de problemas. Los archivos descargados todavía requieren mucho manejo manual por parte del usuario. El usuario todavía necesita colocar los archivos en el directorio adecuado, gestionar archivos con múltiples versiones, eliminar los archivos cuando ya no se deseen. Nos esforzamos por hacer que el proceso de compartir documentos dentro de una Intranet sea más fácil. Muchas organizaciones están obligadas a redactar documentos para diversos fines, y dichos documentos pueden necesitar ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un documento. En algunos casos, estos documentos son enviados entre autores, por correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o que se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento. Puede haber incluso varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario. Además, algunas organizaciones no cuentan con un servidor de intercambio de archivos o la infraestructura de red necesaria para habilitar uno. En este artículo presentamos Apocrita, que es un sistema de intercambio de archivos P2P distribuido y rentable para dichas organizaciones. El resto de este documento está organizado de la siguiente manera. En la sección 2, presentamos Apocrita. El mecanismo de indexación distribuida y el protocolo se presentan en la Sección 3. La sección 4 presenta el modelo de distribución peer-to-peer. Se presenta un prototipo de prueba de concepto en la Sección 5, y las evaluaciones de rendimiento se discuten en la Sección 6. El trabajo relacionado se presenta en la Sección 7, y finalmente las conclusiones y el trabajo futuro se discuten en la Sección 8. Apocrita es un sistema de intercambio de archivos entre pares distribuido, y ha sido diseñado para facilitar la búsqueda de documentos en un entorno de Intranet. Actualmente, es posible que los documentos se encuentren en la máquina de un usuario o en una máquina remota. Es incluso posible que diferentes revisiones puedan residir en cada nodo de la Intranet. Esto significa que debe haber un proceso manual para mantener las versiones de los documentos. Apocrita resuelve este problema utilizando dos enfoques. Primero, debido a la naturaleza inherente de Apocrita, el documento solo residirá en una ubicación lógica única. En segundo lugar, Apocrita proporciona un método para revertir a versiones anteriores de documentos. Se concede el permiso de hacer copias digitales o impresas de todo o parte de este trabajo para uso personal o en el aula sin cargo alguno, siempre y cuando las copias no se realicen ni distribuyan con fines de lucro o ventaja comercial, y que las copias lleven este aviso y la cita completa en la primera página. Para copiar de otra manera, o republicar, publicar en servidores o redistribuir en listas, se requiere permiso específico previo y/o un pago. ACMSE07, 23-24 DE MARZO DE 2007, WINSTON-SALEM, NC, EE. UU. COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 también distribuirá documentos en múltiples máquinas para garantizar la alta disponibilidad de documentos importantes. Por ejemplo, si una máquina contiene un documento importante y actualmente no es accesible, el sistema es capaz de mantener la disponibilidad del documento a través de este mecanismo de distribución. Proporciona una interfaz sencilla para buscar y acceder a archivos que pueden existir tanto local como remotamente. La naturaleza distribuida de los documentos es transparente para el usuario. Apocrita apoya un modelo de red descentralizada en el que los pares utilizan un protocolo de descubrimiento para determinar los pares. Apocrita está destinado para usuarios de red en una Intranet. El enfoque principal son las organizaciones que pueden no tener una red lo suficientemente grande como para necesitar un servidor de archivos y la infraestructura de soporte. Elimina la necesidad de que los documentos sean compartidos manualmente entre usuarios mientras se editan y reduce la posibilidad de que se distribuyan versiones conflictivas. El sistema también proporciona cierta redundancia y en caso de fallo de una máquina, no se perderán documentos importantes. Es independiente del sistema operativo y fácil de acceder a través de un navegador web o mediante una aplicación independiente. Para disminuir el tiempo requerido para indexar una gran cantidad de documentos, el proceso de indexación se distribuye entre los nodos inactivos disponibles. Los archivos locales y remotos deben ser fácilmente accesibles a través de un sistema de archivos virtual montable, proporcionando transparencia para los usuarios. Apocrita utiliza un índice distribuido para todos los documentos disponibles en la intranet. Cada nodo contendrá una parte del índice completo y estará al tanto de qué parte del índice tiene cada otro nodo. Un nodo podrá contactar a cada nodo que contenga una porción única del índice. Además, cada nodo tiene un índice local separado de sus propios documentos. Pero como se discutió más tarde, en la implementación actual, cada nodo tiene una copia de todo el índice. La indexación de los documentos está distribuida. Por lo tanto, si un nodo está en proceso de indexar muchos documentos, distribuirá el trabajo entre los nodos. Una vez que el índice local de un nodo se actualiza con los nuevos documentos, entonces se actualizará el índice distribuido. El sistema de indexación distribuida actual consta de tres módulos separados: NodeController, FileSender y NodeIndexer. La responsabilidad de cada módulo se discute más adelante en esta sección. 3.1 Protocolo de indexación El protocolo que hemos diseñado para la indexación distribuida se muestra en la Figura 1. Figura 1. Protocolo de indexación distribuida Apocrita. La CONSULTA INACTIVA se envía desde el nodo iniciador para determinar qué otros nodos pueden ayudar con el proceso de indexación en general. No se enviaron parámetros con el comando. El nodo receptor responderá con un comando BUSY o IDLE. Si se recibe el comando IDLE, el nodo iniciador agregará el nodo que responde a una lista de ayudantes de indexación distribuida disponibles. En caso de recibir un comando OCUPADO, el nodo que responde es ignorado. OCUPADO: Una vez que un nodo recibe una CONSULTA IDL, determinará si puede considerarse un candidato para la indexación distribuida. Esta determinación se basa en el uso general de la CPU del nodo. Si el nodo está utilizando la mayor parte de su CPU para otros procesos, el nodo responderá a la CONSULTA DE INACTIVIDAD con un comando OCUPADO. Como en el caso de la respuesta BUSY, el nodo que recibe la CONSULTA DE INACTIVIDAD determinará su elegibilidad para la indexación distribuida. Para ser considerado un candidato para la indexación distribuida, el uso total de la CPU debe ser mínimo para permitir la indexación dedicada de los documentos distribuidos. Si este es el caso, el nodo responderá con un comando IDLE. ARCHIVO ENTRANTE: Una vez que el nodo iniciador reúne un conjunto de nodos inactivos para ayudar con la indexación distribuida, dividirá los documentos que se enviarán a los nodos. Para hacer esto, envía un mensaje de ARCHIVO ENTRANTE, que contiene el nombre del archivo y su tamaño en bytes. Después de que se haya enviado el comando ARCHIVO ENTRANTE, el nodo iniciador comenzará a transmitir el archivo al otro nodo. El nodo iniciador recorrerá los archivos que se enviarán al otro nodo; cada flujo de archivo estará precedido por el comando ARCHIVO ENTRANTE con los parámetros apropiados. ARCHIVO DE ÍNDICE: Una vez que el nodo de indexación haya completado el proceso de indexación del conjunto de archivos, debe enviar el índice resultante de vuelta al nodo iniciador. El índice está compuesto por varios archivos, que existen en el sistema de archivos del nodo de indexación. Al igual que con el comando INCOMING FILE, el nodo de indexación transmite cada archivo de índice después de enviar un comando INDEX FILE. El comando INDEX FILE tiene dos parámetros: el primero es el nombre del índice y el segundo es el tamaño del archivo en bytes. Al enviar los conjuntos de archivos tanto para el índice como para los archivos a ser indexados, el nodo debe notificar al nodo correspondiente cuando el proceso esté completo. Una vez que el nodo iniciador haya terminado de enviar el conjunto de documentos a ser indexados, enviará entonces un comando de ENVÍO COMPLETO indicando al nodo de indexación que no hay más archivos y que el nodo puede proceder con la indexación de los archivos. En el caso de que el nodo iniciador envíe los archivos de índice, el nodo de indexación completará la transferencia con el comando ENVIAR COMPLETO indicando al nodo iniciador que no hay más archivos de índice por enviar y que el nodo iniciador puede entonces ensamblar esos archivos de índice en el índice principal. El NodeController es responsable de establecer conexiones con nodos en estado de reposo para distribuir el proceso de indexación. Usando JXTA [5], el controlador de nodos obtendrá un conjunto de nodos. Este conjunto de nodos se itera y a cada uno se le envía el comando IDLE QUERY. Los nodos que responden con inactividad son luego recopilados. El conjunto de nodos inactivos incluye al nodo que inicia el proceso de indexación distribuida, conocido como nodo local. Una vez que se obtiene la colección de nodos inactivos, el nodo actualiza el conjunto de controladores y divide equitativamente el conjunto de documentos que se van a indexar. Por ejemplo, si hay 100 documentos y 10 nodos (incluyendo el nodo local) entonces cada nodo tendrá 10 documentos para indexar. Para cada nodo de indexación se crea una instancia del objeto FileSender. El FileSender es consciente del conjunto de documentos de los que el nodo es responsable. Una vez que se ha creado un objeto FileSender para cada nodo, el NodeController espera a que cada FileSender termine. Cuando los objetos FileSender hayan completado, el NodeController tomará los índices resultantes de 175 nodos y los pasará a una instancia del IndexCompiler, que mantiene el índice y la lista de FileSenders. Una vez que el IndexCompiler haya completado, volverá al estado inactivo y activará el escáner de directorios para monitorear el conjunto de documentos de propiedad local en busca de cambios que puedan requerir reindexación. El NodeIndexer es responsable de recibir los documentos enviados por el nodo iniciador y luego indexarlos utilizando el motor Lucene [7]. Una vez que se completa el indexado, el índice resultante se transmite de vuelta al nodo iniciador y se compila en el índice local del propio nodo indexador. Antes de iniciar el proceso de indexación, se debe enviar un mensaje de CONSULTA INACTIVA. Esta es la primera orden que inicia el proceso de indexación. El nodo indexador determinará si se considera inactivo en función del uso actual de la CPU. Como se describe en la sección del protocolo, si el nodo no se está utilizando y tiene un bajo porcentaje de uso de CPU en general, devolverá IDLE al comando de CONSULTA DE INACTIVIDAD. Si el uso de la CPU de los nodos del indexador está por encima del 50% durante un período de tiempo especificado, se considerará ocupado y responderá al comando IDLE QUERY con BUSY. Si un nodo se determina ocupado, vuelve a su estado de escucha esperando otra CONSULTA INACTIVA de otro nodo iniciador. Si se determina que el nodo está inactivo, entrará en el estado en el que recibirá archivos del nodo iniciador de los que es responsable de indexar. Una vez que todos los archivos son recibidos por el nodo iniciador, indicado por un mensaje de ENVÍO COMPLETO, se inicia una instancia del motor de indexación de Lucene. Los archivos se almacenan en un directorio temporal separado de los documentos locales de los nodos que son responsables de mantener un índice de los mismos. El escritor de índices de Lucene indexa luego todos los archivos transferidos. El índice se almacena en la unidad dentro de un directorio temporal separado del índice actual. Después de que se completa la indexación de los archivos, el nodo indexador entra en el estado en el que los archivos de índice son enviados de vuelta al nodo iniciador. El nodo indexador recorre todos los archivos creados por Lucene's IndexWriter y los transmite al nodo iniciador. Una vez que estos archivos son devueltos, ese índice se fusiona en el índice completo de los nodos indexadores de los archivos existentes. Luego entra en el estado de espera, donde escuchará a otros nodos que requieran distribuir el proceso de indexación. El objeto FileSender es el nodo iniciador equivalente al nodo indexador. Inicia la comunicación entre el nodo iniciador y el nodo que ayudará en la indexación distribuida. El nodo iniciador ejecuta muchas instancias del nodo FileSender, una para cada otro nodo que haya determinado que está inactivo. Al instanciar el FileSender se le pasa el nodo al que es responsable de contactar y el conjunto de archivos que deben ser enviados. El primer trabajo de FileSenders es enviar los archivos que deben ser indexados por el otro nodo inactivo. Los archivos se transmiten uno a la vez al otro nodo. Envía cada archivo utilizando el comando ARCHIVO ENTRANTE. Con ese comando se envía el nombre del archivo que se está enviando y el tamaño en bytes. Una vez que todos los archivos hayan sido enviados, el FileSender envía el comando de ENVÍO COMPLETADO. El FileSender crea una instancia de Lucene's IndexWriter y se prepara para crear el índice en un directorio temporal en el sistema de archivos. El FileSender comenzará a recibir los archivos que se guardarán dentro del índice. Recibe un comando de ARCHIVO DE ÍNDICE con el nombre de los archivos y el tamaño en bytes. Este archivo se transmite luego al directorio de índice temporal en el nodo de FileSender. Después de que se haya completado la transferencia de los archivos de índice, el FileSender notifica a la instancia del compilador de índices que está lista para combinar el índice. Cada instancia del FileSender tiene su propia sección única de espacio temporal para almacenar el índice que ha sido transferido desde el nodo de indexación. Al notificar al IndexCompiler, también pasará la ubicación del directorio particular de FileSenders de ese índice. 4. Apocrita utiliza un modelo de distribución peer-to-peer para distribuir archivos. Los archivos se distribuyen únicamente desde un nodo servidor a un nodo cliente sin tener en cuenta la disponibilidad de las partes de archivo de otros clientes en la red. Esto significa que las transferencias de archivos serán rápidas y eficientes y no deberían afectar severamente la usabilidad de los nodos de servicio desde el punto de vista de un usuario local. El <br>marco de trabajo JXTA</br> se utiliza para implementar funcionalidades peer-to-peer. Esto se ha decidido debido al plazo extremadamente corto del proyecto, lo que nos permite aprovechar más de cinco años de pruebas y desarrollo, así como el apoyo de muchas organizaciones grandes que emplean <br>JXTA</br> en sus propios productos. No estamos preocupados por posibles problemas de calidad porque JXTA se considera el <br>marco de pares a pares</br> más maduro y estable disponible. Usando la <br>terminología de JXTA</br>, hay tres tipos de pares utilizados en la clasificación de nodos. ",
            "candidates": [],
            "error": [
                [
                    "marco de trabajo JXTA",
                    "JXTA",
                    "marco de pares a pares",
                    "terminología de JXTA"
                ]
            ]
        },
        "distributed indexing": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Apocrita: A Distributed Peer-to-Peer File Sharing System for Intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Distributed Computing and Wireless & Telecommunications Technology University of Guelph-Humber Toronto, ON, M9W 5L7 Canada {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca ABSTRACT Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all member of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are shared between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Another problem arises when a document is made available on a users machine and that user is offline, in which case the document is no longer accessible.",
                "In this paper we present Apocrita, a revolutionary distributed P2P file sharing system for Intranets.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Distributed applications.",
                "General Terms Design, Experimentation, Performance. 1.",
                "INTRODUCTION The Peer-to-Peer (P2P) computing paradigm is becoming a completely new form of mutual resource sharing over the Internet.",
                "With the increasingly common place broadband Internet access, P2P technology has finally become a viable way to share documents and media files.",
                "There are already programs on the market that enable P2P file sharing.",
                "These programs enable millions of users to share files among themselves.",
                "While the utilization of P2P clients is already a gigantic step forward compared to downloading files off websites, using such programs are not without their problems.",
                "The downloaded files still require a lot of manual management by the user.",
                "The user still needs to put the files in the proper directory, manage files with multiple versions, delete the files when they are no longer wanted.",
                "We strive to make the process of sharing documents within an Intranet easier.",
                "Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all members of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are sent between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Furthermore, some organizations do not have a file sharing server or the necessary network infrastructure to enable one.",
                "In this paper we present Apocrita, which is a cost-effective distributed P2P file sharing system for such organizations.",
                "The rest of this paper is organized as follows.",
                "In section 2, we present Apocrita.",
                "The <br>distributed indexing</br> mechanism and protocol are presented in Section 3.",
                "Section 4 presents the peer-topeer distribution model.",
                "A proof of concept prototype is presented in Section 5, and performance evaluations are discussed in Section 6.",
                "Related work is presented is Section 7, and finally conclusions and future work are discussed in Section 8. 2.",
                "APOCRITA Apocrita is a distributed peer-to-peer file sharing system, and has been designed to make finding documents easier in an Intranet environment.",
                "Currently, it is possible for documents to be located on a users machine or on a remote machine.",
                "It is even possible that different revisions could reside on each node on the Intranet.",
                "This means there must be a manual process to maintain document versions.",
                "Apocrita solves this problem using two approaches.",
                "First, due to the inherent nature of Apocrita, the document will only reside on a single logical location.",
                "Second, Apocrita provides a method of reverting to previous document versions.",
                "Apocrita Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page.",
                "To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.",
                "ACMSE07, MARCH 23-24, 2007, WINSTON-SALEM, NC, USA.",
                "COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 will also distribute documents across multiple machines to ensure high availability of important documents.",
                "For example, if a machine contains an important document and the machine is currently inaccessible, the system is capable of maintaining availability of the document through this distribution mechanism.",
                "It provides a simple interface for searching and accessing files that may exist either locally or remotely.",
                "The distributed nature of the documents is transparent to the user.",
                "Apocrita supports a decentralized network model where the peers use a discovery protocol to determine peers.",
                "Apocrita is intended for network users on an Intranet.",
                "The main focus is organizations that may not have a network large enough to require a file server and supporting infrastructure.",
                "It eliminates the need for documents to be manually shared between users while being edited and reduces the possibility of conflicting versions being distributed.",
                "The system also provides some redundancy and in the event of a single machine failure, no important documents will be lost.",
                "It is operating system independent, and easy to access through a web browser or through a standalone application.",
                "To decrease the time required for indexing a large number of documents, the indexing process is distributed across available idle nodes.",
                "Local and remote files should be easily accessible through a virtual mountable file system, providing transparency for users. 3.",
                "<br>distributed indexing</br> Apocrita uses a distributed index for all the documents that are available on the Intranet.",
                "Each node will contain part of the full index, and be aware of what part of the index each other node has.",
                "A node will be able to contact each node that contains a unique portion of the index.",
                "In addition, each node has a separate local index of its own documents.",
                "But as discussed later, in the current implementation, each node has a copy of the entire index.",
                "Indexing of the documents is distributed.",
                "Therefore, if a node is in the process of indexing many documents, it will break up the work over the nodes.",
                "Once a nodes local index is updated with the new documents, the distributed index will then be updated.",
                "The current <br>distributed indexing</br> system consists of three separate modules: NodeController, FileSender, and NodeIndexer.",
                "The responsibility of each module is discussed later in this section. 3.1 Indexing Protocol The protocol we have designed for the <br>distributed indexing</br> is depicted in Figure 1.",
                "Figure 1.",
                "Apocrita <br>distributed indexing</br> protocol.",
                "IDLE QUERY: The IDLE QUERY is sent out from the initiating node to determine which other nodes may be able to help with the overall indexing process.",
                "There are no parameters sent with the command.",
                "The receiving node will respond with either a BUSY or IDLE command.",
                "If the IDLE command is received, the initiating node will add the responding node to a list of available <br>distributed indexing</br> helpers.",
                "In the case of a BUSY command being received, the responding node is ignored.",
                "BUSY: Once a node received an IDL QUERY, it will determine whether it can be considered a candidate for <br>distributed indexing</br>.",
                "This determination is based on the overall CPU usage of the node.",
                "If the node is using most of its CPU for other processes, the node will respond to the IDLE QUERY with a BUSY command.",
                "IDLE: As with the case of the BUSY response, the node receiving the IDLE QUERY will determine its eligibility for <br>distributed indexing</br>.",
                "To be considered a candidate for <br>distributed indexing</br>, the overall CPU usage must be at a minimum to all for dedicated indexing of the distributed documents.",
                "If this is the case, the node will respond with an IDLE command.",
                "INCOMING FILE: Once the initiating node assembles a set of idle nodes to assist with the <br>distributed indexing</br>, it will divide the documents to be sent to the nodes.",
                "To do this, it sends an INCOMING FILE message, which contains the name of the file as well as the size in bytes.",
                "After the INCOMING FILE command has been sent, the initiating node will begin to stream the file to the other node.",
                "The initiating node will loop through the files that are to be sent to the other node; each file stream being preceded by the INCOMING FILE command with the appropriate parameters.",
                "INDEX FILE: Once the indexing node has completed the indexing process of the set of files, it must send the resultant index back to the initiating node.",
                "The index is comprised of multiple files, which exist on the file system of the indexing node.",
                "As with the INCOMING FILE command, the indexing node streams each index file after sending an INDEX FILE command.",
                "The INDEX FILE command has two parameters: the first being the name of the index, and the second is the size of the file in bytes.",
                "SEND COMPLETE: When sending the sets of files for both the index and the files to be indexed, the node must notify the corresponding node when the process is complete.",
                "Once the initiating node is finished sending the set of documents to be indexed, it will then send a SEND COMPLETE command indicating to the indexing node that there are no more files and the node can proceed with indexing the files.",
                "In the case of the initiating node sending the index files, the indexing node will complete the transfer with the SEND COMPLETE command indicating to the initiating node that there are no more index files to be sent and the initiating node can then assemble those index files into the main index.",
                "The NodeController is responsible for setting up connections with nodes in the idle state to distribute the indexing process.",
                "Using JXTA [5], the node controller will obtain a set of nodes.",
                "This set of nodes is iterated and each one is sent the IDLE QUERY command.",
                "The nodes that respond with idle are then collected.",
                "The set of idle nodes includes the node initiating the <br>distributed indexing</br> process, referred to as the local node.",
                "Once the collection of idle nodes is obtained, the node updates the set of controllers and evenly divides the set of documents that are to be indexed.",
                "For example, if there are 100 documents and 10 nodes (including the local node) then each node will have 10 documents to index.",
                "For each indexing node an instance of the FileSender object is created.",
                "The FileSender is aware of the set of documents that node is responsible for.",
                "Once a FileSender object has been created for each node, the NodeController waits for each FileSender to complete.",
                "When the FileSender objects have completed the NodeController will take the resultant indexes from 175 each node and pass them to an instance of the IndexCompiler, which maintains the index and the list of FileSenders.",
                "Once the IndexCompiler has completed it will return to the idle state and activate the directory scanner to monitor the locally owned set of documents for changes that may require reindexing.",
                "The NodeIndexer is responsible for receiving documents sent to it by the initiating node and then indexing them using the Lucene engine [7].",
                "Once the indexing is complete the resulting index is streamed back to the initiating node as well as compiled in the indexer nodes own local index.",
                "Before initiating the indexing process it must be sent an IDLE QUERY message.",
                "This is the first command that sets off the indexing process.",
                "The indexer node will determine whether it is considered idle based on the current CPU usage.",
                "As outlined in the protocol section if the node is not being used and has a low overall CPU usage percentage it will return IDLE to the IDLE QUERY command.",
                "If the indexer nodes CPU usage is above 50% for a specified amount of time it is then considered to be busy and will respond to the IDLE QUERY command with BUSY.",
                "If a node is determined busy it returns to its listening state waiting for another IDLE QUERY from another initiating node.",
                "If the node is determined to be idle it will enter the state where it will receive files from the initiating node that it is responsible for indexing.",
                "Once all of the files are received by the initiating node, indicated by a SEND COMPLETE message, it starts an instance of the Lucene indexing engine.",
                "The files are stored in a temporary directory separate from the nodes local documents that it is responsible for maintaining an index of.",
                "The Lucene index writer then indexes all of the transferred files.",
                "The index is stored on the drive within a temporary directory separate from the current index.",
                "After the indexing of the files completes the indexer node enters the state where the index files are sent back to the initiating node.",
                "The indexer node loops through all of the files created by Lucenes IndexWriter and streams them to the initiating node.",
                "Once these files are sent back that index is then merged into the indexer nodes own full index of the existing files.",
                "It then enters the idle state where it will then listen for any other nodes that required distributing the indexing process.",
                "The FileSender object is the initiating node equivalent of the indexer node.",
                "It initiates the communication between the initiating node and the node that will assist in the <br>distributed indexing</br>.",
                "The initiating node runs many instances of the FileSender node one for each other node it has determined to be idle.",
                "Upon instantiation of the FileSender it is passed the node that it is responsible for contacting and the set of files that must be sent.",
                "The FileSenders first job is to send the files that are to be indexed by the other idle node.",
                "The files are streamed one at a time to the other node.",
                "It sends each file using the INCOMING FILE command.",
                "With that command it sends the name of the file being sent and the size in bytes.",
                "Once all files have been sent the FileSender sends the SEND COMPLETE command.",
                "The FileSender creates an instance of Lucenes IndexWriter and prepares to create the index in a temporary directory on the file system.",
                "The FileSender will begin to receive the files that are to be saved within the index.",
                "It receives an INDEX FILE command with the name of the files and the size in bytes.",
                "This file is then streamed into the temporary index directory on the FileSender node.",
                "After the transfer of the index files has been completed the FileSender notifies the instance of the index compiler that it is ready to combine the index.",
                "Each instance of the FileSender has its own unique section of temporary space to store the index that has been transferred back from the indexing node.",
                "When notifying the IndexCompiler it will also pass the location of the particular FileSenders directory location of that index. 4.",
                "PEER-TO-PEER DISTRIBUTION Apocrita uses a peer-to-peer distribution model in order to distribute files.",
                "Files are distributed solely from a serving node to a client node without regard for the availability of file pieces from other clients in the network.",
                "This means that the file transfers will be fast and efficient and should not severely affect the usability of serving nodes from the point of view of a local user.",
                "The JXTA framework [5] is used in order to implement peer-to-peer functionality.",
                "This has been decided due to the extremely shorttimeline of the project which allows us to take advantage of over five years of testing and development and support from many large organizations employing JXTA in their own products.",
                "We are not concerned with any potential quality problems because JXTA is considered to be the most mature and stable peer-to-peer framework available.",
                "Using JXTA terminology, there are three types of peers used in node classification.",
                "Edge peers are typically low-bandwidth, non-dedicated nodes.",
                "Due to these characteristics, edge peers are not used with Apocrita.",
                "Relay peers are typically higher-bandwidth, dedicated nodes.",
                "This is the classification of all nodes in the Apocrita network, and, as such, are the default classification used.",
                "Rendezvous peers are used to coordinate message passing between nodes in the Apocrita network.",
                "This means that a minimum of one rendezvous peer per subnet is required. 4.1 Peer Discovery The Apocrita server subsystem uses the JXTA Peer Discovery Protocol (PDP) in order to find participating peers within the network as shown in Figure 2.",
                "Figure 2.",
                "Apocrita peer discovery process. 176 The PDP listens for peer advertisements from other nodes in the Apocrita swarm.",
                "If a peer advertisement is detected, the server will attempt to join the peer group and start actively contributing to the network.",
                "If no peers are found by the discovery service, the server will create a new peer group and start advertising this peer group.",
                "This new peer group will be periodically advertised on the network; any new peers joining the network will attach to this peer group.",
                "A distinct advantage of using the JXTA PDP is that Apocrita does not have to be sensitive to particular networking nuances such as Maximum Transmission Unit (MTU).",
                "In addition, Apocrita does not have to support one-to-many packet delivery methods such as multicast and instead can rely on JXTA for this support. 4.2 Index Query Operation All nodes in the Apocrita swarm have a complete and up-to-date copy of the network index stored locally.",
                "This makes querying the index for search results trivial.",
                "Unlike the Gnutella protocol, a query does not have to propagate throughout the network.",
                "This also means that the time to return query results is very fast - much faster than protocols that rely on nodes in the network to pass the query throughout the network and then wait for results.",
                "This is demonstrated in Figure 3.",
                "Figure 3.",
                "Apocrita query operation.",
                "Each document in the swarm has a unique document identification number (ID).",
                "A node will query the index and a result will be returned with both the document ID number as well as a list of peers with a copy of the matched document ID.",
                "It is then the responsibility of the searching peer to contact the peers in the list to negotiate file transfer between the client and server. 5.",
                "PROTOTYPE IMPLEMENTATION Apocrita uses the Lucene framework [7], which is a project under development by the Apache Software Foundation.",
                "Apache Lucene is a high-performance, full-featured text search engine library written entirely in Java.",
                "In the current implementation, Apocrita is only capable of indexing plain text documents.",
                "Apocrita uses the JXTA framework [5] as a peer-to-peer transport library between nodes.",
                "JXTA is used to pass both messages and files between nodes in the search network.",
                "By using JXTA, Apocrita takes advantage of a reliable, and proven peer-to-peer transport mechanism.",
                "It uses the pipe facility in order to pass messages and files between nodes.",
                "The pipe facility provides many different types of pipe advertisements.",
                "This includes an unsecured unicast pipe, a secured unicast pipe, and a propagated unsecured pipe.",
                "Message passing is used to pass status messages between nodes in order to aid in indexing, searching, and retrieval.",
                "For example, a node attempting to find an idle node to participate in indexing will query nodes via the message facility.",
                "Idle nodes will reply with a status message to indicate they are available to start indexing.",
                "File passing is used within Apocrita for file transfer.",
                "After a file has been searched for and located within the peer group, a JXTA socket will be opened and file transfer will take place.",
                "A JXTA socket is similar to a standard Java socket, however a JXTA socket uses JXTA pipes in underlying network transport.",
                "File passing uses an unsecured unicast pipe in order to transfer data.",
                "File passing is also used within Apocrita for index transfer.",
                "Index transfer works exactly like a file transfer.",
                "In fact, the index transfer actually passes the index as a file.",
                "However, there is one key difference between file transfer and index transfer.",
                "In the case of file transfer, a socket is created between only two nodes.",
                "In the case of index transfer, a socket must be created between all nodes in the network in order to pass the index, which allows for all nodes to have a full and complete index of the entire network.",
                "In order to facilitate this transfer efficiently, index transfer will use an unsecured propagated pipe to communicate with all nodes in the Apocrita network. 6.",
                "PERFORMANCE EVALUATION It is difficult to objectively benchmark the results obtained through Apocrita because there is no other system currently available with the same goals as Apocrita.",
                "We have, however, evaluated the performance of the critical sections of the system.",
                "The critical sections were determined to be the processes that are the most time intensive.",
                "The evaluation was completed on standard lab computers on a 100Mb/s Ethernet LAN; the machines run Windows XP with a Pentium 4 CPU running at 2.4GHz with 512 MB of RAM.",
                "The indexing time has been run against both: the Time Magazine collection [8], which contains 432 documents and 83 queries and their most relevant results, and the NPL collection [8] that has a total of 11,429 documents and 93 queries with expected results.",
                "Each document ranges in size between 4KB and 8KB.",
                "As Figure 4 demonstrates, the number of nodes involved in the indexing process affects the time taken to complete the indexing processsometimes even drastically.",
                "Figure 4.",
                "Node vs. index time.",
                "The difference in going from one indexing node to two indexing nodes is the most drastic and equates to an indexing time 37% faster than a single indexing node.",
                "The different between two 177 indexing nodes and three indexing nodes is still significant and represents a 16% faster time than two indexing nodes.",
                "As the number of indexing nodes increases the results are less dramatic.",
                "This can be attributed to the time overhead associated with having many nodes perform indexing.",
                "The time needed to communicate with a node is constant, so as the number of nodes increases, this constant becomes more prevalent.",
                "Also, the complexity of joining the indexing results is a complex operation and is complicated further as the number of indexing nodes increases.",
                "Socket performance is also a very important part of Apocrita.",
                "Benchmarks were performed using a 65MB file on a system with both the client and server running locally.",
                "This was done to isolate possible network issues.",
                "Although less drastic, similar results were shown when the client and server run on independent hardware.",
                "In order to mitigate possible unexpected errors, each test was run 10 times.",
                "Figure 5.",
                "Java sockets vs. JXTA sockets.",
                "As Figure 5 demonstrates, the performance of JXTA sockets is abysmal as compared to the performance of standard Java sockets.",
                "The minimum transfer rate obtained using Java sockets is 81,945KB/s while the minimum transfer rater obtained using JXTA sockets is much lower at 3, 805KB/s.",
                "The maximum transfer rater obtain using Java sockets is 97,412KB/s while the maximum transfer rate obtained using JXTA sockets is 5,530KB/s.",
                "Finally, the average transfer rate using Java sockets is 87,540KB/s while the average transfer rate using JXTA sockets is 4,293KB/s.",
                "The major problem found in these benchmarks is that the underlying network transport mechanism does not perform as quickly or efficiently as expected.",
                "In order to garner a performance increase, the JXTA framework needs to be substituted with a more traditional approach.",
                "The indexing time is also a bottleneck and will need to be improved for the overall quality of Apocrita to be improved. 7.",
                "RELATED WORK Several decentralized P2P systems [1, 2, 3] exist today that Apocrita features some of their functionality.",
                "However, Apocrita also has unique novel searching and indexing features that make this system unique.",
                "For example, Majestic-12 [4] is a distributed search and indexing project designed for searching the Internet.",
                "Each user would install a client, which is responsible for indexing a portion of the web.",
                "A central area for querying the index is available on the Majestic-12 web page.",
                "The index itself is not distributed, only the act of indexing is distributed.",
                "The <br>distributed indexing</br> aspect of this project most closely relates Apocrita goals.",
                "YaCy [6] is a peer-to-peer web search application.",
                "YaCy consists of a web crawler, an indexer, a built-in database engine, and a p2p index exchange protocol.",
                "YaCy is designed to maintain a distributed index of the Internet.",
                "It used a distributed hash table (DHT) to maintain the index.",
                "The local node is used to query but all results that are returned are accessible on the Internet.",
                "YaCy used many peers and DHT to maintain a distributed index.",
                "Apocrita will also use a distributed index in future implementations and may benefit from using an implementation of a DHT.",
                "YaCy however, is designed as a web search engine and, as such solves a much different problem than Apocrita. 8.",
                "CONCLUSIONS AND FUTURE WORK We presented Apocrita, a distributed P2P searching and indexing system intended for network users on an Intranet.",
                "It can help organizations with no network file server or necessary network infrastructure to share documents.",
                "It eliminates the need for documents to be manually shared among users while being edited and reduce the possibility of conflicting versions being distributed.",
                "A proof of concept prototype has been constructed, but the results from measuring the network transport mechanism and the indexing time were not as impressive as initially envisioned.",
                "Despite these shortcomings, the experience gained from the design and implementation of Apocrita has given us more insight into building challenging distributed systems.",
                "For future work, Apocrita will have a smart content distribution model in which a single instance of a file can intelligently and transparently replicate throughout the network to ensure a copy of every important file will always be available regardless of the availability of specific nodes in the network.",
                "In addition, we plan to integrate a revision control system into the content distribution portion of Apocrita so that users could have the ability to update an existing file that they found and have the old revision maintained and the new revision propagated.",
                "Finally, the current implementation has some overhead and redundancy due to the fact that the entire index is maintained on each individual node, we plan to design a distributed index. 9.",
                "REFERENCES [1] Rodrigues, R., Liskov, B., Shrira, L.: The Design of a Robust Peer-to-Peer System.",
                "Available online: http://www.pmg.lcs.mit.edu/~rodrigo/ew02-robust.pdf. [2] Chawathe, Y., Ratnasamy, S., Breslau, L., Lanham, N., and Chenker, S.: Making Gnutella-like P2P Systems Scalable.",
                "In Proceedings of SIGCOMM03, Karlsruhe, Germany. [3] Harvest: A Distributed Search System: http://harvest.sourceforge.net. [4] Majestic-12: Distributed Search Engine: http://www.majestic12.co.uk. [5] JXTA: http://www.jxta.org. [6] YaCy: Distributed P2P-based Web Indexing: http://www.yacy.net/yacy. [7] Lucene Search Engine Library: http://lucene.apache.org. [8] Test Collections (Time Magazine and NPL): www.dcs.gla.ac.uk/idom/ir_resources/test_collections. 178"
            ],
            "original_annotated_samples": [
                "The <br>distributed indexing</br> mechanism and protocol are presented in Section 3.",
                "<br>distributed indexing</br> Apocrita uses a distributed index for all the documents that are available on the Intranet.",
                "The current <br>distributed indexing</br> system consists of three separate modules: NodeController, FileSender, and NodeIndexer.",
                "The responsibility of each module is discussed later in this section. 3.1 Indexing Protocol The protocol we have designed for the <br>distributed indexing</br> is depicted in Figure 1.",
                "Apocrita <br>distributed indexing</br> protocol."
            ],
            "translated_annotated_samples": [
                "El mecanismo de <br>indexación distribuida</br> y el protocolo se presentan en la Sección 3.",
                "Apocrita utiliza un <br>índice distribuido</br> para todos los documentos disponibles en la intranet.",
                "El sistema de <br>indexación distribuida</br> actual consta de tres módulos separados: NodeController, FileSender y NodeIndexer.",
                "La responsabilidad de cada módulo se discute más adelante en esta sección. 3.1 Protocolo de indexación El protocolo que hemos diseñado para la <br>indexación distribuida</br> se muestra en la Figura 1.",
                "Protocolo de <br>indexación distribuida</br> Apocrita."
            ],
            "translated_text": "Apocrita: Un sistema de intercambio de archivos distribuido de igual a igual para intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Computación Distribuida y Tecnología Inalámbrica y de Telecomunicaciones Universidad de Guelph-Humber Toronto, ON, M9W 5L7 Canadá {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca RESUMEN Muchas organizaciones necesitan redactar documentos para diversos fines, y es posible que estos documentos deban ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un documento. En algunos casos, estos documentos son compartidos entre autores, a través de correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento. Incluso puede haber varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario. Otro problema surge cuando un documento está disponible en la máquina de un usuario y ese usuario está desconectado, en cuyo caso el documento ya no es accesible. En este artículo presentamos Apocrita, un revolucionario sistema distribuido de intercambio de archivos P2P para intranets. Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos - Aplicaciones Distribuidas. Términos generales Diseño, Experimentación, Rendimiento. 1. INTRODUCCIÓN El paradigma de computación Peer-to-Peer (P2P) se está convirtiendo en una forma completamente nueva de compartir recursos mutuos a través de Internet. Con el acceso cada vez más común a Internet de banda ancha, la tecnología P2P finalmente se ha convertido en una forma viable de compartir documentos y archivos multimedia. Ya existen programas en el mercado que permiten compartir archivos P2P. Estos programas permiten a millones de usuarios compartir archivos entre ellos. Si bien la utilización de clientes P2P ya es un gran avance en comparación con descargar archivos de sitios web, el uso de dichos programas no está exento de problemas. Los archivos descargados todavía requieren mucho manejo manual por parte del usuario. El usuario todavía necesita colocar los archivos en el directorio adecuado, gestionar archivos con múltiples versiones, eliminar los archivos cuando ya no se deseen. Nos esforzamos por hacer que el proceso de compartir documentos dentro de una Intranet sea más fácil. Muchas organizaciones están obligadas a redactar documentos para diversos fines, y dichos documentos pueden necesitar ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un documento. En algunos casos, estos documentos son enviados entre autores, por correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o que se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento. Puede haber incluso varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario. Además, algunas organizaciones no cuentan con un servidor de intercambio de archivos o la infraestructura de red necesaria para habilitar uno. En este artículo presentamos Apocrita, que es un sistema de intercambio de archivos P2P distribuido y rentable para dichas organizaciones. El resto de este documento está organizado de la siguiente manera. En la sección 2, presentamos Apocrita. El mecanismo de <br>indexación distribuida</br> y el protocolo se presentan en la Sección 3. La sección 4 presenta el modelo de distribución peer-to-peer. Se presenta un prototipo de prueba de concepto en la Sección 5, y las evaluaciones de rendimiento se discuten en la Sección 6. El trabajo relacionado se presenta en la Sección 7, y finalmente las conclusiones y el trabajo futuro se discuten en la Sección 8. Apocrita es un sistema de intercambio de archivos entre pares distribuido, y ha sido diseñado para facilitar la búsqueda de documentos en un entorno de Intranet. Actualmente, es posible que los documentos se encuentren en la máquina de un usuario o en una máquina remota. Es incluso posible que diferentes revisiones puedan residir en cada nodo de la Intranet. Esto significa que debe haber un proceso manual para mantener las versiones de los documentos. Apocrita resuelve este problema utilizando dos enfoques. Primero, debido a la naturaleza inherente de Apocrita, el documento solo residirá en una ubicación lógica única. En segundo lugar, Apocrita proporciona un método para revertir a versiones anteriores de documentos. Se concede el permiso de hacer copias digitales o impresas de todo o parte de este trabajo para uso personal o en el aula sin cargo alguno, siempre y cuando las copias no se realicen ni distribuyan con fines de lucro o ventaja comercial, y que las copias lleven este aviso y la cita completa en la primera página. Para copiar de otra manera, o republicar, publicar en servidores o redistribuir en listas, se requiere permiso específico previo y/o un pago. ACMSE07, 23-24 DE MARZO DE 2007, WINSTON-SALEM, NC, EE. UU. COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 también distribuirá documentos en múltiples máquinas para garantizar la alta disponibilidad de documentos importantes. Por ejemplo, si una máquina contiene un documento importante y actualmente no es accesible, el sistema es capaz de mantener la disponibilidad del documento a través de este mecanismo de distribución. Proporciona una interfaz sencilla para buscar y acceder a archivos que pueden existir tanto local como remotamente. La naturaleza distribuida de los documentos es transparente para el usuario. Apocrita apoya un modelo de red descentralizada en el que los pares utilizan un protocolo de descubrimiento para determinar los pares. Apocrita está destinado para usuarios de red en una Intranet. El enfoque principal son las organizaciones que pueden no tener una red lo suficientemente grande como para necesitar un servidor de archivos y la infraestructura de soporte. Elimina la necesidad de que los documentos sean compartidos manualmente entre usuarios mientras se editan y reduce la posibilidad de que se distribuyan versiones conflictivas. El sistema también proporciona cierta redundancia y en caso de fallo de una máquina, no se perderán documentos importantes. Es independiente del sistema operativo y fácil de acceder a través de un navegador web o mediante una aplicación independiente. Para disminuir el tiempo requerido para indexar una gran cantidad de documentos, el proceso de indexación se distribuye entre los nodos inactivos disponibles. Los archivos locales y remotos deben ser fácilmente accesibles a través de un sistema de archivos virtual montable, proporcionando transparencia para los usuarios. Apocrita utiliza un <br>índice distribuido</br> para todos los documentos disponibles en la intranet. Cada nodo contendrá una parte del índice completo y estará al tanto de qué parte del índice tiene cada otro nodo. Un nodo podrá contactar a cada nodo que contenga una porción única del índice. Además, cada nodo tiene un índice local separado de sus propios documentos. Pero como se discutió más tarde, en la implementación actual, cada nodo tiene una copia de todo el índice. La indexación de los documentos está distribuida. Por lo tanto, si un nodo está en proceso de indexar muchos documentos, distribuirá el trabajo entre los nodos. Una vez que el índice local de un nodo se actualiza con los nuevos documentos, entonces se actualizará el índice distribuido. El sistema de <br>indexación distribuida</br> actual consta de tres módulos separados: NodeController, FileSender y NodeIndexer. La responsabilidad de cada módulo se discute más adelante en esta sección. 3.1 Protocolo de indexación El protocolo que hemos diseñado para la <br>indexación distribuida</br> se muestra en la Figura 1. Figura 1. Protocolo de <br>indexación distribuida</br> Apocrita. ",
            "candidates": [],
            "error": [
                [
                    "indexación distribuida",
                    "índice distribuido",
                    "indexación distribuida",
                    "indexación distribuida",
                    "indexación distribuida"
                ]
            ]
        },
        "peer-to-peer distribution model": {
            "translated_key": "modelo de distribución peer-to-peer",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Apocrita: A Distributed Peer-to-Peer File Sharing System for Intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Distributed Computing and Wireless & Telecommunications Technology University of Guelph-Humber Toronto, ON, M9W 5L7 Canada {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca ABSTRACT Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all member of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are shared between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Another problem arises when a document is made available on a users machine and that user is offline, in which case the document is no longer accessible.",
                "In this paper we present Apocrita, a revolutionary distributed P2P file sharing system for Intranets.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Distributed applications.",
                "General Terms Design, Experimentation, Performance. 1.",
                "INTRODUCTION The Peer-to-Peer (P2P) computing paradigm is becoming a completely new form of mutual resource sharing over the Internet.",
                "With the increasingly common place broadband Internet access, P2P technology has finally become a viable way to share documents and media files.",
                "There are already programs on the market that enable P2P file sharing.",
                "These programs enable millions of users to share files among themselves.",
                "While the utilization of P2P clients is already a gigantic step forward compared to downloading files off websites, using such programs are not without their problems.",
                "The downloaded files still require a lot of manual management by the user.",
                "The user still needs to put the files in the proper directory, manage files with multiple versions, delete the files when they are no longer wanted.",
                "We strive to make the process of sharing documents within an Intranet easier.",
                "Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all members of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are sent between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Furthermore, some organizations do not have a file sharing server or the necessary network infrastructure to enable one.",
                "In this paper we present Apocrita, which is a cost-effective distributed P2P file sharing system for such organizations.",
                "The rest of this paper is organized as follows.",
                "In section 2, we present Apocrita.",
                "The distributed indexing mechanism and protocol are presented in Section 3.",
                "Section 4 presents the peer-topeer distribution model.",
                "A proof of concept prototype is presented in Section 5, and performance evaluations are discussed in Section 6.",
                "Related work is presented is Section 7, and finally conclusions and future work are discussed in Section 8. 2.",
                "APOCRITA Apocrita is a distributed peer-to-peer file sharing system, and has been designed to make finding documents easier in an Intranet environment.",
                "Currently, it is possible for documents to be located on a users machine or on a remote machine.",
                "It is even possible that different revisions could reside on each node on the Intranet.",
                "This means there must be a manual process to maintain document versions.",
                "Apocrita solves this problem using two approaches.",
                "First, due to the inherent nature of Apocrita, the document will only reside on a single logical location.",
                "Second, Apocrita provides a method of reverting to previous document versions.",
                "Apocrita Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page.",
                "To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.",
                "ACMSE07, MARCH 23-24, 2007, WINSTON-SALEM, NC, USA.",
                "COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 will also distribute documents across multiple machines to ensure high availability of important documents.",
                "For example, if a machine contains an important document and the machine is currently inaccessible, the system is capable of maintaining availability of the document through this distribution mechanism.",
                "It provides a simple interface for searching and accessing files that may exist either locally or remotely.",
                "The distributed nature of the documents is transparent to the user.",
                "Apocrita supports a decentralized network model where the peers use a discovery protocol to determine peers.",
                "Apocrita is intended for network users on an Intranet.",
                "The main focus is organizations that may not have a network large enough to require a file server and supporting infrastructure.",
                "It eliminates the need for documents to be manually shared between users while being edited and reduces the possibility of conflicting versions being distributed.",
                "The system also provides some redundancy and in the event of a single machine failure, no important documents will be lost.",
                "It is operating system independent, and easy to access through a web browser or through a standalone application.",
                "To decrease the time required for indexing a large number of documents, the indexing process is distributed across available idle nodes.",
                "Local and remote files should be easily accessible through a virtual mountable file system, providing transparency for users. 3.",
                "DISTRIBUTED INDEXING Apocrita uses a distributed index for all the documents that are available on the Intranet.",
                "Each node will contain part of the full index, and be aware of what part of the index each other node has.",
                "A node will be able to contact each node that contains a unique portion of the index.",
                "In addition, each node has a separate local index of its own documents.",
                "But as discussed later, in the current implementation, each node has a copy of the entire index.",
                "Indexing of the documents is distributed.",
                "Therefore, if a node is in the process of indexing many documents, it will break up the work over the nodes.",
                "Once a nodes local index is updated with the new documents, the distributed index will then be updated.",
                "The current distributed indexing system consists of three separate modules: NodeController, FileSender, and NodeIndexer.",
                "The responsibility of each module is discussed later in this section. 3.1 Indexing Protocol The protocol we have designed for the distributed indexing is depicted in Figure 1.",
                "Figure 1.",
                "Apocrita distributed indexing protocol.",
                "IDLE QUERY: The IDLE QUERY is sent out from the initiating node to determine which other nodes may be able to help with the overall indexing process.",
                "There are no parameters sent with the command.",
                "The receiving node will respond with either a BUSY or IDLE command.",
                "If the IDLE command is received, the initiating node will add the responding node to a list of available distributed indexing helpers.",
                "In the case of a BUSY command being received, the responding node is ignored.",
                "BUSY: Once a node received an IDL QUERY, it will determine whether it can be considered a candidate for distributed indexing.",
                "This determination is based on the overall CPU usage of the node.",
                "If the node is using most of its CPU for other processes, the node will respond to the IDLE QUERY with a BUSY command.",
                "IDLE: As with the case of the BUSY response, the node receiving the IDLE QUERY will determine its eligibility for distributed indexing.",
                "To be considered a candidate for distributed indexing, the overall CPU usage must be at a minimum to all for dedicated indexing of the distributed documents.",
                "If this is the case, the node will respond with an IDLE command.",
                "INCOMING FILE: Once the initiating node assembles a set of idle nodes to assist with the distributed indexing, it will divide the documents to be sent to the nodes.",
                "To do this, it sends an INCOMING FILE message, which contains the name of the file as well as the size in bytes.",
                "After the INCOMING FILE command has been sent, the initiating node will begin to stream the file to the other node.",
                "The initiating node will loop through the files that are to be sent to the other node; each file stream being preceded by the INCOMING FILE command with the appropriate parameters.",
                "INDEX FILE: Once the indexing node has completed the indexing process of the set of files, it must send the resultant index back to the initiating node.",
                "The index is comprised of multiple files, which exist on the file system of the indexing node.",
                "As with the INCOMING FILE command, the indexing node streams each index file after sending an INDEX FILE command.",
                "The INDEX FILE command has two parameters: the first being the name of the index, and the second is the size of the file in bytes.",
                "SEND COMPLETE: When sending the sets of files for both the index and the files to be indexed, the node must notify the corresponding node when the process is complete.",
                "Once the initiating node is finished sending the set of documents to be indexed, it will then send a SEND COMPLETE command indicating to the indexing node that there are no more files and the node can proceed with indexing the files.",
                "In the case of the initiating node sending the index files, the indexing node will complete the transfer with the SEND COMPLETE command indicating to the initiating node that there are no more index files to be sent and the initiating node can then assemble those index files into the main index.",
                "The NodeController is responsible for setting up connections with nodes in the idle state to distribute the indexing process.",
                "Using JXTA [5], the node controller will obtain a set of nodes.",
                "This set of nodes is iterated and each one is sent the IDLE QUERY command.",
                "The nodes that respond with idle are then collected.",
                "The set of idle nodes includes the node initiating the distributed indexing process, referred to as the local node.",
                "Once the collection of idle nodes is obtained, the node updates the set of controllers and evenly divides the set of documents that are to be indexed.",
                "For example, if there are 100 documents and 10 nodes (including the local node) then each node will have 10 documents to index.",
                "For each indexing node an instance of the FileSender object is created.",
                "The FileSender is aware of the set of documents that node is responsible for.",
                "Once a FileSender object has been created for each node, the NodeController waits for each FileSender to complete.",
                "When the FileSender objects have completed the NodeController will take the resultant indexes from 175 each node and pass them to an instance of the IndexCompiler, which maintains the index and the list of FileSenders.",
                "Once the IndexCompiler has completed it will return to the idle state and activate the directory scanner to monitor the locally owned set of documents for changes that may require reindexing.",
                "The NodeIndexer is responsible for receiving documents sent to it by the initiating node and then indexing them using the Lucene engine [7].",
                "Once the indexing is complete the resulting index is streamed back to the initiating node as well as compiled in the indexer nodes own local index.",
                "Before initiating the indexing process it must be sent an IDLE QUERY message.",
                "This is the first command that sets off the indexing process.",
                "The indexer node will determine whether it is considered idle based on the current CPU usage.",
                "As outlined in the protocol section if the node is not being used and has a low overall CPU usage percentage it will return IDLE to the IDLE QUERY command.",
                "If the indexer nodes CPU usage is above 50% for a specified amount of time it is then considered to be busy and will respond to the IDLE QUERY command with BUSY.",
                "If a node is determined busy it returns to its listening state waiting for another IDLE QUERY from another initiating node.",
                "If the node is determined to be idle it will enter the state where it will receive files from the initiating node that it is responsible for indexing.",
                "Once all of the files are received by the initiating node, indicated by a SEND COMPLETE message, it starts an instance of the Lucene indexing engine.",
                "The files are stored in a temporary directory separate from the nodes local documents that it is responsible for maintaining an index of.",
                "The Lucene index writer then indexes all of the transferred files.",
                "The index is stored on the drive within a temporary directory separate from the current index.",
                "After the indexing of the files completes the indexer node enters the state where the index files are sent back to the initiating node.",
                "The indexer node loops through all of the files created by Lucenes IndexWriter and streams them to the initiating node.",
                "Once these files are sent back that index is then merged into the indexer nodes own full index of the existing files.",
                "It then enters the idle state where it will then listen for any other nodes that required distributing the indexing process.",
                "The FileSender object is the initiating node equivalent of the indexer node.",
                "It initiates the communication between the initiating node and the node that will assist in the distributed indexing.",
                "The initiating node runs many instances of the FileSender node one for each other node it has determined to be idle.",
                "Upon instantiation of the FileSender it is passed the node that it is responsible for contacting and the set of files that must be sent.",
                "The FileSenders first job is to send the files that are to be indexed by the other idle node.",
                "The files are streamed one at a time to the other node.",
                "It sends each file using the INCOMING FILE command.",
                "With that command it sends the name of the file being sent and the size in bytes.",
                "Once all files have been sent the FileSender sends the SEND COMPLETE command.",
                "The FileSender creates an instance of Lucenes IndexWriter and prepares to create the index in a temporary directory on the file system.",
                "The FileSender will begin to receive the files that are to be saved within the index.",
                "It receives an INDEX FILE command with the name of the files and the size in bytes.",
                "This file is then streamed into the temporary index directory on the FileSender node.",
                "After the transfer of the index files has been completed the FileSender notifies the instance of the index compiler that it is ready to combine the index.",
                "Each instance of the FileSender has its own unique section of temporary space to store the index that has been transferred back from the indexing node.",
                "When notifying the IndexCompiler it will also pass the location of the particular FileSenders directory location of that index. 4.",
                "PEER-TO-PEER DISTRIBUTION Apocrita uses a <br>peer-to-peer distribution model</br> in order to distribute files.",
                "Files are distributed solely from a serving node to a client node without regard for the availability of file pieces from other clients in the network.",
                "This means that the file transfers will be fast and efficient and should not severely affect the usability of serving nodes from the point of view of a local user.",
                "The JXTA framework [5] is used in order to implement peer-to-peer functionality.",
                "This has been decided due to the extremely shorttimeline of the project which allows us to take advantage of over five years of testing and development and support from many large organizations employing JXTA in their own products.",
                "We are not concerned with any potential quality problems because JXTA is considered to be the most mature and stable peer-to-peer framework available.",
                "Using JXTA terminology, there are three types of peers used in node classification.",
                "Edge peers are typically low-bandwidth, non-dedicated nodes.",
                "Due to these characteristics, edge peers are not used with Apocrita.",
                "Relay peers are typically higher-bandwidth, dedicated nodes.",
                "This is the classification of all nodes in the Apocrita network, and, as such, are the default classification used.",
                "Rendezvous peers are used to coordinate message passing between nodes in the Apocrita network.",
                "This means that a minimum of one rendezvous peer per subnet is required. 4.1 Peer Discovery The Apocrita server subsystem uses the JXTA Peer Discovery Protocol (PDP) in order to find participating peers within the network as shown in Figure 2.",
                "Figure 2.",
                "Apocrita peer discovery process. 176 The PDP listens for peer advertisements from other nodes in the Apocrita swarm.",
                "If a peer advertisement is detected, the server will attempt to join the peer group and start actively contributing to the network.",
                "If no peers are found by the discovery service, the server will create a new peer group and start advertising this peer group.",
                "This new peer group will be periodically advertised on the network; any new peers joining the network will attach to this peer group.",
                "A distinct advantage of using the JXTA PDP is that Apocrita does not have to be sensitive to particular networking nuances such as Maximum Transmission Unit (MTU).",
                "In addition, Apocrita does not have to support one-to-many packet delivery methods such as multicast and instead can rely on JXTA for this support. 4.2 Index Query Operation All nodes in the Apocrita swarm have a complete and up-to-date copy of the network index stored locally.",
                "This makes querying the index for search results trivial.",
                "Unlike the Gnutella protocol, a query does not have to propagate throughout the network.",
                "This also means that the time to return query results is very fast - much faster than protocols that rely on nodes in the network to pass the query throughout the network and then wait for results.",
                "This is demonstrated in Figure 3.",
                "Figure 3.",
                "Apocrita query operation.",
                "Each document in the swarm has a unique document identification number (ID).",
                "A node will query the index and a result will be returned with both the document ID number as well as a list of peers with a copy of the matched document ID.",
                "It is then the responsibility of the searching peer to contact the peers in the list to negotiate file transfer between the client and server. 5.",
                "PROTOTYPE IMPLEMENTATION Apocrita uses the Lucene framework [7], which is a project under development by the Apache Software Foundation.",
                "Apache Lucene is a high-performance, full-featured text search engine library written entirely in Java.",
                "In the current implementation, Apocrita is only capable of indexing plain text documents.",
                "Apocrita uses the JXTA framework [5] as a peer-to-peer transport library between nodes.",
                "JXTA is used to pass both messages and files between nodes in the search network.",
                "By using JXTA, Apocrita takes advantage of a reliable, and proven peer-to-peer transport mechanism.",
                "It uses the pipe facility in order to pass messages and files between nodes.",
                "The pipe facility provides many different types of pipe advertisements.",
                "This includes an unsecured unicast pipe, a secured unicast pipe, and a propagated unsecured pipe.",
                "Message passing is used to pass status messages between nodes in order to aid in indexing, searching, and retrieval.",
                "For example, a node attempting to find an idle node to participate in indexing will query nodes via the message facility.",
                "Idle nodes will reply with a status message to indicate they are available to start indexing.",
                "File passing is used within Apocrita for file transfer.",
                "After a file has been searched for and located within the peer group, a JXTA socket will be opened and file transfer will take place.",
                "A JXTA socket is similar to a standard Java socket, however a JXTA socket uses JXTA pipes in underlying network transport.",
                "File passing uses an unsecured unicast pipe in order to transfer data.",
                "File passing is also used within Apocrita for index transfer.",
                "Index transfer works exactly like a file transfer.",
                "In fact, the index transfer actually passes the index as a file.",
                "However, there is one key difference between file transfer and index transfer.",
                "In the case of file transfer, a socket is created between only two nodes.",
                "In the case of index transfer, a socket must be created between all nodes in the network in order to pass the index, which allows for all nodes to have a full and complete index of the entire network.",
                "In order to facilitate this transfer efficiently, index transfer will use an unsecured propagated pipe to communicate with all nodes in the Apocrita network. 6.",
                "PERFORMANCE EVALUATION It is difficult to objectively benchmark the results obtained through Apocrita because there is no other system currently available with the same goals as Apocrita.",
                "We have, however, evaluated the performance of the critical sections of the system.",
                "The critical sections were determined to be the processes that are the most time intensive.",
                "The evaluation was completed on standard lab computers on a 100Mb/s Ethernet LAN; the machines run Windows XP with a Pentium 4 CPU running at 2.4GHz with 512 MB of RAM.",
                "The indexing time has been run against both: the Time Magazine collection [8], which contains 432 documents and 83 queries and their most relevant results, and the NPL collection [8] that has a total of 11,429 documents and 93 queries with expected results.",
                "Each document ranges in size between 4KB and 8KB.",
                "As Figure 4 demonstrates, the number of nodes involved in the indexing process affects the time taken to complete the indexing processsometimes even drastically.",
                "Figure 4.",
                "Node vs. index time.",
                "The difference in going from one indexing node to two indexing nodes is the most drastic and equates to an indexing time 37% faster than a single indexing node.",
                "The different between two 177 indexing nodes and three indexing nodes is still significant and represents a 16% faster time than two indexing nodes.",
                "As the number of indexing nodes increases the results are less dramatic.",
                "This can be attributed to the time overhead associated with having many nodes perform indexing.",
                "The time needed to communicate with a node is constant, so as the number of nodes increases, this constant becomes more prevalent.",
                "Also, the complexity of joining the indexing results is a complex operation and is complicated further as the number of indexing nodes increases.",
                "Socket performance is also a very important part of Apocrita.",
                "Benchmarks were performed using a 65MB file on a system with both the client and server running locally.",
                "This was done to isolate possible network issues.",
                "Although less drastic, similar results were shown when the client and server run on independent hardware.",
                "In order to mitigate possible unexpected errors, each test was run 10 times.",
                "Figure 5.",
                "Java sockets vs. JXTA sockets.",
                "As Figure 5 demonstrates, the performance of JXTA sockets is abysmal as compared to the performance of standard Java sockets.",
                "The minimum transfer rate obtained using Java sockets is 81,945KB/s while the minimum transfer rater obtained using JXTA sockets is much lower at 3, 805KB/s.",
                "The maximum transfer rater obtain using Java sockets is 97,412KB/s while the maximum transfer rate obtained using JXTA sockets is 5,530KB/s.",
                "Finally, the average transfer rate using Java sockets is 87,540KB/s while the average transfer rate using JXTA sockets is 4,293KB/s.",
                "The major problem found in these benchmarks is that the underlying network transport mechanism does not perform as quickly or efficiently as expected.",
                "In order to garner a performance increase, the JXTA framework needs to be substituted with a more traditional approach.",
                "The indexing time is also a bottleneck and will need to be improved for the overall quality of Apocrita to be improved. 7.",
                "RELATED WORK Several decentralized P2P systems [1, 2, 3] exist today that Apocrita features some of their functionality.",
                "However, Apocrita also has unique novel searching and indexing features that make this system unique.",
                "For example, Majestic-12 [4] is a distributed search and indexing project designed for searching the Internet.",
                "Each user would install a client, which is responsible for indexing a portion of the web.",
                "A central area for querying the index is available on the Majestic-12 web page.",
                "The index itself is not distributed, only the act of indexing is distributed.",
                "The distributed indexing aspect of this project most closely relates Apocrita goals.",
                "YaCy [6] is a peer-to-peer web search application.",
                "YaCy consists of a web crawler, an indexer, a built-in database engine, and a p2p index exchange protocol.",
                "YaCy is designed to maintain a distributed index of the Internet.",
                "It used a distributed hash table (DHT) to maintain the index.",
                "The local node is used to query but all results that are returned are accessible on the Internet.",
                "YaCy used many peers and DHT to maintain a distributed index.",
                "Apocrita will also use a distributed index in future implementations and may benefit from using an implementation of a DHT.",
                "YaCy however, is designed as a web search engine and, as such solves a much different problem than Apocrita. 8.",
                "CONCLUSIONS AND FUTURE WORK We presented Apocrita, a distributed P2P searching and indexing system intended for network users on an Intranet.",
                "It can help organizations with no network file server or necessary network infrastructure to share documents.",
                "It eliminates the need for documents to be manually shared among users while being edited and reduce the possibility of conflicting versions being distributed.",
                "A proof of concept prototype has been constructed, but the results from measuring the network transport mechanism and the indexing time were not as impressive as initially envisioned.",
                "Despite these shortcomings, the experience gained from the design and implementation of Apocrita has given us more insight into building challenging distributed systems.",
                "For future work, Apocrita will have a smart content distribution model in which a single instance of a file can intelligently and transparently replicate throughout the network to ensure a copy of every important file will always be available regardless of the availability of specific nodes in the network.",
                "In addition, we plan to integrate a revision control system into the content distribution portion of Apocrita so that users could have the ability to update an existing file that they found and have the old revision maintained and the new revision propagated.",
                "Finally, the current implementation has some overhead and redundancy due to the fact that the entire index is maintained on each individual node, we plan to design a distributed index. 9.",
                "REFERENCES [1] Rodrigues, R., Liskov, B., Shrira, L.: The Design of a Robust Peer-to-Peer System.",
                "Available online: http://www.pmg.lcs.mit.edu/~rodrigo/ew02-robust.pdf. [2] Chawathe, Y., Ratnasamy, S., Breslau, L., Lanham, N., and Chenker, S.: Making Gnutella-like P2P Systems Scalable.",
                "In Proceedings of SIGCOMM03, Karlsruhe, Germany. [3] Harvest: A Distributed Search System: http://harvest.sourceforge.net. [4] Majestic-12: Distributed Search Engine: http://www.majestic12.co.uk. [5] JXTA: http://www.jxta.org. [6] YaCy: Distributed P2P-based Web Indexing: http://www.yacy.net/yacy. [7] Lucene Search Engine Library: http://lucene.apache.org. [8] Test Collections (Time Magazine and NPL): www.dcs.gla.ac.uk/idom/ir_resources/test_collections. 178"
            ],
            "original_annotated_samples": [
                "PEER-TO-PEER DISTRIBUTION Apocrita uses a <br>peer-to-peer distribution model</br> in order to distribute files."
            ],
            "translated_annotated_samples": [
                "Apocrita utiliza un <br>modelo de distribución peer-to-peer</br> para distribuir archivos."
            ],
            "translated_text": "Apocrita: Un sistema de intercambio de archivos distribuido de igual a igual para intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Computación Distribuida y Tecnología Inalámbrica y de Telecomunicaciones Universidad de Guelph-Humber Toronto, ON, M9W 5L7 Canadá {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca RESUMEN Muchas organizaciones necesitan redactar documentos para diversos fines, y es posible que estos documentos deban ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un documento. En algunos casos, estos documentos son compartidos entre autores, a través de correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento. Incluso puede haber varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario. Otro problema surge cuando un documento está disponible en la máquina de un usuario y ese usuario está desconectado, en cuyo caso el documento ya no es accesible. En este artículo presentamos Apocrita, un revolucionario sistema distribuido de intercambio de archivos P2P para intranets. Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos - Aplicaciones Distribuidas. Términos generales Diseño, Experimentación, Rendimiento. 1. INTRODUCCIÓN El paradigma de computación Peer-to-Peer (P2P) se está convirtiendo en una forma completamente nueva de compartir recursos mutuos a través de Internet. Con el acceso cada vez más común a Internet de banda ancha, la tecnología P2P finalmente se ha convertido en una forma viable de compartir documentos y archivos multimedia. Ya existen programas en el mercado que permiten compartir archivos P2P. Estos programas permiten a millones de usuarios compartir archivos entre ellos. Si bien la utilización de clientes P2P ya es un gran avance en comparación con descargar archivos de sitios web, el uso de dichos programas no está exento de problemas. Los archivos descargados todavía requieren mucho manejo manual por parte del usuario. El usuario todavía necesita colocar los archivos en el directorio adecuado, gestionar archivos con múltiples versiones, eliminar los archivos cuando ya no se deseen. Nos esforzamos por hacer que el proceso de compartir documentos dentro de una Intranet sea más fácil. Muchas organizaciones están obligadas a redactar documentos para diversos fines, y dichos documentos pueden necesitar ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un documento. En algunos casos, estos documentos son enviados entre autores, por correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o que se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento. Puede haber incluso varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario. Además, algunas organizaciones no cuentan con un servidor de intercambio de archivos o la infraestructura de red necesaria para habilitar uno. En este artículo presentamos Apocrita, que es un sistema de intercambio de archivos P2P distribuido y rentable para dichas organizaciones. El resto de este documento está organizado de la siguiente manera. En la sección 2, presentamos Apocrita. El mecanismo de indexación distribuida y el protocolo se presentan en la Sección 3. La sección 4 presenta el modelo de distribución peer-to-peer. Se presenta un prototipo de prueba de concepto en la Sección 5, y las evaluaciones de rendimiento se discuten en la Sección 6. El trabajo relacionado se presenta en la Sección 7, y finalmente las conclusiones y el trabajo futuro se discuten en la Sección 8. Apocrita es un sistema de intercambio de archivos entre pares distribuido, y ha sido diseñado para facilitar la búsqueda de documentos en un entorno de Intranet. Actualmente, es posible que los documentos se encuentren en la máquina de un usuario o en una máquina remota. Es incluso posible que diferentes revisiones puedan residir en cada nodo de la Intranet. Esto significa que debe haber un proceso manual para mantener las versiones de los documentos. Apocrita resuelve este problema utilizando dos enfoques. Primero, debido a la naturaleza inherente de Apocrita, el documento solo residirá en una ubicación lógica única. En segundo lugar, Apocrita proporciona un método para revertir a versiones anteriores de documentos. Se concede el permiso de hacer copias digitales o impresas de todo o parte de este trabajo para uso personal o en el aula sin cargo alguno, siempre y cuando las copias no se realicen ni distribuyan con fines de lucro o ventaja comercial, y que las copias lleven este aviso y la cita completa en la primera página. Para copiar de otra manera, o republicar, publicar en servidores o redistribuir en listas, se requiere permiso específico previo y/o un pago. ACMSE07, 23-24 DE MARZO DE 2007, WINSTON-SALEM, NC, EE. UU. COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 también distribuirá documentos en múltiples máquinas para garantizar la alta disponibilidad de documentos importantes. Por ejemplo, si una máquina contiene un documento importante y actualmente no es accesible, el sistema es capaz de mantener la disponibilidad del documento a través de este mecanismo de distribución. Proporciona una interfaz sencilla para buscar y acceder a archivos que pueden existir tanto local como remotamente. La naturaleza distribuida de los documentos es transparente para el usuario. Apocrita apoya un modelo de red descentralizada en el que los pares utilizan un protocolo de descubrimiento para determinar los pares. Apocrita está destinado para usuarios de red en una Intranet. El enfoque principal son las organizaciones que pueden no tener una red lo suficientemente grande como para necesitar un servidor de archivos y la infraestructura de soporte. Elimina la necesidad de que los documentos sean compartidos manualmente entre usuarios mientras se editan y reduce la posibilidad de que se distribuyan versiones conflictivas. El sistema también proporciona cierta redundancia y en caso de fallo de una máquina, no se perderán documentos importantes. Es independiente del sistema operativo y fácil de acceder a través de un navegador web o mediante una aplicación independiente. Para disminuir el tiempo requerido para indexar una gran cantidad de documentos, el proceso de indexación se distribuye entre los nodos inactivos disponibles. Los archivos locales y remotos deben ser fácilmente accesibles a través de un sistema de archivos virtual montable, proporcionando transparencia para los usuarios. Apocrita utiliza un índice distribuido para todos los documentos disponibles en la intranet. Cada nodo contendrá una parte del índice completo y estará al tanto de qué parte del índice tiene cada otro nodo. Un nodo podrá contactar a cada nodo que contenga una porción única del índice. Además, cada nodo tiene un índice local separado de sus propios documentos. Pero como se discutió más tarde, en la implementación actual, cada nodo tiene una copia de todo el índice. La indexación de los documentos está distribuida. Por lo tanto, si un nodo está en proceso de indexar muchos documentos, distribuirá el trabajo entre los nodos. Una vez que el índice local de un nodo se actualiza con los nuevos documentos, entonces se actualizará el índice distribuido. El sistema de indexación distribuida actual consta de tres módulos separados: NodeController, FileSender y NodeIndexer. La responsabilidad de cada módulo se discute más adelante en esta sección. 3.1 Protocolo de indexación El protocolo que hemos diseñado para la indexación distribuida se muestra en la Figura 1. Figura 1. Protocolo de indexación distribuida Apocrita. La CONSULTA INACTIVA se envía desde el nodo iniciador para determinar qué otros nodos pueden ayudar con el proceso de indexación en general. No se enviaron parámetros con el comando. El nodo receptor responderá con un comando BUSY o IDLE. Si se recibe el comando IDLE, el nodo iniciador agregará el nodo que responde a una lista de ayudantes de indexación distribuida disponibles. En caso de recibir un comando OCUPADO, el nodo que responde es ignorado. OCUPADO: Una vez que un nodo recibe una CONSULTA IDL, determinará si puede considerarse un candidato para la indexación distribuida. Esta determinación se basa en el uso general de la CPU del nodo. Si el nodo está utilizando la mayor parte de su CPU para otros procesos, el nodo responderá a la CONSULTA DE INACTIVIDAD con un comando OCUPADO. Como en el caso de la respuesta BUSY, el nodo que recibe la CONSULTA DE INACTIVIDAD determinará su elegibilidad para la indexación distribuida. Para ser considerado un candidato para la indexación distribuida, el uso total de la CPU debe ser mínimo para permitir la indexación dedicada de los documentos distribuidos. Si este es el caso, el nodo responderá con un comando IDLE. ARCHIVO ENTRANTE: Una vez que el nodo iniciador reúne un conjunto de nodos inactivos para ayudar con la indexación distribuida, dividirá los documentos que se enviarán a los nodos. Para hacer esto, envía un mensaje de ARCHIVO ENTRANTE, que contiene el nombre del archivo y su tamaño en bytes. Después de que se haya enviado el comando ARCHIVO ENTRANTE, el nodo iniciador comenzará a transmitir el archivo al otro nodo. El nodo iniciador recorrerá los archivos que se enviarán al otro nodo; cada flujo de archivo estará precedido por el comando ARCHIVO ENTRANTE con los parámetros apropiados. ARCHIVO DE ÍNDICE: Una vez que el nodo de indexación haya completado el proceso de indexación del conjunto de archivos, debe enviar el índice resultante de vuelta al nodo iniciador. El índice está compuesto por varios archivos, que existen en el sistema de archivos del nodo de indexación. Al igual que con el comando INCOMING FILE, el nodo de indexación transmite cada archivo de índice después de enviar un comando INDEX FILE. El comando INDEX FILE tiene dos parámetros: el primero es el nombre del índice y el segundo es el tamaño del archivo en bytes. Al enviar los conjuntos de archivos tanto para el índice como para los archivos a ser indexados, el nodo debe notificar al nodo correspondiente cuando el proceso esté completo. Una vez que el nodo iniciador haya terminado de enviar el conjunto de documentos a ser indexados, enviará entonces un comando de ENVÍO COMPLETO indicando al nodo de indexación que no hay más archivos y que el nodo puede proceder con la indexación de los archivos. En el caso de que el nodo iniciador envíe los archivos de índice, el nodo de indexación completará la transferencia con el comando ENVIAR COMPLETO indicando al nodo iniciador que no hay más archivos de índice por enviar y que el nodo iniciador puede entonces ensamblar esos archivos de índice en el índice principal. El NodeController es responsable de establecer conexiones con nodos en estado de reposo para distribuir el proceso de indexación. Usando JXTA [5], el controlador de nodos obtendrá un conjunto de nodos. Este conjunto de nodos se itera y a cada uno se le envía el comando IDLE QUERY. Los nodos que responden con inactividad son luego recopilados. El conjunto de nodos inactivos incluye al nodo que inicia el proceso de indexación distribuida, conocido como nodo local. Una vez que se obtiene la colección de nodos inactivos, el nodo actualiza el conjunto de controladores y divide equitativamente el conjunto de documentos que se van a indexar. Por ejemplo, si hay 100 documentos y 10 nodos (incluyendo el nodo local) entonces cada nodo tendrá 10 documentos para indexar. Para cada nodo de indexación se crea una instancia del objeto FileSender. El FileSender es consciente del conjunto de documentos de los que el nodo es responsable. Una vez que se ha creado un objeto FileSender para cada nodo, el NodeController espera a que cada FileSender termine. Cuando los objetos FileSender hayan completado, el NodeController tomará los índices resultantes de 175 nodos y los pasará a una instancia del IndexCompiler, que mantiene el índice y la lista de FileSenders. Una vez que el IndexCompiler haya completado, volverá al estado inactivo y activará el escáner de directorios para monitorear el conjunto de documentos de propiedad local en busca de cambios que puedan requerir reindexación. El NodeIndexer es responsable de recibir los documentos enviados por el nodo iniciador y luego indexarlos utilizando el motor Lucene [7]. Una vez que se completa el indexado, el índice resultante se transmite de vuelta al nodo iniciador y se compila en el índice local del propio nodo indexador. Antes de iniciar el proceso de indexación, se debe enviar un mensaje de CONSULTA INACTIVA. Esta es la primera orden que inicia el proceso de indexación. El nodo indexador determinará si se considera inactivo en función del uso actual de la CPU. Como se describe en la sección del protocolo, si el nodo no se está utilizando y tiene un bajo porcentaje de uso de CPU en general, devolverá IDLE al comando de CONSULTA DE INACTIVIDAD. Si el uso de la CPU de los nodos del indexador está por encima del 50% durante un período de tiempo especificado, se considerará ocupado y responderá al comando IDLE QUERY con BUSY. Si un nodo se determina ocupado, vuelve a su estado de escucha esperando otra CONSULTA INACTIVA de otro nodo iniciador. Si se determina que el nodo está inactivo, entrará en el estado en el que recibirá archivos del nodo iniciador de los que es responsable de indexar. Una vez que todos los archivos son recibidos por el nodo iniciador, indicado por un mensaje de ENVÍO COMPLETO, se inicia una instancia del motor de indexación de Lucene. Los archivos se almacenan en un directorio temporal separado de los documentos locales de los nodos que son responsables de mantener un índice de los mismos. El escritor de índices de Lucene indexa luego todos los archivos transferidos. El índice se almacena en la unidad dentro de un directorio temporal separado del índice actual. Después de que se completa la indexación de los archivos, el nodo indexador entra en el estado en el que los archivos de índice son enviados de vuelta al nodo iniciador. El nodo indexador recorre todos los archivos creados por Lucene's IndexWriter y los transmite al nodo iniciador. Una vez que estos archivos son devueltos, ese índice se fusiona en el índice completo de los nodos indexadores de los archivos existentes. Luego entra en el estado de espera, donde escuchará a otros nodos que requieran distribuir el proceso de indexación. El objeto FileSender es el nodo iniciador equivalente al nodo indexador. Inicia la comunicación entre el nodo iniciador y el nodo que ayudará en la indexación distribuida. El nodo iniciador ejecuta muchas instancias del nodo FileSender, una para cada otro nodo que haya determinado que está inactivo. Al instanciar el FileSender se le pasa el nodo al que es responsable de contactar y el conjunto de archivos que deben ser enviados. El primer trabajo de FileSenders es enviar los archivos que deben ser indexados por el otro nodo inactivo. Los archivos se transmiten uno a la vez al otro nodo. Envía cada archivo utilizando el comando ARCHIVO ENTRANTE. Con ese comando se envía el nombre del archivo que se está enviando y el tamaño en bytes. Una vez que todos los archivos hayan sido enviados, el FileSender envía el comando de ENVÍO COMPLETADO. El FileSender crea una instancia de Lucene's IndexWriter y se prepara para crear el índice en un directorio temporal en el sistema de archivos. El FileSender comenzará a recibir los archivos que se guardarán dentro del índice. Recibe un comando de ARCHIVO DE ÍNDICE con el nombre de los archivos y el tamaño en bytes. Este archivo se transmite luego al directorio de índice temporal en el nodo de FileSender. Después de que se haya completado la transferencia de los archivos de índice, el FileSender notifica a la instancia del compilador de índices que está lista para combinar el índice. Cada instancia del FileSender tiene su propia sección única de espacio temporal para almacenar el índice que ha sido transferido desde el nodo de indexación. Al notificar al IndexCompiler, también pasará la ubicación del directorio particular de FileSenders de ese índice. 4. Apocrita utiliza un <br>modelo de distribución peer-to-peer</br> para distribuir archivos. Los archivos se distribuyen únicamente desde un nodo servidor a un nodo cliente sin tener en cuenta la disponibilidad de las partes de archivo de otros clientes en la red. Esto significa que las transferencias de archivos serán rápidas y eficientes y no deberían afectar severamente la usabilidad de los nodos de servicio desde el punto de vista de un usuario local. El marco de trabajo JXTA se utiliza para implementar funcionalidades peer-to-peer. Esto se ha decidido debido al plazo extremadamente corto del proyecto, lo que nos permite aprovechar más de cinco años de pruebas y desarrollo, así como el apoyo de muchas organizaciones grandes que emplean JXTA en sus propios productos. No estamos preocupados por posibles problemas de calidad porque JXTA se considera el marco de pares a pares más maduro y estable disponible. Usando la terminología de JXTA, hay tres tipos de pares utilizados en la clasificación de nodos. Los pares de borde suelen ser nodos de baja capacidad de ancho de banda y no dedicados. Debido a estas características, los pares de borde no se utilizan con Apocrita. Los nodos de retransmisión suelen ser nodos dedicados de mayor ancho de banda. Esta es la clasificación de todos los nodos en la red de Apocrita, y, como tal, es la clasificación predeterminada utilizada. Los pares de encuentro se utilizan para coordinar el intercambio de mensajes entre nodos en la red de Apocrita. Esto significa que se requiere un mínimo de un par de encuentro por subred. 4.1 Descubrimiento de pares El subsistema del servidor Apocrita utiliza el Protocolo de Descubrimiento de Pares (PDP) de JXTA para encontrar pares participantes dentro de la red, como se muestra en la Figura 2. Figura 2. El proceso de descubrimiento de pares de Apocrita. 176 El PDP escucha los anuncios de pares de otros nodos en el enjambre de Apocrita. Si se detecta un anuncio de pares, el servidor intentará unirse al grupo de pares y comenzar a contribuir activamente a la red. Si el servicio de descubrimiento no encuentra pares, el servidor creará un nuevo grupo de pares y comenzará a anunciar este grupo de pares. Este nuevo grupo de pares se anunciará periódicamente en la red; cualquier nuevo par que se una a la red se conectará a este grupo de pares. Una ventaja distintiva de usar el PDP de JXTA es que Apocrita no tiene que ser sensible a matices de redes particulares como la Unidad de Transmisión Máxima (MTU). Además, Apocrita no tiene que admitir métodos de entrega de paquetes uno a muchos, como la multidifusión, y en su lugar puede depender de JXTA para este soporte. Operación de consulta de índice 4.2 Todos los nodos en el enjambre de Apocrita tienen una copia completa y actualizada del índice de red almacenado localmente. Esto hace que la consulta del índice para obtener resultados de búsqueda sea trivial. A diferencia del protocolo Gnutella, una consulta no tiene que propagarse por toda la red. Esto también significa que el tiempo para devolver los resultados de la consulta es muy rápido, mucho más rápido que los protocolos que dependen de los nodos en la red para pasar la consulta a lo largo de la red y luego esperar los resultados. Esto se demuestra en la Figura 3. Figura 3. Operación de consulta de Apocrita. Cada documento en el enjambre tiene un número de identificación único (ID) para el documento. Un nodo consultará el índice y se devolverá un resultado con el número de identificación del documento, así como una lista de pares con una copia del documento coincidente. Es entonces responsabilidad del par que busca contactar a los pares de la lista para negociar la transferencia de archivos entre el cliente y el servidor. IMPLEMENTACIÓN DEL PROTOTIPO Apocrita utiliza el marco de trabajo Lucene [7], el cual es un proyecto en desarrollo por la Fundación de Software Apache. Apache Lucene es una biblioteca de motor de búsqueda de texto de alto rendimiento y con todas las funciones, escrita completamente en Java. En la implementación actual, Apocrita solo es capaz de indexar documentos de texto plano. Apocrita utiliza el marco de trabajo JXTA [5] como una biblioteca de transporte peer-to-peer entre nodos. JXTA se utiliza para pasar tanto mensajes como archivos entre nodos en la red de búsqueda. Al utilizar JXTA, Apocrita aprovecha un mecanismo de transporte peer-to-peer confiable y probado. Utiliza la facilidad de tuberías para pasar mensajes y archivos entre nodos. La instalación de tuberías ofrece muchos tipos diferentes de anuncios de tuberías. Esto incluye un conducto unicast no seguro, un conducto unicast seguro y un conducto no seguro propagado. El paso de mensajes se utiliza para enviar mensajes de estado entre nodos con el fin de ayudar en la indexación, búsqueda y recuperación. Por ejemplo, un nodo que intenta encontrar un nodo inactivo para participar en la indexación consultará a otros nodos a través de la facilidad de mensajes. Los nodos inactivos responderán con un mensaje de estado para indicar que están disponibles para comenzar a indexar. La transferencia de archivos se utiliza dentro de Apocrita para la transferencia de archivos. Después de que un archivo haya sido buscado y localizado dentro del grupo de pares, se abrirá un socket JXTA y se llevará a cabo la transferencia de archivos. Un socket JXTA es similar a un socket Java estándar, sin embargo un socket JXTA utiliza tuberías JXTA en el transporte de red subyacente. El paso de archivos utiliza un conducto unicast no seguro para transferir datos. La transferencia de archivos también se utiliza dentro de Apocrita para la transferencia de índices. La transferencia de índice funciona exactamente igual que la transferencia de archivos. De hecho, la transferencia de índice realmente pasa el índice como un archivo. Sin embargo, hay una diferencia clave entre la transferencia de archivos y la transferencia de índices. En el caso de la transferencia de archivos, se crea un socket entre solo dos nodos. En el caso de la transferencia de índices, se debe crear un socket entre todos los nodos de la red para pasar el índice, lo que permite que todos los nodos tengan un índice completo y total de toda la red. Para facilitar esta transferencia de manera eficiente, la transferencia de índices utilizará un tubo propagado no seguro para comunicarse con todos los nodos en la red de Apocrita. 6. EVALUACIÓN DEL RENDIMIENTO Es difícil comparar objetivamente los resultados obtenidos a través de Apocrita porque no hay otro sistema disponible actualmente con los mismos objetivos que Apocrita. Sin embargo, hemos evaluado el rendimiento de las secciones críticas del sistema. Las secciones críticas fueron determinadas como los procesos que requieren más tiempo. La evaluación se completó en computadoras de laboratorio estándar en una LAN Ethernet de 100Mb/s; las máquinas ejecutan Windows XP con un CPU Pentium 4 funcionando a 2.4GHz con 512 MB de RAM. El tiempo de indexación se ha ejecutado tanto en la colección de la revista Time [8], que contiene 432 documentos y 83 consultas con sus resultados más relevantes, como en la colección NPL [8], que tiene un total de 11,429 documentos y 93 consultas con resultados esperados. Cada documento tiene un tamaño que oscila entre 4KB y 8KB. Como muestra la Figura 4, el número de nodos involucrados en el proceso de indexación afecta el tiempo necesario para completar el proceso de indexación, a veces de manera drástica. Figura 4. Tiempo de nodo vs. tiempo de índice. La diferencia al pasar de un nodo de indexación a dos nodos de indexación es la más drástica y equivale a un tiempo de indexación un 37% más rápido que un solo nodo de indexación. La diferencia entre dos nodos de indexación y tres nodos de indexación sigue siendo significativa y representa un tiempo un 16% más rápido que dos nodos de indexación. A medida que aumenta el número de nodos de indexación, los resultados son menos dramáticos. Esto se puede atribuir al tiempo adicional asociado con tener muchos nodos realizando indexación. El tiempo necesario para comunicarse con un nodo es constante, por lo que a medida que aumenta el número de nodos, esta constante se vuelve más predominante. Además, la complejidad de unir los resultados de indexación es una operación compleja y se complica aún más a medida que aumenta el número de nodos de indexación. El rendimiento del socket también es una parte muy importante de Apocrita. Se realizaron pruebas de rendimiento utilizando un archivo de 65MB en un sistema con el cliente y el servidor ejecutándose localmente. Esto se hizo para aislar posibles problemas de red. Aunque menos drásticos, se mostraron resultados similares cuando el cliente y el servidor se ejecutan en hardware independiente. Para mitigar posibles errores inesperados, cada prueba se ejecutó 10 veces. Figura 5. Sockets de Java vs. sockets de JXTA. Como muestra la Figura 5, el rendimiento de los sockets JXTA es pésimo en comparación con el rendimiento de los sockets estándar de Java. La tasa de transferencia mínima obtenida utilizando sockets de Java es de 81,945KB/s, mientras que la tasa de transferencia mínima obtenida utilizando sockets de JXTA es mucho menor, de 3,805KB/s. La tasa de transferencia máxima obtenida usando sockets de Java es de 97,412KB/s, mientras que la tasa de transferencia máxima obtenida usando sockets de JXTA es de 5,530KB/s. Finalmente, la tasa de transferencia promedio utilizando sockets de Java es de 87,540KB/s, mientras que la tasa de transferencia promedio utilizando sockets de JXTA es de 4,293KB/s. El problema principal encontrado en estos benchmarks es que el mecanismo de transporte de red subyacente no funciona tan rápido o eficientemente como se esperaba. Para obtener un aumento en el rendimiento, el marco de trabajo JXTA necesita ser sustituido por un enfoque más tradicional. El tiempo de indexación también es un cuello de botella y deberá mejorarse para que la calidad general de Apocrita mejore. 7. TRABAJO RELACIONADO Existen hoy varios sistemas descentralizados P2P [1, 2, 3] que Apocrita incluye algunas de sus funcionalidades. Sin embargo, Apocrita también cuenta con características únicas de búsqueda e indexación novedosas que hacen que este sistema sea único. Por ejemplo, Majestic-12 [4] es un proyecto de búsqueda e indexación distribuida diseñado para buscar en Internet. Cada usuario instalaría un cliente, el cual es responsable de indexar una parte de la web. Una área central para consultar el índice está disponible en la página web de Majestic-12. El índice en sí no se distribuye, solo la acción de indexar se distribuye. El aspecto de indexación distribuida de este proyecto se relaciona más estrechamente con los objetivos de Apocrita. YaCy es una aplicación de búsqueda web peer-to-peer. YaCy consta de un rastreador web, un indexador, un motor de base de datos incorporado y un protocolo de intercambio de índices p2p. YaCy está diseñado para mantener un índice distribuido de Internet. Utilizaba una tabla hash distribuida (DHT) para mantener el índice. El nodo local se utiliza para hacer consultas, pero todos los resultados que se devuelven son accesibles en Internet. YaCy utilizó muchos pares y DHT para mantener un índice distribuido. Apocrita también utilizará un índice distribuido en futuras implementaciones y podría beneficiarse de utilizar una implementación de un DHT. Sin embargo, YaCy está diseñado como un motor de búsqueda web y, por lo tanto, resuelve un problema muy diferente al de Apocrita. 8. CONCLUSIONES Y TRABAJO FUTURO Presentamos Apocrita, un sistema distribuido de búsqueda e indexación P2P destinado a usuarios de redes en una intranet. Puede ayudar a las organizaciones que no cuentan con un servidor de archivos en red o con la infraestructura de red necesaria para compartir documentos. Elimina la necesidad de que los documentos sean compartidos manualmente entre usuarios mientras se editan y reduce la posibilidad de que se distribuyan versiones conflictivas. Se ha construido un prototipo de prueba de concepto, pero los resultados de medir el mecanismo de transporte de red y el tiempo de indexación no fueron tan impresionantes como se había imaginado inicialmente. A pesar de estas deficiencias, la experiencia adquirida en el diseño e implementación de Apocrita nos ha brindado una mayor comprensión sobre la construcción de sistemas distribuidos desafiantes. Para trabajos futuros, Apocrita contará con un modelo inteligente de distribución de contenido en el que una única instancia de un archivo puede replicarse de manera inteligente y transparente en toda la red para garantizar que una copia de cada archivo importante esté siempre disponible independientemente de la disponibilidad de nodos específicos en la red. Además, planeamos integrar un sistema de control de revisiones en la parte de distribución de contenido de Apocrita para que los usuarios puedan actualizar un archivo existente que encontraron y mantener la revisión antigua, propagando la nueva revisión. Finalmente, la implementación actual tiene cierto sobrecosto y redundancia debido a que se mantiene todo el índice en cada nodo individual, planeamos diseñar un índice distribuido. 9. REFERENCIAS [1] Rodrigues, R., Liskov, B., Shrira, L.: El diseño de un sistema peer-to-peer robusto. Disponible en línea: http://www.pmg.lcs.mit.edu/~rodrigo/ew02-robust.pdf. [2] Chawathe, Y., Ratnasamy, S., Breslau, L., Lanham, N., y Chenker, S.: Haciendo escalables los sistemas P2P similares a Gnutella. En Actas de SIGCOMM03, Karlsruhe, Alemania. [3] Harvest: Un Sistema de Búsqueda Distribuida: http://harvest.sourceforge.net. [4] Majestic-12: Motor de Búsqueda Distribuido: http://www.majestic12.co.uk. [5] JXTA: http://www.jxta.org. [6] YaCy: Indexación Web Distribuida basada en P2P: http://www.yacy.net/yacy. [7] Biblioteca del Motor de Búsqueda Lucene: http://lucene.apache.org. [8] Colecciones de Pruebas (Time Magazine y NPL): www.dcs.gla.ac.uk/idom/ir_resources/test_collections. 178 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "idle query": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Apocrita: A Distributed Peer-to-Peer File Sharing System for Intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Distributed Computing and Wireless & Telecommunications Technology University of Guelph-Humber Toronto, ON, M9W 5L7 Canada {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca ABSTRACT Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all member of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are shared between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Another problem arises when a document is made available on a users machine and that user is offline, in which case the document is no longer accessible.",
                "In this paper we present Apocrita, a revolutionary distributed P2P file sharing system for Intranets.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Distributed applications.",
                "General Terms Design, Experimentation, Performance. 1.",
                "INTRODUCTION The Peer-to-Peer (P2P) computing paradigm is becoming a completely new form of mutual resource sharing over the Internet.",
                "With the increasingly common place broadband Internet access, P2P technology has finally become a viable way to share documents and media files.",
                "There are already programs on the market that enable P2P file sharing.",
                "These programs enable millions of users to share files among themselves.",
                "While the utilization of P2P clients is already a gigantic step forward compared to downloading files off websites, using such programs are not without their problems.",
                "The downloaded files still require a lot of manual management by the user.",
                "The user still needs to put the files in the proper directory, manage files with multiple versions, delete the files when they are no longer wanted.",
                "We strive to make the process of sharing documents within an Intranet easier.",
                "Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all members of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are sent between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Furthermore, some organizations do not have a file sharing server or the necessary network infrastructure to enable one.",
                "In this paper we present Apocrita, which is a cost-effective distributed P2P file sharing system for such organizations.",
                "The rest of this paper is organized as follows.",
                "In section 2, we present Apocrita.",
                "The distributed indexing mechanism and protocol are presented in Section 3.",
                "Section 4 presents the peer-topeer distribution model.",
                "A proof of concept prototype is presented in Section 5, and performance evaluations are discussed in Section 6.",
                "Related work is presented is Section 7, and finally conclusions and future work are discussed in Section 8. 2.",
                "APOCRITA Apocrita is a distributed peer-to-peer file sharing system, and has been designed to make finding documents easier in an Intranet environment.",
                "Currently, it is possible for documents to be located on a users machine or on a remote machine.",
                "It is even possible that different revisions could reside on each node on the Intranet.",
                "This means there must be a manual process to maintain document versions.",
                "Apocrita solves this problem using two approaches.",
                "First, due to the inherent nature of Apocrita, the document will only reside on a single logical location.",
                "Second, Apocrita provides a method of reverting to previous document versions.",
                "Apocrita Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page.",
                "To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.",
                "ACMSE07, MARCH 23-24, 2007, WINSTON-SALEM, NC, USA.",
                "COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 will also distribute documents across multiple machines to ensure high availability of important documents.",
                "For example, if a machine contains an important document and the machine is currently inaccessible, the system is capable of maintaining availability of the document through this distribution mechanism.",
                "It provides a simple interface for searching and accessing files that may exist either locally or remotely.",
                "The distributed nature of the documents is transparent to the user.",
                "Apocrita supports a decentralized network model where the peers use a discovery protocol to determine peers.",
                "Apocrita is intended for network users on an Intranet.",
                "The main focus is organizations that may not have a network large enough to require a file server and supporting infrastructure.",
                "It eliminates the need for documents to be manually shared between users while being edited and reduces the possibility of conflicting versions being distributed.",
                "The system also provides some redundancy and in the event of a single machine failure, no important documents will be lost.",
                "It is operating system independent, and easy to access through a web browser or through a standalone application.",
                "To decrease the time required for indexing a large number of documents, the indexing process is distributed across available idle nodes.",
                "Local and remote files should be easily accessible through a virtual mountable file system, providing transparency for users. 3.",
                "DISTRIBUTED INDEXING Apocrita uses a distributed index for all the documents that are available on the Intranet.",
                "Each node will contain part of the full index, and be aware of what part of the index each other node has.",
                "A node will be able to contact each node that contains a unique portion of the index.",
                "In addition, each node has a separate local index of its own documents.",
                "But as discussed later, in the current implementation, each node has a copy of the entire index.",
                "Indexing of the documents is distributed.",
                "Therefore, if a node is in the process of indexing many documents, it will break up the work over the nodes.",
                "Once a nodes local index is updated with the new documents, the distributed index will then be updated.",
                "The current distributed indexing system consists of three separate modules: NodeController, FileSender, and NodeIndexer.",
                "The responsibility of each module is discussed later in this section. 3.1 Indexing Protocol The protocol we have designed for the distributed indexing is depicted in Figure 1.",
                "Figure 1.",
                "Apocrita distributed indexing protocol.",
                "<br>idle query</br>: The <br>idle query</br> is sent out from the initiating node to determine which other nodes may be able to help with the overall indexing process.",
                "There are no parameters sent with the command.",
                "The receiving node will respond with either a BUSY or IDLE command.",
                "If the IDLE command is received, the initiating node will add the responding node to a list of available distributed indexing helpers.",
                "In the case of a BUSY command being received, the responding node is ignored.",
                "BUSY: Once a node received an IDL QUERY, it will determine whether it can be considered a candidate for distributed indexing.",
                "This determination is based on the overall CPU usage of the node.",
                "If the node is using most of its CPU for other processes, the node will respond to the <br>idle query</br> with a BUSY command.",
                "IDLE: As with the case of the BUSY response, the node receiving the <br>idle query</br> will determine its eligibility for distributed indexing.",
                "To be considered a candidate for distributed indexing, the overall CPU usage must be at a minimum to all for dedicated indexing of the distributed documents.",
                "If this is the case, the node will respond with an IDLE command.",
                "INCOMING FILE: Once the initiating node assembles a set of idle nodes to assist with the distributed indexing, it will divide the documents to be sent to the nodes.",
                "To do this, it sends an INCOMING FILE message, which contains the name of the file as well as the size in bytes.",
                "After the INCOMING FILE command has been sent, the initiating node will begin to stream the file to the other node.",
                "The initiating node will loop through the files that are to be sent to the other node; each file stream being preceded by the INCOMING FILE command with the appropriate parameters.",
                "INDEX FILE: Once the indexing node has completed the indexing process of the set of files, it must send the resultant index back to the initiating node.",
                "The index is comprised of multiple files, which exist on the file system of the indexing node.",
                "As with the INCOMING FILE command, the indexing node streams each index file after sending an INDEX FILE command.",
                "The INDEX FILE command has two parameters: the first being the name of the index, and the second is the size of the file in bytes.",
                "SEND COMPLETE: When sending the sets of files for both the index and the files to be indexed, the node must notify the corresponding node when the process is complete.",
                "Once the initiating node is finished sending the set of documents to be indexed, it will then send a SEND COMPLETE command indicating to the indexing node that there are no more files and the node can proceed with indexing the files.",
                "In the case of the initiating node sending the index files, the indexing node will complete the transfer with the SEND COMPLETE command indicating to the initiating node that there are no more index files to be sent and the initiating node can then assemble those index files into the main index.",
                "The NodeController is responsible for setting up connections with nodes in the idle state to distribute the indexing process.",
                "Using JXTA [5], the node controller will obtain a set of nodes.",
                "This set of nodes is iterated and each one is sent the <br>idle query</br> command.",
                "The nodes that respond with idle are then collected.",
                "The set of idle nodes includes the node initiating the distributed indexing process, referred to as the local node.",
                "Once the collection of idle nodes is obtained, the node updates the set of controllers and evenly divides the set of documents that are to be indexed.",
                "For example, if there are 100 documents and 10 nodes (including the local node) then each node will have 10 documents to index.",
                "For each indexing node an instance of the FileSender object is created.",
                "The FileSender is aware of the set of documents that node is responsible for.",
                "Once a FileSender object has been created for each node, the NodeController waits for each FileSender to complete.",
                "When the FileSender objects have completed the NodeController will take the resultant indexes from 175 each node and pass them to an instance of the IndexCompiler, which maintains the index and the list of FileSenders.",
                "Once the IndexCompiler has completed it will return to the idle state and activate the directory scanner to monitor the locally owned set of documents for changes that may require reindexing.",
                "The NodeIndexer is responsible for receiving documents sent to it by the initiating node and then indexing them using the Lucene engine [7].",
                "Once the indexing is complete the resulting index is streamed back to the initiating node as well as compiled in the indexer nodes own local index.",
                "Before initiating the indexing process it must be sent an <br>idle query</br> message.",
                "This is the first command that sets off the indexing process.",
                "The indexer node will determine whether it is considered idle based on the current CPU usage.",
                "As outlined in the protocol section if the node is not being used and has a low overall CPU usage percentage it will return IDLE to the <br>idle query</br> command.",
                "If the indexer nodes CPU usage is above 50% for a specified amount of time it is then considered to be busy and will respond to the <br>idle query</br> command with BUSY.",
                "If a node is determined busy it returns to its listening state waiting for another <br>idle query</br> from another initiating node.",
                "If the node is determined to be idle it will enter the state where it will receive files from the initiating node that it is responsible for indexing.",
                "Once all of the files are received by the initiating node, indicated by a SEND COMPLETE message, it starts an instance of the Lucene indexing engine.",
                "The files are stored in a temporary directory separate from the nodes local documents that it is responsible for maintaining an index of.",
                "The Lucene index writer then indexes all of the transferred files.",
                "The index is stored on the drive within a temporary directory separate from the current index.",
                "After the indexing of the files completes the indexer node enters the state where the index files are sent back to the initiating node.",
                "The indexer node loops through all of the files created by Lucenes IndexWriter and streams them to the initiating node.",
                "Once these files are sent back that index is then merged into the indexer nodes own full index of the existing files.",
                "It then enters the idle state where it will then listen for any other nodes that required distributing the indexing process.",
                "The FileSender object is the initiating node equivalent of the indexer node.",
                "It initiates the communication between the initiating node and the node that will assist in the distributed indexing.",
                "The initiating node runs many instances of the FileSender node one for each other node it has determined to be idle.",
                "Upon instantiation of the FileSender it is passed the node that it is responsible for contacting and the set of files that must be sent.",
                "The FileSenders first job is to send the files that are to be indexed by the other idle node.",
                "The files are streamed one at a time to the other node.",
                "It sends each file using the INCOMING FILE command.",
                "With that command it sends the name of the file being sent and the size in bytes.",
                "Once all files have been sent the FileSender sends the SEND COMPLETE command.",
                "The FileSender creates an instance of Lucenes IndexWriter and prepares to create the index in a temporary directory on the file system.",
                "The FileSender will begin to receive the files that are to be saved within the index.",
                "It receives an INDEX FILE command with the name of the files and the size in bytes.",
                "This file is then streamed into the temporary index directory on the FileSender node.",
                "After the transfer of the index files has been completed the FileSender notifies the instance of the index compiler that it is ready to combine the index.",
                "Each instance of the FileSender has its own unique section of temporary space to store the index that has been transferred back from the indexing node.",
                "When notifying the IndexCompiler it will also pass the location of the particular FileSenders directory location of that index. 4.",
                "PEER-TO-PEER DISTRIBUTION Apocrita uses a peer-to-peer distribution model in order to distribute files.",
                "Files are distributed solely from a serving node to a client node without regard for the availability of file pieces from other clients in the network.",
                "This means that the file transfers will be fast and efficient and should not severely affect the usability of serving nodes from the point of view of a local user.",
                "The JXTA framework [5] is used in order to implement peer-to-peer functionality.",
                "This has been decided due to the extremely shorttimeline of the project which allows us to take advantage of over five years of testing and development and support from many large organizations employing JXTA in their own products.",
                "We are not concerned with any potential quality problems because JXTA is considered to be the most mature and stable peer-to-peer framework available.",
                "Using JXTA terminology, there are three types of peers used in node classification.",
                "Edge peers are typically low-bandwidth, non-dedicated nodes.",
                "Due to these characteristics, edge peers are not used with Apocrita.",
                "Relay peers are typically higher-bandwidth, dedicated nodes.",
                "This is the classification of all nodes in the Apocrita network, and, as such, are the default classification used.",
                "Rendezvous peers are used to coordinate message passing between nodes in the Apocrita network.",
                "This means that a minimum of one rendezvous peer per subnet is required. 4.1 Peer Discovery The Apocrita server subsystem uses the JXTA Peer Discovery Protocol (PDP) in order to find participating peers within the network as shown in Figure 2.",
                "Figure 2.",
                "Apocrita peer discovery process. 176 The PDP listens for peer advertisements from other nodes in the Apocrita swarm.",
                "If a peer advertisement is detected, the server will attempt to join the peer group and start actively contributing to the network.",
                "If no peers are found by the discovery service, the server will create a new peer group and start advertising this peer group.",
                "This new peer group will be periodically advertised on the network; any new peers joining the network will attach to this peer group.",
                "A distinct advantage of using the JXTA PDP is that Apocrita does not have to be sensitive to particular networking nuances such as Maximum Transmission Unit (MTU).",
                "In addition, Apocrita does not have to support one-to-many packet delivery methods such as multicast and instead can rely on JXTA for this support. 4.2 Index Query Operation All nodes in the Apocrita swarm have a complete and up-to-date copy of the network index stored locally.",
                "This makes querying the index for search results trivial.",
                "Unlike the Gnutella protocol, a query does not have to propagate throughout the network.",
                "This also means that the time to return query results is very fast - much faster than protocols that rely on nodes in the network to pass the query throughout the network and then wait for results.",
                "This is demonstrated in Figure 3.",
                "Figure 3.",
                "Apocrita query operation.",
                "Each document in the swarm has a unique document identification number (ID).",
                "A node will query the index and a result will be returned with both the document ID number as well as a list of peers with a copy of the matched document ID.",
                "It is then the responsibility of the searching peer to contact the peers in the list to negotiate file transfer between the client and server. 5.",
                "PROTOTYPE IMPLEMENTATION Apocrita uses the Lucene framework [7], which is a project under development by the Apache Software Foundation.",
                "Apache Lucene is a high-performance, full-featured text search engine library written entirely in Java.",
                "In the current implementation, Apocrita is only capable of indexing plain text documents.",
                "Apocrita uses the JXTA framework [5] as a peer-to-peer transport library between nodes.",
                "JXTA is used to pass both messages and files between nodes in the search network.",
                "By using JXTA, Apocrita takes advantage of a reliable, and proven peer-to-peer transport mechanism.",
                "It uses the pipe facility in order to pass messages and files between nodes.",
                "The pipe facility provides many different types of pipe advertisements.",
                "This includes an unsecured unicast pipe, a secured unicast pipe, and a propagated unsecured pipe.",
                "Message passing is used to pass status messages between nodes in order to aid in indexing, searching, and retrieval.",
                "For example, a node attempting to find an idle node to participate in indexing will query nodes via the message facility.",
                "Idle nodes will reply with a status message to indicate they are available to start indexing.",
                "File passing is used within Apocrita for file transfer.",
                "After a file has been searched for and located within the peer group, a JXTA socket will be opened and file transfer will take place.",
                "A JXTA socket is similar to a standard Java socket, however a JXTA socket uses JXTA pipes in underlying network transport.",
                "File passing uses an unsecured unicast pipe in order to transfer data.",
                "File passing is also used within Apocrita for index transfer.",
                "Index transfer works exactly like a file transfer.",
                "In fact, the index transfer actually passes the index as a file.",
                "However, there is one key difference between file transfer and index transfer.",
                "In the case of file transfer, a socket is created between only two nodes.",
                "In the case of index transfer, a socket must be created between all nodes in the network in order to pass the index, which allows for all nodes to have a full and complete index of the entire network.",
                "In order to facilitate this transfer efficiently, index transfer will use an unsecured propagated pipe to communicate with all nodes in the Apocrita network. 6.",
                "PERFORMANCE EVALUATION It is difficult to objectively benchmark the results obtained through Apocrita because there is no other system currently available with the same goals as Apocrita.",
                "We have, however, evaluated the performance of the critical sections of the system.",
                "The critical sections were determined to be the processes that are the most time intensive.",
                "The evaluation was completed on standard lab computers on a 100Mb/s Ethernet LAN; the machines run Windows XP with a Pentium 4 CPU running at 2.4GHz with 512 MB of RAM.",
                "The indexing time has been run against both: the Time Magazine collection [8], which contains 432 documents and 83 queries and their most relevant results, and the NPL collection [8] that has a total of 11,429 documents and 93 queries with expected results.",
                "Each document ranges in size between 4KB and 8KB.",
                "As Figure 4 demonstrates, the number of nodes involved in the indexing process affects the time taken to complete the indexing processsometimes even drastically.",
                "Figure 4.",
                "Node vs. index time.",
                "The difference in going from one indexing node to two indexing nodes is the most drastic and equates to an indexing time 37% faster than a single indexing node.",
                "The different between two 177 indexing nodes and three indexing nodes is still significant and represents a 16% faster time than two indexing nodes.",
                "As the number of indexing nodes increases the results are less dramatic.",
                "This can be attributed to the time overhead associated with having many nodes perform indexing.",
                "The time needed to communicate with a node is constant, so as the number of nodes increases, this constant becomes more prevalent.",
                "Also, the complexity of joining the indexing results is a complex operation and is complicated further as the number of indexing nodes increases.",
                "Socket performance is also a very important part of Apocrita.",
                "Benchmarks were performed using a 65MB file on a system with both the client and server running locally.",
                "This was done to isolate possible network issues.",
                "Although less drastic, similar results were shown when the client and server run on independent hardware.",
                "In order to mitigate possible unexpected errors, each test was run 10 times.",
                "Figure 5.",
                "Java sockets vs. JXTA sockets.",
                "As Figure 5 demonstrates, the performance of JXTA sockets is abysmal as compared to the performance of standard Java sockets.",
                "The minimum transfer rate obtained using Java sockets is 81,945KB/s while the minimum transfer rater obtained using JXTA sockets is much lower at 3, 805KB/s.",
                "The maximum transfer rater obtain using Java sockets is 97,412KB/s while the maximum transfer rate obtained using JXTA sockets is 5,530KB/s.",
                "Finally, the average transfer rate using Java sockets is 87,540KB/s while the average transfer rate using JXTA sockets is 4,293KB/s.",
                "The major problem found in these benchmarks is that the underlying network transport mechanism does not perform as quickly or efficiently as expected.",
                "In order to garner a performance increase, the JXTA framework needs to be substituted with a more traditional approach.",
                "The indexing time is also a bottleneck and will need to be improved for the overall quality of Apocrita to be improved. 7.",
                "RELATED WORK Several decentralized P2P systems [1, 2, 3] exist today that Apocrita features some of their functionality.",
                "However, Apocrita also has unique novel searching and indexing features that make this system unique.",
                "For example, Majestic-12 [4] is a distributed search and indexing project designed for searching the Internet.",
                "Each user would install a client, which is responsible for indexing a portion of the web.",
                "A central area for querying the index is available on the Majestic-12 web page.",
                "The index itself is not distributed, only the act of indexing is distributed.",
                "The distributed indexing aspect of this project most closely relates Apocrita goals.",
                "YaCy [6] is a peer-to-peer web search application.",
                "YaCy consists of a web crawler, an indexer, a built-in database engine, and a p2p index exchange protocol.",
                "YaCy is designed to maintain a distributed index of the Internet.",
                "It used a distributed hash table (DHT) to maintain the index.",
                "The local node is used to query but all results that are returned are accessible on the Internet.",
                "YaCy used many peers and DHT to maintain a distributed index.",
                "Apocrita will also use a distributed index in future implementations and may benefit from using an implementation of a DHT.",
                "YaCy however, is designed as a web search engine and, as such solves a much different problem than Apocrita. 8.",
                "CONCLUSIONS AND FUTURE WORK We presented Apocrita, a distributed P2P searching and indexing system intended for network users on an Intranet.",
                "It can help organizations with no network file server or necessary network infrastructure to share documents.",
                "It eliminates the need for documents to be manually shared among users while being edited and reduce the possibility of conflicting versions being distributed.",
                "A proof of concept prototype has been constructed, but the results from measuring the network transport mechanism and the indexing time were not as impressive as initially envisioned.",
                "Despite these shortcomings, the experience gained from the design and implementation of Apocrita has given us more insight into building challenging distributed systems.",
                "For future work, Apocrita will have a smart content distribution model in which a single instance of a file can intelligently and transparently replicate throughout the network to ensure a copy of every important file will always be available regardless of the availability of specific nodes in the network.",
                "In addition, we plan to integrate a revision control system into the content distribution portion of Apocrita so that users could have the ability to update an existing file that they found and have the old revision maintained and the new revision propagated.",
                "Finally, the current implementation has some overhead and redundancy due to the fact that the entire index is maintained on each individual node, we plan to design a distributed index. 9.",
                "REFERENCES [1] Rodrigues, R., Liskov, B., Shrira, L.: The Design of a Robust Peer-to-Peer System.",
                "Available online: http://www.pmg.lcs.mit.edu/~rodrigo/ew02-robust.pdf. [2] Chawathe, Y., Ratnasamy, S., Breslau, L., Lanham, N., and Chenker, S.: Making Gnutella-like P2P Systems Scalable.",
                "In Proceedings of SIGCOMM03, Karlsruhe, Germany. [3] Harvest: A Distributed Search System: http://harvest.sourceforge.net. [4] Majestic-12: Distributed Search Engine: http://www.majestic12.co.uk. [5] JXTA: http://www.jxta.org. [6] YaCy: Distributed P2P-based Web Indexing: http://www.yacy.net/yacy. [7] Lucene Search Engine Library: http://lucene.apache.org. [8] Test Collections (Time Magazine and NPL): www.dcs.gla.ac.uk/idom/ir_resources/test_collections. 178"
            ],
            "original_annotated_samples": [
                "<br>idle query</br>: The <br>idle query</br> is sent out from the initiating node to determine which other nodes may be able to help with the overall indexing process.",
                "If the node is using most of its CPU for other processes, the node will respond to the <br>idle query</br> with a BUSY command.",
                "IDLE: As with the case of the BUSY response, the node receiving the <br>idle query</br> will determine its eligibility for distributed indexing.",
                "This set of nodes is iterated and each one is sent the <br>idle query</br> command.",
                "Before initiating the indexing process it must be sent an <br>idle query</br> message."
            ],
            "translated_annotated_samples": [
                "La CONSULTA INACTIVA se envía desde el nodo iniciador para determinar qué otros nodos pueden ayudar con el proceso de indexación en general.",
                "Si el nodo está utilizando la mayor parte de su CPU para otros procesos, el nodo responderá a la CONSULTA DE INACTIVIDAD con un comando OCUPADO.",
                "Como en el caso de la respuesta BUSY, el nodo que recibe la CONSULTA DE INACTIVIDAD determinará su elegibilidad para la indexación distribuida.",
                "Este conjunto de nodos se itera y a cada uno se le envía el comando IDLE QUERY.",
                "Antes de iniciar el proceso de indexación, se debe enviar un mensaje de CONSULTA INACTIVA."
            ],
            "translated_text": "Apocrita: Un sistema de intercambio de archivos distribuido de igual a igual para intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Computación Distribuida y Tecnología Inalámbrica y de Telecomunicaciones Universidad de Guelph-Humber Toronto, ON, M9W 5L7 Canadá {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca RESUMEN Muchas organizaciones necesitan redactar documentos para diversos fines, y es posible que estos documentos deban ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un documento. En algunos casos, estos documentos son compartidos entre autores, a través de correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento. Incluso puede haber varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario. Otro problema surge cuando un documento está disponible en la máquina de un usuario y ese usuario está desconectado, en cuyo caso el documento ya no es accesible. En este artículo presentamos Apocrita, un revolucionario sistema distribuido de intercambio de archivos P2P para intranets. Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos - Aplicaciones Distribuidas. Términos generales Diseño, Experimentación, Rendimiento. 1. INTRODUCCIÓN El paradigma de computación Peer-to-Peer (P2P) se está convirtiendo en una forma completamente nueva de compartir recursos mutuos a través de Internet. Con el acceso cada vez más común a Internet de banda ancha, la tecnología P2P finalmente se ha convertido en una forma viable de compartir documentos y archivos multimedia. Ya existen programas en el mercado que permiten compartir archivos P2P. Estos programas permiten a millones de usuarios compartir archivos entre ellos. Si bien la utilización de clientes P2P ya es un gran avance en comparación con descargar archivos de sitios web, el uso de dichos programas no está exento de problemas. Los archivos descargados todavía requieren mucho manejo manual por parte del usuario. El usuario todavía necesita colocar los archivos en el directorio adecuado, gestionar archivos con múltiples versiones, eliminar los archivos cuando ya no se deseen. Nos esforzamos por hacer que el proceso de compartir documentos dentro de una Intranet sea más fácil. Muchas organizaciones están obligadas a redactar documentos para diversos fines, y dichos documentos pueden necesitar ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un documento. En algunos casos, estos documentos son enviados entre autores, por correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o que se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento. Puede haber incluso varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario. Además, algunas organizaciones no cuentan con un servidor de intercambio de archivos o la infraestructura de red necesaria para habilitar uno. En este artículo presentamos Apocrita, que es un sistema de intercambio de archivos P2P distribuido y rentable para dichas organizaciones. El resto de este documento está organizado de la siguiente manera. En la sección 2, presentamos Apocrita. El mecanismo de indexación distribuida y el protocolo se presentan en la Sección 3. La sección 4 presenta el modelo de distribución peer-to-peer. Se presenta un prototipo de prueba de concepto en la Sección 5, y las evaluaciones de rendimiento se discuten en la Sección 6. El trabajo relacionado se presenta en la Sección 7, y finalmente las conclusiones y el trabajo futuro se discuten en la Sección 8. Apocrita es un sistema de intercambio de archivos entre pares distribuido, y ha sido diseñado para facilitar la búsqueda de documentos en un entorno de Intranet. Actualmente, es posible que los documentos se encuentren en la máquina de un usuario o en una máquina remota. Es incluso posible que diferentes revisiones puedan residir en cada nodo de la Intranet. Esto significa que debe haber un proceso manual para mantener las versiones de los documentos. Apocrita resuelve este problema utilizando dos enfoques. Primero, debido a la naturaleza inherente de Apocrita, el documento solo residirá en una ubicación lógica única. En segundo lugar, Apocrita proporciona un método para revertir a versiones anteriores de documentos. Se concede el permiso de hacer copias digitales o impresas de todo o parte de este trabajo para uso personal o en el aula sin cargo alguno, siempre y cuando las copias no se realicen ni distribuyan con fines de lucro o ventaja comercial, y que las copias lleven este aviso y la cita completa en la primera página. Para copiar de otra manera, o republicar, publicar en servidores o redistribuir en listas, se requiere permiso específico previo y/o un pago. ACMSE07, 23-24 DE MARZO DE 2007, WINSTON-SALEM, NC, EE. UU. COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 también distribuirá documentos en múltiples máquinas para garantizar la alta disponibilidad de documentos importantes. Por ejemplo, si una máquina contiene un documento importante y actualmente no es accesible, el sistema es capaz de mantener la disponibilidad del documento a través de este mecanismo de distribución. Proporciona una interfaz sencilla para buscar y acceder a archivos que pueden existir tanto local como remotamente. La naturaleza distribuida de los documentos es transparente para el usuario. Apocrita apoya un modelo de red descentralizada en el que los pares utilizan un protocolo de descubrimiento para determinar los pares. Apocrita está destinado para usuarios de red en una Intranet. El enfoque principal son las organizaciones que pueden no tener una red lo suficientemente grande como para necesitar un servidor de archivos y la infraestructura de soporte. Elimina la necesidad de que los documentos sean compartidos manualmente entre usuarios mientras se editan y reduce la posibilidad de que se distribuyan versiones conflictivas. El sistema también proporciona cierta redundancia y en caso de fallo de una máquina, no se perderán documentos importantes. Es independiente del sistema operativo y fácil de acceder a través de un navegador web o mediante una aplicación independiente. Para disminuir el tiempo requerido para indexar una gran cantidad de documentos, el proceso de indexación se distribuye entre los nodos inactivos disponibles. Los archivos locales y remotos deben ser fácilmente accesibles a través de un sistema de archivos virtual montable, proporcionando transparencia para los usuarios. Apocrita utiliza un índice distribuido para todos los documentos disponibles en la intranet. Cada nodo contendrá una parte del índice completo y estará al tanto de qué parte del índice tiene cada otro nodo. Un nodo podrá contactar a cada nodo que contenga una porción única del índice. Además, cada nodo tiene un índice local separado de sus propios documentos. Pero como se discutió más tarde, en la implementación actual, cada nodo tiene una copia de todo el índice. La indexación de los documentos está distribuida. Por lo tanto, si un nodo está en proceso de indexar muchos documentos, distribuirá el trabajo entre los nodos. Una vez que el índice local de un nodo se actualiza con los nuevos documentos, entonces se actualizará el índice distribuido. El sistema de indexación distribuida actual consta de tres módulos separados: NodeController, FileSender y NodeIndexer. La responsabilidad de cada módulo se discute más adelante en esta sección. 3.1 Protocolo de indexación El protocolo que hemos diseñado para la indexación distribuida se muestra en la Figura 1. Figura 1. Protocolo de indexación distribuida Apocrita. La CONSULTA INACTIVA se envía desde el nodo iniciador para determinar qué otros nodos pueden ayudar con el proceso de indexación en general. No se enviaron parámetros con el comando. El nodo receptor responderá con un comando BUSY o IDLE. Si se recibe el comando IDLE, el nodo iniciador agregará el nodo que responde a una lista de ayudantes de indexación distribuida disponibles. En caso de recibir un comando OCUPADO, el nodo que responde es ignorado. OCUPADO: Una vez que un nodo recibe una CONSULTA IDL, determinará si puede considerarse un candidato para la indexación distribuida. Esta determinación se basa en el uso general de la CPU del nodo. Si el nodo está utilizando la mayor parte de su CPU para otros procesos, el nodo responderá a la CONSULTA DE INACTIVIDAD con un comando OCUPADO. Como en el caso de la respuesta BUSY, el nodo que recibe la CONSULTA DE INACTIVIDAD determinará su elegibilidad para la indexación distribuida. Para ser considerado un candidato para la indexación distribuida, el uso total de la CPU debe ser mínimo para permitir la indexación dedicada de los documentos distribuidos. Si este es el caso, el nodo responderá con un comando IDLE. ARCHIVO ENTRANTE: Una vez que el nodo iniciador reúne un conjunto de nodos inactivos para ayudar con la indexación distribuida, dividirá los documentos que se enviarán a los nodos. Para hacer esto, envía un mensaje de ARCHIVO ENTRANTE, que contiene el nombre del archivo y su tamaño en bytes. Después de que se haya enviado el comando ARCHIVO ENTRANTE, el nodo iniciador comenzará a transmitir el archivo al otro nodo. El nodo iniciador recorrerá los archivos que se enviarán al otro nodo; cada flujo de archivo estará precedido por el comando ARCHIVO ENTRANTE con los parámetros apropiados. ARCHIVO DE ÍNDICE: Una vez que el nodo de indexación haya completado el proceso de indexación del conjunto de archivos, debe enviar el índice resultante de vuelta al nodo iniciador. El índice está compuesto por varios archivos, que existen en el sistema de archivos del nodo de indexación. Al igual que con el comando INCOMING FILE, el nodo de indexación transmite cada archivo de índice después de enviar un comando INDEX FILE. El comando INDEX FILE tiene dos parámetros: el primero es el nombre del índice y el segundo es el tamaño del archivo en bytes. Al enviar los conjuntos de archivos tanto para el índice como para los archivos a ser indexados, el nodo debe notificar al nodo correspondiente cuando el proceso esté completo. Una vez que el nodo iniciador haya terminado de enviar el conjunto de documentos a ser indexados, enviará entonces un comando de ENVÍO COMPLETO indicando al nodo de indexación que no hay más archivos y que el nodo puede proceder con la indexación de los archivos. En el caso de que el nodo iniciador envíe los archivos de índice, el nodo de indexación completará la transferencia con el comando ENVIAR COMPLETO indicando al nodo iniciador que no hay más archivos de índice por enviar y que el nodo iniciador puede entonces ensamblar esos archivos de índice en el índice principal. El NodeController es responsable de establecer conexiones con nodos en estado de reposo para distribuir el proceso de indexación. Usando JXTA [5], el controlador de nodos obtendrá un conjunto de nodos. Este conjunto de nodos se itera y a cada uno se le envía el comando IDLE QUERY. Los nodos que responden con inactividad son luego recopilados. El conjunto de nodos inactivos incluye al nodo que inicia el proceso de indexación distribuida, conocido como nodo local. Una vez que se obtiene la colección de nodos inactivos, el nodo actualiza el conjunto de controladores y divide equitativamente el conjunto de documentos que se van a indexar. Por ejemplo, si hay 100 documentos y 10 nodos (incluyendo el nodo local) entonces cada nodo tendrá 10 documentos para indexar. Para cada nodo de indexación se crea una instancia del objeto FileSender. El FileSender es consciente del conjunto de documentos de los que el nodo es responsable. Una vez que se ha creado un objeto FileSender para cada nodo, el NodeController espera a que cada FileSender termine. Cuando los objetos FileSender hayan completado, el NodeController tomará los índices resultantes de 175 nodos y los pasará a una instancia del IndexCompiler, que mantiene el índice y la lista de FileSenders. Una vez que el IndexCompiler haya completado, volverá al estado inactivo y activará el escáner de directorios para monitorear el conjunto de documentos de propiedad local en busca de cambios que puedan requerir reindexación. El NodeIndexer es responsable de recibir los documentos enviados por el nodo iniciador y luego indexarlos utilizando el motor Lucene [7]. Una vez que se completa el indexado, el índice resultante se transmite de vuelta al nodo iniciador y se compila en el índice local del propio nodo indexador. Antes de iniciar el proceso de indexación, se debe enviar un mensaje de CONSULTA INACTIVA. ",
            "candidates": [],
            "error": [
                []
            ]
        },
        "index file": {
            "translated_key": "archivo de índice",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Apocrita: A Distributed Peer-to-Peer File Sharing System for Intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Distributed Computing and Wireless & Telecommunications Technology University of Guelph-Humber Toronto, ON, M9W 5L7 Canada {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca ABSTRACT Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all member of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are shared between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Another problem arises when a document is made available on a users machine and that user is offline, in which case the document is no longer accessible.",
                "In this paper we present Apocrita, a revolutionary distributed P2P file sharing system for Intranets.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Distributed applications.",
                "General Terms Design, Experimentation, Performance. 1.",
                "INTRODUCTION The Peer-to-Peer (P2P) computing paradigm is becoming a completely new form of mutual resource sharing over the Internet.",
                "With the increasingly common place broadband Internet access, P2P technology has finally become a viable way to share documents and media files.",
                "There are already programs on the market that enable P2P file sharing.",
                "These programs enable millions of users to share files among themselves.",
                "While the utilization of P2P clients is already a gigantic step forward compared to downloading files off websites, using such programs are not without their problems.",
                "The downloaded files still require a lot of manual management by the user.",
                "The user still needs to put the files in the proper directory, manage files with multiple versions, delete the files when they are no longer wanted.",
                "We strive to make the process of sharing documents within an Intranet easier.",
                "Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all members of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are sent between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Furthermore, some organizations do not have a file sharing server or the necessary network infrastructure to enable one.",
                "In this paper we present Apocrita, which is a cost-effective distributed P2P file sharing system for such organizations.",
                "The rest of this paper is organized as follows.",
                "In section 2, we present Apocrita.",
                "The distributed indexing mechanism and protocol are presented in Section 3.",
                "Section 4 presents the peer-topeer distribution model.",
                "A proof of concept prototype is presented in Section 5, and performance evaluations are discussed in Section 6.",
                "Related work is presented is Section 7, and finally conclusions and future work are discussed in Section 8. 2.",
                "APOCRITA Apocrita is a distributed peer-to-peer file sharing system, and has been designed to make finding documents easier in an Intranet environment.",
                "Currently, it is possible for documents to be located on a users machine or on a remote machine.",
                "It is even possible that different revisions could reside on each node on the Intranet.",
                "This means there must be a manual process to maintain document versions.",
                "Apocrita solves this problem using two approaches.",
                "First, due to the inherent nature of Apocrita, the document will only reside on a single logical location.",
                "Second, Apocrita provides a method of reverting to previous document versions.",
                "Apocrita Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page.",
                "To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.",
                "ACMSE07, MARCH 23-24, 2007, WINSTON-SALEM, NC, USA.",
                "COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 will also distribute documents across multiple machines to ensure high availability of important documents.",
                "For example, if a machine contains an important document and the machine is currently inaccessible, the system is capable of maintaining availability of the document through this distribution mechanism.",
                "It provides a simple interface for searching and accessing files that may exist either locally or remotely.",
                "The distributed nature of the documents is transparent to the user.",
                "Apocrita supports a decentralized network model where the peers use a discovery protocol to determine peers.",
                "Apocrita is intended for network users on an Intranet.",
                "The main focus is organizations that may not have a network large enough to require a file server and supporting infrastructure.",
                "It eliminates the need for documents to be manually shared between users while being edited and reduces the possibility of conflicting versions being distributed.",
                "The system also provides some redundancy and in the event of a single machine failure, no important documents will be lost.",
                "It is operating system independent, and easy to access through a web browser or through a standalone application.",
                "To decrease the time required for indexing a large number of documents, the indexing process is distributed across available idle nodes.",
                "Local and remote files should be easily accessible through a virtual mountable file system, providing transparency for users. 3.",
                "DISTRIBUTED INDEXING Apocrita uses a distributed index for all the documents that are available on the Intranet.",
                "Each node will contain part of the full index, and be aware of what part of the index each other node has.",
                "A node will be able to contact each node that contains a unique portion of the index.",
                "In addition, each node has a separate local index of its own documents.",
                "But as discussed later, in the current implementation, each node has a copy of the entire index.",
                "Indexing of the documents is distributed.",
                "Therefore, if a node is in the process of indexing many documents, it will break up the work over the nodes.",
                "Once a nodes local index is updated with the new documents, the distributed index will then be updated.",
                "The current distributed indexing system consists of three separate modules: NodeController, FileSender, and NodeIndexer.",
                "The responsibility of each module is discussed later in this section. 3.1 Indexing Protocol The protocol we have designed for the distributed indexing is depicted in Figure 1.",
                "Figure 1.",
                "Apocrita distributed indexing protocol.",
                "IDLE QUERY: The IDLE QUERY is sent out from the initiating node to determine which other nodes may be able to help with the overall indexing process.",
                "There are no parameters sent with the command.",
                "The receiving node will respond with either a BUSY or IDLE command.",
                "If the IDLE command is received, the initiating node will add the responding node to a list of available distributed indexing helpers.",
                "In the case of a BUSY command being received, the responding node is ignored.",
                "BUSY: Once a node received an IDL QUERY, it will determine whether it can be considered a candidate for distributed indexing.",
                "This determination is based on the overall CPU usage of the node.",
                "If the node is using most of its CPU for other processes, the node will respond to the IDLE QUERY with a BUSY command.",
                "IDLE: As with the case of the BUSY response, the node receiving the IDLE QUERY will determine its eligibility for distributed indexing.",
                "To be considered a candidate for distributed indexing, the overall CPU usage must be at a minimum to all for dedicated indexing of the distributed documents.",
                "If this is the case, the node will respond with an IDLE command.",
                "INCOMING FILE: Once the initiating node assembles a set of idle nodes to assist with the distributed indexing, it will divide the documents to be sent to the nodes.",
                "To do this, it sends an INCOMING FILE message, which contains the name of the file as well as the size in bytes.",
                "After the INCOMING FILE command has been sent, the initiating node will begin to stream the file to the other node.",
                "The initiating node will loop through the files that are to be sent to the other node; each file stream being preceded by the INCOMING FILE command with the appropriate parameters.",
                "<br>index file</br>: Once the indexing node has completed the indexing process of the set of files, it must send the resultant index back to the initiating node.",
                "The index is comprised of multiple files, which exist on the file system of the indexing node.",
                "As with the INCOMING FILE command, the indexing node streams each <br>index file</br> after sending an <br>index file</br> command.",
                "The <br>index file</br> command has two parameters: the first being the name of the index, and the second is the size of the file in bytes.",
                "SEND COMPLETE: When sending the sets of files for both the index and the files to be indexed, the node must notify the corresponding node when the process is complete.",
                "Once the initiating node is finished sending the set of documents to be indexed, it will then send a SEND COMPLETE command indicating to the indexing node that there are no more files and the node can proceed with indexing the files.",
                "In the case of the initiating node sending the index files, the indexing node will complete the transfer with the SEND COMPLETE command indicating to the initiating node that there are no more index files to be sent and the initiating node can then assemble those index files into the main index.",
                "The NodeController is responsible for setting up connections with nodes in the idle state to distribute the indexing process.",
                "Using JXTA [5], the node controller will obtain a set of nodes.",
                "This set of nodes is iterated and each one is sent the IDLE QUERY command.",
                "The nodes that respond with idle are then collected.",
                "The set of idle nodes includes the node initiating the distributed indexing process, referred to as the local node.",
                "Once the collection of idle nodes is obtained, the node updates the set of controllers and evenly divides the set of documents that are to be indexed.",
                "For example, if there are 100 documents and 10 nodes (including the local node) then each node will have 10 documents to index.",
                "For each indexing node an instance of the FileSender object is created.",
                "The FileSender is aware of the set of documents that node is responsible for.",
                "Once a FileSender object has been created for each node, the NodeController waits for each FileSender to complete.",
                "When the FileSender objects have completed the NodeController will take the resultant indexes from 175 each node and pass them to an instance of the IndexCompiler, which maintains the index and the list of FileSenders.",
                "Once the IndexCompiler has completed it will return to the idle state and activate the directory scanner to monitor the locally owned set of documents for changes that may require reindexing.",
                "The NodeIndexer is responsible for receiving documents sent to it by the initiating node and then indexing them using the Lucene engine [7].",
                "Once the indexing is complete the resulting index is streamed back to the initiating node as well as compiled in the indexer nodes own local index.",
                "Before initiating the indexing process it must be sent an IDLE QUERY message.",
                "This is the first command that sets off the indexing process.",
                "The indexer node will determine whether it is considered idle based on the current CPU usage.",
                "As outlined in the protocol section if the node is not being used and has a low overall CPU usage percentage it will return IDLE to the IDLE QUERY command.",
                "If the indexer nodes CPU usage is above 50% for a specified amount of time it is then considered to be busy and will respond to the IDLE QUERY command with BUSY.",
                "If a node is determined busy it returns to its listening state waiting for another IDLE QUERY from another initiating node.",
                "If the node is determined to be idle it will enter the state where it will receive files from the initiating node that it is responsible for indexing.",
                "Once all of the files are received by the initiating node, indicated by a SEND COMPLETE message, it starts an instance of the Lucene indexing engine.",
                "The files are stored in a temporary directory separate from the nodes local documents that it is responsible for maintaining an index of.",
                "The Lucene index writer then indexes all of the transferred files.",
                "The index is stored on the drive within a temporary directory separate from the current index.",
                "After the indexing of the files completes the indexer node enters the state where the index files are sent back to the initiating node.",
                "The indexer node loops through all of the files created by Lucenes IndexWriter and streams them to the initiating node.",
                "Once these files are sent back that index is then merged into the indexer nodes own full index of the existing files.",
                "It then enters the idle state where it will then listen for any other nodes that required distributing the indexing process.",
                "The FileSender object is the initiating node equivalent of the indexer node.",
                "It initiates the communication between the initiating node and the node that will assist in the distributed indexing.",
                "The initiating node runs many instances of the FileSender node one for each other node it has determined to be idle.",
                "Upon instantiation of the FileSender it is passed the node that it is responsible for contacting and the set of files that must be sent.",
                "The FileSenders first job is to send the files that are to be indexed by the other idle node.",
                "The files are streamed one at a time to the other node.",
                "It sends each file using the INCOMING FILE command.",
                "With that command it sends the name of the file being sent and the size in bytes.",
                "Once all files have been sent the FileSender sends the SEND COMPLETE command.",
                "The FileSender creates an instance of Lucenes IndexWriter and prepares to create the index in a temporary directory on the file system.",
                "The FileSender will begin to receive the files that are to be saved within the index.",
                "It receives an <br>index file</br> command with the name of the files and the size in bytes.",
                "This file is then streamed into the temporary index directory on the FileSender node.",
                "After the transfer of the index files has been completed the FileSender notifies the instance of the index compiler that it is ready to combine the index.",
                "Each instance of the FileSender has its own unique section of temporary space to store the index that has been transferred back from the indexing node.",
                "When notifying the IndexCompiler it will also pass the location of the particular FileSenders directory location of that index. 4.",
                "PEER-TO-PEER DISTRIBUTION Apocrita uses a peer-to-peer distribution model in order to distribute files.",
                "Files are distributed solely from a serving node to a client node without regard for the availability of file pieces from other clients in the network.",
                "This means that the file transfers will be fast and efficient and should not severely affect the usability of serving nodes from the point of view of a local user.",
                "The JXTA framework [5] is used in order to implement peer-to-peer functionality.",
                "This has been decided due to the extremely shorttimeline of the project which allows us to take advantage of over five years of testing and development and support from many large organizations employing JXTA in their own products.",
                "We are not concerned with any potential quality problems because JXTA is considered to be the most mature and stable peer-to-peer framework available.",
                "Using JXTA terminology, there are three types of peers used in node classification.",
                "Edge peers are typically low-bandwidth, non-dedicated nodes.",
                "Due to these characteristics, edge peers are not used with Apocrita.",
                "Relay peers are typically higher-bandwidth, dedicated nodes.",
                "This is the classification of all nodes in the Apocrita network, and, as such, are the default classification used.",
                "Rendezvous peers are used to coordinate message passing between nodes in the Apocrita network.",
                "This means that a minimum of one rendezvous peer per subnet is required. 4.1 Peer Discovery The Apocrita server subsystem uses the JXTA Peer Discovery Protocol (PDP) in order to find participating peers within the network as shown in Figure 2.",
                "Figure 2.",
                "Apocrita peer discovery process. 176 The PDP listens for peer advertisements from other nodes in the Apocrita swarm.",
                "If a peer advertisement is detected, the server will attempt to join the peer group and start actively contributing to the network.",
                "If no peers are found by the discovery service, the server will create a new peer group and start advertising this peer group.",
                "This new peer group will be periodically advertised on the network; any new peers joining the network will attach to this peer group.",
                "A distinct advantage of using the JXTA PDP is that Apocrita does not have to be sensitive to particular networking nuances such as Maximum Transmission Unit (MTU).",
                "In addition, Apocrita does not have to support one-to-many packet delivery methods such as multicast and instead can rely on JXTA for this support. 4.2 Index Query Operation All nodes in the Apocrita swarm have a complete and up-to-date copy of the network index stored locally.",
                "This makes querying the index for search results trivial.",
                "Unlike the Gnutella protocol, a query does not have to propagate throughout the network.",
                "This also means that the time to return query results is very fast - much faster than protocols that rely on nodes in the network to pass the query throughout the network and then wait for results.",
                "This is demonstrated in Figure 3.",
                "Figure 3.",
                "Apocrita query operation.",
                "Each document in the swarm has a unique document identification number (ID).",
                "A node will query the index and a result will be returned with both the document ID number as well as a list of peers with a copy of the matched document ID.",
                "It is then the responsibility of the searching peer to contact the peers in the list to negotiate file transfer between the client and server. 5.",
                "PROTOTYPE IMPLEMENTATION Apocrita uses the Lucene framework [7], which is a project under development by the Apache Software Foundation.",
                "Apache Lucene is a high-performance, full-featured text search engine library written entirely in Java.",
                "In the current implementation, Apocrita is only capable of indexing plain text documents.",
                "Apocrita uses the JXTA framework [5] as a peer-to-peer transport library between nodes.",
                "JXTA is used to pass both messages and files between nodes in the search network.",
                "By using JXTA, Apocrita takes advantage of a reliable, and proven peer-to-peer transport mechanism.",
                "It uses the pipe facility in order to pass messages and files between nodes.",
                "The pipe facility provides many different types of pipe advertisements.",
                "This includes an unsecured unicast pipe, a secured unicast pipe, and a propagated unsecured pipe.",
                "Message passing is used to pass status messages between nodes in order to aid in indexing, searching, and retrieval.",
                "For example, a node attempting to find an idle node to participate in indexing will query nodes via the message facility.",
                "Idle nodes will reply with a status message to indicate they are available to start indexing.",
                "File passing is used within Apocrita for file transfer.",
                "After a file has been searched for and located within the peer group, a JXTA socket will be opened and file transfer will take place.",
                "A JXTA socket is similar to a standard Java socket, however a JXTA socket uses JXTA pipes in underlying network transport.",
                "File passing uses an unsecured unicast pipe in order to transfer data.",
                "File passing is also used within Apocrita for index transfer.",
                "Index transfer works exactly like a file transfer.",
                "In fact, the index transfer actually passes the index as a file.",
                "However, there is one key difference between file transfer and index transfer.",
                "In the case of file transfer, a socket is created between only two nodes.",
                "In the case of index transfer, a socket must be created between all nodes in the network in order to pass the index, which allows for all nodes to have a full and complete index of the entire network.",
                "In order to facilitate this transfer efficiently, index transfer will use an unsecured propagated pipe to communicate with all nodes in the Apocrita network. 6.",
                "PERFORMANCE EVALUATION It is difficult to objectively benchmark the results obtained through Apocrita because there is no other system currently available with the same goals as Apocrita.",
                "We have, however, evaluated the performance of the critical sections of the system.",
                "The critical sections were determined to be the processes that are the most time intensive.",
                "The evaluation was completed on standard lab computers on a 100Mb/s Ethernet LAN; the machines run Windows XP with a Pentium 4 CPU running at 2.4GHz with 512 MB of RAM.",
                "The indexing time has been run against both: the Time Magazine collection [8], which contains 432 documents and 83 queries and their most relevant results, and the NPL collection [8] that has a total of 11,429 documents and 93 queries with expected results.",
                "Each document ranges in size between 4KB and 8KB.",
                "As Figure 4 demonstrates, the number of nodes involved in the indexing process affects the time taken to complete the indexing processsometimes even drastically.",
                "Figure 4.",
                "Node vs. index time.",
                "The difference in going from one indexing node to two indexing nodes is the most drastic and equates to an indexing time 37% faster than a single indexing node.",
                "The different between two 177 indexing nodes and three indexing nodes is still significant and represents a 16% faster time than two indexing nodes.",
                "As the number of indexing nodes increases the results are less dramatic.",
                "This can be attributed to the time overhead associated with having many nodes perform indexing.",
                "The time needed to communicate with a node is constant, so as the number of nodes increases, this constant becomes more prevalent.",
                "Also, the complexity of joining the indexing results is a complex operation and is complicated further as the number of indexing nodes increases.",
                "Socket performance is also a very important part of Apocrita.",
                "Benchmarks were performed using a 65MB file on a system with both the client and server running locally.",
                "This was done to isolate possible network issues.",
                "Although less drastic, similar results were shown when the client and server run on independent hardware.",
                "In order to mitigate possible unexpected errors, each test was run 10 times.",
                "Figure 5.",
                "Java sockets vs. JXTA sockets.",
                "As Figure 5 demonstrates, the performance of JXTA sockets is abysmal as compared to the performance of standard Java sockets.",
                "The minimum transfer rate obtained using Java sockets is 81,945KB/s while the minimum transfer rater obtained using JXTA sockets is much lower at 3, 805KB/s.",
                "The maximum transfer rater obtain using Java sockets is 97,412KB/s while the maximum transfer rate obtained using JXTA sockets is 5,530KB/s.",
                "Finally, the average transfer rate using Java sockets is 87,540KB/s while the average transfer rate using JXTA sockets is 4,293KB/s.",
                "The major problem found in these benchmarks is that the underlying network transport mechanism does not perform as quickly or efficiently as expected.",
                "In order to garner a performance increase, the JXTA framework needs to be substituted with a more traditional approach.",
                "The indexing time is also a bottleneck and will need to be improved for the overall quality of Apocrita to be improved. 7.",
                "RELATED WORK Several decentralized P2P systems [1, 2, 3] exist today that Apocrita features some of their functionality.",
                "However, Apocrita also has unique novel searching and indexing features that make this system unique.",
                "For example, Majestic-12 [4] is a distributed search and indexing project designed for searching the Internet.",
                "Each user would install a client, which is responsible for indexing a portion of the web.",
                "A central area for querying the index is available on the Majestic-12 web page.",
                "The index itself is not distributed, only the act of indexing is distributed.",
                "The distributed indexing aspect of this project most closely relates Apocrita goals.",
                "YaCy [6] is a peer-to-peer web search application.",
                "YaCy consists of a web crawler, an indexer, a built-in database engine, and a p2p index exchange protocol.",
                "YaCy is designed to maintain a distributed index of the Internet.",
                "It used a distributed hash table (DHT) to maintain the index.",
                "The local node is used to query but all results that are returned are accessible on the Internet.",
                "YaCy used many peers and DHT to maintain a distributed index.",
                "Apocrita will also use a distributed index in future implementations and may benefit from using an implementation of a DHT.",
                "YaCy however, is designed as a web search engine and, as such solves a much different problem than Apocrita. 8.",
                "CONCLUSIONS AND FUTURE WORK We presented Apocrita, a distributed P2P searching and indexing system intended for network users on an Intranet.",
                "It can help organizations with no network file server or necessary network infrastructure to share documents.",
                "It eliminates the need for documents to be manually shared among users while being edited and reduce the possibility of conflicting versions being distributed.",
                "A proof of concept prototype has been constructed, but the results from measuring the network transport mechanism and the indexing time were not as impressive as initially envisioned.",
                "Despite these shortcomings, the experience gained from the design and implementation of Apocrita has given us more insight into building challenging distributed systems.",
                "For future work, Apocrita will have a smart content distribution model in which a single instance of a file can intelligently and transparently replicate throughout the network to ensure a copy of every important file will always be available regardless of the availability of specific nodes in the network.",
                "In addition, we plan to integrate a revision control system into the content distribution portion of Apocrita so that users could have the ability to update an existing file that they found and have the old revision maintained and the new revision propagated.",
                "Finally, the current implementation has some overhead and redundancy due to the fact that the entire index is maintained on each individual node, we plan to design a distributed index. 9.",
                "REFERENCES [1] Rodrigues, R., Liskov, B., Shrira, L.: The Design of a Robust Peer-to-Peer System.",
                "Available online: http://www.pmg.lcs.mit.edu/~rodrigo/ew02-robust.pdf. [2] Chawathe, Y., Ratnasamy, S., Breslau, L., Lanham, N., and Chenker, S.: Making Gnutella-like P2P Systems Scalable.",
                "In Proceedings of SIGCOMM03, Karlsruhe, Germany. [3] Harvest: A Distributed Search System: http://harvest.sourceforge.net. [4] Majestic-12: Distributed Search Engine: http://www.majestic12.co.uk. [5] JXTA: http://www.jxta.org. [6] YaCy: Distributed P2P-based Web Indexing: http://www.yacy.net/yacy. [7] Lucene Search Engine Library: http://lucene.apache.org. [8] Test Collections (Time Magazine and NPL): www.dcs.gla.ac.uk/idom/ir_resources/test_collections. 178"
            ],
            "original_annotated_samples": [
                "<br>index file</br>: Once the indexing node has completed the indexing process of the set of files, it must send the resultant index back to the initiating node.",
                "As with the INCOMING FILE command, the indexing node streams each <br>index file</br> after sending an <br>index file</br> command.",
                "The <br>index file</br> command has two parameters: the first being the name of the index, and the second is the size of the file in bytes.",
                "It receives an <br>index file</br> command with the name of the files and the size in bytes."
            ],
            "translated_annotated_samples": [
                "ARCHIVO DE ÍNDICE: Una vez que el nodo de indexación haya completado el proceso de indexación del conjunto de archivos, debe enviar el índice resultante de vuelta al nodo iniciador.",
                "Al igual que con el comando INCOMING FILE, el nodo de indexación transmite cada <br>archivo de índice</br> después de enviar un comando INDEX FILE.",
                "El comando INDEX FILE tiene dos parámetros: el primero es el nombre del índice y el segundo es el tamaño del archivo en bytes.",
                "Recibe un comando de <br>ARCHIVO DE ÍNDICE</br> con el nombre de los archivos y el tamaño en bytes."
            ],
            "translated_text": "Apocrita: Un sistema de intercambio de archivos distribuido de igual a igual para intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Computación Distribuida y Tecnología Inalámbrica y de Telecomunicaciones Universidad de Guelph-Humber Toronto, ON, M9W 5L7 Canadá {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca RESUMEN Muchas organizaciones necesitan redactar documentos para diversos fines, y es posible que estos documentos deban ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un documento. En algunos casos, estos documentos son compartidos entre autores, a través de correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento. Incluso puede haber varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario. Otro problema surge cuando un documento está disponible en la máquina de un usuario y ese usuario está desconectado, en cuyo caso el documento ya no es accesible. En este artículo presentamos Apocrita, un revolucionario sistema distribuido de intercambio de archivos P2P para intranets. Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos - Aplicaciones Distribuidas. Términos generales Diseño, Experimentación, Rendimiento. 1. INTRODUCCIÓN El paradigma de computación Peer-to-Peer (P2P) se está convirtiendo en una forma completamente nueva de compartir recursos mutuos a través de Internet. Con el acceso cada vez más común a Internet de banda ancha, la tecnología P2P finalmente se ha convertido en una forma viable de compartir documentos y archivos multimedia. Ya existen programas en el mercado que permiten compartir archivos P2P. Estos programas permiten a millones de usuarios compartir archivos entre ellos. Si bien la utilización de clientes P2P ya es un gran avance en comparación con descargar archivos de sitios web, el uso de dichos programas no está exento de problemas. Los archivos descargados todavía requieren mucho manejo manual por parte del usuario. El usuario todavía necesita colocar los archivos en el directorio adecuado, gestionar archivos con múltiples versiones, eliminar los archivos cuando ya no se deseen. Nos esforzamos por hacer que el proceso de compartir documentos dentro de una Intranet sea más fácil. Muchas organizaciones están obligadas a redactar documentos para diversos fines, y dichos documentos pueden necesitar ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un documento. En algunos casos, estos documentos son enviados entre autores, por correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o que se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento. Puede haber incluso varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario. Además, algunas organizaciones no cuentan con un servidor de intercambio de archivos o la infraestructura de red necesaria para habilitar uno. En este artículo presentamos Apocrita, que es un sistema de intercambio de archivos P2P distribuido y rentable para dichas organizaciones. El resto de este documento está organizado de la siguiente manera. En la sección 2, presentamos Apocrita. El mecanismo de indexación distribuida y el protocolo se presentan en la Sección 3. La sección 4 presenta el modelo de distribución peer-to-peer. Se presenta un prototipo de prueba de concepto en la Sección 5, y las evaluaciones de rendimiento se discuten en la Sección 6. El trabajo relacionado se presenta en la Sección 7, y finalmente las conclusiones y el trabajo futuro se discuten en la Sección 8. Apocrita es un sistema de intercambio de archivos entre pares distribuido, y ha sido diseñado para facilitar la búsqueda de documentos en un entorno de Intranet. Actualmente, es posible que los documentos se encuentren en la máquina de un usuario o en una máquina remota. Es incluso posible que diferentes revisiones puedan residir en cada nodo de la Intranet. Esto significa que debe haber un proceso manual para mantener las versiones de los documentos. Apocrita resuelve este problema utilizando dos enfoques. Primero, debido a la naturaleza inherente de Apocrita, el documento solo residirá en una ubicación lógica única. En segundo lugar, Apocrita proporciona un método para revertir a versiones anteriores de documentos. Se concede el permiso de hacer copias digitales o impresas de todo o parte de este trabajo para uso personal o en el aula sin cargo alguno, siempre y cuando las copias no se realicen ni distribuyan con fines de lucro o ventaja comercial, y que las copias lleven este aviso y la cita completa en la primera página. Para copiar de otra manera, o republicar, publicar en servidores o redistribuir en listas, se requiere permiso específico previo y/o un pago. ACMSE07, 23-24 DE MARZO DE 2007, WINSTON-SALEM, NC, EE. UU. COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 también distribuirá documentos en múltiples máquinas para garantizar la alta disponibilidad de documentos importantes. Por ejemplo, si una máquina contiene un documento importante y actualmente no es accesible, el sistema es capaz de mantener la disponibilidad del documento a través de este mecanismo de distribución. Proporciona una interfaz sencilla para buscar y acceder a archivos que pueden existir tanto local como remotamente. La naturaleza distribuida de los documentos es transparente para el usuario. Apocrita apoya un modelo de red descentralizada en el que los pares utilizan un protocolo de descubrimiento para determinar los pares. Apocrita está destinado para usuarios de red en una Intranet. El enfoque principal son las organizaciones que pueden no tener una red lo suficientemente grande como para necesitar un servidor de archivos y la infraestructura de soporte. Elimina la necesidad de que los documentos sean compartidos manualmente entre usuarios mientras se editan y reduce la posibilidad de que se distribuyan versiones conflictivas. El sistema también proporciona cierta redundancia y en caso de fallo de una máquina, no se perderán documentos importantes. Es independiente del sistema operativo y fácil de acceder a través de un navegador web o mediante una aplicación independiente. Para disminuir el tiempo requerido para indexar una gran cantidad de documentos, el proceso de indexación se distribuye entre los nodos inactivos disponibles. Los archivos locales y remotos deben ser fácilmente accesibles a través de un sistema de archivos virtual montable, proporcionando transparencia para los usuarios. Apocrita utiliza un índice distribuido para todos los documentos disponibles en la intranet. Cada nodo contendrá una parte del índice completo y estará al tanto de qué parte del índice tiene cada otro nodo. Un nodo podrá contactar a cada nodo que contenga una porción única del índice. Además, cada nodo tiene un índice local separado de sus propios documentos. Pero como se discutió más tarde, en la implementación actual, cada nodo tiene una copia de todo el índice. La indexación de los documentos está distribuida. Por lo tanto, si un nodo está en proceso de indexar muchos documentos, distribuirá el trabajo entre los nodos. Una vez que el índice local de un nodo se actualiza con los nuevos documentos, entonces se actualizará el índice distribuido. El sistema de indexación distribuida actual consta de tres módulos separados: NodeController, FileSender y NodeIndexer. La responsabilidad de cada módulo se discute más adelante en esta sección. 3.1 Protocolo de indexación El protocolo que hemos diseñado para la indexación distribuida se muestra en la Figura 1. Figura 1. Protocolo de indexación distribuida Apocrita. La CONSULTA INACTIVA se envía desde el nodo iniciador para determinar qué otros nodos pueden ayudar con el proceso de indexación en general. No se enviaron parámetros con el comando. El nodo receptor responderá con un comando BUSY o IDLE. Si se recibe el comando IDLE, el nodo iniciador agregará el nodo que responde a una lista de ayudantes de indexación distribuida disponibles. En caso de recibir un comando OCUPADO, el nodo que responde es ignorado. OCUPADO: Una vez que un nodo recibe una CONSULTA IDL, determinará si puede considerarse un candidato para la indexación distribuida. Esta determinación se basa en el uso general de la CPU del nodo. Si el nodo está utilizando la mayor parte de su CPU para otros procesos, el nodo responderá a la CONSULTA DE INACTIVIDAD con un comando OCUPADO. Como en el caso de la respuesta BUSY, el nodo que recibe la CONSULTA DE INACTIVIDAD determinará su elegibilidad para la indexación distribuida. Para ser considerado un candidato para la indexación distribuida, el uso total de la CPU debe ser mínimo para permitir la indexación dedicada de los documentos distribuidos. Si este es el caso, el nodo responderá con un comando IDLE. ARCHIVO ENTRANTE: Una vez que el nodo iniciador reúne un conjunto de nodos inactivos para ayudar con la indexación distribuida, dividirá los documentos que se enviarán a los nodos. Para hacer esto, envía un mensaje de ARCHIVO ENTRANTE, que contiene el nombre del archivo y su tamaño en bytes. Después de que se haya enviado el comando ARCHIVO ENTRANTE, el nodo iniciador comenzará a transmitir el archivo al otro nodo. El nodo iniciador recorrerá los archivos que se enviarán al otro nodo; cada flujo de archivo estará precedido por el comando ARCHIVO ENTRANTE con los parámetros apropiados. ARCHIVO DE ÍNDICE: Una vez que el nodo de indexación haya completado el proceso de indexación del conjunto de archivos, debe enviar el índice resultante de vuelta al nodo iniciador. El índice está compuesto por varios archivos, que existen en el sistema de archivos del nodo de indexación. Al igual que con el comando INCOMING FILE, el nodo de indexación transmite cada <br>archivo de índice</br> después de enviar un comando INDEX FILE. El comando INDEX FILE tiene dos parámetros: el primero es el nombre del índice y el segundo es el tamaño del archivo en bytes. Al enviar los conjuntos de archivos tanto para el índice como para los archivos a ser indexados, el nodo debe notificar al nodo correspondiente cuando el proceso esté completo. Una vez que el nodo iniciador haya terminado de enviar el conjunto de documentos a ser indexados, enviará entonces un comando de ENVÍO COMPLETO indicando al nodo de indexación que no hay más archivos y que el nodo puede proceder con la indexación de los archivos. En el caso de que el nodo iniciador envíe los archivos de índice, el nodo de indexación completará la transferencia con el comando ENVIAR COMPLETO indicando al nodo iniciador que no hay más archivos de índice por enviar y que el nodo iniciador puede entonces ensamblar esos archivos de índice en el índice principal. El NodeController es responsable de establecer conexiones con nodos en estado de reposo para distribuir el proceso de indexación. Usando JXTA [5], el controlador de nodos obtendrá un conjunto de nodos. Este conjunto de nodos se itera y a cada uno se le envía el comando IDLE QUERY. Los nodos que responden con inactividad son luego recopilados. El conjunto de nodos inactivos incluye al nodo que inicia el proceso de indexación distribuida, conocido como nodo local. Una vez que se obtiene la colección de nodos inactivos, el nodo actualiza el conjunto de controladores y divide equitativamente el conjunto de documentos que se van a indexar. Por ejemplo, si hay 100 documentos y 10 nodos (incluyendo el nodo local) entonces cada nodo tendrá 10 documentos para indexar. Para cada nodo de indexación se crea una instancia del objeto FileSender. El FileSender es consciente del conjunto de documentos de los que el nodo es responsable. Una vez que se ha creado un objeto FileSender para cada nodo, el NodeController espera a que cada FileSender termine. Cuando los objetos FileSender hayan completado, el NodeController tomará los índices resultantes de 175 nodos y los pasará a una instancia del IndexCompiler, que mantiene el índice y la lista de FileSenders. Una vez que el IndexCompiler haya completado, volverá al estado inactivo y activará el escáner de directorios para monitorear el conjunto de documentos de propiedad local en busca de cambios que puedan requerir reindexación. El NodeIndexer es responsable de recibir los documentos enviados por el nodo iniciador y luego indexarlos utilizando el motor Lucene [7]. Una vez que se completa el indexado, el índice resultante se transmite de vuelta al nodo iniciador y se compila en el índice local del propio nodo indexador. Antes de iniciar el proceso de indexación, se debe enviar un mensaje de CONSULTA INACTIVA. Esta es la primera orden que inicia el proceso de indexación. El nodo indexador determinará si se considera inactivo en función del uso actual de la CPU. Como se describe en la sección del protocolo, si el nodo no se está utilizando y tiene un bajo porcentaje de uso de CPU en general, devolverá IDLE al comando de CONSULTA DE INACTIVIDAD. Si el uso de la CPU de los nodos del indexador está por encima del 50% durante un período de tiempo especificado, se considerará ocupado y responderá al comando IDLE QUERY con BUSY. Si un nodo se determina ocupado, vuelve a su estado de escucha esperando otra CONSULTA INACTIVA de otro nodo iniciador. Si se determina que el nodo está inactivo, entrará en el estado en el que recibirá archivos del nodo iniciador de los que es responsable de indexar. Una vez que todos los archivos son recibidos por el nodo iniciador, indicado por un mensaje de ENVÍO COMPLETO, se inicia una instancia del motor de indexación de Lucene. Los archivos se almacenan en un directorio temporal separado de los documentos locales de los nodos que son responsables de mantener un índice de los mismos. El escritor de índices de Lucene indexa luego todos los archivos transferidos. El índice se almacena en la unidad dentro de un directorio temporal separado del índice actual. Después de que se completa la indexación de los archivos, el nodo indexador entra en el estado en el que los archivos de índice son enviados de vuelta al nodo iniciador. El nodo indexador recorre todos los archivos creados por Lucene's IndexWriter y los transmite al nodo iniciador. Una vez que estos archivos son devueltos, ese índice se fusiona en el índice completo de los nodos indexadores de los archivos existentes. Luego entra en el estado de espera, donde escuchará a otros nodos que requieran distribuir el proceso de indexación. El objeto FileSender es el nodo iniciador equivalente al nodo indexador. Inicia la comunicación entre el nodo iniciador y el nodo que ayudará en la indexación distribuida. El nodo iniciador ejecuta muchas instancias del nodo FileSender, una para cada otro nodo que haya determinado que está inactivo. Al instanciar el FileSender se le pasa el nodo al que es responsable de contactar y el conjunto de archivos que deben ser enviados. El primer trabajo de FileSenders es enviar los archivos que deben ser indexados por el otro nodo inactivo. Los archivos se transmiten uno a la vez al otro nodo. Envía cada archivo utilizando el comando ARCHIVO ENTRANTE. Con ese comando se envía el nombre del archivo que se está enviando y el tamaño en bytes. Una vez que todos los archivos hayan sido enviados, el FileSender envía el comando de ENVÍO COMPLETADO. El FileSender crea una instancia de Lucene's IndexWriter y se prepara para crear el índice en un directorio temporal en el sistema de archivos. El FileSender comenzará a recibir los archivos que se guardarán dentro del índice. Recibe un comando de <br>ARCHIVO DE ÍNDICE</br> con el nombre de los archivos y el tamaño en bytes. Este archivo se transmite luego al directorio de índice temporal en el nodo de FileSender. Después de que se haya completado la transferencia de los archivos de índice, el FileSender notifica a la instancia del compilador de índices que está lista para combinar el índice. Cada instancia del FileSender tiene su propia sección única de espacio temporal para almacenar el índice que ha sido transferido desde el nodo de indexación. Al notificar al IndexCompiler, también pasará la ubicación del directorio particular de FileSenders de ese índice. 4. Apocrita utiliza un modelo de distribución peer-to-peer para distribuir archivos. Los archivos se distribuyen únicamente desde un nodo servidor a un nodo cliente sin tener en cuenta la disponibilidad de las partes de archivo de otros clientes en la red. Esto significa que las transferencias de archivos serán rápidas y eficientes y no deberían afectar severamente la usabilidad de los nodos de servicio desde el punto de vista de un usuario local. El marco de trabajo JXTA se utiliza para implementar funcionalidades peer-to-peer. Esto se ha decidido debido al plazo extremadamente corto del proyecto, lo que nos permite aprovechar más de cinco años de pruebas y desarrollo, así como el apoyo de muchas organizaciones grandes que emplean JXTA en sus propios productos. No estamos preocupados por posibles problemas de calidad porque JXTA se considera el marco de pares a pares más maduro y estable disponible. Usando la terminología de JXTA, hay tres tipos de pares utilizados en la clasificación de nodos. Los pares de borde suelen ser nodos de baja capacidad de ancho de banda y no dedicados. Debido a estas características, los pares de borde no se utilizan con Apocrita. Los nodos de retransmisión suelen ser nodos dedicados de mayor ancho de banda. Esta es la clasificación de todos los nodos en la red de Apocrita, y, como tal, es la clasificación predeterminada utilizada. Los pares de encuentro se utilizan para coordinar el intercambio de mensajes entre nodos en la red de Apocrita. Esto significa que se requiere un mínimo de un par de encuentro por subred. 4.1 Descubrimiento de pares El subsistema del servidor Apocrita utiliza el Protocolo de Descubrimiento de Pares (PDP) de JXTA para encontrar pares participantes dentro de la red, como se muestra en la Figura 2. Figura 2. El proceso de descubrimiento de pares de Apocrita. 176 El PDP escucha los anuncios de pares de otros nodos en el enjambre de Apocrita. Si se detecta un anuncio de pares, el servidor intentará unirse al grupo de pares y comenzar a contribuir activamente a la red. Si el servicio de descubrimiento no encuentra pares, el servidor creará un nuevo grupo de pares y comenzará a anunciar este grupo de pares. Este nuevo grupo de pares se anunciará periódicamente en la red; cualquier nuevo par que se una a la red se conectará a este grupo de pares. Una ventaja distintiva de usar el PDP de JXTA es que Apocrita no tiene que ser sensible a matices de redes particulares como la Unidad de Transmisión Máxima (MTU). Además, Apocrita no tiene que admitir métodos de entrega de paquetes uno a muchos, como la multidifusión, y en su lugar puede depender de JXTA para este soporte. Operación de consulta de índice 4.2 Todos los nodos en el enjambre de Apocrita tienen una copia completa y actualizada del índice de red almacenado localmente. Esto hace que la consulta del índice para obtener resultados de búsqueda sea trivial. A diferencia del protocolo Gnutella, una consulta no tiene que propagarse por toda la red. Esto también significa que el tiempo para devolver los resultados de la consulta es muy rápido, mucho más rápido que los protocolos que dependen de los nodos en la red para pasar la consulta a lo largo de la red y luego esperar los resultados. Esto se demuestra en la Figura 3. Figura 3. Operación de consulta de Apocrita. Cada documento en el enjambre tiene un número de identificación único (ID) para el documento. Un nodo consultará el índice y se devolverá un resultado con el número de identificación del documento, así como una lista de pares con una copia del documento coincidente. Es entonces responsabilidad del par que busca contactar a los pares de la lista para negociar la transferencia de archivos entre el cliente y el servidor. IMPLEMENTACIÓN DEL PROTOTIPO Apocrita utiliza el marco de trabajo Lucene [7], el cual es un proyecto en desarrollo por la Fundación de Software Apache. Apache Lucene es una biblioteca de motor de búsqueda de texto de alto rendimiento y con todas las funciones, escrita completamente en Java. En la implementación actual, Apocrita solo es capaz de indexar documentos de texto plano. Apocrita utiliza el marco de trabajo JXTA [5] como una biblioteca de transporte peer-to-peer entre nodos. JXTA se utiliza para pasar tanto mensajes como archivos entre nodos en la red de búsqueda. Al utilizar JXTA, Apocrita aprovecha un mecanismo de transporte peer-to-peer confiable y probado. Utiliza la facilidad de tuberías para pasar mensajes y archivos entre nodos. La instalación de tuberías ofrece muchos tipos diferentes de anuncios de tuberías. Esto incluye un conducto unicast no seguro, un conducto unicast seguro y un conducto no seguro propagado. El paso de mensajes se utiliza para enviar mensajes de estado entre nodos con el fin de ayudar en la indexación, búsqueda y recuperación. Por ejemplo, un nodo que intenta encontrar un nodo inactivo para participar en la indexación consultará a otros nodos a través de la facilidad de mensajes. Los nodos inactivos responderán con un mensaje de estado para indicar que están disponibles para comenzar a indexar. La transferencia de archivos se utiliza dentro de Apocrita para la transferencia de archivos. Después de que un archivo haya sido buscado y localizado dentro del grupo de pares, se abrirá un socket JXTA y se llevará a cabo la transferencia de archivos. Un socket JXTA es similar a un socket Java estándar, sin embargo un socket JXTA utiliza tuberías JXTA en el transporte de red subyacente. El paso de archivos utiliza un conducto unicast no seguro para transferir datos. La transferencia de archivos también se utiliza dentro de Apocrita para la transferencia de índices. La transferencia de índice funciona exactamente igual que la transferencia de archivos. De hecho, la transferencia de índice realmente pasa el índice como un archivo. Sin embargo, hay una diferencia clave entre la transferencia de archivos y la transferencia de índices. En el caso de la transferencia de archivos, se crea un socket entre solo dos nodos. En el caso de la transferencia de índices, se debe crear un socket entre todos los nodos de la red para pasar el índice, lo que permite que todos los nodos tengan un índice completo y total de toda la red. Para facilitar esta transferencia de manera eficiente, la transferencia de índices utilizará un tubo propagado no seguro para comunicarse con todos los nodos en la red de Apocrita. 6. EVALUACIÓN DEL RENDIMIENTO Es difícil comparar objetivamente los resultados obtenidos a través de Apocrita porque no hay otro sistema disponible actualmente con los mismos objetivos que Apocrita. Sin embargo, hemos evaluado el rendimiento de las secciones críticas del sistema. Las secciones críticas fueron determinadas como los procesos que requieren más tiempo. La evaluación se completó en computadoras de laboratorio estándar en una LAN Ethernet de 100Mb/s; las máquinas ejecutan Windows XP con un CPU Pentium 4 funcionando a 2.4GHz con 512 MB de RAM. El tiempo de indexación se ha ejecutado tanto en la colección de la revista Time [8], que contiene 432 documentos y 83 consultas con sus resultados más relevantes, como en la colección NPL [8], que tiene un total de 11,429 documentos y 93 consultas con resultados esperados. Cada documento tiene un tamaño que oscila entre 4KB y 8KB. Como muestra la Figura 4, el número de nodos involucrados en el proceso de indexación afecta el tiempo necesario para completar el proceso de indexación, a veces de manera drástica. Figura 4. Tiempo de nodo vs. tiempo de índice. La diferencia al pasar de un nodo de indexación a dos nodos de indexación es la más drástica y equivale a un tiempo de indexación un 37% más rápido que un solo nodo de indexación. La diferencia entre dos nodos de indexación y tres nodos de indexación sigue siendo significativa y representa un tiempo un 16% más rápido que dos nodos de indexación. A medida que aumenta el número de nodos de indexación, los resultados son menos dramáticos. Esto se puede atribuir al tiempo adicional asociado con tener muchos nodos realizando indexación. El tiempo necesario para comunicarse con un nodo es constante, por lo que a medida que aumenta el número de nodos, esta constante se vuelve más predominante. Además, la complejidad de unir los resultados de indexación es una operación compleja y se complica aún más a medida que aumenta el número de nodos de indexación. El rendimiento del socket también es una parte muy importante de Apocrita. Se realizaron pruebas de rendimiento utilizando un archivo de 65MB en un sistema con el cliente y el servidor ejecutándose localmente. Esto se hizo para aislar posibles problemas de red. Aunque menos drásticos, se mostraron resultados similares cuando el cliente y el servidor se ejecutan en hardware independiente. Para mitigar posibles errores inesperados, cada prueba se ejecutó 10 veces. Figura 5. Sockets de Java vs. sockets de JXTA. Como muestra la Figura 5, el rendimiento de los sockets JXTA es pésimo en comparación con el rendimiento de los sockets estándar de Java. La tasa de transferencia mínima obtenida utilizando sockets de Java es de 81,945KB/s, mientras que la tasa de transferencia mínima obtenida utilizando sockets de JXTA es mucho menor, de 3,805KB/s. La tasa de transferencia máxima obtenida usando sockets de Java es de 97,412KB/s, mientras que la tasa de transferencia máxima obtenida usando sockets de JXTA es de 5,530KB/s. Finalmente, la tasa de transferencia promedio utilizando sockets de Java es de 87,540KB/s, mientras que la tasa de transferencia promedio utilizando sockets de JXTA es de 4,293KB/s. El problema principal encontrado en estos benchmarks es que el mecanismo de transporte de red subyacente no funciona tan rápido o eficientemente como se esperaba. Para obtener un aumento en el rendimiento, el marco de trabajo JXTA necesita ser sustituido por un enfoque más tradicional. El tiempo de indexación también es un cuello de botella y deberá mejorarse para que la calidad general de Apocrita mejore. 7. TRABAJO RELACIONADO Existen hoy varios sistemas descentralizados P2P [1, 2, 3] que Apocrita incluye algunas de sus funcionalidades. Sin embargo, Apocrita también cuenta con características únicas de búsqueda e indexación novedosas que hacen que este sistema sea único. Por ejemplo, Majestic-12 [4] es un proyecto de búsqueda e indexación distribuida diseñado para buscar en Internet. Cada usuario instalaría un cliente, el cual es responsable de indexar una parte de la web. Una área central para consultar el índice está disponible en la página web de Majestic-12. El índice en sí no se distribuye, solo la acción de indexar se distribuye. El aspecto de indexación distribuida de este proyecto se relaciona más estrechamente con los objetivos de Apocrita. YaCy es una aplicación de búsqueda web peer-to-peer. YaCy consta de un rastreador web, un indexador, un motor de base de datos incorporado y un protocolo de intercambio de índices p2p. YaCy está diseñado para mantener un índice distribuido de Internet. Utilizaba una tabla hash distribuida (DHT) para mantener el índice. El nodo local se utiliza para hacer consultas, pero todos los resultados que se devuelven son accesibles en Internet. YaCy utilizó muchos pares y DHT para mantener un índice distribuido. Apocrita también utilizará un índice distribuido en futuras implementaciones y podría beneficiarse de utilizar una implementación de un DHT. Sin embargo, YaCy está diseñado como un motor de búsqueda web y, por lo tanto, resuelve un problema muy diferente al de Apocrita. 8. CONCLUSIONES Y TRABAJO FUTURO Presentamos Apocrita, un sistema distribuido de búsqueda e indexación P2P destinado a usuarios de redes en una intranet. Puede ayudar a las organizaciones que no cuentan con un servidor de archivos en red o con la infraestructura de red necesaria para compartir documentos. Elimina la necesidad de que los documentos sean compartidos manualmente entre usuarios mientras se editan y reduce la posibilidad de que se distribuyan versiones conflictivas. Se ha construido un prototipo de prueba de concepto, pero los resultados de medir el mecanismo de transporte de red y el tiempo de indexación no fueron tan impresionantes como se había imaginado inicialmente. A pesar de estas deficiencias, la experiencia adquirida en el diseño e implementación de Apocrita nos ha brindado una mayor comprensión sobre la construcción de sistemas distribuidos desafiantes. Para trabajos futuros, Apocrita contará con un modelo inteligente de distribución de contenido en el que una única instancia de un archivo puede replicarse de manera inteligente y transparente en toda la red para garantizar que una copia de cada archivo importante esté siempre disponible independientemente de la disponibilidad de nodos específicos en la red. Además, planeamos integrar un sistema de control de revisiones en la parte de distribución de contenido de Apocrita para que los usuarios puedan actualizar un archivo existente que encontraron y mantener la revisión antigua, propagando la nueva revisión. Finalmente, la implementación actual tiene cierto sobrecosto y redundancia debido a que se mantiene todo el índice en cada nodo individual, planeamos diseñar un índice distribuido. 9. REFERENCIAS [1] Rodrigues, R., Liskov, B., Shrira, L.: El diseño de un sistema peer-to-peer robusto. Disponible en línea: http://www.pmg.lcs.mit.edu/~rodrigo/ew02-robust.pdf. [2] Chawathe, Y., Ratnasamy, S., Breslau, L., Lanham, N., y Chenker, S.: Haciendo escalables los sistemas P2P similares a Gnutella. En Actas de SIGCOMM03, Karlsruhe, Alemania. [3] Harvest: Un Sistema de Búsqueda Distribuida: http://harvest.sourceforge.net. [4] Majestic-12: Motor de Búsqueda Distribuido: http://www.majestic12.co.uk. [5] JXTA: http://www.jxta.org. [6] YaCy: Indexación Web Distribuida basada en P2P: http://www.yacy.net/yacy. [7] Biblioteca del Motor de Búsqueda Lucene: http://lucene.apache.org. [8] Colecciones de Pruebas (Time Magazine y NPL): www.dcs.gla.ac.uk/idom/ir_resources/test_collections. 178 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "incoming file": {
            "translated_key": "archivo de índice",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Apocrita: A Distributed Peer-to-Peer File Sharing System for Intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Distributed Computing and Wireless & Telecommunications Technology University of Guelph-Humber Toronto, ON, M9W 5L7 Canada {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca ABSTRACT Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all member of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are shared between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Another problem arises when a document is made available on a users machine and that user is offline, in which case the document is no longer accessible.",
                "In this paper we present Apocrita, a revolutionary distributed P2P file sharing system for Intranets.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Distributed applications.",
                "General Terms Design, Experimentation, Performance. 1.",
                "INTRODUCTION The Peer-to-Peer (P2P) computing paradigm is becoming a completely new form of mutual resource sharing over the Internet.",
                "With the increasingly common place broadband Internet access, P2P technology has finally become a viable way to share documents and media files.",
                "There are already programs on the market that enable P2P file sharing.",
                "These programs enable millions of users to share files among themselves.",
                "While the utilization of P2P clients is already a gigantic step forward compared to downloading files off websites, using such programs are not without their problems.",
                "The downloaded files still require a lot of manual management by the user.",
                "The user still needs to put the files in the proper directory, manage files with multiple versions, delete the files when they are no longer wanted.",
                "We strive to make the process of sharing documents within an Intranet easier.",
                "Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all members of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are sent between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Furthermore, some organizations do not have a file sharing server or the necessary network infrastructure to enable one.",
                "In this paper we present Apocrita, which is a cost-effective distributed P2P file sharing system for such organizations.",
                "The rest of this paper is organized as follows.",
                "In section 2, we present Apocrita.",
                "The distributed indexing mechanism and protocol are presented in Section 3.",
                "Section 4 presents the peer-topeer distribution model.",
                "A proof of concept prototype is presented in Section 5, and performance evaluations are discussed in Section 6.",
                "Related work is presented is Section 7, and finally conclusions and future work are discussed in Section 8. 2.",
                "APOCRITA Apocrita is a distributed peer-to-peer file sharing system, and has been designed to make finding documents easier in an Intranet environment.",
                "Currently, it is possible for documents to be located on a users machine or on a remote machine.",
                "It is even possible that different revisions could reside on each node on the Intranet.",
                "This means there must be a manual process to maintain document versions.",
                "Apocrita solves this problem using two approaches.",
                "First, due to the inherent nature of Apocrita, the document will only reside on a single logical location.",
                "Second, Apocrita provides a method of reverting to previous document versions.",
                "Apocrita Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page.",
                "To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.",
                "ACMSE07, MARCH 23-24, 2007, WINSTON-SALEM, NC, USA.",
                "COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 will also distribute documents across multiple machines to ensure high availability of important documents.",
                "For example, if a machine contains an important document and the machine is currently inaccessible, the system is capable of maintaining availability of the document through this distribution mechanism.",
                "It provides a simple interface for searching and accessing files that may exist either locally or remotely.",
                "The distributed nature of the documents is transparent to the user.",
                "Apocrita supports a decentralized network model where the peers use a discovery protocol to determine peers.",
                "Apocrita is intended for network users on an Intranet.",
                "The main focus is organizations that may not have a network large enough to require a file server and supporting infrastructure.",
                "It eliminates the need for documents to be manually shared between users while being edited and reduces the possibility of conflicting versions being distributed.",
                "The system also provides some redundancy and in the event of a single machine failure, no important documents will be lost.",
                "It is operating system independent, and easy to access through a web browser or through a standalone application.",
                "To decrease the time required for indexing a large number of documents, the indexing process is distributed across available idle nodes.",
                "Local and remote files should be easily accessible through a virtual mountable file system, providing transparency for users. 3.",
                "DISTRIBUTED INDEXING Apocrita uses a distributed index for all the documents that are available on the Intranet.",
                "Each node will contain part of the full index, and be aware of what part of the index each other node has.",
                "A node will be able to contact each node that contains a unique portion of the index.",
                "In addition, each node has a separate local index of its own documents.",
                "But as discussed later, in the current implementation, each node has a copy of the entire index.",
                "Indexing of the documents is distributed.",
                "Therefore, if a node is in the process of indexing many documents, it will break up the work over the nodes.",
                "Once a nodes local index is updated with the new documents, the distributed index will then be updated.",
                "The current distributed indexing system consists of three separate modules: NodeController, FileSender, and NodeIndexer.",
                "The responsibility of each module is discussed later in this section. 3.1 Indexing Protocol The protocol we have designed for the distributed indexing is depicted in Figure 1.",
                "Figure 1.",
                "Apocrita distributed indexing protocol.",
                "IDLE QUERY: The IDLE QUERY is sent out from the initiating node to determine which other nodes may be able to help with the overall indexing process.",
                "There are no parameters sent with the command.",
                "The receiving node will respond with either a BUSY or IDLE command.",
                "If the IDLE command is received, the initiating node will add the responding node to a list of available distributed indexing helpers.",
                "In the case of a BUSY command being received, the responding node is ignored.",
                "BUSY: Once a node received an IDL QUERY, it will determine whether it can be considered a candidate for distributed indexing.",
                "This determination is based on the overall CPU usage of the node.",
                "If the node is using most of its CPU for other processes, the node will respond to the IDLE QUERY with a BUSY command.",
                "IDLE: As with the case of the BUSY response, the node receiving the IDLE QUERY will determine its eligibility for distributed indexing.",
                "To be considered a candidate for distributed indexing, the overall CPU usage must be at a minimum to all for dedicated indexing of the distributed documents.",
                "If this is the case, the node will respond with an IDLE command.",
                "<br>incoming file</br>: Once the initiating node assembles a set of idle nodes to assist with the distributed indexing, it will divide the documents to be sent to the nodes.",
                "To do this, it sends an <br>incoming file</br> message, which contains the name of the file as well as the size in bytes.",
                "After the <br>incoming file</br> command has been sent, the initiating node will begin to stream the file to the other node.",
                "The initiating node will loop through the files that are to be sent to the other node; each file stream being preceded by the <br>incoming file</br> command with the appropriate parameters.",
                "INDEX FILE: Once the indexing node has completed the indexing process of the set of files, it must send the resultant index back to the initiating node.",
                "The index is comprised of multiple files, which exist on the file system of the indexing node.",
                "As with the <br>incoming file</br> command, the indexing node streams each index file after sending an INDEX FILE command.",
                "The INDEX FILE command has two parameters: the first being the name of the index, and the second is the size of the file in bytes.",
                "SEND COMPLETE: When sending the sets of files for both the index and the files to be indexed, the node must notify the corresponding node when the process is complete.",
                "Once the initiating node is finished sending the set of documents to be indexed, it will then send a SEND COMPLETE command indicating to the indexing node that there are no more files and the node can proceed with indexing the files.",
                "In the case of the initiating node sending the index files, the indexing node will complete the transfer with the SEND COMPLETE command indicating to the initiating node that there are no more index files to be sent and the initiating node can then assemble those index files into the main index.",
                "The NodeController is responsible for setting up connections with nodes in the idle state to distribute the indexing process.",
                "Using JXTA [5], the node controller will obtain a set of nodes.",
                "This set of nodes is iterated and each one is sent the IDLE QUERY command.",
                "The nodes that respond with idle are then collected.",
                "The set of idle nodes includes the node initiating the distributed indexing process, referred to as the local node.",
                "Once the collection of idle nodes is obtained, the node updates the set of controllers and evenly divides the set of documents that are to be indexed.",
                "For example, if there are 100 documents and 10 nodes (including the local node) then each node will have 10 documents to index.",
                "For each indexing node an instance of the FileSender object is created.",
                "The FileSender is aware of the set of documents that node is responsible for.",
                "Once a FileSender object has been created for each node, the NodeController waits for each FileSender to complete.",
                "When the FileSender objects have completed the NodeController will take the resultant indexes from 175 each node and pass them to an instance of the IndexCompiler, which maintains the index and the list of FileSenders.",
                "Once the IndexCompiler has completed it will return to the idle state and activate the directory scanner to monitor the locally owned set of documents for changes that may require reindexing.",
                "The NodeIndexer is responsible for receiving documents sent to it by the initiating node and then indexing them using the Lucene engine [7].",
                "Once the indexing is complete the resulting index is streamed back to the initiating node as well as compiled in the indexer nodes own local index.",
                "Before initiating the indexing process it must be sent an IDLE QUERY message.",
                "This is the first command that sets off the indexing process.",
                "The indexer node will determine whether it is considered idle based on the current CPU usage.",
                "As outlined in the protocol section if the node is not being used and has a low overall CPU usage percentage it will return IDLE to the IDLE QUERY command.",
                "If the indexer nodes CPU usage is above 50% for a specified amount of time it is then considered to be busy and will respond to the IDLE QUERY command with BUSY.",
                "If a node is determined busy it returns to its listening state waiting for another IDLE QUERY from another initiating node.",
                "If the node is determined to be idle it will enter the state where it will receive files from the initiating node that it is responsible for indexing.",
                "Once all of the files are received by the initiating node, indicated by a SEND COMPLETE message, it starts an instance of the Lucene indexing engine.",
                "The files are stored in a temporary directory separate from the nodes local documents that it is responsible for maintaining an index of.",
                "The Lucene index writer then indexes all of the transferred files.",
                "The index is stored on the drive within a temporary directory separate from the current index.",
                "After the indexing of the files completes the indexer node enters the state where the index files are sent back to the initiating node.",
                "The indexer node loops through all of the files created by Lucenes IndexWriter and streams them to the initiating node.",
                "Once these files are sent back that index is then merged into the indexer nodes own full index of the existing files.",
                "It then enters the idle state where it will then listen for any other nodes that required distributing the indexing process.",
                "The FileSender object is the initiating node equivalent of the indexer node.",
                "It initiates the communication between the initiating node and the node that will assist in the distributed indexing.",
                "The initiating node runs many instances of the FileSender node one for each other node it has determined to be idle.",
                "Upon instantiation of the FileSender it is passed the node that it is responsible for contacting and the set of files that must be sent.",
                "The FileSenders first job is to send the files that are to be indexed by the other idle node.",
                "The files are streamed one at a time to the other node.",
                "It sends each file using the <br>incoming file</br> command.",
                "With that command it sends the name of the file being sent and the size in bytes.",
                "Once all files have been sent the FileSender sends the SEND COMPLETE command.",
                "The FileSender creates an instance of Lucenes IndexWriter and prepares to create the index in a temporary directory on the file system.",
                "The FileSender will begin to receive the files that are to be saved within the index.",
                "It receives an INDEX FILE command with the name of the files and the size in bytes.",
                "This file is then streamed into the temporary index directory on the FileSender node.",
                "After the transfer of the index files has been completed the FileSender notifies the instance of the index compiler that it is ready to combine the index.",
                "Each instance of the FileSender has its own unique section of temporary space to store the index that has been transferred back from the indexing node.",
                "When notifying the IndexCompiler it will also pass the location of the particular FileSenders directory location of that index. 4.",
                "PEER-TO-PEER DISTRIBUTION Apocrita uses a peer-to-peer distribution model in order to distribute files.",
                "Files are distributed solely from a serving node to a client node without regard for the availability of file pieces from other clients in the network.",
                "This means that the file transfers will be fast and efficient and should not severely affect the usability of serving nodes from the point of view of a local user.",
                "The JXTA framework [5] is used in order to implement peer-to-peer functionality.",
                "This has been decided due to the extremely shorttimeline of the project which allows us to take advantage of over five years of testing and development and support from many large organizations employing JXTA in their own products.",
                "We are not concerned with any potential quality problems because JXTA is considered to be the most mature and stable peer-to-peer framework available.",
                "Using JXTA terminology, there are three types of peers used in node classification.",
                "Edge peers are typically low-bandwidth, non-dedicated nodes.",
                "Due to these characteristics, edge peers are not used with Apocrita.",
                "Relay peers are typically higher-bandwidth, dedicated nodes.",
                "This is the classification of all nodes in the Apocrita network, and, as such, are the default classification used.",
                "Rendezvous peers are used to coordinate message passing between nodes in the Apocrita network.",
                "This means that a minimum of one rendezvous peer per subnet is required. 4.1 Peer Discovery The Apocrita server subsystem uses the JXTA Peer Discovery Protocol (PDP) in order to find participating peers within the network as shown in Figure 2.",
                "Figure 2.",
                "Apocrita peer discovery process. 176 The PDP listens for peer advertisements from other nodes in the Apocrita swarm.",
                "If a peer advertisement is detected, the server will attempt to join the peer group and start actively contributing to the network.",
                "If no peers are found by the discovery service, the server will create a new peer group and start advertising this peer group.",
                "This new peer group will be periodically advertised on the network; any new peers joining the network will attach to this peer group.",
                "A distinct advantage of using the JXTA PDP is that Apocrita does not have to be sensitive to particular networking nuances such as Maximum Transmission Unit (MTU).",
                "In addition, Apocrita does not have to support one-to-many packet delivery methods such as multicast and instead can rely on JXTA for this support. 4.2 Index Query Operation All nodes in the Apocrita swarm have a complete and up-to-date copy of the network index stored locally.",
                "This makes querying the index for search results trivial.",
                "Unlike the Gnutella protocol, a query does not have to propagate throughout the network.",
                "This also means that the time to return query results is very fast - much faster than protocols that rely on nodes in the network to pass the query throughout the network and then wait for results.",
                "This is demonstrated in Figure 3.",
                "Figure 3.",
                "Apocrita query operation.",
                "Each document in the swarm has a unique document identification number (ID).",
                "A node will query the index and a result will be returned with both the document ID number as well as a list of peers with a copy of the matched document ID.",
                "It is then the responsibility of the searching peer to contact the peers in the list to negotiate file transfer between the client and server. 5.",
                "PROTOTYPE IMPLEMENTATION Apocrita uses the Lucene framework [7], which is a project under development by the Apache Software Foundation.",
                "Apache Lucene is a high-performance, full-featured text search engine library written entirely in Java.",
                "In the current implementation, Apocrita is only capable of indexing plain text documents.",
                "Apocrita uses the JXTA framework [5] as a peer-to-peer transport library between nodes.",
                "JXTA is used to pass both messages and files between nodes in the search network.",
                "By using JXTA, Apocrita takes advantage of a reliable, and proven peer-to-peer transport mechanism.",
                "It uses the pipe facility in order to pass messages and files between nodes.",
                "The pipe facility provides many different types of pipe advertisements.",
                "This includes an unsecured unicast pipe, a secured unicast pipe, and a propagated unsecured pipe.",
                "Message passing is used to pass status messages between nodes in order to aid in indexing, searching, and retrieval.",
                "For example, a node attempting to find an idle node to participate in indexing will query nodes via the message facility.",
                "Idle nodes will reply with a status message to indicate they are available to start indexing.",
                "File passing is used within Apocrita for file transfer.",
                "After a file has been searched for and located within the peer group, a JXTA socket will be opened and file transfer will take place.",
                "A JXTA socket is similar to a standard Java socket, however a JXTA socket uses JXTA pipes in underlying network transport.",
                "File passing uses an unsecured unicast pipe in order to transfer data.",
                "File passing is also used within Apocrita for index transfer.",
                "Index transfer works exactly like a file transfer.",
                "In fact, the index transfer actually passes the index as a file.",
                "However, there is one key difference between file transfer and index transfer.",
                "In the case of file transfer, a socket is created between only two nodes.",
                "In the case of index transfer, a socket must be created between all nodes in the network in order to pass the index, which allows for all nodes to have a full and complete index of the entire network.",
                "In order to facilitate this transfer efficiently, index transfer will use an unsecured propagated pipe to communicate with all nodes in the Apocrita network. 6.",
                "PERFORMANCE EVALUATION It is difficult to objectively benchmark the results obtained through Apocrita because there is no other system currently available with the same goals as Apocrita.",
                "We have, however, evaluated the performance of the critical sections of the system.",
                "The critical sections were determined to be the processes that are the most time intensive.",
                "The evaluation was completed on standard lab computers on a 100Mb/s Ethernet LAN; the machines run Windows XP with a Pentium 4 CPU running at 2.4GHz with 512 MB of RAM.",
                "The indexing time has been run against both: the Time Magazine collection [8], which contains 432 documents and 83 queries and their most relevant results, and the NPL collection [8] that has a total of 11,429 documents and 93 queries with expected results.",
                "Each document ranges in size between 4KB and 8KB.",
                "As Figure 4 demonstrates, the number of nodes involved in the indexing process affects the time taken to complete the indexing processsometimes even drastically.",
                "Figure 4.",
                "Node vs. index time.",
                "The difference in going from one indexing node to two indexing nodes is the most drastic and equates to an indexing time 37% faster than a single indexing node.",
                "The different between two 177 indexing nodes and three indexing nodes is still significant and represents a 16% faster time than two indexing nodes.",
                "As the number of indexing nodes increases the results are less dramatic.",
                "This can be attributed to the time overhead associated with having many nodes perform indexing.",
                "The time needed to communicate with a node is constant, so as the number of nodes increases, this constant becomes more prevalent.",
                "Also, the complexity of joining the indexing results is a complex operation and is complicated further as the number of indexing nodes increases.",
                "Socket performance is also a very important part of Apocrita.",
                "Benchmarks were performed using a 65MB file on a system with both the client and server running locally.",
                "This was done to isolate possible network issues.",
                "Although less drastic, similar results were shown when the client and server run on independent hardware.",
                "In order to mitigate possible unexpected errors, each test was run 10 times.",
                "Figure 5.",
                "Java sockets vs. JXTA sockets.",
                "As Figure 5 demonstrates, the performance of JXTA sockets is abysmal as compared to the performance of standard Java sockets.",
                "The minimum transfer rate obtained using Java sockets is 81,945KB/s while the minimum transfer rater obtained using JXTA sockets is much lower at 3, 805KB/s.",
                "The maximum transfer rater obtain using Java sockets is 97,412KB/s while the maximum transfer rate obtained using JXTA sockets is 5,530KB/s.",
                "Finally, the average transfer rate using Java sockets is 87,540KB/s while the average transfer rate using JXTA sockets is 4,293KB/s.",
                "The major problem found in these benchmarks is that the underlying network transport mechanism does not perform as quickly or efficiently as expected.",
                "In order to garner a performance increase, the JXTA framework needs to be substituted with a more traditional approach.",
                "The indexing time is also a bottleneck and will need to be improved for the overall quality of Apocrita to be improved. 7.",
                "RELATED WORK Several decentralized P2P systems [1, 2, 3] exist today that Apocrita features some of their functionality.",
                "However, Apocrita also has unique novel searching and indexing features that make this system unique.",
                "For example, Majestic-12 [4] is a distributed search and indexing project designed for searching the Internet.",
                "Each user would install a client, which is responsible for indexing a portion of the web.",
                "A central area for querying the index is available on the Majestic-12 web page.",
                "The index itself is not distributed, only the act of indexing is distributed.",
                "The distributed indexing aspect of this project most closely relates Apocrita goals.",
                "YaCy [6] is a peer-to-peer web search application.",
                "YaCy consists of a web crawler, an indexer, a built-in database engine, and a p2p index exchange protocol.",
                "YaCy is designed to maintain a distributed index of the Internet.",
                "It used a distributed hash table (DHT) to maintain the index.",
                "The local node is used to query but all results that are returned are accessible on the Internet.",
                "YaCy used many peers and DHT to maintain a distributed index.",
                "Apocrita will also use a distributed index in future implementations and may benefit from using an implementation of a DHT.",
                "YaCy however, is designed as a web search engine and, as such solves a much different problem than Apocrita. 8.",
                "CONCLUSIONS AND FUTURE WORK We presented Apocrita, a distributed P2P searching and indexing system intended for network users on an Intranet.",
                "It can help organizations with no network file server or necessary network infrastructure to share documents.",
                "It eliminates the need for documents to be manually shared among users while being edited and reduce the possibility of conflicting versions being distributed.",
                "A proof of concept prototype has been constructed, but the results from measuring the network transport mechanism and the indexing time were not as impressive as initially envisioned.",
                "Despite these shortcomings, the experience gained from the design and implementation of Apocrita has given us more insight into building challenging distributed systems.",
                "For future work, Apocrita will have a smart content distribution model in which a single instance of a file can intelligently and transparently replicate throughout the network to ensure a copy of every important file will always be available regardless of the availability of specific nodes in the network.",
                "In addition, we plan to integrate a revision control system into the content distribution portion of Apocrita so that users could have the ability to update an existing file that they found and have the old revision maintained and the new revision propagated.",
                "Finally, the current implementation has some overhead and redundancy due to the fact that the entire index is maintained on each individual node, we plan to design a distributed index. 9.",
                "REFERENCES [1] Rodrigues, R., Liskov, B., Shrira, L.: The Design of a Robust Peer-to-Peer System.",
                "Available online: http://www.pmg.lcs.mit.edu/~rodrigo/ew02-robust.pdf. [2] Chawathe, Y., Ratnasamy, S., Breslau, L., Lanham, N., and Chenker, S.: Making Gnutella-like P2P Systems Scalable.",
                "In Proceedings of SIGCOMM03, Karlsruhe, Germany. [3] Harvest: A Distributed Search System: http://harvest.sourceforge.net. [4] Majestic-12: Distributed Search Engine: http://www.majestic12.co.uk. [5] JXTA: http://www.jxta.org. [6] YaCy: Distributed P2P-based Web Indexing: http://www.yacy.net/yacy. [7] Lucene Search Engine Library: http://lucene.apache.org. [8] Test Collections (Time Magazine and NPL): www.dcs.gla.ac.uk/idom/ir_resources/test_collections. 178"
            ],
            "original_annotated_samples": [
                "<br>incoming file</br>: Once the initiating node assembles a set of idle nodes to assist with the distributed indexing, it will divide the documents to be sent to the nodes.",
                "To do this, it sends an <br>incoming file</br> message, which contains the name of the file as well as the size in bytes.",
                "After the <br>incoming file</br> command has been sent, the initiating node will begin to stream the file to the other node.",
                "The initiating node will loop through the files that are to be sent to the other node; each file stream being preceded by the <br>incoming file</br> command with the appropriate parameters.",
                "As with the <br>incoming file</br> command, the indexing node streams each index file after sending an INDEX FILE command."
            ],
            "translated_annotated_samples": [
                "ARCHIVO ENTRANTE: Una vez que el nodo iniciador reúne un conjunto de nodos inactivos para ayudar con la indexación distribuida, dividirá los documentos que se enviarán a los nodos.",
                "Para hacer esto, envía un mensaje de ARCHIVO ENTRANTE, que contiene el nombre del archivo y su tamaño en bytes.",
                "Después de que se haya enviado el comando ARCHIVO ENTRANTE, el nodo iniciador comenzará a transmitir el archivo al otro nodo.",
                "El nodo iniciador recorrerá los archivos que se enviarán al otro nodo; cada flujo de archivo estará precedido por el comando ARCHIVO ENTRANTE con los parámetros apropiados.",
                "Al igual que con el comando INCOMING FILE, el nodo de indexación transmite cada <br>archivo de índice</br> después de enviar un comando INDEX FILE."
            ],
            "translated_text": "Apocrita: Un sistema de intercambio de archivos distribuido de igual a igual para intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Computación Distribuida y Tecnología Inalámbrica y de Telecomunicaciones Universidad de Guelph-Humber Toronto, ON, M9W 5L7 Canadá {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca RESUMEN Muchas organizaciones necesitan redactar documentos para diversos fines, y es posible que estos documentos deban ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un documento. En algunos casos, estos documentos son compartidos entre autores, a través de correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento. Incluso puede haber varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario. Otro problema surge cuando un documento está disponible en la máquina de un usuario y ese usuario está desconectado, en cuyo caso el documento ya no es accesible. En este artículo presentamos Apocrita, un revolucionario sistema distribuido de intercambio de archivos P2P para intranets. Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos - Aplicaciones Distribuidas. Términos generales Diseño, Experimentación, Rendimiento. 1. INTRODUCCIÓN El paradigma de computación Peer-to-Peer (P2P) se está convirtiendo en una forma completamente nueva de compartir recursos mutuos a través de Internet. Con el acceso cada vez más común a Internet de banda ancha, la tecnología P2P finalmente se ha convertido en una forma viable de compartir documentos y archivos multimedia. Ya existen programas en el mercado que permiten compartir archivos P2P. Estos programas permiten a millones de usuarios compartir archivos entre ellos. Si bien la utilización de clientes P2P ya es un gran avance en comparación con descargar archivos de sitios web, el uso de dichos programas no está exento de problemas. Los archivos descargados todavía requieren mucho manejo manual por parte del usuario. El usuario todavía necesita colocar los archivos en el directorio adecuado, gestionar archivos con múltiples versiones, eliminar los archivos cuando ya no se deseen. Nos esforzamos por hacer que el proceso de compartir documentos dentro de una Intranet sea más fácil. Muchas organizaciones están obligadas a redactar documentos para diversos fines, y dichos documentos pueden necesitar ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un documento. En algunos casos, estos documentos son enviados entre autores, por correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o que se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento. Puede haber incluso varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario. Además, algunas organizaciones no cuentan con un servidor de intercambio de archivos o la infraestructura de red necesaria para habilitar uno. En este artículo presentamos Apocrita, que es un sistema de intercambio de archivos P2P distribuido y rentable para dichas organizaciones. El resto de este documento está organizado de la siguiente manera. En la sección 2, presentamos Apocrita. El mecanismo de indexación distribuida y el protocolo se presentan en la Sección 3. La sección 4 presenta el modelo de distribución peer-to-peer. Se presenta un prototipo de prueba de concepto en la Sección 5, y las evaluaciones de rendimiento se discuten en la Sección 6. El trabajo relacionado se presenta en la Sección 7, y finalmente las conclusiones y el trabajo futuro se discuten en la Sección 8. Apocrita es un sistema de intercambio de archivos entre pares distribuido, y ha sido diseñado para facilitar la búsqueda de documentos en un entorno de Intranet. Actualmente, es posible que los documentos se encuentren en la máquina de un usuario o en una máquina remota. Es incluso posible que diferentes revisiones puedan residir en cada nodo de la Intranet. Esto significa que debe haber un proceso manual para mantener las versiones de los documentos. Apocrita resuelve este problema utilizando dos enfoques. Primero, debido a la naturaleza inherente de Apocrita, el documento solo residirá en una ubicación lógica única. En segundo lugar, Apocrita proporciona un método para revertir a versiones anteriores de documentos. Se concede el permiso de hacer copias digitales o impresas de todo o parte de este trabajo para uso personal o en el aula sin cargo alguno, siempre y cuando las copias no se realicen ni distribuyan con fines de lucro o ventaja comercial, y que las copias lleven este aviso y la cita completa en la primera página. Para copiar de otra manera, o republicar, publicar en servidores o redistribuir en listas, se requiere permiso específico previo y/o un pago. ACMSE07, 23-24 DE MARZO DE 2007, WINSTON-SALEM, NC, EE. UU. COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 también distribuirá documentos en múltiples máquinas para garantizar la alta disponibilidad de documentos importantes. Por ejemplo, si una máquina contiene un documento importante y actualmente no es accesible, el sistema es capaz de mantener la disponibilidad del documento a través de este mecanismo de distribución. Proporciona una interfaz sencilla para buscar y acceder a archivos que pueden existir tanto local como remotamente. La naturaleza distribuida de los documentos es transparente para el usuario. Apocrita apoya un modelo de red descentralizada en el que los pares utilizan un protocolo de descubrimiento para determinar los pares. Apocrita está destinado para usuarios de red en una Intranet. El enfoque principal son las organizaciones que pueden no tener una red lo suficientemente grande como para necesitar un servidor de archivos y la infraestructura de soporte. Elimina la necesidad de que los documentos sean compartidos manualmente entre usuarios mientras se editan y reduce la posibilidad de que se distribuyan versiones conflictivas. El sistema también proporciona cierta redundancia y en caso de fallo de una máquina, no se perderán documentos importantes. Es independiente del sistema operativo y fácil de acceder a través de un navegador web o mediante una aplicación independiente. Para disminuir el tiempo requerido para indexar una gran cantidad de documentos, el proceso de indexación se distribuye entre los nodos inactivos disponibles. Los archivos locales y remotos deben ser fácilmente accesibles a través de un sistema de archivos virtual montable, proporcionando transparencia para los usuarios. Apocrita utiliza un índice distribuido para todos los documentos disponibles en la intranet. Cada nodo contendrá una parte del índice completo y estará al tanto de qué parte del índice tiene cada otro nodo. Un nodo podrá contactar a cada nodo que contenga una porción única del índice. Además, cada nodo tiene un índice local separado de sus propios documentos. Pero como se discutió más tarde, en la implementación actual, cada nodo tiene una copia de todo el índice. La indexación de los documentos está distribuida. Por lo tanto, si un nodo está en proceso de indexar muchos documentos, distribuirá el trabajo entre los nodos. Una vez que el índice local de un nodo se actualiza con los nuevos documentos, entonces se actualizará el índice distribuido. El sistema de indexación distribuida actual consta de tres módulos separados: NodeController, FileSender y NodeIndexer. La responsabilidad de cada módulo se discute más adelante en esta sección. 3.1 Protocolo de indexación El protocolo que hemos diseñado para la indexación distribuida se muestra en la Figura 1. Figura 1. Protocolo de indexación distribuida Apocrita. La CONSULTA INACTIVA se envía desde el nodo iniciador para determinar qué otros nodos pueden ayudar con el proceso de indexación en general. No se enviaron parámetros con el comando. El nodo receptor responderá con un comando BUSY o IDLE. Si se recibe el comando IDLE, el nodo iniciador agregará el nodo que responde a una lista de ayudantes de indexación distribuida disponibles. En caso de recibir un comando OCUPADO, el nodo que responde es ignorado. OCUPADO: Una vez que un nodo recibe una CONSULTA IDL, determinará si puede considerarse un candidato para la indexación distribuida. Esta determinación se basa en el uso general de la CPU del nodo. Si el nodo está utilizando la mayor parte de su CPU para otros procesos, el nodo responderá a la CONSULTA DE INACTIVIDAD con un comando OCUPADO. Como en el caso de la respuesta BUSY, el nodo que recibe la CONSULTA DE INACTIVIDAD determinará su elegibilidad para la indexación distribuida. Para ser considerado un candidato para la indexación distribuida, el uso total de la CPU debe ser mínimo para permitir la indexación dedicada de los documentos distribuidos. Si este es el caso, el nodo responderá con un comando IDLE. ARCHIVO ENTRANTE: Una vez que el nodo iniciador reúne un conjunto de nodos inactivos para ayudar con la indexación distribuida, dividirá los documentos que se enviarán a los nodos. Para hacer esto, envía un mensaje de ARCHIVO ENTRANTE, que contiene el nombre del archivo y su tamaño en bytes. Después de que se haya enviado el comando ARCHIVO ENTRANTE, el nodo iniciador comenzará a transmitir el archivo al otro nodo. El nodo iniciador recorrerá los archivos que se enviarán al otro nodo; cada flujo de archivo estará precedido por el comando ARCHIVO ENTRANTE con los parámetros apropiados. ARCHIVO DE ÍNDICE: Una vez que el nodo de indexación haya completado el proceso de indexación del conjunto de archivos, debe enviar el índice resultante de vuelta al nodo iniciador. El índice está compuesto por varios archivos, que existen en el sistema de archivos del nodo de indexación. Al igual que con el comando INCOMING FILE, el nodo de indexación transmite cada <br>archivo de índice</br> después de enviar un comando INDEX FILE. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "p2p searching": {
            "translated_key": "búsqueda e indexación P2P",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Apocrita: A Distributed Peer-to-Peer File Sharing System for Intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Distributed Computing and Wireless & Telecommunications Technology University of Guelph-Humber Toronto, ON, M9W 5L7 Canada {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca ABSTRACT Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all member of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are shared between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Another problem arises when a document is made available on a users machine and that user is offline, in which case the document is no longer accessible.",
                "In this paper we present Apocrita, a revolutionary distributed P2P file sharing system for Intranets.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Distributed applications.",
                "General Terms Design, Experimentation, Performance. 1.",
                "INTRODUCTION The Peer-to-Peer (P2P) computing paradigm is becoming a completely new form of mutual resource sharing over the Internet.",
                "With the increasingly common place broadband Internet access, P2P technology has finally become a viable way to share documents and media files.",
                "There are already programs on the market that enable P2P file sharing.",
                "These programs enable millions of users to share files among themselves.",
                "While the utilization of P2P clients is already a gigantic step forward compared to downloading files off websites, using such programs are not without their problems.",
                "The downloaded files still require a lot of manual management by the user.",
                "The user still needs to put the files in the proper directory, manage files with multiple versions, delete the files when they are no longer wanted.",
                "We strive to make the process of sharing documents within an Intranet easier.",
                "Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all members of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are sent between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Furthermore, some organizations do not have a file sharing server or the necessary network infrastructure to enable one.",
                "In this paper we present Apocrita, which is a cost-effective distributed P2P file sharing system for such organizations.",
                "The rest of this paper is organized as follows.",
                "In section 2, we present Apocrita.",
                "The distributed indexing mechanism and protocol are presented in Section 3.",
                "Section 4 presents the peer-topeer distribution model.",
                "A proof of concept prototype is presented in Section 5, and performance evaluations are discussed in Section 6.",
                "Related work is presented is Section 7, and finally conclusions and future work are discussed in Section 8. 2.",
                "APOCRITA Apocrita is a distributed peer-to-peer file sharing system, and has been designed to make finding documents easier in an Intranet environment.",
                "Currently, it is possible for documents to be located on a users machine or on a remote machine.",
                "It is even possible that different revisions could reside on each node on the Intranet.",
                "This means there must be a manual process to maintain document versions.",
                "Apocrita solves this problem using two approaches.",
                "First, due to the inherent nature of Apocrita, the document will only reside on a single logical location.",
                "Second, Apocrita provides a method of reverting to previous document versions.",
                "Apocrita Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page.",
                "To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.",
                "ACMSE07, MARCH 23-24, 2007, WINSTON-SALEM, NC, USA.",
                "COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 will also distribute documents across multiple machines to ensure high availability of important documents.",
                "For example, if a machine contains an important document and the machine is currently inaccessible, the system is capable of maintaining availability of the document through this distribution mechanism.",
                "It provides a simple interface for searching and accessing files that may exist either locally or remotely.",
                "The distributed nature of the documents is transparent to the user.",
                "Apocrita supports a decentralized network model where the peers use a discovery protocol to determine peers.",
                "Apocrita is intended for network users on an Intranet.",
                "The main focus is organizations that may not have a network large enough to require a file server and supporting infrastructure.",
                "It eliminates the need for documents to be manually shared between users while being edited and reduces the possibility of conflicting versions being distributed.",
                "The system also provides some redundancy and in the event of a single machine failure, no important documents will be lost.",
                "It is operating system independent, and easy to access through a web browser or through a standalone application.",
                "To decrease the time required for indexing a large number of documents, the indexing process is distributed across available idle nodes.",
                "Local and remote files should be easily accessible through a virtual mountable file system, providing transparency for users. 3.",
                "DISTRIBUTED INDEXING Apocrita uses a distributed index for all the documents that are available on the Intranet.",
                "Each node will contain part of the full index, and be aware of what part of the index each other node has.",
                "A node will be able to contact each node that contains a unique portion of the index.",
                "In addition, each node has a separate local index of its own documents.",
                "But as discussed later, in the current implementation, each node has a copy of the entire index.",
                "Indexing of the documents is distributed.",
                "Therefore, if a node is in the process of indexing many documents, it will break up the work over the nodes.",
                "Once a nodes local index is updated with the new documents, the distributed index will then be updated.",
                "The current distributed indexing system consists of three separate modules: NodeController, FileSender, and NodeIndexer.",
                "The responsibility of each module is discussed later in this section. 3.1 Indexing Protocol The protocol we have designed for the distributed indexing is depicted in Figure 1.",
                "Figure 1.",
                "Apocrita distributed indexing protocol.",
                "IDLE QUERY: The IDLE QUERY is sent out from the initiating node to determine which other nodes may be able to help with the overall indexing process.",
                "There are no parameters sent with the command.",
                "The receiving node will respond with either a BUSY or IDLE command.",
                "If the IDLE command is received, the initiating node will add the responding node to a list of available distributed indexing helpers.",
                "In the case of a BUSY command being received, the responding node is ignored.",
                "BUSY: Once a node received an IDL QUERY, it will determine whether it can be considered a candidate for distributed indexing.",
                "This determination is based on the overall CPU usage of the node.",
                "If the node is using most of its CPU for other processes, the node will respond to the IDLE QUERY with a BUSY command.",
                "IDLE: As with the case of the BUSY response, the node receiving the IDLE QUERY will determine its eligibility for distributed indexing.",
                "To be considered a candidate for distributed indexing, the overall CPU usage must be at a minimum to all for dedicated indexing of the distributed documents.",
                "If this is the case, the node will respond with an IDLE command.",
                "INCOMING FILE: Once the initiating node assembles a set of idle nodes to assist with the distributed indexing, it will divide the documents to be sent to the nodes.",
                "To do this, it sends an INCOMING FILE message, which contains the name of the file as well as the size in bytes.",
                "After the INCOMING FILE command has been sent, the initiating node will begin to stream the file to the other node.",
                "The initiating node will loop through the files that are to be sent to the other node; each file stream being preceded by the INCOMING FILE command with the appropriate parameters.",
                "INDEX FILE: Once the indexing node has completed the indexing process of the set of files, it must send the resultant index back to the initiating node.",
                "The index is comprised of multiple files, which exist on the file system of the indexing node.",
                "As with the INCOMING FILE command, the indexing node streams each index file after sending an INDEX FILE command.",
                "The INDEX FILE command has two parameters: the first being the name of the index, and the second is the size of the file in bytes.",
                "SEND COMPLETE: When sending the sets of files for both the index and the files to be indexed, the node must notify the corresponding node when the process is complete.",
                "Once the initiating node is finished sending the set of documents to be indexed, it will then send a SEND COMPLETE command indicating to the indexing node that there are no more files and the node can proceed with indexing the files.",
                "In the case of the initiating node sending the index files, the indexing node will complete the transfer with the SEND COMPLETE command indicating to the initiating node that there are no more index files to be sent and the initiating node can then assemble those index files into the main index.",
                "The NodeController is responsible for setting up connections with nodes in the idle state to distribute the indexing process.",
                "Using JXTA [5], the node controller will obtain a set of nodes.",
                "This set of nodes is iterated and each one is sent the IDLE QUERY command.",
                "The nodes that respond with idle are then collected.",
                "The set of idle nodes includes the node initiating the distributed indexing process, referred to as the local node.",
                "Once the collection of idle nodes is obtained, the node updates the set of controllers and evenly divides the set of documents that are to be indexed.",
                "For example, if there are 100 documents and 10 nodes (including the local node) then each node will have 10 documents to index.",
                "For each indexing node an instance of the FileSender object is created.",
                "The FileSender is aware of the set of documents that node is responsible for.",
                "Once a FileSender object has been created for each node, the NodeController waits for each FileSender to complete.",
                "When the FileSender objects have completed the NodeController will take the resultant indexes from 175 each node and pass them to an instance of the IndexCompiler, which maintains the index and the list of FileSenders.",
                "Once the IndexCompiler has completed it will return to the idle state and activate the directory scanner to monitor the locally owned set of documents for changes that may require reindexing.",
                "The NodeIndexer is responsible for receiving documents sent to it by the initiating node and then indexing them using the Lucene engine [7].",
                "Once the indexing is complete the resulting index is streamed back to the initiating node as well as compiled in the indexer nodes own local index.",
                "Before initiating the indexing process it must be sent an IDLE QUERY message.",
                "This is the first command that sets off the indexing process.",
                "The indexer node will determine whether it is considered idle based on the current CPU usage.",
                "As outlined in the protocol section if the node is not being used and has a low overall CPU usage percentage it will return IDLE to the IDLE QUERY command.",
                "If the indexer nodes CPU usage is above 50% for a specified amount of time it is then considered to be busy and will respond to the IDLE QUERY command with BUSY.",
                "If a node is determined busy it returns to its listening state waiting for another IDLE QUERY from another initiating node.",
                "If the node is determined to be idle it will enter the state where it will receive files from the initiating node that it is responsible for indexing.",
                "Once all of the files are received by the initiating node, indicated by a SEND COMPLETE message, it starts an instance of the Lucene indexing engine.",
                "The files are stored in a temporary directory separate from the nodes local documents that it is responsible for maintaining an index of.",
                "The Lucene index writer then indexes all of the transferred files.",
                "The index is stored on the drive within a temporary directory separate from the current index.",
                "After the indexing of the files completes the indexer node enters the state where the index files are sent back to the initiating node.",
                "The indexer node loops through all of the files created by Lucenes IndexWriter and streams them to the initiating node.",
                "Once these files are sent back that index is then merged into the indexer nodes own full index of the existing files.",
                "It then enters the idle state where it will then listen for any other nodes that required distributing the indexing process.",
                "The FileSender object is the initiating node equivalent of the indexer node.",
                "It initiates the communication between the initiating node and the node that will assist in the distributed indexing.",
                "The initiating node runs many instances of the FileSender node one for each other node it has determined to be idle.",
                "Upon instantiation of the FileSender it is passed the node that it is responsible for contacting and the set of files that must be sent.",
                "The FileSenders first job is to send the files that are to be indexed by the other idle node.",
                "The files are streamed one at a time to the other node.",
                "It sends each file using the INCOMING FILE command.",
                "With that command it sends the name of the file being sent and the size in bytes.",
                "Once all files have been sent the FileSender sends the SEND COMPLETE command.",
                "The FileSender creates an instance of Lucenes IndexWriter and prepares to create the index in a temporary directory on the file system.",
                "The FileSender will begin to receive the files that are to be saved within the index.",
                "It receives an INDEX FILE command with the name of the files and the size in bytes.",
                "This file is then streamed into the temporary index directory on the FileSender node.",
                "After the transfer of the index files has been completed the FileSender notifies the instance of the index compiler that it is ready to combine the index.",
                "Each instance of the FileSender has its own unique section of temporary space to store the index that has been transferred back from the indexing node.",
                "When notifying the IndexCompiler it will also pass the location of the particular FileSenders directory location of that index. 4.",
                "PEER-TO-PEER DISTRIBUTION Apocrita uses a peer-to-peer distribution model in order to distribute files.",
                "Files are distributed solely from a serving node to a client node without regard for the availability of file pieces from other clients in the network.",
                "This means that the file transfers will be fast and efficient and should not severely affect the usability of serving nodes from the point of view of a local user.",
                "The JXTA framework [5] is used in order to implement peer-to-peer functionality.",
                "This has been decided due to the extremely shorttimeline of the project which allows us to take advantage of over five years of testing and development and support from many large organizations employing JXTA in their own products.",
                "We are not concerned with any potential quality problems because JXTA is considered to be the most mature and stable peer-to-peer framework available.",
                "Using JXTA terminology, there are three types of peers used in node classification.",
                "Edge peers are typically low-bandwidth, non-dedicated nodes.",
                "Due to these characteristics, edge peers are not used with Apocrita.",
                "Relay peers are typically higher-bandwidth, dedicated nodes.",
                "This is the classification of all nodes in the Apocrita network, and, as such, are the default classification used.",
                "Rendezvous peers are used to coordinate message passing between nodes in the Apocrita network.",
                "This means that a minimum of one rendezvous peer per subnet is required. 4.1 Peer Discovery The Apocrita server subsystem uses the JXTA Peer Discovery Protocol (PDP) in order to find participating peers within the network as shown in Figure 2.",
                "Figure 2.",
                "Apocrita peer discovery process. 176 The PDP listens for peer advertisements from other nodes in the Apocrita swarm.",
                "If a peer advertisement is detected, the server will attempt to join the peer group and start actively contributing to the network.",
                "If no peers are found by the discovery service, the server will create a new peer group and start advertising this peer group.",
                "This new peer group will be periodically advertised on the network; any new peers joining the network will attach to this peer group.",
                "A distinct advantage of using the JXTA PDP is that Apocrita does not have to be sensitive to particular networking nuances such as Maximum Transmission Unit (MTU).",
                "In addition, Apocrita does not have to support one-to-many packet delivery methods such as multicast and instead can rely on JXTA for this support. 4.2 Index Query Operation All nodes in the Apocrita swarm have a complete and up-to-date copy of the network index stored locally.",
                "This makes querying the index for search results trivial.",
                "Unlike the Gnutella protocol, a query does not have to propagate throughout the network.",
                "This also means that the time to return query results is very fast - much faster than protocols that rely on nodes in the network to pass the query throughout the network and then wait for results.",
                "This is demonstrated in Figure 3.",
                "Figure 3.",
                "Apocrita query operation.",
                "Each document in the swarm has a unique document identification number (ID).",
                "A node will query the index and a result will be returned with both the document ID number as well as a list of peers with a copy of the matched document ID.",
                "It is then the responsibility of the searching peer to contact the peers in the list to negotiate file transfer between the client and server. 5.",
                "PROTOTYPE IMPLEMENTATION Apocrita uses the Lucene framework [7], which is a project under development by the Apache Software Foundation.",
                "Apache Lucene is a high-performance, full-featured text search engine library written entirely in Java.",
                "In the current implementation, Apocrita is only capable of indexing plain text documents.",
                "Apocrita uses the JXTA framework [5] as a peer-to-peer transport library between nodes.",
                "JXTA is used to pass both messages and files between nodes in the search network.",
                "By using JXTA, Apocrita takes advantage of a reliable, and proven peer-to-peer transport mechanism.",
                "It uses the pipe facility in order to pass messages and files between nodes.",
                "The pipe facility provides many different types of pipe advertisements.",
                "This includes an unsecured unicast pipe, a secured unicast pipe, and a propagated unsecured pipe.",
                "Message passing is used to pass status messages between nodes in order to aid in indexing, searching, and retrieval.",
                "For example, a node attempting to find an idle node to participate in indexing will query nodes via the message facility.",
                "Idle nodes will reply with a status message to indicate they are available to start indexing.",
                "File passing is used within Apocrita for file transfer.",
                "After a file has been searched for and located within the peer group, a JXTA socket will be opened and file transfer will take place.",
                "A JXTA socket is similar to a standard Java socket, however a JXTA socket uses JXTA pipes in underlying network transport.",
                "File passing uses an unsecured unicast pipe in order to transfer data.",
                "File passing is also used within Apocrita for index transfer.",
                "Index transfer works exactly like a file transfer.",
                "In fact, the index transfer actually passes the index as a file.",
                "However, there is one key difference between file transfer and index transfer.",
                "In the case of file transfer, a socket is created between only two nodes.",
                "In the case of index transfer, a socket must be created between all nodes in the network in order to pass the index, which allows for all nodes to have a full and complete index of the entire network.",
                "In order to facilitate this transfer efficiently, index transfer will use an unsecured propagated pipe to communicate with all nodes in the Apocrita network. 6.",
                "PERFORMANCE EVALUATION It is difficult to objectively benchmark the results obtained through Apocrita because there is no other system currently available with the same goals as Apocrita.",
                "We have, however, evaluated the performance of the critical sections of the system.",
                "The critical sections were determined to be the processes that are the most time intensive.",
                "The evaluation was completed on standard lab computers on a 100Mb/s Ethernet LAN; the machines run Windows XP with a Pentium 4 CPU running at 2.4GHz with 512 MB of RAM.",
                "The indexing time has been run against both: the Time Magazine collection [8], which contains 432 documents and 83 queries and their most relevant results, and the NPL collection [8] that has a total of 11,429 documents and 93 queries with expected results.",
                "Each document ranges in size between 4KB and 8KB.",
                "As Figure 4 demonstrates, the number of nodes involved in the indexing process affects the time taken to complete the indexing processsometimes even drastically.",
                "Figure 4.",
                "Node vs. index time.",
                "The difference in going from one indexing node to two indexing nodes is the most drastic and equates to an indexing time 37% faster than a single indexing node.",
                "The different between two 177 indexing nodes and three indexing nodes is still significant and represents a 16% faster time than two indexing nodes.",
                "As the number of indexing nodes increases the results are less dramatic.",
                "This can be attributed to the time overhead associated with having many nodes perform indexing.",
                "The time needed to communicate with a node is constant, so as the number of nodes increases, this constant becomes more prevalent.",
                "Also, the complexity of joining the indexing results is a complex operation and is complicated further as the number of indexing nodes increases.",
                "Socket performance is also a very important part of Apocrita.",
                "Benchmarks were performed using a 65MB file on a system with both the client and server running locally.",
                "This was done to isolate possible network issues.",
                "Although less drastic, similar results were shown when the client and server run on independent hardware.",
                "In order to mitigate possible unexpected errors, each test was run 10 times.",
                "Figure 5.",
                "Java sockets vs. JXTA sockets.",
                "As Figure 5 demonstrates, the performance of JXTA sockets is abysmal as compared to the performance of standard Java sockets.",
                "The minimum transfer rate obtained using Java sockets is 81,945KB/s while the minimum transfer rater obtained using JXTA sockets is much lower at 3, 805KB/s.",
                "The maximum transfer rater obtain using Java sockets is 97,412KB/s while the maximum transfer rate obtained using JXTA sockets is 5,530KB/s.",
                "Finally, the average transfer rate using Java sockets is 87,540KB/s while the average transfer rate using JXTA sockets is 4,293KB/s.",
                "The major problem found in these benchmarks is that the underlying network transport mechanism does not perform as quickly or efficiently as expected.",
                "In order to garner a performance increase, the JXTA framework needs to be substituted with a more traditional approach.",
                "The indexing time is also a bottleneck and will need to be improved for the overall quality of Apocrita to be improved. 7.",
                "RELATED WORK Several decentralized P2P systems [1, 2, 3] exist today that Apocrita features some of their functionality.",
                "However, Apocrita also has unique novel searching and indexing features that make this system unique.",
                "For example, Majestic-12 [4] is a distributed search and indexing project designed for searching the Internet.",
                "Each user would install a client, which is responsible for indexing a portion of the web.",
                "A central area for querying the index is available on the Majestic-12 web page.",
                "The index itself is not distributed, only the act of indexing is distributed.",
                "The distributed indexing aspect of this project most closely relates Apocrita goals.",
                "YaCy [6] is a peer-to-peer web search application.",
                "YaCy consists of a web crawler, an indexer, a built-in database engine, and a p2p index exchange protocol.",
                "YaCy is designed to maintain a distributed index of the Internet.",
                "It used a distributed hash table (DHT) to maintain the index.",
                "The local node is used to query but all results that are returned are accessible on the Internet.",
                "YaCy used many peers and DHT to maintain a distributed index.",
                "Apocrita will also use a distributed index in future implementations and may benefit from using an implementation of a DHT.",
                "YaCy however, is designed as a web search engine and, as such solves a much different problem than Apocrita. 8.",
                "CONCLUSIONS AND FUTURE WORK We presented Apocrita, a distributed <br>p2p searching</br> and indexing system intended for network users on an Intranet.",
                "It can help organizations with no network file server or necessary network infrastructure to share documents.",
                "It eliminates the need for documents to be manually shared among users while being edited and reduce the possibility of conflicting versions being distributed.",
                "A proof of concept prototype has been constructed, but the results from measuring the network transport mechanism and the indexing time were not as impressive as initially envisioned.",
                "Despite these shortcomings, the experience gained from the design and implementation of Apocrita has given us more insight into building challenging distributed systems.",
                "For future work, Apocrita will have a smart content distribution model in which a single instance of a file can intelligently and transparently replicate throughout the network to ensure a copy of every important file will always be available regardless of the availability of specific nodes in the network.",
                "In addition, we plan to integrate a revision control system into the content distribution portion of Apocrita so that users could have the ability to update an existing file that they found and have the old revision maintained and the new revision propagated.",
                "Finally, the current implementation has some overhead and redundancy due to the fact that the entire index is maintained on each individual node, we plan to design a distributed index. 9.",
                "REFERENCES [1] Rodrigues, R., Liskov, B., Shrira, L.: The Design of a Robust Peer-to-Peer System.",
                "Available online: http://www.pmg.lcs.mit.edu/~rodrigo/ew02-robust.pdf. [2] Chawathe, Y., Ratnasamy, S., Breslau, L., Lanham, N., and Chenker, S.: Making Gnutella-like P2P Systems Scalable.",
                "In Proceedings of SIGCOMM03, Karlsruhe, Germany. [3] Harvest: A Distributed Search System: http://harvest.sourceforge.net. [4] Majestic-12: Distributed Search Engine: http://www.majestic12.co.uk. [5] JXTA: http://www.jxta.org. [6] YaCy: Distributed P2P-based Web Indexing: http://www.yacy.net/yacy. [7] Lucene Search Engine Library: http://lucene.apache.org. [8] Test Collections (Time Magazine and NPL): www.dcs.gla.ac.uk/idom/ir_resources/test_collections. 178"
            ],
            "original_annotated_samples": [
                "CONCLUSIONS AND FUTURE WORK We presented Apocrita, a distributed <br>p2p searching</br> and indexing system intended for network users on an Intranet."
            ],
            "translated_annotated_samples": [
                "CONCLUSIONES Y TRABAJO FUTURO Presentamos Apocrita, un sistema distribuido de <br>búsqueda e indexación P2P</br> destinado a usuarios de redes en una intranet."
            ],
            "translated_text": "Apocrita: Un sistema de intercambio de archivos distribuido de igual a igual para intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Computación Distribuida y Tecnología Inalámbrica y de Telecomunicaciones Universidad de Guelph-Humber Toronto, ON, M9W 5L7 Canadá {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca RESUMEN Muchas organizaciones necesitan redactar documentos para diversos fines, y es posible que estos documentos deban ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un documento. En algunos casos, estos documentos son compartidos entre autores, a través de correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento. Incluso puede haber varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario. Otro problema surge cuando un documento está disponible en la máquina de un usuario y ese usuario está desconectado, en cuyo caso el documento ya no es accesible. En este artículo presentamos Apocrita, un revolucionario sistema distribuido de intercambio de archivos P2P para intranets. Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos - Aplicaciones Distribuidas. Términos generales Diseño, Experimentación, Rendimiento. 1. INTRODUCCIÓN El paradigma de computación Peer-to-Peer (P2P) se está convirtiendo en una forma completamente nueva de compartir recursos mutuos a través de Internet. Con el acceso cada vez más común a Internet de banda ancha, la tecnología P2P finalmente se ha convertido en una forma viable de compartir documentos y archivos multimedia. Ya existen programas en el mercado que permiten compartir archivos P2P. Estos programas permiten a millones de usuarios compartir archivos entre ellos. Si bien la utilización de clientes P2P ya es un gran avance en comparación con descargar archivos de sitios web, el uso de dichos programas no está exento de problemas. Los archivos descargados todavía requieren mucho manejo manual por parte del usuario. El usuario todavía necesita colocar los archivos en el directorio adecuado, gestionar archivos con múltiples versiones, eliminar los archivos cuando ya no se deseen. Nos esforzamos por hacer que el proceso de compartir documentos dentro de una Intranet sea más fácil. Muchas organizaciones están obligadas a redactar documentos para diversos fines, y dichos documentos pueden necesitar ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un documento. En algunos casos, estos documentos son enviados entre autores, por correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o que se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento. Puede haber incluso varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario. Además, algunas organizaciones no cuentan con un servidor de intercambio de archivos o la infraestructura de red necesaria para habilitar uno. En este artículo presentamos Apocrita, que es un sistema de intercambio de archivos P2P distribuido y rentable para dichas organizaciones. El resto de este documento está organizado de la siguiente manera. En la sección 2, presentamos Apocrita. El mecanismo de indexación distribuida y el protocolo se presentan en la Sección 3. La sección 4 presenta el modelo de distribución peer-to-peer. Se presenta un prototipo de prueba de concepto en la Sección 5, y las evaluaciones de rendimiento se discuten en la Sección 6. El trabajo relacionado se presenta en la Sección 7, y finalmente las conclusiones y el trabajo futuro se discuten en la Sección 8. Apocrita es un sistema de intercambio de archivos entre pares distribuido, y ha sido diseñado para facilitar la búsqueda de documentos en un entorno de Intranet. Actualmente, es posible que los documentos se encuentren en la máquina de un usuario o en una máquina remota. Es incluso posible que diferentes revisiones puedan residir en cada nodo de la Intranet. Esto significa que debe haber un proceso manual para mantener las versiones de los documentos. Apocrita resuelve este problema utilizando dos enfoques. Primero, debido a la naturaleza inherente de Apocrita, el documento solo residirá en una ubicación lógica única. En segundo lugar, Apocrita proporciona un método para revertir a versiones anteriores de documentos. Se concede el permiso de hacer copias digitales o impresas de todo o parte de este trabajo para uso personal o en el aula sin cargo alguno, siempre y cuando las copias no se realicen ni distribuyan con fines de lucro o ventaja comercial, y que las copias lleven este aviso y la cita completa en la primera página. Para copiar de otra manera, o republicar, publicar en servidores o redistribuir en listas, se requiere permiso específico previo y/o un pago. ACMSE07, 23-24 DE MARZO DE 2007, WINSTON-SALEM, NC, EE. UU. COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 también distribuirá documentos en múltiples máquinas para garantizar la alta disponibilidad de documentos importantes. Por ejemplo, si una máquina contiene un documento importante y actualmente no es accesible, el sistema es capaz de mantener la disponibilidad del documento a través de este mecanismo de distribución. Proporciona una interfaz sencilla para buscar y acceder a archivos que pueden existir tanto local como remotamente. La naturaleza distribuida de los documentos es transparente para el usuario. Apocrita apoya un modelo de red descentralizada en el que los pares utilizan un protocolo de descubrimiento para determinar los pares. Apocrita está destinado para usuarios de red en una Intranet. El enfoque principal son las organizaciones que pueden no tener una red lo suficientemente grande como para necesitar un servidor de archivos y la infraestructura de soporte. Elimina la necesidad de que los documentos sean compartidos manualmente entre usuarios mientras se editan y reduce la posibilidad de que se distribuyan versiones conflictivas. El sistema también proporciona cierta redundancia y en caso de fallo de una máquina, no se perderán documentos importantes. Es independiente del sistema operativo y fácil de acceder a través de un navegador web o mediante una aplicación independiente. Para disminuir el tiempo requerido para indexar una gran cantidad de documentos, el proceso de indexación se distribuye entre los nodos inactivos disponibles. Los archivos locales y remotos deben ser fácilmente accesibles a través de un sistema de archivos virtual montable, proporcionando transparencia para los usuarios. Apocrita utiliza un índice distribuido para todos los documentos disponibles en la intranet. Cada nodo contendrá una parte del índice completo y estará al tanto de qué parte del índice tiene cada otro nodo. Un nodo podrá contactar a cada nodo que contenga una porción única del índice. Además, cada nodo tiene un índice local separado de sus propios documentos. Pero como se discutió más tarde, en la implementación actual, cada nodo tiene una copia de todo el índice. La indexación de los documentos está distribuida. Por lo tanto, si un nodo está en proceso de indexar muchos documentos, distribuirá el trabajo entre los nodos. Una vez que el índice local de un nodo se actualiza con los nuevos documentos, entonces se actualizará el índice distribuido. El sistema de indexación distribuida actual consta de tres módulos separados: NodeController, FileSender y NodeIndexer. La responsabilidad de cada módulo se discute más adelante en esta sección. 3.1 Protocolo de indexación El protocolo que hemos diseñado para la indexación distribuida se muestra en la Figura 1. Figura 1. Protocolo de indexación distribuida Apocrita. La CONSULTA INACTIVA se envía desde el nodo iniciador para determinar qué otros nodos pueden ayudar con el proceso de indexación en general. No se enviaron parámetros con el comando. El nodo receptor responderá con un comando BUSY o IDLE. Si se recibe el comando IDLE, el nodo iniciador agregará el nodo que responde a una lista de ayudantes de indexación distribuida disponibles. En caso de recibir un comando OCUPADO, el nodo que responde es ignorado. OCUPADO: Una vez que un nodo recibe una CONSULTA IDL, determinará si puede considerarse un candidato para la indexación distribuida. Esta determinación se basa en el uso general de la CPU del nodo. Si el nodo está utilizando la mayor parte de su CPU para otros procesos, el nodo responderá a la CONSULTA DE INACTIVIDAD con un comando OCUPADO. Como en el caso de la respuesta BUSY, el nodo que recibe la CONSULTA DE INACTIVIDAD determinará su elegibilidad para la indexación distribuida. Para ser considerado un candidato para la indexación distribuida, el uso total de la CPU debe ser mínimo para permitir la indexación dedicada de los documentos distribuidos. Si este es el caso, el nodo responderá con un comando IDLE. ARCHIVO ENTRANTE: Una vez que el nodo iniciador reúne un conjunto de nodos inactivos para ayudar con la indexación distribuida, dividirá los documentos que se enviarán a los nodos. Para hacer esto, envía un mensaje de ARCHIVO ENTRANTE, que contiene el nombre del archivo y su tamaño en bytes. Después de que se haya enviado el comando ARCHIVO ENTRANTE, el nodo iniciador comenzará a transmitir el archivo al otro nodo. El nodo iniciador recorrerá los archivos que se enviarán al otro nodo; cada flujo de archivo estará precedido por el comando ARCHIVO ENTRANTE con los parámetros apropiados. ARCHIVO DE ÍNDICE: Una vez que el nodo de indexación haya completado el proceso de indexación del conjunto de archivos, debe enviar el índice resultante de vuelta al nodo iniciador. El índice está compuesto por varios archivos, que existen en el sistema de archivos del nodo de indexación. Al igual que con el comando INCOMING FILE, el nodo de indexación transmite cada archivo de índice después de enviar un comando INDEX FILE. El comando INDEX FILE tiene dos parámetros: el primero es el nombre del índice y el segundo es el tamaño del archivo en bytes. Al enviar los conjuntos de archivos tanto para el índice como para los archivos a ser indexados, el nodo debe notificar al nodo correspondiente cuando el proceso esté completo. Una vez que el nodo iniciador haya terminado de enviar el conjunto de documentos a ser indexados, enviará entonces un comando de ENVÍO COMPLETO indicando al nodo de indexación que no hay más archivos y que el nodo puede proceder con la indexación de los archivos. En el caso de que el nodo iniciador envíe los archivos de índice, el nodo de indexación completará la transferencia con el comando ENVIAR COMPLETO indicando al nodo iniciador que no hay más archivos de índice por enviar y que el nodo iniciador puede entonces ensamblar esos archivos de índice en el índice principal. El NodeController es responsable de establecer conexiones con nodos en estado de reposo para distribuir el proceso de indexación. Usando JXTA [5], el controlador de nodos obtendrá un conjunto de nodos. Este conjunto de nodos se itera y a cada uno se le envía el comando IDLE QUERY. Los nodos que responden con inactividad son luego recopilados. El conjunto de nodos inactivos incluye al nodo que inicia el proceso de indexación distribuida, conocido como nodo local. Una vez que se obtiene la colección de nodos inactivos, el nodo actualiza el conjunto de controladores y divide equitativamente el conjunto de documentos que se van a indexar. Por ejemplo, si hay 100 documentos y 10 nodos (incluyendo el nodo local) entonces cada nodo tendrá 10 documentos para indexar. Para cada nodo de indexación se crea una instancia del objeto FileSender. El FileSender es consciente del conjunto de documentos de los que el nodo es responsable. Una vez que se ha creado un objeto FileSender para cada nodo, el NodeController espera a que cada FileSender termine. Cuando los objetos FileSender hayan completado, el NodeController tomará los índices resultantes de 175 nodos y los pasará a una instancia del IndexCompiler, que mantiene el índice y la lista de FileSenders. Una vez que el IndexCompiler haya completado, volverá al estado inactivo y activará el escáner de directorios para monitorear el conjunto de documentos de propiedad local en busca de cambios que puedan requerir reindexación. El NodeIndexer es responsable de recibir los documentos enviados por el nodo iniciador y luego indexarlos utilizando el motor Lucene [7]. Una vez que se completa el indexado, el índice resultante se transmite de vuelta al nodo iniciador y se compila en el índice local del propio nodo indexador. Antes de iniciar el proceso de indexación, se debe enviar un mensaje de CONSULTA INACTIVA. Esta es la primera orden que inicia el proceso de indexación. El nodo indexador determinará si se considera inactivo en función del uso actual de la CPU. Como se describe en la sección del protocolo, si el nodo no se está utilizando y tiene un bajo porcentaje de uso de CPU en general, devolverá IDLE al comando de CONSULTA DE INACTIVIDAD. Si el uso de la CPU de los nodos del indexador está por encima del 50% durante un período de tiempo especificado, se considerará ocupado y responderá al comando IDLE QUERY con BUSY. Si un nodo se determina ocupado, vuelve a su estado de escucha esperando otra CONSULTA INACTIVA de otro nodo iniciador. Si se determina que el nodo está inactivo, entrará en el estado en el que recibirá archivos del nodo iniciador de los que es responsable de indexar. Una vez que todos los archivos son recibidos por el nodo iniciador, indicado por un mensaje de ENVÍO COMPLETO, se inicia una instancia del motor de indexación de Lucene. Los archivos se almacenan en un directorio temporal separado de los documentos locales de los nodos que son responsables de mantener un índice de los mismos. El escritor de índices de Lucene indexa luego todos los archivos transferidos. El índice se almacena en la unidad dentro de un directorio temporal separado del índice actual. Después de que se completa la indexación de los archivos, el nodo indexador entra en el estado en el que los archivos de índice son enviados de vuelta al nodo iniciador. El nodo indexador recorre todos los archivos creados por Lucene's IndexWriter y los transmite al nodo iniciador. Una vez que estos archivos son devueltos, ese índice se fusiona en el índice completo de los nodos indexadores de los archivos existentes. Luego entra en el estado de espera, donde escuchará a otros nodos que requieran distribuir el proceso de indexación. El objeto FileSender es el nodo iniciador equivalente al nodo indexador. Inicia la comunicación entre el nodo iniciador y el nodo que ayudará en la indexación distribuida. El nodo iniciador ejecuta muchas instancias del nodo FileSender, una para cada otro nodo que haya determinado que está inactivo. Al instanciar el FileSender se le pasa el nodo al que es responsable de contactar y el conjunto de archivos que deben ser enviados. El primer trabajo de FileSenders es enviar los archivos que deben ser indexados por el otro nodo inactivo. Los archivos se transmiten uno a la vez al otro nodo. Envía cada archivo utilizando el comando ARCHIVO ENTRANTE. Con ese comando se envía el nombre del archivo que se está enviando y el tamaño en bytes. Una vez que todos los archivos hayan sido enviados, el FileSender envía el comando de ENVÍO COMPLETADO. El FileSender crea una instancia de Lucene's IndexWriter y se prepara para crear el índice en un directorio temporal en el sistema de archivos. El FileSender comenzará a recibir los archivos que se guardarán dentro del índice. Recibe un comando de ARCHIVO DE ÍNDICE con el nombre de los archivos y el tamaño en bytes. Este archivo se transmite luego al directorio de índice temporal en el nodo de FileSender. Después de que se haya completado la transferencia de los archivos de índice, el FileSender notifica a la instancia del compilador de índices que está lista para combinar el índice. Cada instancia del FileSender tiene su propia sección única de espacio temporal para almacenar el índice que ha sido transferido desde el nodo de indexación. Al notificar al IndexCompiler, también pasará la ubicación del directorio particular de FileSenders de ese índice. 4. Apocrita utiliza un modelo de distribución peer-to-peer para distribuir archivos. Los archivos se distribuyen únicamente desde un nodo servidor a un nodo cliente sin tener en cuenta la disponibilidad de las partes de archivo de otros clientes en la red. Esto significa que las transferencias de archivos serán rápidas y eficientes y no deberían afectar severamente la usabilidad de los nodos de servicio desde el punto de vista de un usuario local. El marco de trabajo JXTA se utiliza para implementar funcionalidades peer-to-peer. Esto se ha decidido debido al plazo extremadamente corto del proyecto, lo que nos permite aprovechar más de cinco años de pruebas y desarrollo, así como el apoyo de muchas organizaciones grandes que emplean JXTA en sus propios productos. No estamos preocupados por posibles problemas de calidad porque JXTA se considera el marco de pares a pares más maduro y estable disponible. Usando la terminología de JXTA, hay tres tipos de pares utilizados en la clasificación de nodos. Los pares de borde suelen ser nodos de baja capacidad de ancho de banda y no dedicados. Debido a estas características, los pares de borde no se utilizan con Apocrita. Los nodos de retransmisión suelen ser nodos dedicados de mayor ancho de banda. Esta es la clasificación de todos los nodos en la red de Apocrita, y, como tal, es la clasificación predeterminada utilizada. Los pares de encuentro se utilizan para coordinar el intercambio de mensajes entre nodos en la red de Apocrita. Esto significa que se requiere un mínimo de un par de encuentro por subred. 4.1 Descubrimiento de pares El subsistema del servidor Apocrita utiliza el Protocolo de Descubrimiento de Pares (PDP) de JXTA para encontrar pares participantes dentro de la red, como se muestra en la Figura 2. Figura 2. El proceso de descubrimiento de pares de Apocrita. 176 El PDP escucha los anuncios de pares de otros nodos en el enjambre de Apocrita. Si se detecta un anuncio de pares, el servidor intentará unirse al grupo de pares y comenzar a contribuir activamente a la red. Si el servicio de descubrimiento no encuentra pares, el servidor creará un nuevo grupo de pares y comenzará a anunciar este grupo de pares. Este nuevo grupo de pares se anunciará periódicamente en la red; cualquier nuevo par que se una a la red se conectará a este grupo de pares. Una ventaja distintiva de usar el PDP de JXTA es que Apocrita no tiene que ser sensible a matices de redes particulares como la Unidad de Transmisión Máxima (MTU). Además, Apocrita no tiene que admitir métodos de entrega de paquetes uno a muchos, como la multidifusión, y en su lugar puede depender de JXTA para este soporte. Operación de consulta de índice 4.2 Todos los nodos en el enjambre de Apocrita tienen una copia completa y actualizada del índice de red almacenado localmente. Esto hace que la consulta del índice para obtener resultados de búsqueda sea trivial. A diferencia del protocolo Gnutella, una consulta no tiene que propagarse por toda la red. Esto también significa que el tiempo para devolver los resultados de la consulta es muy rápido, mucho más rápido que los protocolos que dependen de los nodos en la red para pasar la consulta a lo largo de la red y luego esperar los resultados. Esto se demuestra en la Figura 3. Figura 3. Operación de consulta de Apocrita. Cada documento en el enjambre tiene un número de identificación único (ID) para el documento. Un nodo consultará el índice y se devolverá un resultado con el número de identificación del documento, así como una lista de pares con una copia del documento coincidente. Es entonces responsabilidad del par que busca contactar a los pares de la lista para negociar la transferencia de archivos entre el cliente y el servidor. IMPLEMENTACIÓN DEL PROTOTIPO Apocrita utiliza el marco de trabajo Lucene [7], el cual es un proyecto en desarrollo por la Fundación de Software Apache. Apache Lucene es una biblioteca de motor de búsqueda de texto de alto rendimiento y con todas las funciones, escrita completamente en Java. En la implementación actual, Apocrita solo es capaz de indexar documentos de texto plano. Apocrita utiliza el marco de trabajo JXTA [5] como una biblioteca de transporte peer-to-peer entre nodos. JXTA se utiliza para pasar tanto mensajes como archivos entre nodos en la red de búsqueda. Al utilizar JXTA, Apocrita aprovecha un mecanismo de transporte peer-to-peer confiable y probado. Utiliza la facilidad de tuberías para pasar mensajes y archivos entre nodos. La instalación de tuberías ofrece muchos tipos diferentes de anuncios de tuberías. Esto incluye un conducto unicast no seguro, un conducto unicast seguro y un conducto no seguro propagado. El paso de mensajes se utiliza para enviar mensajes de estado entre nodos con el fin de ayudar en la indexación, búsqueda y recuperación. Por ejemplo, un nodo que intenta encontrar un nodo inactivo para participar en la indexación consultará a otros nodos a través de la facilidad de mensajes. Los nodos inactivos responderán con un mensaje de estado para indicar que están disponibles para comenzar a indexar. La transferencia de archivos se utiliza dentro de Apocrita para la transferencia de archivos. Después de que un archivo haya sido buscado y localizado dentro del grupo de pares, se abrirá un socket JXTA y se llevará a cabo la transferencia de archivos. Un socket JXTA es similar a un socket Java estándar, sin embargo un socket JXTA utiliza tuberías JXTA en el transporte de red subyacente. El paso de archivos utiliza un conducto unicast no seguro para transferir datos. La transferencia de archivos también se utiliza dentro de Apocrita para la transferencia de índices. La transferencia de índice funciona exactamente igual que la transferencia de archivos. De hecho, la transferencia de índice realmente pasa el índice como un archivo. Sin embargo, hay una diferencia clave entre la transferencia de archivos y la transferencia de índices. En el caso de la transferencia de archivos, se crea un socket entre solo dos nodos. En el caso de la transferencia de índices, se debe crear un socket entre todos los nodos de la red para pasar el índice, lo que permite que todos los nodos tengan un índice completo y total de toda la red. Para facilitar esta transferencia de manera eficiente, la transferencia de índices utilizará un tubo propagado no seguro para comunicarse con todos los nodos en la red de Apocrita. 6. EVALUACIÓN DEL RENDIMIENTO Es difícil comparar objetivamente los resultados obtenidos a través de Apocrita porque no hay otro sistema disponible actualmente con los mismos objetivos que Apocrita. Sin embargo, hemos evaluado el rendimiento de las secciones críticas del sistema. Las secciones críticas fueron determinadas como los procesos que requieren más tiempo. La evaluación se completó en computadoras de laboratorio estándar en una LAN Ethernet de 100Mb/s; las máquinas ejecutan Windows XP con un CPU Pentium 4 funcionando a 2.4GHz con 512 MB de RAM. El tiempo de indexación se ha ejecutado tanto en la colección de la revista Time [8], que contiene 432 documentos y 83 consultas con sus resultados más relevantes, como en la colección NPL [8], que tiene un total de 11,429 documentos y 93 consultas con resultados esperados. Cada documento tiene un tamaño que oscila entre 4KB y 8KB. Como muestra la Figura 4, el número de nodos involucrados en el proceso de indexación afecta el tiempo necesario para completar el proceso de indexación, a veces de manera drástica. Figura 4. Tiempo de nodo vs. tiempo de índice. La diferencia al pasar de un nodo de indexación a dos nodos de indexación es la más drástica y equivale a un tiempo de indexación un 37% más rápido que un solo nodo de indexación. La diferencia entre dos nodos de indexación y tres nodos de indexación sigue siendo significativa y representa un tiempo un 16% más rápido que dos nodos de indexación. A medida que aumenta el número de nodos de indexación, los resultados son menos dramáticos. Esto se puede atribuir al tiempo adicional asociado con tener muchos nodos realizando indexación. El tiempo necesario para comunicarse con un nodo es constante, por lo que a medida que aumenta el número de nodos, esta constante se vuelve más predominante. Además, la complejidad de unir los resultados de indexación es una operación compleja y se complica aún más a medida que aumenta el número de nodos de indexación. El rendimiento del socket también es una parte muy importante de Apocrita. Se realizaron pruebas de rendimiento utilizando un archivo de 65MB en un sistema con el cliente y el servidor ejecutándose localmente. Esto se hizo para aislar posibles problemas de red. Aunque menos drásticos, se mostraron resultados similares cuando el cliente y el servidor se ejecutan en hardware independiente. Para mitigar posibles errores inesperados, cada prueba se ejecutó 10 veces. Figura 5. Sockets de Java vs. sockets de JXTA. Como muestra la Figura 5, el rendimiento de los sockets JXTA es pésimo en comparación con el rendimiento de los sockets estándar de Java. La tasa de transferencia mínima obtenida utilizando sockets de Java es de 81,945KB/s, mientras que la tasa de transferencia mínima obtenida utilizando sockets de JXTA es mucho menor, de 3,805KB/s. La tasa de transferencia máxima obtenida usando sockets de Java es de 97,412KB/s, mientras que la tasa de transferencia máxima obtenida usando sockets de JXTA es de 5,530KB/s. Finalmente, la tasa de transferencia promedio utilizando sockets de Java es de 87,540KB/s, mientras que la tasa de transferencia promedio utilizando sockets de JXTA es de 4,293KB/s. El problema principal encontrado en estos benchmarks es que el mecanismo de transporte de red subyacente no funciona tan rápido o eficientemente como se esperaba. Para obtener un aumento en el rendimiento, el marco de trabajo JXTA necesita ser sustituido por un enfoque más tradicional. El tiempo de indexación también es un cuello de botella y deberá mejorarse para que la calidad general de Apocrita mejore. 7. TRABAJO RELACIONADO Existen hoy varios sistemas descentralizados P2P [1, 2, 3] que Apocrita incluye algunas de sus funcionalidades. Sin embargo, Apocrita también cuenta con características únicas de búsqueda e indexación novedosas que hacen que este sistema sea único. Por ejemplo, Majestic-12 [4] es un proyecto de búsqueda e indexación distribuida diseñado para buscar en Internet. Cada usuario instalaría un cliente, el cual es responsable de indexar una parte de la web. Una área central para consultar el índice está disponible en la página web de Majestic-12. El índice en sí no se distribuye, solo la acción de indexar se distribuye. El aspecto de indexación distribuida de este proyecto se relaciona más estrechamente con los objetivos de Apocrita. YaCy es una aplicación de búsqueda web peer-to-peer. YaCy consta de un rastreador web, un indexador, un motor de base de datos incorporado y un protocolo de intercambio de índices p2p. YaCy está diseñado para mantener un índice distribuido de Internet. Utilizaba una tabla hash distribuida (DHT) para mantener el índice. El nodo local se utiliza para hacer consultas, pero todos los resultados que se devuelven son accesibles en Internet. YaCy utilizó muchos pares y DHT para mantener un índice distribuido. Apocrita también utilizará un índice distribuido en futuras implementaciones y podría beneficiarse de utilizar una implementación de un DHT. Sin embargo, YaCy está diseñado como un motor de búsqueda web y, por lo tanto, resuelve un problema muy diferente al de Apocrita. 8. CONCLUSIONES Y TRABAJO FUTURO Presentamos Apocrita, un sistema distribuido de <br>búsqueda e indexación P2P</br> destinado a usuarios de redes en una intranet. Puede ayudar a las organizaciones que no cuentan con un servidor de archivos en red o con la infraestructura de red necesaria para compartir documentos. Elimina la necesidad de que los documentos sean compartidos manualmente entre usuarios mientras se editan y reduce la posibilidad de que se distribuyan versiones conflictivas. Se ha construido un prototipo de prueba de concepto, pero los resultados de medir el mecanismo de transporte de red y el tiempo de indexación no fueron tan impresionantes como se había imaginado inicialmente. A pesar de estas deficiencias, la experiencia adquirida en el diseño e implementación de Apocrita nos ha brindado una mayor comprensión sobre la construcción de sistemas distribuidos desafiantes. Para trabajos futuros, Apocrita contará con un modelo inteligente de distribución de contenido en el que una única instancia de un archivo puede replicarse de manera inteligente y transparente en toda la red para garantizar que una copia de cada archivo importante esté siempre disponible independientemente de la disponibilidad de nodos específicos en la red. Además, planeamos integrar un sistema de control de revisiones en la parte de distribución de contenido de Apocrita para que los usuarios puedan actualizar un archivo existente que encontraron y mantener la revisión antigua, propagando la nueva revisión. Finalmente, la implementación actual tiene cierto sobrecosto y redundancia debido a que se mantiene todo el índice en cada nodo individual, planeamos diseñar un índice distribuido. 9. REFERENCIAS [1] Rodrigues, R., Liskov, B., Shrira, L.: El diseño de un sistema peer-to-peer robusto. Disponible en línea: http://www.pmg.lcs.mit.edu/~rodrigo/ew02-robust.pdf. [2] Chawathe, Y., Ratnasamy, S., Breslau, L., Lanham, N., y Chenker, S.: Haciendo escalables los sistemas P2P similares a Gnutella. En Actas de SIGCOMM03, Karlsruhe, Alemania. [3] Harvest: Un Sistema de Búsqueda Distribuida: http://harvest.sourceforge.net. [4] Majestic-12: Motor de Búsqueda Distribuido: http://www.majestic12.co.uk. [5] JXTA: http://www.jxta.org. [6] YaCy: Indexación Web Distribuida basada en P2P: http://www.yacy.net/yacy. [7] Biblioteca del Motor de Búsqueda Lucene: http://lucene.apache.org. [8] Colecciones de Pruebas (Time Magazine y NPL): www.dcs.gla.ac.uk/idom/ir_resources/test_collections. 178 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "p2p": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Apocrita: A Distributed Peer-to-Peer File Sharing System for Intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Distributed Computing and Wireless & Telecommunications Technology University of Guelph-Humber Toronto, ON, M9W 5L7 Canada {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca ABSTRACT Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all member of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are shared between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Another problem arises when a document is made available on a users machine and that user is offline, in which case the document is no longer accessible.",
                "In this paper we present Apocrita, a revolutionary distributed <br>p2p</br> file sharing system for Intranets.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Distributed applications.",
                "General Terms Design, Experimentation, Performance. 1.",
                "INTRODUCTION The Peer-to-Peer (<br>p2p</br>) computing paradigm is becoming a completely new form of mutual resource sharing over the Internet.",
                "With the increasingly common place broadband Internet access, <br>p2p</br> technology has finally become a viable way to share documents and media files.",
                "There are already programs on the market that enable <br>p2p</br> file sharing.",
                "These programs enable millions of users to share files among themselves.",
                "While the utilization of <br>p2p</br> clients is already a gigantic step forward compared to downloading files off websites, using such programs are not without their problems.",
                "The downloaded files still require a lot of manual management by the user.",
                "The user still needs to put the files in the proper directory, manage files with multiple versions, delete the files when they are no longer wanted.",
                "We strive to make the process of sharing documents within an Intranet easier.",
                "Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all members of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are sent between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Furthermore, some organizations do not have a file sharing server or the necessary network infrastructure to enable one.",
                "In this paper we present Apocrita, which is a cost-effective distributed <br>p2p</br> file sharing system for such organizations.",
                "The rest of this paper is organized as follows.",
                "In section 2, we present Apocrita.",
                "The distributed indexing mechanism and protocol are presented in Section 3.",
                "Section 4 presents the peer-topeer distribution model.",
                "A proof of concept prototype is presented in Section 5, and performance evaluations are discussed in Section 6.",
                "Related work is presented is Section 7, and finally conclusions and future work are discussed in Section 8. 2.",
                "APOCRITA Apocrita is a distributed peer-to-peer file sharing system, and has been designed to make finding documents easier in an Intranet environment.",
                "Currently, it is possible for documents to be located on a users machine or on a remote machine.",
                "It is even possible that different revisions could reside on each node on the Intranet.",
                "This means there must be a manual process to maintain document versions.",
                "Apocrita solves this problem using two approaches.",
                "First, due to the inherent nature of Apocrita, the document will only reside on a single logical location.",
                "Second, Apocrita provides a method of reverting to previous document versions.",
                "Apocrita Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page.",
                "To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.",
                "ACMSE07, MARCH 23-24, 2007, WINSTON-SALEM, NC, USA.",
                "COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 will also distribute documents across multiple machines to ensure high availability of important documents.",
                "For example, if a machine contains an important document and the machine is currently inaccessible, the system is capable of maintaining availability of the document through this distribution mechanism.",
                "It provides a simple interface for searching and accessing files that may exist either locally or remotely.",
                "The distributed nature of the documents is transparent to the user.",
                "Apocrita supports a decentralized network model where the peers use a discovery protocol to determine peers.",
                "Apocrita is intended for network users on an Intranet.",
                "The main focus is organizations that may not have a network large enough to require a file server and supporting infrastructure.",
                "It eliminates the need for documents to be manually shared between users while being edited and reduces the possibility of conflicting versions being distributed.",
                "The system also provides some redundancy and in the event of a single machine failure, no important documents will be lost.",
                "It is operating system independent, and easy to access through a web browser or through a standalone application.",
                "To decrease the time required for indexing a large number of documents, the indexing process is distributed across available idle nodes.",
                "Local and remote files should be easily accessible through a virtual mountable file system, providing transparency for users. 3.",
                "DISTRIBUTED INDEXING Apocrita uses a distributed index for all the documents that are available on the Intranet.",
                "Each node will contain part of the full index, and be aware of what part of the index each other node has.",
                "A node will be able to contact each node that contains a unique portion of the index.",
                "In addition, each node has a separate local index of its own documents.",
                "But as discussed later, in the current implementation, each node has a copy of the entire index.",
                "Indexing of the documents is distributed.",
                "Therefore, if a node is in the process of indexing many documents, it will break up the work over the nodes.",
                "Once a nodes local index is updated with the new documents, the distributed index will then be updated.",
                "The current distributed indexing system consists of three separate modules: NodeController, FileSender, and NodeIndexer.",
                "The responsibility of each module is discussed later in this section. 3.1 Indexing Protocol The protocol we have designed for the distributed indexing is depicted in Figure 1.",
                "Figure 1.",
                "Apocrita distributed indexing protocol.",
                "IDLE QUERY: The IDLE QUERY is sent out from the initiating node to determine which other nodes may be able to help with the overall indexing process.",
                "There are no parameters sent with the command.",
                "The receiving node will respond with either a BUSY or IDLE command.",
                "If the IDLE command is received, the initiating node will add the responding node to a list of available distributed indexing helpers.",
                "In the case of a BUSY command being received, the responding node is ignored.",
                "BUSY: Once a node received an IDL QUERY, it will determine whether it can be considered a candidate for distributed indexing.",
                "This determination is based on the overall CPU usage of the node.",
                "If the node is using most of its CPU for other processes, the node will respond to the IDLE QUERY with a BUSY command.",
                "IDLE: As with the case of the BUSY response, the node receiving the IDLE QUERY will determine its eligibility for distributed indexing.",
                "To be considered a candidate for distributed indexing, the overall CPU usage must be at a minimum to all for dedicated indexing of the distributed documents.",
                "If this is the case, the node will respond with an IDLE command.",
                "INCOMING FILE: Once the initiating node assembles a set of idle nodes to assist with the distributed indexing, it will divide the documents to be sent to the nodes.",
                "To do this, it sends an INCOMING FILE message, which contains the name of the file as well as the size in bytes.",
                "After the INCOMING FILE command has been sent, the initiating node will begin to stream the file to the other node.",
                "The initiating node will loop through the files that are to be sent to the other node; each file stream being preceded by the INCOMING FILE command with the appropriate parameters.",
                "INDEX FILE: Once the indexing node has completed the indexing process of the set of files, it must send the resultant index back to the initiating node.",
                "The index is comprised of multiple files, which exist on the file system of the indexing node.",
                "As with the INCOMING FILE command, the indexing node streams each index file after sending an INDEX FILE command.",
                "The INDEX FILE command has two parameters: the first being the name of the index, and the second is the size of the file in bytes.",
                "SEND COMPLETE: When sending the sets of files for both the index and the files to be indexed, the node must notify the corresponding node when the process is complete.",
                "Once the initiating node is finished sending the set of documents to be indexed, it will then send a SEND COMPLETE command indicating to the indexing node that there are no more files and the node can proceed with indexing the files.",
                "In the case of the initiating node sending the index files, the indexing node will complete the transfer with the SEND COMPLETE command indicating to the initiating node that there are no more index files to be sent and the initiating node can then assemble those index files into the main index.",
                "The NodeController is responsible for setting up connections with nodes in the idle state to distribute the indexing process.",
                "Using JXTA [5], the node controller will obtain a set of nodes.",
                "This set of nodes is iterated and each one is sent the IDLE QUERY command.",
                "The nodes that respond with idle are then collected.",
                "The set of idle nodes includes the node initiating the distributed indexing process, referred to as the local node.",
                "Once the collection of idle nodes is obtained, the node updates the set of controllers and evenly divides the set of documents that are to be indexed.",
                "For example, if there are 100 documents and 10 nodes (including the local node) then each node will have 10 documents to index.",
                "For each indexing node an instance of the FileSender object is created.",
                "The FileSender is aware of the set of documents that node is responsible for.",
                "Once a FileSender object has been created for each node, the NodeController waits for each FileSender to complete.",
                "When the FileSender objects have completed the NodeController will take the resultant indexes from 175 each node and pass them to an instance of the IndexCompiler, which maintains the index and the list of FileSenders.",
                "Once the IndexCompiler has completed it will return to the idle state and activate the directory scanner to monitor the locally owned set of documents for changes that may require reindexing.",
                "The NodeIndexer is responsible for receiving documents sent to it by the initiating node and then indexing them using the Lucene engine [7].",
                "Once the indexing is complete the resulting index is streamed back to the initiating node as well as compiled in the indexer nodes own local index.",
                "Before initiating the indexing process it must be sent an IDLE QUERY message.",
                "This is the first command that sets off the indexing process.",
                "The indexer node will determine whether it is considered idle based on the current CPU usage.",
                "As outlined in the protocol section if the node is not being used and has a low overall CPU usage percentage it will return IDLE to the IDLE QUERY command.",
                "If the indexer nodes CPU usage is above 50% for a specified amount of time it is then considered to be busy and will respond to the IDLE QUERY command with BUSY.",
                "If a node is determined busy it returns to its listening state waiting for another IDLE QUERY from another initiating node.",
                "If the node is determined to be idle it will enter the state where it will receive files from the initiating node that it is responsible for indexing.",
                "Once all of the files are received by the initiating node, indicated by a SEND COMPLETE message, it starts an instance of the Lucene indexing engine.",
                "The files are stored in a temporary directory separate from the nodes local documents that it is responsible for maintaining an index of.",
                "The Lucene index writer then indexes all of the transferred files.",
                "The index is stored on the drive within a temporary directory separate from the current index.",
                "After the indexing of the files completes the indexer node enters the state where the index files are sent back to the initiating node.",
                "The indexer node loops through all of the files created by Lucenes IndexWriter and streams them to the initiating node.",
                "Once these files are sent back that index is then merged into the indexer nodes own full index of the existing files.",
                "It then enters the idle state where it will then listen for any other nodes that required distributing the indexing process.",
                "The FileSender object is the initiating node equivalent of the indexer node.",
                "It initiates the communication between the initiating node and the node that will assist in the distributed indexing.",
                "The initiating node runs many instances of the FileSender node one for each other node it has determined to be idle.",
                "Upon instantiation of the FileSender it is passed the node that it is responsible for contacting and the set of files that must be sent.",
                "The FileSenders first job is to send the files that are to be indexed by the other idle node.",
                "The files are streamed one at a time to the other node.",
                "It sends each file using the INCOMING FILE command.",
                "With that command it sends the name of the file being sent and the size in bytes.",
                "Once all files have been sent the FileSender sends the SEND COMPLETE command.",
                "The FileSender creates an instance of Lucenes IndexWriter and prepares to create the index in a temporary directory on the file system.",
                "The FileSender will begin to receive the files that are to be saved within the index.",
                "It receives an INDEX FILE command with the name of the files and the size in bytes.",
                "This file is then streamed into the temporary index directory on the FileSender node.",
                "After the transfer of the index files has been completed the FileSender notifies the instance of the index compiler that it is ready to combine the index.",
                "Each instance of the FileSender has its own unique section of temporary space to store the index that has been transferred back from the indexing node.",
                "When notifying the IndexCompiler it will also pass the location of the particular FileSenders directory location of that index. 4.",
                "PEER-TO-PEER DISTRIBUTION Apocrita uses a peer-to-peer distribution model in order to distribute files.",
                "Files are distributed solely from a serving node to a client node without regard for the availability of file pieces from other clients in the network.",
                "This means that the file transfers will be fast and efficient and should not severely affect the usability of serving nodes from the point of view of a local user.",
                "The JXTA framework [5] is used in order to implement peer-to-peer functionality.",
                "This has been decided due to the extremely shorttimeline of the project which allows us to take advantage of over five years of testing and development and support from many large organizations employing JXTA in their own products.",
                "We are not concerned with any potential quality problems because JXTA is considered to be the most mature and stable peer-to-peer framework available.",
                "Using JXTA terminology, there are three types of peers used in node classification.",
                "Edge peers are typically low-bandwidth, non-dedicated nodes.",
                "Due to these characteristics, edge peers are not used with Apocrita.",
                "Relay peers are typically higher-bandwidth, dedicated nodes.",
                "This is the classification of all nodes in the Apocrita network, and, as such, are the default classification used.",
                "Rendezvous peers are used to coordinate message passing between nodes in the Apocrita network.",
                "This means that a minimum of one rendezvous peer per subnet is required. 4.1 Peer Discovery The Apocrita server subsystem uses the JXTA Peer Discovery Protocol (PDP) in order to find participating peers within the network as shown in Figure 2.",
                "Figure 2.",
                "Apocrita peer discovery process. 176 The PDP listens for peer advertisements from other nodes in the Apocrita swarm.",
                "If a peer advertisement is detected, the server will attempt to join the peer group and start actively contributing to the network.",
                "If no peers are found by the discovery service, the server will create a new peer group and start advertising this peer group.",
                "This new peer group will be periodically advertised on the network; any new peers joining the network will attach to this peer group.",
                "A distinct advantage of using the JXTA PDP is that Apocrita does not have to be sensitive to particular networking nuances such as Maximum Transmission Unit (MTU).",
                "In addition, Apocrita does not have to support one-to-many packet delivery methods such as multicast and instead can rely on JXTA for this support. 4.2 Index Query Operation All nodes in the Apocrita swarm have a complete and up-to-date copy of the network index stored locally.",
                "This makes querying the index for search results trivial.",
                "Unlike the Gnutella protocol, a query does not have to propagate throughout the network.",
                "This also means that the time to return query results is very fast - much faster than protocols that rely on nodes in the network to pass the query throughout the network and then wait for results.",
                "This is demonstrated in Figure 3.",
                "Figure 3.",
                "Apocrita query operation.",
                "Each document in the swarm has a unique document identification number (ID).",
                "A node will query the index and a result will be returned with both the document ID number as well as a list of peers with a copy of the matched document ID.",
                "It is then the responsibility of the searching peer to contact the peers in the list to negotiate file transfer between the client and server. 5.",
                "PROTOTYPE IMPLEMENTATION Apocrita uses the Lucene framework [7], which is a project under development by the Apache Software Foundation.",
                "Apache Lucene is a high-performance, full-featured text search engine library written entirely in Java.",
                "In the current implementation, Apocrita is only capable of indexing plain text documents.",
                "Apocrita uses the JXTA framework [5] as a peer-to-peer transport library between nodes.",
                "JXTA is used to pass both messages and files between nodes in the search network.",
                "By using JXTA, Apocrita takes advantage of a reliable, and proven peer-to-peer transport mechanism.",
                "It uses the pipe facility in order to pass messages and files between nodes.",
                "The pipe facility provides many different types of pipe advertisements.",
                "This includes an unsecured unicast pipe, a secured unicast pipe, and a propagated unsecured pipe.",
                "Message passing is used to pass status messages between nodes in order to aid in indexing, searching, and retrieval.",
                "For example, a node attempting to find an idle node to participate in indexing will query nodes via the message facility.",
                "Idle nodes will reply with a status message to indicate they are available to start indexing.",
                "File passing is used within Apocrita for file transfer.",
                "After a file has been searched for and located within the peer group, a JXTA socket will be opened and file transfer will take place.",
                "A JXTA socket is similar to a standard Java socket, however a JXTA socket uses JXTA pipes in underlying network transport.",
                "File passing uses an unsecured unicast pipe in order to transfer data.",
                "File passing is also used within Apocrita for index transfer.",
                "Index transfer works exactly like a file transfer.",
                "In fact, the index transfer actually passes the index as a file.",
                "However, there is one key difference between file transfer and index transfer.",
                "In the case of file transfer, a socket is created between only two nodes.",
                "In the case of index transfer, a socket must be created between all nodes in the network in order to pass the index, which allows for all nodes to have a full and complete index of the entire network.",
                "In order to facilitate this transfer efficiently, index transfer will use an unsecured propagated pipe to communicate with all nodes in the Apocrita network. 6.",
                "PERFORMANCE EVALUATION It is difficult to objectively benchmark the results obtained through Apocrita because there is no other system currently available with the same goals as Apocrita.",
                "We have, however, evaluated the performance of the critical sections of the system.",
                "The critical sections were determined to be the processes that are the most time intensive.",
                "The evaluation was completed on standard lab computers on a 100Mb/s Ethernet LAN; the machines run Windows XP with a Pentium 4 CPU running at 2.4GHz with 512 MB of RAM.",
                "The indexing time has been run against both: the Time Magazine collection [8], which contains 432 documents and 83 queries and their most relevant results, and the NPL collection [8] that has a total of 11,429 documents and 93 queries with expected results.",
                "Each document ranges in size between 4KB and 8KB.",
                "As Figure 4 demonstrates, the number of nodes involved in the indexing process affects the time taken to complete the indexing processsometimes even drastically.",
                "Figure 4.",
                "Node vs. index time.",
                "The difference in going from one indexing node to two indexing nodes is the most drastic and equates to an indexing time 37% faster than a single indexing node.",
                "The different between two 177 indexing nodes and three indexing nodes is still significant and represents a 16% faster time than two indexing nodes.",
                "As the number of indexing nodes increases the results are less dramatic.",
                "This can be attributed to the time overhead associated with having many nodes perform indexing.",
                "The time needed to communicate with a node is constant, so as the number of nodes increases, this constant becomes more prevalent.",
                "Also, the complexity of joining the indexing results is a complex operation and is complicated further as the number of indexing nodes increases.",
                "Socket performance is also a very important part of Apocrita.",
                "Benchmarks were performed using a 65MB file on a system with both the client and server running locally.",
                "This was done to isolate possible network issues.",
                "Although less drastic, similar results were shown when the client and server run on independent hardware.",
                "In order to mitigate possible unexpected errors, each test was run 10 times.",
                "Figure 5.",
                "Java sockets vs. JXTA sockets.",
                "As Figure 5 demonstrates, the performance of JXTA sockets is abysmal as compared to the performance of standard Java sockets.",
                "The minimum transfer rate obtained using Java sockets is 81,945KB/s while the minimum transfer rater obtained using JXTA sockets is much lower at 3, 805KB/s.",
                "The maximum transfer rater obtain using Java sockets is 97,412KB/s while the maximum transfer rate obtained using JXTA sockets is 5,530KB/s.",
                "Finally, the average transfer rate using Java sockets is 87,540KB/s while the average transfer rate using JXTA sockets is 4,293KB/s.",
                "The major problem found in these benchmarks is that the underlying network transport mechanism does not perform as quickly or efficiently as expected.",
                "In order to garner a performance increase, the JXTA framework needs to be substituted with a more traditional approach.",
                "The indexing time is also a bottleneck and will need to be improved for the overall quality of Apocrita to be improved. 7.",
                "RELATED WORK Several decentralized <br>p2p</br> systems [1, 2, 3] exist today that Apocrita features some of their functionality.",
                "However, Apocrita also has unique novel searching and indexing features that make this system unique.",
                "For example, Majestic-12 [4] is a distributed search and indexing project designed for searching the Internet.",
                "Each user would install a client, which is responsible for indexing a portion of the web.",
                "A central area for querying the index is available on the Majestic-12 web page.",
                "The index itself is not distributed, only the act of indexing is distributed.",
                "The distributed indexing aspect of this project most closely relates Apocrita goals.",
                "YaCy [6] is a peer-to-peer web search application.",
                "YaCy consists of a web crawler, an indexer, a built-in database engine, and a <br>p2p</br> index exchange protocol.",
                "YaCy is designed to maintain a distributed index of the Internet.",
                "It used a distributed hash table (DHT) to maintain the index.",
                "The local node is used to query but all results that are returned are accessible on the Internet.",
                "YaCy used many peers and DHT to maintain a distributed index.",
                "Apocrita will also use a distributed index in future implementations and may benefit from using an implementation of a DHT.",
                "YaCy however, is designed as a web search engine and, as such solves a much different problem than Apocrita. 8.",
                "CONCLUSIONS AND FUTURE WORK We presented Apocrita, a distributed <br>p2p</br> searching and indexing system intended for network users on an Intranet.",
                "It can help organizations with no network file server or necessary network infrastructure to share documents.",
                "It eliminates the need for documents to be manually shared among users while being edited and reduce the possibility of conflicting versions being distributed.",
                "A proof of concept prototype has been constructed, but the results from measuring the network transport mechanism and the indexing time were not as impressive as initially envisioned.",
                "Despite these shortcomings, the experience gained from the design and implementation of Apocrita has given us more insight into building challenging distributed systems.",
                "For future work, Apocrita will have a smart content distribution model in which a single instance of a file can intelligently and transparently replicate throughout the network to ensure a copy of every important file will always be available regardless of the availability of specific nodes in the network.",
                "In addition, we plan to integrate a revision control system into the content distribution portion of Apocrita so that users could have the ability to update an existing file that they found and have the old revision maintained and the new revision propagated.",
                "Finally, the current implementation has some overhead and redundancy due to the fact that the entire index is maintained on each individual node, we plan to design a distributed index. 9.",
                "REFERENCES [1] Rodrigues, R., Liskov, B., Shrira, L.: The Design of a Robust Peer-to-Peer System.",
                "Available online: http://www.pmg.lcs.mit.edu/~rodrigo/ew02-robust.pdf. [2] Chawathe, Y., Ratnasamy, S., Breslau, L., Lanham, N., and Chenker, S.: Making Gnutella-like <br>p2p</br> Systems Scalable.",
                "In Proceedings of SIGCOMM03, Karlsruhe, Germany. [3] Harvest: A Distributed Search System: http://harvest.sourceforge.net. [4] Majestic-12: Distributed Search Engine: http://www.majestic12.co.uk. [5] JXTA: http://www.jxta.org. [6] YaCy: Distributed <br>p2p</br>-based Web Indexing: http://www.yacy.net/yacy. [7] Lucene Search Engine Library: http://lucene.apache.org. [8] Test Collections (Time Magazine and NPL): www.dcs.gla.ac.uk/idom/ir_resources/test_collections. 178"
            ],
            "original_annotated_samples": [
                "In this paper we present Apocrita, a revolutionary distributed <br>p2p</br> file sharing system for Intranets.",
                "INTRODUCTION The Peer-to-Peer (<br>p2p</br>) computing paradigm is becoming a completely new form of mutual resource sharing over the Internet.",
                "With the increasingly common place broadband Internet access, <br>p2p</br> technology has finally become a viable way to share documents and media files.",
                "There are already programs on the market that enable <br>p2p</br> file sharing.",
                "While the utilization of <br>p2p</br> clients is already a gigantic step forward compared to downloading files off websites, using such programs are not without their problems."
            ],
            "translated_annotated_samples": [
                "En este artículo presentamos Apocrita, un revolucionario <br>sistema distribuido de intercambio de archivos P2P</br> para intranets.",
                "INTRODUCCIÓN El paradigma de <br>computación Peer-to-Peer</br> (P2P) se está convirtiendo en una forma completamente nueva de compartir recursos mutuos a través de Internet.",
                "Con el acceso cada vez más común a Internet de banda ancha, la <br>tecnología P2P</br> finalmente se ha convertido en una forma viable de compartir documentos y archivos multimedia.",
                "Ya existen programas en el mercado que permiten <br>compartir archivos P2P</br>.",
                "Si bien la utilización de <br>clientes P2P</br> ya es un gran avance en comparación con descargar archivos de sitios web, el uso de dichos programas no está exento de problemas."
            ],
            "translated_text": "Apocrita: Un sistema de intercambio de archivos distribuido de igual a igual para intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Computación Distribuida y Tecnología Inalámbrica y de Telecomunicaciones Universidad de Guelph-Humber Toronto, ON, M9W 5L7 Canadá {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca RESUMEN Muchas organizaciones necesitan redactar documentos para diversos fines, y es posible que estos documentos deban ser accesibles para todos los miembros de la organización. Este acceso puede ser necesario para editar o simplemente ver un documento. En algunos casos, estos documentos son compartidos entre autores, a través de correo electrónico, para ser editados. Esto puede causar fácilmente que se envíe una versión incorrecta o se creen conflictos entre múltiples usuarios que intentan hacer modificaciones a un documento. Incluso puede haber varios documentos diferentes en proceso de edición. El usuario puede verse en la necesidad de buscar un documento en particular, para lo cual algunas herramientas de búsqueda como Google Desktop pueden ser una solución para documentos locales, pero no encontrarán un documento en la máquina de otro usuario. Otro problema surge cuando un documento está disponible en la máquina de un usuario y ese usuario está desconectado, en cuyo caso el documento ya no es accesible. En este artículo presentamos Apocrita, un revolucionario <br>sistema distribuido de intercambio de archivos P2P</br> para intranets. Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos - Aplicaciones Distribuidas. Términos generales Diseño, Experimentación, Rendimiento. 1. INTRODUCCIÓN El paradigma de <br>computación Peer-to-Peer</br> (P2P) se está convirtiendo en una forma completamente nueva de compartir recursos mutuos a través de Internet. Con el acceso cada vez más común a Internet de banda ancha, la <br>tecnología P2P</br> finalmente se ha convertido en una forma viable de compartir documentos y archivos multimedia. Ya existen programas en el mercado que permiten <br>compartir archivos P2P</br>. Estos programas permiten a millones de usuarios compartir archivos entre ellos. Si bien la utilización de <br>clientes P2P</br> ya es un gran avance en comparación con descargar archivos de sitios web, el uso de dichos programas no está exento de problemas. ",
            "candidates": [],
            "error": [
                [
                    "sistema distribuido de intercambio de archivos P2P",
                    "computación Peer-to-Peer",
                    "tecnología P2P",
                    "compartir archivos P2P",
                    "clientes P2P"
                ]
            ]
        },
        "file share": {
            "translated_key": "compartir archivos",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Apocrita: A Distributed Peer-to-Peer File Sharing System for Intranets Joshua J. Reynolds, Robbie McLeod, Qusay H. Mahmoud Distributed Computing and Wireless & Telecommunications Technology University of Guelph-Humber Toronto, ON, M9W 5L7 Canada {jreyno04,rmcleo01,qmahmoud}@uoguelph.ca ABSTRACT Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all member of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are shared between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Another problem arises when a document is made available on a users machine and that user is offline, in which case the document is no longer accessible.",
                "In this paper we present Apocrita, a revolutionary distributed P2P file sharing system for Intranets.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - Distributed applications.",
                "General Terms Design, Experimentation, Performance. 1.",
                "INTRODUCTION The Peer-to-Peer (P2P) computing paradigm is becoming a completely new form of mutual resource sharing over the Internet.",
                "With the increasingly common place broadband Internet access, P2P technology has finally become a viable way to share documents and media files.",
                "There are already programs on the market that enable P2P file sharing.",
                "These programs enable millions of users to share files among themselves.",
                "While the utilization of P2P clients is already a gigantic step forward compared to downloading files off websites, using such programs are not without their problems.",
                "The downloaded files still require a lot of manual management by the user.",
                "The user still needs to put the files in the proper directory, manage files with multiple versions, delete the files when they are no longer wanted.",
                "We strive to make the process of sharing documents within an Intranet easier.",
                "Many organizations are required to author documents for various purposes, and such documents may need to be accessible by all members of the organization.",
                "This access may be needed for editing or simply viewing a document.",
                "In some cases these documents are sent between authors, via email, to be edited.",
                "This can easily cause incorrect version to be sent or conflicts created between multiple users trying to make amendments to a document.",
                "There may even be multiple different documents in the process of being edited.",
                "The user may be required to search for a particular document, which some search tools such as Google Desktop may be a solution for local documents but will not find a document on another users machine.",
                "Furthermore, some organizations do not have a file sharing server or the necessary network infrastructure to enable one.",
                "In this paper we present Apocrita, which is a cost-effective distributed P2P file sharing system for such organizations.",
                "The rest of this paper is organized as follows.",
                "In section 2, we present Apocrita.",
                "The distributed indexing mechanism and protocol are presented in Section 3.",
                "Section 4 presents the peer-topeer distribution model.",
                "A proof of concept prototype is presented in Section 5, and performance evaluations are discussed in Section 6.",
                "Related work is presented is Section 7, and finally conclusions and future work are discussed in Section 8. 2.",
                "APOCRITA Apocrita is a distributed peer-to-peer file sharing system, and has been designed to make finding documents easier in an Intranet environment.",
                "Currently, it is possible for documents to be located on a users machine or on a remote machine.",
                "It is even possible that different revisions could reside on each node on the Intranet.",
                "This means there must be a manual process to maintain document versions.",
                "Apocrita solves this problem using two approaches.",
                "First, due to the inherent nature of Apocrita, the document will only reside on a single logical location.",
                "Second, Apocrita provides a method of reverting to previous document versions.",
                "Apocrita Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page.",
                "To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.",
                "ACMSE07, MARCH 23-24, 2007, WINSTON-SALEM, NC, USA.",
                "COPYRIGHT 2007 ACM 978-1-59593-629-5/07/0003 …$5.00. 174 will also distribute documents across multiple machines to ensure high availability of important documents.",
                "For example, if a machine contains an important document and the machine is currently inaccessible, the system is capable of maintaining availability of the document through this distribution mechanism.",
                "It provides a simple interface for searching and accessing files that may exist either locally or remotely.",
                "The distributed nature of the documents is transparent to the user.",
                "Apocrita supports a decentralized network model where the peers use a discovery protocol to determine peers.",
                "Apocrita is intended for network users on an Intranet.",
                "The main focus is organizations that may not have a network large enough to require a file server and supporting infrastructure.",
                "It eliminates the need for documents to be manually shared between users while being edited and reduces the possibility of conflicting versions being distributed.",
                "The system also provides some redundancy and in the event of a single machine failure, no important documents will be lost.",
                "It is operating system independent, and easy to access through a web browser or through a standalone application.",
                "To decrease the time required for indexing a large number of documents, the indexing process is distributed across available idle nodes.",
                "Local and remote files should be easily accessible through a virtual mountable file system, providing transparency for users. 3.",
                "DISTRIBUTED INDEXING Apocrita uses a distributed index for all the documents that are available on the Intranet.",
                "Each node will contain part of the full index, and be aware of what part of the index each other node has.",
                "A node will be able to contact each node that contains a unique portion of the index.",
                "In addition, each node has a separate local index of its own documents.",
                "But as discussed later, in the current implementation, each node has a copy of the entire index.",
                "Indexing of the documents is distributed.",
                "Therefore, if a node is in the process of indexing many documents, it will break up the work over the nodes.",
                "Once a nodes local index is updated with the new documents, the distributed index will then be updated.",
                "The current distributed indexing system consists of three separate modules: NodeController, FileSender, and NodeIndexer.",
                "The responsibility of each module is discussed later in this section. 3.1 Indexing Protocol The protocol we have designed for the distributed indexing is depicted in Figure 1.",
                "Figure 1.",
                "Apocrita distributed indexing protocol.",
                "IDLE QUERY: The IDLE QUERY is sent out from the initiating node to determine which other nodes may be able to help with the overall indexing process.",
                "There are no parameters sent with the command.",
                "The receiving node will respond with either a BUSY or IDLE command.",
                "If the IDLE command is received, the initiating node will add the responding node to a list of available distributed indexing helpers.",
                "In the case of a BUSY command being received, the responding node is ignored.",
                "BUSY: Once a node received an IDL QUERY, it will determine whether it can be considered a candidate for distributed indexing.",
                "This determination is based on the overall CPU usage of the node.",
                "If the node is using most of its CPU for other processes, the node will respond to the IDLE QUERY with a BUSY command.",
                "IDLE: As with the case of the BUSY response, the node receiving the IDLE QUERY will determine its eligibility for distributed indexing.",
                "To be considered a candidate for distributed indexing, the overall CPU usage must be at a minimum to all for dedicated indexing of the distributed documents.",
                "If this is the case, the node will respond with an IDLE command.",
                "INCOMING FILE: Once the initiating node assembles a set of idle nodes to assist with the distributed indexing, it will divide the documents to be sent to the nodes.",
                "To do this, it sends an INCOMING FILE message, which contains the name of the file as well as the size in bytes.",
                "After the INCOMING FILE command has been sent, the initiating node will begin to stream the file to the other node.",
                "The initiating node will loop through the files that are to be sent to the other node; each file stream being preceded by the INCOMING FILE command with the appropriate parameters.",
                "INDEX FILE: Once the indexing node has completed the indexing process of the set of files, it must send the resultant index back to the initiating node.",
                "The index is comprised of multiple files, which exist on the file system of the indexing node.",
                "As with the INCOMING FILE command, the indexing node streams each index file after sending an INDEX FILE command.",
                "The INDEX FILE command has two parameters: the first being the name of the index, and the second is the size of the file in bytes.",
                "SEND COMPLETE: When sending the sets of files for both the index and the files to be indexed, the node must notify the corresponding node when the process is complete.",
                "Once the initiating node is finished sending the set of documents to be indexed, it will then send a SEND COMPLETE command indicating to the indexing node that there are no more files and the node can proceed with indexing the files.",
                "In the case of the initiating node sending the index files, the indexing node will complete the transfer with the SEND COMPLETE command indicating to the initiating node that there are no more index files to be sent and the initiating node can then assemble those index files into the main index.",
                "The NodeController is responsible for setting up connections with nodes in the idle state to distribute the indexing process.",
                "Using JXTA [5], the node controller will obtain a set of nodes.",
                "This set of nodes is iterated and each one is sent the IDLE QUERY command.",
                "The nodes that respond with idle are then collected.",
                "The set of idle nodes includes the node initiating the distributed indexing process, referred to as the local node.",
                "Once the collection of idle nodes is obtained, the node updates the set of controllers and evenly divides the set of documents that are to be indexed.",
                "For example, if there are 100 documents and 10 nodes (including the local node) then each node will have 10 documents to index.",
                "For each indexing node an instance of the FileSender object is created.",
                "The FileSender is aware of the set of documents that node is responsible for.",
                "Once a FileSender object has been created for each node, the NodeController waits for each FileSender to complete.",
                "When the FileSender objects have completed the NodeController will take the resultant indexes from 175 each node and pass them to an instance of the IndexCompiler, which maintains the index and the list of FileSenders.",
                "Once the IndexCompiler has completed it will return to the idle state and activate the directory scanner to monitor the locally owned set of documents for changes that may require reindexing.",
                "The NodeIndexer is responsible for receiving documents sent to it by the initiating node and then indexing them using the Lucene engine [7].",
                "Once the indexing is complete the resulting index is streamed back to the initiating node as well as compiled in the indexer nodes own local index.",
                "Before initiating the indexing process it must be sent an IDLE QUERY message.",
                "This is the first command that sets off the indexing process.",
                "The indexer node will determine whether it is considered idle based on the current CPU usage.",
                "As outlined in the protocol section if the node is not being used and has a low overall CPU usage percentage it will return IDLE to the IDLE QUERY command.",
                "If the indexer nodes CPU usage is above 50% for a specified amount of time it is then considered to be busy and will respond to the IDLE QUERY command with BUSY.",
                "If a node is determined busy it returns to its listening state waiting for another IDLE QUERY from another initiating node.",
                "If the node is determined to be idle it will enter the state where it will receive files from the initiating node that it is responsible for indexing.",
                "Once all of the files are received by the initiating node, indicated by a SEND COMPLETE message, it starts an instance of the Lucene indexing engine.",
                "The files are stored in a temporary directory separate from the nodes local documents that it is responsible for maintaining an index of.",
                "The Lucene index writer then indexes all of the transferred files.",
                "The index is stored on the drive within a temporary directory separate from the current index.",
                "After the indexing of the files completes the indexer node enters the state where the index files are sent back to the initiating node.",
                "The indexer node loops through all of the files created by Lucenes IndexWriter and streams them to the initiating node.",
                "Once these files are sent back that index is then merged into the indexer nodes own full index of the existing files.",
                "It then enters the idle state where it will then listen for any other nodes that required distributing the indexing process.",
                "The FileSender object is the initiating node equivalent of the indexer node.",
                "It initiates the communication between the initiating node and the node that will assist in the distributed indexing.",
                "The initiating node runs many instances of the FileSender node one for each other node it has determined to be idle.",
                "Upon instantiation of the FileSender it is passed the node that it is responsible for contacting and the set of files that must be sent.",
                "The FileSenders first job is to send the files that are to be indexed by the other idle node.",
                "The files are streamed one at a time to the other node.",
                "It sends each file using the INCOMING FILE command.",
                "With that command it sends the name of the file being sent and the size in bytes.",
                "Once all files have been sent the FileSender sends the SEND COMPLETE command.",
                "The FileSender creates an instance of Lucenes IndexWriter and prepares to create the index in a temporary directory on the file system.",
                "The FileSender will begin to receive the files that are to be saved within the index.",
                "It receives an INDEX FILE command with the name of the files and the size in bytes.",
                "This file is then streamed into the temporary index directory on the FileSender node.",
                "After the transfer of the index files has been completed the FileSender notifies the instance of the index compiler that it is ready to combine the index.",
                "Each instance of the FileSender has its own unique section of temporary space to store the index that has been transferred back from the indexing node.",
                "When notifying the IndexCompiler it will also pass the location of the particular FileSenders directory location of that index. 4.",
                "PEER-TO-PEER DISTRIBUTION Apocrita uses a peer-to-peer distribution model in order to distribute files.",
                "Files are distributed solely from a serving node to a client node without regard for the availability of file pieces from other clients in the network.",
                "This means that the file transfers will be fast and efficient and should not severely affect the usability of serving nodes from the point of view of a local user.",
                "The JXTA framework [5] is used in order to implement peer-to-peer functionality.",
                "This has been decided due to the extremely shorttimeline of the project which allows us to take advantage of over five years of testing and development and support from many large organizations employing JXTA in their own products.",
                "We are not concerned with any potential quality problems because JXTA is considered to be the most mature and stable peer-to-peer framework available.",
                "Using JXTA terminology, there are three types of peers used in node classification.",
                "Edge peers are typically low-bandwidth, non-dedicated nodes.",
                "Due to these characteristics, edge peers are not used with Apocrita.",
                "Relay peers are typically higher-bandwidth, dedicated nodes.",
                "This is the classification of all nodes in the Apocrita network, and, as such, are the default classification used.",
                "Rendezvous peers are used to coordinate message passing between nodes in the Apocrita network.",
                "This means that a minimum of one rendezvous peer per subnet is required. 4.1 Peer Discovery The Apocrita server subsystem uses the JXTA Peer Discovery Protocol (PDP) in order to find participating peers within the network as shown in Figure 2.",
                "Figure 2.",
                "Apocrita peer discovery process. 176 The PDP listens for peer advertisements from other nodes in the Apocrita swarm.",
                "If a peer advertisement is detected, the server will attempt to join the peer group and start actively contributing to the network.",
                "If no peers are found by the discovery service, the server will create a new peer group and start advertising this peer group.",
                "This new peer group will be periodically advertised on the network; any new peers joining the network will attach to this peer group.",
                "A distinct advantage of using the JXTA PDP is that Apocrita does not have to be sensitive to particular networking nuances such as Maximum Transmission Unit (MTU).",
                "In addition, Apocrita does not have to support one-to-many packet delivery methods such as multicast and instead can rely on JXTA for this support. 4.2 Index Query Operation All nodes in the Apocrita swarm have a complete and up-to-date copy of the network index stored locally.",
                "This makes querying the index for search results trivial.",
                "Unlike the Gnutella protocol, a query does not have to propagate throughout the network.",
                "This also means that the time to return query results is very fast - much faster than protocols that rely on nodes in the network to pass the query throughout the network and then wait for results.",
                "This is demonstrated in Figure 3.",
                "Figure 3.",
                "Apocrita query operation.",
                "Each document in the swarm has a unique document identification number (ID).",
                "A node will query the index and a result will be returned with both the document ID number as well as a list of peers with a copy of the matched document ID.",
                "It is then the responsibility of the searching peer to contact the peers in the list to negotiate file transfer between the client and server. 5.",
                "PROTOTYPE IMPLEMENTATION Apocrita uses the Lucene framework [7], which is a project under development by the Apache Software Foundation.",
                "Apache Lucene is a high-performance, full-featured text search engine library written entirely in Java.",
                "In the current implementation, Apocrita is only capable of indexing plain text documents.",
                "Apocrita uses the JXTA framework [5] as a peer-to-peer transport library between nodes.",
                "JXTA is used to pass both messages and files between nodes in the search network.",
                "By using JXTA, Apocrita takes advantage of a reliable, and proven peer-to-peer transport mechanism.",
                "It uses the pipe facility in order to pass messages and files between nodes.",
                "The pipe facility provides many different types of pipe advertisements.",
                "This includes an unsecured unicast pipe, a secured unicast pipe, and a propagated unsecured pipe.",
                "Message passing is used to pass status messages between nodes in order to aid in indexing, searching, and retrieval.",
                "For example, a node attempting to find an idle node to participate in indexing will query nodes via the message facility.",
                "Idle nodes will reply with a status message to indicate they are available to start indexing.",
                "File passing is used within Apocrita for file transfer.",
                "After a file has been searched for and located within the peer group, a JXTA socket will be opened and file transfer will take place.",
                "A JXTA socket is similar to a standard Java socket, however a JXTA socket uses JXTA pipes in underlying network transport.",
                "File passing uses an unsecured unicast pipe in order to transfer data.",
                "File passing is also used within Apocrita for index transfer.",
                "Index transfer works exactly like a file transfer.",
                "In fact, the index transfer actually passes the index as a file.",
                "However, there is one key difference between file transfer and index transfer.",
                "In the case of file transfer, a socket is created between only two nodes.",
                "In the case of index transfer, a socket must be created between all nodes in the network in order to pass the index, which allows for all nodes to have a full and complete index of the entire network.",
                "In order to facilitate this transfer efficiently, index transfer will use an unsecured propagated pipe to communicate with all nodes in the Apocrita network. 6.",
                "PERFORMANCE EVALUATION It is difficult to objectively benchmark the results obtained through Apocrita because there is no other system currently available with the same goals as Apocrita.",
                "We have, however, evaluated the performance of the critical sections of the system.",
                "The critical sections were determined to be the processes that are the most time intensive.",
                "The evaluation was completed on standard lab computers on a 100Mb/s Ethernet LAN; the machines run Windows XP with a Pentium 4 CPU running at 2.4GHz with 512 MB of RAM.",
                "The indexing time has been run against both: the Time Magazine collection [8], which contains 432 documents and 83 queries and their most relevant results, and the NPL collection [8] that has a total of 11,429 documents and 93 queries with expected results.",
                "Each document ranges in size between 4KB and 8KB.",
                "As Figure 4 demonstrates, the number of nodes involved in the indexing process affects the time taken to complete the indexing processsometimes even drastically.",
                "Figure 4.",
                "Node vs. index time.",
                "The difference in going from one indexing node to two indexing nodes is the most drastic and equates to an indexing time 37% faster than a single indexing node.",
                "The different between two 177 indexing nodes and three indexing nodes is still significant and represents a 16% faster time than two indexing nodes.",
                "As the number of indexing nodes increases the results are less dramatic.",
                "This can be attributed to the time overhead associated with having many nodes perform indexing.",
                "The time needed to communicate with a node is constant, so as the number of nodes increases, this constant becomes more prevalent.",
                "Also, the complexity of joining the indexing results is a complex operation and is complicated further as the number of indexing nodes increases.",
                "Socket performance is also a very important part of Apocrita.",
                "Benchmarks were performed using a 65MB file on a system with both the client and server running locally.",
                "This was done to isolate possible network issues.",
                "Although less drastic, similar results were shown when the client and server run on independent hardware.",
                "In order to mitigate possible unexpected errors, each test was run 10 times.",
                "Figure 5.",
                "Java sockets vs. JXTA sockets.",
                "As Figure 5 demonstrates, the performance of JXTA sockets is abysmal as compared to the performance of standard Java sockets.",
                "The minimum transfer rate obtained using Java sockets is 81,945KB/s while the minimum transfer rater obtained using JXTA sockets is much lower at 3, 805KB/s.",
                "The maximum transfer rater obtain using Java sockets is 97,412KB/s while the maximum transfer rate obtained using JXTA sockets is 5,530KB/s.",
                "Finally, the average transfer rate using Java sockets is 87,540KB/s while the average transfer rate using JXTA sockets is 4,293KB/s.",
                "The major problem found in these benchmarks is that the underlying network transport mechanism does not perform as quickly or efficiently as expected.",
                "In order to garner a performance increase, the JXTA framework needs to be substituted with a more traditional approach.",
                "The indexing time is also a bottleneck and will need to be improved for the overall quality of Apocrita to be improved. 7.",
                "RELATED WORK Several decentralized P2P systems [1, 2, 3] exist today that Apocrita features some of their functionality.",
                "However, Apocrita also has unique novel searching and indexing features that make this system unique.",
                "For example, Majestic-12 [4] is a distributed search and indexing project designed for searching the Internet.",
                "Each user would install a client, which is responsible for indexing a portion of the web.",
                "A central area for querying the index is available on the Majestic-12 web page.",
                "The index itself is not distributed, only the act of indexing is distributed.",
                "The distributed indexing aspect of this project most closely relates Apocrita goals.",
                "YaCy [6] is a peer-to-peer web search application.",
                "YaCy consists of a web crawler, an indexer, a built-in database engine, and a p2p index exchange protocol.",
                "YaCy is designed to maintain a distributed index of the Internet.",
                "It used a distributed hash table (DHT) to maintain the index.",
                "The local node is used to query but all results that are returned are accessible on the Internet.",
                "YaCy used many peers and DHT to maintain a distributed index.",
                "Apocrita will also use a distributed index in future implementations and may benefit from using an implementation of a DHT.",
                "YaCy however, is designed as a web search engine and, as such solves a much different problem than Apocrita. 8.",
                "CONCLUSIONS AND FUTURE WORK We presented Apocrita, a distributed P2P searching and indexing system intended for network users on an Intranet.",
                "It can help organizations with no network file server or necessary network infrastructure to share documents.",
                "It eliminates the need for documents to be manually shared among users while being edited and reduce the possibility of conflicting versions being distributed.",
                "A proof of concept prototype has been constructed, but the results from measuring the network transport mechanism and the indexing time were not as impressive as initially envisioned.",
                "Despite these shortcomings, the experience gained from the design and implementation of Apocrita has given us more insight into building challenging distributed systems.",
                "For future work, Apocrita will have a smart content distribution model in which a single instance of a file can intelligently and transparently replicate throughout the network to ensure a copy of every important file will always be available regardless of the availability of specific nodes in the network.",
                "In addition, we plan to integrate a revision control system into the content distribution portion of Apocrita so that users could have the ability to update an existing file that they found and have the old revision maintained and the new revision propagated.",
                "Finally, the current implementation has some overhead and redundancy due to the fact that the entire index is maintained on each individual node, we plan to design a distributed index. 9.",
                "REFERENCES [1] Rodrigues, R., Liskov, B., Shrira, L.: The Design of a Robust Peer-to-Peer System.",
                "Available online: http://www.pmg.lcs.mit.edu/~rodrigo/ew02-robust.pdf. [2] Chawathe, Y., Ratnasamy, S., Breslau, L., Lanham, N., and Chenker, S.: Making Gnutella-like P2P Systems Scalable.",
                "In Proceedings of SIGCOMM03, Karlsruhe, Germany. [3] Harvest: A Distributed Search System: http://harvest.sourceforge.net. [4] Majestic-12: Distributed Search Engine: http://www.majestic12.co.uk. [5] JXTA: http://www.jxta.org. [6] YaCy: Distributed P2P-based Web Indexing: http://www.yacy.net/yacy. [7] Lucene Search Engine Library: http://lucene.apache.org. [8] Test Collections (Time Magazine and NPL): www.dcs.gla.ac.uk/idom/ir_resources/test_collections. 178"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        }
    }
}