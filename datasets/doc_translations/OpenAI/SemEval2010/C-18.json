{
    "id": "C-18",
    "original_text": "An Initial Analysis and Presentation of Malware Exhibiting Swarm-Like Behavior Fernando C.ColÂ´on Osorio Wireless System Security Research Laboratory (W.S.S.R.L.) 420 Lakeside Avneue Marlboro, Massachusetts 01752 fcco@cs.wpi.edu Zachi Klopman Wireless System Security Research Laboratory (W.S.S.R.L.) 420 Lakeside Avneue Marlboro, Massachusetts 01752 zachi@cs.wpi.edu ABSTRACT The Slammer, which is currently the fastest computer worm in recorded history, was observed to infect 90 percent of all vulnerable Internets hosts within 10 minutes. Although the main action that the Slammer worm takes is a relatively unsophisticated replication of itself, it still spreads so quickly that human response was ineffective. Most proposed countermeasures strategies are based primarily on rate detection and limiting algorithms. However, such strategies are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer. In our work, we put forth the hypothesis that next generation worms will be radically different, and potentially such techniques will prove ineffective. Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence. Emergent Intelligence is the behavior of systems, very much like biological systems such as ants or bees, where simple local interactions of autonomous members, with simple primitive actions, gives rise to complex and intelligent global behavior. In this manuscript we will introduce the basic principles behind the idea of Swarm Worms, as well as the basic structure required in order to be considered a swarm worm. In addition, we will present preliminary results on the propagation speeds of one such swarm worm, called the ZachiK worm. We will show that ZachiK is capable of propagating at a rate 2 orders of magnitude faster than similar worms without swarm capabilities. Categories and Subject Descriptors C.2.4 [Distributed Systems]: Intrusion Detection; D.4.6 [Security and Protection]: Invasive software General Terms Experimentation, Security 1. INTRODUCTION AND PREVIOUSWORK In the early morning hours (05:30 GMT) of January 25, 2003 the fastest computer worm in recorded history began spreading throughout the Internet. Within 10 minutes after the first infected host (patient zero), 90 percent of all vulnerable hosts had been compromised creating significant disruption to the global Internet infrastructure. Vern Paxson of the International Computer Science Institute and Lawrence Berkeley National Laboratory in its analysis of Slammer commented: The Slammer worm spread so quickly that human response was ineffective, see [4] The interesting part, from our perspective, about the spread of Slammer is that it was a relatively unsophisticated worm with benign behavior, namely self-reproduction. Since Slammer, researchers have explored the behaviors of fast spreading worms, and have designed countermeasures strategies based primarily on rate detection and limiting algorithms. For example, Zou, et al., [2], proposed a scheme where a Kalman filter is used to detect the early propagation of a worm. Other researchers have proposed the use of detectors where rates of Destination Unreachable messages are monitored by firewalls, and a significant increase beyond normal, alerts the organization to the potential presence of a worm. However, such strategies suffer from the fighting the last War syndrome. That is, systems are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer. In the work described here, we put forth the hypothesis that next generation worms will be different, and therefore such techniques may have some significant limitations. Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence. The concept of emergent intelligence was first studied in association with biological systems. In such studies, early researchers discovered a variety of interesting insect or animal behaviors in the wild. A flock of birds sweeps across the sky. A group of ants forages for food. A school of fish swims, turns, flees together away from a predator, ands so forth. In general, this kind of aggregate motion has been called swarm behavior. Biologists, and computer scientists in the field of artificial intelligence have studied such biological swarms, and 323 attempted to create models that explain how the elements of a swarm interact, achieve goals, and evolve. Moreover, in recent years the study of swarm intelligence has become increasingly important in the fields of robotics, the design of Mobile ad-hoc Networks (MANETS), the design of Intrusion Detection Systems, the study of traffic patterns in transportation systems, in military applications, and other areas, see [3]. The basic concepts that have been developed over the last decade to explain swarms, and swarm behavior include four basic components. These are: 1. Simplicity of logic & actions: A swarm is composed of N agents whose intelligence is limited. Agents in the swarm use simple local rules to govern their actions. Some models called this primitive actions or behaviors; 2. Local Communication Mechanisms: Agents interact with other members in the swarm via simple local communication mechanisms. For example, a bird in a flock senses the position of adjacent bird and applies a simple rule of avoidance and follow. 3. Distributed control: Autonomous agents interact with their environment, which probably consists of other agents, but act relatively independently from all other agents. There is no central command or leader, and certainly there is no global plan. 4. Emergent Intelligence: Aggregate behavior of autonomous agents results in complex intelligent behaviors; including self-organization. In order to understand fully the behavior of such swarms it is necessary to construct a model that explains the behavior of what we will call generic worms. This model, which extends the work by Weaver [5] is presented here in section 2. In addition, we intend to extend said model in such a way that it clearly explains the behaviors of this new class of potentially dangerous worms called Swarm Worms. Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence. Such Swarm Worms are potentially more harmful than their similar generic counterparts. Specifically, the first instance, to our knowledge, of such a learning worm was created, called ZachiK. ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies. Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology. Preliminary results showed that such worms are capable of compromising hosts at rates up to two orders of magnitude faster than their generic counterpart. The rest of this manuscript is structure as follows. In section 2 an abstract model of both generic worms as well as swarm worms is presented. This model is used in section 2.6 to described the first instance of a swarm worm, ZachiK. In section 4, preliminary results via both empirical measurements as well as simulation is presented. Finally, in section 5 our conclusions and insights into future work are presented. 2. WORM MODELING In order to study the behavior of swarm worms in general, it is necessary to create a model that realistically reflects the structure of worms and it is not necessarily tied to a specific instance. In this section, we described such a model where a general worm is describe as having four-(4) basic components or subfunctions. By definition, a worm is a selfcontained, self propagating program. Thus, in simple terms, it has two main functions: that which propagates and that which does other things. We propose that there is a third broad functionality of a worm, that of self-preservation. We also propose that the other functionality of a worm may be more appropriately categorized as Goal-Based Actions (GBA), as whatever functionality included in a worm will naturally be dependent on whatever goals (and subgoals) the author has. The work presented by Weaver et. al. in [5] provides us with mainly an action and technique based taxonomy of computer worms, which we utilize and further extend here. 2.1 Propagation The propagation function itself may be broken down into three actions: acquire target, send scan, and infect target. Acquiring the target simply means picking a host to attack next. Sending a scan involves checking to see if that host is receptive to an infection attempt, since IP-space is sparsely populated. This may involve a simple ping to check if the host is alive or a full out vulnerability assessment. Infecting the target is the actual method used to send the worm code to the new host. In algorithm form: propagate() { host := acquire_target() success := send_scan(host) if( success ) then infect(host) endif } In the case of a simple worm which does not first check to see if the host is available or susceptible (such as Slammer), the scan method is dropped: propagate() { host := acquire_target() infect(host) } Each of these actions may have an associated cost to its inclusion and execution, such as increased worm size and CPU or network load. Depending on the authors needs or requirements, these become limiting factors in what may be included in the worms actions. This is discussed further after expanding upon these actions below. 2.2 Target Acquisition: The Target Acquisition phase of our worm algorithm is built directly off of the Target Discovery section in [5]. Weaver et. al. taxonomize this task into 5 separate categories. Here, we further extend their work through parameterization. Scanning: Scanning may be considered an equation-based method for choosing a host. Any type of equation may be used to arrive at an IP address, but there are three main types seen thus far: sequential, random, and local preference. Sequential scanning is exactly as it sounds: start at an IP address and increment through all the IP space. This could carry with it the options of which IP to start with (user chosen value, random, or based on IP of infected host) and 324 how many times to increment (continuous, chosen value, or subnet-based). Random scanning is completely at random (depending on the chosen PRNG method and its seed value). Local preference scanning is a variance of either Sequential or Random, whereby it has a greater probability of choosing a local IP address over a remote one (for example, the traditional 80/20 split). Pre-generated Target Lists: Pre-generated Target Lists, or so called hit-lists, could include the options for percentage of total population and percentage wrong, or just number of IPs to include. Implicit to this type is the fact that the list is divided among a parent and its children, avoiding the problem of every instance hitting the exact same machines. Externally Generated Target Lists: Externally generated target lists depend on one or more external sources that can be queried for host data. This will involve either servers that are normally publicly available, such as gaming meta-servers, or ones explicitly setup by the worm or worm author. The normally available meta-servers could have parameters for rates of change, such as many popping up at night or leaving in the morning. Each server could also have a maximum queries/second that it would be able to handle. The worm would also need a way of finding these servers, either hard-coded or through scanning. Internal Target Lists: Internal Target Lists are highly dependent on the infected host. This method could parameterize the choice of how much info is on the host, such as all machines in subnet, all windows boxes in subnet, particular servers, number of internal/external, or some combination. Passive: Passive methods are determined by normal interactions between hosts. Parameters may include a rate of interaction with particular machines, internal/external rate of interaction, or subnet-based rate of interaction. Any of these methods may also be combined to produce different types of target acquisition strategies. For example, the a worm may begin with an initial hit-list of 100 different hosts or subnets. Once it has exhausted its search using the hit-list, it may then proceed to perform random scanning with a 50% local bias. It is important to note, however, that the resource consumption of each method is not the same. Different methods may require the worm to be large, such as the extra bytes required by a hit-list, or to take more processing time, such as by searching the host for addresses of other vulnerable hosts. Further research and analysis should be performed in this area to determine associated costs for using each method. The costs could then be used in determining design tradeoffs that worm authors engage at. For example, hit lists provide a high rate of infection, but at a high cost of worm payload size. 2.2.1 Sending a Scan The send scan function tests to see if the host is available for infection. This can be as simple as checking if the host is up on the network or as complex as checking if the host is vulnerable to the exploit which will be used. The sending of a scan before attempted infection can increase the scanning rate if the cost for failing an infection is greater than the cost of failing a scan or sending a scan plus infection; and failures are more frequent than successes. One important parameter to this would be the choice of transport protocol (TCP/UDP) or just simply the time for one successful scan and time for one failed scan. Also, whether or not it tests for the host to be up or if it is a full test for the vulnerability (or for multiple vulnerabilities). 2.2.2 Infection Vector (IV) The particular infection vector used to access the remote host is mainly dependent on the particular vulnerability chosen to exploit. In a non-specific sense, it is dependent on the transport protocol chosen to use and the message size to be sent. Section 3 of [5] also proposes three particular classes of IV: Self-carried, second channel, and embedded. 2.3 Self Preservation The Self Preservation actions of a worm may take many forms. In the wild, worms have been observed to disable anti-virus software or prevent sending itself to certain antivirusknown addresses. They have also been seen to attempt disabling of other worms which may be contending for the same system. We also believe that a time-based throttled scanning may help the worm to slip under the radar. We also propose a decoy method, whereby a worm will release a few children that cause a lot of noise so that the parent is not noticed. It has also been proposed [5] that a worm cause damage to its host if, and only if, it is disturbed in some way. This module could contain parameters for: probability of success in disabling anti-virus or other software updates, probability of being noticed and thus removed, or hardening of the host against other worms. 2.4 Goal-Based Actions A worms GBA functionality depends on the authors goal list. The Payloads section of [5] provides some useful suggestions for such a module. The opening of a back-door can make the host susceptible to more attacks. This would involve a probability of the back-door being used and any associated traffic utilization. It could also provide a list of other worms this host is now susceptible to or a list of vulnerabilities this host now has. Spam relays and HTTP-Proxies of course have an associated bandwidth consumption or traffic pattern. Internet DoS attacks would have a set time of activation, a target, and a traffic pattern. Data damage would have an associated probability that the host dies because of the damage. In Figure 1, this general model of a worm is summarized. Please note that in this model there is no learning, no, or very little, sharing of information between worm instances, and certainly no coordination of actions. In the next section we expand the model to include such mechanisms, and hence, arrive at the general model of a swarm worm. 2.5 Swarms - General Model As described in section 1, the basic characteristics that distinguished swarm behavior from simply what appears to be collective coordinated behaviors are four basic attributes. These are: 1. Simplicity of logic & actions; 2. Local Communication Mechanisms; 3. Distributed control; and 4. Emergent Intelligence, including self-organization. 325 Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 1: General Worm Model In this work we aggregate all of these attributes under the general title of Learning, Communication, and Distributed Control. The presence of these attributes distinguishes swarm worms from otherwise regular worms, or other types of malware such as Zombies. In figure ??, the generic model of a worm is expanded to included these set of actions. Within this context then, a worm like Slammer cannot be categorized as a swarm worm due to the fact that new instances of the worm do not coordinate their actions or share information. On the other hand, Zombies and many other forms of DDoS, which at first glance may be consider swarm worms are not. This is simply due to fact that in the case of Zombies, control is not distributed but rather centralized, and no emergent behaviors arise. The latter, the potential emergence of intelligence or new behaviors is what makes swarm worms so potentially dangerous. Finally, when one considers the majority of recent disruptions to the Internet Infrastructure, and in light of our description of swarm attacks, then said disruptions can be easily categorized as precursors to truly swarm behavior. Specifically, â¢ DDOS - Large number of compromised hosts send useless packets requiring processing (Stacheldraht, http : //www.cert.org/ incidentnotes/IN â 99 â 04.html). DDoS attacks are the early precursors to Swarm Attacks due to the large number of agents involved. â¢ Code Red CrV1, Code Red II, Nimbda - Exhibit early notions of swarm attacks, including a backdoor communication channel. â¢ Staniford & Paxson in How to Own the Internet in Your Spare Time? explore modifications to CrV1, Code Red I, II with a swarm like type of behavior. For example, they speculate on new worms which employ direct worm-to-worm communication, and employ programmable updates. For example the Warhol worm, and Permutation-Scanning (self coordinating) worms. 2.6 Swarm Worm: the details In considering the creation of what we believed to be the first Swarm Worm in existence, we wanted to adhere as close as possible to the general model presented in section ?? while at the same time facilitating large scale analysis, both empirical and through simulations, of the behavior of the swarm. For this reason, we selected as the first instance Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Learning, Communication, Pheromones/Flags (Test and Distributed Control if Worm is already present) Time bombs, Learning Algorithms, IRC channel Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 2: General Model of a Swarm Worm of the swarm a simple password cracking worm. The objective of this worm simply is to infect a host by sequentially attempting to login into the host using well known passwords (dictionary attack), passwords that have been discovered previously by any member of the swarm, and random passwords. Once, a host is infected, the worm will create communication channels with both its known neighbors at that time, as well as with any offsprings that it successfully generates. In this context a successful generation of an offspring means simply infecting a new host and replicating an exact copy of itself in such a host. We call this swarm worm the ZachiK worm in honor of one of its creators. As it can be seen from this description, the ZachiK worm exhibits all of the elements described before. In the following sections, we described in detail each one of the elements of the ZachiK worm. 2.7 Infection Vector The infection vector used for ZachiK worm is the secure shell protocol SSH. A modified client which is capable of receiving passwords from the command line was written, and integrated with a script that supplies it with various passwords: known and random. When a password is found for an appropriate target, the infection process begins. After the root password of a host is discovered, the worm infects the target host and replicates itself. The worm creates a new directory in the target host, copies the modified ssh client, the script, the communications servers, and the updated versions of data files (list of known passwords and a list of current neighbors). It then runs the modified script on the newly infected hosts, which spawns the communications server, notifies the neighbors and starts looking for new targets. It could be argued, correctly, that the ZachiK worm can be easily defeated by current countermeasure techniques present on most systems today, such as disallowing direct root logins from the network. Within this context ZachiK can quickly be discarded as very simple and harmless worm that does not require further study. However, the reader should consider the following: 1. ZachiK can be easily modified to include a variety of infection vectors. For example, it could be programmed to guess common user names and their passwords; gain 326 access to a system, then guess the root password or use other well know vulnerabilities to gain root privileges; 2. ZachiK is a proof of concept worm. The importance of ZachiK is that it incorporates all of the behaviors of a swarm worm including, but not restricted to, distributed control, communication amongst agents, and learning; 3. ZachiK is composed of a large collection of agents operating independently which lends itself naturally to parallel algorithms such as a parallel search of the IPV4 address space. Within this context, SLAMMER, does incorporate a parallel search capability of potentially susceptible addresses. However, unlike ZachiK, the knowledge discovered by the search is never shared amongst the agents. For this reasons, and many others, one should not discard the potential of this new class of worms but rather embrace its study. 2.8 Self-Preservation In the case of ZachiK worm, the main self-preservation techniques used are simply keeping the payload small. In this context, this simply means restricting the number of passwords that an offspring inherits, masquerading worm messages as common http requests, and restricting the number of neighbors to a maximum of five-(5). 2.9 Propagation Choosing the next target(s) in an efficient matter requires thought. In the past, known and proposed worms, see [5], have applied propagation techniques that varied. These include: strictly random selection of a potential vulnerable host; target lists of vulnerable hosts; locally biased random selection (select a host target at random from a local subnet); and a combination of some or all of the above. In our test and simulation environments, we will apply a combination of locally biased and totally random selection of potential vulnerable hosts. However, due to the fact that the ZachiK worm is a swarm worm, address discovery (that is when non-existent addresses are discovered) information will be shared amongst members of the swarm. The infection and propagation threads do the following set of activities repeatedly: â¢ Choose an address â¢ Check the validity of the address â¢ Choose a set of passwords â¢ Try infecting the selected host with this set of passwords As described earlier, choosing an address makes use of a combination of random selection, local bias, and target lists. Specifically, to choose an address, the instance may either: â¢ Generate a new random address â¢ Generate an address on the local network â¢ Pick an address from a handoff list The choice is made randomly among these options, and can be varied to test the dependency of propagation on particular choices. Password are either chosen from the list of known passwords or newly generated. When an infection of a valid address fails, it is added to a list of handoffs, which is sent to the neighbors to try to work on. 2.10 Learning, CommunicationandDistributed Control 2.10.1 Communication The concept of a swarm is based on transfer of information amongst neighbors, which relay their new incoming messages to their neighbors, and so on until every worm instance in the swarm is aware of these messages. There are two classes of messages: data or information messages and commands. The command messages are meant for an external user (a.k.a., hackers and/or crackers) to control the actions of the instances, and are currently not implemented. The information messages are currently of three kinds: new member, passwords and exploitable addresses (handoffs). The new member messages are messages that a new instance sends to the neighbors on its (short) list of initial neighbors. The neighbors then register these instances in their neighbor list. These are messages that form the multi-connectivity of the swarm, and without them, the topology will be a treelike structure, where eliminating a single node would cause the instances beneath it to be inaccessible. The passwords messages inform instances of newly discovered passwords, and by informing all instances, the swarm as whole collects this information, which allows it to infect new instances more effectively. The handoffs messages inform instances of valid addresses that could not be compromised (fail at breaking the password for the root account). Since the address space is rather sparse, it takes a relatively long time (i.e. many trials) to discover a valid address. Therefore, by handing off discovered valid addresses, the swarm is (a) conserving energy by not re-discovering the same addresses (b) attacking more effectively. In a way, this is a simple instance of coordinated activity of a swarm. 2.10.2 Coordination When a worm instance is born, it relays its existence to all neighbors on its list. The main thread then spawns a few infection threads, and continues to handle incoming messages (registering neighbors, adding new passwords, receiving addresses and relaying these messages). 2.10.3 Distributed Control Control in the ZachiK worm is distributed in the sense that each instance of the worm performs a set of actions independently of every other instance while at the same time benefiting from the learning achieve by its immediate neighbors. 2.11 Goal Based Actions The first instantiation of the ZachiK worm has two basic goals. These are: (1) propagate, and (2) discover and share with members of th swarm new root passwords. 3. EXPERIMENTAL DESIGN In order to verify our hypothesis that Swarm Worms are more capable, and therefore dangerous than other well known 327 worms, a network testbed was created, and a simulator, capable of simulating large scale Internet-like topologies (IPV4 space), was developed. The network testbed consisted of a local area network of 30 Linux based computers. The simulator was written in C++ . The simple swarm worm described in section 2.6 was used to infect patient-zero, and then the swarm worm was allowed to propagate via its own mechanisms of propagation, distributed control, and swarm behaviors. In the case of a simple local area network of 30 computers, six-(6) different root passwords out of a password space of 4 digits (10000 options) were selected. At the start of the experiment a single known password is known, that of patient-zero. All shared passwords are distributed randomly across all nodes. Similarly, in the case of the simulation, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed. Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets. For example, in one of our simulation runs, the network topology consisted of 200 subnets each containing 50 hosts. In such a topology, shared passwords were distributed across subnets where a varying percentage of passwords were shared across subnets. The percentages of shared passwords used was reflective of early empirical studies, where up to 39.7% of common passwords were found to be shared. 4. RESULTS In Figure 3, the results comparing Swarm Attack behavior versus that of a typical Malform Worm for a 30 node LAN are presented. In this set of empirical runs, six-(6) shared passwords were distributed at random across all nodes from a possible of 10,000 unknown passwords. The data presented reflects the behaviors of a total of three-(3) distinct classes of worm or swarm worms. The class of worms presented are as follows: â¢ I-NS-NL:= Generic worm, independent (I), no learning/memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; and â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings. As it is shown in Figure 3, the results validate our original hypothesis that swarm worms are significantly more efficient and dangerous than generic worms. In this set of experiments, the sharing of passwords provides an order of magnitude improvement over a memoryless random worm. Similarly, a swarm worm that shares passwords and addresses is approximately two orders of magnitude more efficient than its generic counterpart. In Figure 3, a series of discontinuities can be observed. These discontinuities are an artifact of the small sample space used for this experiment. Basically, as soon as a password is broken, all nodes sharing that specific password are infected within a few seconds. Note that it is trivial for a swarm worm to scan and discovered a small shared password space. In Figure 4, the simulation results comparing Swarm Attack Behavior versus that of a Generic Malform Worm are presented. In this set of simulation runs, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed. Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets. The data presented reflects the behaviors of three-(3) distinct classes of worm or swarm worms and two(2) different target host selection scanning strategies (random scanning and local bias). The amount of local bias was varied across multiple simulation runs. The results presented are aggregate behaviors. In general the following class of Generic Worms and Swarm Worms were simulated. Address Scanning: â¢ Random:= addresses are selected at random from a subset of the IPV4 space, namely, a 224 address space; and â¢ Local Bias:= addresses are selected at random from either a local subnet (256 addresses) or from a subset of the IPV4 space, namely, a 224 address space. The percentage of local bias is varied across multiple runs. Learning, Communication & Distributed Control â¢ I-NL-NS: Generic worm, independent (I), no learning/ memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ I-L-OOS: Generic worm, independent (I), learning/ memoryless (L), and one time sharing of information with offsprings only (OOS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; â¢ S-L-S&AOP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of addresses with neighbors and offsprings, shares passwords one time only (at creation) with offsprings(SA&OP); â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings. As it is shown in Figure 4, the results are consistent with our set of empirical results. In addition, the following observations can be made. 1. Local preference is incredibly effective. 2. Short address handoffs are more effective than long ones. We varied the size of the list allowed in the sharing of addresses; the overhead associated with a long address list is detrimental to the performance of the swarm worm, as well as to its stealthiness; 3. For the local bias case, sharing valid addresses of susceptible host, S-L-S&AOP worm (recall, the S-L-S&AOP swarm shares passwords, one time only, with offsprings 328 at creation time) is more effective than sharing passwords in the case of the S-L-SP swarm. In this case, we can think of the swarm as launching a distributeddictionary attack: different segments of the swarm use different passwords to try to break into susceptible uninfected host. In the local bias mode, early in the life of the swarm, address-sharing is more effective than password-sharing, until most subnets are discovered. Then the targeting of local addresses assists in discovering the susceptible hosts, while the swarm members need to waste time rediscovering passwords; and 4. Infecting the last 0.5% of nodes takes a very long time in non-local bias mode. Basically, the shared password list across subnets has been exhausted, and the swarm reverts to simply a random discovery of password algorithm. Figure 3: Swarm Attack Behavior vs. Malform Worm: Empirical Results, 30node LAN Figure 4: Swarm Attack Behavior vs. Malform Worm: Simulation Results 5. SUMMARY AND FUTURE WORK In this manuscript, we have presented an abstract model, similar in some aspects to that of Weaver [5], that helps explain the generic nature of worms. The model presented in section 2 was extended to incorporate a new class of potentially dangerous worms called Swarm Worms. Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence. Such Swarm Worms are potentially more harmful than their generic counterparts. In addition, the first instance, to our knowledge, of such a learning worm was created, called ZachiK. ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies. Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology. Preliminary results showed that such worms is capable of compromising hosts a rates up to 2 orders of magnitude faster than its generic counterpart while retaining stealth capabilities. This work opens up a new area of interesting problems. Some of the most interesting and pressing problems to be consider are as follows: â¢ Is it possible to apply some of learning concepts developed over the last ten years in the areas of swarm intelligence, agent systems, and distributed control to the design of sophisticated swarm worms in such a way that true emergent behavior takes place? â¢ Are the current techniques being developed in the design of Intrusion Detection & CounterMeasure Systems and Survivable systems effective against this new class of worms?; and â¢ What techniques, if any, can be developed to create defenses against swarm worms? 6. ACKNOWLEDGMENTS This work was conducted as part of a larger effort in the development of next generation Intrusion Detection & CounterMeasure Systems at WSSRL. The work is conducted under the auspices of Grant ACG-2004-06 by the Acumen Consulting Group, Inc., Marlboro, Massachusetts. 7. REFERENCES [1] C.C. Zou, L. Gao, W. G., and Towsley, D. Monitoring and early warning for internet worms. In 10th ACM Conference on Computer and Communications Security, Washington, DC (October 2003). [2] Liu, S., and Passino, K. Swarm intelligence: Literature overview. In Dept. of Electrical Engineering, The Ohio State University, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., and Weaver, N. The spread of the saphire/slammer worm. Tech. rep., A joint effort of CAIDA, ICSI, Silicon Defense, UC Berkeley EECS and UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S., and Cunningham, R. A taxonomy of computer worms. In Proceedings of the ACM Workshop on Rapid Malware (WORM) (2003). 329",
    "original_translation": "Un AnÃ¡lisis Inicial y PresentaciÃ³n de Malware que Exhibe Comportamiento Similar a un Enjambre por Fernando C. ColÃ³n Osorio Laboratorio de InvestigaciÃ³n en Seguridad de Sistemas InalÃ¡mbricos (W.S.S.R.L.) El Slammer, que actualmente es el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada, se observÃ³ infectando el 90 por ciento de todos los hosts vulnerables de Internet en 10 minutos. Aunque la acciÃ³n principal que realiza el gusano Slammer es una replicaciÃ³n relativamente poco sofisticada de sÃ­ mismo, se propaga tan rÃ¡pidamente que la respuesta humana fue ineficaz. La mayorÃ­a de las estrategias de contramedidas propuestas se basan principalmente en la detecciÃ³n de tasas y algoritmos de limitaciÃ³n. Sin embargo, se estÃ¡n diseÃ±ando y desarrollando estrategias para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En nuestro trabajo, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n radicalmente diferentes, y posiblemente dichas tÃ©cnicas resultarÃ¡n ineficaces. EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. La Inteligencia Emergente es el comportamiento de sistemas, muy similar a sistemas biolÃ³gicos como hormigas o abejas, donde las interacciones locales simples de miembros autÃ³nomos, con acciones primitivas simples, dan lugar a un comportamiento global complejo e inteligente. En este manuscrito introduciremos los principios bÃ¡sicos detrÃ¡s de la idea de los Gusanos en Enjambre, asÃ­ como la estructura bÃ¡sica requerida para ser considerado un gusano en enjambre. AdemÃ¡s, presentaremos resultados preliminares sobre las velocidades de propagaciÃ³n de un gusano de enjambre llamado gusano ZachiK. Demostraremos que ZachiK es capaz de propagarse a una velocidad 2 Ã³rdenes de magnitud mÃ¡s rÃ¡pida que gusanos similares sin capacidades de enjambre. CategorÃ­as y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: DetecciÃ³n de Intrusiones; D.4.6 [Seguridad y ProtecciÃ³n]: Software Invasivo TÃ©rminos Generales ExperimentaciÃ³n, Seguridad 1. INTRODUCCIÃN Y TRABAJO PREVIO En las primeras horas de la maÃ±ana (05:30 GMT) del 25 de enero de 2003, el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada comenzÃ³ a propagarse por Internet. Dentro de los 10 minutos posteriores al primer huÃ©sped infectado (paciente cero), el 90 por ciento de todos los huÃ©spedes vulnerables habÃ­an sido comprometidos, creando una interrupciÃ³n significativa en la infraestructura de Internet a nivel global. Vern Paxson del Instituto Internacional de Ciencias de la ComputaciÃ³n y del Laboratorio Nacional Lawrence Berkeley comentÃ³ en su anÃ¡lisis de Slammer: El gusano Slammer se propagÃ³ tan rÃ¡pidamente que la respuesta humana fue ineficaz, ver [4]. La parte interesante, desde nuestro punto de vista, sobre la propagaciÃ³n de Slammer es que era un gusano relativamente poco sofisticado con un comportamiento benigno, es decir, la auto-reproducciÃ³n. Desde Slammer, los investigadores han explorado los comportamientos de los gusanos de propagaciÃ³n rÃ¡pida y han diseÃ±ado estrategias de contramedidas basadas principalmente en la detecciÃ³n de la velocidad y algoritmos de limitaciÃ³n. Por ejemplo, Zou, et al., [2], propusieron un esquema donde se utiliza un filtro de Kalman para detectar la propagaciÃ³n temprana de un gusano. Otros investigadores han propuesto el uso de detectores donde las tasas de mensajes de Destino Inalcanzable son monitoreadas por los firewalls, y un aumento significativo mÃ¡s allÃ¡ de lo normal alerta a la organizaciÃ³n sobre la posible presencia de un gusano. Sin embargo, tales estrategias sufren del sÃ­ndrome de luchar la Ãºltima guerra. Es decir, se estÃ¡n diseÃ±ando y desarrollando sistemas para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En el trabajo descrito aquÃ­, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n diferentes, y por lo tanto, dichas tÃ©cnicas pueden tener algunas limitaciones significativas. EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. El concepto de inteligencia emergente fue estudiado por primera vez en asociaciÃ³n con sistemas biolÃ³gicos. En tales estudios, los primeros investigadores descubrieron una variedad de comportamientos interesantes de insectos o animales en la naturaleza. Una bandada de pÃ¡jaros cruza el cielo. Un grupo de hormigas busca comida. Una escuela de peces nada, gira, huye juntos lejos de un depredador, y asÃ­ sucesivamente. En general, este tipo de movimiento agregado se ha llamado comportamiento de enjambre. Los biÃ³logos y cientÃ­ficos de la computaciÃ³n en el campo de la inteligencia artificial han estudiado tales enjambres biolÃ³gicos y han intentado crear modelos que expliquen cÃ³mo interactÃºan los elementos de un enjambre, logran objetivos y evolucionan. AdemÃ¡s, en los Ãºltimos aÃ±os el estudio de la inteligencia de enjambre ha cobrado cada vez mÃ¡s importancia en los campos de la robÃ³tica, el diseÃ±o de Redes MÃ³viles Ad-hoc (MANETS), el diseÃ±o de Sistemas de DetecciÃ³n de Intrusiones, el estudio de patrones de trÃ¡fico en sistemas de transporte, en aplicaciones militares y otras Ã¡reas, ver [3]. Los conceptos bÃ¡sicos que se han desarrollado en la Ãºltima dÃ©cada para explicar los enjambres y su comportamiento incluyen cuatro componentes bÃ¡sicos. Estos son: 1. Sencillez de la lÃ³gica y acciones: Un enjambre estÃ¡ compuesto por N agentes cuya inteligencia es limitada. Los agentes en el enjambre utilizan reglas locales simples para gobernar sus acciones. Algunos modelos llaman a estas acciones o comportamientos primitivos; 2. Mecanismos de comunicaciÃ³n local: Los agentes interactÃºan con otros miembros en el enjambre a travÃ©s de simples mecanismos de comunicaciÃ³n local. Por ejemplo, un pÃ¡jaro en una bandada percibe la posiciÃ³n del pÃ¡jaro adyacente y aplica una regla simple de evitaciÃ³n y seguimiento. 3. Control distribuido: Los agentes autÃ³nomos interactÃºan con su entorno, que probablemente consiste en otros agentes, pero actÃºan relativamente de forma independiente de todos los demÃ¡s agentes. No hay un mando central o lÃ­der, y ciertamente no hay un plan global. Inteligencia emergente: El comportamiento agregado de agentes autÃ³nomos resulta en comportamientos inteligentes complejos, incluyendo la autoorganizaciÃ³n. Para comprender completamente el comportamiento de tales enjambres, es necesario construir un modelo que explique el comportamiento de lo que llamaremos gusanos genÃ©ricos. Este modelo, que amplÃ­a el trabajo de Weaver [5], se presenta aquÃ­ en la secciÃ³n 2. AdemÃ¡s, tenemos la intenciÃ³n de ampliar dicho modelo de tal manera que explique claramente los comportamientos de esta nueva clase de gusanos potencialmente peligrosos llamados Gusanos en Enjambre. Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biolÃ³gicos y muestran un alto grado de aprendizaje, comunicaciÃ³n e inteligencia distribuida. Tales gusanos en enjambre son potencialmente mÃ¡s daÃ±inos que sus contrapartes genÃ©ricas similares. EspecÃ­ficamente, la primera instancia, segÃºn nuestro conocimiento, de un gusano de aprendizaje de este tipo fue creado, llamado ZachiK. ZachiK es un gusano enjambre de descifrado de contraseÃ±as simple que incorpora diferentes estrategias de aprendizaje y comparticiÃ³n de informaciÃ³n. Un gusano de enjambre similar fue desplegado tanto en una red de Ã¡rea local de treinta (30) hosts, como simulado en una topologÃ­a de 10,000 nodos. Los resultados preliminares mostraron que dichos gusanos son capaces de comprometer a los anfitriones a velocidades hasta dos Ã³rdenes de magnitud mÃ¡s rÃ¡pidas que su contraparte genÃ©rica. El resto de este manuscrito estÃ¡ estructurado de la siguiente manera. En la secciÃ³n 2 se presenta un modelo abstracto tanto de gusanos genÃ©ricos como de gusanos en enjambre. Este modelo se utiliza en la secciÃ³n 2.6 para describir la primera instancia de un gusano enjambre, ZachiK. En la secciÃ³n 4, se presentan resultados preliminares a travÃ©s de mediciones empÃ­ricas y simulaciones. Finalmente, en la secciÃ³n 5 se presentan nuestras conclusiones y perspectivas sobre trabajos futuros. MODELADO DE GUSANOS Para estudiar el comportamiento de los gusanos en enjambre en general, es necesario crear un modelo que refleje de manera realista la estructura de los gusanos y que no estÃ© necesariamente ligado a una instancia especÃ­fica. En esta secciÃ³n, describimos un modelo en el que un gusano general se describe como teniendo cuatro (4) componentes bÃ¡sicos o subfunciones. Por definiciÃ³n, un gusano es un programa autocontenido y auto propagante. Por lo tanto, en tÃ©rminos simples, tiene dos funciones principales: la que se propaga y la que realiza otras tareas. Proponemos que hay una tercera amplia funcionalidad de un gusano, la de autoconservaciÃ³n. TambiÃ©n proponemos que la otra funcionalidad de un gusano podrÃ­a ser categorizada de manera mÃ¡s apropiada como Acciones Basadas en Objetivos (ABO), ya que cualquier funcionalidad incluida en un gusano dependerÃ¡ naturalmente de los objetivos (y subobjetivos) que tenga el autor. El trabajo presentado por Weaver et al. en [5] nos proporciona principalmente una taxonomÃ­a de gusanos informÃ¡ticos basada en acciones y tÃ©cnicas, la cual utilizamos y ampliamos aquÃ­. 2.1 PropagaciÃ³n La funciÃ³n de propagaciÃ³n en sÃ­ misma puede desglosarse en tres acciones: adquirir objetivo, enviar escaneo e infectar objetivo. Adquirir el objetivo simplemente significa elegir un anfitriÃ³n para atacar a continuaciÃ³n. Enviar un escaneo implica verificar si ese host estÃ¡ receptivo a un intento de infecciÃ³n, ya que el espacio de direcciones IP estÃ¡ escasamente poblado. Esto puede implicar un simple ping para verificar si el host estÃ¡ activo o una evaluaciÃ³n completa de vulnerabilidades. Infectar al objetivo es el mÃ©todo real utilizado para enviar el cÃ³digo del gusano al nuevo hospedador. En forma de algoritmo: propagar() { host := adquirir_objetivo() Ã©xito := enviar_escaneo(host) si( Ã©xito ) entonces infectar(host) fin si } En el caso de un gusano simple que no verifica primero si el host estÃ¡ disponible o susceptible (como Slammer), se elimina el mÃ©todo de escaneo: propagar() { host := adquirir_objetivo() infectar(host) } Cada una de estas acciones puede tener un costo asociado a su inclusiÃ³n y ejecuciÃ³n, como un aumento en el tamaÃ±o del gusano y la carga de CPU o red. Dependiendo de las necesidades o requisitos de los autores, estos se convierten en factores limitantes en lo que puede incluirse en las acciones de los gusanos. Esto se discute mÃ¡s a fondo despuÃ©s de expandir sobre estas acciones a continuaciÃ³n. 2.2 AdquisiciÃ³n de Objetivos: La fase de AdquisiciÃ³n de Objetivos de nuestro algoritmo de gusano se construye directamente a partir de la secciÃ³n de Descubrimiento de Objetivos en [5]. Weaver et al. clasifican esta tarea en 5 categorÃ­as separadas. AquÃ­, ampliamos aÃºn mÃ¡s su trabajo a travÃ©s de la parametrizaciÃ³n. Escaneo: El escaneo puede considerarse un mÃ©todo basado en ecuaciones para elegir un anfitriÃ³n. Cualquier tipo de ecuaciÃ³n puede ser utilizada para llegar a una direcciÃ³n IP, pero hasta ahora se han visto tres tipos principales: secuencial, aleatorio y preferencia local. El escaneo secuencial es exactamente como suena: comenzar en una direcciÃ³n IP e incrementar a travÃ©s de todo el espacio de direcciones IP. Esto podrÃ­a llevar consigo las opciones de quÃ© IP empezar (valor elegido por el usuario, aleatorio o basado en la IP del host infectado) y cuÃ¡ntas veces incrementar (continuo, valor elegido o basado en subred). El escaneo aleatorio es completamente al azar (dependiendo del mÃ©todo PRNG elegido y su valor de semilla). El escaneo de preferencia local es una variante de Secuencial o Aleatorio, en la que tiene una mayor probabilidad de elegir una direcciÃ³n IP local en lugar de una remota (por ejemplo, la divisiÃ³n tradicional de 80/20). Listas de objetivos pregeneradas: Las listas de objetivos pregeneradas, o tambiÃ©n llamadas listas de objetivos, podrÃ­an incluir opciones para el porcentaje de la poblaciÃ³n total y el porcentaje de errores, o simplemente el nÃºmero de direcciones IP a incluir. ImplÃ­cito en este tipo es el hecho de que la lista se divide entre un padre y sus hijos, evitando el problema de que cada instancia golpee exactamente las mismas mÃ¡quinas. Listas de objetivos generadas externamente: Las listas de objetivos generadas externamente dependen de una o mÃ¡s fuentes externas que pueden ser consultadas para obtener datos del host. Esto implicarÃ¡ servidores que normalmente estÃ¡n pÃºblicamente disponibles, como los meta-servidores de juegos, o aquellos configurados explÃ­citamente por el gusano o el autor del gusano. Los meta-servidores normalmente disponibles podrÃ­an tener parÃ¡metros para tasas de cambio, como muchos apareciendo por la noche o desapareciendo por la maÃ±ana. Cada servidor tambiÃ©n podrÃ­a tener un mÃ¡ximo de consultas por segundo que serÃ­a capaz de manejar. El gusano tambiÃ©n necesitarÃ­a una forma de encontrar estos servidores, ya sea codificada en duro o a travÃ©s de escaneo. Listas de Objetivos Internos: Las Listas de Objetivos Internos dependen en gran medida del host infectado. Este mÃ©todo podrÃ­a parametrizar la elecciÃ³n de cuÃ¡nta informaciÃ³n hay en el host, como todas las mÃ¡quinas en la subred, todas las computadoras con Windows en la subred, servidores especÃ­ficos, nÃºmero de internos/externos, o alguna combinaciÃ³n. Los mÃ©todos pasivos son determinados por las interacciones normales entre los anfitriones. Los parÃ¡metros pueden incluir una tasa de interacciÃ³n con mÃ¡quinas particulares, una tasa de interacciÃ³n interna/externa, o una tasa de interacciÃ³n basada en subredes. Cualquiera de estos mÃ©todos tambiÃ©n puede combinarse para producir diferentes tipos de estrategias de adquisiciÃ³n de objetivos. Por ejemplo, un gusano puede comenzar con una lista inicial de 100 hosts o subredes diferentes. Una vez que haya agotado su bÃºsqueda utilizando la lista de Ã©xitos, puede proceder a realizar un escaneo aleatorio con un sesgo local del 50%. Es importante tener en cuenta, sin embargo, que el consumo de recursos de cada mÃ©todo no es el mismo. Diferentes mÃ©todos pueden requerir que el gusano sea grande, como los bytes adicionales necesarios para una lista de objetivos, o que tome mÃ¡s tiempo de procesamiento, como al buscar direcciones de otros hosts vulnerables en el host. Se deben realizar investigaciones y anÃ¡lisis adicionales en esta Ã¡rea para determinar los costos asociados de utilizar cada mÃ©todo. Los costos podrÃ­an ser utilizados para determinar los compromisos de diseÃ±o en los que los autores de gusanos participan. Por ejemplo, las listas de objetivos proporcionan una alta tasa de infecciÃ³n, pero a un alto costo en el tamaÃ±o de la carga Ãºtil del gusano. 2.2.1 EnvÃ­o de un Escaneo La funciÃ³n de envÃ­o de escaneo prueba si el host estÃ¡ disponible para la infecciÃ³n. Esto puede ser tan simple como verificar si el host estÃ¡ activo en la red o tan complejo como verificar si el host es vulnerable al exploit que se utilizarÃ¡. El envÃ­o de un escaneo antes de intentar una infecciÃ³n puede aumentar la tasa de escaneo si el costo por fallar en una infecciÃ³n es mayor que el costo de fallar en un escaneo o de enviar un escaneo mÃ¡s una infecciÃ³n; y las fallas son mÃ¡s frecuentes que los Ã©xitos. Un parÃ¡metro importante para esto serÃ­a la elecciÃ³n del protocolo de transporte (TCP/UDP) o simplemente el tiempo para un escaneo exitoso y el tiempo para un escaneo fallido. AdemÃ¡s, ya sea que se pruebe si el host estÃ¡ activo o si es una prueba completa de la vulnerabilidad (o de mÃºltiples vulnerabilidades). 2.2.2 Vector de InfecciÃ³n (VI) El vector de infecciÃ³n particular utilizado para acceder al host remoto depende principalmente de la vulnerabilidad especÃ­fica elegida para explotar. En un sentido no especÃ­fico, depende del protocolo de transporte elegido para usar y del tamaÃ±o del mensaje que se va a enviar. La SecciÃ³n 3 de [5] tambiÃ©n propone tres clases particulares de IV: Autotransportado, segundo canal e incrustado. 2.3 AutopreservaciÃ³n Las acciones de autopreservaciÃ³n de un gusano pueden tomar muchas formas. En la naturaleza, se ha observado que los gusanos desactivan el software antivirus o evitan enviarse a ciertas direcciones conocidas por los antivirus. TambiÃ©n se ha observado que intentan deshabilitar otros gusanos que podrÃ­an estar compitiendo por el mismo sistema. TambiÃ©n creemos que un escaneo con limitaciÃ³n de tiempo podrÃ­a ayudar al gusano a pasar desapercibido. TambiÃ©n proponemos un mÃ©todo de seÃ±uelo, mediante el cual un gusano liberarÃ¡ a unos pocos hijos que causen mucho ruido para que el progenitor no sea notado. TambiÃ©n se ha propuesto [5] que un gusano cause daÃ±o a su huÃ©sped si, y solo si, se ve perturbado de alguna manera. Este mÃ³dulo podrÃ­a contener parÃ¡metros para: probabilidad de Ã©xito en deshabilitar actualizaciones de antivirus u otro software, probabilidad de ser detectado y por ende eliminado, o fortalecimiento del anfitriÃ³n contra otros gusanos. 2.4 Acciones Basadas en Objetivos La funcionalidad de GBA de un gusano depende de la lista de objetivos del autor. La secciÃ³n de Cargas Ãºtiles de [5] proporciona algunas sugerencias Ãºtiles para dicho mÃ³dulo. La apertura de una puerta trasera puede hacer que el anfitriÃ³n sea susceptible a mÃ¡s ataques. Esto implicarÃ­a una probabilidad de que se utilice la puerta trasera y cualquier utilizaciÃ³n de trÃ¡fico asociada. TambiÃ©n podrÃ­a proporcionar una lista de otros gusanos a los que este hospedador es ahora susceptible o una lista de vulnerabilidades que este hospedador tiene ahora. Los retransmisores de spam y los servidores proxy HTTP, por supuesto, tienen un consumo de ancho de banda o un patrÃ³n de trÃ¡fico asociado. Los ataques de denegaciÃ³n de servicio en Internet tendrÃ­an un tiempo de activaciÃ³n establecido, un objetivo y un patrÃ³n de trÃ¡fico. El daÃ±o de los datos tendrÃ­a una probabilidad asociada de que el anfitriÃ³n muera debido al daÃ±o. En la Figura 1, se resume este modelo general de un gusano. Por favor, tenga en cuenta que en este modelo no hay aprendizaje, o muy poco, intercambio de informaciÃ³n entre las instancias de gusano, y ciertamente no hay coordinaciÃ³n de acciones. En la siguiente secciÃ³n ampliamos el modelo para incluir dichos mecanismos, y por lo tanto, llegamos al modelo general de un gusano en enjambre. 2.5 Enjambres - Modelo General Como se describe en la secciÃ³n 1, las caracterÃ­sticas bÃ¡sicas que distinguen el comportamiento en enjambre de lo que simplemente parece ser comportamientos colectivos coordinados son cuatro atributos bÃ¡sicos. Estos son: 1. Sencillez de lÃ³gica y acciones; 2. Mecanismos de ComunicaciÃ³n Local; 3. Control distribuido; y 4. Inteligencia emergente, incluyendo autoorganizaciÃ³n. 325 Estructura FunciÃ³n/Ejemplo InfecciÃ³n, Vector de InfecciÃ³n El ejecutable se ejecuta ProtecciÃ³n y sigilo Deshabilitar McAfee (Mantenerse vivo) PropagaciÃ³n Enviar correo electrÃ³nico a todos en la libreta de direcciones AcciÃ³n basada en objetivos (ABO) DDoS www.sco.com Todo lo demÃ¡s, a menudo llamado carga Ãºtil Figura 1: Modelo general de gusano En este trabajo agregamos todos estos atributos bajo el tÃ­tulo general de Aprendizaje, ComunicaciÃ³n y Control Distribuido. La presencia de estos atributos distingue a los gusanos de enjambre de los gusanos regulares, u otros tipos de malware como los Zombies. En la figura ? ?, el modelo genÃ©rico de un gusano se amplÃ­a para incluir este conjunto de acciones. Dentro de este contexto, un gusano como Slammer no puede ser categorizado como un gusano en enjambre debido a que las nuevas instancias del gusano no coordinan sus acciones ni comparten informaciÃ³n. Por otro lado, los zombies y muchas otras formas de DDoS, que a primera vista pueden considerarse gusanos enjambre, no lo son. Esto se debe simplemente al hecho de que en el caso de los zombies, el control no estÃ¡ distribuido sino centralizado, y no surgen comportamientos emergentes. Lo Ãºltimo, la posible apariciÃ³n de inteligencia o nuevos comportamientos es lo que hace que los gusanos en enjambre sean potencialmente peligrosos. Finalmente, cuando se considera la mayorÃ­a de las interrupciones recientes en la Infraestructura de Internet, y a la luz de nuestra descripciÃ³n de los ataques en enjambre, entonces dichas interrupciones pueden ser fÃ¡cilmente categorizadas como precursores de un comportamiento verdaderamente en enjambre. EspecÃ­ficamente, â¢ DDOS: Un gran nÃºmero de hosts comprometidos envÃ­an paquetes inÃºtiles que requieren procesamiento (Stacheldraht, http://www.cert.org/incidentnotes/IN-99-04.html). Los ataques DDoS son los precursores tempranos de los Ataques en Enjambre debido al gran nÃºmero de agentes involucrados. â¢ Code Red CrV1, Code Red II, Nimbda - Exhiben nociones tempranas de ataques en enjambre, incluyendo un canal de comunicaciÃ³n oculto. â¢ Staniford & Paxson en Â¿CÃ³mo Dominar Internet en Tu Tiempo Libre? exploran modificaciones a CrV1, Code Red I, II con un tipo de comportamiento similar a un enjambre. Por ejemplo, especulan sobre nuevos gusanos que emplean comunicaciÃ³n directa de gusano a gusano y utilizan actualizaciones programables. Por ejemplo, el gusano Warhol y los gusanos de Permutation-Scanning (autocoordinados). 2.6 Gusano Swarm: los detalles Al considerar la creaciÃ³n de lo que creÃ­amos que era el primer Gusano Swarm en existencia, querÃ­amos adherirnos lo mÃ¡s cercanamente posible al modelo general presentado en la secciÃ³n ? ? mientras facilitÃ¡bamos al mismo tiempo un anÃ¡lisis a gran escala, tanto empÃ­rico como a travÃ©s de simulaciones, del comportamiento del enjambre. Por esta razÃ³n, seleccionamos como primera instancia Estructura FunciÃ³n/Ejemplo InfecciÃ³n, InfecciÃ³n Vector Ejecutable se ejecuta ProtecciÃ³n y Sigilo Deshabilitar McAfee (ManteniÃ©ndose Vivo) PropagaciÃ³n Enviar correo electrÃ³nico a todos en la libreta de direcciones Aprendizaje, ComunicaciÃ³n, Feromonas/Banderas (Prueba y Control Distribuido si el Gusano ya estÃ¡ presente) Bombas de tiempo, Algoritmos de Aprendizaje, Canal IRC AcciÃ³n Basada en Objetivos (ABO) DDoS www.sco.com Todo lo demÃ¡s, a menudo llamado carga Ãºtil Figura 2: Modelo General de un Gusano de Enjambre del enjambre un gusano simple de craqueo de contraseÃ±as. El objetivo de este gusano simplemente es infectar a un anfitriÃ³n intentando secuencialmente iniciar sesiÃ³n en el anfitriÃ³n utilizando contraseÃ±as conocidas (ataque de diccionario), contraseÃ±as que han sido descubiertas previamente por cualquier miembro del enjambre, y contraseÃ±as aleatorias. Una vez que un huÃ©sped estÃ¡ infectado, el gusano crearÃ¡ canales de comunicaciÃ³n tanto con sus vecinos conocidos en ese momento, como con cualquier descendencia que genere con Ã©xito. En este contexto, una generaciÃ³n exitosa de una descendencia significa simplemente infectar a un nuevo huÃ©sped y replicar una copia exacta de sÃ­ misma en dicho huÃ©sped. Llamamos a este gusano enjambre el gusano ZachiK en honor a uno de sus creadores. Como se puede ver en esta descripciÃ³n, el gusano ZachiK exhibe todos los elementos descritos anteriormente. En las siguientes secciones, describimos detalladamente cada uno de los elementos del gusano ZachiK. 2.7 Vector de InfecciÃ³n El vector de infecciÃ³n utilizado por el gusano ZachiK es el protocolo de shell seguro SSH. Se escribiÃ³ un cliente modificado que es capaz de recibir contraseÃ±as desde la lÃ­nea de comandos, e integrado con un script que le suministra diversas contraseÃ±as: conocidas y aleatorias. Cuando se encuentra una contraseÃ±a para un objetivo adecuado, comienza el proceso de infecciÃ³n. DespuÃ©s de descubrir la contraseÃ±a de root de un host, el gusano infecta el host objetivo y se replica a sÃ­ mismo. El gusano crea un nuevo directorio en el host objetivo, copia el cliente ssh modificado, el script, los servidores de comunicaciones y las versiones actualizadas de los archivos de datos (lista de contraseÃ±as conocidas y una lista de vecinos actuales). Luego ejecuta el script modificado en los hosts reciÃ©n infectados, lo que genera el servidor de comunicaciones, notifica a los vecinos y comienza a buscar nuevos objetivos. Se podrÃ­a argumentar, de manera correcta, que el gusano ZachiK puede ser fÃ¡cilmente derrotado por las tÃ©cnicas de contramedidas actuales presentes en la mayorÃ­a de los sistemas hoy en dÃ­a, como la prohibiciÃ³n de accesos directos de root desde la red. Dentro de este contexto, ZachiK puede ser rÃ¡pidamente descartado como un gusano muy simple e inofensivo que no requiere un estudio adicional. Sin embargo, el lector deberÃ­a considerar lo siguiente: 1. ZachiK se puede modificar fÃ¡cilmente para incluir una variedad de vectores de infecciÃ³n. Por ejemplo, podrÃ­a programarse para adivinar nombres de usuario comunes y sus contraseÃ±as; obtener acceso al sistema, luego adivinar la contraseÃ±a de root o utilizar otras vulnerabilidades conocidas para obtener privilegios de root. ZachiK es un gusano de prueba de concepto. La importancia de ZachiK radica en que incorpora todos los comportamientos de un gusano en enjambre, incluyendo, pero no limitÃ¡ndose a, el control distribuido, la comunicaciÃ³n entre agentes y el aprendizaje; 3. ZachiK estÃ¡ compuesto por una gran colecciÃ³n de agentes que operan de forma independiente, lo que se presta naturalmente a algoritmos paralelos como la bÃºsqueda paralela del espacio de direcciones IPV4. Dentro de este contexto, SLAMMER incorpora una capacidad de bÃºsqueda paralela de direcciones potencialmente susceptibles. Sin embargo, a diferencia de ZachiK, el conocimiento descubierto por la bÃºsqueda nunca se comparte entre los agentes. Por estas razones, y muchas otras, no se debe descartar el potencial de esta nueva clase de gusanos, sino mÃ¡s bien abrazar su estudio. 2.8 AutopreservaciÃ³n En el caso del gusano ZachiK, las principales tÃ©cnicas de autopreservaciÃ³n utilizadas son simplemente mantener el tamaÃ±o de la carga Ãºtil pequeÃ±o. En este contexto, esto simplemente significa restringir la cantidad de contraseÃ±as que una descendencia hereda, enmascarar mensajes de gusano como solicitudes http comunes y limitar el nÃºmero de vecinos a un mÃ¡ximo de cinco-(5). 2.9 PropagaciÃ³n Elegir el(los) prÃ³ximo(s) objetivo(s) de manera eficiente requiere reflexiÃ³n. En el pasado, los gusanos conocidos y propuestos, ver [5], han aplicado tÃ©cnicas de propagaciÃ³n que variaban. Estos incluyen: selecciÃ³n estrictamente aleatoria de un posible anfitriÃ³n vulnerable; listas de objetivos de anfitriones vulnerables; selecciÃ³n aleatoria localmente sesgada (seleccionar un objetivo de anfitriÃ³n al azar de una subred local); y una combinaciÃ³n de algunas o todas las anteriores. En nuestros entornos de prueba y simulaciÃ³n, aplicaremos una combinaciÃ³n de selecciÃ³n localmente sesgada y totalmente aleatoria de posibles hosts vulnerables. Sin embargo, debido a que el gusano ZachiK es un gusano enjambre, la informaciÃ³n de descubrimiento de direcciones (es decir, cuando se descubren direcciones inexistentes) se compartirÃ¡ entre los miembros del enjambre. Los hilos de infecciÃ³n y propagaciÃ³n realizan el siguiente conjunto de actividades repetidamente: â¢ Elegir una direcciÃ³n â¢ Verificar la validez de la direcciÃ³n â¢ Elegir un conjunto de contraseÃ±as â¢ Intentar infectar al host seleccionado con este conjunto de contraseÃ±as. Como se describiÃ³ anteriormente, la elecciÃ³n de una direcciÃ³n hace uso de una combinaciÃ³n de selecciÃ³n aleatoria, sesgo local y listas de objetivos. EspecÃ­ficamente, para elegir una direcciÃ³n, la instancia puede: â¢ Generar una nueva direcciÃ³n aleatoria â¢ Generar una direcciÃ³n en la red local â¢ Elegir una direcciÃ³n de una lista de transferencia La elecciÃ³n se realiza de forma aleatoria entre estas opciones, y puede variarse para probar la dependencia de la propagaciÃ³n en elecciones particulares. Las contraseÃ±as son elegidas de una lista de contraseÃ±as conocidas o generadas recientemente. Cuando una infecciÃ³n de una direcciÃ³n vÃ¡lida falla, se agrega a una lista de entregas, que se envÃ­a a los vecinos para intentar solucionar el problema. 2.10 Aprendizaje, ComunicaciÃ³n y Control Distribuido 2.10.1 ComunicaciÃ³n El concepto de un enjambre se basa en la transferencia de informaciÃ³n entre vecinos, quienes retransmiten sus nuevos mensajes entrantes a sus vecinos, y asÃ­ sucesivamente hasta que cada instancia del gusano en el enjambre estÃ© al tanto de estos mensajes. Hay dos clases de mensajes: mensajes de datos o informaciÃ³n y comandos. Los mensajes de comando estÃ¡n destinados a un usuario externo (tambiÃ©n conocidos como hackers y/o crackers) para controlar las acciones de las instancias, y actualmente no estÃ¡n implementados. Los mensajes de informaciÃ³n actualmente son de tres tipos: nuevo miembro, contraseÃ±as y direcciones explotables (transferencias). Los mensajes de nuevo miembro son mensajes que una nueva instancia envÃ­a a los vecinos en su lista (corta) de vecinos iniciales. Los vecinos luego registran estas instancias en su lista de vecinos. Estos son mensajes que forman la multi-conectividad del enjambre, y sin ellos, la topologÃ­a serÃ­a una estructura en forma de Ã¡rbol, donde la eliminaciÃ³n de un solo nodo harÃ­a que las instancias debajo de Ã©l fueran inaccesibles. Los mensajes de contraseÃ±as informan instancias de contraseÃ±as reciÃ©n descubiertas, y al informar a todas las instancias, el enjambre en su totalidad recopila esta informaciÃ³n, lo que le permite infectar nuevas instancias de manera mÃ¡s efectiva. Los mensajes de entrega informan instancias de direcciones vÃ¡lidas que no pudieron ser comprometidas (fallaron al romper la contraseÃ±a de la cuenta root). Dado que el espacio de direcciones es bastante disperso, lleva un tiempo relativamente largo (es decir, muchos intentos) descubrir una direcciÃ³n vÃ¡lida. Por lo tanto, al entregar las direcciones vÃ¡lidas descubiertas, el enjambre estÃ¡ (a) conservando energÃ­a al no redescubrir las mismas direcciones (b) atacando de manera mÃ¡s efectiva. De cierta manera, esto es una simple instancia de actividad coordinada de un enjambre. 2.10.2 CoordinaciÃ³n Cuando nace una instancia de gusano, transmite su existencia a todos los vecinos en su lista. El hilo principal luego genera algunas hebras de infecciÃ³n y continÃºa manejando mensajes entrantes (registrando vecinos, agregando nuevas contraseÃ±as, recibiendo direcciones y transmitiendo estos mensajes). 2.10.3 Control Distribuido El control en el gusano ZachiK es distribuido en el sentido de que cada instancia del gusano realiza un conjunto de acciones de forma independiente de cada otra instancia, al mismo tiempo que se beneficia del aprendizaje logrado por sus vecinos inmediatos. 2.11 Acciones Basadas en Objetivos La primera instancia del gusano ZachiK tiene dos objetivos bÃ¡sicos. Estos son: (1) propagar, y (2) descubrir y compartir con los miembros de la colonia nuevas contraseÃ±as de root. 3. DISEÃO EXPERIMENTAL Para verificar nuestra hipÃ³tesis de que los Gusanos de Enjambre son mÃ¡s capaces y, por lo tanto, mÃ¡s peligrosos que otros 327 gusanos conocidos, se creÃ³ un banco de pruebas de red y se desarrollÃ³ un simulador capaz de simular topologÃ­as a gran escala similares a Internet (espacio IPV4). El banco de pruebas de red consistÃ­a en una red de Ã¡rea local de 30 computadoras basadas en Linux. El simulador fue escrito en C++. El gusano de enjambre simple descrito en la secciÃ³n 2.6 se utilizÃ³ para infectar al paciente cero, y luego se permitiÃ³ que el gusano de enjambre se propagara a travÃ©s de sus propios mecanismos de propagaciÃ³n, control distribuido y comportamientos de enjambre. En el caso de una red de Ã¡rea local simple de 30 computadoras, se seleccionaron seis (6) contraseÃ±as raÃ­z diferentes de un espacio de contraseÃ±as de 4 dÃ­gitos (10000 opciones). Al comienzo del experimento se conoce una Ãºnica contraseÃ±a, la del paciente cero. Todas las contraseÃ±as compartidas se distribuyen aleatoriamente en todos los nodos. De manera similar, en el caso de la simulaciÃ³n, se construyÃ³ una topologÃ­a de red de 10,000 hosts cuyas direcciones fueron seleccionadas al azar en el espacio IPV4. Dentro de ese espacio, se seleccionaron y distribuyeron un total de 200 contraseÃ±as compartidas ya sea de forma aleatoria y/o dirigida a subredes especÃ­ficas de topologÃ­as de red. Por ejemplo, en una de nuestras ejecuciones de simulaciÃ³n, la topologÃ­a de red consistÃ­a en 200 subredes, cada una conteniendo 50 hosts. En dicha topologÃ­a, las contraseÃ±as compartidas se distribuÃ­an en subredes donde un porcentaje variable de contraseÃ±as se compartÃ­an entre subredes. Los porcentajes de contraseÃ±as compartidas utilizadas reflejaban los primeros estudios empÃ­ricos, donde se descubriÃ³ que hasta el 39.7% de las contraseÃ±as comunes eran compartidas. RESULTADOS En la Figura 3 se presentan los resultados comparando el comportamiento del Ataque de Enjambre versus el de un Gusano Malformado tÃ­pico para una LAN de 30 nodos. En este conjunto de ejecuciones empÃ­ricas, seis (6) contraseÃ±as compartidas fueron distribuidas al azar en todos los nodos de un total de 10,000 contraseÃ±as desconocidas posibles. Los datos presentados reflejan los comportamientos de un total de tres (3) clases distintas de gusanos o enjambres de gusanos. La clase de gusanos presentada es la siguiente: â¢ I-NS-NL:= Gusano genÃ©rico, independiente (I), sin aprendizaje/sin memoria (NL), y sin compartir informaciÃ³n con vecinos o descendientes (NS); â¢ S-L-SP:= Gusano en enjambre (S), aprendizaje (L), mantiene una lista de contraseÃ±as aprendidas, y comparte contraseÃ±as (SP) con vecinos mÃ¡s cercanos y descendientes; y â¢ S-L-SP&A:= Gusano en enjambre (S), aprendizaje (L), mantiene una lista de contraseÃ±as aprendidas, y comparte contraseÃ±as y direcciones existentes (SP&A) con vecinos mÃ¡s cercanos y descendientes. Como se muestra en la Figura 3, los resultados validan nuestra hipÃ³tesis original de que los gusanos en enjambre son significativamente mÃ¡s eficientes y peligrosos que los gusanos genÃ©ricos. En este conjunto de experimentos, el compartir contraseÃ±as proporciona una mejora de un orden de magnitud sobre un gusano aleatorio sin memoria. De manera similar, un gusano en enjambre que comparte contraseÃ±as y direcciones es aproximadamente dos Ã³rdenes de magnitud mÃ¡s eficiente que su contraparte genÃ©rica. En la Figura 3, se pueden observar una serie de discontinuidades. Estas discontinuidades son un artefacto del pequeÃ±o espacio muestral utilizado para este experimento. BÃ¡sicamente, tan pronto como se rompe una contraseÃ±a, todos los nodos que comparten esa contraseÃ±a especÃ­fica se infectan en cuestiÃ³n de segundos. Ten en cuenta que es trivial para un gusano en enjambre escanear y descubrir un pequeÃ±o espacio de contraseÃ±as compartidas. En la Figura 4, se presentan los resultados de la simulaciÃ³n comparando el Comportamiento de Ataque de Enjambre con el de un Gusano Malformado GenÃ©rico. En este conjunto de ejecuciones de simulaciÃ³n, se construyÃ³ una topologÃ­a de red de 10,000 hosts, cuyas direcciones fueron seleccionadas aleatoriamente en el espacio IPV4. Dentro de ese espacio, se seleccionaron y distribuyeron un total de 200 contraseÃ±as compartidas ya sea de forma aleatoria y/o dirigida a subredes especÃ­ficas de topologÃ­as de red. Los datos presentados reflejan los comportamientos de tres (3) clases distintas de gusanos o gusanos en enjambre y dos (2) estrategias de exploraciÃ³n de selecciÃ³n de objetivo de host diferentes (exploraciÃ³n aleatoria y sesgo local). La cantidad de sesgo local variÃ³ en mÃºltiples ejecuciones de simulaciÃ³n. Los resultados presentados son comportamientos agregados. En general, se simularon las siguientes clases de Gusanos GenÃ©ricos y Gusanos en Enjambre. ExploraciÃ³n de direcciones: â¢ Aleatoria:= las direcciones se seleccionan al azar de un subconjunto del espacio IPV4, es decir, un espacio de 224 direcciones; y â¢ Sesgo local:= las direcciones se seleccionan al azar de una subred local (256 direcciones) o de un subconjunto del espacio IPV4, es decir, un espacio de 224 direcciones. El porcentaje de sesgo local varÃ­a en mÃºltiples ejecuciones. Aprendizaje, ComunicaciÃ³n y Control Distribuido â¢ I-NL-NS: Gusano genÃ©rico, independiente (I), sin aprendizaje/sin memoria (NL), y sin compartir informaciÃ³n con vecinos o descendientes (NS); â¢ I-L-OOS: Gusano genÃ©rico, independiente (I), con aprendizaje/sin memoria (L), y compartiendo informaciÃ³n una sola vez con descendientes solamente (OOS); â¢ S-L-SP:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte contraseÃ±as (SP) con vecinos mÃ¡s cercanos y descendientes; â¢ S-L-S&AOP:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte direcciones con vecinos y descendientes, comparte contraseÃ±as solo una vez (al crearse) con descendientes (SA&OP); â¢ S-L-SP&A:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte contraseÃ±as y direcciones existentes (SP&A) con vecinos mÃ¡s cercanos y descendientes. Como se muestra en la Figura 4, los resultados son consistentes con nuestro conjunto de resultados empÃ­ricos. AdemÃ¡s, se pueden hacer las siguientes observaciones. 1. La preferencia local es increÃ­blemente efectiva. Las transferencias cortas de direcciÃ³n son mÃ¡s efectivas que las largas. Variamos el tamaÃ±o de la lista permitida en el intercambio de direcciones; el sobrecosto asociado con una lista de direcciones larga es perjudicial para el rendimiento del gusano en enjambre, asÃ­ como para su sigilo; 3. Para el caso de sesgo local, compartir direcciones vÃ¡lidas de host susceptibles, el gusano S-L-S&AOP (recuerde, el enjambre S-L-S&AOP comparte contraseÃ±as, solo una vez, con descendientes 328 en el momento de la creaciÃ³n) es mÃ¡s efectivo que compartir contraseÃ±as en el caso del enjambre S-L-SP. En este caso, podemos pensar en el enjambre como lanzando un ataque de diccionario distribuido: diferentes segmentos del enjambre utilizan diferentes contraseÃ±as para intentar ingresar a hosts no infectados susceptibles. En el modo de sesgo local, al principio de la vida del enjambre, compartir direcciones es mÃ¡s efectivo que compartir contraseÃ±as, hasta que se descubran la mayorÃ­a de las subredes. Entonces, el apuntar a direcciones locales ayuda a descubrir los hosts susceptibles, mientras que los miembros del enjambre necesitan perder tiempo redescubriendo contraseÃ±as; y 4. Infectar el Ãºltimo 0.5% de los nodos lleva mucho tiempo en modo de sesgo no local. BÃ¡sicamente, la lista de contraseÃ±as compartidas entre subredes se ha agotado, y el enjambre vuelve a simplemente descubrir una contraseÃ±a al azar. Figura 3: Comportamiento del Ataque de Enjambre vs Gusano Malformado: Resultados EmpÃ­ricos, LAN de 30 nodos Figura 4: Comportamiento del Ataque de Enjambre vs Gusano Malformado: Resultados de SimulaciÃ³n 5. RESUMEN Y TRABAJO FUTURO En este manuscrito, hemos presentado un modelo abstracto, similar en algunos aspectos al de Weaver [5], que ayuda a explicar la naturaleza genÃ©rica de los gusanos. El modelo presentado en la secciÃ³n 2 se extendiÃ³ para incorporar una nueva clase de gusanos potencialmente peligrosos llamados Gusanos en Enjambre. Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biolÃ³gicos y muestran un alto grado de aprendizaje, comunicaciÃ³n e inteligencia distribuida. Tales gusanos en enjambre son potencialmente mÃ¡s daÃ±inos que sus contrapartes genÃ©ricas. AdemÃ¡s, se creÃ³ la primera instancia, que sepamos, de un gusano de aprendizaje, llamado ZachiK. ZachiK es un gusano enjambre de descifrado de contraseÃ±as simple que incorpora diferentes estrategias de aprendizaje y comparticiÃ³n de informaciÃ³n. Un gusano de enjambre similar fue desplegado tanto en una red de Ã¡rea local de treinta (30) hosts, como simulado en una topologÃ­a de 10,000 nodos. Los resultados preliminares mostraron que tales gusanos son capaces de comprometer a los anfitriones a tasas hasta 2 Ã³rdenes de magnitud mÃ¡s rÃ¡pido que su contraparte genÃ©rica, manteniendo al mismo tiempo sus capacidades de sigilo. Este trabajo abre una nueva Ã¡rea de problemas interesantes. Algunos de los problemas mÃ¡s interesantes y urgentes a considerar son los siguientes: â¢ Â¿Es posible aplicar algunos de los conceptos de aprendizaje desarrollados en los Ãºltimos diez aÃ±os en las Ã¡reas de inteligencia de enjambre, sistemas de agentes y control distribuido al diseÃ±o de gusanos de enjambre sofisticados de tal manera que se produzca un verdadero comportamiento emergente? â¢ Â¿Son efectivas las tÃ©cnicas actuales que se estÃ¡n desarrollando en el diseÃ±o de Sistemas de DetecciÃ³n y Contramedidas de IntrusiÃ³n y sistemas supervivientes contra esta nueva clase de gusanos?; y â¢ Â¿QuÃ© tÃ©cnicas, si las hay, se pueden desarrollar para crear defensas contra los gusanos de enjambre? 6. AGRADECIMIENTOS Este trabajo se realizÃ³ como parte de un esfuerzo mÃ¡s amplio en el desarrollo de sistemas de DetecciÃ³n de Intrusiones y Contramedidas de prÃ³xima generaciÃ³n en WSSRL. El trabajo se lleva a cabo bajo los auspicios de la subvenciÃ³n ACG-2004-06 otorgada por Acumen Consulting Group, Inc., Marlboro, Massachusetts. REFERENCIAS [1] C.C. Zou, L. Gao, W. G., y Towsley, D. Monitoreo y alerta temprana para gusanos de internet. En la 10Âª Conferencia ACM sobre Seguridad InformÃ¡tica y de Comunicaciones, Washington, DC (octubre de 2003). [2] Liu, S. y Passino, K. Inteligencia de enjambre: Resumen de la literatura. En el Departamento de IngenierÃ­a ElÃ©ctrica, Universidad Estatal de Ohio, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., y Weaver, N. La propagaciÃ³n del gusano saphire/slammer. Inf. tÃ©cnico, Un esfuerzo conjunto de CAIDA, ICSI, Silicon Defense, UC Berkeley EECS y UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S. y Cunningham, R. Una taxonomÃ­a de gusanos informÃ¡ticos. En Actas del Taller de ACM sobre Malware RÃ¡pido (WORM) (2003). 329",
    "original_sentences": [
        "An Initial Analysis and Presentation of Malware Exhibiting Swarm-Like Behavior Fernando C.ColÂ´on Osorio Wireless System Security Research Laboratory (W.S.S.R.L.)",
        "420 Lakeside Avneue Marlboro, Massachusetts 01752 fcco@cs.wpi.edu Zachi Klopman Wireless System Security Research Laboratory (W.S.S.R.L.) 420 Lakeside Avneue Marlboro, Massachusetts 01752 zachi@cs.wpi.edu ABSTRACT The Slammer, which is currently the fastest computer worm in recorded history, was observed to infect 90 percent of all vulnerable Internets hosts within 10 minutes.",
        "Although the main action that the Slammer worm takes is a relatively unsophisticated replication of itself, it still spreads so quickly that human response was ineffective.",
        "Most proposed countermeasures strategies are based primarily on rate detection and limiting algorithms.",
        "However, such strategies are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
        "In our work, we put forth the hypothesis that next generation worms will be radically different, and potentially such techniques will prove ineffective.",
        "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
        "Emergent Intelligence is the behavior of systems, very much like biological systems such as ants or bees, where simple local interactions of autonomous members, with simple primitive actions, gives rise to complex and intelligent global behavior.",
        "In this manuscript we will introduce the basic principles behind the idea of Swarm Worms, as well as the basic structure required in order to be considered a swarm worm.",
        "In addition, we will present preliminary results on the propagation speeds of one such swarm worm, called the ZachiK worm.",
        "We will show that ZachiK is capable of propagating at a rate 2 orders of magnitude faster than similar worms without swarm capabilities.",
        "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Intrusion Detection; D.4.6 [Security and Protection]: Invasive software General Terms Experimentation, Security 1.",
        "INTRODUCTION AND PREVIOUSWORK In the early morning hours (05:30 GMT) of January 25, 2003 the fastest computer worm in recorded history began spreading throughout the Internet.",
        "Within 10 minutes after the first infected host (patient zero), 90 percent of all vulnerable hosts had been compromised creating significant disruption to the global Internet infrastructure.",
        "Vern Paxson of the International Computer Science Institute and Lawrence Berkeley National Laboratory in its analysis of Slammer commented: The Slammer worm spread so quickly that human response was ineffective, see [4] The interesting part, from our perspective, about the spread of Slammer is that it was a relatively unsophisticated worm with benign behavior, namely self-reproduction.",
        "Since Slammer, researchers have explored the behaviors of fast spreading worms, and have designed countermeasures strategies based primarily on rate detection and limiting algorithms.",
        "For example, Zou, et al., [2], proposed a scheme where a Kalman filter is used to detect the early propagation of a worm.",
        "Other researchers have proposed the use of detectors where rates of Destination Unreachable messages are monitored by firewalls, and a significant increase beyond normal, alerts the organization to the potential presence of a worm.",
        "However, such strategies suffer from the fighting the last War syndrome.",
        "That is, systems are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
        "In the work described here, we put forth the hypothesis that next generation worms will be different, and therefore such techniques may have some significant limitations.",
        "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
        "The concept of emergent intelligence was first studied in association with biological systems.",
        "In such studies, early researchers discovered a variety of interesting insect or animal behaviors in the wild.",
        "A flock of birds sweeps across the sky.",
        "A group of ants forages for food.",
        "A school of fish swims, turns, flees together away from a predator, ands so forth.",
        "In general, this kind of aggregate motion has been called swarm behavior.",
        "Biologists, and computer scientists in the field of artificial intelligence have studied such biological swarms, and 323 attempted to create models that explain how the elements of a swarm interact, achieve goals, and evolve.",
        "Moreover, in recent years the study of swarm intelligence has become increasingly important in the fields of robotics, the design of Mobile ad-hoc Networks (MANETS), the design of Intrusion Detection Systems, the study of traffic patterns in transportation systems, in military applications, and other areas, see [3].",
        "The basic concepts that have been developed over the last decade to explain swarms, and swarm behavior include four basic components.",
        "These are: 1.",
        "Simplicity of logic & actions: A swarm is composed of N agents whose intelligence is limited.",
        "Agents in the swarm use simple local rules to govern their actions.",
        "Some models called this primitive actions or behaviors; 2.",
        "Local Communication Mechanisms: Agents interact with other members in the swarm via simple local communication mechanisms.",
        "For example, a bird in a flock senses the position of adjacent bird and applies a simple rule of avoidance and follow. 3.",
        "Distributed control: Autonomous agents interact with their environment, which probably consists of other agents, but act relatively independently from all other agents.",
        "There is no central command or leader, and certainly there is no global plan. 4.",
        "Emergent Intelligence: Aggregate behavior of autonomous agents results in complex intelligent behaviors; including self-organization.",
        "In order to understand fully the behavior of such swarms it is necessary to construct a model that explains the behavior of what we will call generic worms.",
        "This model, which extends the work by Weaver [5] is presented here in section 2.",
        "In addition, we intend to extend said model in such a way that it clearly explains the behaviors of this new class of potentially dangerous worms called Swarm Worms.",
        "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
        "Such Swarm Worms are potentially more harmful than their similar generic counterparts.",
        "Specifically, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
        "ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
        "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
        "Preliminary results showed that such worms are capable of compromising hosts at rates up to two orders of magnitude faster than their generic counterpart.",
        "The rest of this manuscript is structure as follows.",
        "In section 2 an abstract model of both generic worms as well as swarm worms is presented.",
        "This model is used in section 2.6 to described the first instance of a swarm worm, ZachiK.",
        "In section 4, preliminary results via both empirical measurements as well as simulation is presented.",
        "Finally, in section 5 our conclusions and insights into future work are presented. 2.",
        "WORM MODELING In order to study the behavior of swarm worms in general, it is necessary to create a model that realistically reflects the structure of worms and it is not necessarily tied to a specific instance.",
        "In this section, we described such a model where a general worm is describe as having four-(4) basic components or subfunctions.",
        "By definition, a worm is a selfcontained, self propagating program.",
        "Thus, in simple terms, it has two main functions: that which propagates and that which does other things.",
        "We propose that there is a third broad functionality of a worm, that of self-preservation.",
        "We also propose that the other functionality of a worm may be more appropriately categorized as Goal-Based Actions (GBA), as whatever functionality included in a worm will naturally be dependent on whatever goals (and subgoals) the author has.",
        "The work presented by Weaver et. al. in [5] provides us with mainly an action and technique based taxonomy of computer worms, which we utilize and further extend here. 2.1 Propagation The propagation function itself may be broken down into three actions: acquire target, send scan, and infect target.",
        "Acquiring the target simply means picking a host to attack next.",
        "Sending a scan involves checking to see if that host is receptive to an infection attempt, since IP-space is sparsely populated.",
        "This may involve a simple ping to check if the host is alive or a full out vulnerability assessment.",
        "Infecting the target is the actual method used to send the worm code to the new host.",
        "In algorithm form: propagate() { host := acquire_target() success := send_scan(host) if( success ) then infect(host) endif } In the case of a simple worm which does not first check to see if the host is available or susceptible (such as Slammer), the scan method is dropped: propagate() { host := acquire_target() infect(host) } Each of these actions may have an associated cost to its inclusion and execution, such as increased worm size and CPU or network load.",
        "Depending on the authors needs or requirements, these become limiting factors in what may be included in the worms actions.",
        "This is discussed further after expanding upon these actions below. 2.2 Target Acquisition: The Target Acquisition phase of our worm algorithm is built directly off of the Target Discovery section in [5].",
        "Weaver et. al. taxonomize this task into 5 separate categories.",
        "Here, we further extend their work through parameterization.",
        "Scanning: Scanning may be considered an equation-based method for choosing a host.",
        "Any type of equation may be used to arrive at an IP address, but there are three main types seen thus far: sequential, random, and local preference.",
        "Sequential scanning is exactly as it sounds: start at an IP address and increment through all the IP space.",
        "This could carry with it the options of which IP to start with (user chosen value, random, or based on IP of infected host) and 324 how many times to increment (continuous, chosen value, or subnet-based).",
        "Random scanning is completely at random (depending on the chosen PRNG method and its seed value).",
        "Local preference scanning is a variance of either Sequential or Random, whereby it has a greater probability of choosing a local IP address over a remote one (for example, the traditional 80/20 split).",
        "Pre-generated Target Lists: Pre-generated Target Lists, or so called hit-lists, could include the options for percentage of total population and percentage wrong, or just number of IPs to include.",
        "Implicit to this type is the fact that the list is divided among a parent and its children, avoiding the problem of every instance hitting the exact same machines.",
        "Externally Generated Target Lists: Externally generated target lists depend on one or more external sources that can be queried for host data.",
        "This will involve either servers that are normally publicly available, such as gaming meta-servers, or ones explicitly setup by the worm or worm author.",
        "The normally available meta-servers could have parameters for rates of change, such as many popping up at night or leaving in the morning.",
        "Each server could also have a maximum queries/second that it would be able to handle.",
        "The worm would also need a way of finding these servers, either hard-coded or through scanning.",
        "Internal Target Lists: Internal Target Lists are highly dependent on the infected host.",
        "This method could parameterize the choice of how much info is on the host, such as all machines in subnet, all windows boxes in subnet, particular servers, number of internal/external, or some combination.",
        "Passive: Passive methods are determined by normal interactions between hosts.",
        "Parameters may include a rate of interaction with particular machines, internal/external rate of interaction, or subnet-based rate of interaction.",
        "Any of these methods may also be combined to produce different types of target acquisition strategies.",
        "For example, the a worm may begin with an initial hit-list of 100 different hosts or subnets.",
        "Once it has exhausted its search using the hit-list, it may then proceed to perform random scanning with a 50% local bias.",
        "It is important to note, however, that the resource consumption of each method is not the same.",
        "Different methods may require the worm to be large, such as the extra bytes required by a hit-list, or to take more processing time, such as by searching the host for addresses of other vulnerable hosts.",
        "Further research and analysis should be performed in this area to determine associated costs for using each method.",
        "The costs could then be used in determining design tradeoffs that worm authors engage at.",
        "For example, hit lists provide a high rate of infection, but at a high cost of worm payload size. 2.2.1 Sending a Scan The send scan function tests to see if the host is available for infection.",
        "This can be as simple as checking if the host is up on the network or as complex as checking if the host is vulnerable to the exploit which will be used.",
        "The sending of a scan before attempted infection can increase the scanning rate if the cost for failing an infection is greater than the cost of failing a scan or sending a scan plus infection; and failures are more frequent than successes.",
        "One important parameter to this would be the choice of transport protocol (TCP/UDP) or just simply the time for one successful scan and time for one failed scan.",
        "Also, whether or not it tests for the host to be up or if it is a full test for the vulnerability (or for multiple vulnerabilities). 2.2.2 Infection Vector (IV) The particular infection vector used to access the remote host is mainly dependent on the particular vulnerability chosen to exploit.",
        "In a non-specific sense, it is dependent on the transport protocol chosen to use and the message size to be sent.",
        "Section 3 of [5] also proposes three particular classes of IV: Self-carried, second channel, and embedded. 2.3 Self Preservation The Self Preservation actions of a worm may take many forms.",
        "In the wild, worms have been observed to disable anti-virus software or prevent sending itself to certain antivirusknown addresses.",
        "They have also been seen to attempt disabling of other worms which may be contending for the same system.",
        "We also believe that a time-based throttled scanning may help the worm to slip under the radar.",
        "We also propose a decoy method, whereby a worm will release a few children that cause a lot of noise so that the parent is not noticed.",
        "It has also been proposed [5] that a worm cause damage to its host if, and only if, it is disturbed in some way.",
        "This module could contain parameters for: probability of success in disabling anti-virus or other software updates, probability of being noticed and thus removed, or hardening of the host against other worms. 2.4 Goal-Based Actions A worms GBA functionality depends on the authors goal list.",
        "The Payloads section of [5] provides some useful suggestions for such a module.",
        "The opening of a back-door can make the host susceptible to more attacks.",
        "This would involve a probability of the back-door being used and any associated traffic utilization.",
        "It could also provide a list of other worms this host is now susceptible to or a list of vulnerabilities this host now has.",
        "Spam relays and HTTP-Proxies of course have an associated bandwidth consumption or traffic pattern.",
        "Internet DoS attacks would have a set time of activation, a target, and a traffic pattern.",
        "Data damage would have an associated probability that the host dies because of the damage.",
        "In Figure 1, this general model of a worm is summarized.",
        "Please note that in this model there is no learning, no, or very little, sharing of information between worm instances, and certainly no coordination of actions.",
        "In the next section we expand the model to include such mechanisms, and hence, arrive at the general model of a swarm worm. 2.5 Swarms - General Model As described in section 1, the basic characteristics that distinguished swarm behavior from simply what appears to be collective coordinated behaviors are four basic attributes.",
        "These are: 1.",
        "Simplicity of logic & actions; 2.",
        "Local Communication Mechanisms; 3.",
        "Distributed control; and 4.",
        "Emergent Intelligence, including self-organization. 325 Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 1: General Worm Model In this work we aggregate all of these attributes under the general title of Learning, Communication, and Distributed Control.",
        "The presence of these attributes distinguishes swarm worms from otherwise regular worms, or other types of malware such as Zombies.",
        "In figure ? ?, the generic model of a worm is expanded to included these set of actions.",
        "Within this context then, a worm like Slammer cannot be categorized as a swarm worm due to the fact that new instances of the worm do not coordinate their actions or share information.",
        "On the other hand, Zombies and many other forms of DDoS, which at first glance may be consider swarm worms are not.",
        "This is simply due to fact that in the case of Zombies, control is not distributed but rather centralized, and no emergent behaviors arise.",
        "The latter, the potential emergence of intelligence or new behaviors is what makes swarm worms so potentially dangerous.",
        "Finally, when one considers the majority of recent disruptions to the Internet Infrastructure, and in light of our description of swarm attacks, then said disruptions can be easily categorized as precursors to truly swarm behavior.",
        "Specifically, â¢ DDOS - Large number of compromised hosts send useless packets requiring processing (Stacheldraht, http : //www.cert.org/ incidentnotes/IN â 99 â 04.html).",
        "DDoS attacks are the early precursors to Swarm Attacks due to the large number of agents involved. â¢ Code Red CrV1, Code Red II, Nimbda - Exhibit early notions of swarm attacks, including a backdoor communication channel. â¢ Staniford & Paxson in How to Own the Internet in Your Spare Time? explore modifications to CrV1, Code Red I, II with a swarm like type of behavior.",
        "For example, they speculate on new worms which employ direct worm-to-worm communication, and employ programmable updates.",
        "For example the Warhol worm, and Permutation-Scanning (self coordinating) worms. 2.6 Swarm Worm: the details In considering the creation of what we believed to be the first Swarm Worm in existence, we wanted to adhere as close as possible to the general model presented in section ? ? while at the same time facilitating large scale analysis, both empirical and through simulations, of the behavior of the swarm.",
        "For this reason, we selected as the first instance Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Learning, Communication, Pheromones/Flags (Test and Distributed Control if Worm is already present) Time bombs, Learning Algorithms, IRC channel Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 2: General Model of a Swarm Worm of the swarm a simple password cracking worm.",
        "The objective of this worm simply is to infect a host by sequentially attempting to login into the host using well known passwords (dictionary attack), passwords that have been discovered previously by any member of the swarm, and random passwords.",
        "Once, a host is infected, the worm will create communication channels with both its known neighbors at that time, as well as with any offsprings that it successfully generates.",
        "In this context a successful generation of an offspring means simply infecting a new host and replicating an exact copy of itself in such a host.",
        "We call this swarm worm the ZachiK worm in honor of one of its creators.",
        "As it can be seen from this description, the ZachiK worm exhibits all of the elements described before.",
        "In the following sections, we described in detail each one of the elements of the ZachiK worm. 2.7 Infection Vector The infection vector used for ZachiK worm is the secure shell protocol SSH.",
        "A modified client which is capable of receiving passwords from the command line was written, and integrated with a script that supplies it with various passwords: known and random.",
        "When a password is found for an appropriate target, the infection process begins.",
        "After the root password of a host is discovered, the worm infects the target host and replicates itself.",
        "The worm creates a new directory in the target host, copies the modified ssh client, the script, the communications servers, and the updated versions of data files (list of known passwords and a list of current neighbors).",
        "It then runs the modified script on the newly infected hosts, which spawns the communications server, notifies the neighbors and starts looking for new targets.",
        "It could be argued, correctly, that the ZachiK worm can be easily defeated by current countermeasure techniques present on most systems today, such as disallowing direct root logins from the network.",
        "Within this context ZachiK can quickly be discarded as very simple and harmless worm that does not require further study.",
        "However, the reader should consider the following: 1.",
        "ZachiK can be easily modified to include a variety of infection vectors.",
        "For example, it could be programmed to guess common user names and their passwords; gain 326 access to a system, then guess the root password or use other well know vulnerabilities to gain root privileges; 2.",
        "ZachiK is a proof of concept worm.",
        "The importance of ZachiK is that it incorporates all of the behaviors of a swarm worm including, but not restricted to, distributed control, communication amongst agents, and learning; 3.",
        "ZachiK is composed of a large collection of agents operating independently which lends itself naturally to parallel algorithms such as a parallel search of the IPV4 address space.",
        "Within this context, SLAMMER, does incorporate a parallel search capability of potentially susceptible addresses.",
        "However, unlike ZachiK, the knowledge discovered by the search is never shared amongst the agents.",
        "For this reasons, and many others, one should not discard the potential of this new class of worms but rather embrace its study. 2.8 Self-Preservation In the case of ZachiK worm, the main self-preservation techniques used are simply keeping the payload small.",
        "In this context, this simply means restricting the number of passwords that an offspring inherits, masquerading worm messages as common http requests, and restricting the number of neighbors to a maximum of five-(5). 2.9 Propagation Choosing the next target(s) in an efficient matter requires thought.",
        "In the past, known and proposed worms, see [5], have applied propagation techniques that varied.",
        "These include: strictly random selection of a potential vulnerable host; target lists of vulnerable hosts; locally biased random selection (select a host target at random from a local subnet); and a combination of some or all of the above.",
        "In our test and simulation environments, we will apply a combination of locally biased and totally random selection of potential vulnerable hosts.",
        "However, due to the fact that the ZachiK worm is a swarm worm, address discovery (that is when non-existent addresses are discovered) information will be shared amongst members of the swarm.",
        "The infection and propagation threads do the following set of activities repeatedly: â¢ Choose an address â¢ Check the validity of the address â¢ Choose a set of passwords â¢ Try infecting the selected host with this set of passwords As described earlier, choosing an address makes use of a combination of random selection, local bias, and target lists.",
        "Specifically, to choose an address, the instance may either: â¢ Generate a new random address â¢ Generate an address on the local network â¢ Pick an address from a handoff list The choice is made randomly among these options, and can be varied to test the dependency of propagation on particular choices.",
        "Password are either chosen from the list of known passwords or newly generated.",
        "When an infection of a valid address fails, it is added to a list of handoffs, which is sent to the neighbors to try to work on. 2.10 Learning, CommunicationandDistributed Control 2.10.1 Communication The concept of a swarm is based on transfer of information amongst neighbors, which relay their new incoming messages to their neighbors, and so on until every worm instance in the swarm is aware of these messages.",
        "There are two classes of messages: data or information messages and commands.",
        "The command messages are meant for an external user (a.k.a., hackers and/or crackers) to control the actions of the instances, and are currently not implemented.",
        "The information messages are currently of three kinds: new member, passwords and exploitable addresses (handoffs).",
        "The new member messages are messages that a new instance sends to the neighbors on its (short) list of initial neighbors.",
        "The neighbors then register these instances in their neighbor list.",
        "These are messages that form the multi-connectivity of the swarm, and without them, the topology will be a treelike structure, where eliminating a single node would cause the instances beneath it to be inaccessible.",
        "The passwords messages inform instances of newly discovered passwords, and by informing all instances, the swarm as whole collects this information, which allows it to infect new instances more effectively.",
        "The handoffs messages inform instances of valid addresses that could not be compromised (fail at breaking the password for the root account).",
        "Since the address space is rather sparse, it takes a relatively long time (i.e. many trials) to discover a valid address.",
        "Therefore, by handing off discovered valid addresses, the swarm is (a) conserving energy by not re-discovering the same addresses (b) attacking more effectively.",
        "In a way, this is a simple instance of coordinated activity of a swarm. 2.10.2 Coordination When a worm instance is born, it relays its existence to all neighbors on its list.",
        "The main thread then spawns a few infection threads, and continues to handle incoming messages (registering neighbors, adding new passwords, receiving addresses and relaying these messages). 2.10.3 Distributed Control Control in the ZachiK worm is distributed in the sense that each instance of the worm performs a set of actions independently of every other instance while at the same time benefiting from the learning achieve by its immediate neighbors. 2.11 Goal Based Actions The first instantiation of the ZachiK worm has two basic goals.",
        "These are: (1) propagate, and (2) discover and share with members of th swarm new root passwords. 3.",
        "EXPERIMENTAL DESIGN In order to verify our hypothesis that Swarm Worms are more capable, and therefore dangerous than other well known 327 worms, a network testbed was created, and a simulator, capable of simulating large scale Internet-like topologies (IPV4 space), was developed.",
        "The network testbed consisted of a local area network of 30 Linux based computers.",
        "The simulator was written in C++ .",
        "The simple swarm worm described in section 2.6 was used to infect patient-zero, and then the swarm worm was allowed to propagate via its own mechanisms of propagation, distributed control, and swarm behaviors.",
        "In the case of a simple local area network of 30 computers, six-(6) different root passwords out of a password space of 4 digits (10000 options) were selected.",
        "At the start of the experiment a single known password is known, that of patient-zero.",
        "All shared passwords are distributed randomly across all nodes.",
        "Similarly, in the case of the simulation, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
        "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
        "For example, in one of our simulation runs, the network topology consisted of 200 subnets each containing 50 hosts.",
        "In such a topology, shared passwords were distributed across subnets where a varying percentage of passwords were shared across subnets.",
        "The percentages of shared passwords used was reflective of early empirical studies, where up to 39.7% of common passwords were found to be shared. 4.",
        "RESULTS In Figure 3, the results comparing Swarm Attack behavior versus that of a typical Malform Worm for a 30 node LAN are presented.",
        "In this set of empirical runs, six-(6) shared passwords were distributed at random across all nodes from a possible of 10,000 unknown passwords.",
        "The data presented reflects the behaviors of a total of three-(3) distinct classes of worm or swarm worms.",
        "The class of worms presented are as follows: â¢ I-NS-NL:= Generic worm, independent (I), no learning/memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; and â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
        "As it is shown in Figure 3, the results validate our original hypothesis that swarm worms are significantly more efficient and dangerous than generic worms.",
        "In this set of experiments, the sharing of passwords provides an order of magnitude improvement over a memoryless random worm.",
        "Similarly, a swarm worm that shares passwords and addresses is approximately two orders of magnitude more efficient than its generic counterpart.",
        "In Figure 3, a series of discontinuities can be observed.",
        "These discontinuities are an artifact of the small sample space used for this experiment.",
        "Basically, as soon as a password is broken, all nodes sharing that specific password are infected within a few seconds.",
        "Note that it is trivial for a swarm worm to scan and discovered a small shared password space.",
        "In Figure 4, the simulation results comparing Swarm Attack Behavior versus that of a Generic Malform Worm are presented.",
        "In this set of simulation runs, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
        "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
        "The data presented reflects the behaviors of three-(3) distinct classes of worm or swarm worms and two(2) different target host selection scanning strategies (random scanning and local bias).",
        "The amount of local bias was varied across multiple simulation runs.",
        "The results presented are aggregate behaviors.",
        "In general the following class of Generic Worms and Swarm Worms were simulated.",
        "Address Scanning: â¢ Random:= addresses are selected at random from a subset of the IPV4 space, namely, a 224 address space; and â¢ Local Bias:= addresses are selected at random from either a local subnet (256 addresses) or from a subset of the IPV4 space, namely, a 224 address space.",
        "The percentage of local bias is varied across multiple runs.",
        "Learning, Communication & Distributed Control â¢ I-NL-NS: Generic worm, independent (I), no learning/ memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ I-L-OOS: Generic worm, independent (I), learning/ memoryless (L), and one time sharing of information with offsprings only (OOS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; â¢ S-L-S&AOP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of addresses with neighbors and offsprings, shares passwords one time only (at creation) with offsprings(SA&OP); â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
        "As it is shown in Figure 4, the results are consistent with our set of empirical results.",
        "In addition, the following observations can be made. 1.",
        "Local preference is incredibly effective. 2.",
        "Short address handoffs are more effective than long ones.",
        "We varied the size of the list allowed in the sharing of addresses; the overhead associated with a long address list is detrimental to the performance of the swarm worm, as well as to its stealthiness; 3.",
        "For the local bias case, sharing valid addresses of susceptible host, S-L-S&AOP worm (recall, the S-L-S&AOP swarm shares passwords, one time only, with offsprings 328 at creation time) is more effective than sharing passwords in the case of the S-L-SP swarm.",
        "In this case, we can think of the swarm as launching a distributeddictionary attack: different segments of the swarm use different passwords to try to break into susceptible uninfected host.",
        "In the local bias mode, early in the life of the swarm, address-sharing is more effective than password-sharing, until most subnets are discovered.",
        "Then the targeting of local addresses assists in discovering the susceptible hosts, while the swarm members need to waste time rediscovering passwords; and 4.",
        "Infecting the last 0.5% of nodes takes a very long time in non-local bias mode.",
        "Basically, the shared password list across subnets has been exhausted, and the swarm reverts to simply a random discovery of password algorithm.",
        "Figure 3: Swarm Attack Behavior vs. Malform Worm: Empirical Results, 30node LAN Figure 4: Swarm Attack Behavior vs. Malform Worm: Simulation Results 5.",
        "SUMMARY AND FUTURE WORK In this manuscript, we have presented an abstract model, similar in some aspects to that of Weaver [5], that helps explain the generic nature of worms.",
        "The model presented in section 2 was extended to incorporate a new class of potentially dangerous worms called Swarm Worms.",
        "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
        "Such Swarm Worms are potentially more harmful than their generic counterparts.",
        "In addition, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
        "ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
        "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
        "Preliminary results showed that such worms is capable of compromising hosts a rates up to 2 orders of magnitude faster than its generic counterpart while retaining stealth capabilities.",
        "This work opens up a new area of interesting problems.",
        "Some of the most interesting and pressing problems to be consider are as follows: â¢ Is it possible to apply some of learning concepts developed over the last ten years in the areas of swarm intelligence, agent systems, and distributed control to the design of sophisticated swarm worms in such a way that true emergent behavior takes place? â¢ Are the current techniques being developed in the design of Intrusion Detection & CounterMeasure Systems and Survivable systems effective against this new class of worms? ; and â¢ What techniques, if any, can be developed to create defenses against swarm worms? 6.",
        "ACKNOWLEDGMENTS This work was conducted as part of a larger effort in the development of next generation Intrusion Detection & CounterMeasure Systems at WSSRL.",
        "The work is conducted under the auspices of Grant ACG-2004-06 by the Acumen Consulting Group, Inc., Marlboro, Massachusetts. 7.",
        "REFERENCES [1] C.C.",
        "Zou, L. Gao, W. G., and Towsley, D. Monitoring and early warning for internet worms.",
        "In 10th ACM Conference on Computer and Communications Security, Washington, DC (October 2003). [2] Liu, S., and Passino, K. Swarm intelligence: Literature overview.",
        "In Dept. of Electrical Engineering, The Ohio State University, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., and Weaver, N. The spread of the saphire/slammer worm.",
        "Tech. rep., A joint effort of CAIDA, ICSI, Silicon Defense, UC Berkeley EECS and UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S., and Cunningham, R. A taxonomy of computer worms.",
        "In Proceedings of the ACM Workshop on Rapid Malware (WORM) (2003). 329"
    ],
    "translated_text_sentences": [
        "Un AnÃ¡lisis Inicial y PresentaciÃ³n de Malware que Exhibe Comportamiento Similar a un Enjambre por Fernando C. ColÃ³n Osorio Laboratorio de InvestigaciÃ³n en Seguridad de Sistemas InalÃ¡mbricos (W.S.S.R.L.)",
        "El Slammer, que actualmente es el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada, se observÃ³ infectando el 90 por ciento de todos los hosts vulnerables de Internet en 10 minutos.",
        "Aunque la acciÃ³n principal que realiza el gusano Slammer es una replicaciÃ³n relativamente poco sofisticada de sÃ­ mismo, se propaga tan rÃ¡pidamente que la respuesta humana fue ineficaz.",
        "La mayorÃ­a de las estrategias de contramedidas propuestas se basan principalmente en la detecciÃ³n de tasas y algoritmos de limitaciÃ³n.",
        "Sin embargo, se estÃ¡n diseÃ±ando y desarrollando estrategias para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer.",
        "En nuestro trabajo, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n radicalmente diferentes, y posiblemente dichas tÃ©cnicas resultarÃ¡n ineficaces.",
        "EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente.",
        "La Inteligencia Emergente es el comportamiento de sistemas, muy similar a sistemas biolÃ³gicos como hormigas o abejas, donde las interacciones locales simples de miembros autÃ³nomos, con acciones primitivas simples, dan lugar a un comportamiento global complejo e inteligente.",
        "En este manuscrito introduciremos los principios bÃ¡sicos detrÃ¡s de la idea de los Gusanos en Enjambre, asÃ­ como la estructura bÃ¡sica requerida para ser considerado un gusano en enjambre.",
        "AdemÃ¡s, presentaremos resultados preliminares sobre las velocidades de propagaciÃ³n de un gusano de enjambre llamado gusano ZachiK.",
        "Demostraremos que ZachiK es capaz de propagarse a una velocidad 2 Ã³rdenes de magnitud mÃ¡s rÃ¡pida que gusanos similares sin capacidades de enjambre.",
        "CategorÃ­as y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: DetecciÃ³n de Intrusiones; D.4.6 [Seguridad y ProtecciÃ³n]: Software Invasivo TÃ©rminos Generales ExperimentaciÃ³n, Seguridad 1.",
        "INTRODUCCIÃN Y TRABAJO PREVIO En las primeras horas de la maÃ±ana (05:30 GMT) del 25 de enero de 2003, el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada comenzÃ³ a propagarse por Internet.",
        "Dentro de los 10 minutos posteriores al primer huÃ©sped infectado (paciente cero), el 90 por ciento de todos los huÃ©spedes vulnerables habÃ­an sido comprometidos, creando una interrupciÃ³n significativa en la infraestructura de Internet a nivel global.",
        "Vern Paxson del Instituto Internacional de Ciencias de la ComputaciÃ³n y del Laboratorio Nacional Lawrence Berkeley comentÃ³ en su anÃ¡lisis de Slammer: El gusano Slammer se propagÃ³ tan rÃ¡pidamente que la respuesta humana fue ineficaz, ver [4]. La parte interesante, desde nuestro punto de vista, sobre la propagaciÃ³n de Slammer es que era un gusano relativamente poco sofisticado con un comportamiento benigno, es decir, la auto-reproducciÃ³n.",
        "Desde Slammer, los investigadores han explorado los comportamientos de los gusanos de propagaciÃ³n rÃ¡pida y han diseÃ±ado estrategias de contramedidas basadas principalmente en la detecciÃ³n de la velocidad y algoritmos de limitaciÃ³n.",
        "Por ejemplo, Zou, et al., [2], propusieron un esquema donde se utiliza un filtro de Kalman para detectar la propagaciÃ³n temprana de un gusano.",
        "Otros investigadores han propuesto el uso de detectores donde las tasas de mensajes de Destino Inalcanzable son monitoreadas por los firewalls, y un aumento significativo mÃ¡s allÃ¡ de lo normal alerta a la organizaciÃ³n sobre la posible presencia de un gusano.",
        "Sin embargo, tales estrategias sufren del sÃ­ndrome de luchar la Ãºltima guerra.",
        "Es decir, se estÃ¡n diseÃ±ando y desarrollando sistemas para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer.",
        "En el trabajo descrito aquÃ­, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n diferentes, y por lo tanto, dichas tÃ©cnicas pueden tener algunas limitaciones significativas.",
        "EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente.",
        "El concepto de inteligencia emergente fue estudiado por primera vez en asociaciÃ³n con sistemas biolÃ³gicos.",
        "En tales estudios, los primeros investigadores descubrieron una variedad de comportamientos interesantes de insectos o animales en la naturaleza.",
        "Una bandada de pÃ¡jaros cruza el cielo.",
        "Un grupo de hormigas busca comida.",
        "Una escuela de peces nada, gira, huye juntos lejos de un depredador, y asÃ­ sucesivamente.",
        "En general, este tipo de movimiento agregado se ha llamado comportamiento de enjambre.",
        "Los biÃ³logos y cientÃ­ficos de la computaciÃ³n en el campo de la inteligencia artificial han estudiado tales enjambres biolÃ³gicos y han intentado crear modelos que expliquen cÃ³mo interactÃºan los elementos de un enjambre, logran objetivos y evolucionan.",
        "AdemÃ¡s, en los Ãºltimos aÃ±os el estudio de la inteligencia de enjambre ha cobrado cada vez mÃ¡s importancia en los campos de la robÃ³tica, el diseÃ±o de Redes MÃ³viles Ad-hoc (MANETS), el diseÃ±o de Sistemas de DetecciÃ³n de Intrusiones, el estudio de patrones de trÃ¡fico en sistemas de transporte, en aplicaciones militares y otras Ã¡reas, ver [3].",
        "Los conceptos bÃ¡sicos que se han desarrollado en la Ãºltima dÃ©cada para explicar los enjambres y su comportamiento incluyen cuatro componentes bÃ¡sicos.",
        "Estos son: 1.",
        "Sencillez de la lÃ³gica y acciones: Un enjambre estÃ¡ compuesto por N agentes cuya inteligencia es limitada.",
        "Los agentes en el enjambre utilizan reglas locales simples para gobernar sus acciones.",
        "Algunos modelos llaman a estas acciones o comportamientos primitivos; 2.",
        "Mecanismos de comunicaciÃ³n local: Los agentes interactÃºan con otros miembros en el enjambre a travÃ©s de simples mecanismos de comunicaciÃ³n local.",
        "Por ejemplo, un pÃ¡jaro en una bandada percibe la posiciÃ³n del pÃ¡jaro adyacente y aplica una regla simple de evitaciÃ³n y seguimiento. 3.",
        "Control distribuido: Los agentes autÃ³nomos interactÃºan con su entorno, que probablemente consiste en otros agentes, pero actÃºan relativamente de forma independiente de todos los demÃ¡s agentes.",
        "No hay un mando central o lÃ­der, y ciertamente no hay un plan global.",
        "Inteligencia emergente: El comportamiento agregado de agentes autÃ³nomos resulta en comportamientos inteligentes complejos, incluyendo la autoorganizaciÃ³n.",
        "Para comprender completamente el comportamiento de tales enjambres, es necesario construir un modelo que explique el comportamiento de lo que llamaremos gusanos genÃ©ricos.",
        "Este modelo, que amplÃ­a el trabajo de Weaver [5], se presenta aquÃ­ en la secciÃ³n 2.",
        "AdemÃ¡s, tenemos la intenciÃ³n de ampliar dicho modelo de tal manera que explique claramente los comportamientos de esta nueva clase de gusanos potencialmente peligrosos llamados Gusanos en Enjambre.",
        "Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biolÃ³gicos y muestran un alto grado de aprendizaje, comunicaciÃ³n e inteligencia distribuida.",
        "Tales gusanos en enjambre son potencialmente mÃ¡s daÃ±inos que sus contrapartes genÃ©ricas similares.",
        "EspecÃ­ficamente, la primera instancia, segÃºn nuestro conocimiento, de un gusano de aprendizaje de este tipo fue creado, llamado ZachiK.",
        "ZachiK es un gusano enjambre de descifrado de contraseÃ±as simple que incorpora diferentes estrategias de aprendizaje y comparticiÃ³n de informaciÃ³n.",
        "Un gusano de enjambre similar fue desplegado tanto en una red de Ã¡rea local de treinta (30) hosts, como simulado en una topologÃ­a de 10,000 nodos.",
        "Los resultados preliminares mostraron que dichos gusanos son capaces de comprometer a los anfitriones a velocidades hasta dos Ã³rdenes de magnitud mÃ¡s rÃ¡pidas que su contraparte genÃ©rica.",
        "El resto de este manuscrito estÃ¡ estructurado de la siguiente manera.",
        "En la secciÃ³n 2 se presenta un modelo abstracto tanto de gusanos genÃ©ricos como de gusanos en enjambre.",
        "Este modelo se utiliza en la secciÃ³n 2.6 para describir la primera instancia de un gusano enjambre, ZachiK.",
        "En la secciÃ³n 4, se presentan resultados preliminares a travÃ©s de mediciones empÃ­ricas y simulaciones.",
        "Finalmente, en la secciÃ³n 5 se presentan nuestras conclusiones y perspectivas sobre trabajos futuros.",
        "MODELADO DE GUSANOS Para estudiar el comportamiento de los gusanos en enjambre en general, es necesario crear un modelo que refleje de manera realista la estructura de los gusanos y que no estÃ© necesariamente ligado a una instancia especÃ­fica.",
        "En esta secciÃ³n, describimos un modelo en el que un gusano general se describe como teniendo cuatro (4) componentes bÃ¡sicos o subfunciones.",
        "Por definiciÃ³n, un gusano es un programa autocontenido y auto propagante.",
        "Por lo tanto, en tÃ©rminos simples, tiene dos funciones principales: la que se propaga y la que realiza otras tareas.",
        "Proponemos que hay una tercera amplia funcionalidad de un gusano, la de autoconservaciÃ³n.",
        "TambiÃ©n proponemos que la otra funcionalidad de un gusano podrÃ­a ser categorizada de manera mÃ¡s apropiada como Acciones Basadas en Objetivos (ABO), ya que cualquier funcionalidad incluida en un gusano dependerÃ¡ naturalmente de los objetivos (y subobjetivos) que tenga el autor.",
        "El trabajo presentado por Weaver et al. en [5] nos proporciona principalmente una taxonomÃ­a de gusanos informÃ¡ticos basada en acciones y tÃ©cnicas, la cual utilizamos y ampliamos aquÃ­. 2.1 PropagaciÃ³n La funciÃ³n de propagaciÃ³n en sÃ­ misma puede desglosarse en tres acciones: adquirir objetivo, enviar escaneo e infectar objetivo.",
        "Adquirir el objetivo simplemente significa elegir un anfitriÃ³n para atacar a continuaciÃ³n.",
        "Enviar un escaneo implica verificar si ese host estÃ¡ receptivo a un intento de infecciÃ³n, ya que el espacio de direcciones IP estÃ¡ escasamente poblado.",
        "Esto puede implicar un simple ping para verificar si el host estÃ¡ activo o una evaluaciÃ³n completa de vulnerabilidades.",
        "Infectar al objetivo es el mÃ©todo real utilizado para enviar el cÃ³digo del gusano al nuevo hospedador.",
        "En forma de algoritmo: propagar() { host := adquirir_objetivo() Ã©xito := enviar_escaneo(host) si( Ã©xito ) entonces infectar(host) fin si } En el caso de un gusano simple que no verifica primero si el host estÃ¡ disponible o susceptible (como Slammer), se elimina el mÃ©todo de escaneo: propagar() { host := adquirir_objetivo() infectar(host) } Cada una de estas acciones puede tener un costo asociado a su inclusiÃ³n y ejecuciÃ³n, como un aumento en el tamaÃ±o del gusano y la carga de CPU o red.",
        "Dependiendo de las necesidades o requisitos de los autores, estos se convierten en factores limitantes en lo que puede incluirse en las acciones de los gusanos.",
        "Esto se discute mÃ¡s a fondo despuÃ©s de expandir sobre estas acciones a continuaciÃ³n. 2.2 AdquisiciÃ³n de Objetivos: La fase de AdquisiciÃ³n de Objetivos de nuestro algoritmo de gusano se construye directamente a partir de la secciÃ³n de Descubrimiento de Objetivos en [5].",
        "Weaver et al. clasifican esta tarea en 5 categorÃ­as separadas.",
        "AquÃ­, ampliamos aÃºn mÃ¡s su trabajo a travÃ©s de la parametrizaciÃ³n.",
        "Escaneo: El escaneo puede considerarse un mÃ©todo basado en ecuaciones para elegir un anfitriÃ³n.",
        "Cualquier tipo de ecuaciÃ³n puede ser utilizada para llegar a una direcciÃ³n IP, pero hasta ahora se han visto tres tipos principales: secuencial, aleatorio y preferencia local.",
        "El escaneo secuencial es exactamente como suena: comenzar en una direcciÃ³n IP e incrementar a travÃ©s de todo el espacio de direcciones IP.",
        "Esto podrÃ­a llevar consigo las opciones de quÃ© IP empezar (valor elegido por el usuario, aleatorio o basado en la IP del host infectado) y cuÃ¡ntas veces incrementar (continuo, valor elegido o basado en subred).",
        "El escaneo aleatorio es completamente al azar (dependiendo del mÃ©todo PRNG elegido y su valor de semilla).",
        "El escaneo de preferencia local es una variante de Secuencial o Aleatorio, en la que tiene una mayor probabilidad de elegir una direcciÃ³n IP local en lugar de una remota (por ejemplo, la divisiÃ³n tradicional de 80/20).",
        "Listas de objetivos pregeneradas: Las listas de objetivos pregeneradas, o tambiÃ©n llamadas listas de objetivos, podrÃ­an incluir opciones para el porcentaje de la poblaciÃ³n total y el porcentaje de errores, o simplemente el nÃºmero de direcciones IP a incluir.",
        "ImplÃ­cito en este tipo es el hecho de que la lista se divide entre un padre y sus hijos, evitando el problema de que cada instancia golpee exactamente las mismas mÃ¡quinas.",
        "Listas de objetivos generadas externamente: Las listas de objetivos generadas externamente dependen de una o mÃ¡s fuentes externas que pueden ser consultadas para obtener datos del host.",
        "Esto implicarÃ¡ servidores que normalmente estÃ¡n pÃºblicamente disponibles, como los meta-servidores de juegos, o aquellos configurados explÃ­citamente por el gusano o el autor del gusano.",
        "Los meta-servidores normalmente disponibles podrÃ­an tener parÃ¡metros para tasas de cambio, como muchos apareciendo por la noche o desapareciendo por la maÃ±ana.",
        "Cada servidor tambiÃ©n podrÃ­a tener un mÃ¡ximo de consultas por segundo que serÃ­a capaz de manejar.",
        "El gusano tambiÃ©n necesitarÃ­a una forma de encontrar estos servidores, ya sea codificada en duro o a travÃ©s de escaneo.",
        "Listas de Objetivos Internos: Las Listas de Objetivos Internos dependen en gran medida del host infectado.",
        "Este mÃ©todo podrÃ­a parametrizar la elecciÃ³n de cuÃ¡nta informaciÃ³n hay en el host, como todas las mÃ¡quinas en la subred, todas las computadoras con Windows en la subred, servidores especÃ­ficos, nÃºmero de internos/externos, o alguna combinaciÃ³n.",
        "Los mÃ©todos pasivos son determinados por las interacciones normales entre los anfitriones.",
        "Los parÃ¡metros pueden incluir una tasa de interacciÃ³n con mÃ¡quinas particulares, una tasa de interacciÃ³n interna/externa, o una tasa de interacciÃ³n basada en subredes.",
        "Cualquiera de estos mÃ©todos tambiÃ©n puede combinarse para producir diferentes tipos de estrategias de adquisiciÃ³n de objetivos.",
        "Por ejemplo, un gusano puede comenzar con una lista inicial de 100 hosts o subredes diferentes.",
        "Una vez que haya agotado su bÃºsqueda utilizando la lista de Ã©xitos, puede proceder a realizar un escaneo aleatorio con un sesgo local del 50%.",
        "Es importante tener en cuenta, sin embargo, que el consumo de recursos de cada mÃ©todo no es el mismo.",
        "Diferentes mÃ©todos pueden requerir que el gusano sea grande, como los bytes adicionales necesarios para una lista de objetivos, o que tome mÃ¡s tiempo de procesamiento, como al buscar direcciones de otros hosts vulnerables en el host.",
        "Se deben realizar investigaciones y anÃ¡lisis adicionales en esta Ã¡rea para determinar los costos asociados de utilizar cada mÃ©todo.",
        "Los costos podrÃ­an ser utilizados para determinar los compromisos de diseÃ±o en los que los autores de gusanos participan.",
        "Por ejemplo, las listas de objetivos proporcionan una alta tasa de infecciÃ³n, pero a un alto costo en el tamaÃ±o de la carga Ãºtil del gusano. 2.2.1 EnvÃ­o de un Escaneo La funciÃ³n de envÃ­o de escaneo prueba si el host estÃ¡ disponible para la infecciÃ³n.",
        "Esto puede ser tan simple como verificar si el host estÃ¡ activo en la red o tan complejo como verificar si el host es vulnerable al exploit que se utilizarÃ¡.",
        "El envÃ­o de un escaneo antes de intentar una infecciÃ³n puede aumentar la tasa de escaneo si el costo por fallar en una infecciÃ³n es mayor que el costo de fallar en un escaneo o de enviar un escaneo mÃ¡s una infecciÃ³n; y las fallas son mÃ¡s frecuentes que los Ã©xitos.",
        "Un parÃ¡metro importante para esto serÃ­a la elecciÃ³n del protocolo de transporte (TCP/UDP) o simplemente el tiempo para un escaneo exitoso y el tiempo para un escaneo fallido.",
        "AdemÃ¡s, ya sea que se pruebe si el host estÃ¡ activo o si es una prueba completa de la vulnerabilidad (o de mÃºltiples vulnerabilidades). 2.2.2 Vector de InfecciÃ³n (VI) El vector de infecciÃ³n particular utilizado para acceder al host remoto depende principalmente de la vulnerabilidad especÃ­fica elegida para explotar.",
        "En un sentido no especÃ­fico, depende del protocolo de transporte elegido para usar y del tamaÃ±o del mensaje que se va a enviar.",
        "La SecciÃ³n 3 de [5] tambiÃ©n propone tres clases particulares de IV: Autotransportado, segundo canal e incrustado. 2.3 AutopreservaciÃ³n Las acciones de autopreservaciÃ³n de un gusano pueden tomar muchas formas.",
        "En la naturaleza, se ha observado que los gusanos desactivan el software antivirus o evitan enviarse a ciertas direcciones conocidas por los antivirus.",
        "TambiÃ©n se ha observado que intentan deshabilitar otros gusanos que podrÃ­an estar compitiendo por el mismo sistema.",
        "TambiÃ©n creemos que un escaneo con limitaciÃ³n de tiempo podrÃ­a ayudar al gusano a pasar desapercibido.",
        "TambiÃ©n proponemos un mÃ©todo de seÃ±uelo, mediante el cual un gusano liberarÃ¡ a unos pocos hijos que causen mucho ruido para que el progenitor no sea notado.",
        "TambiÃ©n se ha propuesto [5] que un gusano cause daÃ±o a su huÃ©sped si, y solo si, se ve perturbado de alguna manera.",
        "Este mÃ³dulo podrÃ­a contener parÃ¡metros para: probabilidad de Ã©xito en deshabilitar actualizaciones de antivirus u otro software, probabilidad de ser detectado y por ende eliminado, o fortalecimiento del anfitriÃ³n contra otros gusanos. 2.4 Acciones Basadas en Objetivos La funcionalidad de GBA de un gusano depende de la lista de objetivos del autor.",
        "La secciÃ³n de Cargas Ãºtiles de [5] proporciona algunas sugerencias Ãºtiles para dicho mÃ³dulo.",
        "La apertura de una puerta trasera puede hacer que el anfitriÃ³n sea susceptible a mÃ¡s ataques.",
        "Esto implicarÃ­a una probabilidad de que se utilice la puerta trasera y cualquier utilizaciÃ³n de trÃ¡fico asociada.",
        "TambiÃ©n podrÃ­a proporcionar una lista de otros gusanos a los que este hospedador es ahora susceptible o una lista de vulnerabilidades que este hospedador tiene ahora.",
        "Los retransmisores de spam y los servidores proxy HTTP, por supuesto, tienen un consumo de ancho de banda o un patrÃ³n de trÃ¡fico asociado.",
        "Los ataques de denegaciÃ³n de servicio en Internet tendrÃ­an un tiempo de activaciÃ³n establecido, un objetivo y un patrÃ³n de trÃ¡fico.",
        "El daÃ±o de los datos tendrÃ­a una probabilidad asociada de que el anfitriÃ³n muera debido al daÃ±o.",
        "En la Figura 1, se resume este modelo general de un gusano.",
        "Por favor, tenga en cuenta que en este modelo no hay aprendizaje, o muy poco, intercambio de informaciÃ³n entre las instancias de gusano, y ciertamente no hay coordinaciÃ³n de acciones.",
        "En la siguiente secciÃ³n ampliamos el modelo para incluir dichos mecanismos, y por lo tanto, llegamos al modelo general de un gusano en enjambre. 2.5 Enjambres - Modelo General Como se describe en la secciÃ³n 1, las caracterÃ­sticas bÃ¡sicas que distinguen el comportamiento en enjambre de lo que simplemente parece ser comportamientos colectivos coordinados son cuatro atributos bÃ¡sicos.",
        "Estos son: 1.",
        "Sencillez de lÃ³gica y acciones; 2.",
        "Mecanismos de ComunicaciÃ³n Local; 3.",
        "Control distribuido; y 4.",
        "Inteligencia emergente, incluyendo autoorganizaciÃ³n. 325 Estructura FunciÃ³n/Ejemplo InfecciÃ³n, Vector de InfecciÃ³n El ejecutable se ejecuta ProtecciÃ³n y sigilo Deshabilitar McAfee (Mantenerse vivo) PropagaciÃ³n Enviar correo electrÃ³nico a todos en la libreta de direcciones AcciÃ³n basada en objetivos (ABO) DDoS www.sco.com Todo lo demÃ¡s, a menudo llamado carga Ãºtil Figura 1: Modelo general de gusano En este trabajo agregamos todos estos atributos bajo el tÃ­tulo general de Aprendizaje, ComunicaciÃ³n y Control Distribuido.",
        "La presencia de estos atributos distingue a los gusanos de enjambre de los gusanos regulares, u otros tipos de malware como los Zombies.",
        "En la figura ? ?, el modelo genÃ©rico de un gusano se amplÃ­a para incluir este conjunto de acciones.",
        "Dentro de este contexto, un gusano como Slammer no puede ser categorizado como un gusano en enjambre debido a que las nuevas instancias del gusano no coordinan sus acciones ni comparten informaciÃ³n.",
        "Por otro lado, los zombies y muchas otras formas de DDoS, que a primera vista pueden considerarse gusanos enjambre, no lo son.",
        "Esto se debe simplemente al hecho de que en el caso de los zombies, el control no estÃ¡ distribuido sino centralizado, y no surgen comportamientos emergentes.",
        "Lo Ãºltimo, la posible apariciÃ³n de inteligencia o nuevos comportamientos es lo que hace que los gusanos en enjambre sean potencialmente peligrosos.",
        "Finalmente, cuando se considera la mayorÃ­a de las interrupciones recientes en la Infraestructura de Internet, y a la luz de nuestra descripciÃ³n de los ataques en enjambre, entonces dichas interrupciones pueden ser fÃ¡cilmente categorizadas como precursores de un comportamiento verdaderamente en enjambre.",
        "EspecÃ­ficamente, â¢ DDOS: Un gran nÃºmero de hosts comprometidos envÃ­an paquetes inÃºtiles que requieren procesamiento (Stacheldraht, http://www.cert.org/incidentnotes/IN-99-04.html).",
        "Los ataques DDoS son los precursores tempranos de los Ataques en Enjambre debido al gran nÃºmero de agentes involucrados. â¢ Code Red CrV1, Code Red II, Nimbda - Exhiben nociones tempranas de ataques en enjambre, incluyendo un canal de comunicaciÃ³n oculto. â¢ Staniford & Paxson en Â¿CÃ³mo Dominar Internet en Tu Tiempo Libre? exploran modificaciones a CrV1, Code Red I, II con un tipo de comportamiento similar a un enjambre.",
        "Por ejemplo, especulan sobre nuevos gusanos que emplean comunicaciÃ³n directa de gusano a gusano y utilizan actualizaciones programables.",
        "Por ejemplo, el gusano Warhol y los gusanos de Permutation-Scanning (autocoordinados). 2.6 Gusano Swarm: los detalles Al considerar la creaciÃ³n de lo que creÃ­amos que era el primer Gusano Swarm en existencia, querÃ­amos adherirnos lo mÃ¡s cercanamente posible al modelo general presentado en la secciÃ³n ? ? mientras facilitÃ¡bamos al mismo tiempo un anÃ¡lisis a gran escala, tanto empÃ­rico como a travÃ©s de simulaciones, del comportamiento del enjambre.",
        "Por esta razÃ³n, seleccionamos como primera instancia Estructura FunciÃ³n/Ejemplo InfecciÃ³n, InfecciÃ³n Vector Ejecutable se ejecuta ProtecciÃ³n y Sigilo Deshabilitar McAfee (ManteniÃ©ndose Vivo) PropagaciÃ³n Enviar correo electrÃ³nico a todos en la libreta de direcciones Aprendizaje, ComunicaciÃ³n, Feromonas/Banderas (Prueba y Control Distribuido si el Gusano ya estÃ¡ presente) Bombas de tiempo, Algoritmos de Aprendizaje, Canal IRC AcciÃ³n Basada en Objetivos (ABO) DDoS www.sco.com Todo lo demÃ¡s, a menudo llamado carga Ãºtil Figura 2: Modelo General de un Gusano de Enjambre del enjambre un gusano simple de craqueo de contraseÃ±as.",
        "El objetivo de este gusano simplemente es infectar a un anfitriÃ³n intentando secuencialmente iniciar sesiÃ³n en el anfitriÃ³n utilizando contraseÃ±as conocidas (ataque de diccionario), contraseÃ±as que han sido descubiertas previamente por cualquier miembro del enjambre, y contraseÃ±as aleatorias.",
        "Una vez que un huÃ©sped estÃ¡ infectado, el gusano crearÃ¡ canales de comunicaciÃ³n tanto con sus vecinos conocidos en ese momento, como con cualquier descendencia que genere con Ã©xito.",
        "En este contexto, una generaciÃ³n exitosa de una descendencia significa simplemente infectar a un nuevo huÃ©sped y replicar una copia exacta de sÃ­ misma en dicho huÃ©sped.",
        "Llamamos a este gusano enjambre el gusano ZachiK en honor a uno de sus creadores.",
        "Como se puede ver en esta descripciÃ³n, el gusano ZachiK exhibe todos los elementos descritos anteriormente.",
        "En las siguientes secciones, describimos detalladamente cada uno de los elementos del gusano ZachiK. 2.7 Vector de InfecciÃ³n El vector de infecciÃ³n utilizado por el gusano ZachiK es el protocolo de shell seguro SSH.",
        "Se escribiÃ³ un cliente modificado que es capaz de recibir contraseÃ±as desde la lÃ­nea de comandos, e integrado con un script que le suministra diversas contraseÃ±as: conocidas y aleatorias.",
        "Cuando se encuentra una contraseÃ±a para un objetivo adecuado, comienza el proceso de infecciÃ³n.",
        "DespuÃ©s de descubrir la contraseÃ±a de root de un host, el gusano infecta el host objetivo y se replica a sÃ­ mismo.",
        "El gusano crea un nuevo directorio en el host objetivo, copia el cliente ssh modificado, el script, los servidores de comunicaciones y las versiones actualizadas de los archivos de datos (lista de contraseÃ±as conocidas y una lista de vecinos actuales).",
        "Luego ejecuta el script modificado en los hosts reciÃ©n infectados, lo que genera el servidor de comunicaciones, notifica a los vecinos y comienza a buscar nuevos objetivos.",
        "Se podrÃ­a argumentar, de manera correcta, que el gusano ZachiK puede ser fÃ¡cilmente derrotado por las tÃ©cnicas de contramedidas actuales presentes en la mayorÃ­a de los sistemas hoy en dÃ­a, como la prohibiciÃ³n de accesos directos de root desde la red.",
        "Dentro de este contexto, ZachiK puede ser rÃ¡pidamente descartado como un gusano muy simple e inofensivo que no requiere un estudio adicional.",
        "Sin embargo, el lector deberÃ­a considerar lo siguiente: 1.",
        "ZachiK se puede modificar fÃ¡cilmente para incluir una variedad de vectores de infecciÃ³n.",
        "Por ejemplo, podrÃ­a programarse para adivinar nombres de usuario comunes y sus contraseÃ±as; obtener acceso al sistema, luego adivinar la contraseÃ±a de root o utilizar otras vulnerabilidades conocidas para obtener privilegios de root.",
        "ZachiK es un gusano de prueba de concepto.",
        "La importancia de ZachiK radica en que incorpora todos los comportamientos de un gusano en enjambre, incluyendo, pero no limitÃ¡ndose a, el control distribuido, la comunicaciÃ³n entre agentes y el aprendizaje; 3.",
        "ZachiK estÃ¡ compuesto por una gran colecciÃ³n de agentes que operan de forma independiente, lo que se presta naturalmente a algoritmos paralelos como la bÃºsqueda paralela del espacio de direcciones IPV4.",
        "Dentro de este contexto, SLAMMER incorpora una capacidad de bÃºsqueda paralela de direcciones potencialmente susceptibles.",
        "Sin embargo, a diferencia de ZachiK, el conocimiento descubierto por la bÃºsqueda nunca se comparte entre los agentes.",
        "Por estas razones, y muchas otras, no se debe descartar el potencial de esta nueva clase de gusanos, sino mÃ¡s bien abrazar su estudio. 2.8 AutopreservaciÃ³n En el caso del gusano ZachiK, las principales tÃ©cnicas de autopreservaciÃ³n utilizadas son simplemente mantener el tamaÃ±o de la carga Ãºtil pequeÃ±o.",
        "En este contexto, esto simplemente significa restringir la cantidad de contraseÃ±as que una descendencia hereda, enmascarar mensajes de gusano como solicitudes http comunes y limitar el nÃºmero de vecinos a un mÃ¡ximo de cinco-(5). 2.9 PropagaciÃ³n Elegir el(los) prÃ³ximo(s) objetivo(s) de manera eficiente requiere reflexiÃ³n.",
        "En el pasado, los gusanos conocidos y propuestos, ver [5], han aplicado tÃ©cnicas de propagaciÃ³n que variaban.",
        "Estos incluyen: selecciÃ³n estrictamente aleatoria de un posible anfitriÃ³n vulnerable; listas de objetivos de anfitriones vulnerables; selecciÃ³n aleatoria localmente sesgada (seleccionar un objetivo de anfitriÃ³n al azar de una subred local); y una combinaciÃ³n de algunas o todas las anteriores.",
        "En nuestros entornos de prueba y simulaciÃ³n, aplicaremos una combinaciÃ³n de selecciÃ³n localmente sesgada y totalmente aleatoria de posibles hosts vulnerables.",
        "Sin embargo, debido a que el gusano ZachiK es un gusano enjambre, la informaciÃ³n de descubrimiento de direcciones (es decir, cuando se descubren direcciones inexistentes) se compartirÃ¡ entre los miembros del enjambre.",
        "Los hilos de infecciÃ³n y propagaciÃ³n realizan el siguiente conjunto de actividades repetidamente: â¢ Elegir una direcciÃ³n â¢ Verificar la validez de la direcciÃ³n â¢ Elegir un conjunto de contraseÃ±as â¢ Intentar infectar al host seleccionado con este conjunto de contraseÃ±as. Como se describiÃ³ anteriormente, la elecciÃ³n de una direcciÃ³n hace uso de una combinaciÃ³n de selecciÃ³n aleatoria, sesgo local y listas de objetivos.",
        "EspecÃ­ficamente, para elegir una direcciÃ³n, la instancia puede: â¢ Generar una nueva direcciÃ³n aleatoria â¢ Generar una direcciÃ³n en la red local â¢ Elegir una direcciÃ³n de una lista de transferencia La elecciÃ³n se realiza de forma aleatoria entre estas opciones, y puede variarse para probar la dependencia de la propagaciÃ³n en elecciones particulares.",
        "Las contraseÃ±as son elegidas de una lista de contraseÃ±as conocidas o generadas recientemente.",
        "Cuando una infecciÃ³n de una direcciÃ³n vÃ¡lida falla, se agrega a una lista de entregas, que se envÃ­a a los vecinos para intentar solucionar el problema. 2.10 Aprendizaje, ComunicaciÃ³n y Control Distribuido 2.10.1 ComunicaciÃ³n El concepto de un enjambre se basa en la transferencia de informaciÃ³n entre vecinos, quienes retransmiten sus nuevos mensajes entrantes a sus vecinos, y asÃ­ sucesivamente hasta que cada instancia del gusano en el enjambre estÃ© al tanto de estos mensajes.",
        "Hay dos clases de mensajes: mensajes de datos o informaciÃ³n y comandos.",
        "Los mensajes de comando estÃ¡n destinados a un usuario externo (tambiÃ©n conocidos como hackers y/o crackers) para controlar las acciones de las instancias, y actualmente no estÃ¡n implementados.",
        "Los mensajes de informaciÃ³n actualmente son de tres tipos: nuevo miembro, contraseÃ±as y direcciones explotables (transferencias).",
        "Los mensajes de nuevo miembro son mensajes que una nueva instancia envÃ­a a los vecinos en su lista (corta) de vecinos iniciales.",
        "Los vecinos luego registran estas instancias en su lista de vecinos.",
        "Estos son mensajes que forman la multi-conectividad del enjambre, y sin ellos, la topologÃ­a serÃ­a una estructura en forma de Ã¡rbol, donde la eliminaciÃ³n de un solo nodo harÃ­a que las instancias debajo de Ã©l fueran inaccesibles.",
        "Los mensajes de contraseÃ±as informan instancias de contraseÃ±as reciÃ©n descubiertas, y al informar a todas las instancias, el enjambre en su totalidad recopila esta informaciÃ³n, lo que le permite infectar nuevas instancias de manera mÃ¡s efectiva.",
        "Los mensajes de entrega informan instancias de direcciones vÃ¡lidas que no pudieron ser comprometidas (fallaron al romper la contraseÃ±a de la cuenta root).",
        "Dado que el espacio de direcciones es bastante disperso, lleva un tiempo relativamente largo (es decir, muchos intentos) descubrir una direcciÃ³n vÃ¡lida.",
        "Por lo tanto, al entregar las direcciones vÃ¡lidas descubiertas, el enjambre estÃ¡ (a) conservando energÃ­a al no redescubrir las mismas direcciones (b) atacando de manera mÃ¡s efectiva.",
        "De cierta manera, esto es una simple instancia de actividad coordinada de un enjambre. 2.10.2 CoordinaciÃ³n Cuando nace una instancia de gusano, transmite su existencia a todos los vecinos en su lista.",
        "El hilo principal luego genera algunas hebras de infecciÃ³n y continÃºa manejando mensajes entrantes (registrando vecinos, agregando nuevas contraseÃ±as, recibiendo direcciones y transmitiendo estos mensajes). 2.10.3 Control Distribuido El control en el gusano ZachiK es distribuido en el sentido de que cada instancia del gusano realiza un conjunto de acciones de forma independiente de cada otra instancia, al mismo tiempo que se beneficia del aprendizaje logrado por sus vecinos inmediatos. 2.11 Acciones Basadas en Objetivos La primera instancia del gusano ZachiK tiene dos objetivos bÃ¡sicos.",
        "Estos son: (1) propagar, y (2) descubrir y compartir con los miembros de la colonia nuevas contraseÃ±as de root. 3.",
        "DISEÃO EXPERIMENTAL Para verificar nuestra hipÃ³tesis de que los Gusanos de Enjambre son mÃ¡s capaces y, por lo tanto, mÃ¡s peligrosos que otros 327 gusanos conocidos, se creÃ³ un banco de pruebas de red y se desarrollÃ³ un simulador capaz de simular topologÃ­as a gran escala similares a Internet (espacio IPV4).",
        "El banco de pruebas de red consistÃ­a en una red de Ã¡rea local de 30 computadoras basadas en Linux.",
        "El simulador fue escrito en C++.",
        "El gusano de enjambre simple descrito en la secciÃ³n 2.6 se utilizÃ³ para infectar al paciente cero, y luego se permitiÃ³ que el gusano de enjambre se propagara a travÃ©s de sus propios mecanismos de propagaciÃ³n, control distribuido y comportamientos de enjambre.",
        "En el caso de una red de Ã¡rea local simple de 30 computadoras, se seleccionaron seis (6) contraseÃ±as raÃ­z diferentes de un espacio de contraseÃ±as de 4 dÃ­gitos (10000 opciones).",
        "Al comienzo del experimento se conoce una Ãºnica contraseÃ±a, la del paciente cero.",
        "Todas las contraseÃ±as compartidas se distribuyen aleatoriamente en todos los nodos.",
        "De manera similar, en el caso de la simulaciÃ³n, se construyÃ³ una topologÃ­a de red de 10,000 hosts cuyas direcciones fueron seleccionadas al azar en el espacio IPV4.",
        "Dentro de ese espacio, se seleccionaron y distribuyeron un total de 200 contraseÃ±as compartidas ya sea de forma aleatoria y/o dirigida a subredes especÃ­ficas de topologÃ­as de red.",
        "Por ejemplo, en una de nuestras ejecuciones de simulaciÃ³n, la topologÃ­a de red consistÃ­a en 200 subredes, cada una conteniendo 50 hosts.",
        "En dicha topologÃ­a, las contraseÃ±as compartidas se distribuÃ­an en subredes donde un porcentaje variable de contraseÃ±as se compartÃ­an entre subredes.",
        "Los porcentajes de contraseÃ±as compartidas utilizadas reflejaban los primeros estudios empÃ­ricos, donde se descubriÃ³ que hasta el 39.7% de las contraseÃ±as comunes eran compartidas.",
        "RESULTADOS En la Figura 3 se presentan los resultados comparando el comportamiento del Ataque de Enjambre versus el de un Gusano Malformado tÃ­pico para una LAN de 30 nodos.",
        "En este conjunto de ejecuciones empÃ­ricas, seis (6) contraseÃ±as compartidas fueron distribuidas al azar en todos los nodos de un total de 10,000 contraseÃ±as desconocidas posibles.",
        "Los datos presentados reflejan los comportamientos de un total de tres (3) clases distintas de gusanos o enjambres de gusanos.",
        "La clase de gusanos presentada es la siguiente: â¢ I-NS-NL:= Gusano genÃ©rico, independiente (I), sin aprendizaje/sin memoria (NL), y sin compartir informaciÃ³n con vecinos o descendientes (NS); â¢ S-L-SP:= Gusano en enjambre (S), aprendizaje (L), mantiene una lista de contraseÃ±as aprendidas, y comparte contraseÃ±as (SP) con vecinos mÃ¡s cercanos y descendientes; y â¢ S-L-SP&A:= Gusano en enjambre (S), aprendizaje (L), mantiene una lista de contraseÃ±as aprendidas, y comparte contraseÃ±as y direcciones existentes (SP&A) con vecinos mÃ¡s cercanos y descendientes.",
        "Como se muestra en la Figura 3, los resultados validan nuestra hipÃ³tesis original de que los gusanos en enjambre son significativamente mÃ¡s eficientes y peligrosos que los gusanos genÃ©ricos.",
        "En este conjunto de experimentos, el compartir contraseÃ±as proporciona una mejora de un orden de magnitud sobre un gusano aleatorio sin memoria.",
        "De manera similar, un gusano en enjambre que comparte contraseÃ±as y direcciones es aproximadamente dos Ã³rdenes de magnitud mÃ¡s eficiente que su contraparte genÃ©rica.",
        "En la Figura 3, se pueden observar una serie de discontinuidades.",
        "Estas discontinuidades son un artefacto del pequeÃ±o espacio muestral utilizado para este experimento.",
        "BÃ¡sicamente, tan pronto como se rompe una contraseÃ±a, todos los nodos que comparten esa contraseÃ±a especÃ­fica se infectan en cuestiÃ³n de segundos.",
        "Ten en cuenta que es trivial para un gusano en enjambre escanear y descubrir un pequeÃ±o espacio de contraseÃ±as compartidas.",
        "En la Figura 4, se presentan los resultados de la simulaciÃ³n comparando el Comportamiento de Ataque de Enjambre con el de un Gusano Malformado GenÃ©rico.",
        "En este conjunto de ejecuciones de simulaciÃ³n, se construyÃ³ una topologÃ­a de red de 10,000 hosts, cuyas direcciones fueron seleccionadas aleatoriamente en el espacio IPV4.",
        "Dentro de ese espacio, se seleccionaron y distribuyeron un total de 200 contraseÃ±as compartidas ya sea de forma aleatoria y/o dirigida a subredes especÃ­ficas de topologÃ­as de red.",
        "Los datos presentados reflejan los comportamientos de tres (3) clases distintas de gusanos o gusanos en enjambre y dos (2) estrategias de exploraciÃ³n de selecciÃ³n de objetivo de host diferentes (exploraciÃ³n aleatoria y sesgo local).",
        "La cantidad de sesgo local variÃ³ en mÃºltiples ejecuciones de simulaciÃ³n.",
        "Los resultados presentados son comportamientos agregados.",
        "En general, se simularon las siguientes clases de Gusanos GenÃ©ricos y Gusanos en Enjambre.",
        "ExploraciÃ³n de direcciones: â¢ Aleatoria:= las direcciones se seleccionan al azar de un subconjunto del espacio IPV4, es decir, un espacio de 224 direcciones; y â¢ Sesgo local:= las direcciones se seleccionan al azar de una subred local (256 direcciones) o de un subconjunto del espacio IPV4, es decir, un espacio de 224 direcciones.",
        "El porcentaje de sesgo local varÃ­a en mÃºltiples ejecuciones.",
        "Aprendizaje, ComunicaciÃ³n y Control Distribuido â¢ I-NL-NS: Gusano genÃ©rico, independiente (I), sin aprendizaje/sin memoria (NL), y sin compartir informaciÃ³n con vecinos o descendientes (NS); â¢ I-L-OOS: Gusano genÃ©rico, independiente (I), con aprendizaje/sin memoria (L), y compartiendo informaciÃ³n una sola vez con descendientes solamente (OOS); â¢ S-L-SP:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte contraseÃ±as (SP) con vecinos mÃ¡s cercanos y descendientes; â¢ S-L-S&AOP:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte direcciones con vecinos y descendientes, comparte contraseÃ±as solo una vez (al crearse) con descendientes (SA&OP); â¢ S-L-SP&A:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte contraseÃ±as y direcciones existentes (SP&A) con vecinos mÃ¡s cercanos y descendientes.",
        "Como se muestra en la Figura 4, los resultados son consistentes con nuestro conjunto de resultados empÃ­ricos.",
        "AdemÃ¡s, se pueden hacer las siguientes observaciones. 1.",
        "La preferencia local es increÃ­blemente efectiva.",
        "Las transferencias cortas de direcciÃ³n son mÃ¡s efectivas que las largas.",
        "Variamos el tamaÃ±o de la lista permitida en el intercambio de direcciones; el sobrecosto asociado con una lista de direcciones larga es perjudicial para el rendimiento del gusano en enjambre, asÃ­ como para su sigilo; 3.",
        "Para el caso de sesgo local, compartir direcciones vÃ¡lidas de host susceptibles, el gusano S-L-S&AOP (recuerde, el enjambre S-L-S&AOP comparte contraseÃ±as, solo una vez, con descendientes 328 en el momento de la creaciÃ³n) es mÃ¡s efectivo que compartir contraseÃ±as en el caso del enjambre S-L-SP.",
        "En este caso, podemos pensar en el enjambre como lanzando un ataque de diccionario distribuido: diferentes segmentos del enjambre utilizan diferentes contraseÃ±as para intentar ingresar a hosts no infectados susceptibles.",
        "En el modo de sesgo local, al principio de la vida del enjambre, compartir direcciones es mÃ¡s efectivo que compartir contraseÃ±as, hasta que se descubran la mayorÃ­a de las subredes.",
        "Entonces, el apuntar a direcciones locales ayuda a descubrir los hosts susceptibles, mientras que los miembros del enjambre necesitan perder tiempo redescubriendo contraseÃ±as; y 4.",
        "Infectar el Ãºltimo 0.5% de los nodos lleva mucho tiempo en modo de sesgo no local.",
        "BÃ¡sicamente, la lista de contraseÃ±as compartidas entre subredes se ha agotado, y el enjambre vuelve a simplemente descubrir una contraseÃ±a al azar.",
        "Figura 3: Comportamiento del Ataque de Enjambre vs Gusano Malformado: Resultados EmpÃ­ricos, LAN de 30 nodos Figura 4: Comportamiento del Ataque de Enjambre vs Gusano Malformado: Resultados de SimulaciÃ³n 5.",
        "RESUMEN Y TRABAJO FUTURO En este manuscrito, hemos presentado un modelo abstracto, similar en algunos aspectos al de Weaver [5], que ayuda a explicar la naturaleza genÃ©rica de los gusanos.",
        "El modelo presentado en la secciÃ³n 2 se extendiÃ³ para incorporar una nueva clase de gusanos potencialmente peligrosos llamados Gusanos en Enjambre.",
        "Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biolÃ³gicos y muestran un alto grado de aprendizaje, comunicaciÃ³n e inteligencia distribuida.",
        "Tales gusanos en enjambre son potencialmente mÃ¡s daÃ±inos que sus contrapartes genÃ©ricas.",
        "AdemÃ¡s, se creÃ³ la primera instancia, que sepamos, de un gusano de aprendizaje, llamado ZachiK.",
        "ZachiK es un gusano enjambre de descifrado de contraseÃ±as simple que incorpora diferentes estrategias de aprendizaje y comparticiÃ³n de informaciÃ³n.",
        "Un gusano de enjambre similar fue desplegado tanto en una red de Ã¡rea local de treinta (30) hosts, como simulado en una topologÃ­a de 10,000 nodos.",
        "Los resultados preliminares mostraron que tales gusanos son capaces de comprometer a los anfitriones a tasas hasta 2 Ã³rdenes de magnitud mÃ¡s rÃ¡pido que su contraparte genÃ©rica, manteniendo al mismo tiempo sus capacidades de sigilo.",
        "Este trabajo abre una nueva Ã¡rea de problemas interesantes.",
        "Algunos de los problemas mÃ¡s interesantes y urgentes a considerar son los siguientes: â¢ Â¿Es posible aplicar algunos de los conceptos de aprendizaje desarrollados en los Ãºltimos diez aÃ±os en las Ã¡reas de inteligencia de enjambre, sistemas de agentes y control distribuido al diseÃ±o de gusanos de enjambre sofisticados de tal manera que se produzca un verdadero comportamiento emergente? â¢ Â¿Son efectivas las tÃ©cnicas actuales que se estÃ¡n desarrollando en el diseÃ±o de Sistemas de DetecciÃ³n y Contramedidas de IntrusiÃ³n y sistemas supervivientes contra esta nueva clase de gusanos?; y â¢ Â¿QuÃ© tÃ©cnicas, si las hay, se pueden desarrollar para crear defensas contra los gusanos de enjambre? 6.",
        "AGRADECIMIENTOS Este trabajo se realizÃ³ como parte de un esfuerzo mÃ¡s amplio en el desarrollo de sistemas de DetecciÃ³n de Intrusiones y Contramedidas de prÃ³xima generaciÃ³n en WSSRL.",
        "El trabajo se lleva a cabo bajo los auspicios de la subvenciÃ³n ACG-2004-06 otorgada por Acumen Consulting Group, Inc., Marlboro, Massachusetts.",
        "REFERENCIAS [1] C.C.",
        "Zou, L. Gao, W. G., y Towsley, D. Monitoreo y alerta temprana para gusanos de internet.",
        "En la 10Âª Conferencia ACM sobre Seguridad InformÃ¡tica y de Comunicaciones, Washington, DC (octubre de 2003). [2] Liu, S. y Passino, K. Inteligencia de enjambre: Resumen de la literatura.",
        "En el Departamento de IngenierÃ­a ElÃ©ctrica, Universidad Estatal de Ohio, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., y Weaver, N. La propagaciÃ³n del gusano saphire/slammer.",
        "Inf. tÃ©cnico, Un esfuerzo conjunto de CAIDA, ICSI, Silicon Defense, UC Berkeley EECS y UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S. y Cunningham, R. Una taxonomÃ­a de gusanos informÃ¡ticos.",
        "En Actas del Taller de ACM sobre Malware RÃ¡pido (WORM) (2003). 329"
    ],
    "error_count": 4,
    "keys": {
        "malware": {
            "translated_key": "malware",
            "is_in_text": true,
            "original_annotated_sentences": [
                "An Initial Analysis and Presentation of <br>malware</br> Exhibiting Swarm-Like Behavior Fernando C.ColÂ´on Osorio Wireless System Security Research Laboratory (W.S.S.R.L.)",
                "420 Lakeside Avneue Marlboro, Massachusetts 01752 fcco@cs.wpi.edu Zachi Klopman Wireless System Security Research Laboratory (W.S.S.R.L.) 420 Lakeside Avneue Marlboro, Massachusetts 01752 zachi@cs.wpi.edu ABSTRACT The Slammer, which is currently the fastest computer worm in recorded history, was observed to infect 90 percent of all vulnerable Internets hosts within 10 minutes.",
                "Although the main action that the Slammer worm takes is a relatively unsophisticated replication of itself, it still spreads so quickly that human response was ineffective.",
                "Most proposed countermeasures strategies are based primarily on rate detection and limiting algorithms.",
                "However, such strategies are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In our work, we put forth the hypothesis that next generation worms will be radically different, and potentially such techniques will prove ineffective.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
                "Emergent Intelligence is the behavior of systems, very much like biological systems such as ants or bees, where simple local interactions of autonomous members, with simple primitive actions, gives rise to complex and intelligent global behavior.",
                "In this manuscript we will introduce the basic principles behind the idea of Swarm Worms, as well as the basic structure required in order to be considered a swarm worm.",
                "In addition, we will present preliminary results on the propagation speeds of one such swarm worm, called the ZachiK worm.",
                "We will show that ZachiK is capable of propagating at a rate 2 orders of magnitude faster than similar worms without swarm capabilities.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Intrusion Detection; D.4.6 [Security and Protection]: Invasive software General Terms Experimentation, Security 1.",
                "INTRODUCTION AND PREVIOUSWORK In the early morning hours (05:30 GMT) of January 25, 2003 the fastest computer worm in recorded history began spreading throughout the Internet.",
                "Within 10 minutes after the first infected host (patient zero), 90 percent of all vulnerable hosts had been compromised creating significant disruption to the global Internet infrastructure.",
                "Vern Paxson of the International Computer Science Institute and Lawrence Berkeley National Laboratory in its analysis of Slammer commented: The Slammer worm spread so quickly that human response was ineffective, see [4] The interesting part, from our perspective, about the spread of Slammer is that it was a relatively unsophisticated worm with benign behavior, namely self-reproduction.",
                "Since Slammer, researchers have explored the behaviors of fast spreading worms, and have designed countermeasures strategies based primarily on rate detection and limiting algorithms.",
                "For example, Zou, et al., [2], proposed a scheme where a Kalman filter is used to detect the early propagation of a worm.",
                "Other researchers have proposed the use of detectors where rates of Destination Unreachable messages are monitored by firewalls, and a significant increase beyond normal, alerts the organization to the potential presence of a worm.",
                "However, such strategies suffer from the fighting the last War syndrome.",
                "That is, systems are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In the work described here, we put forth the hypothesis that next generation worms will be different, and therefore such techniques may have some significant limitations.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
                "The concept of emergent intelligence was first studied in association with biological systems.",
                "In such studies, early researchers discovered a variety of interesting insect or animal behaviors in the wild.",
                "A flock of birds sweeps across the sky.",
                "A group of ants forages for food.",
                "A school of fish swims, turns, flees together away from a predator, ands so forth.",
                "In general, this kind of aggregate motion has been called swarm behavior.",
                "Biologists, and computer scientists in the field of artificial intelligence have studied such biological swarms, and 323 attempted to create models that explain how the elements of a swarm interact, achieve goals, and evolve.",
                "Moreover, in recent years the study of swarm intelligence has become increasingly important in the fields of robotics, the design of Mobile ad-hoc Networks (MANETS), the design of Intrusion Detection Systems, the study of traffic patterns in transportation systems, in military applications, and other areas, see [3].",
                "The basic concepts that have been developed over the last decade to explain swarms, and swarm behavior include four basic components.",
                "These are: 1.",
                "Simplicity of logic & actions: A swarm is composed of N agents whose intelligence is limited.",
                "Agents in the swarm use simple local rules to govern their actions.",
                "Some models called this primitive actions or behaviors; 2.",
                "Local Communication Mechanisms: Agents interact with other members in the swarm via simple local communication mechanisms.",
                "For example, a bird in a flock senses the position of adjacent bird and applies a simple rule of avoidance and follow. 3.",
                "Distributed control: Autonomous agents interact with their environment, which probably consists of other agents, but act relatively independently from all other agents.",
                "There is no central command or leader, and certainly there is no global plan. 4.",
                "Emergent Intelligence: Aggregate behavior of autonomous agents results in complex intelligent behaviors; including self-organization.",
                "In order to understand fully the behavior of such swarms it is necessary to construct a model that explains the behavior of what we will call generic worms.",
                "This model, which extends the work by Weaver [5] is presented here in section 2.",
                "In addition, we intend to extend said model in such a way that it clearly explains the behaviors of this new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
                "Such Swarm Worms are potentially more harmful than their similar generic counterparts.",
                "Specifically, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
                "ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
                "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms are capable of compromising hosts at rates up to two orders of magnitude faster than their generic counterpart.",
                "The rest of this manuscript is structure as follows.",
                "In section 2 an abstract model of both generic worms as well as swarm worms is presented.",
                "This model is used in section 2.6 to described the first instance of a swarm worm, ZachiK.",
                "In section 4, preliminary results via both empirical measurements as well as simulation is presented.",
                "Finally, in section 5 our conclusions and insights into future work are presented. 2.",
                "WORM MODELING In order to study the behavior of swarm worms in general, it is necessary to create a model that realistically reflects the structure of worms and it is not necessarily tied to a specific instance.",
                "In this section, we described such a model where a general worm is describe as having four-(4) basic components or subfunctions.",
                "By definition, a worm is a selfcontained, self propagating program.",
                "Thus, in simple terms, it has two main functions: that which propagates and that which does other things.",
                "We propose that there is a third broad functionality of a worm, that of self-preservation.",
                "We also propose that the other functionality of a worm may be more appropriately categorized as Goal-Based Actions (GBA), as whatever functionality included in a worm will naturally be dependent on whatever goals (and subgoals) the author has.",
                "The work presented by Weaver et. al. in [5] provides us with mainly an action and technique based taxonomy of computer worms, which we utilize and further extend here. 2.1 Propagation The propagation function itself may be broken down into three actions: acquire target, send scan, and infect target.",
                "Acquiring the target simply means picking a host to attack next.",
                "Sending a scan involves checking to see if that host is receptive to an infection attempt, since IP-space is sparsely populated.",
                "This may involve a simple ping to check if the host is alive or a full out vulnerability assessment.",
                "Infecting the target is the actual method used to send the worm code to the new host.",
                "In algorithm form: propagate() { host := acquire_target() success := send_scan(host) if( success ) then infect(host) endif } In the case of a simple worm which does not first check to see if the host is available or susceptible (such as Slammer), the scan method is dropped: propagate() { host := acquire_target() infect(host) } Each of these actions may have an associated cost to its inclusion and execution, such as increased worm size and CPU or network load.",
                "Depending on the authors needs or requirements, these become limiting factors in what may be included in the worms actions.",
                "This is discussed further after expanding upon these actions below. 2.2 Target Acquisition: The Target Acquisition phase of our worm algorithm is built directly off of the Target Discovery section in [5].",
                "Weaver et. al. taxonomize this task into 5 separate categories.",
                "Here, we further extend their work through parameterization.",
                "Scanning: Scanning may be considered an equation-based method for choosing a host.",
                "Any type of equation may be used to arrive at an IP address, but there are three main types seen thus far: sequential, random, and local preference.",
                "Sequential scanning is exactly as it sounds: start at an IP address and increment through all the IP space.",
                "This could carry with it the options of which IP to start with (user chosen value, random, or based on IP of infected host) and 324 how many times to increment (continuous, chosen value, or subnet-based).",
                "Random scanning is completely at random (depending on the chosen PRNG method and its seed value).",
                "Local preference scanning is a variance of either Sequential or Random, whereby it has a greater probability of choosing a local IP address over a remote one (for example, the traditional 80/20 split).",
                "Pre-generated Target Lists: Pre-generated Target Lists, or so called hit-lists, could include the options for percentage of total population and percentage wrong, or just number of IPs to include.",
                "Implicit to this type is the fact that the list is divided among a parent and its children, avoiding the problem of every instance hitting the exact same machines.",
                "Externally Generated Target Lists: Externally generated target lists depend on one or more external sources that can be queried for host data.",
                "This will involve either servers that are normally publicly available, such as gaming meta-servers, or ones explicitly setup by the worm or worm author.",
                "The normally available meta-servers could have parameters for rates of change, such as many popping up at night or leaving in the morning.",
                "Each server could also have a maximum queries/second that it would be able to handle.",
                "The worm would also need a way of finding these servers, either hard-coded or through scanning.",
                "Internal Target Lists: Internal Target Lists are highly dependent on the infected host.",
                "This method could parameterize the choice of how much info is on the host, such as all machines in subnet, all windows boxes in subnet, particular servers, number of internal/external, or some combination.",
                "Passive: Passive methods are determined by normal interactions between hosts.",
                "Parameters may include a rate of interaction with particular machines, internal/external rate of interaction, or subnet-based rate of interaction.",
                "Any of these methods may also be combined to produce different types of target acquisition strategies.",
                "For example, the a worm may begin with an initial hit-list of 100 different hosts or subnets.",
                "Once it has exhausted its search using the hit-list, it may then proceed to perform random scanning with a 50% local bias.",
                "It is important to note, however, that the resource consumption of each method is not the same.",
                "Different methods may require the worm to be large, such as the extra bytes required by a hit-list, or to take more processing time, such as by searching the host for addresses of other vulnerable hosts.",
                "Further research and analysis should be performed in this area to determine associated costs for using each method.",
                "The costs could then be used in determining design tradeoffs that worm authors engage at.",
                "For example, hit lists provide a high rate of infection, but at a high cost of worm payload size. 2.2.1 Sending a Scan The send scan function tests to see if the host is available for infection.",
                "This can be as simple as checking if the host is up on the network or as complex as checking if the host is vulnerable to the exploit which will be used.",
                "The sending of a scan before attempted infection can increase the scanning rate if the cost for failing an infection is greater than the cost of failing a scan or sending a scan plus infection; and failures are more frequent than successes.",
                "One important parameter to this would be the choice of transport protocol (TCP/UDP) or just simply the time for one successful scan and time for one failed scan.",
                "Also, whether or not it tests for the host to be up or if it is a full test for the vulnerability (or for multiple vulnerabilities). 2.2.2 Infection Vector (IV) The particular infection vector used to access the remote host is mainly dependent on the particular vulnerability chosen to exploit.",
                "In a non-specific sense, it is dependent on the transport protocol chosen to use and the message size to be sent.",
                "Section 3 of [5] also proposes three particular classes of IV: Self-carried, second channel, and embedded. 2.3 Self Preservation The Self Preservation actions of a worm may take many forms.",
                "In the wild, worms have been observed to disable anti-virus software or prevent sending itself to certain antivirusknown addresses.",
                "They have also been seen to attempt disabling of other worms which may be contending for the same system.",
                "We also believe that a time-based throttled scanning may help the worm to slip under the radar.",
                "We also propose a decoy method, whereby a worm will release a few children that cause a lot of noise so that the parent is not noticed.",
                "It has also been proposed [5] that a worm cause damage to its host if, and only if, it is disturbed in some way.",
                "This module could contain parameters for: probability of success in disabling anti-virus or other software updates, probability of being noticed and thus removed, or hardening of the host against other worms. 2.4 Goal-Based Actions A worms GBA functionality depends on the authors goal list.",
                "The Payloads section of [5] provides some useful suggestions for such a module.",
                "The opening of a back-door can make the host susceptible to more attacks.",
                "This would involve a probability of the back-door being used and any associated traffic utilization.",
                "It could also provide a list of other worms this host is now susceptible to or a list of vulnerabilities this host now has.",
                "Spam relays and HTTP-Proxies of course have an associated bandwidth consumption or traffic pattern.",
                "Internet DoS attacks would have a set time of activation, a target, and a traffic pattern.",
                "Data damage would have an associated probability that the host dies because of the damage.",
                "In Figure 1, this general model of a worm is summarized.",
                "Please note that in this model there is no learning, no, or very little, sharing of information between worm instances, and certainly no coordination of actions.",
                "In the next section we expand the model to include such mechanisms, and hence, arrive at the general model of a swarm worm. 2.5 Swarms - General Model As described in section 1, the basic characteristics that distinguished swarm behavior from simply what appears to be collective coordinated behaviors are four basic attributes.",
                "These are: 1.",
                "Simplicity of logic & actions; 2.",
                "Local Communication Mechanisms; 3.",
                "Distributed control; and 4.",
                "Emergent Intelligence, including self-organization. 325 Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 1: General Worm Model In this work we aggregate all of these attributes under the general title of Learning, Communication, and Distributed Control.",
                "The presence of these attributes distinguishes swarm worms from otherwise regular worms, or other types of <br>malware</br> such as Zombies.",
                "In figure ? ?, the generic model of a worm is expanded to included these set of actions.",
                "Within this context then, a worm like Slammer cannot be categorized as a swarm worm due to the fact that new instances of the worm do not coordinate their actions or share information.",
                "On the other hand, Zombies and many other forms of DDoS, which at first glance may be consider swarm worms are not.",
                "This is simply due to fact that in the case of Zombies, control is not distributed but rather centralized, and no emergent behaviors arise.",
                "The latter, the potential emergence of intelligence or new behaviors is what makes swarm worms so potentially dangerous.",
                "Finally, when one considers the majority of recent disruptions to the Internet Infrastructure, and in light of our description of swarm attacks, then said disruptions can be easily categorized as precursors to truly swarm behavior.",
                "Specifically, â¢ DDOS - Large number of compromised hosts send useless packets requiring processing (Stacheldraht, http : //www.cert.org/ incidentnotes/IN â 99 â 04.html).",
                "DDoS attacks are the early precursors to Swarm Attacks due to the large number of agents involved. â¢ Code Red CrV1, Code Red II, Nimbda - Exhibit early notions of swarm attacks, including a backdoor communication channel. â¢ Staniford & Paxson in How to Own the Internet in Your Spare Time? explore modifications to CrV1, Code Red I, II with a swarm like type of behavior.",
                "For example, they speculate on new worms which employ direct worm-to-worm communication, and employ programmable updates.",
                "For example the Warhol worm, and Permutation-Scanning (self coordinating) worms. 2.6 Swarm Worm: the details In considering the creation of what we believed to be the first Swarm Worm in existence, we wanted to adhere as close as possible to the general model presented in section ? ? while at the same time facilitating large scale analysis, both empirical and through simulations, of the behavior of the swarm.",
                "For this reason, we selected as the first instance Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Learning, Communication, Pheromones/Flags (Test and Distributed Control if Worm is already present) Time bombs, Learning Algorithms, IRC channel Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 2: General Model of a Swarm Worm of the swarm a simple password cracking worm.",
                "The objective of this worm simply is to infect a host by sequentially attempting to login into the host using well known passwords (dictionary attack), passwords that have been discovered previously by any member of the swarm, and random passwords.",
                "Once, a host is infected, the worm will create communication channels with both its known neighbors at that time, as well as with any offsprings that it successfully generates.",
                "In this context a successful generation of an offspring means simply infecting a new host and replicating an exact copy of itself in such a host.",
                "We call this swarm worm the ZachiK worm in honor of one of its creators.",
                "As it can be seen from this description, the ZachiK worm exhibits all of the elements described before.",
                "In the following sections, we described in detail each one of the elements of the ZachiK worm. 2.7 Infection Vector The infection vector used for ZachiK worm is the secure shell protocol SSH.",
                "A modified client which is capable of receiving passwords from the command line was written, and integrated with a script that supplies it with various passwords: known and random.",
                "When a password is found for an appropriate target, the infection process begins.",
                "After the root password of a host is discovered, the worm infects the target host and replicates itself.",
                "The worm creates a new directory in the target host, copies the modified ssh client, the script, the communications servers, and the updated versions of data files (list of known passwords and a list of current neighbors).",
                "It then runs the modified script on the newly infected hosts, which spawns the communications server, notifies the neighbors and starts looking for new targets.",
                "It could be argued, correctly, that the ZachiK worm can be easily defeated by current countermeasure techniques present on most systems today, such as disallowing direct root logins from the network.",
                "Within this context ZachiK can quickly be discarded as very simple and harmless worm that does not require further study.",
                "However, the reader should consider the following: 1.",
                "ZachiK can be easily modified to include a variety of infection vectors.",
                "For example, it could be programmed to guess common user names and their passwords; gain 326 access to a system, then guess the root password or use other well know vulnerabilities to gain root privileges; 2.",
                "ZachiK is a proof of concept worm.",
                "The importance of ZachiK is that it incorporates all of the behaviors of a swarm worm including, but not restricted to, distributed control, communication amongst agents, and learning; 3.",
                "ZachiK is composed of a large collection of agents operating independently which lends itself naturally to parallel algorithms such as a parallel search of the IPV4 address space.",
                "Within this context, SLAMMER, does incorporate a parallel search capability of potentially susceptible addresses.",
                "However, unlike ZachiK, the knowledge discovered by the search is never shared amongst the agents.",
                "For this reasons, and many others, one should not discard the potential of this new class of worms but rather embrace its study. 2.8 Self-Preservation In the case of ZachiK worm, the main self-preservation techniques used are simply keeping the payload small.",
                "In this context, this simply means restricting the number of passwords that an offspring inherits, masquerading worm messages as common http requests, and restricting the number of neighbors to a maximum of five-(5). 2.9 Propagation Choosing the next target(s) in an efficient matter requires thought.",
                "In the past, known and proposed worms, see [5], have applied propagation techniques that varied.",
                "These include: strictly random selection of a potential vulnerable host; target lists of vulnerable hosts; locally biased random selection (select a host target at random from a local subnet); and a combination of some or all of the above.",
                "In our test and simulation environments, we will apply a combination of locally biased and totally random selection of potential vulnerable hosts.",
                "However, due to the fact that the ZachiK worm is a swarm worm, address discovery (that is when non-existent addresses are discovered) information will be shared amongst members of the swarm.",
                "The infection and propagation threads do the following set of activities repeatedly: â¢ Choose an address â¢ Check the validity of the address â¢ Choose a set of passwords â¢ Try infecting the selected host with this set of passwords As described earlier, choosing an address makes use of a combination of random selection, local bias, and target lists.",
                "Specifically, to choose an address, the instance may either: â¢ Generate a new random address â¢ Generate an address on the local network â¢ Pick an address from a handoff list The choice is made randomly among these options, and can be varied to test the dependency of propagation on particular choices.",
                "Password are either chosen from the list of known passwords or newly generated.",
                "When an infection of a valid address fails, it is added to a list of handoffs, which is sent to the neighbors to try to work on. 2.10 Learning, CommunicationandDistributed Control 2.10.1 Communication The concept of a swarm is based on transfer of information amongst neighbors, which relay their new incoming messages to their neighbors, and so on until every worm instance in the swarm is aware of these messages.",
                "There are two classes of messages: data or information messages and commands.",
                "The command messages are meant for an external user (a.k.a., hackers and/or crackers) to control the actions of the instances, and are currently not implemented.",
                "The information messages are currently of three kinds: new member, passwords and exploitable addresses (handoffs).",
                "The new member messages are messages that a new instance sends to the neighbors on its (short) list of initial neighbors.",
                "The neighbors then register these instances in their neighbor list.",
                "These are messages that form the multi-connectivity of the swarm, and without them, the topology will be a treelike structure, where eliminating a single node would cause the instances beneath it to be inaccessible.",
                "The passwords messages inform instances of newly discovered passwords, and by informing all instances, the swarm as whole collects this information, which allows it to infect new instances more effectively.",
                "The handoffs messages inform instances of valid addresses that could not be compromised (fail at breaking the password for the root account).",
                "Since the address space is rather sparse, it takes a relatively long time (i.e. many trials) to discover a valid address.",
                "Therefore, by handing off discovered valid addresses, the swarm is (a) conserving energy by not re-discovering the same addresses (b) attacking more effectively.",
                "In a way, this is a simple instance of coordinated activity of a swarm. 2.10.2 Coordination When a worm instance is born, it relays its existence to all neighbors on its list.",
                "The main thread then spawns a few infection threads, and continues to handle incoming messages (registering neighbors, adding new passwords, receiving addresses and relaying these messages). 2.10.3 Distributed Control Control in the ZachiK worm is distributed in the sense that each instance of the worm performs a set of actions independently of every other instance while at the same time benefiting from the learning achieve by its immediate neighbors. 2.11 Goal Based Actions The first instantiation of the ZachiK worm has two basic goals.",
                "These are: (1) propagate, and (2) discover and share with members of th swarm new root passwords. 3.",
                "EXPERIMENTAL DESIGN In order to verify our hypothesis that Swarm Worms are more capable, and therefore dangerous than other well known 327 worms, a network testbed was created, and a simulator, capable of simulating large scale Internet-like topologies (IPV4 space), was developed.",
                "The network testbed consisted of a local area network of 30 Linux based computers.",
                "The simulator was written in C++ .",
                "The simple swarm worm described in section 2.6 was used to infect patient-zero, and then the swarm worm was allowed to propagate via its own mechanisms of propagation, distributed control, and swarm behaviors.",
                "In the case of a simple local area network of 30 computers, six-(6) different root passwords out of a password space of 4 digits (10000 options) were selected.",
                "At the start of the experiment a single known password is known, that of patient-zero.",
                "All shared passwords are distributed randomly across all nodes.",
                "Similarly, in the case of the simulation, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "For example, in one of our simulation runs, the network topology consisted of 200 subnets each containing 50 hosts.",
                "In such a topology, shared passwords were distributed across subnets where a varying percentage of passwords were shared across subnets.",
                "The percentages of shared passwords used was reflective of early empirical studies, where up to 39.7% of common passwords were found to be shared. 4.",
                "RESULTS In Figure 3, the results comparing Swarm Attack behavior versus that of a typical Malform Worm for a 30 node LAN are presented.",
                "In this set of empirical runs, six-(6) shared passwords were distributed at random across all nodes from a possible of 10,000 unknown passwords.",
                "The data presented reflects the behaviors of a total of three-(3) distinct classes of worm or swarm worms.",
                "The class of worms presented are as follows: â¢ I-NS-NL:= Generic worm, independent (I), no learning/memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; and â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 3, the results validate our original hypothesis that swarm worms are significantly more efficient and dangerous than generic worms.",
                "In this set of experiments, the sharing of passwords provides an order of magnitude improvement over a memoryless random worm.",
                "Similarly, a swarm worm that shares passwords and addresses is approximately two orders of magnitude more efficient than its generic counterpart.",
                "In Figure 3, a series of discontinuities can be observed.",
                "These discontinuities are an artifact of the small sample space used for this experiment.",
                "Basically, as soon as a password is broken, all nodes sharing that specific password are infected within a few seconds.",
                "Note that it is trivial for a swarm worm to scan and discovered a small shared password space.",
                "In Figure 4, the simulation results comparing Swarm Attack Behavior versus that of a Generic Malform Worm are presented.",
                "In this set of simulation runs, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "The data presented reflects the behaviors of three-(3) distinct classes of worm or swarm worms and two(2) different target host selection scanning strategies (random scanning and local bias).",
                "The amount of local bias was varied across multiple simulation runs.",
                "The results presented are aggregate behaviors.",
                "In general the following class of Generic Worms and Swarm Worms were simulated.",
                "Address Scanning: â¢ Random:= addresses are selected at random from a subset of the IPV4 space, namely, a 224 address space; and â¢ Local Bias:= addresses are selected at random from either a local subnet (256 addresses) or from a subset of the IPV4 space, namely, a 224 address space.",
                "The percentage of local bias is varied across multiple runs.",
                "Learning, Communication & Distributed Control â¢ I-NL-NS: Generic worm, independent (I), no learning/ memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ I-L-OOS: Generic worm, independent (I), learning/ memoryless (L), and one time sharing of information with offsprings only (OOS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; â¢ S-L-S&AOP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of addresses with neighbors and offsprings, shares passwords one time only (at creation) with offsprings(SA&OP); â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 4, the results are consistent with our set of empirical results.",
                "In addition, the following observations can be made. 1.",
                "Local preference is incredibly effective. 2.",
                "Short address handoffs are more effective than long ones.",
                "We varied the size of the list allowed in the sharing of addresses; the overhead associated with a long address list is detrimental to the performance of the swarm worm, as well as to its stealthiness; 3.",
                "For the local bias case, sharing valid addresses of susceptible host, S-L-S&AOP worm (recall, the S-L-S&AOP swarm shares passwords, one time only, with offsprings 328 at creation time) is more effective than sharing passwords in the case of the S-L-SP swarm.",
                "In this case, we can think of the swarm as launching a distributeddictionary attack: different segments of the swarm use different passwords to try to break into susceptible uninfected host.",
                "In the local bias mode, early in the life of the swarm, address-sharing is more effective than password-sharing, until most subnets are discovered.",
                "Then the targeting of local addresses assists in discovering the susceptible hosts, while the swarm members need to waste time rediscovering passwords; and 4.",
                "Infecting the last 0.5% of nodes takes a very long time in non-local bias mode.",
                "Basically, the shared password list across subnets has been exhausted, and the swarm reverts to simply a random discovery of password algorithm.",
                "Figure 3: Swarm Attack Behavior vs. Malform Worm: Empirical Results, 30node LAN Figure 4: Swarm Attack Behavior vs. Malform Worm: Simulation Results 5.",
                "SUMMARY AND FUTURE WORK In this manuscript, we have presented an abstract model, similar in some aspects to that of Weaver [5], that helps explain the generic nature of worms.",
                "The model presented in section 2 was extended to incorporate a new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
                "Such Swarm Worms are potentially more harmful than their generic counterparts.",
                "In addition, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
                "ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
                "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms is capable of compromising hosts a rates up to 2 orders of magnitude faster than its generic counterpart while retaining stealth capabilities.",
                "This work opens up a new area of interesting problems.",
                "Some of the most interesting and pressing problems to be consider are as follows: â¢ Is it possible to apply some of learning concepts developed over the last ten years in the areas of swarm intelligence, agent systems, and distributed control to the design of sophisticated swarm worms in such a way that true emergent behavior takes place? â¢ Are the current techniques being developed in the design of Intrusion Detection & CounterMeasure Systems and Survivable systems effective against this new class of worms? ; and â¢ What techniques, if any, can be developed to create defenses against swarm worms? 6.",
                "ACKNOWLEDGMENTS This work was conducted as part of a larger effort in the development of next generation Intrusion Detection & CounterMeasure Systems at WSSRL.",
                "The work is conducted under the auspices of Grant ACG-2004-06 by the Acumen Consulting Group, Inc., Marlboro, Massachusetts. 7.",
                "REFERENCES [1] C.C.",
                "Zou, L. Gao, W. G., and Towsley, D. Monitoring and early warning for internet worms.",
                "In 10th ACM Conference on Computer and Communications Security, Washington, DC (October 2003). [2] Liu, S., and Passino, K. Swarm intelligence: Literature overview.",
                "In Dept. of Electrical Engineering, The Ohio State University, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., and Weaver, N. The spread of the saphire/slammer worm.",
                "Tech. rep., A joint effort of CAIDA, ICSI, Silicon Defense, UC Berkeley EECS and UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S., and Cunningham, R. A taxonomy of computer worms.",
                "In Proceedings of the ACM Workshop on Rapid <br>malware</br> (WORM) (2003). 329"
            ],
            "original_annotated_samples": [
                "An Initial Analysis and Presentation of <br>malware</br> Exhibiting Swarm-Like Behavior Fernando C.ColÂ´on Osorio Wireless System Security Research Laboratory (W.S.S.R.L.)",
                "The presence of these attributes distinguishes swarm worms from otherwise regular worms, or other types of <br>malware</br> such as Zombies.",
                "In Proceedings of the ACM Workshop on Rapid <br>malware</br> (WORM) (2003). 329"
            ],
            "translated_annotated_samples": [
                "Un AnÃ¡lisis Inicial y PresentaciÃ³n de Malware que Exhibe Comportamiento Similar a un Enjambre por Fernando C. ColÃ³n Osorio Laboratorio de InvestigaciÃ³n en Seguridad de Sistemas InalÃ¡mbricos (W.S.S.R.L.)",
                "La presencia de estos atributos distingue a los gusanos de enjambre de los gusanos regulares, u otros tipos de <br>malware</br> como los Zombies.",
                "En Actas del Taller de ACM sobre Malware RÃ¡pido (WORM) (2003). 329"
            ],
            "translated_text": "Un AnÃ¡lisis Inicial y PresentaciÃ³n de Malware que Exhibe Comportamiento Similar a un Enjambre por Fernando C. ColÃ³n Osorio Laboratorio de InvestigaciÃ³n en Seguridad de Sistemas InalÃ¡mbricos (W.S.S.R.L.) El Slammer, que actualmente es el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada, se observÃ³ infectando el 90 por ciento de todos los hosts vulnerables de Internet en 10 minutos. Aunque la acciÃ³n principal que realiza el gusano Slammer es una replicaciÃ³n relativamente poco sofisticada de sÃ­ mismo, se propaga tan rÃ¡pidamente que la respuesta humana fue ineficaz. La mayorÃ­a de las estrategias de contramedidas propuestas se basan principalmente en la detecciÃ³n de tasas y algoritmos de limitaciÃ³n. Sin embargo, se estÃ¡n diseÃ±ando y desarrollando estrategias para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En nuestro trabajo, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n radicalmente diferentes, y posiblemente dichas tÃ©cnicas resultarÃ¡n ineficaces. EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. La Inteligencia Emergente es el comportamiento de sistemas, muy similar a sistemas biolÃ³gicos como hormigas o abejas, donde las interacciones locales simples de miembros autÃ³nomos, con acciones primitivas simples, dan lugar a un comportamiento global complejo e inteligente. En este manuscrito introduciremos los principios bÃ¡sicos detrÃ¡s de la idea de los Gusanos en Enjambre, asÃ­ como la estructura bÃ¡sica requerida para ser considerado un gusano en enjambre. AdemÃ¡s, presentaremos resultados preliminares sobre las velocidades de propagaciÃ³n de un gusano de enjambre llamado gusano ZachiK. Demostraremos que ZachiK es capaz de propagarse a una velocidad 2 Ã³rdenes de magnitud mÃ¡s rÃ¡pida que gusanos similares sin capacidades de enjambre. CategorÃ­as y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: DetecciÃ³n de Intrusiones; D.4.6 [Seguridad y ProtecciÃ³n]: Software Invasivo TÃ©rminos Generales ExperimentaciÃ³n, Seguridad 1. INTRODUCCIÃN Y TRABAJO PREVIO En las primeras horas de la maÃ±ana (05:30 GMT) del 25 de enero de 2003, el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada comenzÃ³ a propagarse por Internet. Dentro de los 10 minutos posteriores al primer huÃ©sped infectado (paciente cero), el 90 por ciento de todos los huÃ©spedes vulnerables habÃ­an sido comprometidos, creando una interrupciÃ³n significativa en la infraestructura de Internet a nivel global. Vern Paxson del Instituto Internacional de Ciencias de la ComputaciÃ³n y del Laboratorio Nacional Lawrence Berkeley comentÃ³ en su anÃ¡lisis de Slammer: El gusano Slammer se propagÃ³ tan rÃ¡pidamente que la respuesta humana fue ineficaz, ver [4]. La parte interesante, desde nuestro punto de vista, sobre la propagaciÃ³n de Slammer es que era un gusano relativamente poco sofisticado con un comportamiento benigno, es decir, la auto-reproducciÃ³n. Desde Slammer, los investigadores han explorado los comportamientos de los gusanos de propagaciÃ³n rÃ¡pida y han diseÃ±ado estrategias de contramedidas basadas principalmente en la detecciÃ³n de la velocidad y algoritmos de limitaciÃ³n. Por ejemplo, Zou, et al., [2], propusieron un esquema donde se utiliza un filtro de Kalman para detectar la propagaciÃ³n temprana de un gusano. Otros investigadores han propuesto el uso de detectores donde las tasas de mensajes de Destino Inalcanzable son monitoreadas por los firewalls, y un aumento significativo mÃ¡s allÃ¡ de lo normal alerta a la organizaciÃ³n sobre la posible presencia de un gusano. Sin embargo, tales estrategias sufren del sÃ­ndrome de luchar la Ãºltima guerra. Es decir, se estÃ¡n diseÃ±ando y desarrollando sistemas para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En el trabajo descrito aquÃ­, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n diferentes, y por lo tanto, dichas tÃ©cnicas pueden tener algunas limitaciones significativas. EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. El concepto de inteligencia emergente fue estudiado por primera vez en asociaciÃ³n con sistemas biolÃ³gicos. En tales estudios, los primeros investigadores descubrieron una variedad de comportamientos interesantes de insectos o animales en la naturaleza. Una bandada de pÃ¡jaros cruza el cielo. Un grupo de hormigas busca comida. Una escuela de peces nada, gira, huye juntos lejos de un depredador, y asÃ­ sucesivamente. En general, este tipo de movimiento agregado se ha llamado comportamiento de enjambre. Los biÃ³logos y cientÃ­ficos de la computaciÃ³n en el campo de la inteligencia artificial han estudiado tales enjambres biolÃ³gicos y han intentado crear modelos que expliquen cÃ³mo interactÃºan los elementos de un enjambre, logran objetivos y evolucionan. AdemÃ¡s, en los Ãºltimos aÃ±os el estudio de la inteligencia de enjambre ha cobrado cada vez mÃ¡s importancia en los campos de la robÃ³tica, el diseÃ±o de Redes MÃ³viles Ad-hoc (MANETS), el diseÃ±o de Sistemas de DetecciÃ³n de Intrusiones, el estudio de patrones de trÃ¡fico en sistemas de transporte, en aplicaciones militares y otras Ã¡reas, ver [3]. Los conceptos bÃ¡sicos que se han desarrollado en la Ãºltima dÃ©cada para explicar los enjambres y su comportamiento incluyen cuatro componentes bÃ¡sicos. Estos son: 1. Sencillez de la lÃ³gica y acciones: Un enjambre estÃ¡ compuesto por N agentes cuya inteligencia es limitada. Los agentes en el enjambre utilizan reglas locales simples para gobernar sus acciones. Algunos modelos llaman a estas acciones o comportamientos primitivos; 2. Mecanismos de comunicaciÃ³n local: Los agentes interactÃºan con otros miembros en el enjambre a travÃ©s de simples mecanismos de comunicaciÃ³n local. Por ejemplo, un pÃ¡jaro en una bandada percibe la posiciÃ³n del pÃ¡jaro adyacente y aplica una regla simple de evitaciÃ³n y seguimiento. 3. Control distribuido: Los agentes autÃ³nomos interactÃºan con su entorno, que probablemente consiste en otros agentes, pero actÃºan relativamente de forma independiente de todos los demÃ¡s agentes. No hay un mando central o lÃ­der, y ciertamente no hay un plan global. Inteligencia emergente: El comportamiento agregado de agentes autÃ³nomos resulta en comportamientos inteligentes complejos, incluyendo la autoorganizaciÃ³n. Para comprender completamente el comportamiento de tales enjambres, es necesario construir un modelo que explique el comportamiento de lo que llamaremos gusanos genÃ©ricos. Este modelo, que amplÃ­a el trabajo de Weaver [5], se presenta aquÃ­ en la secciÃ³n 2. AdemÃ¡s, tenemos la intenciÃ³n de ampliar dicho modelo de tal manera que explique claramente los comportamientos de esta nueva clase de gusanos potencialmente peligrosos llamados Gusanos en Enjambre. Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biolÃ³gicos y muestran un alto grado de aprendizaje, comunicaciÃ³n e inteligencia distribuida. Tales gusanos en enjambre son potencialmente mÃ¡s daÃ±inos que sus contrapartes genÃ©ricas similares. EspecÃ­ficamente, la primera instancia, segÃºn nuestro conocimiento, de un gusano de aprendizaje de este tipo fue creado, llamado ZachiK. ZachiK es un gusano enjambre de descifrado de contraseÃ±as simple que incorpora diferentes estrategias de aprendizaje y comparticiÃ³n de informaciÃ³n. Un gusano de enjambre similar fue desplegado tanto en una red de Ã¡rea local de treinta (30) hosts, como simulado en una topologÃ­a de 10,000 nodos. Los resultados preliminares mostraron que dichos gusanos son capaces de comprometer a los anfitriones a velocidades hasta dos Ã³rdenes de magnitud mÃ¡s rÃ¡pidas que su contraparte genÃ©rica. El resto de este manuscrito estÃ¡ estructurado de la siguiente manera. En la secciÃ³n 2 se presenta un modelo abstracto tanto de gusanos genÃ©ricos como de gusanos en enjambre. Este modelo se utiliza en la secciÃ³n 2.6 para describir la primera instancia de un gusano enjambre, ZachiK. En la secciÃ³n 4, se presentan resultados preliminares a travÃ©s de mediciones empÃ­ricas y simulaciones. Finalmente, en la secciÃ³n 5 se presentan nuestras conclusiones y perspectivas sobre trabajos futuros. MODELADO DE GUSANOS Para estudiar el comportamiento de los gusanos en enjambre en general, es necesario crear un modelo que refleje de manera realista la estructura de los gusanos y que no estÃ© necesariamente ligado a una instancia especÃ­fica. En esta secciÃ³n, describimos un modelo en el que un gusano general se describe como teniendo cuatro (4) componentes bÃ¡sicos o subfunciones. Por definiciÃ³n, un gusano es un programa autocontenido y auto propagante. Por lo tanto, en tÃ©rminos simples, tiene dos funciones principales: la que se propaga y la que realiza otras tareas. Proponemos que hay una tercera amplia funcionalidad de un gusano, la de autoconservaciÃ³n. TambiÃ©n proponemos que la otra funcionalidad de un gusano podrÃ­a ser categorizada de manera mÃ¡s apropiada como Acciones Basadas en Objetivos (ABO), ya que cualquier funcionalidad incluida en un gusano dependerÃ¡ naturalmente de los objetivos (y subobjetivos) que tenga el autor. El trabajo presentado por Weaver et al. en [5] nos proporciona principalmente una taxonomÃ­a de gusanos informÃ¡ticos basada en acciones y tÃ©cnicas, la cual utilizamos y ampliamos aquÃ­. 2.1 PropagaciÃ³n La funciÃ³n de propagaciÃ³n en sÃ­ misma puede desglosarse en tres acciones: adquirir objetivo, enviar escaneo e infectar objetivo. Adquirir el objetivo simplemente significa elegir un anfitriÃ³n para atacar a continuaciÃ³n. Enviar un escaneo implica verificar si ese host estÃ¡ receptivo a un intento de infecciÃ³n, ya que el espacio de direcciones IP estÃ¡ escasamente poblado. Esto puede implicar un simple ping para verificar si el host estÃ¡ activo o una evaluaciÃ³n completa de vulnerabilidades. Infectar al objetivo es el mÃ©todo real utilizado para enviar el cÃ³digo del gusano al nuevo hospedador. En forma de algoritmo: propagar() { host := adquirir_objetivo() Ã©xito := enviar_escaneo(host) si( Ã©xito ) entonces infectar(host) fin si } En el caso de un gusano simple que no verifica primero si el host estÃ¡ disponible o susceptible (como Slammer), se elimina el mÃ©todo de escaneo: propagar() { host := adquirir_objetivo() infectar(host) } Cada una de estas acciones puede tener un costo asociado a su inclusiÃ³n y ejecuciÃ³n, como un aumento en el tamaÃ±o del gusano y la carga de CPU o red. Dependiendo de las necesidades o requisitos de los autores, estos se convierten en factores limitantes en lo que puede incluirse en las acciones de los gusanos. Esto se discute mÃ¡s a fondo despuÃ©s de expandir sobre estas acciones a continuaciÃ³n. 2.2 AdquisiciÃ³n de Objetivos: La fase de AdquisiciÃ³n de Objetivos de nuestro algoritmo de gusano se construye directamente a partir de la secciÃ³n de Descubrimiento de Objetivos en [5]. Weaver et al. clasifican esta tarea en 5 categorÃ­as separadas. AquÃ­, ampliamos aÃºn mÃ¡s su trabajo a travÃ©s de la parametrizaciÃ³n. Escaneo: El escaneo puede considerarse un mÃ©todo basado en ecuaciones para elegir un anfitriÃ³n. Cualquier tipo de ecuaciÃ³n puede ser utilizada para llegar a una direcciÃ³n IP, pero hasta ahora se han visto tres tipos principales: secuencial, aleatorio y preferencia local. El escaneo secuencial es exactamente como suena: comenzar en una direcciÃ³n IP e incrementar a travÃ©s de todo el espacio de direcciones IP. Esto podrÃ­a llevar consigo las opciones de quÃ© IP empezar (valor elegido por el usuario, aleatorio o basado en la IP del host infectado) y cuÃ¡ntas veces incrementar (continuo, valor elegido o basado en subred). El escaneo aleatorio es completamente al azar (dependiendo del mÃ©todo PRNG elegido y su valor de semilla). El escaneo de preferencia local es una variante de Secuencial o Aleatorio, en la que tiene una mayor probabilidad de elegir una direcciÃ³n IP local en lugar de una remota (por ejemplo, la divisiÃ³n tradicional de 80/20). Listas de objetivos pregeneradas: Las listas de objetivos pregeneradas, o tambiÃ©n llamadas listas de objetivos, podrÃ­an incluir opciones para el porcentaje de la poblaciÃ³n total y el porcentaje de errores, o simplemente el nÃºmero de direcciones IP a incluir. ImplÃ­cito en este tipo es el hecho de que la lista se divide entre un padre y sus hijos, evitando el problema de que cada instancia golpee exactamente las mismas mÃ¡quinas. Listas de objetivos generadas externamente: Las listas de objetivos generadas externamente dependen de una o mÃ¡s fuentes externas que pueden ser consultadas para obtener datos del host. Esto implicarÃ¡ servidores que normalmente estÃ¡n pÃºblicamente disponibles, como los meta-servidores de juegos, o aquellos configurados explÃ­citamente por el gusano o el autor del gusano. Los meta-servidores normalmente disponibles podrÃ­an tener parÃ¡metros para tasas de cambio, como muchos apareciendo por la noche o desapareciendo por la maÃ±ana. Cada servidor tambiÃ©n podrÃ­a tener un mÃ¡ximo de consultas por segundo que serÃ­a capaz de manejar. El gusano tambiÃ©n necesitarÃ­a una forma de encontrar estos servidores, ya sea codificada en duro o a travÃ©s de escaneo. Listas de Objetivos Internos: Las Listas de Objetivos Internos dependen en gran medida del host infectado. Este mÃ©todo podrÃ­a parametrizar la elecciÃ³n de cuÃ¡nta informaciÃ³n hay en el host, como todas las mÃ¡quinas en la subred, todas las computadoras con Windows en la subred, servidores especÃ­ficos, nÃºmero de internos/externos, o alguna combinaciÃ³n. Los mÃ©todos pasivos son determinados por las interacciones normales entre los anfitriones. Los parÃ¡metros pueden incluir una tasa de interacciÃ³n con mÃ¡quinas particulares, una tasa de interacciÃ³n interna/externa, o una tasa de interacciÃ³n basada en subredes. Cualquiera de estos mÃ©todos tambiÃ©n puede combinarse para producir diferentes tipos de estrategias de adquisiciÃ³n de objetivos. Por ejemplo, un gusano puede comenzar con una lista inicial de 100 hosts o subredes diferentes. Una vez que haya agotado su bÃºsqueda utilizando la lista de Ã©xitos, puede proceder a realizar un escaneo aleatorio con un sesgo local del 50%. Es importante tener en cuenta, sin embargo, que el consumo de recursos de cada mÃ©todo no es el mismo. Diferentes mÃ©todos pueden requerir que el gusano sea grande, como los bytes adicionales necesarios para una lista de objetivos, o que tome mÃ¡s tiempo de procesamiento, como al buscar direcciones de otros hosts vulnerables en el host. Se deben realizar investigaciones y anÃ¡lisis adicionales en esta Ã¡rea para determinar los costos asociados de utilizar cada mÃ©todo. Los costos podrÃ­an ser utilizados para determinar los compromisos de diseÃ±o en los que los autores de gusanos participan. Por ejemplo, las listas de objetivos proporcionan una alta tasa de infecciÃ³n, pero a un alto costo en el tamaÃ±o de la carga Ãºtil del gusano. 2.2.1 EnvÃ­o de un Escaneo La funciÃ³n de envÃ­o de escaneo prueba si el host estÃ¡ disponible para la infecciÃ³n. Esto puede ser tan simple como verificar si el host estÃ¡ activo en la red o tan complejo como verificar si el host es vulnerable al exploit que se utilizarÃ¡. El envÃ­o de un escaneo antes de intentar una infecciÃ³n puede aumentar la tasa de escaneo si el costo por fallar en una infecciÃ³n es mayor que el costo de fallar en un escaneo o de enviar un escaneo mÃ¡s una infecciÃ³n; y las fallas son mÃ¡s frecuentes que los Ã©xitos. Un parÃ¡metro importante para esto serÃ­a la elecciÃ³n del protocolo de transporte (TCP/UDP) o simplemente el tiempo para un escaneo exitoso y el tiempo para un escaneo fallido. AdemÃ¡s, ya sea que se pruebe si el host estÃ¡ activo o si es una prueba completa de la vulnerabilidad (o de mÃºltiples vulnerabilidades). 2.2.2 Vector de InfecciÃ³n (VI) El vector de infecciÃ³n particular utilizado para acceder al host remoto depende principalmente de la vulnerabilidad especÃ­fica elegida para explotar. En un sentido no especÃ­fico, depende del protocolo de transporte elegido para usar y del tamaÃ±o del mensaje que se va a enviar. La SecciÃ³n 3 de [5] tambiÃ©n propone tres clases particulares de IV: Autotransportado, segundo canal e incrustado. 2.3 AutopreservaciÃ³n Las acciones de autopreservaciÃ³n de un gusano pueden tomar muchas formas. En la naturaleza, se ha observado que los gusanos desactivan el software antivirus o evitan enviarse a ciertas direcciones conocidas por los antivirus. TambiÃ©n se ha observado que intentan deshabilitar otros gusanos que podrÃ­an estar compitiendo por el mismo sistema. TambiÃ©n creemos que un escaneo con limitaciÃ³n de tiempo podrÃ­a ayudar al gusano a pasar desapercibido. TambiÃ©n proponemos un mÃ©todo de seÃ±uelo, mediante el cual un gusano liberarÃ¡ a unos pocos hijos que causen mucho ruido para que el progenitor no sea notado. TambiÃ©n se ha propuesto [5] que un gusano cause daÃ±o a su huÃ©sped si, y solo si, se ve perturbado de alguna manera. Este mÃ³dulo podrÃ­a contener parÃ¡metros para: probabilidad de Ã©xito en deshabilitar actualizaciones de antivirus u otro software, probabilidad de ser detectado y por ende eliminado, o fortalecimiento del anfitriÃ³n contra otros gusanos. 2.4 Acciones Basadas en Objetivos La funcionalidad de GBA de un gusano depende de la lista de objetivos del autor. La secciÃ³n de Cargas Ãºtiles de [5] proporciona algunas sugerencias Ãºtiles para dicho mÃ³dulo. La apertura de una puerta trasera puede hacer que el anfitriÃ³n sea susceptible a mÃ¡s ataques. Esto implicarÃ­a una probabilidad de que se utilice la puerta trasera y cualquier utilizaciÃ³n de trÃ¡fico asociada. TambiÃ©n podrÃ­a proporcionar una lista de otros gusanos a los que este hospedador es ahora susceptible o una lista de vulnerabilidades que este hospedador tiene ahora. Los retransmisores de spam y los servidores proxy HTTP, por supuesto, tienen un consumo de ancho de banda o un patrÃ³n de trÃ¡fico asociado. Los ataques de denegaciÃ³n de servicio en Internet tendrÃ­an un tiempo de activaciÃ³n establecido, un objetivo y un patrÃ³n de trÃ¡fico. El daÃ±o de los datos tendrÃ­a una probabilidad asociada de que el anfitriÃ³n muera debido al daÃ±o. En la Figura 1, se resume este modelo general de un gusano. Por favor, tenga en cuenta que en este modelo no hay aprendizaje, o muy poco, intercambio de informaciÃ³n entre las instancias de gusano, y ciertamente no hay coordinaciÃ³n de acciones. En la siguiente secciÃ³n ampliamos el modelo para incluir dichos mecanismos, y por lo tanto, llegamos al modelo general de un gusano en enjambre. 2.5 Enjambres - Modelo General Como se describe en la secciÃ³n 1, las caracterÃ­sticas bÃ¡sicas que distinguen el comportamiento en enjambre de lo que simplemente parece ser comportamientos colectivos coordinados son cuatro atributos bÃ¡sicos. Estos son: 1. Sencillez de lÃ³gica y acciones; 2. Mecanismos de ComunicaciÃ³n Local; 3. Control distribuido; y 4. Inteligencia emergente, incluyendo autoorganizaciÃ³n. 325 Estructura FunciÃ³n/Ejemplo InfecciÃ³n, Vector de InfecciÃ³n El ejecutable se ejecuta ProtecciÃ³n y sigilo Deshabilitar McAfee (Mantenerse vivo) PropagaciÃ³n Enviar correo electrÃ³nico a todos en la libreta de direcciones AcciÃ³n basada en objetivos (ABO) DDoS www.sco.com Todo lo demÃ¡s, a menudo llamado carga Ãºtil Figura 1: Modelo general de gusano En este trabajo agregamos todos estos atributos bajo el tÃ­tulo general de Aprendizaje, ComunicaciÃ³n y Control Distribuido. La presencia de estos atributos distingue a los gusanos de enjambre de los gusanos regulares, u otros tipos de <br>malware</br> como los Zombies. En la figura ? ?, el modelo genÃ©rico de un gusano se amplÃ­a para incluir este conjunto de acciones. Dentro de este contexto, un gusano como Slammer no puede ser categorizado como un gusano en enjambre debido a que las nuevas instancias del gusano no coordinan sus acciones ni comparten informaciÃ³n. Por otro lado, los zombies y muchas otras formas de DDoS, que a primera vista pueden considerarse gusanos enjambre, no lo son. Esto se debe simplemente al hecho de que en el caso de los zombies, el control no estÃ¡ distribuido sino centralizado, y no surgen comportamientos emergentes. Lo Ãºltimo, la posible apariciÃ³n de inteligencia o nuevos comportamientos es lo que hace que los gusanos en enjambre sean potencialmente peligrosos. Finalmente, cuando se considera la mayorÃ­a de las interrupciones recientes en la Infraestructura de Internet, y a la luz de nuestra descripciÃ³n de los ataques en enjambre, entonces dichas interrupciones pueden ser fÃ¡cilmente categorizadas como precursores de un comportamiento verdaderamente en enjambre. EspecÃ­ficamente, â¢ DDOS: Un gran nÃºmero de hosts comprometidos envÃ­an paquetes inÃºtiles que requieren procesamiento (Stacheldraht, http://www.cert.org/incidentnotes/IN-99-04.html). Los ataques DDoS son los precursores tempranos de los Ataques en Enjambre debido al gran nÃºmero de agentes involucrados. â¢ Code Red CrV1, Code Red II, Nimbda - Exhiben nociones tempranas de ataques en enjambre, incluyendo un canal de comunicaciÃ³n oculto. â¢ Staniford & Paxson en Â¿CÃ³mo Dominar Internet en Tu Tiempo Libre? exploran modificaciones a CrV1, Code Red I, II con un tipo de comportamiento similar a un enjambre. Por ejemplo, especulan sobre nuevos gusanos que emplean comunicaciÃ³n directa de gusano a gusano y utilizan actualizaciones programables. Por ejemplo, el gusano Warhol y los gusanos de Permutation-Scanning (autocoordinados). 2.6 Gusano Swarm: los detalles Al considerar la creaciÃ³n de lo que creÃ­amos que era el primer Gusano Swarm en existencia, querÃ­amos adherirnos lo mÃ¡s cercanamente posible al modelo general presentado en la secciÃ³n ? ? mientras facilitÃ¡bamos al mismo tiempo un anÃ¡lisis a gran escala, tanto empÃ­rico como a travÃ©s de simulaciones, del comportamiento del enjambre. Por esta razÃ³n, seleccionamos como primera instancia Estructura FunciÃ³n/Ejemplo InfecciÃ³n, InfecciÃ³n Vector Ejecutable se ejecuta ProtecciÃ³n y Sigilo Deshabilitar McAfee (ManteniÃ©ndose Vivo) PropagaciÃ³n Enviar correo electrÃ³nico a todos en la libreta de direcciones Aprendizaje, ComunicaciÃ³n, Feromonas/Banderas (Prueba y Control Distribuido si el Gusano ya estÃ¡ presente) Bombas de tiempo, Algoritmos de Aprendizaje, Canal IRC AcciÃ³n Basada en Objetivos (ABO) DDoS www.sco.com Todo lo demÃ¡s, a menudo llamado carga Ãºtil Figura 2: Modelo General de un Gusano de Enjambre del enjambre un gusano simple de craqueo de contraseÃ±as. El objetivo de este gusano simplemente es infectar a un anfitriÃ³n intentando secuencialmente iniciar sesiÃ³n en el anfitriÃ³n utilizando contraseÃ±as conocidas (ataque de diccionario), contraseÃ±as que han sido descubiertas previamente por cualquier miembro del enjambre, y contraseÃ±as aleatorias. Una vez que un huÃ©sped estÃ¡ infectado, el gusano crearÃ¡ canales de comunicaciÃ³n tanto con sus vecinos conocidos en ese momento, como con cualquier descendencia que genere con Ã©xito. En este contexto, una generaciÃ³n exitosa de una descendencia significa simplemente infectar a un nuevo huÃ©sped y replicar una copia exacta de sÃ­ misma en dicho huÃ©sped. Llamamos a este gusano enjambre el gusano ZachiK en honor a uno de sus creadores. Como se puede ver en esta descripciÃ³n, el gusano ZachiK exhibe todos los elementos descritos anteriormente. En las siguientes secciones, describimos detalladamente cada uno de los elementos del gusano ZachiK. 2.7 Vector de InfecciÃ³n El vector de infecciÃ³n utilizado por el gusano ZachiK es el protocolo de shell seguro SSH. Se escribiÃ³ un cliente modificado que es capaz de recibir contraseÃ±as desde la lÃ­nea de comandos, e integrado con un script que le suministra diversas contraseÃ±as: conocidas y aleatorias. Cuando se encuentra una contraseÃ±a para un objetivo adecuado, comienza el proceso de infecciÃ³n. DespuÃ©s de descubrir la contraseÃ±a de root de un host, el gusano infecta el host objetivo y se replica a sÃ­ mismo. El gusano crea un nuevo directorio en el host objetivo, copia el cliente ssh modificado, el script, los servidores de comunicaciones y las versiones actualizadas de los archivos de datos (lista de contraseÃ±as conocidas y una lista de vecinos actuales). Luego ejecuta el script modificado en los hosts reciÃ©n infectados, lo que genera el servidor de comunicaciones, notifica a los vecinos y comienza a buscar nuevos objetivos. Se podrÃ­a argumentar, de manera correcta, que el gusano ZachiK puede ser fÃ¡cilmente derrotado por las tÃ©cnicas de contramedidas actuales presentes en la mayorÃ­a de los sistemas hoy en dÃ­a, como la prohibiciÃ³n de accesos directos de root desde la red. Dentro de este contexto, ZachiK puede ser rÃ¡pidamente descartado como un gusano muy simple e inofensivo que no requiere un estudio adicional. Sin embargo, el lector deberÃ­a considerar lo siguiente: 1. ZachiK se puede modificar fÃ¡cilmente para incluir una variedad de vectores de infecciÃ³n. Por ejemplo, podrÃ­a programarse para adivinar nombres de usuario comunes y sus contraseÃ±as; obtener acceso al sistema, luego adivinar la contraseÃ±a de root o utilizar otras vulnerabilidades conocidas para obtener privilegios de root. ZachiK es un gusano de prueba de concepto. La importancia de ZachiK radica en que incorpora todos los comportamientos de un gusano en enjambre, incluyendo, pero no limitÃ¡ndose a, el control distribuido, la comunicaciÃ³n entre agentes y el aprendizaje; 3. ZachiK estÃ¡ compuesto por una gran colecciÃ³n de agentes que operan de forma independiente, lo que se presta naturalmente a algoritmos paralelos como la bÃºsqueda paralela del espacio de direcciones IPV4. Dentro de este contexto, SLAMMER incorpora una capacidad de bÃºsqueda paralela de direcciones potencialmente susceptibles. Sin embargo, a diferencia de ZachiK, el conocimiento descubierto por la bÃºsqueda nunca se comparte entre los agentes. Por estas razones, y muchas otras, no se debe descartar el potencial de esta nueva clase de gusanos, sino mÃ¡s bien abrazar su estudio. 2.8 AutopreservaciÃ³n En el caso del gusano ZachiK, las principales tÃ©cnicas de autopreservaciÃ³n utilizadas son simplemente mantener el tamaÃ±o de la carga Ãºtil pequeÃ±o. En este contexto, esto simplemente significa restringir la cantidad de contraseÃ±as que una descendencia hereda, enmascarar mensajes de gusano como solicitudes http comunes y limitar el nÃºmero de vecinos a un mÃ¡ximo de cinco-(5). 2.9 PropagaciÃ³n Elegir el(los) prÃ³ximo(s) objetivo(s) de manera eficiente requiere reflexiÃ³n. En el pasado, los gusanos conocidos y propuestos, ver [5], han aplicado tÃ©cnicas de propagaciÃ³n que variaban. Estos incluyen: selecciÃ³n estrictamente aleatoria de un posible anfitriÃ³n vulnerable; listas de objetivos de anfitriones vulnerables; selecciÃ³n aleatoria localmente sesgada (seleccionar un objetivo de anfitriÃ³n al azar de una subred local); y una combinaciÃ³n de algunas o todas las anteriores. En nuestros entornos de prueba y simulaciÃ³n, aplicaremos una combinaciÃ³n de selecciÃ³n localmente sesgada y totalmente aleatoria de posibles hosts vulnerables. Sin embargo, debido a que el gusano ZachiK es un gusano enjambre, la informaciÃ³n de descubrimiento de direcciones (es decir, cuando se descubren direcciones inexistentes) se compartirÃ¡ entre los miembros del enjambre. Los hilos de infecciÃ³n y propagaciÃ³n realizan el siguiente conjunto de actividades repetidamente: â¢ Elegir una direcciÃ³n â¢ Verificar la validez de la direcciÃ³n â¢ Elegir un conjunto de contraseÃ±as â¢ Intentar infectar al host seleccionado con este conjunto de contraseÃ±as. Como se describiÃ³ anteriormente, la elecciÃ³n de una direcciÃ³n hace uso de una combinaciÃ³n de selecciÃ³n aleatoria, sesgo local y listas de objetivos. EspecÃ­ficamente, para elegir una direcciÃ³n, la instancia puede: â¢ Generar una nueva direcciÃ³n aleatoria â¢ Generar una direcciÃ³n en la red local â¢ Elegir una direcciÃ³n de una lista de transferencia La elecciÃ³n se realiza de forma aleatoria entre estas opciones, y puede variarse para probar la dependencia de la propagaciÃ³n en elecciones particulares. Las contraseÃ±as son elegidas de una lista de contraseÃ±as conocidas o generadas recientemente. Cuando una infecciÃ³n de una direcciÃ³n vÃ¡lida falla, se agrega a una lista de entregas, que se envÃ­a a los vecinos para intentar solucionar el problema. 2.10 Aprendizaje, ComunicaciÃ³n y Control Distribuido 2.10.1 ComunicaciÃ³n El concepto de un enjambre se basa en la transferencia de informaciÃ³n entre vecinos, quienes retransmiten sus nuevos mensajes entrantes a sus vecinos, y asÃ­ sucesivamente hasta que cada instancia del gusano en el enjambre estÃ© al tanto de estos mensajes. Hay dos clases de mensajes: mensajes de datos o informaciÃ³n y comandos. Los mensajes de comando estÃ¡n destinados a un usuario externo (tambiÃ©n conocidos como hackers y/o crackers) para controlar las acciones de las instancias, y actualmente no estÃ¡n implementados. Los mensajes de informaciÃ³n actualmente son de tres tipos: nuevo miembro, contraseÃ±as y direcciones explotables (transferencias). Los mensajes de nuevo miembro son mensajes que una nueva instancia envÃ­a a los vecinos en su lista (corta) de vecinos iniciales. Los vecinos luego registran estas instancias en su lista de vecinos. Estos son mensajes que forman la multi-conectividad del enjambre, y sin ellos, la topologÃ­a serÃ­a una estructura en forma de Ã¡rbol, donde la eliminaciÃ³n de un solo nodo harÃ­a que las instancias debajo de Ã©l fueran inaccesibles. Los mensajes de contraseÃ±as informan instancias de contraseÃ±as reciÃ©n descubiertas, y al informar a todas las instancias, el enjambre en su totalidad recopila esta informaciÃ³n, lo que le permite infectar nuevas instancias de manera mÃ¡s efectiva. Los mensajes de entrega informan instancias de direcciones vÃ¡lidas que no pudieron ser comprometidas (fallaron al romper la contraseÃ±a de la cuenta root). Dado que el espacio de direcciones es bastante disperso, lleva un tiempo relativamente largo (es decir, muchos intentos) descubrir una direcciÃ³n vÃ¡lida. Por lo tanto, al entregar las direcciones vÃ¡lidas descubiertas, el enjambre estÃ¡ (a) conservando energÃ­a al no redescubrir las mismas direcciones (b) atacando de manera mÃ¡s efectiva. De cierta manera, esto es una simple instancia de actividad coordinada de un enjambre. 2.10.2 CoordinaciÃ³n Cuando nace una instancia de gusano, transmite su existencia a todos los vecinos en su lista. El hilo principal luego genera algunas hebras de infecciÃ³n y continÃºa manejando mensajes entrantes (registrando vecinos, agregando nuevas contraseÃ±as, recibiendo direcciones y transmitiendo estos mensajes). 2.10.3 Control Distribuido El control en el gusano ZachiK es distribuido en el sentido de que cada instancia del gusano realiza un conjunto de acciones de forma independiente de cada otra instancia, al mismo tiempo que se beneficia del aprendizaje logrado por sus vecinos inmediatos. 2.11 Acciones Basadas en Objetivos La primera instancia del gusano ZachiK tiene dos objetivos bÃ¡sicos. Estos son: (1) propagar, y (2) descubrir y compartir con los miembros de la colonia nuevas contraseÃ±as de root. 3. DISEÃO EXPERIMENTAL Para verificar nuestra hipÃ³tesis de que los Gusanos de Enjambre son mÃ¡s capaces y, por lo tanto, mÃ¡s peligrosos que otros 327 gusanos conocidos, se creÃ³ un banco de pruebas de red y se desarrollÃ³ un simulador capaz de simular topologÃ­as a gran escala similares a Internet (espacio IPV4). El banco de pruebas de red consistÃ­a en una red de Ã¡rea local de 30 computadoras basadas en Linux. El simulador fue escrito en C++. El gusano de enjambre simple descrito en la secciÃ³n 2.6 se utilizÃ³ para infectar al paciente cero, y luego se permitiÃ³ que el gusano de enjambre se propagara a travÃ©s de sus propios mecanismos de propagaciÃ³n, control distribuido y comportamientos de enjambre. En el caso de una red de Ã¡rea local simple de 30 computadoras, se seleccionaron seis (6) contraseÃ±as raÃ­z diferentes de un espacio de contraseÃ±as de 4 dÃ­gitos (10000 opciones). Al comienzo del experimento se conoce una Ãºnica contraseÃ±a, la del paciente cero. Todas las contraseÃ±as compartidas se distribuyen aleatoriamente en todos los nodos. De manera similar, en el caso de la simulaciÃ³n, se construyÃ³ una topologÃ­a de red de 10,000 hosts cuyas direcciones fueron seleccionadas al azar en el espacio IPV4. Dentro de ese espacio, se seleccionaron y distribuyeron un total de 200 contraseÃ±as compartidas ya sea de forma aleatoria y/o dirigida a subredes especÃ­ficas de topologÃ­as de red. Por ejemplo, en una de nuestras ejecuciones de simulaciÃ³n, la topologÃ­a de red consistÃ­a en 200 subredes, cada una conteniendo 50 hosts. En dicha topologÃ­a, las contraseÃ±as compartidas se distribuÃ­an en subredes donde un porcentaje variable de contraseÃ±as se compartÃ­an entre subredes. Los porcentajes de contraseÃ±as compartidas utilizadas reflejaban los primeros estudios empÃ­ricos, donde se descubriÃ³ que hasta el 39.7% de las contraseÃ±as comunes eran compartidas. RESULTADOS En la Figura 3 se presentan los resultados comparando el comportamiento del Ataque de Enjambre versus el de un Gusano Malformado tÃ­pico para una LAN de 30 nodos. En este conjunto de ejecuciones empÃ­ricas, seis (6) contraseÃ±as compartidas fueron distribuidas al azar en todos los nodos de un total de 10,000 contraseÃ±as desconocidas posibles. Los datos presentados reflejan los comportamientos de un total de tres (3) clases distintas de gusanos o enjambres de gusanos. La clase de gusanos presentada es la siguiente: â¢ I-NS-NL:= Gusano genÃ©rico, independiente (I), sin aprendizaje/sin memoria (NL), y sin compartir informaciÃ³n con vecinos o descendientes (NS); â¢ S-L-SP:= Gusano en enjambre (S), aprendizaje (L), mantiene una lista de contraseÃ±as aprendidas, y comparte contraseÃ±as (SP) con vecinos mÃ¡s cercanos y descendientes; y â¢ S-L-SP&A:= Gusano en enjambre (S), aprendizaje (L), mantiene una lista de contraseÃ±as aprendidas, y comparte contraseÃ±as y direcciones existentes (SP&A) con vecinos mÃ¡s cercanos y descendientes. Como se muestra en la Figura 3, los resultados validan nuestra hipÃ³tesis original de que los gusanos en enjambre son significativamente mÃ¡s eficientes y peligrosos que los gusanos genÃ©ricos. En este conjunto de experimentos, el compartir contraseÃ±as proporciona una mejora de un orden de magnitud sobre un gusano aleatorio sin memoria. De manera similar, un gusano en enjambre que comparte contraseÃ±as y direcciones es aproximadamente dos Ã³rdenes de magnitud mÃ¡s eficiente que su contraparte genÃ©rica. En la Figura 3, se pueden observar una serie de discontinuidades. Estas discontinuidades son un artefacto del pequeÃ±o espacio muestral utilizado para este experimento. BÃ¡sicamente, tan pronto como se rompe una contraseÃ±a, todos los nodos que comparten esa contraseÃ±a especÃ­fica se infectan en cuestiÃ³n de segundos. Ten en cuenta que es trivial para un gusano en enjambre escanear y descubrir un pequeÃ±o espacio de contraseÃ±as compartidas. En la Figura 4, se presentan los resultados de la simulaciÃ³n comparando el Comportamiento de Ataque de Enjambre con el de un Gusano Malformado GenÃ©rico. En este conjunto de ejecuciones de simulaciÃ³n, se construyÃ³ una topologÃ­a de red de 10,000 hosts, cuyas direcciones fueron seleccionadas aleatoriamente en el espacio IPV4. Dentro de ese espacio, se seleccionaron y distribuyeron un total de 200 contraseÃ±as compartidas ya sea de forma aleatoria y/o dirigida a subredes especÃ­ficas de topologÃ­as de red. Los datos presentados reflejan los comportamientos de tres (3) clases distintas de gusanos o gusanos en enjambre y dos (2) estrategias de exploraciÃ³n de selecciÃ³n de objetivo de host diferentes (exploraciÃ³n aleatoria y sesgo local). La cantidad de sesgo local variÃ³ en mÃºltiples ejecuciones de simulaciÃ³n. Los resultados presentados son comportamientos agregados. En general, se simularon las siguientes clases de Gusanos GenÃ©ricos y Gusanos en Enjambre. ExploraciÃ³n de direcciones: â¢ Aleatoria:= las direcciones se seleccionan al azar de un subconjunto del espacio IPV4, es decir, un espacio de 224 direcciones; y â¢ Sesgo local:= las direcciones se seleccionan al azar de una subred local (256 direcciones) o de un subconjunto del espacio IPV4, es decir, un espacio de 224 direcciones. El porcentaje de sesgo local varÃ­a en mÃºltiples ejecuciones. Aprendizaje, ComunicaciÃ³n y Control Distribuido â¢ I-NL-NS: Gusano genÃ©rico, independiente (I), sin aprendizaje/sin memoria (NL), y sin compartir informaciÃ³n con vecinos o descendientes (NS); â¢ I-L-OOS: Gusano genÃ©rico, independiente (I), con aprendizaje/sin memoria (L), y compartiendo informaciÃ³n una sola vez con descendientes solamente (OOS); â¢ S-L-SP:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte contraseÃ±as (SP) con vecinos mÃ¡s cercanos y descendientes; â¢ S-L-S&AOP:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte direcciones con vecinos y descendientes, comparte contraseÃ±as solo una vez (al crearse) con descendientes (SA&OP); â¢ S-L-SP&A:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte contraseÃ±as y direcciones existentes (SP&A) con vecinos mÃ¡s cercanos y descendientes. Como se muestra en la Figura 4, los resultados son consistentes con nuestro conjunto de resultados empÃ­ricos. AdemÃ¡s, se pueden hacer las siguientes observaciones. 1. La preferencia local es increÃ­blemente efectiva. Las transferencias cortas de direcciÃ³n son mÃ¡s efectivas que las largas. Variamos el tamaÃ±o de la lista permitida en el intercambio de direcciones; el sobrecosto asociado con una lista de direcciones larga es perjudicial para el rendimiento del gusano en enjambre, asÃ­ como para su sigilo; 3. Para el caso de sesgo local, compartir direcciones vÃ¡lidas de host susceptibles, el gusano S-L-S&AOP (recuerde, el enjambre S-L-S&AOP comparte contraseÃ±as, solo una vez, con descendientes 328 en el momento de la creaciÃ³n) es mÃ¡s efectivo que compartir contraseÃ±as en el caso del enjambre S-L-SP. En este caso, podemos pensar en el enjambre como lanzando un ataque de diccionario distribuido: diferentes segmentos del enjambre utilizan diferentes contraseÃ±as para intentar ingresar a hosts no infectados susceptibles. En el modo de sesgo local, al principio de la vida del enjambre, compartir direcciones es mÃ¡s efectivo que compartir contraseÃ±as, hasta que se descubran la mayorÃ­a de las subredes. Entonces, el apuntar a direcciones locales ayuda a descubrir los hosts susceptibles, mientras que los miembros del enjambre necesitan perder tiempo redescubriendo contraseÃ±as; y 4. Infectar el Ãºltimo 0.5% de los nodos lleva mucho tiempo en modo de sesgo no local. BÃ¡sicamente, la lista de contraseÃ±as compartidas entre subredes se ha agotado, y el enjambre vuelve a simplemente descubrir una contraseÃ±a al azar. Figura 3: Comportamiento del Ataque de Enjambre vs Gusano Malformado: Resultados EmpÃ­ricos, LAN de 30 nodos Figura 4: Comportamiento del Ataque de Enjambre vs Gusano Malformado: Resultados de SimulaciÃ³n 5. RESUMEN Y TRABAJO FUTURO En este manuscrito, hemos presentado un modelo abstracto, similar en algunos aspectos al de Weaver [5], que ayuda a explicar la naturaleza genÃ©rica de los gusanos. El modelo presentado en la secciÃ³n 2 se extendiÃ³ para incorporar una nueva clase de gusanos potencialmente peligrosos llamados Gusanos en Enjambre. Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biolÃ³gicos y muestran un alto grado de aprendizaje, comunicaciÃ³n e inteligencia distribuida. Tales gusanos en enjambre son potencialmente mÃ¡s daÃ±inos que sus contrapartes genÃ©ricas. AdemÃ¡s, se creÃ³ la primera instancia, que sepamos, de un gusano de aprendizaje, llamado ZachiK. ZachiK es un gusano enjambre de descifrado de contraseÃ±as simple que incorpora diferentes estrategias de aprendizaje y comparticiÃ³n de informaciÃ³n. Un gusano de enjambre similar fue desplegado tanto en una red de Ã¡rea local de treinta (30) hosts, como simulado en una topologÃ­a de 10,000 nodos. Los resultados preliminares mostraron que tales gusanos son capaces de comprometer a los anfitriones a tasas hasta 2 Ã³rdenes de magnitud mÃ¡s rÃ¡pido que su contraparte genÃ©rica, manteniendo al mismo tiempo sus capacidades de sigilo. Este trabajo abre una nueva Ã¡rea de problemas interesantes. Algunos de los problemas mÃ¡s interesantes y urgentes a considerar son los siguientes: â¢ Â¿Es posible aplicar algunos de los conceptos de aprendizaje desarrollados en los Ãºltimos diez aÃ±os en las Ã¡reas de inteligencia de enjambre, sistemas de agentes y control distribuido al diseÃ±o de gusanos de enjambre sofisticados de tal manera que se produzca un verdadero comportamiento emergente? â¢ Â¿Son efectivas las tÃ©cnicas actuales que se estÃ¡n desarrollando en el diseÃ±o de Sistemas de DetecciÃ³n y Contramedidas de IntrusiÃ³n y sistemas supervivientes contra esta nueva clase de gusanos?; y â¢ Â¿QuÃ© tÃ©cnicas, si las hay, se pueden desarrollar para crear defensas contra los gusanos de enjambre? 6. AGRADECIMIENTOS Este trabajo se realizÃ³ como parte de un esfuerzo mÃ¡s amplio en el desarrollo de sistemas de DetecciÃ³n de Intrusiones y Contramedidas de prÃ³xima generaciÃ³n en WSSRL. El trabajo se lleva a cabo bajo los auspicios de la subvenciÃ³n ACG-2004-06 otorgada por Acumen Consulting Group, Inc., Marlboro, Massachusetts. REFERENCIAS [1] C.C. Zou, L. Gao, W. G., y Towsley, D. Monitoreo y alerta temprana para gusanos de internet. En la 10Âª Conferencia ACM sobre Seguridad InformÃ¡tica y de Comunicaciones, Washington, DC (octubre de 2003). [2] Liu, S. y Passino, K. Inteligencia de enjambre: Resumen de la literatura. En el Departamento de IngenierÃ­a ElÃ©ctrica, Universidad Estatal de Ohio, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., y Weaver, N. La propagaciÃ³n del gusano saphire/slammer. Inf. tÃ©cnico, Un esfuerzo conjunto de CAIDA, ICSI, Silicon Defense, UC Berkeley EECS y UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S. y Cunningham, R. Una taxonomÃ­a de gusanos informÃ¡ticos. En Actas del Taller de ACM sobre Malware RÃ¡pido (WORM) (2003). 329 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "swarm worm": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "An Initial Analysis and Presentation of Malware Exhibiting Swarm-Like Behavior Fernando C.ColÂ´on Osorio Wireless System Security Research Laboratory (W.S.S.R.L.)",
                "420 Lakeside Avneue Marlboro, Massachusetts 01752 fcco@cs.wpi.edu Zachi Klopman Wireless System Security Research Laboratory (W.S.S.R.L.) 420 Lakeside Avneue Marlboro, Massachusetts 01752 zachi@cs.wpi.edu ABSTRACT The Slammer, which is currently the fastest computer worm in recorded history, was observed to infect 90 percent of all vulnerable Internets hosts within 10 minutes.",
                "Although the main action that the Slammer worm takes is a relatively unsophisticated replication of itself, it still spreads so quickly that human response was ineffective.",
                "Most proposed countermeasures strategies are based primarily on rate detection and limiting algorithms.",
                "However, such strategies are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In our work, we put forth the hypothesis that next generation worms will be radically different, and potentially such techniques will prove ineffective.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
                "Emergent Intelligence is the behavior of systems, very much like biological systems such as ants or bees, where simple local interactions of autonomous members, with simple primitive actions, gives rise to complex and intelligent global behavior.",
                "In this manuscript we will introduce the basic principles behind the idea of Swarm Worms, as well as the basic structure required in order to be considered a <br>swarm worm</br>.",
                "In addition, we will present preliminary results on the propagation speeds of one such <br>swarm worm</br>, called the ZachiK worm.",
                "We will show that ZachiK is capable of propagating at a rate 2 orders of magnitude faster than similar worms without swarm capabilities.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Intrusion Detection; D.4.6 [Security and Protection]: Invasive software General Terms Experimentation, Security 1.",
                "INTRODUCTION AND PREVIOUSWORK In the early morning hours (05:30 GMT) of January 25, 2003 the fastest computer worm in recorded history began spreading throughout the Internet.",
                "Within 10 minutes after the first infected host (patient zero), 90 percent of all vulnerable hosts had been compromised creating significant disruption to the global Internet infrastructure.",
                "Vern Paxson of the International Computer Science Institute and Lawrence Berkeley National Laboratory in its analysis of Slammer commented: The Slammer worm spread so quickly that human response was ineffective, see [4] The interesting part, from our perspective, about the spread of Slammer is that it was a relatively unsophisticated worm with benign behavior, namely self-reproduction.",
                "Since Slammer, researchers have explored the behaviors of fast spreading worms, and have designed countermeasures strategies based primarily on rate detection and limiting algorithms.",
                "For example, Zou, et al., [2], proposed a scheme where a Kalman filter is used to detect the early propagation of a worm.",
                "Other researchers have proposed the use of detectors where rates of Destination Unreachable messages are monitored by firewalls, and a significant increase beyond normal, alerts the organization to the potential presence of a worm.",
                "However, such strategies suffer from the fighting the last War syndrome.",
                "That is, systems are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In the work described here, we put forth the hypothesis that next generation worms will be different, and therefore such techniques may have some significant limitations.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
                "The concept of emergent intelligence was first studied in association with biological systems.",
                "In such studies, early researchers discovered a variety of interesting insect or animal behaviors in the wild.",
                "A flock of birds sweeps across the sky.",
                "A group of ants forages for food.",
                "A school of fish swims, turns, flees together away from a predator, ands so forth.",
                "In general, this kind of aggregate motion has been called swarm behavior.",
                "Biologists, and computer scientists in the field of artificial intelligence have studied such biological swarms, and 323 attempted to create models that explain how the elements of a swarm interact, achieve goals, and evolve.",
                "Moreover, in recent years the study of swarm intelligence has become increasingly important in the fields of robotics, the design of Mobile ad-hoc Networks (MANETS), the design of Intrusion Detection Systems, the study of traffic patterns in transportation systems, in military applications, and other areas, see [3].",
                "The basic concepts that have been developed over the last decade to explain swarms, and swarm behavior include four basic components.",
                "These are: 1.",
                "Simplicity of logic & actions: A swarm is composed of N agents whose intelligence is limited.",
                "Agents in the swarm use simple local rules to govern their actions.",
                "Some models called this primitive actions or behaviors; 2.",
                "Local Communication Mechanisms: Agents interact with other members in the swarm via simple local communication mechanisms.",
                "For example, a bird in a flock senses the position of adjacent bird and applies a simple rule of avoidance and follow. 3.",
                "Distributed control: Autonomous agents interact with their environment, which probably consists of other agents, but act relatively independently from all other agents.",
                "There is no central command or leader, and certainly there is no global plan. 4.",
                "Emergent Intelligence: Aggregate behavior of autonomous agents results in complex intelligent behaviors; including self-organization.",
                "In order to understand fully the behavior of such swarms it is necessary to construct a model that explains the behavior of what we will call generic worms.",
                "This model, which extends the work by Weaver [5] is presented here in section 2.",
                "In addition, we intend to extend said model in such a way that it clearly explains the behaviors of this new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
                "Such Swarm Worms are potentially more harmful than their similar generic counterparts.",
                "Specifically, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
                "ZachiK is a simple password cracking <br>swarm worm</br> that incorporates different learning and information sharing strategies.",
                "Such a <br>swarm worm</br> was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms are capable of compromising hosts at rates up to two orders of magnitude faster than their generic counterpart.",
                "The rest of this manuscript is structure as follows.",
                "In section 2 an abstract model of both generic worms as well as swarm worms is presented.",
                "This model is used in section 2.6 to described the first instance of a <br>swarm worm</br>, ZachiK.",
                "In section 4, preliminary results via both empirical measurements as well as simulation is presented.",
                "Finally, in section 5 our conclusions and insights into future work are presented. 2.",
                "WORM MODELING In order to study the behavior of swarm worms in general, it is necessary to create a model that realistically reflects the structure of worms and it is not necessarily tied to a specific instance.",
                "In this section, we described such a model where a general worm is describe as having four-(4) basic components or subfunctions.",
                "By definition, a worm is a selfcontained, self propagating program.",
                "Thus, in simple terms, it has two main functions: that which propagates and that which does other things.",
                "We propose that there is a third broad functionality of a worm, that of self-preservation.",
                "We also propose that the other functionality of a worm may be more appropriately categorized as Goal-Based Actions (GBA), as whatever functionality included in a worm will naturally be dependent on whatever goals (and subgoals) the author has.",
                "The work presented by Weaver et. al. in [5] provides us with mainly an action and technique based taxonomy of computer worms, which we utilize and further extend here. 2.1 Propagation The propagation function itself may be broken down into three actions: acquire target, send scan, and infect target.",
                "Acquiring the target simply means picking a host to attack next.",
                "Sending a scan involves checking to see if that host is receptive to an infection attempt, since IP-space is sparsely populated.",
                "This may involve a simple ping to check if the host is alive or a full out vulnerability assessment.",
                "Infecting the target is the actual method used to send the worm code to the new host.",
                "In algorithm form: propagate() { host := acquire_target() success := send_scan(host) if( success ) then infect(host) endif } In the case of a simple worm which does not first check to see if the host is available or susceptible (such as Slammer), the scan method is dropped: propagate() { host := acquire_target() infect(host) } Each of these actions may have an associated cost to its inclusion and execution, such as increased worm size and CPU or network load.",
                "Depending on the authors needs or requirements, these become limiting factors in what may be included in the worms actions.",
                "This is discussed further after expanding upon these actions below. 2.2 Target Acquisition: The Target Acquisition phase of our worm algorithm is built directly off of the Target Discovery section in [5].",
                "Weaver et. al. taxonomize this task into 5 separate categories.",
                "Here, we further extend their work through parameterization.",
                "Scanning: Scanning may be considered an equation-based method for choosing a host.",
                "Any type of equation may be used to arrive at an IP address, but there are three main types seen thus far: sequential, random, and local preference.",
                "Sequential scanning is exactly as it sounds: start at an IP address and increment through all the IP space.",
                "This could carry with it the options of which IP to start with (user chosen value, random, or based on IP of infected host) and 324 how many times to increment (continuous, chosen value, or subnet-based).",
                "Random scanning is completely at random (depending on the chosen PRNG method and its seed value).",
                "Local preference scanning is a variance of either Sequential or Random, whereby it has a greater probability of choosing a local IP address over a remote one (for example, the traditional 80/20 split).",
                "Pre-generated Target Lists: Pre-generated Target Lists, or so called hit-lists, could include the options for percentage of total population and percentage wrong, or just number of IPs to include.",
                "Implicit to this type is the fact that the list is divided among a parent and its children, avoiding the problem of every instance hitting the exact same machines.",
                "Externally Generated Target Lists: Externally generated target lists depend on one or more external sources that can be queried for host data.",
                "This will involve either servers that are normally publicly available, such as gaming meta-servers, or ones explicitly setup by the worm or worm author.",
                "The normally available meta-servers could have parameters for rates of change, such as many popping up at night or leaving in the morning.",
                "Each server could also have a maximum queries/second that it would be able to handle.",
                "The worm would also need a way of finding these servers, either hard-coded or through scanning.",
                "Internal Target Lists: Internal Target Lists are highly dependent on the infected host.",
                "This method could parameterize the choice of how much info is on the host, such as all machines in subnet, all windows boxes in subnet, particular servers, number of internal/external, or some combination.",
                "Passive: Passive methods are determined by normal interactions between hosts.",
                "Parameters may include a rate of interaction with particular machines, internal/external rate of interaction, or subnet-based rate of interaction.",
                "Any of these methods may also be combined to produce different types of target acquisition strategies.",
                "For example, the a worm may begin with an initial hit-list of 100 different hosts or subnets.",
                "Once it has exhausted its search using the hit-list, it may then proceed to perform random scanning with a 50% local bias.",
                "It is important to note, however, that the resource consumption of each method is not the same.",
                "Different methods may require the worm to be large, such as the extra bytes required by a hit-list, or to take more processing time, such as by searching the host for addresses of other vulnerable hosts.",
                "Further research and analysis should be performed in this area to determine associated costs for using each method.",
                "The costs could then be used in determining design tradeoffs that worm authors engage at.",
                "For example, hit lists provide a high rate of infection, but at a high cost of worm payload size. 2.2.1 Sending a Scan The send scan function tests to see if the host is available for infection.",
                "This can be as simple as checking if the host is up on the network or as complex as checking if the host is vulnerable to the exploit which will be used.",
                "The sending of a scan before attempted infection can increase the scanning rate if the cost for failing an infection is greater than the cost of failing a scan or sending a scan plus infection; and failures are more frequent than successes.",
                "One important parameter to this would be the choice of transport protocol (TCP/UDP) or just simply the time for one successful scan and time for one failed scan.",
                "Also, whether or not it tests for the host to be up or if it is a full test for the vulnerability (or for multiple vulnerabilities). 2.2.2 Infection Vector (IV) The particular infection vector used to access the remote host is mainly dependent on the particular vulnerability chosen to exploit.",
                "In a non-specific sense, it is dependent on the transport protocol chosen to use and the message size to be sent.",
                "Section 3 of [5] also proposes three particular classes of IV: Self-carried, second channel, and embedded. 2.3 Self Preservation The Self Preservation actions of a worm may take many forms.",
                "In the wild, worms have been observed to disable anti-virus software or prevent sending itself to certain antivirusknown addresses.",
                "They have also been seen to attempt disabling of other worms which may be contending for the same system.",
                "We also believe that a time-based throttled scanning may help the worm to slip under the radar.",
                "We also propose a decoy method, whereby a worm will release a few children that cause a lot of noise so that the parent is not noticed.",
                "It has also been proposed [5] that a worm cause damage to its host if, and only if, it is disturbed in some way.",
                "This module could contain parameters for: probability of success in disabling anti-virus or other software updates, probability of being noticed and thus removed, or hardening of the host against other worms. 2.4 Goal-Based Actions A worms GBA functionality depends on the authors goal list.",
                "The Payloads section of [5] provides some useful suggestions for such a module.",
                "The opening of a back-door can make the host susceptible to more attacks.",
                "This would involve a probability of the back-door being used and any associated traffic utilization.",
                "It could also provide a list of other worms this host is now susceptible to or a list of vulnerabilities this host now has.",
                "Spam relays and HTTP-Proxies of course have an associated bandwidth consumption or traffic pattern.",
                "Internet DoS attacks would have a set time of activation, a target, and a traffic pattern.",
                "Data damage would have an associated probability that the host dies because of the damage.",
                "In Figure 1, this general model of a worm is summarized.",
                "Please note that in this model there is no learning, no, or very little, sharing of information between worm instances, and certainly no coordination of actions.",
                "In the next section we expand the model to include such mechanisms, and hence, arrive at the general model of a <br>swarm worm</br>. 2.5 Swarms - General Model As described in section 1, the basic characteristics that distinguished swarm behavior from simply what appears to be collective coordinated behaviors are four basic attributes.",
                "These are: 1.",
                "Simplicity of logic & actions; 2.",
                "Local Communication Mechanisms; 3.",
                "Distributed control; and 4.",
                "Emergent Intelligence, including self-organization. 325 Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 1: General Worm Model In this work we aggregate all of these attributes under the general title of Learning, Communication, and Distributed Control.",
                "The presence of these attributes distinguishes swarm worms from otherwise regular worms, or other types of malware such as Zombies.",
                "In figure ? ?, the generic model of a worm is expanded to included these set of actions.",
                "Within this context then, a worm like Slammer cannot be categorized as a <br>swarm worm</br> due to the fact that new instances of the worm do not coordinate their actions or share information.",
                "On the other hand, Zombies and many other forms of DDoS, which at first glance may be consider swarm worms are not.",
                "This is simply due to fact that in the case of Zombies, control is not distributed but rather centralized, and no emergent behaviors arise.",
                "The latter, the potential emergence of intelligence or new behaviors is what makes swarm worms so potentially dangerous.",
                "Finally, when one considers the majority of recent disruptions to the Internet Infrastructure, and in light of our description of swarm attacks, then said disruptions can be easily categorized as precursors to truly swarm behavior.",
                "Specifically, â¢ DDOS - Large number of compromised hosts send useless packets requiring processing (Stacheldraht, http : //www.cert.org/ incidentnotes/IN â 99 â 04.html).",
                "DDoS attacks are the early precursors to Swarm Attacks due to the large number of agents involved. â¢ Code Red CrV1, Code Red II, Nimbda - Exhibit early notions of swarm attacks, including a backdoor communication channel. â¢ Staniford & Paxson in How to Own the Internet in Your Spare Time? explore modifications to CrV1, Code Red I, II with a swarm like type of behavior.",
                "For example, they speculate on new worms which employ direct worm-to-worm communication, and employ programmable updates.",
                "For example the Warhol worm, and Permutation-Scanning (self coordinating) worms. 2.6 <br>swarm worm</br>: the details In considering the creation of what we believed to be the first <br>swarm worm</br> in existence, we wanted to adhere as close as possible to the general model presented in section ? ? while at the same time facilitating large scale analysis, both empirical and through simulations, of the behavior of the swarm.",
                "For this reason, we selected as the first instance Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Learning, Communication, Pheromones/Flags (Test and Distributed Control if Worm is already present) Time bombs, Learning Algorithms, IRC channel Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 2: General Model of a <br>swarm worm</br> of the swarm a simple password cracking worm.",
                "The objective of this worm simply is to infect a host by sequentially attempting to login into the host using well known passwords (dictionary attack), passwords that have been discovered previously by any member of the swarm, and random passwords.",
                "Once, a host is infected, the worm will create communication channels with both its known neighbors at that time, as well as with any offsprings that it successfully generates.",
                "In this context a successful generation of an offspring means simply infecting a new host and replicating an exact copy of itself in such a host.",
                "We call this <br>swarm worm</br> the ZachiK worm in honor of one of its creators.",
                "As it can be seen from this description, the ZachiK worm exhibits all of the elements described before.",
                "In the following sections, we described in detail each one of the elements of the ZachiK worm. 2.7 Infection Vector The infection vector used for ZachiK worm is the secure shell protocol SSH.",
                "A modified client which is capable of receiving passwords from the command line was written, and integrated with a script that supplies it with various passwords: known and random.",
                "When a password is found for an appropriate target, the infection process begins.",
                "After the root password of a host is discovered, the worm infects the target host and replicates itself.",
                "The worm creates a new directory in the target host, copies the modified ssh client, the script, the communications servers, and the updated versions of data files (list of known passwords and a list of current neighbors).",
                "It then runs the modified script on the newly infected hosts, which spawns the communications server, notifies the neighbors and starts looking for new targets.",
                "It could be argued, correctly, that the ZachiK worm can be easily defeated by current countermeasure techniques present on most systems today, such as disallowing direct root logins from the network.",
                "Within this context ZachiK can quickly be discarded as very simple and harmless worm that does not require further study.",
                "However, the reader should consider the following: 1.",
                "ZachiK can be easily modified to include a variety of infection vectors.",
                "For example, it could be programmed to guess common user names and their passwords; gain 326 access to a system, then guess the root password or use other well know vulnerabilities to gain root privileges; 2.",
                "ZachiK is a proof of concept worm.",
                "The importance of ZachiK is that it incorporates all of the behaviors of a <br>swarm worm</br> including, but not restricted to, distributed control, communication amongst agents, and learning; 3.",
                "ZachiK is composed of a large collection of agents operating independently which lends itself naturally to parallel algorithms such as a parallel search of the IPV4 address space.",
                "Within this context, SLAMMER, does incorporate a parallel search capability of potentially susceptible addresses.",
                "However, unlike ZachiK, the knowledge discovered by the search is never shared amongst the agents.",
                "For this reasons, and many others, one should not discard the potential of this new class of worms but rather embrace its study. 2.8 Self-Preservation In the case of ZachiK worm, the main self-preservation techniques used are simply keeping the payload small.",
                "In this context, this simply means restricting the number of passwords that an offspring inherits, masquerading worm messages as common http requests, and restricting the number of neighbors to a maximum of five-(5). 2.9 Propagation Choosing the next target(s) in an efficient matter requires thought.",
                "In the past, known and proposed worms, see [5], have applied propagation techniques that varied.",
                "These include: strictly random selection of a potential vulnerable host; target lists of vulnerable hosts; locally biased random selection (select a host target at random from a local subnet); and a combination of some or all of the above.",
                "In our test and simulation environments, we will apply a combination of locally biased and totally random selection of potential vulnerable hosts.",
                "However, due to the fact that the ZachiK worm is a <br>swarm worm</br>, address discovery (that is when non-existent addresses are discovered) information will be shared amongst members of the swarm.",
                "The infection and propagation threads do the following set of activities repeatedly: â¢ Choose an address â¢ Check the validity of the address â¢ Choose a set of passwords â¢ Try infecting the selected host with this set of passwords As described earlier, choosing an address makes use of a combination of random selection, local bias, and target lists.",
                "Specifically, to choose an address, the instance may either: â¢ Generate a new random address â¢ Generate an address on the local network â¢ Pick an address from a handoff list The choice is made randomly among these options, and can be varied to test the dependency of propagation on particular choices.",
                "Password are either chosen from the list of known passwords or newly generated.",
                "When an infection of a valid address fails, it is added to a list of handoffs, which is sent to the neighbors to try to work on. 2.10 Learning, CommunicationandDistributed Control 2.10.1 Communication The concept of a swarm is based on transfer of information amongst neighbors, which relay their new incoming messages to their neighbors, and so on until every worm instance in the swarm is aware of these messages.",
                "There are two classes of messages: data or information messages and commands.",
                "The command messages are meant for an external user (a.k.a., hackers and/or crackers) to control the actions of the instances, and are currently not implemented.",
                "The information messages are currently of three kinds: new member, passwords and exploitable addresses (handoffs).",
                "The new member messages are messages that a new instance sends to the neighbors on its (short) list of initial neighbors.",
                "The neighbors then register these instances in their neighbor list.",
                "These are messages that form the multi-connectivity of the swarm, and without them, the topology will be a treelike structure, where eliminating a single node would cause the instances beneath it to be inaccessible.",
                "The passwords messages inform instances of newly discovered passwords, and by informing all instances, the swarm as whole collects this information, which allows it to infect new instances more effectively.",
                "The handoffs messages inform instances of valid addresses that could not be compromised (fail at breaking the password for the root account).",
                "Since the address space is rather sparse, it takes a relatively long time (i.e. many trials) to discover a valid address.",
                "Therefore, by handing off discovered valid addresses, the swarm is (a) conserving energy by not re-discovering the same addresses (b) attacking more effectively.",
                "In a way, this is a simple instance of coordinated activity of a swarm. 2.10.2 Coordination When a worm instance is born, it relays its existence to all neighbors on its list.",
                "The main thread then spawns a few infection threads, and continues to handle incoming messages (registering neighbors, adding new passwords, receiving addresses and relaying these messages). 2.10.3 Distributed Control Control in the ZachiK worm is distributed in the sense that each instance of the worm performs a set of actions independently of every other instance while at the same time benefiting from the learning achieve by its immediate neighbors. 2.11 Goal Based Actions The first instantiation of the ZachiK worm has two basic goals.",
                "These are: (1) propagate, and (2) discover and share with members of th swarm new root passwords. 3.",
                "EXPERIMENTAL DESIGN In order to verify our hypothesis that Swarm Worms are more capable, and therefore dangerous than other well known 327 worms, a network testbed was created, and a simulator, capable of simulating large scale Internet-like topologies (IPV4 space), was developed.",
                "The network testbed consisted of a local area network of 30 Linux based computers.",
                "The simulator was written in C++ .",
                "The simple <br>swarm worm</br> described in section 2.6 was used to infect patient-zero, and then the <br>swarm worm</br> was allowed to propagate via its own mechanisms of propagation, distributed control, and swarm behaviors.",
                "In the case of a simple local area network of 30 computers, six-(6) different root passwords out of a password space of 4 digits (10000 options) were selected.",
                "At the start of the experiment a single known password is known, that of patient-zero.",
                "All shared passwords are distributed randomly across all nodes.",
                "Similarly, in the case of the simulation, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "For example, in one of our simulation runs, the network topology consisted of 200 subnets each containing 50 hosts.",
                "In such a topology, shared passwords were distributed across subnets where a varying percentage of passwords were shared across subnets.",
                "The percentages of shared passwords used was reflective of early empirical studies, where up to 39.7% of common passwords were found to be shared. 4.",
                "RESULTS In Figure 3, the results comparing Swarm Attack behavior versus that of a typical Malform Worm for a 30 node LAN are presented.",
                "In this set of empirical runs, six-(6) shared passwords were distributed at random across all nodes from a possible of 10,000 unknown passwords.",
                "The data presented reflects the behaviors of a total of three-(3) distinct classes of worm or swarm worms.",
                "The class of worms presented are as follows: â¢ I-NS-NL:= Generic worm, independent (I), no learning/memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ S-L-SP:= <br>swarm worm</br> (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; and â¢ S-L-SP&A:= <br>swarm worm</br> (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 3, the results validate our original hypothesis that swarm worms are significantly more efficient and dangerous than generic worms.",
                "In this set of experiments, the sharing of passwords provides an order of magnitude improvement over a memoryless random worm.",
                "Similarly, a <br>swarm worm</br> that shares passwords and addresses is approximately two orders of magnitude more efficient than its generic counterpart.",
                "In Figure 3, a series of discontinuities can be observed.",
                "These discontinuities are an artifact of the small sample space used for this experiment.",
                "Basically, as soon as a password is broken, all nodes sharing that specific password are infected within a few seconds.",
                "Note that it is trivial for a <br>swarm worm</br> to scan and discovered a small shared password space.",
                "In Figure 4, the simulation results comparing Swarm Attack Behavior versus that of a Generic Malform Worm are presented.",
                "In this set of simulation runs, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "The data presented reflects the behaviors of three-(3) distinct classes of worm or swarm worms and two(2) different target host selection scanning strategies (random scanning and local bias).",
                "The amount of local bias was varied across multiple simulation runs.",
                "The results presented are aggregate behaviors.",
                "In general the following class of Generic Worms and Swarm Worms were simulated.",
                "Address Scanning: â¢ Random:= addresses are selected at random from a subset of the IPV4 space, namely, a 224 address space; and â¢ Local Bias:= addresses are selected at random from either a local subnet (256 addresses) or from a subset of the IPV4 space, namely, a 224 address space.",
                "The percentage of local bias is varied across multiple runs.",
                "Learning, Communication & Distributed Control â¢ I-NL-NS: Generic worm, independent (I), no learning/ memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ I-L-OOS: Generic worm, independent (I), learning/ memoryless (L), and one time sharing of information with offsprings only (OOS); â¢ S-L-SP:= <br>swarm worm</br> (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; â¢ S-L-S&AOP:= <br>swarm worm</br> (S), learning (L), keeps list of learned passwords, and sharing of addresses with neighbors and offsprings, shares passwords one time only (at creation) with offsprings(SA&OP); â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 4, the results are consistent with our set of empirical results.",
                "In addition, the following observations can be made. 1.",
                "Local preference is incredibly effective. 2.",
                "Short address handoffs are more effective than long ones.",
                "We varied the size of the list allowed in the sharing of addresses; the overhead associated with a long address list is detrimental to the performance of the <br>swarm worm</br>, as well as to its stealthiness; 3.",
                "For the local bias case, sharing valid addresses of susceptible host, S-L-S&AOP worm (recall, the S-L-S&AOP swarm shares passwords, one time only, with offsprings 328 at creation time) is more effective than sharing passwords in the case of the S-L-SP swarm.",
                "In this case, we can think of the swarm as launching a distributeddictionary attack: different segments of the swarm use different passwords to try to break into susceptible uninfected host.",
                "In the local bias mode, early in the life of the swarm, address-sharing is more effective than password-sharing, until most subnets are discovered.",
                "Then the targeting of local addresses assists in discovering the susceptible hosts, while the swarm members need to waste time rediscovering passwords; and 4.",
                "Infecting the last 0.5% of nodes takes a very long time in non-local bias mode.",
                "Basically, the shared password list across subnets has been exhausted, and the swarm reverts to simply a random discovery of password algorithm.",
                "Figure 3: Swarm Attack Behavior vs. Malform Worm: Empirical Results, 30node LAN Figure 4: Swarm Attack Behavior vs. Malform Worm: Simulation Results 5.",
                "SUMMARY AND FUTURE WORK In this manuscript, we have presented an abstract model, similar in some aspects to that of Weaver [5], that helps explain the generic nature of worms.",
                "The model presented in section 2 was extended to incorporate a new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
                "Such Swarm Worms are potentially more harmful than their generic counterparts.",
                "In addition, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
                "ZachiK is a simple password cracking <br>swarm worm</br> that incorporates different learning and information sharing strategies.",
                "Such a <br>swarm worm</br> was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms is capable of compromising hosts a rates up to 2 orders of magnitude faster than its generic counterpart while retaining stealth capabilities.",
                "This work opens up a new area of interesting problems.",
                "Some of the most interesting and pressing problems to be consider are as follows: â¢ Is it possible to apply some of learning concepts developed over the last ten years in the areas of swarm intelligence, agent systems, and distributed control to the design of sophisticated swarm worms in such a way that true emergent behavior takes place? â¢ Are the current techniques being developed in the design of Intrusion Detection & CounterMeasure Systems and Survivable systems effective against this new class of worms? ; and â¢ What techniques, if any, can be developed to create defenses against swarm worms? 6.",
                "ACKNOWLEDGMENTS This work was conducted as part of a larger effort in the development of next generation Intrusion Detection & CounterMeasure Systems at WSSRL.",
                "The work is conducted under the auspices of Grant ACG-2004-06 by the Acumen Consulting Group, Inc., Marlboro, Massachusetts. 7.",
                "REFERENCES [1] C.C.",
                "Zou, L. Gao, W. G., and Towsley, D. Monitoring and early warning for internet worms.",
                "In 10th ACM Conference on Computer and Communications Security, Washington, DC (October 2003). [2] Liu, S., and Passino, K. Swarm intelligence: Literature overview.",
                "In Dept. of Electrical Engineering, The Ohio State University, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., and Weaver, N. The spread of the saphire/slammer worm.",
                "Tech. rep., A joint effort of CAIDA, ICSI, Silicon Defense, UC Berkeley EECS and UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S., and Cunningham, R. A taxonomy of computer worms.",
                "In Proceedings of the ACM Workshop on Rapid Malware (WORM) (2003). 329"
            ],
            "original_annotated_samples": [
                "In this manuscript we will introduce the basic principles behind the idea of Swarm Worms, as well as the basic structure required in order to be considered a <br>swarm worm</br>.",
                "In addition, we will present preliminary results on the propagation speeds of one such <br>swarm worm</br>, called the ZachiK worm.",
                "ZachiK is a simple password cracking <br>swarm worm</br> that incorporates different learning and information sharing strategies.",
                "Such a <br>swarm worm</br> was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "This model is used in section 2.6 to described the first instance of a <br>swarm worm</br>, ZachiK."
            ],
            "translated_annotated_samples": [
                "En este manuscrito introduciremos los principios bÃ¡sicos detrÃ¡s de la idea de los Gusanos en Enjambre, asÃ­ como la estructura bÃ¡sica requerida para ser considerado un <br>gusano en enjambre</br>.",
                "AdemÃ¡s, presentaremos resultados preliminares sobre las velocidades de propagaciÃ³n de un <br>gusano de enjambre</br> llamado gusano ZachiK.",
                "ZachiK es un <br>gusano enjambre</br> de descifrado de contraseÃ±as simple que incorpora diferentes estrategias de aprendizaje y comparticiÃ³n de informaciÃ³n.",
                "Un <br>gusano de enjambre</br> similar fue desplegado tanto en una red de Ã¡rea local de treinta (30) hosts, como simulado en una topologÃ­a de 10,000 nodos.",
                "Este modelo se utiliza en la secciÃ³n 2.6 para describir la primera instancia de un <br>gusano enjambre</br>, ZachiK."
            ],
            "translated_text": "Un AnÃ¡lisis Inicial y PresentaciÃ³n de Malware que Exhibe Comportamiento Similar a un Enjambre por Fernando C. ColÃ³n Osorio Laboratorio de InvestigaciÃ³n en Seguridad de Sistemas InalÃ¡mbricos (W.S.S.R.L.) El Slammer, que actualmente es el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada, se observÃ³ infectando el 90 por ciento de todos los hosts vulnerables de Internet en 10 minutos. Aunque la acciÃ³n principal que realiza el gusano Slammer es una replicaciÃ³n relativamente poco sofisticada de sÃ­ mismo, se propaga tan rÃ¡pidamente que la respuesta humana fue ineficaz. La mayorÃ­a de las estrategias de contramedidas propuestas se basan principalmente en la detecciÃ³n de tasas y algoritmos de limitaciÃ³n. Sin embargo, se estÃ¡n diseÃ±ando y desarrollando estrategias para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En nuestro trabajo, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n radicalmente diferentes, y posiblemente dichas tÃ©cnicas resultarÃ¡n ineficaces. EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. La Inteligencia Emergente es el comportamiento de sistemas, muy similar a sistemas biolÃ³gicos como hormigas o abejas, donde las interacciones locales simples de miembros autÃ³nomos, con acciones primitivas simples, dan lugar a un comportamiento global complejo e inteligente. En este manuscrito introduciremos los principios bÃ¡sicos detrÃ¡s de la idea de los Gusanos en Enjambre, asÃ­ como la estructura bÃ¡sica requerida para ser considerado un <br>gusano en enjambre</br>. AdemÃ¡s, presentaremos resultados preliminares sobre las velocidades de propagaciÃ³n de un <br>gusano de enjambre</br> llamado gusano ZachiK. Demostraremos que ZachiK es capaz de propagarse a una velocidad 2 Ã³rdenes de magnitud mÃ¡s rÃ¡pida que gusanos similares sin capacidades de enjambre. CategorÃ­as y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: DetecciÃ³n de Intrusiones; D.4.6 [Seguridad y ProtecciÃ³n]: Software Invasivo TÃ©rminos Generales ExperimentaciÃ³n, Seguridad 1. INTRODUCCIÃN Y TRABAJO PREVIO En las primeras horas de la maÃ±ana (05:30 GMT) del 25 de enero de 2003, el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada comenzÃ³ a propagarse por Internet. Dentro de los 10 minutos posteriores al primer huÃ©sped infectado (paciente cero), el 90 por ciento de todos los huÃ©spedes vulnerables habÃ­an sido comprometidos, creando una interrupciÃ³n significativa en la infraestructura de Internet a nivel global. Vern Paxson del Instituto Internacional de Ciencias de la ComputaciÃ³n y del Laboratorio Nacional Lawrence Berkeley comentÃ³ en su anÃ¡lisis de Slammer: El gusano Slammer se propagÃ³ tan rÃ¡pidamente que la respuesta humana fue ineficaz, ver [4]. La parte interesante, desde nuestro punto de vista, sobre la propagaciÃ³n de Slammer es que era un gusano relativamente poco sofisticado con un comportamiento benigno, es decir, la auto-reproducciÃ³n. Desde Slammer, los investigadores han explorado los comportamientos de los gusanos de propagaciÃ³n rÃ¡pida y han diseÃ±ado estrategias de contramedidas basadas principalmente en la detecciÃ³n de la velocidad y algoritmos de limitaciÃ³n. Por ejemplo, Zou, et al., [2], propusieron un esquema donde se utiliza un filtro de Kalman para detectar la propagaciÃ³n temprana de un gusano. Otros investigadores han propuesto el uso de detectores donde las tasas de mensajes de Destino Inalcanzable son monitoreadas por los firewalls, y un aumento significativo mÃ¡s allÃ¡ de lo normal alerta a la organizaciÃ³n sobre la posible presencia de un gusano. Sin embargo, tales estrategias sufren del sÃ­ndrome de luchar la Ãºltima guerra. Es decir, se estÃ¡n diseÃ±ando y desarrollando sistemas para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En el trabajo descrito aquÃ­, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n diferentes, y por lo tanto, dichas tÃ©cnicas pueden tener algunas limitaciones significativas. EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. El concepto de inteligencia emergente fue estudiado por primera vez en asociaciÃ³n con sistemas biolÃ³gicos. En tales estudios, los primeros investigadores descubrieron una variedad de comportamientos interesantes de insectos o animales en la naturaleza. Una bandada de pÃ¡jaros cruza el cielo. Un grupo de hormigas busca comida. Una escuela de peces nada, gira, huye juntos lejos de un depredador, y asÃ­ sucesivamente. En general, este tipo de movimiento agregado se ha llamado comportamiento de enjambre. Los biÃ³logos y cientÃ­ficos de la computaciÃ³n en el campo de la inteligencia artificial han estudiado tales enjambres biolÃ³gicos y han intentado crear modelos que expliquen cÃ³mo interactÃºan los elementos de un enjambre, logran objetivos y evolucionan. AdemÃ¡s, en los Ãºltimos aÃ±os el estudio de la inteligencia de enjambre ha cobrado cada vez mÃ¡s importancia en los campos de la robÃ³tica, el diseÃ±o de Redes MÃ³viles Ad-hoc (MANETS), el diseÃ±o de Sistemas de DetecciÃ³n de Intrusiones, el estudio de patrones de trÃ¡fico en sistemas de transporte, en aplicaciones militares y otras Ã¡reas, ver [3]. Los conceptos bÃ¡sicos que se han desarrollado en la Ãºltima dÃ©cada para explicar los enjambres y su comportamiento incluyen cuatro componentes bÃ¡sicos. Estos son: 1. Sencillez de la lÃ³gica y acciones: Un enjambre estÃ¡ compuesto por N agentes cuya inteligencia es limitada. Los agentes en el enjambre utilizan reglas locales simples para gobernar sus acciones. Algunos modelos llaman a estas acciones o comportamientos primitivos; 2. Mecanismos de comunicaciÃ³n local: Los agentes interactÃºan con otros miembros en el enjambre a travÃ©s de simples mecanismos de comunicaciÃ³n local. Por ejemplo, un pÃ¡jaro en una bandada percibe la posiciÃ³n del pÃ¡jaro adyacente y aplica una regla simple de evitaciÃ³n y seguimiento. 3. Control distribuido: Los agentes autÃ³nomos interactÃºan con su entorno, que probablemente consiste en otros agentes, pero actÃºan relativamente de forma independiente de todos los demÃ¡s agentes. No hay un mando central o lÃ­der, y ciertamente no hay un plan global. Inteligencia emergente: El comportamiento agregado de agentes autÃ³nomos resulta en comportamientos inteligentes complejos, incluyendo la autoorganizaciÃ³n. Para comprender completamente el comportamiento de tales enjambres, es necesario construir un modelo que explique el comportamiento de lo que llamaremos gusanos genÃ©ricos. Este modelo, que amplÃ­a el trabajo de Weaver [5], se presenta aquÃ­ en la secciÃ³n 2. AdemÃ¡s, tenemos la intenciÃ³n de ampliar dicho modelo de tal manera que explique claramente los comportamientos de esta nueva clase de gusanos potencialmente peligrosos llamados Gusanos en Enjambre. Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biolÃ³gicos y muestran un alto grado de aprendizaje, comunicaciÃ³n e inteligencia distribuida. Tales gusanos en enjambre son potencialmente mÃ¡s daÃ±inos que sus contrapartes genÃ©ricas similares. EspecÃ­ficamente, la primera instancia, segÃºn nuestro conocimiento, de un gusano de aprendizaje de este tipo fue creado, llamado ZachiK. ZachiK es un <br>gusano enjambre</br> de descifrado de contraseÃ±as simple que incorpora diferentes estrategias de aprendizaje y comparticiÃ³n de informaciÃ³n. Un <br>gusano de enjambre</br> similar fue desplegado tanto en una red de Ã¡rea local de treinta (30) hosts, como simulado en una topologÃ­a de 10,000 nodos. Los resultados preliminares mostraron que dichos gusanos son capaces de comprometer a los anfitriones a velocidades hasta dos Ã³rdenes de magnitud mÃ¡s rÃ¡pidas que su contraparte genÃ©rica. El resto de este manuscrito estÃ¡ estructurado de la siguiente manera. En la secciÃ³n 2 se presenta un modelo abstracto tanto de gusanos genÃ©ricos como de gusanos en enjambre. Este modelo se utiliza en la secciÃ³n 2.6 para describir la primera instancia de un <br>gusano enjambre</br>, ZachiK. ",
            "candidates": [],
            "error": [
                [
                    "gusano en enjambre",
                    "gusano de enjambre",
                    "gusano enjambre",
                    "gusano de enjambre",
                    "gusano enjambre"
                ]
            ]
        },
        "emergent intelligence": {
            "translated_key": "inteligencia emergente",
            "is_in_text": true,
            "original_annotated_sentences": [
                "An Initial Analysis and Presentation of Malware Exhibiting Swarm-Like Behavior Fernando C.ColÂ´on Osorio Wireless System Security Research Laboratory (W.S.S.R.L.)",
                "420 Lakeside Avneue Marlboro, Massachusetts 01752 fcco@cs.wpi.edu Zachi Klopman Wireless System Security Research Laboratory (W.S.S.R.L.) 420 Lakeside Avneue Marlboro, Massachusetts 01752 zachi@cs.wpi.edu ABSTRACT The Slammer, which is currently the fastest computer worm in recorded history, was observed to infect 90 percent of all vulnerable Internets hosts within 10 minutes.",
                "Although the main action that the Slammer worm takes is a relatively unsophisticated replication of itself, it still spreads so quickly that human response was ineffective.",
                "Most proposed countermeasures strategies are based primarily on rate detection and limiting algorithms.",
                "However, such strategies are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In our work, we put forth the hypothesis that next generation worms will be radically different, and potentially such techniques will prove ineffective.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of <br>emergent intelligence</br>.",
                "<br>emergent intelligence</br> is the behavior of systems, very much like biological systems such as ants or bees, where simple local interactions of autonomous members, with simple primitive actions, gives rise to complex and intelligent global behavior.",
                "In this manuscript we will introduce the basic principles behind the idea of Swarm Worms, as well as the basic structure required in order to be considered a swarm worm.",
                "In addition, we will present preliminary results on the propagation speeds of one such swarm worm, called the ZachiK worm.",
                "We will show that ZachiK is capable of propagating at a rate 2 orders of magnitude faster than similar worms without swarm capabilities.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Intrusion Detection; D.4.6 [Security and Protection]: Invasive software General Terms Experimentation, Security 1.",
                "INTRODUCTION AND PREVIOUSWORK In the early morning hours (05:30 GMT) of January 25, 2003 the fastest computer worm in recorded history began spreading throughout the Internet.",
                "Within 10 minutes after the first infected host (patient zero), 90 percent of all vulnerable hosts had been compromised creating significant disruption to the global Internet infrastructure.",
                "Vern Paxson of the International Computer Science Institute and Lawrence Berkeley National Laboratory in its analysis of Slammer commented: The Slammer worm spread so quickly that human response was ineffective, see [4] The interesting part, from our perspective, about the spread of Slammer is that it was a relatively unsophisticated worm with benign behavior, namely self-reproduction.",
                "Since Slammer, researchers have explored the behaviors of fast spreading worms, and have designed countermeasures strategies based primarily on rate detection and limiting algorithms.",
                "For example, Zou, et al., [2], proposed a scheme where a Kalman filter is used to detect the early propagation of a worm.",
                "Other researchers have proposed the use of detectors where rates of Destination Unreachable messages are monitored by firewalls, and a significant increase beyond normal, alerts the organization to the potential presence of a worm.",
                "However, such strategies suffer from the fighting the last War syndrome.",
                "That is, systems are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In the work described here, we put forth the hypothesis that next generation worms will be different, and therefore such techniques may have some significant limitations.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of <br>emergent intelligence</br>.",
                "The concept of <br>emergent intelligence</br> was first studied in association with biological systems.",
                "In such studies, early researchers discovered a variety of interesting insect or animal behaviors in the wild.",
                "A flock of birds sweeps across the sky.",
                "A group of ants forages for food.",
                "A school of fish swims, turns, flees together away from a predator, ands so forth.",
                "In general, this kind of aggregate motion has been called swarm behavior.",
                "Biologists, and computer scientists in the field of artificial intelligence have studied such biological swarms, and 323 attempted to create models that explain how the elements of a swarm interact, achieve goals, and evolve.",
                "Moreover, in recent years the study of swarm intelligence has become increasingly important in the fields of robotics, the design of Mobile ad-hoc Networks (MANETS), the design of Intrusion Detection Systems, the study of traffic patterns in transportation systems, in military applications, and other areas, see [3].",
                "The basic concepts that have been developed over the last decade to explain swarms, and swarm behavior include four basic components.",
                "These are: 1.",
                "Simplicity of logic & actions: A swarm is composed of N agents whose intelligence is limited.",
                "Agents in the swarm use simple local rules to govern their actions.",
                "Some models called this primitive actions or behaviors; 2.",
                "Local Communication Mechanisms: Agents interact with other members in the swarm via simple local communication mechanisms.",
                "For example, a bird in a flock senses the position of adjacent bird and applies a simple rule of avoidance and follow. 3.",
                "Distributed control: Autonomous agents interact with their environment, which probably consists of other agents, but act relatively independently from all other agents.",
                "There is no central command or leader, and certainly there is no global plan. 4.",
                "<br>emergent intelligence</br>: Aggregate behavior of autonomous agents results in complex intelligent behaviors; including self-organization.",
                "In order to understand fully the behavior of such swarms it is necessary to construct a model that explains the behavior of what we will call generic worms.",
                "This model, which extends the work by Weaver [5] is presented here in section 2.",
                "In addition, we intend to extend said model in such a way that it clearly explains the behaviors of this new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
                "Such Swarm Worms are potentially more harmful than their similar generic counterparts.",
                "Specifically, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
                "ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
                "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms are capable of compromising hosts at rates up to two orders of magnitude faster than their generic counterpart.",
                "The rest of this manuscript is structure as follows.",
                "In section 2 an abstract model of both generic worms as well as swarm worms is presented.",
                "This model is used in section 2.6 to described the first instance of a swarm worm, ZachiK.",
                "In section 4, preliminary results via both empirical measurements as well as simulation is presented.",
                "Finally, in section 5 our conclusions and insights into future work are presented. 2.",
                "WORM MODELING In order to study the behavior of swarm worms in general, it is necessary to create a model that realistically reflects the structure of worms and it is not necessarily tied to a specific instance.",
                "In this section, we described such a model where a general worm is describe as having four-(4) basic components or subfunctions.",
                "By definition, a worm is a selfcontained, self propagating program.",
                "Thus, in simple terms, it has two main functions: that which propagates and that which does other things.",
                "We propose that there is a third broad functionality of a worm, that of self-preservation.",
                "We also propose that the other functionality of a worm may be more appropriately categorized as Goal-Based Actions (GBA), as whatever functionality included in a worm will naturally be dependent on whatever goals (and subgoals) the author has.",
                "The work presented by Weaver et. al. in [5] provides us with mainly an action and technique based taxonomy of computer worms, which we utilize and further extend here. 2.1 Propagation The propagation function itself may be broken down into three actions: acquire target, send scan, and infect target.",
                "Acquiring the target simply means picking a host to attack next.",
                "Sending a scan involves checking to see if that host is receptive to an infection attempt, since IP-space is sparsely populated.",
                "This may involve a simple ping to check if the host is alive or a full out vulnerability assessment.",
                "Infecting the target is the actual method used to send the worm code to the new host.",
                "In algorithm form: propagate() { host := acquire_target() success := send_scan(host) if( success ) then infect(host) endif } In the case of a simple worm which does not first check to see if the host is available or susceptible (such as Slammer), the scan method is dropped: propagate() { host := acquire_target() infect(host) } Each of these actions may have an associated cost to its inclusion and execution, such as increased worm size and CPU or network load.",
                "Depending on the authors needs or requirements, these become limiting factors in what may be included in the worms actions.",
                "This is discussed further after expanding upon these actions below. 2.2 Target Acquisition: The Target Acquisition phase of our worm algorithm is built directly off of the Target Discovery section in [5].",
                "Weaver et. al. taxonomize this task into 5 separate categories.",
                "Here, we further extend their work through parameterization.",
                "Scanning: Scanning may be considered an equation-based method for choosing a host.",
                "Any type of equation may be used to arrive at an IP address, but there are three main types seen thus far: sequential, random, and local preference.",
                "Sequential scanning is exactly as it sounds: start at an IP address and increment through all the IP space.",
                "This could carry with it the options of which IP to start with (user chosen value, random, or based on IP of infected host) and 324 how many times to increment (continuous, chosen value, or subnet-based).",
                "Random scanning is completely at random (depending on the chosen PRNG method and its seed value).",
                "Local preference scanning is a variance of either Sequential or Random, whereby it has a greater probability of choosing a local IP address over a remote one (for example, the traditional 80/20 split).",
                "Pre-generated Target Lists: Pre-generated Target Lists, or so called hit-lists, could include the options for percentage of total population and percentage wrong, or just number of IPs to include.",
                "Implicit to this type is the fact that the list is divided among a parent and its children, avoiding the problem of every instance hitting the exact same machines.",
                "Externally Generated Target Lists: Externally generated target lists depend on one or more external sources that can be queried for host data.",
                "This will involve either servers that are normally publicly available, such as gaming meta-servers, or ones explicitly setup by the worm or worm author.",
                "The normally available meta-servers could have parameters for rates of change, such as many popping up at night or leaving in the morning.",
                "Each server could also have a maximum queries/second that it would be able to handle.",
                "The worm would also need a way of finding these servers, either hard-coded or through scanning.",
                "Internal Target Lists: Internal Target Lists are highly dependent on the infected host.",
                "This method could parameterize the choice of how much info is on the host, such as all machines in subnet, all windows boxes in subnet, particular servers, number of internal/external, or some combination.",
                "Passive: Passive methods are determined by normal interactions between hosts.",
                "Parameters may include a rate of interaction with particular machines, internal/external rate of interaction, or subnet-based rate of interaction.",
                "Any of these methods may also be combined to produce different types of target acquisition strategies.",
                "For example, the a worm may begin with an initial hit-list of 100 different hosts or subnets.",
                "Once it has exhausted its search using the hit-list, it may then proceed to perform random scanning with a 50% local bias.",
                "It is important to note, however, that the resource consumption of each method is not the same.",
                "Different methods may require the worm to be large, such as the extra bytes required by a hit-list, or to take more processing time, such as by searching the host for addresses of other vulnerable hosts.",
                "Further research and analysis should be performed in this area to determine associated costs for using each method.",
                "The costs could then be used in determining design tradeoffs that worm authors engage at.",
                "For example, hit lists provide a high rate of infection, but at a high cost of worm payload size. 2.2.1 Sending a Scan The send scan function tests to see if the host is available for infection.",
                "This can be as simple as checking if the host is up on the network or as complex as checking if the host is vulnerable to the exploit which will be used.",
                "The sending of a scan before attempted infection can increase the scanning rate if the cost for failing an infection is greater than the cost of failing a scan or sending a scan plus infection; and failures are more frequent than successes.",
                "One important parameter to this would be the choice of transport protocol (TCP/UDP) or just simply the time for one successful scan and time for one failed scan.",
                "Also, whether or not it tests for the host to be up or if it is a full test for the vulnerability (or for multiple vulnerabilities). 2.2.2 Infection Vector (IV) The particular infection vector used to access the remote host is mainly dependent on the particular vulnerability chosen to exploit.",
                "In a non-specific sense, it is dependent on the transport protocol chosen to use and the message size to be sent.",
                "Section 3 of [5] also proposes three particular classes of IV: Self-carried, second channel, and embedded. 2.3 Self Preservation The Self Preservation actions of a worm may take many forms.",
                "In the wild, worms have been observed to disable anti-virus software or prevent sending itself to certain antivirusknown addresses.",
                "They have also been seen to attempt disabling of other worms which may be contending for the same system.",
                "We also believe that a time-based throttled scanning may help the worm to slip under the radar.",
                "We also propose a decoy method, whereby a worm will release a few children that cause a lot of noise so that the parent is not noticed.",
                "It has also been proposed [5] that a worm cause damage to its host if, and only if, it is disturbed in some way.",
                "This module could contain parameters for: probability of success in disabling anti-virus or other software updates, probability of being noticed and thus removed, or hardening of the host against other worms. 2.4 Goal-Based Actions A worms GBA functionality depends on the authors goal list.",
                "The Payloads section of [5] provides some useful suggestions for such a module.",
                "The opening of a back-door can make the host susceptible to more attacks.",
                "This would involve a probability of the back-door being used and any associated traffic utilization.",
                "It could also provide a list of other worms this host is now susceptible to or a list of vulnerabilities this host now has.",
                "Spam relays and HTTP-Proxies of course have an associated bandwidth consumption or traffic pattern.",
                "Internet DoS attacks would have a set time of activation, a target, and a traffic pattern.",
                "Data damage would have an associated probability that the host dies because of the damage.",
                "In Figure 1, this general model of a worm is summarized.",
                "Please note that in this model there is no learning, no, or very little, sharing of information between worm instances, and certainly no coordination of actions.",
                "In the next section we expand the model to include such mechanisms, and hence, arrive at the general model of a swarm worm. 2.5 Swarms - General Model As described in section 1, the basic characteristics that distinguished swarm behavior from simply what appears to be collective coordinated behaviors are four basic attributes.",
                "These are: 1.",
                "Simplicity of logic & actions; 2.",
                "Local Communication Mechanisms; 3.",
                "Distributed control; and 4.",
                "<br>emergent intelligence</br>, including self-organization. 325 Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 1: General Worm Model In this work we aggregate all of these attributes under the general title of Learning, Communication, and Distributed Control.",
                "The presence of these attributes distinguishes swarm worms from otherwise regular worms, or other types of malware such as Zombies.",
                "In figure ? ?, the generic model of a worm is expanded to included these set of actions.",
                "Within this context then, a worm like Slammer cannot be categorized as a swarm worm due to the fact that new instances of the worm do not coordinate their actions or share information.",
                "On the other hand, Zombies and many other forms of DDoS, which at first glance may be consider swarm worms are not.",
                "This is simply due to fact that in the case of Zombies, control is not distributed but rather centralized, and no emergent behaviors arise.",
                "The latter, the potential emergence of intelligence or new behaviors is what makes swarm worms so potentially dangerous.",
                "Finally, when one considers the majority of recent disruptions to the Internet Infrastructure, and in light of our description of swarm attacks, then said disruptions can be easily categorized as precursors to truly swarm behavior.",
                "Specifically, â¢ DDOS - Large number of compromised hosts send useless packets requiring processing (Stacheldraht, http : //www.cert.org/ incidentnotes/IN â 99 â 04.html).",
                "DDoS attacks are the early precursors to Swarm Attacks due to the large number of agents involved. â¢ Code Red CrV1, Code Red II, Nimbda - Exhibit early notions of swarm attacks, including a backdoor communication channel. â¢ Staniford & Paxson in How to Own the Internet in Your Spare Time? explore modifications to CrV1, Code Red I, II with a swarm like type of behavior.",
                "For example, they speculate on new worms which employ direct worm-to-worm communication, and employ programmable updates.",
                "For example the Warhol worm, and Permutation-Scanning (self coordinating) worms. 2.6 Swarm Worm: the details In considering the creation of what we believed to be the first Swarm Worm in existence, we wanted to adhere as close as possible to the general model presented in section ? ? while at the same time facilitating large scale analysis, both empirical and through simulations, of the behavior of the swarm.",
                "For this reason, we selected as the first instance Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Learning, Communication, Pheromones/Flags (Test and Distributed Control if Worm is already present) Time bombs, Learning Algorithms, IRC channel Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 2: General Model of a Swarm Worm of the swarm a simple password cracking worm.",
                "The objective of this worm simply is to infect a host by sequentially attempting to login into the host using well known passwords (dictionary attack), passwords that have been discovered previously by any member of the swarm, and random passwords.",
                "Once, a host is infected, the worm will create communication channels with both its known neighbors at that time, as well as with any offsprings that it successfully generates.",
                "In this context a successful generation of an offspring means simply infecting a new host and replicating an exact copy of itself in such a host.",
                "We call this swarm worm the ZachiK worm in honor of one of its creators.",
                "As it can be seen from this description, the ZachiK worm exhibits all of the elements described before.",
                "In the following sections, we described in detail each one of the elements of the ZachiK worm. 2.7 Infection Vector The infection vector used for ZachiK worm is the secure shell protocol SSH.",
                "A modified client which is capable of receiving passwords from the command line was written, and integrated with a script that supplies it with various passwords: known and random.",
                "When a password is found for an appropriate target, the infection process begins.",
                "After the root password of a host is discovered, the worm infects the target host and replicates itself.",
                "The worm creates a new directory in the target host, copies the modified ssh client, the script, the communications servers, and the updated versions of data files (list of known passwords and a list of current neighbors).",
                "It then runs the modified script on the newly infected hosts, which spawns the communications server, notifies the neighbors and starts looking for new targets.",
                "It could be argued, correctly, that the ZachiK worm can be easily defeated by current countermeasure techniques present on most systems today, such as disallowing direct root logins from the network.",
                "Within this context ZachiK can quickly be discarded as very simple and harmless worm that does not require further study.",
                "However, the reader should consider the following: 1.",
                "ZachiK can be easily modified to include a variety of infection vectors.",
                "For example, it could be programmed to guess common user names and their passwords; gain 326 access to a system, then guess the root password or use other well know vulnerabilities to gain root privileges; 2.",
                "ZachiK is a proof of concept worm.",
                "The importance of ZachiK is that it incorporates all of the behaviors of a swarm worm including, but not restricted to, distributed control, communication amongst agents, and learning; 3.",
                "ZachiK is composed of a large collection of agents operating independently which lends itself naturally to parallel algorithms such as a parallel search of the IPV4 address space.",
                "Within this context, SLAMMER, does incorporate a parallel search capability of potentially susceptible addresses.",
                "However, unlike ZachiK, the knowledge discovered by the search is never shared amongst the agents.",
                "For this reasons, and many others, one should not discard the potential of this new class of worms but rather embrace its study. 2.8 Self-Preservation In the case of ZachiK worm, the main self-preservation techniques used are simply keeping the payload small.",
                "In this context, this simply means restricting the number of passwords that an offspring inherits, masquerading worm messages as common http requests, and restricting the number of neighbors to a maximum of five-(5). 2.9 Propagation Choosing the next target(s) in an efficient matter requires thought.",
                "In the past, known and proposed worms, see [5], have applied propagation techniques that varied.",
                "These include: strictly random selection of a potential vulnerable host; target lists of vulnerable hosts; locally biased random selection (select a host target at random from a local subnet); and a combination of some or all of the above.",
                "In our test and simulation environments, we will apply a combination of locally biased and totally random selection of potential vulnerable hosts.",
                "However, due to the fact that the ZachiK worm is a swarm worm, address discovery (that is when non-existent addresses are discovered) information will be shared amongst members of the swarm.",
                "The infection and propagation threads do the following set of activities repeatedly: â¢ Choose an address â¢ Check the validity of the address â¢ Choose a set of passwords â¢ Try infecting the selected host with this set of passwords As described earlier, choosing an address makes use of a combination of random selection, local bias, and target lists.",
                "Specifically, to choose an address, the instance may either: â¢ Generate a new random address â¢ Generate an address on the local network â¢ Pick an address from a handoff list The choice is made randomly among these options, and can be varied to test the dependency of propagation on particular choices.",
                "Password are either chosen from the list of known passwords or newly generated.",
                "When an infection of a valid address fails, it is added to a list of handoffs, which is sent to the neighbors to try to work on. 2.10 Learning, CommunicationandDistributed Control 2.10.1 Communication The concept of a swarm is based on transfer of information amongst neighbors, which relay their new incoming messages to their neighbors, and so on until every worm instance in the swarm is aware of these messages.",
                "There are two classes of messages: data or information messages and commands.",
                "The command messages are meant for an external user (a.k.a., hackers and/or crackers) to control the actions of the instances, and are currently not implemented.",
                "The information messages are currently of three kinds: new member, passwords and exploitable addresses (handoffs).",
                "The new member messages are messages that a new instance sends to the neighbors on its (short) list of initial neighbors.",
                "The neighbors then register these instances in their neighbor list.",
                "These are messages that form the multi-connectivity of the swarm, and without them, the topology will be a treelike structure, where eliminating a single node would cause the instances beneath it to be inaccessible.",
                "The passwords messages inform instances of newly discovered passwords, and by informing all instances, the swarm as whole collects this information, which allows it to infect new instances more effectively.",
                "The handoffs messages inform instances of valid addresses that could not be compromised (fail at breaking the password for the root account).",
                "Since the address space is rather sparse, it takes a relatively long time (i.e. many trials) to discover a valid address.",
                "Therefore, by handing off discovered valid addresses, the swarm is (a) conserving energy by not re-discovering the same addresses (b) attacking more effectively.",
                "In a way, this is a simple instance of coordinated activity of a swarm. 2.10.2 Coordination When a worm instance is born, it relays its existence to all neighbors on its list.",
                "The main thread then spawns a few infection threads, and continues to handle incoming messages (registering neighbors, adding new passwords, receiving addresses and relaying these messages). 2.10.3 Distributed Control Control in the ZachiK worm is distributed in the sense that each instance of the worm performs a set of actions independently of every other instance while at the same time benefiting from the learning achieve by its immediate neighbors. 2.11 Goal Based Actions The first instantiation of the ZachiK worm has two basic goals.",
                "These are: (1) propagate, and (2) discover and share with members of th swarm new root passwords. 3.",
                "EXPERIMENTAL DESIGN In order to verify our hypothesis that Swarm Worms are more capable, and therefore dangerous than other well known 327 worms, a network testbed was created, and a simulator, capable of simulating large scale Internet-like topologies (IPV4 space), was developed.",
                "The network testbed consisted of a local area network of 30 Linux based computers.",
                "The simulator was written in C++ .",
                "The simple swarm worm described in section 2.6 was used to infect patient-zero, and then the swarm worm was allowed to propagate via its own mechanisms of propagation, distributed control, and swarm behaviors.",
                "In the case of a simple local area network of 30 computers, six-(6) different root passwords out of a password space of 4 digits (10000 options) were selected.",
                "At the start of the experiment a single known password is known, that of patient-zero.",
                "All shared passwords are distributed randomly across all nodes.",
                "Similarly, in the case of the simulation, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "For example, in one of our simulation runs, the network topology consisted of 200 subnets each containing 50 hosts.",
                "In such a topology, shared passwords were distributed across subnets where a varying percentage of passwords were shared across subnets.",
                "The percentages of shared passwords used was reflective of early empirical studies, where up to 39.7% of common passwords were found to be shared. 4.",
                "RESULTS In Figure 3, the results comparing Swarm Attack behavior versus that of a typical Malform Worm for a 30 node LAN are presented.",
                "In this set of empirical runs, six-(6) shared passwords were distributed at random across all nodes from a possible of 10,000 unknown passwords.",
                "The data presented reflects the behaviors of a total of three-(3) distinct classes of worm or swarm worms.",
                "The class of worms presented are as follows: â¢ I-NS-NL:= Generic worm, independent (I), no learning/memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; and â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 3, the results validate our original hypothesis that swarm worms are significantly more efficient and dangerous than generic worms.",
                "In this set of experiments, the sharing of passwords provides an order of magnitude improvement over a memoryless random worm.",
                "Similarly, a swarm worm that shares passwords and addresses is approximately two orders of magnitude more efficient than its generic counterpart.",
                "In Figure 3, a series of discontinuities can be observed.",
                "These discontinuities are an artifact of the small sample space used for this experiment.",
                "Basically, as soon as a password is broken, all nodes sharing that specific password are infected within a few seconds.",
                "Note that it is trivial for a swarm worm to scan and discovered a small shared password space.",
                "In Figure 4, the simulation results comparing Swarm Attack Behavior versus that of a Generic Malform Worm are presented.",
                "In this set of simulation runs, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "The data presented reflects the behaviors of three-(3) distinct classes of worm or swarm worms and two(2) different target host selection scanning strategies (random scanning and local bias).",
                "The amount of local bias was varied across multiple simulation runs.",
                "The results presented are aggregate behaviors.",
                "In general the following class of Generic Worms and Swarm Worms were simulated.",
                "Address Scanning: â¢ Random:= addresses are selected at random from a subset of the IPV4 space, namely, a 224 address space; and â¢ Local Bias:= addresses are selected at random from either a local subnet (256 addresses) or from a subset of the IPV4 space, namely, a 224 address space.",
                "The percentage of local bias is varied across multiple runs.",
                "Learning, Communication & Distributed Control â¢ I-NL-NS: Generic worm, independent (I), no learning/ memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ I-L-OOS: Generic worm, independent (I), learning/ memoryless (L), and one time sharing of information with offsprings only (OOS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; â¢ S-L-S&AOP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of addresses with neighbors and offsprings, shares passwords one time only (at creation) with offsprings(SA&OP); â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 4, the results are consistent with our set of empirical results.",
                "In addition, the following observations can be made. 1.",
                "Local preference is incredibly effective. 2.",
                "Short address handoffs are more effective than long ones.",
                "We varied the size of the list allowed in the sharing of addresses; the overhead associated with a long address list is detrimental to the performance of the swarm worm, as well as to its stealthiness; 3.",
                "For the local bias case, sharing valid addresses of susceptible host, S-L-S&AOP worm (recall, the S-L-S&AOP swarm shares passwords, one time only, with offsprings 328 at creation time) is more effective than sharing passwords in the case of the S-L-SP swarm.",
                "In this case, we can think of the swarm as launching a distributeddictionary attack: different segments of the swarm use different passwords to try to break into susceptible uninfected host.",
                "In the local bias mode, early in the life of the swarm, address-sharing is more effective than password-sharing, until most subnets are discovered.",
                "Then the targeting of local addresses assists in discovering the susceptible hosts, while the swarm members need to waste time rediscovering passwords; and 4.",
                "Infecting the last 0.5% of nodes takes a very long time in non-local bias mode.",
                "Basically, the shared password list across subnets has been exhausted, and the swarm reverts to simply a random discovery of password algorithm.",
                "Figure 3: Swarm Attack Behavior vs. Malform Worm: Empirical Results, 30node LAN Figure 4: Swarm Attack Behavior vs. Malform Worm: Simulation Results 5.",
                "SUMMARY AND FUTURE WORK In this manuscript, we have presented an abstract model, similar in some aspects to that of Weaver [5], that helps explain the generic nature of worms.",
                "The model presented in section 2 was extended to incorporate a new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
                "Such Swarm Worms are potentially more harmful than their generic counterparts.",
                "In addition, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
                "ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
                "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms is capable of compromising hosts a rates up to 2 orders of magnitude faster than its generic counterpart while retaining stealth capabilities.",
                "This work opens up a new area of interesting problems.",
                "Some of the most interesting and pressing problems to be consider are as follows: â¢ Is it possible to apply some of learning concepts developed over the last ten years in the areas of swarm intelligence, agent systems, and distributed control to the design of sophisticated swarm worms in such a way that true emergent behavior takes place? â¢ Are the current techniques being developed in the design of Intrusion Detection & CounterMeasure Systems and Survivable systems effective against this new class of worms? ; and â¢ What techniques, if any, can be developed to create defenses against swarm worms? 6.",
                "ACKNOWLEDGMENTS This work was conducted as part of a larger effort in the development of next generation Intrusion Detection & CounterMeasure Systems at WSSRL.",
                "The work is conducted under the auspices of Grant ACG-2004-06 by the Acumen Consulting Group, Inc., Marlboro, Massachusetts. 7.",
                "REFERENCES [1] C.C.",
                "Zou, L. Gao, W. G., and Towsley, D. Monitoring and early warning for internet worms.",
                "In 10th ACM Conference on Computer and Communications Security, Washington, DC (October 2003). [2] Liu, S., and Passino, K. Swarm intelligence: Literature overview.",
                "In Dept. of Electrical Engineering, The Ohio State University, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., and Weaver, N. The spread of the saphire/slammer worm.",
                "Tech. rep., A joint effort of CAIDA, ICSI, Silicon Defense, UC Berkeley EECS and UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S., and Cunningham, R. A taxonomy of computer worms.",
                "In Proceedings of the ACM Workshop on Rapid Malware (WORM) (2003). 329"
            ],
            "original_annotated_samples": [
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of <br>emergent intelligence</br>.",
                "<br>emergent intelligence</br> is the behavior of systems, very much like biological systems such as ants or bees, where simple local interactions of autonomous members, with simple primitive actions, gives rise to complex and intelligent global behavior.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of <br>emergent intelligence</br>.",
                "The concept of <br>emergent intelligence</br> was first studied in association with biological systems.",
                "<br>emergent intelligence</br>: Aggregate behavior of autonomous agents results in complex intelligent behaviors; including self-organization."
            ],
            "translated_annotated_samples": [
                "EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de <br>inteligencia emergente</br>.",
                "La <br>Inteligencia Emergente</br> es el comportamiento de sistemas, muy similar a sistemas biolÃ³gicos como hormigas o abejas, donde las interacciones locales simples de miembros autÃ³nomos, con acciones primitivas simples, dan lugar a un comportamiento global complejo e inteligente.",
                "EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de <br>inteligencia emergente</br>.",
                "El concepto de <br>inteligencia emergente</br> fue estudiado por primera vez en asociaciÃ³n con sistemas biolÃ³gicos.",
                "Inteligencia emergente: El comportamiento agregado de agentes autÃ³nomos resulta en comportamientos inteligentes complejos, incluyendo la autoorganizaciÃ³n."
            ],
            "translated_text": "Un AnÃ¡lisis Inicial y PresentaciÃ³n de Malware que Exhibe Comportamiento Similar a un Enjambre por Fernando C. ColÃ³n Osorio Laboratorio de InvestigaciÃ³n en Seguridad de Sistemas InalÃ¡mbricos (W.S.S.R.L.) El Slammer, que actualmente es el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada, se observÃ³ infectando el 90 por ciento de todos los hosts vulnerables de Internet en 10 minutos. Aunque la acciÃ³n principal que realiza el gusano Slammer es una replicaciÃ³n relativamente poco sofisticada de sÃ­ mismo, se propaga tan rÃ¡pidamente que la respuesta humana fue ineficaz. La mayorÃ­a de las estrategias de contramedidas propuestas se basan principalmente en la detecciÃ³n de tasas y algoritmos de limitaciÃ³n. Sin embargo, se estÃ¡n diseÃ±ando y desarrollando estrategias para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En nuestro trabajo, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n radicalmente diferentes, y posiblemente dichas tÃ©cnicas resultarÃ¡n ineficaces. EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de <br>inteligencia emergente</br>. La <br>Inteligencia Emergente</br> es el comportamiento de sistemas, muy similar a sistemas biolÃ³gicos como hormigas o abejas, donde las interacciones locales simples de miembros autÃ³nomos, con acciones primitivas simples, dan lugar a un comportamiento global complejo e inteligente. En este manuscrito introduciremos los principios bÃ¡sicos detrÃ¡s de la idea de los Gusanos en Enjambre, asÃ­ como la estructura bÃ¡sica requerida para ser considerado un gusano en enjambre. AdemÃ¡s, presentaremos resultados preliminares sobre las velocidades de propagaciÃ³n de un gusano de enjambre llamado gusano ZachiK. Demostraremos que ZachiK es capaz de propagarse a una velocidad 2 Ã³rdenes de magnitud mÃ¡s rÃ¡pida que gusanos similares sin capacidades de enjambre. CategorÃ­as y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: DetecciÃ³n de Intrusiones; D.4.6 [Seguridad y ProtecciÃ³n]: Software Invasivo TÃ©rminos Generales ExperimentaciÃ³n, Seguridad 1. INTRODUCCIÃN Y TRABAJO PREVIO En las primeras horas de la maÃ±ana (05:30 GMT) del 25 de enero de 2003, el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada comenzÃ³ a propagarse por Internet. Dentro de los 10 minutos posteriores al primer huÃ©sped infectado (paciente cero), el 90 por ciento de todos los huÃ©spedes vulnerables habÃ­an sido comprometidos, creando una interrupciÃ³n significativa en la infraestructura de Internet a nivel global. Vern Paxson del Instituto Internacional de Ciencias de la ComputaciÃ³n y del Laboratorio Nacional Lawrence Berkeley comentÃ³ en su anÃ¡lisis de Slammer: El gusano Slammer se propagÃ³ tan rÃ¡pidamente que la respuesta humana fue ineficaz, ver [4]. La parte interesante, desde nuestro punto de vista, sobre la propagaciÃ³n de Slammer es que era un gusano relativamente poco sofisticado con un comportamiento benigno, es decir, la auto-reproducciÃ³n. Desde Slammer, los investigadores han explorado los comportamientos de los gusanos de propagaciÃ³n rÃ¡pida y han diseÃ±ado estrategias de contramedidas basadas principalmente en la detecciÃ³n de la velocidad y algoritmos de limitaciÃ³n. Por ejemplo, Zou, et al., [2], propusieron un esquema donde se utiliza un filtro de Kalman para detectar la propagaciÃ³n temprana de un gusano. Otros investigadores han propuesto el uso de detectores donde las tasas de mensajes de Destino Inalcanzable son monitoreadas por los firewalls, y un aumento significativo mÃ¡s allÃ¡ de lo normal alerta a la organizaciÃ³n sobre la posible presencia de un gusano. Sin embargo, tales estrategias sufren del sÃ­ndrome de luchar la Ãºltima guerra. Es decir, se estÃ¡n diseÃ±ando y desarrollando sistemas para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En el trabajo descrito aquÃ­, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n diferentes, y por lo tanto, dichas tÃ©cnicas pueden tener algunas limitaciones significativas. EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de <br>inteligencia emergente</br>. El concepto de <br>inteligencia emergente</br> fue estudiado por primera vez en asociaciÃ³n con sistemas biolÃ³gicos. En tales estudios, los primeros investigadores descubrieron una variedad de comportamientos interesantes de insectos o animales en la naturaleza. Una bandada de pÃ¡jaros cruza el cielo. Un grupo de hormigas busca comida. Una escuela de peces nada, gira, huye juntos lejos de un depredador, y asÃ­ sucesivamente. En general, este tipo de movimiento agregado se ha llamado comportamiento de enjambre. Los biÃ³logos y cientÃ­ficos de la computaciÃ³n en el campo de la inteligencia artificial han estudiado tales enjambres biolÃ³gicos y han intentado crear modelos que expliquen cÃ³mo interactÃºan los elementos de un enjambre, logran objetivos y evolucionan. AdemÃ¡s, en los Ãºltimos aÃ±os el estudio de la inteligencia de enjambre ha cobrado cada vez mÃ¡s importancia en los campos de la robÃ³tica, el diseÃ±o de Redes MÃ³viles Ad-hoc (MANETS), el diseÃ±o de Sistemas de DetecciÃ³n de Intrusiones, el estudio de patrones de trÃ¡fico en sistemas de transporte, en aplicaciones militares y otras Ã¡reas, ver [3]. Los conceptos bÃ¡sicos que se han desarrollado en la Ãºltima dÃ©cada para explicar los enjambres y su comportamiento incluyen cuatro componentes bÃ¡sicos. Estos son: 1. Sencillez de la lÃ³gica y acciones: Un enjambre estÃ¡ compuesto por N agentes cuya inteligencia es limitada. Los agentes en el enjambre utilizan reglas locales simples para gobernar sus acciones. Algunos modelos llaman a estas acciones o comportamientos primitivos; 2. Mecanismos de comunicaciÃ³n local: Los agentes interactÃºan con otros miembros en el enjambre a travÃ©s de simples mecanismos de comunicaciÃ³n local. Por ejemplo, un pÃ¡jaro en una bandada percibe la posiciÃ³n del pÃ¡jaro adyacente y aplica una regla simple de evitaciÃ³n y seguimiento. 3. Control distribuido: Los agentes autÃ³nomos interactÃºan con su entorno, que probablemente consiste en otros agentes, pero actÃºan relativamente de forma independiente de todos los demÃ¡s agentes. No hay un mando central o lÃ­der, y ciertamente no hay un plan global. Inteligencia emergente: El comportamiento agregado de agentes autÃ³nomos resulta en comportamientos inteligentes complejos, incluyendo la autoorganizaciÃ³n. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "slammer worm": {
            "translated_key": "gusano Slammer",
            "is_in_text": true,
            "original_annotated_sentences": [
                "An Initial Analysis and Presentation of Malware Exhibiting Swarm-Like Behavior Fernando C.ColÂ´on Osorio Wireless System Security Research Laboratory (W.S.S.R.L.)",
                "420 Lakeside Avneue Marlboro, Massachusetts 01752 fcco@cs.wpi.edu Zachi Klopman Wireless System Security Research Laboratory (W.S.S.R.L.) 420 Lakeside Avneue Marlboro, Massachusetts 01752 zachi@cs.wpi.edu ABSTRACT The Slammer, which is currently the fastest computer worm in recorded history, was observed to infect 90 percent of all vulnerable Internets hosts within 10 minutes.",
                "Although the main action that the <br>slammer worm</br> takes is a relatively unsophisticated replication of itself, it still spreads so quickly that human response was ineffective.",
                "Most proposed countermeasures strategies are based primarily on rate detection and limiting algorithms.",
                "However, such strategies are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In our work, we put forth the hypothesis that next generation worms will be radically different, and potentially such techniques will prove ineffective.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
                "Emergent Intelligence is the behavior of systems, very much like biological systems such as ants or bees, where simple local interactions of autonomous members, with simple primitive actions, gives rise to complex and intelligent global behavior.",
                "In this manuscript we will introduce the basic principles behind the idea of Swarm Worms, as well as the basic structure required in order to be considered a swarm worm.",
                "In addition, we will present preliminary results on the propagation speeds of one such swarm worm, called the ZachiK worm.",
                "We will show that ZachiK is capable of propagating at a rate 2 orders of magnitude faster than similar worms without swarm capabilities.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Intrusion Detection; D.4.6 [Security and Protection]: Invasive software General Terms Experimentation, Security 1.",
                "INTRODUCTION AND PREVIOUSWORK In the early morning hours (05:30 GMT) of January 25, 2003 the fastest computer worm in recorded history began spreading throughout the Internet.",
                "Within 10 minutes after the first infected host (patient zero), 90 percent of all vulnerable hosts had been compromised creating significant disruption to the global Internet infrastructure.",
                "Vern Paxson of the International Computer Science Institute and Lawrence Berkeley National Laboratory in its analysis of Slammer commented: The <br>slammer worm</br> spread so quickly that human response was ineffective, see [4] The interesting part, from our perspective, about the spread of Slammer is that it was a relatively unsophisticated worm with benign behavior, namely self-reproduction.",
                "Since Slammer, researchers have explored the behaviors of fast spreading worms, and have designed countermeasures strategies based primarily on rate detection and limiting algorithms.",
                "For example, Zou, et al., [2], proposed a scheme where a Kalman filter is used to detect the early propagation of a worm.",
                "Other researchers have proposed the use of detectors where rates of Destination Unreachable messages are monitored by firewalls, and a significant increase beyond normal, alerts the organization to the potential presence of a worm.",
                "However, such strategies suffer from the fighting the last War syndrome.",
                "That is, systems are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In the work described here, we put forth the hypothesis that next generation worms will be different, and therefore such techniques may have some significant limitations.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
                "The concept of emergent intelligence was first studied in association with biological systems.",
                "In such studies, early researchers discovered a variety of interesting insect or animal behaviors in the wild.",
                "A flock of birds sweeps across the sky.",
                "A group of ants forages for food.",
                "A school of fish swims, turns, flees together away from a predator, ands so forth.",
                "In general, this kind of aggregate motion has been called swarm behavior.",
                "Biologists, and computer scientists in the field of artificial intelligence have studied such biological swarms, and 323 attempted to create models that explain how the elements of a swarm interact, achieve goals, and evolve.",
                "Moreover, in recent years the study of swarm intelligence has become increasingly important in the fields of robotics, the design of Mobile ad-hoc Networks (MANETS), the design of Intrusion Detection Systems, the study of traffic patterns in transportation systems, in military applications, and other areas, see [3].",
                "The basic concepts that have been developed over the last decade to explain swarms, and swarm behavior include four basic components.",
                "These are: 1.",
                "Simplicity of logic & actions: A swarm is composed of N agents whose intelligence is limited.",
                "Agents in the swarm use simple local rules to govern their actions.",
                "Some models called this primitive actions or behaviors; 2.",
                "Local Communication Mechanisms: Agents interact with other members in the swarm via simple local communication mechanisms.",
                "For example, a bird in a flock senses the position of adjacent bird and applies a simple rule of avoidance and follow. 3.",
                "Distributed control: Autonomous agents interact with their environment, which probably consists of other agents, but act relatively independently from all other agents.",
                "There is no central command or leader, and certainly there is no global plan. 4.",
                "Emergent Intelligence: Aggregate behavior of autonomous agents results in complex intelligent behaviors; including self-organization.",
                "In order to understand fully the behavior of such swarms it is necessary to construct a model that explains the behavior of what we will call generic worms.",
                "This model, which extends the work by Weaver [5] is presented here in section 2.",
                "In addition, we intend to extend said model in such a way that it clearly explains the behaviors of this new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
                "Such Swarm Worms are potentially more harmful than their similar generic counterparts.",
                "Specifically, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
                "ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
                "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms are capable of compromising hosts at rates up to two orders of magnitude faster than their generic counterpart.",
                "The rest of this manuscript is structure as follows.",
                "In section 2 an abstract model of both generic worms as well as swarm worms is presented.",
                "This model is used in section 2.6 to described the first instance of a swarm worm, ZachiK.",
                "In section 4, preliminary results via both empirical measurements as well as simulation is presented.",
                "Finally, in section 5 our conclusions and insights into future work are presented. 2.",
                "WORM MODELING In order to study the behavior of swarm worms in general, it is necessary to create a model that realistically reflects the structure of worms and it is not necessarily tied to a specific instance.",
                "In this section, we described such a model where a general worm is describe as having four-(4) basic components or subfunctions.",
                "By definition, a worm is a selfcontained, self propagating program.",
                "Thus, in simple terms, it has two main functions: that which propagates and that which does other things.",
                "We propose that there is a third broad functionality of a worm, that of self-preservation.",
                "We also propose that the other functionality of a worm may be more appropriately categorized as Goal-Based Actions (GBA), as whatever functionality included in a worm will naturally be dependent on whatever goals (and subgoals) the author has.",
                "The work presented by Weaver et. al. in [5] provides us with mainly an action and technique based taxonomy of computer worms, which we utilize and further extend here. 2.1 Propagation The propagation function itself may be broken down into three actions: acquire target, send scan, and infect target.",
                "Acquiring the target simply means picking a host to attack next.",
                "Sending a scan involves checking to see if that host is receptive to an infection attempt, since IP-space is sparsely populated.",
                "This may involve a simple ping to check if the host is alive or a full out vulnerability assessment.",
                "Infecting the target is the actual method used to send the worm code to the new host.",
                "In algorithm form: propagate() { host := acquire_target() success := send_scan(host) if( success ) then infect(host) endif } In the case of a simple worm which does not first check to see if the host is available or susceptible (such as Slammer), the scan method is dropped: propagate() { host := acquire_target() infect(host) } Each of these actions may have an associated cost to its inclusion and execution, such as increased worm size and CPU or network load.",
                "Depending on the authors needs or requirements, these become limiting factors in what may be included in the worms actions.",
                "This is discussed further after expanding upon these actions below. 2.2 Target Acquisition: The Target Acquisition phase of our worm algorithm is built directly off of the Target Discovery section in [5].",
                "Weaver et. al. taxonomize this task into 5 separate categories.",
                "Here, we further extend their work through parameterization.",
                "Scanning: Scanning may be considered an equation-based method for choosing a host.",
                "Any type of equation may be used to arrive at an IP address, but there are three main types seen thus far: sequential, random, and local preference.",
                "Sequential scanning is exactly as it sounds: start at an IP address and increment through all the IP space.",
                "This could carry with it the options of which IP to start with (user chosen value, random, or based on IP of infected host) and 324 how many times to increment (continuous, chosen value, or subnet-based).",
                "Random scanning is completely at random (depending on the chosen PRNG method and its seed value).",
                "Local preference scanning is a variance of either Sequential or Random, whereby it has a greater probability of choosing a local IP address over a remote one (for example, the traditional 80/20 split).",
                "Pre-generated Target Lists: Pre-generated Target Lists, or so called hit-lists, could include the options for percentage of total population and percentage wrong, or just number of IPs to include.",
                "Implicit to this type is the fact that the list is divided among a parent and its children, avoiding the problem of every instance hitting the exact same machines.",
                "Externally Generated Target Lists: Externally generated target lists depend on one or more external sources that can be queried for host data.",
                "This will involve either servers that are normally publicly available, such as gaming meta-servers, or ones explicitly setup by the worm or worm author.",
                "The normally available meta-servers could have parameters for rates of change, such as many popping up at night or leaving in the morning.",
                "Each server could also have a maximum queries/second that it would be able to handle.",
                "The worm would also need a way of finding these servers, either hard-coded or through scanning.",
                "Internal Target Lists: Internal Target Lists are highly dependent on the infected host.",
                "This method could parameterize the choice of how much info is on the host, such as all machines in subnet, all windows boxes in subnet, particular servers, number of internal/external, or some combination.",
                "Passive: Passive methods are determined by normal interactions between hosts.",
                "Parameters may include a rate of interaction with particular machines, internal/external rate of interaction, or subnet-based rate of interaction.",
                "Any of these methods may also be combined to produce different types of target acquisition strategies.",
                "For example, the a worm may begin with an initial hit-list of 100 different hosts or subnets.",
                "Once it has exhausted its search using the hit-list, it may then proceed to perform random scanning with a 50% local bias.",
                "It is important to note, however, that the resource consumption of each method is not the same.",
                "Different methods may require the worm to be large, such as the extra bytes required by a hit-list, or to take more processing time, such as by searching the host for addresses of other vulnerable hosts.",
                "Further research and analysis should be performed in this area to determine associated costs for using each method.",
                "The costs could then be used in determining design tradeoffs that worm authors engage at.",
                "For example, hit lists provide a high rate of infection, but at a high cost of worm payload size. 2.2.1 Sending a Scan The send scan function tests to see if the host is available for infection.",
                "This can be as simple as checking if the host is up on the network or as complex as checking if the host is vulnerable to the exploit which will be used.",
                "The sending of a scan before attempted infection can increase the scanning rate if the cost for failing an infection is greater than the cost of failing a scan or sending a scan plus infection; and failures are more frequent than successes.",
                "One important parameter to this would be the choice of transport protocol (TCP/UDP) or just simply the time for one successful scan and time for one failed scan.",
                "Also, whether or not it tests for the host to be up or if it is a full test for the vulnerability (or for multiple vulnerabilities). 2.2.2 Infection Vector (IV) The particular infection vector used to access the remote host is mainly dependent on the particular vulnerability chosen to exploit.",
                "In a non-specific sense, it is dependent on the transport protocol chosen to use and the message size to be sent.",
                "Section 3 of [5] also proposes three particular classes of IV: Self-carried, second channel, and embedded. 2.3 Self Preservation The Self Preservation actions of a worm may take many forms.",
                "In the wild, worms have been observed to disable anti-virus software or prevent sending itself to certain antivirusknown addresses.",
                "They have also been seen to attempt disabling of other worms which may be contending for the same system.",
                "We also believe that a time-based throttled scanning may help the worm to slip under the radar.",
                "We also propose a decoy method, whereby a worm will release a few children that cause a lot of noise so that the parent is not noticed.",
                "It has also been proposed [5] that a worm cause damage to its host if, and only if, it is disturbed in some way.",
                "This module could contain parameters for: probability of success in disabling anti-virus or other software updates, probability of being noticed and thus removed, or hardening of the host against other worms. 2.4 Goal-Based Actions A worms GBA functionality depends on the authors goal list.",
                "The Payloads section of [5] provides some useful suggestions for such a module.",
                "The opening of a back-door can make the host susceptible to more attacks.",
                "This would involve a probability of the back-door being used and any associated traffic utilization.",
                "It could also provide a list of other worms this host is now susceptible to or a list of vulnerabilities this host now has.",
                "Spam relays and HTTP-Proxies of course have an associated bandwidth consumption or traffic pattern.",
                "Internet DoS attacks would have a set time of activation, a target, and a traffic pattern.",
                "Data damage would have an associated probability that the host dies because of the damage.",
                "In Figure 1, this general model of a worm is summarized.",
                "Please note that in this model there is no learning, no, or very little, sharing of information between worm instances, and certainly no coordination of actions.",
                "In the next section we expand the model to include such mechanisms, and hence, arrive at the general model of a swarm worm. 2.5 Swarms - General Model As described in section 1, the basic characteristics that distinguished swarm behavior from simply what appears to be collective coordinated behaviors are four basic attributes.",
                "These are: 1.",
                "Simplicity of logic & actions; 2.",
                "Local Communication Mechanisms; 3.",
                "Distributed control; and 4.",
                "Emergent Intelligence, including self-organization. 325 Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 1: General Worm Model In this work we aggregate all of these attributes under the general title of Learning, Communication, and Distributed Control.",
                "The presence of these attributes distinguishes swarm worms from otherwise regular worms, or other types of malware such as Zombies.",
                "In figure ? ?, the generic model of a worm is expanded to included these set of actions.",
                "Within this context then, a worm like Slammer cannot be categorized as a swarm worm due to the fact that new instances of the worm do not coordinate their actions or share information.",
                "On the other hand, Zombies and many other forms of DDoS, which at first glance may be consider swarm worms are not.",
                "This is simply due to fact that in the case of Zombies, control is not distributed but rather centralized, and no emergent behaviors arise.",
                "The latter, the potential emergence of intelligence or new behaviors is what makes swarm worms so potentially dangerous.",
                "Finally, when one considers the majority of recent disruptions to the Internet Infrastructure, and in light of our description of swarm attacks, then said disruptions can be easily categorized as precursors to truly swarm behavior.",
                "Specifically, â¢ DDOS - Large number of compromised hosts send useless packets requiring processing (Stacheldraht, http : //www.cert.org/ incidentnotes/IN â 99 â 04.html).",
                "DDoS attacks are the early precursors to Swarm Attacks due to the large number of agents involved. â¢ Code Red CrV1, Code Red II, Nimbda - Exhibit early notions of swarm attacks, including a backdoor communication channel. â¢ Staniford & Paxson in How to Own the Internet in Your Spare Time? explore modifications to CrV1, Code Red I, II with a swarm like type of behavior.",
                "For example, they speculate on new worms which employ direct worm-to-worm communication, and employ programmable updates.",
                "For example the Warhol worm, and Permutation-Scanning (self coordinating) worms. 2.6 Swarm Worm: the details In considering the creation of what we believed to be the first Swarm Worm in existence, we wanted to adhere as close as possible to the general model presented in section ? ? while at the same time facilitating large scale analysis, both empirical and through simulations, of the behavior of the swarm.",
                "For this reason, we selected as the first instance Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Learning, Communication, Pheromones/Flags (Test and Distributed Control if Worm is already present) Time bombs, Learning Algorithms, IRC channel Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 2: General Model of a Swarm Worm of the swarm a simple password cracking worm.",
                "The objective of this worm simply is to infect a host by sequentially attempting to login into the host using well known passwords (dictionary attack), passwords that have been discovered previously by any member of the swarm, and random passwords.",
                "Once, a host is infected, the worm will create communication channels with both its known neighbors at that time, as well as with any offsprings that it successfully generates.",
                "In this context a successful generation of an offspring means simply infecting a new host and replicating an exact copy of itself in such a host.",
                "We call this swarm worm the ZachiK worm in honor of one of its creators.",
                "As it can be seen from this description, the ZachiK worm exhibits all of the elements described before.",
                "In the following sections, we described in detail each one of the elements of the ZachiK worm. 2.7 Infection Vector The infection vector used for ZachiK worm is the secure shell protocol SSH.",
                "A modified client which is capable of receiving passwords from the command line was written, and integrated with a script that supplies it with various passwords: known and random.",
                "When a password is found for an appropriate target, the infection process begins.",
                "After the root password of a host is discovered, the worm infects the target host and replicates itself.",
                "The worm creates a new directory in the target host, copies the modified ssh client, the script, the communications servers, and the updated versions of data files (list of known passwords and a list of current neighbors).",
                "It then runs the modified script on the newly infected hosts, which spawns the communications server, notifies the neighbors and starts looking for new targets.",
                "It could be argued, correctly, that the ZachiK worm can be easily defeated by current countermeasure techniques present on most systems today, such as disallowing direct root logins from the network.",
                "Within this context ZachiK can quickly be discarded as very simple and harmless worm that does not require further study.",
                "However, the reader should consider the following: 1.",
                "ZachiK can be easily modified to include a variety of infection vectors.",
                "For example, it could be programmed to guess common user names and their passwords; gain 326 access to a system, then guess the root password or use other well know vulnerabilities to gain root privileges; 2.",
                "ZachiK is a proof of concept worm.",
                "The importance of ZachiK is that it incorporates all of the behaviors of a swarm worm including, but not restricted to, distributed control, communication amongst agents, and learning; 3.",
                "ZachiK is composed of a large collection of agents operating independently which lends itself naturally to parallel algorithms such as a parallel search of the IPV4 address space.",
                "Within this context, SLAMMER, does incorporate a parallel search capability of potentially susceptible addresses.",
                "However, unlike ZachiK, the knowledge discovered by the search is never shared amongst the agents.",
                "For this reasons, and many others, one should not discard the potential of this new class of worms but rather embrace its study. 2.8 Self-Preservation In the case of ZachiK worm, the main self-preservation techniques used are simply keeping the payload small.",
                "In this context, this simply means restricting the number of passwords that an offspring inherits, masquerading worm messages as common http requests, and restricting the number of neighbors to a maximum of five-(5). 2.9 Propagation Choosing the next target(s) in an efficient matter requires thought.",
                "In the past, known and proposed worms, see [5], have applied propagation techniques that varied.",
                "These include: strictly random selection of a potential vulnerable host; target lists of vulnerable hosts; locally biased random selection (select a host target at random from a local subnet); and a combination of some or all of the above.",
                "In our test and simulation environments, we will apply a combination of locally biased and totally random selection of potential vulnerable hosts.",
                "However, due to the fact that the ZachiK worm is a swarm worm, address discovery (that is when non-existent addresses are discovered) information will be shared amongst members of the swarm.",
                "The infection and propagation threads do the following set of activities repeatedly: â¢ Choose an address â¢ Check the validity of the address â¢ Choose a set of passwords â¢ Try infecting the selected host with this set of passwords As described earlier, choosing an address makes use of a combination of random selection, local bias, and target lists.",
                "Specifically, to choose an address, the instance may either: â¢ Generate a new random address â¢ Generate an address on the local network â¢ Pick an address from a handoff list The choice is made randomly among these options, and can be varied to test the dependency of propagation on particular choices.",
                "Password are either chosen from the list of known passwords or newly generated.",
                "When an infection of a valid address fails, it is added to a list of handoffs, which is sent to the neighbors to try to work on. 2.10 Learning, CommunicationandDistributed Control 2.10.1 Communication The concept of a swarm is based on transfer of information amongst neighbors, which relay their new incoming messages to their neighbors, and so on until every worm instance in the swarm is aware of these messages.",
                "There are two classes of messages: data or information messages and commands.",
                "The command messages are meant for an external user (a.k.a., hackers and/or crackers) to control the actions of the instances, and are currently not implemented.",
                "The information messages are currently of three kinds: new member, passwords and exploitable addresses (handoffs).",
                "The new member messages are messages that a new instance sends to the neighbors on its (short) list of initial neighbors.",
                "The neighbors then register these instances in their neighbor list.",
                "These are messages that form the multi-connectivity of the swarm, and without them, the topology will be a treelike structure, where eliminating a single node would cause the instances beneath it to be inaccessible.",
                "The passwords messages inform instances of newly discovered passwords, and by informing all instances, the swarm as whole collects this information, which allows it to infect new instances more effectively.",
                "The handoffs messages inform instances of valid addresses that could not be compromised (fail at breaking the password for the root account).",
                "Since the address space is rather sparse, it takes a relatively long time (i.e. many trials) to discover a valid address.",
                "Therefore, by handing off discovered valid addresses, the swarm is (a) conserving energy by not re-discovering the same addresses (b) attacking more effectively.",
                "In a way, this is a simple instance of coordinated activity of a swarm. 2.10.2 Coordination When a worm instance is born, it relays its existence to all neighbors on its list.",
                "The main thread then spawns a few infection threads, and continues to handle incoming messages (registering neighbors, adding new passwords, receiving addresses and relaying these messages). 2.10.3 Distributed Control Control in the ZachiK worm is distributed in the sense that each instance of the worm performs a set of actions independently of every other instance while at the same time benefiting from the learning achieve by its immediate neighbors. 2.11 Goal Based Actions The first instantiation of the ZachiK worm has two basic goals.",
                "These are: (1) propagate, and (2) discover and share with members of th swarm new root passwords. 3.",
                "EXPERIMENTAL DESIGN In order to verify our hypothesis that Swarm Worms are more capable, and therefore dangerous than other well known 327 worms, a network testbed was created, and a simulator, capable of simulating large scale Internet-like topologies (IPV4 space), was developed.",
                "The network testbed consisted of a local area network of 30 Linux based computers.",
                "The simulator was written in C++ .",
                "The simple swarm worm described in section 2.6 was used to infect patient-zero, and then the swarm worm was allowed to propagate via its own mechanisms of propagation, distributed control, and swarm behaviors.",
                "In the case of a simple local area network of 30 computers, six-(6) different root passwords out of a password space of 4 digits (10000 options) were selected.",
                "At the start of the experiment a single known password is known, that of patient-zero.",
                "All shared passwords are distributed randomly across all nodes.",
                "Similarly, in the case of the simulation, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "For example, in one of our simulation runs, the network topology consisted of 200 subnets each containing 50 hosts.",
                "In such a topology, shared passwords were distributed across subnets where a varying percentage of passwords were shared across subnets.",
                "The percentages of shared passwords used was reflective of early empirical studies, where up to 39.7% of common passwords were found to be shared. 4.",
                "RESULTS In Figure 3, the results comparing Swarm Attack behavior versus that of a typical Malform Worm for a 30 node LAN are presented.",
                "In this set of empirical runs, six-(6) shared passwords were distributed at random across all nodes from a possible of 10,000 unknown passwords.",
                "The data presented reflects the behaviors of a total of three-(3) distinct classes of worm or swarm worms.",
                "The class of worms presented are as follows: â¢ I-NS-NL:= Generic worm, independent (I), no learning/memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; and â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 3, the results validate our original hypothesis that swarm worms are significantly more efficient and dangerous than generic worms.",
                "In this set of experiments, the sharing of passwords provides an order of magnitude improvement over a memoryless random worm.",
                "Similarly, a swarm worm that shares passwords and addresses is approximately two orders of magnitude more efficient than its generic counterpart.",
                "In Figure 3, a series of discontinuities can be observed.",
                "These discontinuities are an artifact of the small sample space used for this experiment.",
                "Basically, as soon as a password is broken, all nodes sharing that specific password are infected within a few seconds.",
                "Note that it is trivial for a swarm worm to scan and discovered a small shared password space.",
                "In Figure 4, the simulation results comparing Swarm Attack Behavior versus that of a Generic Malform Worm are presented.",
                "In this set of simulation runs, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "The data presented reflects the behaviors of three-(3) distinct classes of worm or swarm worms and two(2) different target host selection scanning strategies (random scanning and local bias).",
                "The amount of local bias was varied across multiple simulation runs.",
                "The results presented are aggregate behaviors.",
                "In general the following class of Generic Worms and Swarm Worms were simulated.",
                "Address Scanning: â¢ Random:= addresses are selected at random from a subset of the IPV4 space, namely, a 224 address space; and â¢ Local Bias:= addresses are selected at random from either a local subnet (256 addresses) or from a subset of the IPV4 space, namely, a 224 address space.",
                "The percentage of local bias is varied across multiple runs.",
                "Learning, Communication & Distributed Control â¢ I-NL-NS: Generic worm, independent (I), no learning/ memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ I-L-OOS: Generic worm, independent (I), learning/ memoryless (L), and one time sharing of information with offsprings only (OOS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; â¢ S-L-S&AOP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of addresses with neighbors and offsprings, shares passwords one time only (at creation) with offsprings(SA&OP); â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 4, the results are consistent with our set of empirical results.",
                "In addition, the following observations can be made. 1.",
                "Local preference is incredibly effective. 2.",
                "Short address handoffs are more effective than long ones.",
                "We varied the size of the list allowed in the sharing of addresses; the overhead associated with a long address list is detrimental to the performance of the swarm worm, as well as to its stealthiness; 3.",
                "For the local bias case, sharing valid addresses of susceptible host, S-L-S&AOP worm (recall, the S-L-S&AOP swarm shares passwords, one time only, with offsprings 328 at creation time) is more effective than sharing passwords in the case of the S-L-SP swarm.",
                "In this case, we can think of the swarm as launching a distributeddictionary attack: different segments of the swarm use different passwords to try to break into susceptible uninfected host.",
                "In the local bias mode, early in the life of the swarm, address-sharing is more effective than password-sharing, until most subnets are discovered.",
                "Then the targeting of local addresses assists in discovering the susceptible hosts, while the swarm members need to waste time rediscovering passwords; and 4.",
                "Infecting the last 0.5% of nodes takes a very long time in non-local bias mode.",
                "Basically, the shared password list across subnets has been exhausted, and the swarm reverts to simply a random discovery of password algorithm.",
                "Figure 3: Swarm Attack Behavior vs. Malform Worm: Empirical Results, 30node LAN Figure 4: Swarm Attack Behavior vs. Malform Worm: Simulation Results 5.",
                "SUMMARY AND FUTURE WORK In this manuscript, we have presented an abstract model, similar in some aspects to that of Weaver [5], that helps explain the generic nature of worms.",
                "The model presented in section 2 was extended to incorporate a new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
                "Such Swarm Worms are potentially more harmful than their generic counterparts.",
                "In addition, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
                "ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
                "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms is capable of compromising hosts a rates up to 2 orders of magnitude faster than its generic counterpart while retaining stealth capabilities.",
                "This work opens up a new area of interesting problems.",
                "Some of the most interesting and pressing problems to be consider are as follows: â¢ Is it possible to apply some of learning concepts developed over the last ten years in the areas of swarm intelligence, agent systems, and distributed control to the design of sophisticated swarm worms in such a way that true emergent behavior takes place? â¢ Are the current techniques being developed in the design of Intrusion Detection & CounterMeasure Systems and Survivable systems effective against this new class of worms? ; and â¢ What techniques, if any, can be developed to create defenses against swarm worms? 6.",
                "ACKNOWLEDGMENTS This work was conducted as part of a larger effort in the development of next generation Intrusion Detection & CounterMeasure Systems at WSSRL.",
                "The work is conducted under the auspices of Grant ACG-2004-06 by the Acumen Consulting Group, Inc., Marlboro, Massachusetts. 7.",
                "REFERENCES [1] C.C.",
                "Zou, L. Gao, W. G., and Towsley, D. Monitoring and early warning for internet worms.",
                "In 10th ACM Conference on Computer and Communications Security, Washington, DC (October 2003). [2] Liu, S., and Passino, K. Swarm intelligence: Literature overview.",
                "In Dept. of Electrical Engineering, The Ohio State University, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., and Weaver, N. The spread of the saphire/<br>slammer worm</br>.",
                "Tech. rep., A joint effort of CAIDA, ICSI, Silicon Defense, UC Berkeley EECS and UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S., and Cunningham, R. A taxonomy of computer worms.",
                "In Proceedings of the ACM Workshop on Rapid Malware (WORM) (2003). 329"
            ],
            "original_annotated_samples": [
                "Although the main action that the <br>slammer worm</br> takes is a relatively unsophisticated replication of itself, it still spreads so quickly that human response was ineffective.",
                "Vern Paxson of the International Computer Science Institute and Lawrence Berkeley National Laboratory in its analysis of Slammer commented: The <br>slammer worm</br> spread so quickly that human response was ineffective, see [4] The interesting part, from our perspective, about the spread of Slammer is that it was a relatively unsophisticated worm with benign behavior, namely self-reproduction.",
                "In Dept. of Electrical Engineering, The Ohio State University, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., and Weaver, N. The spread of the saphire/<br>slammer worm</br>."
            ],
            "translated_annotated_samples": [
                "Aunque la acciÃ³n principal que realiza el <br>gusano Slammer</br> es una replicaciÃ³n relativamente poco sofisticada de sÃ­ mismo, se propaga tan rÃ¡pidamente que la respuesta humana fue ineficaz.",
                "Vern Paxson del Instituto Internacional de Ciencias de la ComputaciÃ³n y del Laboratorio Nacional Lawrence Berkeley comentÃ³ en su anÃ¡lisis de Slammer: El <br>gusano Slammer</br> se propagÃ³ tan rÃ¡pidamente que la respuesta humana fue ineficaz, ver [4]. La parte interesante, desde nuestro punto de vista, sobre la propagaciÃ³n de Slammer es que era un gusano relativamente poco sofisticado con un comportamiento benigno, es decir, la auto-reproducciÃ³n.",
                "En el Departamento de IngenierÃ­a ElÃ©ctrica, Universidad Estatal de Ohio, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., y Weaver, N. La propagaciÃ³n del gusano saphire/slammer."
            ],
            "translated_text": "Un AnÃ¡lisis Inicial y PresentaciÃ³n de Malware que Exhibe Comportamiento Similar a un Enjambre por Fernando C. ColÃ³n Osorio Laboratorio de InvestigaciÃ³n en Seguridad de Sistemas InalÃ¡mbricos (W.S.S.R.L.) El Slammer, que actualmente es el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada, se observÃ³ infectando el 90 por ciento de todos los hosts vulnerables de Internet en 10 minutos. Aunque la acciÃ³n principal que realiza el <br>gusano Slammer</br> es una replicaciÃ³n relativamente poco sofisticada de sÃ­ mismo, se propaga tan rÃ¡pidamente que la respuesta humana fue ineficaz. La mayorÃ­a de las estrategias de contramedidas propuestas se basan principalmente en la detecciÃ³n de tasas y algoritmos de limitaciÃ³n. Sin embargo, se estÃ¡n diseÃ±ando y desarrollando estrategias para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En nuestro trabajo, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n radicalmente diferentes, y posiblemente dichas tÃ©cnicas resultarÃ¡n ineficaces. EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. La Inteligencia Emergente es el comportamiento de sistemas, muy similar a sistemas biolÃ³gicos como hormigas o abejas, donde las interacciones locales simples de miembros autÃ³nomos, con acciones primitivas simples, dan lugar a un comportamiento global complejo e inteligente. En este manuscrito introduciremos los principios bÃ¡sicos detrÃ¡s de la idea de los Gusanos en Enjambre, asÃ­ como la estructura bÃ¡sica requerida para ser considerado un gusano en enjambre. AdemÃ¡s, presentaremos resultados preliminares sobre las velocidades de propagaciÃ³n de un gusano de enjambre llamado gusano ZachiK. Demostraremos que ZachiK es capaz de propagarse a una velocidad 2 Ã³rdenes de magnitud mÃ¡s rÃ¡pida que gusanos similares sin capacidades de enjambre. CategorÃ­as y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: DetecciÃ³n de Intrusiones; D.4.6 [Seguridad y ProtecciÃ³n]: Software Invasivo TÃ©rminos Generales ExperimentaciÃ³n, Seguridad 1. INTRODUCCIÃN Y TRABAJO PREVIO En las primeras horas de la maÃ±ana (05:30 GMT) del 25 de enero de 2003, el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada comenzÃ³ a propagarse por Internet. Dentro de los 10 minutos posteriores al primer huÃ©sped infectado (paciente cero), el 90 por ciento de todos los huÃ©spedes vulnerables habÃ­an sido comprometidos, creando una interrupciÃ³n significativa en la infraestructura de Internet a nivel global. Vern Paxson del Instituto Internacional de Ciencias de la ComputaciÃ³n y del Laboratorio Nacional Lawrence Berkeley comentÃ³ en su anÃ¡lisis de Slammer: El <br>gusano Slammer</br> se propagÃ³ tan rÃ¡pidamente que la respuesta humana fue ineficaz, ver [4]. La parte interesante, desde nuestro punto de vista, sobre la propagaciÃ³n de Slammer es que era un gusano relativamente poco sofisticado con un comportamiento benigno, es decir, la auto-reproducciÃ³n. Desde Slammer, los investigadores han explorado los comportamientos de los gusanos de propagaciÃ³n rÃ¡pida y han diseÃ±ado estrategias de contramedidas basadas principalmente en la detecciÃ³n de la velocidad y algoritmos de limitaciÃ³n. Por ejemplo, Zou, et al., [2], propusieron un esquema donde se utiliza un filtro de Kalman para detectar la propagaciÃ³n temprana de un gusano. Otros investigadores han propuesto el uso de detectores donde las tasas de mensajes de Destino Inalcanzable son monitoreadas por los firewalls, y un aumento significativo mÃ¡s allÃ¡ de lo normal alerta a la organizaciÃ³n sobre la posible presencia de un gusano. Sin embargo, tales estrategias sufren del sÃ­ndrome de luchar la Ãºltima guerra. Es decir, se estÃ¡n diseÃ±ando y desarrollando sistemas para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En el trabajo descrito aquÃ­, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n diferentes, y por lo tanto, dichas tÃ©cnicas pueden tener algunas limitaciones significativas. EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. El concepto de inteligencia emergente fue estudiado por primera vez en asociaciÃ³n con sistemas biolÃ³gicos. En tales estudios, los primeros investigadores descubrieron una variedad de comportamientos interesantes de insectos o animales en la naturaleza. Una bandada de pÃ¡jaros cruza el cielo. Un grupo de hormigas busca comida. Una escuela de peces nada, gira, huye juntos lejos de un depredador, y asÃ­ sucesivamente. En general, este tipo de movimiento agregado se ha llamado comportamiento de enjambre. Los biÃ³logos y cientÃ­ficos de la computaciÃ³n en el campo de la inteligencia artificial han estudiado tales enjambres biolÃ³gicos y han intentado crear modelos que expliquen cÃ³mo interactÃºan los elementos de un enjambre, logran objetivos y evolucionan. AdemÃ¡s, en los Ãºltimos aÃ±os el estudio de la inteligencia de enjambre ha cobrado cada vez mÃ¡s importancia en los campos de la robÃ³tica, el diseÃ±o de Redes MÃ³viles Ad-hoc (MANETS), el diseÃ±o de Sistemas de DetecciÃ³n de Intrusiones, el estudio de patrones de trÃ¡fico en sistemas de transporte, en aplicaciones militares y otras Ã¡reas, ver [3]. Los conceptos bÃ¡sicos que se han desarrollado en la Ãºltima dÃ©cada para explicar los enjambres y su comportamiento incluyen cuatro componentes bÃ¡sicos. Estos son: 1. Sencillez de la lÃ³gica y acciones: Un enjambre estÃ¡ compuesto por N agentes cuya inteligencia es limitada. Los agentes en el enjambre utilizan reglas locales simples para gobernar sus acciones. Algunos modelos llaman a estas acciones o comportamientos primitivos; 2. Mecanismos de comunicaciÃ³n local: Los agentes interactÃºan con otros miembros en el enjambre a travÃ©s de simples mecanismos de comunicaciÃ³n local. Por ejemplo, un pÃ¡jaro en una bandada percibe la posiciÃ³n del pÃ¡jaro adyacente y aplica una regla simple de evitaciÃ³n y seguimiento. 3. Control distribuido: Los agentes autÃ³nomos interactÃºan con su entorno, que probablemente consiste en otros agentes, pero actÃºan relativamente de forma independiente de todos los demÃ¡s agentes. No hay un mando central o lÃ­der, y ciertamente no hay un plan global. Inteligencia emergente: El comportamiento agregado de agentes autÃ³nomos resulta en comportamientos inteligentes complejos, incluyendo la autoorganizaciÃ³n. Para comprender completamente el comportamiento de tales enjambres, es necesario construir un modelo que explique el comportamiento de lo que llamaremos gusanos genÃ©ricos. Este modelo, que amplÃ­a el trabajo de Weaver [5], se presenta aquÃ­ en la secciÃ³n 2. AdemÃ¡s, tenemos la intenciÃ³n de ampliar dicho modelo de tal manera que explique claramente los comportamientos de esta nueva clase de gusanos potencialmente peligrosos llamados Gusanos en Enjambre. Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biolÃ³gicos y muestran un alto grado de aprendizaje, comunicaciÃ³n e inteligencia distribuida. Tales gusanos en enjambre son potencialmente mÃ¡s daÃ±inos que sus contrapartes genÃ©ricas similares. EspecÃ­ficamente, la primera instancia, segÃºn nuestro conocimiento, de un gusano de aprendizaje de este tipo fue creado, llamado ZachiK. ZachiK es un gusano enjambre de descifrado de contraseÃ±as simple que incorpora diferentes estrategias de aprendizaje y comparticiÃ³n de informaciÃ³n. Un gusano de enjambre similar fue desplegado tanto en una red de Ã¡rea local de treinta (30) hosts, como simulado en una topologÃ­a de 10,000 nodos. Los resultados preliminares mostraron que dichos gusanos son capaces de comprometer a los anfitriones a velocidades hasta dos Ã³rdenes de magnitud mÃ¡s rÃ¡pidas que su contraparte genÃ©rica. El resto de este manuscrito estÃ¡ estructurado de la siguiente manera. En la secciÃ³n 2 se presenta un modelo abstracto tanto de gusanos genÃ©ricos como de gusanos en enjambre. Este modelo se utiliza en la secciÃ³n 2.6 para describir la primera instancia de un gusano enjambre, ZachiK. En la secciÃ³n 4, se presentan resultados preliminares a travÃ©s de mediciones empÃ­ricas y simulaciones. Finalmente, en la secciÃ³n 5 se presentan nuestras conclusiones y perspectivas sobre trabajos futuros. MODELADO DE GUSANOS Para estudiar el comportamiento de los gusanos en enjambre en general, es necesario crear un modelo que refleje de manera realista la estructura de los gusanos y que no estÃ© necesariamente ligado a una instancia especÃ­fica. En esta secciÃ³n, describimos un modelo en el que un gusano general se describe como teniendo cuatro (4) componentes bÃ¡sicos o subfunciones. Por definiciÃ³n, un gusano es un programa autocontenido y auto propagante. Por lo tanto, en tÃ©rminos simples, tiene dos funciones principales: la que se propaga y la que realiza otras tareas. Proponemos que hay una tercera amplia funcionalidad de un gusano, la de autoconservaciÃ³n. TambiÃ©n proponemos que la otra funcionalidad de un gusano podrÃ­a ser categorizada de manera mÃ¡s apropiada como Acciones Basadas en Objetivos (ABO), ya que cualquier funcionalidad incluida en un gusano dependerÃ¡ naturalmente de los objetivos (y subobjetivos) que tenga el autor. El trabajo presentado por Weaver et al. en [5] nos proporciona principalmente una taxonomÃ­a de gusanos informÃ¡ticos basada en acciones y tÃ©cnicas, la cual utilizamos y ampliamos aquÃ­. 2.1 PropagaciÃ³n La funciÃ³n de propagaciÃ³n en sÃ­ misma puede desglosarse en tres acciones: adquirir objetivo, enviar escaneo e infectar objetivo. Adquirir el objetivo simplemente significa elegir un anfitriÃ³n para atacar a continuaciÃ³n. Enviar un escaneo implica verificar si ese host estÃ¡ receptivo a un intento de infecciÃ³n, ya que el espacio de direcciones IP estÃ¡ escasamente poblado. Esto puede implicar un simple ping para verificar si el host estÃ¡ activo o una evaluaciÃ³n completa de vulnerabilidades. Infectar al objetivo es el mÃ©todo real utilizado para enviar el cÃ³digo del gusano al nuevo hospedador. En forma de algoritmo: propagar() { host := adquirir_objetivo() Ã©xito := enviar_escaneo(host) si( Ã©xito ) entonces infectar(host) fin si } En el caso de un gusano simple que no verifica primero si el host estÃ¡ disponible o susceptible (como Slammer), se elimina el mÃ©todo de escaneo: propagar() { host := adquirir_objetivo() infectar(host) } Cada una de estas acciones puede tener un costo asociado a su inclusiÃ³n y ejecuciÃ³n, como un aumento en el tamaÃ±o del gusano y la carga de CPU o red. Dependiendo de las necesidades o requisitos de los autores, estos se convierten en factores limitantes en lo que puede incluirse en las acciones de los gusanos. Esto se discute mÃ¡s a fondo despuÃ©s de expandir sobre estas acciones a continuaciÃ³n. 2.2 AdquisiciÃ³n de Objetivos: La fase de AdquisiciÃ³n de Objetivos de nuestro algoritmo de gusano se construye directamente a partir de la secciÃ³n de Descubrimiento de Objetivos en [5]. Weaver et al. clasifican esta tarea en 5 categorÃ­as separadas. AquÃ­, ampliamos aÃºn mÃ¡s su trabajo a travÃ©s de la parametrizaciÃ³n. Escaneo: El escaneo puede considerarse un mÃ©todo basado en ecuaciones para elegir un anfitriÃ³n. Cualquier tipo de ecuaciÃ³n puede ser utilizada para llegar a una direcciÃ³n IP, pero hasta ahora se han visto tres tipos principales: secuencial, aleatorio y preferencia local. El escaneo secuencial es exactamente como suena: comenzar en una direcciÃ³n IP e incrementar a travÃ©s de todo el espacio de direcciones IP. Esto podrÃ­a llevar consigo las opciones de quÃ© IP empezar (valor elegido por el usuario, aleatorio o basado en la IP del host infectado) y cuÃ¡ntas veces incrementar (continuo, valor elegido o basado en subred). El escaneo aleatorio es completamente al azar (dependiendo del mÃ©todo PRNG elegido y su valor de semilla). El escaneo de preferencia local es una variante de Secuencial o Aleatorio, en la que tiene una mayor probabilidad de elegir una direcciÃ³n IP local en lugar de una remota (por ejemplo, la divisiÃ³n tradicional de 80/20). Listas de objetivos pregeneradas: Las listas de objetivos pregeneradas, o tambiÃ©n llamadas listas de objetivos, podrÃ­an incluir opciones para el porcentaje de la poblaciÃ³n total y el porcentaje de errores, o simplemente el nÃºmero de direcciones IP a incluir. ImplÃ­cito en este tipo es el hecho de que la lista se divide entre un padre y sus hijos, evitando el problema de que cada instancia golpee exactamente las mismas mÃ¡quinas. Listas de objetivos generadas externamente: Las listas de objetivos generadas externamente dependen de una o mÃ¡s fuentes externas que pueden ser consultadas para obtener datos del host. Esto implicarÃ¡ servidores que normalmente estÃ¡n pÃºblicamente disponibles, como los meta-servidores de juegos, o aquellos configurados explÃ­citamente por el gusano o el autor del gusano. Los meta-servidores normalmente disponibles podrÃ­an tener parÃ¡metros para tasas de cambio, como muchos apareciendo por la noche o desapareciendo por la maÃ±ana. Cada servidor tambiÃ©n podrÃ­a tener un mÃ¡ximo de consultas por segundo que serÃ­a capaz de manejar. El gusano tambiÃ©n necesitarÃ­a una forma de encontrar estos servidores, ya sea codificada en duro o a travÃ©s de escaneo. Listas de Objetivos Internos: Las Listas de Objetivos Internos dependen en gran medida del host infectado. Este mÃ©todo podrÃ­a parametrizar la elecciÃ³n de cuÃ¡nta informaciÃ³n hay en el host, como todas las mÃ¡quinas en la subred, todas las computadoras con Windows en la subred, servidores especÃ­ficos, nÃºmero de internos/externos, o alguna combinaciÃ³n. Los mÃ©todos pasivos son determinados por las interacciones normales entre los anfitriones. Los parÃ¡metros pueden incluir una tasa de interacciÃ³n con mÃ¡quinas particulares, una tasa de interacciÃ³n interna/externa, o una tasa de interacciÃ³n basada en subredes. Cualquiera de estos mÃ©todos tambiÃ©n puede combinarse para producir diferentes tipos de estrategias de adquisiciÃ³n de objetivos. Por ejemplo, un gusano puede comenzar con una lista inicial de 100 hosts o subredes diferentes. Una vez que haya agotado su bÃºsqueda utilizando la lista de Ã©xitos, puede proceder a realizar un escaneo aleatorio con un sesgo local del 50%. Es importante tener en cuenta, sin embargo, que el consumo de recursos de cada mÃ©todo no es el mismo. Diferentes mÃ©todos pueden requerir que el gusano sea grande, como los bytes adicionales necesarios para una lista de objetivos, o que tome mÃ¡s tiempo de procesamiento, como al buscar direcciones de otros hosts vulnerables en el host. Se deben realizar investigaciones y anÃ¡lisis adicionales en esta Ã¡rea para determinar los costos asociados de utilizar cada mÃ©todo. Los costos podrÃ­an ser utilizados para determinar los compromisos de diseÃ±o en los que los autores de gusanos participan. Por ejemplo, las listas de objetivos proporcionan una alta tasa de infecciÃ³n, pero a un alto costo en el tamaÃ±o de la carga Ãºtil del gusano. 2.2.1 EnvÃ­o de un Escaneo La funciÃ³n de envÃ­o de escaneo prueba si el host estÃ¡ disponible para la infecciÃ³n. Esto puede ser tan simple como verificar si el host estÃ¡ activo en la red o tan complejo como verificar si el host es vulnerable al exploit que se utilizarÃ¡. El envÃ­o de un escaneo antes de intentar una infecciÃ³n puede aumentar la tasa de escaneo si el costo por fallar en una infecciÃ³n es mayor que el costo de fallar en un escaneo o de enviar un escaneo mÃ¡s una infecciÃ³n; y las fallas son mÃ¡s frecuentes que los Ã©xitos. Un parÃ¡metro importante para esto serÃ­a la elecciÃ³n del protocolo de transporte (TCP/UDP) o simplemente el tiempo para un escaneo exitoso y el tiempo para un escaneo fallido. AdemÃ¡s, ya sea que se pruebe si el host estÃ¡ activo o si es una prueba completa de la vulnerabilidad (o de mÃºltiples vulnerabilidades). 2.2.2 Vector de InfecciÃ³n (VI) El vector de infecciÃ³n particular utilizado para acceder al host remoto depende principalmente de la vulnerabilidad especÃ­fica elegida para explotar. En un sentido no especÃ­fico, depende del protocolo de transporte elegido para usar y del tamaÃ±o del mensaje que se va a enviar. La SecciÃ³n 3 de [5] tambiÃ©n propone tres clases particulares de IV: Autotransportado, segundo canal e incrustado. 2.3 AutopreservaciÃ³n Las acciones de autopreservaciÃ³n de un gusano pueden tomar muchas formas. En la naturaleza, se ha observado que los gusanos desactivan el software antivirus o evitan enviarse a ciertas direcciones conocidas por los antivirus. TambiÃ©n se ha observado que intentan deshabilitar otros gusanos que podrÃ­an estar compitiendo por el mismo sistema. TambiÃ©n creemos que un escaneo con limitaciÃ³n de tiempo podrÃ­a ayudar al gusano a pasar desapercibido. TambiÃ©n proponemos un mÃ©todo de seÃ±uelo, mediante el cual un gusano liberarÃ¡ a unos pocos hijos que causen mucho ruido para que el progenitor no sea notado. TambiÃ©n se ha propuesto [5] que un gusano cause daÃ±o a su huÃ©sped si, y solo si, se ve perturbado de alguna manera. Este mÃ³dulo podrÃ­a contener parÃ¡metros para: probabilidad de Ã©xito en deshabilitar actualizaciones de antivirus u otro software, probabilidad de ser detectado y por ende eliminado, o fortalecimiento del anfitriÃ³n contra otros gusanos. 2.4 Acciones Basadas en Objetivos La funcionalidad de GBA de un gusano depende de la lista de objetivos del autor. La secciÃ³n de Cargas Ãºtiles de [5] proporciona algunas sugerencias Ãºtiles para dicho mÃ³dulo. La apertura de una puerta trasera puede hacer que el anfitriÃ³n sea susceptible a mÃ¡s ataques. Esto implicarÃ­a una probabilidad de que se utilice la puerta trasera y cualquier utilizaciÃ³n de trÃ¡fico asociada. TambiÃ©n podrÃ­a proporcionar una lista de otros gusanos a los que este hospedador es ahora susceptible o una lista de vulnerabilidades que este hospedador tiene ahora. Los retransmisores de spam y los servidores proxy HTTP, por supuesto, tienen un consumo de ancho de banda o un patrÃ³n de trÃ¡fico asociado. Los ataques de denegaciÃ³n de servicio en Internet tendrÃ­an un tiempo de activaciÃ³n establecido, un objetivo y un patrÃ³n de trÃ¡fico. El daÃ±o de los datos tendrÃ­a una probabilidad asociada de que el anfitriÃ³n muera debido al daÃ±o. En la Figura 1, se resume este modelo general de un gusano. Por favor, tenga en cuenta que en este modelo no hay aprendizaje, o muy poco, intercambio de informaciÃ³n entre las instancias de gusano, y ciertamente no hay coordinaciÃ³n de acciones. En la siguiente secciÃ³n ampliamos el modelo para incluir dichos mecanismos, y por lo tanto, llegamos al modelo general de un gusano en enjambre. 2.5 Enjambres - Modelo General Como se describe en la secciÃ³n 1, las caracterÃ­sticas bÃ¡sicas que distinguen el comportamiento en enjambre de lo que simplemente parece ser comportamientos colectivos coordinados son cuatro atributos bÃ¡sicos. Estos son: 1. Sencillez de lÃ³gica y acciones; 2. Mecanismos de ComunicaciÃ³n Local; 3. Control distribuido; y 4. Inteligencia emergente, incluyendo autoorganizaciÃ³n. 325 Estructura FunciÃ³n/Ejemplo InfecciÃ³n, Vector de InfecciÃ³n El ejecutable se ejecuta ProtecciÃ³n y sigilo Deshabilitar McAfee (Mantenerse vivo) PropagaciÃ³n Enviar correo electrÃ³nico a todos en la libreta de direcciones AcciÃ³n basada en objetivos (ABO) DDoS www.sco.com Todo lo demÃ¡s, a menudo llamado carga Ãºtil Figura 1: Modelo general de gusano En este trabajo agregamos todos estos atributos bajo el tÃ­tulo general de Aprendizaje, ComunicaciÃ³n y Control Distribuido. La presencia de estos atributos distingue a los gusanos de enjambre de los gusanos regulares, u otros tipos de malware como los Zombies. En la figura ? ?, el modelo genÃ©rico de un gusano se amplÃ­a para incluir este conjunto de acciones. Dentro de este contexto, un gusano como Slammer no puede ser categorizado como un gusano en enjambre debido a que las nuevas instancias del gusano no coordinan sus acciones ni comparten informaciÃ³n. Por otro lado, los zombies y muchas otras formas de DDoS, que a primera vista pueden considerarse gusanos enjambre, no lo son. Esto se debe simplemente al hecho de que en el caso de los zombies, el control no estÃ¡ distribuido sino centralizado, y no surgen comportamientos emergentes. Lo Ãºltimo, la posible apariciÃ³n de inteligencia o nuevos comportamientos es lo que hace que los gusanos en enjambre sean potencialmente peligrosos. Finalmente, cuando se considera la mayorÃ­a de las interrupciones recientes en la Infraestructura de Internet, y a la luz de nuestra descripciÃ³n de los ataques en enjambre, entonces dichas interrupciones pueden ser fÃ¡cilmente categorizadas como precursores de un comportamiento verdaderamente en enjambre. EspecÃ­ficamente, â¢ DDOS: Un gran nÃºmero de hosts comprometidos envÃ­an paquetes inÃºtiles que requieren procesamiento (Stacheldraht, http://www.cert.org/incidentnotes/IN-99-04.html). Los ataques DDoS son los precursores tempranos de los Ataques en Enjambre debido al gran nÃºmero de agentes involucrados. â¢ Code Red CrV1, Code Red II, Nimbda - Exhiben nociones tempranas de ataques en enjambre, incluyendo un canal de comunicaciÃ³n oculto. â¢ Staniford & Paxson en Â¿CÃ³mo Dominar Internet en Tu Tiempo Libre? exploran modificaciones a CrV1, Code Red I, II con un tipo de comportamiento similar a un enjambre. Por ejemplo, especulan sobre nuevos gusanos que emplean comunicaciÃ³n directa de gusano a gusano y utilizan actualizaciones programables. Por ejemplo, el gusano Warhol y los gusanos de Permutation-Scanning (autocoordinados). 2.6 Gusano Swarm: los detalles Al considerar la creaciÃ³n de lo que creÃ­amos que era el primer Gusano Swarm en existencia, querÃ­amos adherirnos lo mÃ¡s cercanamente posible al modelo general presentado en la secciÃ³n ? ? mientras facilitÃ¡bamos al mismo tiempo un anÃ¡lisis a gran escala, tanto empÃ­rico como a travÃ©s de simulaciones, del comportamiento del enjambre. Por esta razÃ³n, seleccionamos como primera instancia Estructura FunciÃ³n/Ejemplo InfecciÃ³n, InfecciÃ³n Vector Ejecutable se ejecuta ProtecciÃ³n y Sigilo Deshabilitar McAfee (ManteniÃ©ndose Vivo) PropagaciÃ³n Enviar correo electrÃ³nico a todos en la libreta de direcciones Aprendizaje, ComunicaciÃ³n, Feromonas/Banderas (Prueba y Control Distribuido si el Gusano ya estÃ¡ presente) Bombas de tiempo, Algoritmos de Aprendizaje, Canal IRC AcciÃ³n Basada en Objetivos (ABO) DDoS www.sco.com Todo lo demÃ¡s, a menudo llamado carga Ãºtil Figura 2: Modelo General de un Gusano de Enjambre del enjambre un gusano simple de craqueo de contraseÃ±as. El objetivo de este gusano simplemente es infectar a un anfitriÃ³n intentando secuencialmente iniciar sesiÃ³n en el anfitriÃ³n utilizando contraseÃ±as conocidas (ataque de diccionario), contraseÃ±as que han sido descubiertas previamente por cualquier miembro del enjambre, y contraseÃ±as aleatorias. Una vez que un huÃ©sped estÃ¡ infectado, el gusano crearÃ¡ canales de comunicaciÃ³n tanto con sus vecinos conocidos en ese momento, como con cualquier descendencia que genere con Ã©xito. En este contexto, una generaciÃ³n exitosa de una descendencia significa simplemente infectar a un nuevo huÃ©sped y replicar una copia exacta de sÃ­ misma en dicho huÃ©sped. Llamamos a este gusano enjambre el gusano ZachiK en honor a uno de sus creadores. Como se puede ver en esta descripciÃ³n, el gusano ZachiK exhibe todos los elementos descritos anteriormente. En las siguientes secciones, describimos detalladamente cada uno de los elementos del gusano ZachiK. 2.7 Vector de InfecciÃ³n El vector de infecciÃ³n utilizado por el gusano ZachiK es el protocolo de shell seguro SSH. Se escribiÃ³ un cliente modificado que es capaz de recibir contraseÃ±as desde la lÃ­nea de comandos, e integrado con un script que le suministra diversas contraseÃ±as: conocidas y aleatorias. Cuando se encuentra una contraseÃ±a para un objetivo adecuado, comienza el proceso de infecciÃ³n. DespuÃ©s de descubrir la contraseÃ±a de root de un host, el gusano infecta el host objetivo y se replica a sÃ­ mismo. El gusano crea un nuevo directorio en el host objetivo, copia el cliente ssh modificado, el script, los servidores de comunicaciones y las versiones actualizadas de los archivos de datos (lista de contraseÃ±as conocidas y una lista de vecinos actuales). Luego ejecuta el script modificado en los hosts reciÃ©n infectados, lo que genera el servidor de comunicaciones, notifica a los vecinos y comienza a buscar nuevos objetivos. Se podrÃ­a argumentar, de manera correcta, que el gusano ZachiK puede ser fÃ¡cilmente derrotado por las tÃ©cnicas de contramedidas actuales presentes en la mayorÃ­a de los sistemas hoy en dÃ­a, como la prohibiciÃ³n de accesos directos de root desde la red. Dentro de este contexto, ZachiK puede ser rÃ¡pidamente descartado como un gusano muy simple e inofensivo que no requiere un estudio adicional. Sin embargo, el lector deberÃ­a considerar lo siguiente: 1. ZachiK se puede modificar fÃ¡cilmente para incluir una variedad de vectores de infecciÃ³n. Por ejemplo, podrÃ­a programarse para adivinar nombres de usuario comunes y sus contraseÃ±as; obtener acceso al sistema, luego adivinar la contraseÃ±a de root o utilizar otras vulnerabilidades conocidas para obtener privilegios de root. ZachiK es un gusano de prueba de concepto. La importancia de ZachiK radica en que incorpora todos los comportamientos de un gusano en enjambre, incluyendo, pero no limitÃ¡ndose a, el control distribuido, la comunicaciÃ³n entre agentes y el aprendizaje; 3. ZachiK estÃ¡ compuesto por una gran colecciÃ³n de agentes que operan de forma independiente, lo que se presta naturalmente a algoritmos paralelos como la bÃºsqueda paralela del espacio de direcciones IPV4. Dentro de este contexto, SLAMMER incorpora una capacidad de bÃºsqueda paralela de direcciones potencialmente susceptibles. Sin embargo, a diferencia de ZachiK, el conocimiento descubierto por la bÃºsqueda nunca se comparte entre los agentes. Por estas razones, y muchas otras, no se debe descartar el potencial de esta nueva clase de gusanos, sino mÃ¡s bien abrazar su estudio. 2.8 AutopreservaciÃ³n En el caso del gusano ZachiK, las principales tÃ©cnicas de autopreservaciÃ³n utilizadas son simplemente mantener el tamaÃ±o de la carga Ãºtil pequeÃ±o. En este contexto, esto simplemente significa restringir la cantidad de contraseÃ±as que una descendencia hereda, enmascarar mensajes de gusano como solicitudes http comunes y limitar el nÃºmero de vecinos a un mÃ¡ximo de cinco-(5). 2.9 PropagaciÃ³n Elegir el(los) prÃ³ximo(s) objetivo(s) de manera eficiente requiere reflexiÃ³n. En el pasado, los gusanos conocidos y propuestos, ver [5], han aplicado tÃ©cnicas de propagaciÃ³n que variaban. Estos incluyen: selecciÃ³n estrictamente aleatoria de un posible anfitriÃ³n vulnerable; listas de objetivos de anfitriones vulnerables; selecciÃ³n aleatoria localmente sesgada (seleccionar un objetivo de anfitriÃ³n al azar de una subred local); y una combinaciÃ³n de algunas o todas las anteriores. En nuestros entornos de prueba y simulaciÃ³n, aplicaremos una combinaciÃ³n de selecciÃ³n localmente sesgada y totalmente aleatoria de posibles hosts vulnerables. Sin embargo, debido a que el gusano ZachiK es un gusano enjambre, la informaciÃ³n de descubrimiento de direcciones (es decir, cuando se descubren direcciones inexistentes) se compartirÃ¡ entre los miembros del enjambre. Los hilos de infecciÃ³n y propagaciÃ³n realizan el siguiente conjunto de actividades repetidamente: â¢ Elegir una direcciÃ³n â¢ Verificar la validez de la direcciÃ³n â¢ Elegir un conjunto de contraseÃ±as â¢ Intentar infectar al host seleccionado con este conjunto de contraseÃ±as. Como se describiÃ³ anteriormente, la elecciÃ³n de una direcciÃ³n hace uso de una combinaciÃ³n de selecciÃ³n aleatoria, sesgo local y listas de objetivos. EspecÃ­ficamente, para elegir una direcciÃ³n, la instancia puede: â¢ Generar una nueva direcciÃ³n aleatoria â¢ Generar una direcciÃ³n en la red local â¢ Elegir una direcciÃ³n de una lista de transferencia La elecciÃ³n se realiza de forma aleatoria entre estas opciones, y puede variarse para probar la dependencia de la propagaciÃ³n en elecciones particulares. Las contraseÃ±as son elegidas de una lista de contraseÃ±as conocidas o generadas recientemente. Cuando una infecciÃ³n de una direcciÃ³n vÃ¡lida falla, se agrega a una lista de entregas, que se envÃ­a a los vecinos para intentar solucionar el problema. 2.10 Aprendizaje, ComunicaciÃ³n y Control Distribuido 2.10.1 ComunicaciÃ³n El concepto de un enjambre se basa en la transferencia de informaciÃ³n entre vecinos, quienes retransmiten sus nuevos mensajes entrantes a sus vecinos, y asÃ­ sucesivamente hasta que cada instancia del gusano en el enjambre estÃ© al tanto de estos mensajes. Hay dos clases de mensajes: mensajes de datos o informaciÃ³n y comandos. Los mensajes de comando estÃ¡n destinados a un usuario externo (tambiÃ©n conocidos como hackers y/o crackers) para controlar las acciones de las instancias, y actualmente no estÃ¡n implementados. Los mensajes de informaciÃ³n actualmente son de tres tipos: nuevo miembro, contraseÃ±as y direcciones explotables (transferencias). Los mensajes de nuevo miembro son mensajes que una nueva instancia envÃ­a a los vecinos en su lista (corta) de vecinos iniciales. Los vecinos luego registran estas instancias en su lista de vecinos. Estos son mensajes que forman la multi-conectividad del enjambre, y sin ellos, la topologÃ­a serÃ­a una estructura en forma de Ã¡rbol, donde la eliminaciÃ³n de un solo nodo harÃ­a que las instancias debajo de Ã©l fueran inaccesibles. Los mensajes de contraseÃ±as informan instancias de contraseÃ±as reciÃ©n descubiertas, y al informar a todas las instancias, el enjambre en su totalidad recopila esta informaciÃ³n, lo que le permite infectar nuevas instancias de manera mÃ¡s efectiva. Los mensajes de entrega informan instancias de direcciones vÃ¡lidas que no pudieron ser comprometidas (fallaron al romper la contraseÃ±a de la cuenta root). Dado que el espacio de direcciones es bastante disperso, lleva un tiempo relativamente largo (es decir, muchos intentos) descubrir una direcciÃ³n vÃ¡lida. Por lo tanto, al entregar las direcciones vÃ¡lidas descubiertas, el enjambre estÃ¡ (a) conservando energÃ­a al no redescubrir las mismas direcciones (b) atacando de manera mÃ¡s efectiva. De cierta manera, esto es una simple instancia de actividad coordinada de un enjambre. 2.10.2 CoordinaciÃ³n Cuando nace una instancia de gusano, transmite su existencia a todos los vecinos en su lista. El hilo principal luego genera algunas hebras de infecciÃ³n y continÃºa manejando mensajes entrantes (registrando vecinos, agregando nuevas contraseÃ±as, recibiendo direcciones y transmitiendo estos mensajes). 2.10.3 Control Distribuido El control en el gusano ZachiK es distribuido en el sentido de que cada instancia del gusano realiza un conjunto de acciones de forma independiente de cada otra instancia, al mismo tiempo que se beneficia del aprendizaje logrado por sus vecinos inmediatos. 2.11 Acciones Basadas en Objetivos La primera instancia del gusano ZachiK tiene dos objetivos bÃ¡sicos. Estos son: (1) propagar, y (2) descubrir y compartir con los miembros de la colonia nuevas contraseÃ±as de root. 3. DISEÃO EXPERIMENTAL Para verificar nuestra hipÃ³tesis de que los Gusanos de Enjambre son mÃ¡s capaces y, por lo tanto, mÃ¡s peligrosos que otros 327 gusanos conocidos, se creÃ³ un banco de pruebas de red y se desarrollÃ³ un simulador capaz de simular topologÃ­as a gran escala similares a Internet (espacio IPV4). El banco de pruebas de red consistÃ­a en una red de Ã¡rea local de 30 computadoras basadas en Linux. El simulador fue escrito en C++. El gusano de enjambre simple descrito en la secciÃ³n 2.6 se utilizÃ³ para infectar al paciente cero, y luego se permitiÃ³ que el gusano de enjambre se propagara a travÃ©s de sus propios mecanismos de propagaciÃ³n, control distribuido y comportamientos de enjambre. En el caso de una red de Ã¡rea local simple de 30 computadoras, se seleccionaron seis (6) contraseÃ±as raÃ­z diferentes de un espacio de contraseÃ±as de 4 dÃ­gitos (10000 opciones). Al comienzo del experimento se conoce una Ãºnica contraseÃ±a, la del paciente cero. Todas las contraseÃ±as compartidas se distribuyen aleatoriamente en todos los nodos. De manera similar, en el caso de la simulaciÃ³n, se construyÃ³ una topologÃ­a de red de 10,000 hosts cuyas direcciones fueron seleccionadas al azar en el espacio IPV4. Dentro de ese espacio, se seleccionaron y distribuyeron un total de 200 contraseÃ±as compartidas ya sea de forma aleatoria y/o dirigida a subredes especÃ­ficas de topologÃ­as de red. Por ejemplo, en una de nuestras ejecuciones de simulaciÃ³n, la topologÃ­a de red consistÃ­a en 200 subredes, cada una conteniendo 50 hosts. En dicha topologÃ­a, las contraseÃ±as compartidas se distribuÃ­an en subredes donde un porcentaje variable de contraseÃ±as se compartÃ­an entre subredes. Los porcentajes de contraseÃ±as compartidas utilizadas reflejaban los primeros estudios empÃ­ricos, donde se descubriÃ³ que hasta el 39.7% de las contraseÃ±as comunes eran compartidas. RESULTADOS En la Figura 3 se presentan los resultados comparando el comportamiento del Ataque de Enjambre versus el de un Gusano Malformado tÃ­pico para una LAN de 30 nodos. En este conjunto de ejecuciones empÃ­ricas, seis (6) contraseÃ±as compartidas fueron distribuidas al azar en todos los nodos de un total de 10,000 contraseÃ±as desconocidas posibles. Los datos presentados reflejan los comportamientos de un total de tres (3) clases distintas de gusanos o enjambres de gusanos. La clase de gusanos presentada es la siguiente: â¢ I-NS-NL:= Gusano genÃ©rico, independiente (I), sin aprendizaje/sin memoria (NL), y sin compartir informaciÃ³n con vecinos o descendientes (NS); â¢ S-L-SP:= Gusano en enjambre (S), aprendizaje (L), mantiene una lista de contraseÃ±as aprendidas, y comparte contraseÃ±as (SP) con vecinos mÃ¡s cercanos y descendientes; y â¢ S-L-SP&A:= Gusano en enjambre (S), aprendizaje (L), mantiene una lista de contraseÃ±as aprendidas, y comparte contraseÃ±as y direcciones existentes (SP&A) con vecinos mÃ¡s cercanos y descendientes. Como se muestra en la Figura 3, los resultados validan nuestra hipÃ³tesis original de que los gusanos en enjambre son significativamente mÃ¡s eficientes y peligrosos que los gusanos genÃ©ricos. En este conjunto de experimentos, el compartir contraseÃ±as proporciona una mejora de un orden de magnitud sobre un gusano aleatorio sin memoria. De manera similar, un gusano en enjambre que comparte contraseÃ±as y direcciones es aproximadamente dos Ã³rdenes de magnitud mÃ¡s eficiente que su contraparte genÃ©rica. En la Figura 3, se pueden observar una serie de discontinuidades. Estas discontinuidades son un artefacto del pequeÃ±o espacio muestral utilizado para este experimento. BÃ¡sicamente, tan pronto como se rompe una contraseÃ±a, todos los nodos que comparten esa contraseÃ±a especÃ­fica se infectan en cuestiÃ³n de segundos. Ten en cuenta que es trivial para un gusano en enjambre escanear y descubrir un pequeÃ±o espacio de contraseÃ±as compartidas. En la Figura 4, se presentan los resultados de la simulaciÃ³n comparando el Comportamiento de Ataque de Enjambre con el de un Gusano Malformado GenÃ©rico. En este conjunto de ejecuciones de simulaciÃ³n, se construyÃ³ una topologÃ­a de red de 10,000 hosts, cuyas direcciones fueron seleccionadas aleatoriamente en el espacio IPV4. Dentro de ese espacio, se seleccionaron y distribuyeron un total de 200 contraseÃ±as compartidas ya sea de forma aleatoria y/o dirigida a subredes especÃ­ficas de topologÃ­as de red. Los datos presentados reflejan los comportamientos de tres (3) clases distintas de gusanos o gusanos en enjambre y dos (2) estrategias de exploraciÃ³n de selecciÃ³n de objetivo de host diferentes (exploraciÃ³n aleatoria y sesgo local). La cantidad de sesgo local variÃ³ en mÃºltiples ejecuciones de simulaciÃ³n. Los resultados presentados son comportamientos agregados. En general, se simularon las siguientes clases de Gusanos GenÃ©ricos y Gusanos en Enjambre. ExploraciÃ³n de direcciones: â¢ Aleatoria:= las direcciones se seleccionan al azar de un subconjunto del espacio IPV4, es decir, un espacio de 224 direcciones; y â¢ Sesgo local:= las direcciones se seleccionan al azar de una subred local (256 direcciones) o de un subconjunto del espacio IPV4, es decir, un espacio de 224 direcciones. El porcentaje de sesgo local varÃ­a en mÃºltiples ejecuciones. Aprendizaje, ComunicaciÃ³n y Control Distribuido â¢ I-NL-NS: Gusano genÃ©rico, independiente (I), sin aprendizaje/sin memoria (NL), y sin compartir informaciÃ³n con vecinos o descendientes (NS); â¢ I-L-OOS: Gusano genÃ©rico, independiente (I), con aprendizaje/sin memoria (L), y compartiendo informaciÃ³n una sola vez con descendientes solamente (OOS); â¢ S-L-SP:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte contraseÃ±as (SP) con vecinos mÃ¡s cercanos y descendientes; â¢ S-L-S&AOP:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte direcciones con vecinos y descendientes, comparte contraseÃ±as solo una vez (al crearse) con descendientes (SA&OP); â¢ S-L-SP&A:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte contraseÃ±as y direcciones existentes (SP&A) con vecinos mÃ¡s cercanos y descendientes. Como se muestra en la Figura 4, los resultados son consistentes con nuestro conjunto de resultados empÃ­ricos. AdemÃ¡s, se pueden hacer las siguientes observaciones. 1. La preferencia local es increÃ­blemente efectiva. Las transferencias cortas de direcciÃ³n son mÃ¡s efectivas que las largas. Variamos el tamaÃ±o de la lista permitida en el intercambio de direcciones; el sobrecosto asociado con una lista de direcciones larga es perjudicial para el rendimiento del gusano en enjambre, asÃ­ como para su sigilo; 3. Para el caso de sesgo local, compartir direcciones vÃ¡lidas de host susceptibles, el gusano S-L-S&AOP (recuerde, el enjambre S-L-S&AOP comparte contraseÃ±as, solo una vez, con descendientes 328 en el momento de la creaciÃ³n) es mÃ¡s efectivo que compartir contraseÃ±as en el caso del enjambre S-L-SP. En este caso, podemos pensar en el enjambre como lanzando un ataque de diccionario distribuido: diferentes segmentos del enjambre utilizan diferentes contraseÃ±as para intentar ingresar a hosts no infectados susceptibles. En el modo de sesgo local, al principio de la vida del enjambre, compartir direcciones es mÃ¡s efectivo que compartir contraseÃ±as, hasta que se descubran la mayorÃ­a de las subredes. Entonces, el apuntar a direcciones locales ayuda a descubrir los hosts susceptibles, mientras que los miembros del enjambre necesitan perder tiempo redescubriendo contraseÃ±as; y 4. Infectar el Ãºltimo 0.5% de los nodos lleva mucho tiempo en modo de sesgo no local. BÃ¡sicamente, la lista de contraseÃ±as compartidas entre subredes se ha agotado, y el enjambre vuelve a simplemente descubrir una contraseÃ±a al azar. Figura 3: Comportamiento del Ataque de Enjambre vs Gusano Malformado: Resultados EmpÃ­ricos, LAN de 30 nodos Figura 4: Comportamiento del Ataque de Enjambre vs Gusano Malformado: Resultados de SimulaciÃ³n 5. RESUMEN Y TRABAJO FUTURO En este manuscrito, hemos presentado un modelo abstracto, similar en algunos aspectos al de Weaver [5], que ayuda a explicar la naturaleza genÃ©rica de los gusanos. El modelo presentado en la secciÃ³n 2 se extendiÃ³ para incorporar una nueva clase de gusanos potencialmente peligrosos llamados Gusanos en Enjambre. Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biolÃ³gicos y muestran un alto grado de aprendizaje, comunicaciÃ³n e inteligencia distribuida. Tales gusanos en enjambre son potencialmente mÃ¡s daÃ±inos que sus contrapartes genÃ©ricas. AdemÃ¡s, se creÃ³ la primera instancia, que sepamos, de un gusano de aprendizaje, llamado ZachiK. ZachiK es un gusano enjambre de descifrado de contraseÃ±as simple que incorpora diferentes estrategias de aprendizaje y comparticiÃ³n de informaciÃ³n. Un gusano de enjambre similar fue desplegado tanto en una red de Ã¡rea local de treinta (30) hosts, como simulado en una topologÃ­a de 10,000 nodos. Los resultados preliminares mostraron que tales gusanos son capaces de comprometer a los anfitriones a tasas hasta 2 Ã³rdenes de magnitud mÃ¡s rÃ¡pido que su contraparte genÃ©rica, manteniendo al mismo tiempo sus capacidades de sigilo. Este trabajo abre una nueva Ã¡rea de problemas interesantes. Algunos de los problemas mÃ¡s interesantes y urgentes a considerar son los siguientes: â¢ Â¿Es posible aplicar algunos de los conceptos de aprendizaje desarrollados en los Ãºltimos diez aÃ±os en las Ã¡reas de inteligencia de enjambre, sistemas de agentes y control distribuido al diseÃ±o de gusanos de enjambre sofisticados de tal manera que se produzca un verdadero comportamiento emergente? â¢ Â¿Son efectivas las tÃ©cnicas actuales que se estÃ¡n desarrollando en el diseÃ±o de Sistemas de DetecciÃ³n y Contramedidas de IntrusiÃ³n y sistemas supervivientes contra esta nueva clase de gusanos?; y â¢ Â¿QuÃ© tÃ©cnicas, si las hay, se pueden desarrollar para crear defensas contra los gusanos de enjambre? 6. AGRADECIMIENTOS Este trabajo se realizÃ³ como parte de un esfuerzo mÃ¡s amplio en el desarrollo de sistemas de DetecciÃ³n de Intrusiones y Contramedidas de prÃ³xima generaciÃ³n en WSSRL. El trabajo se lleva a cabo bajo los auspicios de la subvenciÃ³n ACG-2004-06 otorgada por Acumen Consulting Group, Inc., Marlboro, Massachusetts. REFERENCIAS [1] C.C. Zou, L. Gao, W. G., y Towsley, D. Monitoreo y alerta temprana para gusanos de internet. En la 10Âª Conferencia ACM sobre Seguridad InformÃ¡tica y de Comunicaciones, Washington, DC (octubre de 2003). [2] Liu, S. y Passino, K. Inteligencia de enjambre: Resumen de la literatura. En el Departamento de IngenierÃ­a ElÃ©ctrica, Universidad Estatal de Ohio, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., y Weaver, N. La propagaciÃ³n del gusano saphire/slammer. Inf. tÃ©cnico, Un esfuerzo conjunto de CAIDA, ICSI, Silicon Defense, UC Berkeley EECS y UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S. y Cunningham, R. Una taxonomÃ­a de gusanos informÃ¡ticos. En Actas del Taller de ACM sobre Malware RÃ¡pido (WORM) (2003). 329 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "local communication mechanism": {
            "translated_key": "mecanismos de comunicaciÃ³n local",
            "is_in_text": true,
            "original_annotated_sentences": [
                "An Initial Analysis and Presentation of Malware Exhibiting Swarm-Like Behavior Fernando C.ColÂ´on Osorio Wireless System Security Research Laboratory (W.S.S.R.L.)",
                "420 Lakeside Avneue Marlboro, Massachusetts 01752 fcco@cs.wpi.edu Zachi Klopman Wireless System Security Research Laboratory (W.S.S.R.L.) 420 Lakeside Avneue Marlboro, Massachusetts 01752 zachi@cs.wpi.edu ABSTRACT The Slammer, which is currently the fastest computer worm in recorded history, was observed to infect 90 percent of all vulnerable Internets hosts within 10 minutes.",
                "Although the main action that the Slammer worm takes is a relatively unsophisticated replication of itself, it still spreads so quickly that human response was ineffective.",
                "Most proposed countermeasures strategies are based primarily on rate detection and limiting algorithms.",
                "However, such strategies are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In our work, we put forth the hypothesis that next generation worms will be radically different, and potentially such techniques will prove ineffective.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
                "Emergent Intelligence is the behavior of systems, very much like biological systems such as ants or bees, where simple local interactions of autonomous members, with simple primitive actions, gives rise to complex and intelligent global behavior.",
                "In this manuscript we will introduce the basic principles behind the idea of Swarm Worms, as well as the basic structure required in order to be considered a swarm worm.",
                "In addition, we will present preliminary results on the propagation speeds of one such swarm worm, called the ZachiK worm.",
                "We will show that ZachiK is capable of propagating at a rate 2 orders of magnitude faster than similar worms without swarm capabilities.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Intrusion Detection; D.4.6 [Security and Protection]: Invasive software General Terms Experimentation, Security 1.",
                "INTRODUCTION AND PREVIOUSWORK In the early morning hours (05:30 GMT) of January 25, 2003 the fastest computer worm in recorded history began spreading throughout the Internet.",
                "Within 10 minutes after the first infected host (patient zero), 90 percent of all vulnerable hosts had been compromised creating significant disruption to the global Internet infrastructure.",
                "Vern Paxson of the International Computer Science Institute and Lawrence Berkeley National Laboratory in its analysis of Slammer commented: The Slammer worm spread so quickly that human response was ineffective, see [4] The interesting part, from our perspective, about the spread of Slammer is that it was a relatively unsophisticated worm with benign behavior, namely self-reproduction.",
                "Since Slammer, researchers have explored the behaviors of fast spreading worms, and have designed countermeasures strategies based primarily on rate detection and limiting algorithms.",
                "For example, Zou, et al., [2], proposed a scheme where a Kalman filter is used to detect the early propagation of a worm.",
                "Other researchers have proposed the use of detectors where rates of Destination Unreachable messages are monitored by firewalls, and a significant increase beyond normal, alerts the organization to the potential presence of a worm.",
                "However, such strategies suffer from the fighting the last War syndrome.",
                "That is, systems are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In the work described here, we put forth the hypothesis that next generation worms will be different, and therefore such techniques may have some significant limitations.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
                "The concept of emergent intelligence was first studied in association with biological systems.",
                "In such studies, early researchers discovered a variety of interesting insect or animal behaviors in the wild.",
                "A flock of birds sweeps across the sky.",
                "A group of ants forages for food.",
                "A school of fish swims, turns, flees together away from a predator, ands so forth.",
                "In general, this kind of aggregate motion has been called swarm behavior.",
                "Biologists, and computer scientists in the field of artificial intelligence have studied such biological swarms, and 323 attempted to create models that explain how the elements of a swarm interact, achieve goals, and evolve.",
                "Moreover, in recent years the study of swarm intelligence has become increasingly important in the fields of robotics, the design of Mobile ad-hoc Networks (MANETS), the design of Intrusion Detection Systems, the study of traffic patterns in transportation systems, in military applications, and other areas, see [3].",
                "The basic concepts that have been developed over the last decade to explain swarms, and swarm behavior include four basic components.",
                "These are: 1.",
                "Simplicity of logic & actions: A swarm is composed of N agents whose intelligence is limited.",
                "Agents in the swarm use simple local rules to govern their actions.",
                "Some models called this primitive actions or behaviors; 2.",
                "Local Communication Mechanisms: Agents interact with other members in the swarm via simple <br>local communication mechanism</br>s.",
                "For example, a bird in a flock senses the position of adjacent bird and applies a simple rule of avoidance and follow. 3.",
                "Distributed control: Autonomous agents interact with their environment, which probably consists of other agents, but act relatively independently from all other agents.",
                "There is no central command or leader, and certainly there is no global plan. 4.",
                "Emergent Intelligence: Aggregate behavior of autonomous agents results in complex intelligent behaviors; including self-organization.",
                "In order to understand fully the behavior of such swarms it is necessary to construct a model that explains the behavior of what we will call generic worms.",
                "This model, which extends the work by Weaver [5] is presented here in section 2.",
                "In addition, we intend to extend said model in such a way that it clearly explains the behaviors of this new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
                "Such Swarm Worms are potentially more harmful than their similar generic counterparts.",
                "Specifically, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
                "ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
                "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms are capable of compromising hosts at rates up to two orders of magnitude faster than their generic counterpart.",
                "The rest of this manuscript is structure as follows.",
                "In section 2 an abstract model of both generic worms as well as swarm worms is presented.",
                "This model is used in section 2.6 to described the first instance of a swarm worm, ZachiK.",
                "In section 4, preliminary results via both empirical measurements as well as simulation is presented.",
                "Finally, in section 5 our conclusions and insights into future work are presented. 2.",
                "WORM MODELING In order to study the behavior of swarm worms in general, it is necessary to create a model that realistically reflects the structure of worms and it is not necessarily tied to a specific instance.",
                "In this section, we described such a model where a general worm is describe as having four-(4) basic components or subfunctions.",
                "By definition, a worm is a selfcontained, self propagating program.",
                "Thus, in simple terms, it has two main functions: that which propagates and that which does other things.",
                "We propose that there is a third broad functionality of a worm, that of self-preservation.",
                "We also propose that the other functionality of a worm may be more appropriately categorized as Goal-Based Actions (GBA), as whatever functionality included in a worm will naturally be dependent on whatever goals (and subgoals) the author has.",
                "The work presented by Weaver et. al. in [5] provides us with mainly an action and technique based taxonomy of computer worms, which we utilize and further extend here. 2.1 Propagation The propagation function itself may be broken down into three actions: acquire target, send scan, and infect target.",
                "Acquiring the target simply means picking a host to attack next.",
                "Sending a scan involves checking to see if that host is receptive to an infection attempt, since IP-space is sparsely populated.",
                "This may involve a simple ping to check if the host is alive or a full out vulnerability assessment.",
                "Infecting the target is the actual method used to send the worm code to the new host.",
                "In algorithm form: propagate() { host := acquire_target() success := send_scan(host) if( success ) then infect(host) endif } In the case of a simple worm which does not first check to see if the host is available or susceptible (such as Slammer), the scan method is dropped: propagate() { host := acquire_target() infect(host) } Each of these actions may have an associated cost to its inclusion and execution, such as increased worm size and CPU or network load.",
                "Depending on the authors needs or requirements, these become limiting factors in what may be included in the worms actions.",
                "This is discussed further after expanding upon these actions below. 2.2 Target Acquisition: The Target Acquisition phase of our worm algorithm is built directly off of the Target Discovery section in [5].",
                "Weaver et. al. taxonomize this task into 5 separate categories.",
                "Here, we further extend their work through parameterization.",
                "Scanning: Scanning may be considered an equation-based method for choosing a host.",
                "Any type of equation may be used to arrive at an IP address, but there are three main types seen thus far: sequential, random, and local preference.",
                "Sequential scanning is exactly as it sounds: start at an IP address and increment through all the IP space.",
                "This could carry with it the options of which IP to start with (user chosen value, random, or based on IP of infected host) and 324 how many times to increment (continuous, chosen value, or subnet-based).",
                "Random scanning is completely at random (depending on the chosen PRNG method and its seed value).",
                "Local preference scanning is a variance of either Sequential or Random, whereby it has a greater probability of choosing a local IP address over a remote one (for example, the traditional 80/20 split).",
                "Pre-generated Target Lists: Pre-generated Target Lists, or so called hit-lists, could include the options for percentage of total population and percentage wrong, or just number of IPs to include.",
                "Implicit to this type is the fact that the list is divided among a parent and its children, avoiding the problem of every instance hitting the exact same machines.",
                "Externally Generated Target Lists: Externally generated target lists depend on one or more external sources that can be queried for host data.",
                "This will involve either servers that are normally publicly available, such as gaming meta-servers, or ones explicitly setup by the worm or worm author.",
                "The normally available meta-servers could have parameters for rates of change, such as many popping up at night or leaving in the morning.",
                "Each server could also have a maximum queries/second that it would be able to handle.",
                "The worm would also need a way of finding these servers, either hard-coded or through scanning.",
                "Internal Target Lists: Internal Target Lists are highly dependent on the infected host.",
                "This method could parameterize the choice of how much info is on the host, such as all machines in subnet, all windows boxes in subnet, particular servers, number of internal/external, or some combination.",
                "Passive: Passive methods are determined by normal interactions between hosts.",
                "Parameters may include a rate of interaction with particular machines, internal/external rate of interaction, or subnet-based rate of interaction.",
                "Any of these methods may also be combined to produce different types of target acquisition strategies.",
                "For example, the a worm may begin with an initial hit-list of 100 different hosts or subnets.",
                "Once it has exhausted its search using the hit-list, it may then proceed to perform random scanning with a 50% local bias.",
                "It is important to note, however, that the resource consumption of each method is not the same.",
                "Different methods may require the worm to be large, such as the extra bytes required by a hit-list, or to take more processing time, such as by searching the host for addresses of other vulnerable hosts.",
                "Further research and analysis should be performed in this area to determine associated costs for using each method.",
                "The costs could then be used in determining design tradeoffs that worm authors engage at.",
                "For example, hit lists provide a high rate of infection, but at a high cost of worm payload size. 2.2.1 Sending a Scan The send scan function tests to see if the host is available for infection.",
                "This can be as simple as checking if the host is up on the network or as complex as checking if the host is vulnerable to the exploit which will be used.",
                "The sending of a scan before attempted infection can increase the scanning rate if the cost for failing an infection is greater than the cost of failing a scan or sending a scan plus infection; and failures are more frequent than successes.",
                "One important parameter to this would be the choice of transport protocol (TCP/UDP) or just simply the time for one successful scan and time for one failed scan.",
                "Also, whether or not it tests for the host to be up or if it is a full test for the vulnerability (or for multiple vulnerabilities). 2.2.2 Infection Vector (IV) The particular infection vector used to access the remote host is mainly dependent on the particular vulnerability chosen to exploit.",
                "In a non-specific sense, it is dependent on the transport protocol chosen to use and the message size to be sent.",
                "Section 3 of [5] also proposes three particular classes of IV: Self-carried, second channel, and embedded. 2.3 Self Preservation The Self Preservation actions of a worm may take many forms.",
                "In the wild, worms have been observed to disable anti-virus software or prevent sending itself to certain antivirusknown addresses.",
                "They have also been seen to attempt disabling of other worms which may be contending for the same system.",
                "We also believe that a time-based throttled scanning may help the worm to slip under the radar.",
                "We also propose a decoy method, whereby a worm will release a few children that cause a lot of noise so that the parent is not noticed.",
                "It has also been proposed [5] that a worm cause damage to its host if, and only if, it is disturbed in some way.",
                "This module could contain parameters for: probability of success in disabling anti-virus or other software updates, probability of being noticed and thus removed, or hardening of the host against other worms. 2.4 Goal-Based Actions A worms GBA functionality depends on the authors goal list.",
                "The Payloads section of [5] provides some useful suggestions for such a module.",
                "The opening of a back-door can make the host susceptible to more attacks.",
                "This would involve a probability of the back-door being used and any associated traffic utilization.",
                "It could also provide a list of other worms this host is now susceptible to or a list of vulnerabilities this host now has.",
                "Spam relays and HTTP-Proxies of course have an associated bandwidth consumption or traffic pattern.",
                "Internet DoS attacks would have a set time of activation, a target, and a traffic pattern.",
                "Data damage would have an associated probability that the host dies because of the damage.",
                "In Figure 1, this general model of a worm is summarized.",
                "Please note that in this model there is no learning, no, or very little, sharing of information between worm instances, and certainly no coordination of actions.",
                "In the next section we expand the model to include such mechanisms, and hence, arrive at the general model of a swarm worm. 2.5 Swarms - General Model As described in section 1, the basic characteristics that distinguished swarm behavior from simply what appears to be collective coordinated behaviors are four basic attributes.",
                "These are: 1.",
                "Simplicity of logic & actions; 2.",
                "Local Communication Mechanisms; 3.",
                "Distributed control; and 4.",
                "Emergent Intelligence, including self-organization. 325 Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 1: General Worm Model In this work we aggregate all of these attributes under the general title of Learning, Communication, and Distributed Control.",
                "The presence of these attributes distinguishes swarm worms from otherwise regular worms, or other types of malware such as Zombies.",
                "In figure ? ?, the generic model of a worm is expanded to included these set of actions.",
                "Within this context then, a worm like Slammer cannot be categorized as a swarm worm due to the fact that new instances of the worm do not coordinate their actions or share information.",
                "On the other hand, Zombies and many other forms of DDoS, which at first glance may be consider swarm worms are not.",
                "This is simply due to fact that in the case of Zombies, control is not distributed but rather centralized, and no emergent behaviors arise.",
                "The latter, the potential emergence of intelligence or new behaviors is what makes swarm worms so potentially dangerous.",
                "Finally, when one considers the majority of recent disruptions to the Internet Infrastructure, and in light of our description of swarm attacks, then said disruptions can be easily categorized as precursors to truly swarm behavior.",
                "Specifically, â¢ DDOS - Large number of compromised hosts send useless packets requiring processing (Stacheldraht, http : //www.cert.org/ incidentnotes/IN â 99 â 04.html).",
                "DDoS attacks are the early precursors to Swarm Attacks due to the large number of agents involved. â¢ Code Red CrV1, Code Red II, Nimbda - Exhibit early notions of swarm attacks, including a backdoor communication channel. â¢ Staniford & Paxson in How to Own the Internet in Your Spare Time? explore modifications to CrV1, Code Red I, II with a swarm like type of behavior.",
                "For example, they speculate on new worms which employ direct worm-to-worm communication, and employ programmable updates.",
                "For example the Warhol worm, and Permutation-Scanning (self coordinating) worms. 2.6 Swarm Worm: the details In considering the creation of what we believed to be the first Swarm Worm in existence, we wanted to adhere as close as possible to the general model presented in section ? ? while at the same time facilitating large scale analysis, both empirical and through simulations, of the behavior of the swarm.",
                "For this reason, we selected as the first instance Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Learning, Communication, Pheromones/Flags (Test and Distributed Control if Worm is already present) Time bombs, Learning Algorithms, IRC channel Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 2: General Model of a Swarm Worm of the swarm a simple password cracking worm.",
                "The objective of this worm simply is to infect a host by sequentially attempting to login into the host using well known passwords (dictionary attack), passwords that have been discovered previously by any member of the swarm, and random passwords.",
                "Once, a host is infected, the worm will create communication channels with both its known neighbors at that time, as well as with any offsprings that it successfully generates.",
                "In this context a successful generation of an offspring means simply infecting a new host and replicating an exact copy of itself in such a host.",
                "We call this swarm worm the ZachiK worm in honor of one of its creators.",
                "As it can be seen from this description, the ZachiK worm exhibits all of the elements described before.",
                "In the following sections, we described in detail each one of the elements of the ZachiK worm. 2.7 Infection Vector The infection vector used for ZachiK worm is the secure shell protocol SSH.",
                "A modified client which is capable of receiving passwords from the command line was written, and integrated with a script that supplies it with various passwords: known and random.",
                "When a password is found for an appropriate target, the infection process begins.",
                "After the root password of a host is discovered, the worm infects the target host and replicates itself.",
                "The worm creates a new directory in the target host, copies the modified ssh client, the script, the communications servers, and the updated versions of data files (list of known passwords and a list of current neighbors).",
                "It then runs the modified script on the newly infected hosts, which spawns the communications server, notifies the neighbors and starts looking for new targets.",
                "It could be argued, correctly, that the ZachiK worm can be easily defeated by current countermeasure techniques present on most systems today, such as disallowing direct root logins from the network.",
                "Within this context ZachiK can quickly be discarded as very simple and harmless worm that does not require further study.",
                "However, the reader should consider the following: 1.",
                "ZachiK can be easily modified to include a variety of infection vectors.",
                "For example, it could be programmed to guess common user names and their passwords; gain 326 access to a system, then guess the root password or use other well know vulnerabilities to gain root privileges; 2.",
                "ZachiK is a proof of concept worm.",
                "The importance of ZachiK is that it incorporates all of the behaviors of a swarm worm including, but not restricted to, distributed control, communication amongst agents, and learning; 3.",
                "ZachiK is composed of a large collection of agents operating independently which lends itself naturally to parallel algorithms such as a parallel search of the IPV4 address space.",
                "Within this context, SLAMMER, does incorporate a parallel search capability of potentially susceptible addresses.",
                "However, unlike ZachiK, the knowledge discovered by the search is never shared amongst the agents.",
                "For this reasons, and many others, one should not discard the potential of this new class of worms but rather embrace its study. 2.8 Self-Preservation In the case of ZachiK worm, the main self-preservation techniques used are simply keeping the payload small.",
                "In this context, this simply means restricting the number of passwords that an offspring inherits, masquerading worm messages as common http requests, and restricting the number of neighbors to a maximum of five-(5). 2.9 Propagation Choosing the next target(s) in an efficient matter requires thought.",
                "In the past, known and proposed worms, see [5], have applied propagation techniques that varied.",
                "These include: strictly random selection of a potential vulnerable host; target lists of vulnerable hosts; locally biased random selection (select a host target at random from a local subnet); and a combination of some or all of the above.",
                "In our test and simulation environments, we will apply a combination of locally biased and totally random selection of potential vulnerable hosts.",
                "However, due to the fact that the ZachiK worm is a swarm worm, address discovery (that is when non-existent addresses are discovered) information will be shared amongst members of the swarm.",
                "The infection and propagation threads do the following set of activities repeatedly: â¢ Choose an address â¢ Check the validity of the address â¢ Choose a set of passwords â¢ Try infecting the selected host with this set of passwords As described earlier, choosing an address makes use of a combination of random selection, local bias, and target lists.",
                "Specifically, to choose an address, the instance may either: â¢ Generate a new random address â¢ Generate an address on the local network â¢ Pick an address from a handoff list The choice is made randomly among these options, and can be varied to test the dependency of propagation on particular choices.",
                "Password are either chosen from the list of known passwords or newly generated.",
                "When an infection of a valid address fails, it is added to a list of handoffs, which is sent to the neighbors to try to work on. 2.10 Learning, CommunicationandDistributed Control 2.10.1 Communication The concept of a swarm is based on transfer of information amongst neighbors, which relay their new incoming messages to their neighbors, and so on until every worm instance in the swarm is aware of these messages.",
                "There are two classes of messages: data or information messages and commands.",
                "The command messages are meant for an external user (a.k.a., hackers and/or crackers) to control the actions of the instances, and are currently not implemented.",
                "The information messages are currently of three kinds: new member, passwords and exploitable addresses (handoffs).",
                "The new member messages are messages that a new instance sends to the neighbors on its (short) list of initial neighbors.",
                "The neighbors then register these instances in their neighbor list.",
                "These are messages that form the multi-connectivity of the swarm, and without them, the topology will be a treelike structure, where eliminating a single node would cause the instances beneath it to be inaccessible.",
                "The passwords messages inform instances of newly discovered passwords, and by informing all instances, the swarm as whole collects this information, which allows it to infect new instances more effectively.",
                "The handoffs messages inform instances of valid addresses that could not be compromised (fail at breaking the password for the root account).",
                "Since the address space is rather sparse, it takes a relatively long time (i.e. many trials) to discover a valid address.",
                "Therefore, by handing off discovered valid addresses, the swarm is (a) conserving energy by not re-discovering the same addresses (b) attacking more effectively.",
                "In a way, this is a simple instance of coordinated activity of a swarm. 2.10.2 Coordination When a worm instance is born, it relays its existence to all neighbors on its list.",
                "The main thread then spawns a few infection threads, and continues to handle incoming messages (registering neighbors, adding new passwords, receiving addresses and relaying these messages). 2.10.3 Distributed Control Control in the ZachiK worm is distributed in the sense that each instance of the worm performs a set of actions independently of every other instance while at the same time benefiting from the learning achieve by its immediate neighbors. 2.11 Goal Based Actions The first instantiation of the ZachiK worm has two basic goals.",
                "These are: (1) propagate, and (2) discover and share with members of th swarm new root passwords. 3.",
                "EXPERIMENTAL DESIGN In order to verify our hypothesis that Swarm Worms are more capable, and therefore dangerous than other well known 327 worms, a network testbed was created, and a simulator, capable of simulating large scale Internet-like topologies (IPV4 space), was developed.",
                "The network testbed consisted of a local area network of 30 Linux based computers.",
                "The simulator was written in C++ .",
                "The simple swarm worm described in section 2.6 was used to infect patient-zero, and then the swarm worm was allowed to propagate via its own mechanisms of propagation, distributed control, and swarm behaviors.",
                "In the case of a simple local area network of 30 computers, six-(6) different root passwords out of a password space of 4 digits (10000 options) were selected.",
                "At the start of the experiment a single known password is known, that of patient-zero.",
                "All shared passwords are distributed randomly across all nodes.",
                "Similarly, in the case of the simulation, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "For example, in one of our simulation runs, the network topology consisted of 200 subnets each containing 50 hosts.",
                "In such a topology, shared passwords were distributed across subnets where a varying percentage of passwords were shared across subnets.",
                "The percentages of shared passwords used was reflective of early empirical studies, where up to 39.7% of common passwords were found to be shared. 4.",
                "RESULTS In Figure 3, the results comparing Swarm Attack behavior versus that of a typical Malform Worm for a 30 node LAN are presented.",
                "In this set of empirical runs, six-(6) shared passwords were distributed at random across all nodes from a possible of 10,000 unknown passwords.",
                "The data presented reflects the behaviors of a total of three-(3) distinct classes of worm or swarm worms.",
                "The class of worms presented are as follows: â¢ I-NS-NL:= Generic worm, independent (I), no learning/memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; and â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 3, the results validate our original hypothesis that swarm worms are significantly more efficient and dangerous than generic worms.",
                "In this set of experiments, the sharing of passwords provides an order of magnitude improvement over a memoryless random worm.",
                "Similarly, a swarm worm that shares passwords and addresses is approximately two orders of magnitude more efficient than its generic counterpart.",
                "In Figure 3, a series of discontinuities can be observed.",
                "These discontinuities are an artifact of the small sample space used for this experiment.",
                "Basically, as soon as a password is broken, all nodes sharing that specific password are infected within a few seconds.",
                "Note that it is trivial for a swarm worm to scan and discovered a small shared password space.",
                "In Figure 4, the simulation results comparing Swarm Attack Behavior versus that of a Generic Malform Worm are presented.",
                "In this set of simulation runs, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "The data presented reflects the behaviors of three-(3) distinct classes of worm or swarm worms and two(2) different target host selection scanning strategies (random scanning and local bias).",
                "The amount of local bias was varied across multiple simulation runs.",
                "The results presented are aggregate behaviors.",
                "In general the following class of Generic Worms and Swarm Worms were simulated.",
                "Address Scanning: â¢ Random:= addresses are selected at random from a subset of the IPV4 space, namely, a 224 address space; and â¢ Local Bias:= addresses are selected at random from either a local subnet (256 addresses) or from a subset of the IPV4 space, namely, a 224 address space.",
                "The percentage of local bias is varied across multiple runs.",
                "Learning, Communication & Distributed Control â¢ I-NL-NS: Generic worm, independent (I), no learning/ memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ I-L-OOS: Generic worm, independent (I), learning/ memoryless (L), and one time sharing of information with offsprings only (OOS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; â¢ S-L-S&AOP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of addresses with neighbors and offsprings, shares passwords one time only (at creation) with offsprings(SA&OP); â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 4, the results are consistent with our set of empirical results.",
                "In addition, the following observations can be made. 1.",
                "Local preference is incredibly effective. 2.",
                "Short address handoffs are more effective than long ones.",
                "We varied the size of the list allowed in the sharing of addresses; the overhead associated with a long address list is detrimental to the performance of the swarm worm, as well as to its stealthiness; 3.",
                "For the local bias case, sharing valid addresses of susceptible host, S-L-S&AOP worm (recall, the S-L-S&AOP swarm shares passwords, one time only, with offsprings 328 at creation time) is more effective than sharing passwords in the case of the S-L-SP swarm.",
                "In this case, we can think of the swarm as launching a distributeddictionary attack: different segments of the swarm use different passwords to try to break into susceptible uninfected host.",
                "In the local bias mode, early in the life of the swarm, address-sharing is more effective than password-sharing, until most subnets are discovered.",
                "Then the targeting of local addresses assists in discovering the susceptible hosts, while the swarm members need to waste time rediscovering passwords; and 4.",
                "Infecting the last 0.5% of nodes takes a very long time in non-local bias mode.",
                "Basically, the shared password list across subnets has been exhausted, and the swarm reverts to simply a random discovery of password algorithm.",
                "Figure 3: Swarm Attack Behavior vs. Malform Worm: Empirical Results, 30node LAN Figure 4: Swarm Attack Behavior vs. Malform Worm: Simulation Results 5.",
                "SUMMARY AND FUTURE WORK In this manuscript, we have presented an abstract model, similar in some aspects to that of Weaver [5], that helps explain the generic nature of worms.",
                "The model presented in section 2 was extended to incorporate a new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
                "Such Swarm Worms are potentially more harmful than their generic counterparts.",
                "In addition, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
                "ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
                "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms is capable of compromising hosts a rates up to 2 orders of magnitude faster than its generic counterpart while retaining stealth capabilities.",
                "This work opens up a new area of interesting problems.",
                "Some of the most interesting and pressing problems to be consider are as follows: â¢ Is it possible to apply some of learning concepts developed over the last ten years in the areas of swarm intelligence, agent systems, and distributed control to the design of sophisticated swarm worms in such a way that true emergent behavior takes place? â¢ Are the current techniques being developed in the design of Intrusion Detection & CounterMeasure Systems and Survivable systems effective against this new class of worms? ; and â¢ What techniques, if any, can be developed to create defenses against swarm worms? 6.",
                "ACKNOWLEDGMENTS This work was conducted as part of a larger effort in the development of next generation Intrusion Detection & CounterMeasure Systems at WSSRL.",
                "The work is conducted under the auspices of Grant ACG-2004-06 by the Acumen Consulting Group, Inc., Marlboro, Massachusetts. 7.",
                "REFERENCES [1] C.C.",
                "Zou, L. Gao, W. G., and Towsley, D. Monitoring and early warning for internet worms.",
                "In 10th ACM Conference on Computer and Communications Security, Washington, DC (October 2003). [2] Liu, S., and Passino, K. Swarm intelligence: Literature overview.",
                "In Dept. of Electrical Engineering, The Ohio State University, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., and Weaver, N. The spread of the saphire/slammer worm.",
                "Tech. rep., A joint effort of CAIDA, ICSI, Silicon Defense, UC Berkeley EECS and UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S., and Cunningham, R. A taxonomy of computer worms.",
                "In Proceedings of the ACM Workshop on Rapid Malware (WORM) (2003). 329"
            ],
            "original_annotated_samples": [
                "Local Communication Mechanisms: Agents interact with other members in the swarm via simple <br>local communication mechanism</br>s."
            ],
            "translated_annotated_samples": [
                "Mecanismos de comunicaciÃ³n local: Los agentes interactÃºan con otros miembros en el enjambre a travÃ©s de simples <br>mecanismos de comunicaciÃ³n local</br>."
            ],
            "translated_text": "Un AnÃ¡lisis Inicial y PresentaciÃ³n de Malware que Exhibe Comportamiento Similar a un Enjambre por Fernando C. ColÃ³n Osorio Laboratorio de InvestigaciÃ³n en Seguridad de Sistemas InalÃ¡mbricos (W.S.S.R.L.) El Slammer, que actualmente es el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada, se observÃ³ infectando el 90 por ciento de todos los hosts vulnerables de Internet en 10 minutos. Aunque la acciÃ³n principal que realiza el gusano Slammer es una replicaciÃ³n relativamente poco sofisticada de sÃ­ mismo, se propaga tan rÃ¡pidamente que la respuesta humana fue ineficaz. La mayorÃ­a de las estrategias de contramedidas propuestas se basan principalmente en la detecciÃ³n de tasas y algoritmos de limitaciÃ³n. Sin embargo, se estÃ¡n diseÃ±ando y desarrollando estrategias para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En nuestro trabajo, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n radicalmente diferentes, y posiblemente dichas tÃ©cnicas resultarÃ¡n ineficaces. EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. La Inteligencia Emergente es el comportamiento de sistemas, muy similar a sistemas biolÃ³gicos como hormigas o abejas, donde las interacciones locales simples de miembros autÃ³nomos, con acciones primitivas simples, dan lugar a un comportamiento global complejo e inteligente. En este manuscrito introduciremos los principios bÃ¡sicos detrÃ¡s de la idea de los Gusanos en Enjambre, asÃ­ como la estructura bÃ¡sica requerida para ser considerado un gusano en enjambre. AdemÃ¡s, presentaremos resultados preliminares sobre las velocidades de propagaciÃ³n de un gusano de enjambre llamado gusano ZachiK. Demostraremos que ZachiK es capaz de propagarse a una velocidad 2 Ã³rdenes de magnitud mÃ¡s rÃ¡pida que gusanos similares sin capacidades de enjambre. CategorÃ­as y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: DetecciÃ³n de Intrusiones; D.4.6 [Seguridad y ProtecciÃ³n]: Software Invasivo TÃ©rminos Generales ExperimentaciÃ³n, Seguridad 1. INTRODUCCIÃN Y TRABAJO PREVIO En las primeras horas de la maÃ±ana (05:30 GMT) del 25 de enero de 2003, el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada comenzÃ³ a propagarse por Internet. Dentro de los 10 minutos posteriores al primer huÃ©sped infectado (paciente cero), el 90 por ciento de todos los huÃ©spedes vulnerables habÃ­an sido comprometidos, creando una interrupciÃ³n significativa en la infraestructura de Internet a nivel global. Vern Paxson del Instituto Internacional de Ciencias de la ComputaciÃ³n y del Laboratorio Nacional Lawrence Berkeley comentÃ³ en su anÃ¡lisis de Slammer: El gusano Slammer se propagÃ³ tan rÃ¡pidamente que la respuesta humana fue ineficaz, ver [4]. La parte interesante, desde nuestro punto de vista, sobre la propagaciÃ³n de Slammer es que era un gusano relativamente poco sofisticado con un comportamiento benigno, es decir, la auto-reproducciÃ³n. Desde Slammer, los investigadores han explorado los comportamientos de los gusanos de propagaciÃ³n rÃ¡pida y han diseÃ±ado estrategias de contramedidas basadas principalmente en la detecciÃ³n de la velocidad y algoritmos de limitaciÃ³n. Por ejemplo, Zou, et al., [2], propusieron un esquema donde se utiliza un filtro de Kalman para detectar la propagaciÃ³n temprana de un gusano. Otros investigadores han propuesto el uso de detectores donde las tasas de mensajes de Destino Inalcanzable son monitoreadas por los firewalls, y un aumento significativo mÃ¡s allÃ¡ de lo normal alerta a la organizaciÃ³n sobre la posible presencia de un gusano. Sin embargo, tales estrategias sufren del sÃ­ndrome de luchar la Ãºltima guerra. Es decir, se estÃ¡n diseÃ±ando y desarrollando sistemas para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En el trabajo descrito aquÃ­, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n diferentes, y por lo tanto, dichas tÃ©cnicas pueden tener algunas limitaciones significativas. EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. El concepto de inteligencia emergente fue estudiado por primera vez en asociaciÃ³n con sistemas biolÃ³gicos. En tales estudios, los primeros investigadores descubrieron una variedad de comportamientos interesantes de insectos o animales en la naturaleza. Una bandada de pÃ¡jaros cruza el cielo. Un grupo de hormigas busca comida. Una escuela de peces nada, gira, huye juntos lejos de un depredador, y asÃ­ sucesivamente. En general, este tipo de movimiento agregado se ha llamado comportamiento de enjambre. Los biÃ³logos y cientÃ­ficos de la computaciÃ³n en el campo de la inteligencia artificial han estudiado tales enjambres biolÃ³gicos y han intentado crear modelos que expliquen cÃ³mo interactÃºan los elementos de un enjambre, logran objetivos y evolucionan. AdemÃ¡s, en los Ãºltimos aÃ±os el estudio de la inteligencia de enjambre ha cobrado cada vez mÃ¡s importancia en los campos de la robÃ³tica, el diseÃ±o de Redes MÃ³viles Ad-hoc (MANETS), el diseÃ±o de Sistemas de DetecciÃ³n de Intrusiones, el estudio de patrones de trÃ¡fico en sistemas de transporte, en aplicaciones militares y otras Ã¡reas, ver [3]. Los conceptos bÃ¡sicos que se han desarrollado en la Ãºltima dÃ©cada para explicar los enjambres y su comportamiento incluyen cuatro componentes bÃ¡sicos. Estos son: 1. Sencillez de la lÃ³gica y acciones: Un enjambre estÃ¡ compuesto por N agentes cuya inteligencia es limitada. Los agentes en el enjambre utilizan reglas locales simples para gobernar sus acciones. Algunos modelos llaman a estas acciones o comportamientos primitivos; 2. Mecanismos de comunicaciÃ³n local: Los agentes interactÃºan con otros miembros en el enjambre a travÃ©s de simples <br>mecanismos de comunicaciÃ³n local</br>. Por ejemplo, un pÃ¡jaro en una bandada percibe la posiciÃ³n del pÃ¡jaro adyacente y aplica una regla simple de evitaciÃ³n y seguimiento. 3. Control distribuido: Los agentes autÃ³nomos interactÃºan con su entorno, que probablemente consiste en otros agentes, pero actÃºan relativamente de forma independiente de todos los demÃ¡s agentes. No hay un mando central o lÃ­der, y ciertamente no hay un plan global. Inteligencia emergente: El comportamiento agregado de agentes autÃ³nomos resulta en comportamientos inteligentes complejos, incluyendo la autoorganizaciÃ³n. Para comprender completamente el comportamiento de tales enjambres, es necesario construir un modelo que explique el comportamiento de lo que llamaremos gusanos genÃ©ricos. Este modelo, que amplÃ­a el trabajo de Weaver [5], se presenta aquÃ­ en la secciÃ³n 2. AdemÃ¡s, tenemos la intenciÃ³n de ampliar dicho modelo de tal manera que explique claramente los comportamientos de esta nueva clase de gusanos potencialmente peligrosos llamados Gusanos en Enjambre. Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biolÃ³gicos y muestran un alto grado de aprendizaje, comunicaciÃ³n e inteligencia distribuida. Tales gusanos en enjambre son potencialmente mÃ¡s daÃ±inos que sus contrapartes genÃ©ricas similares. EspecÃ­ficamente, la primera instancia, segÃºn nuestro conocimiento, de un gusano de aprendizaje de este tipo fue creado, llamado ZachiK. ZachiK es un gusano enjambre de descifrado de contraseÃ±as simple que incorpora diferentes estrategias de aprendizaje y comparticiÃ³n de informaciÃ³n. Un gusano de enjambre similar fue desplegado tanto en una red de Ã¡rea local de treinta (30) hosts, como simulado en una topologÃ­a de 10,000 nodos. Los resultados preliminares mostraron que dichos gusanos son capaces de comprometer a los anfitriones a velocidades hasta dos Ã³rdenes de magnitud mÃ¡s rÃ¡pidas que su contraparte genÃ©rica. El resto de este manuscrito estÃ¡ estructurado de la siguiente manera. En la secciÃ³n 2 se presenta un modelo abstracto tanto de gusanos genÃ©ricos como de gusanos en enjambre. Este modelo se utiliza en la secciÃ³n 2.6 para describir la primera instancia de un gusano enjambre, ZachiK. En la secciÃ³n 4, se presentan resultados preliminares a travÃ©s de mediciones empÃ­ricas y simulaciones. Finalmente, en la secciÃ³n 5 se presentan nuestras conclusiones y perspectivas sobre trabajos futuros. MODELADO DE GUSANOS Para estudiar el comportamiento de los gusanos en enjambre en general, es necesario crear un modelo que refleje de manera realista la estructura de los gusanos y que no estÃ© necesariamente ligado a una instancia especÃ­fica. En esta secciÃ³n, describimos un modelo en el que un gusano general se describe como teniendo cuatro (4) componentes bÃ¡sicos o subfunciones. Por definiciÃ³n, un gusano es un programa autocontenido y auto propagante. Por lo tanto, en tÃ©rminos simples, tiene dos funciones principales: la que se propaga y la que realiza otras tareas. Proponemos que hay una tercera amplia funcionalidad de un gusano, la de autoconservaciÃ³n. TambiÃ©n proponemos que la otra funcionalidad de un gusano podrÃ­a ser categorizada de manera mÃ¡s apropiada como Acciones Basadas en Objetivos (ABO), ya que cualquier funcionalidad incluida en un gusano dependerÃ¡ naturalmente de los objetivos (y subobjetivos) que tenga el autor. El trabajo presentado por Weaver et al. en [5] nos proporciona principalmente una taxonomÃ­a de gusanos informÃ¡ticos basada en acciones y tÃ©cnicas, la cual utilizamos y ampliamos aquÃ­. 2.1 PropagaciÃ³n La funciÃ³n de propagaciÃ³n en sÃ­ misma puede desglosarse en tres acciones: adquirir objetivo, enviar escaneo e infectar objetivo. Adquirir el objetivo simplemente significa elegir un anfitriÃ³n para atacar a continuaciÃ³n. Enviar un escaneo implica verificar si ese host estÃ¡ receptivo a un intento de infecciÃ³n, ya que el espacio de direcciones IP estÃ¡ escasamente poblado. Esto puede implicar un simple ping para verificar si el host estÃ¡ activo o una evaluaciÃ³n completa de vulnerabilidades. Infectar al objetivo es el mÃ©todo real utilizado para enviar el cÃ³digo del gusano al nuevo hospedador. En forma de algoritmo: propagar() { host := adquirir_objetivo() Ã©xito := enviar_escaneo(host) si( Ã©xito ) entonces infectar(host) fin si } En el caso de un gusano simple que no verifica primero si el host estÃ¡ disponible o susceptible (como Slammer), se elimina el mÃ©todo de escaneo: propagar() { host := adquirir_objetivo() infectar(host) } Cada una de estas acciones puede tener un costo asociado a su inclusiÃ³n y ejecuciÃ³n, como un aumento en el tamaÃ±o del gusano y la carga de CPU o red. Dependiendo de las necesidades o requisitos de los autores, estos se convierten en factores limitantes en lo que puede incluirse en las acciones de los gusanos. Esto se discute mÃ¡s a fondo despuÃ©s de expandir sobre estas acciones a continuaciÃ³n. 2.2 AdquisiciÃ³n de Objetivos: La fase de AdquisiciÃ³n de Objetivos de nuestro algoritmo de gusano se construye directamente a partir de la secciÃ³n de Descubrimiento de Objetivos en [5]. Weaver et al. clasifican esta tarea en 5 categorÃ­as separadas. AquÃ­, ampliamos aÃºn mÃ¡s su trabajo a travÃ©s de la parametrizaciÃ³n. Escaneo: El escaneo puede considerarse un mÃ©todo basado en ecuaciones para elegir un anfitriÃ³n. Cualquier tipo de ecuaciÃ³n puede ser utilizada para llegar a una direcciÃ³n IP, pero hasta ahora se han visto tres tipos principales: secuencial, aleatorio y preferencia local. El escaneo secuencial es exactamente como suena: comenzar en una direcciÃ³n IP e incrementar a travÃ©s de todo el espacio de direcciones IP. Esto podrÃ­a llevar consigo las opciones de quÃ© IP empezar (valor elegido por el usuario, aleatorio o basado en la IP del host infectado) y cuÃ¡ntas veces incrementar (continuo, valor elegido o basado en subred). El escaneo aleatorio es completamente al azar (dependiendo del mÃ©todo PRNG elegido y su valor de semilla). El escaneo de preferencia local es una variante de Secuencial o Aleatorio, en la que tiene una mayor probabilidad de elegir una direcciÃ³n IP local en lugar de una remota (por ejemplo, la divisiÃ³n tradicional de 80/20). Listas de objetivos pregeneradas: Las listas de objetivos pregeneradas, o tambiÃ©n llamadas listas de objetivos, podrÃ­an incluir opciones para el porcentaje de la poblaciÃ³n total y el porcentaje de errores, o simplemente el nÃºmero de direcciones IP a incluir. ImplÃ­cito en este tipo es el hecho de que la lista se divide entre un padre y sus hijos, evitando el problema de que cada instancia golpee exactamente las mismas mÃ¡quinas. Listas de objetivos generadas externamente: Las listas de objetivos generadas externamente dependen de una o mÃ¡s fuentes externas que pueden ser consultadas para obtener datos del host. Esto implicarÃ¡ servidores que normalmente estÃ¡n pÃºblicamente disponibles, como los meta-servidores de juegos, o aquellos configurados explÃ­citamente por el gusano o el autor del gusano. Los meta-servidores normalmente disponibles podrÃ­an tener parÃ¡metros para tasas de cambio, como muchos apareciendo por la noche o desapareciendo por la maÃ±ana. Cada servidor tambiÃ©n podrÃ­a tener un mÃ¡ximo de consultas por segundo que serÃ­a capaz de manejar. El gusano tambiÃ©n necesitarÃ­a una forma de encontrar estos servidores, ya sea codificada en duro o a travÃ©s de escaneo. Listas de Objetivos Internos: Las Listas de Objetivos Internos dependen en gran medida del host infectado. Este mÃ©todo podrÃ­a parametrizar la elecciÃ³n de cuÃ¡nta informaciÃ³n hay en el host, como todas las mÃ¡quinas en la subred, todas las computadoras con Windows en la subred, servidores especÃ­ficos, nÃºmero de internos/externos, o alguna combinaciÃ³n. Los mÃ©todos pasivos son determinados por las interacciones normales entre los anfitriones. Los parÃ¡metros pueden incluir una tasa de interacciÃ³n con mÃ¡quinas particulares, una tasa de interacciÃ³n interna/externa, o una tasa de interacciÃ³n basada en subredes. Cualquiera de estos mÃ©todos tambiÃ©n puede combinarse para producir diferentes tipos de estrategias de adquisiciÃ³n de objetivos. Por ejemplo, un gusano puede comenzar con una lista inicial de 100 hosts o subredes diferentes. Una vez que haya agotado su bÃºsqueda utilizando la lista de Ã©xitos, puede proceder a realizar un escaneo aleatorio con un sesgo local del 50%. Es importante tener en cuenta, sin embargo, que el consumo de recursos de cada mÃ©todo no es el mismo. Diferentes mÃ©todos pueden requerir que el gusano sea grande, como los bytes adicionales necesarios para una lista de objetivos, o que tome mÃ¡s tiempo de procesamiento, como al buscar direcciones de otros hosts vulnerables en el host. Se deben realizar investigaciones y anÃ¡lisis adicionales en esta Ã¡rea para determinar los costos asociados de utilizar cada mÃ©todo. Los costos podrÃ­an ser utilizados para determinar los compromisos de diseÃ±o en los que los autores de gusanos participan. Por ejemplo, las listas de objetivos proporcionan una alta tasa de infecciÃ³n, pero a un alto costo en el tamaÃ±o de la carga Ãºtil del gusano. 2.2.1 EnvÃ­o de un Escaneo La funciÃ³n de envÃ­o de escaneo prueba si el host estÃ¡ disponible para la infecciÃ³n. Esto puede ser tan simple como verificar si el host estÃ¡ activo en la red o tan complejo como verificar si el host es vulnerable al exploit que se utilizarÃ¡. El envÃ­o de un escaneo antes de intentar una infecciÃ³n puede aumentar la tasa de escaneo si el costo por fallar en una infecciÃ³n es mayor que el costo de fallar en un escaneo o de enviar un escaneo mÃ¡s una infecciÃ³n; y las fallas son mÃ¡s frecuentes que los Ã©xitos. Un parÃ¡metro importante para esto serÃ­a la elecciÃ³n del protocolo de transporte (TCP/UDP) o simplemente el tiempo para un escaneo exitoso y el tiempo para un escaneo fallido. AdemÃ¡s, ya sea que se pruebe si el host estÃ¡ activo o si es una prueba completa de la vulnerabilidad (o de mÃºltiples vulnerabilidades). 2.2.2 Vector de InfecciÃ³n (VI) El vector de infecciÃ³n particular utilizado para acceder al host remoto depende principalmente de la vulnerabilidad especÃ­fica elegida para explotar. En un sentido no especÃ­fico, depende del protocolo de transporte elegido para usar y del tamaÃ±o del mensaje que se va a enviar. La SecciÃ³n 3 de [5] tambiÃ©n propone tres clases particulares de IV: Autotransportado, segundo canal e incrustado. 2.3 AutopreservaciÃ³n Las acciones de autopreservaciÃ³n de un gusano pueden tomar muchas formas. En la naturaleza, se ha observado que los gusanos desactivan el software antivirus o evitan enviarse a ciertas direcciones conocidas por los antivirus. TambiÃ©n se ha observado que intentan deshabilitar otros gusanos que podrÃ­an estar compitiendo por el mismo sistema. TambiÃ©n creemos que un escaneo con limitaciÃ³n de tiempo podrÃ­a ayudar al gusano a pasar desapercibido. TambiÃ©n proponemos un mÃ©todo de seÃ±uelo, mediante el cual un gusano liberarÃ¡ a unos pocos hijos que causen mucho ruido para que el progenitor no sea notado. TambiÃ©n se ha propuesto [5] que un gusano cause daÃ±o a su huÃ©sped si, y solo si, se ve perturbado de alguna manera. Este mÃ³dulo podrÃ­a contener parÃ¡metros para: probabilidad de Ã©xito en deshabilitar actualizaciones de antivirus u otro software, probabilidad de ser detectado y por ende eliminado, o fortalecimiento del anfitriÃ³n contra otros gusanos. 2.4 Acciones Basadas en Objetivos La funcionalidad de GBA de un gusano depende de la lista de objetivos del autor. La secciÃ³n de Cargas Ãºtiles de [5] proporciona algunas sugerencias Ãºtiles para dicho mÃ³dulo. La apertura de una puerta trasera puede hacer que el anfitriÃ³n sea susceptible a mÃ¡s ataques. Esto implicarÃ­a una probabilidad de que se utilice la puerta trasera y cualquier utilizaciÃ³n de trÃ¡fico asociada. TambiÃ©n podrÃ­a proporcionar una lista de otros gusanos a los que este hospedador es ahora susceptible o una lista de vulnerabilidades que este hospedador tiene ahora. Los retransmisores de spam y los servidores proxy HTTP, por supuesto, tienen un consumo de ancho de banda o un patrÃ³n de trÃ¡fico asociado. Los ataques de denegaciÃ³n de servicio en Internet tendrÃ­an un tiempo de activaciÃ³n establecido, un objetivo y un patrÃ³n de trÃ¡fico. El daÃ±o de los datos tendrÃ­a una probabilidad asociada de que el anfitriÃ³n muera debido al daÃ±o. En la Figura 1, se resume este modelo general de un gusano. Por favor, tenga en cuenta que en este modelo no hay aprendizaje, o muy poco, intercambio de informaciÃ³n entre las instancias de gusano, y ciertamente no hay coordinaciÃ³n de acciones. En la siguiente secciÃ³n ampliamos el modelo para incluir dichos mecanismos, y por lo tanto, llegamos al modelo general de un gusano en enjambre. 2.5 Enjambres - Modelo General Como se describe en la secciÃ³n 1, las caracterÃ­sticas bÃ¡sicas que distinguen el comportamiento en enjambre de lo que simplemente parece ser comportamientos colectivos coordinados son cuatro atributos bÃ¡sicos. Estos son: 1. Sencillez de lÃ³gica y acciones; 2. Mecanismos de ComunicaciÃ³n Local; 3. Control distribuido; y 4. Inteligencia emergente, incluyendo autoorganizaciÃ³n. 325 Estructura FunciÃ³n/Ejemplo InfecciÃ³n, Vector de InfecciÃ³n El ejecutable se ejecuta ProtecciÃ³n y sigilo Deshabilitar McAfee (Mantenerse vivo) PropagaciÃ³n Enviar correo electrÃ³nico a todos en la libreta de direcciones AcciÃ³n basada en objetivos (ABO) DDoS www.sco.com Todo lo demÃ¡s, a menudo llamado carga Ãºtil Figura 1: Modelo general de gusano En este trabajo agregamos todos estos atributos bajo el tÃ­tulo general de Aprendizaje, ComunicaciÃ³n y Control Distribuido. La presencia de estos atributos distingue a los gusanos de enjambre de los gusanos regulares, u otros tipos de malware como los Zombies. En la figura ? ?, el modelo genÃ©rico de un gusano se amplÃ­a para incluir este conjunto de acciones. Dentro de este contexto, un gusano como Slammer no puede ser categorizado como un gusano en enjambre debido a que las nuevas instancias del gusano no coordinan sus acciones ni comparten informaciÃ³n. Por otro lado, los zombies y muchas otras formas de DDoS, que a primera vista pueden considerarse gusanos enjambre, no lo son. Esto se debe simplemente al hecho de que en el caso de los zombies, el control no estÃ¡ distribuido sino centralizado, y no surgen comportamientos emergentes. Lo Ãºltimo, la posible apariciÃ³n de inteligencia o nuevos comportamientos es lo que hace que los gusanos en enjambre sean potencialmente peligrosos. Finalmente, cuando se considera la mayorÃ­a de las interrupciones recientes en la Infraestructura de Internet, y a la luz de nuestra descripciÃ³n de los ataques en enjambre, entonces dichas interrupciones pueden ser fÃ¡cilmente categorizadas como precursores de un comportamiento verdaderamente en enjambre. EspecÃ­ficamente, â¢ DDOS: Un gran nÃºmero de hosts comprometidos envÃ­an paquetes inÃºtiles que requieren procesamiento (Stacheldraht, http://www.cert.org/incidentnotes/IN-99-04.html). Los ataques DDoS son los precursores tempranos de los Ataques en Enjambre debido al gran nÃºmero de agentes involucrados. â¢ Code Red CrV1, Code Red II, Nimbda - Exhiben nociones tempranas de ataques en enjambre, incluyendo un canal de comunicaciÃ³n oculto. â¢ Staniford & Paxson en Â¿CÃ³mo Dominar Internet en Tu Tiempo Libre? exploran modificaciones a CrV1, Code Red I, II con un tipo de comportamiento similar a un enjambre. Por ejemplo, especulan sobre nuevos gusanos que emplean comunicaciÃ³n directa de gusano a gusano y utilizan actualizaciones programables. Por ejemplo, el gusano Warhol y los gusanos de Permutation-Scanning (autocoordinados). 2.6 Gusano Swarm: los detalles Al considerar la creaciÃ³n de lo que creÃ­amos que era el primer Gusano Swarm en existencia, querÃ­amos adherirnos lo mÃ¡s cercanamente posible al modelo general presentado en la secciÃ³n ? ? mientras facilitÃ¡bamos al mismo tiempo un anÃ¡lisis a gran escala, tanto empÃ­rico como a travÃ©s de simulaciones, del comportamiento del enjambre. Por esta razÃ³n, seleccionamos como primera instancia Estructura FunciÃ³n/Ejemplo InfecciÃ³n, InfecciÃ³n Vector Ejecutable se ejecuta ProtecciÃ³n y Sigilo Deshabilitar McAfee (ManteniÃ©ndose Vivo) PropagaciÃ³n Enviar correo electrÃ³nico a todos en la libreta de direcciones Aprendizaje, ComunicaciÃ³n, Feromonas/Banderas (Prueba y Control Distribuido si el Gusano ya estÃ¡ presente) Bombas de tiempo, Algoritmos de Aprendizaje, Canal IRC AcciÃ³n Basada en Objetivos (ABO) DDoS www.sco.com Todo lo demÃ¡s, a menudo llamado carga Ãºtil Figura 2: Modelo General de un Gusano de Enjambre del enjambre un gusano simple de craqueo de contraseÃ±as. El objetivo de este gusano simplemente es infectar a un anfitriÃ³n intentando secuencialmente iniciar sesiÃ³n en el anfitriÃ³n utilizando contraseÃ±as conocidas (ataque de diccionario), contraseÃ±as que han sido descubiertas previamente por cualquier miembro del enjambre, y contraseÃ±as aleatorias. Una vez que un huÃ©sped estÃ¡ infectado, el gusano crearÃ¡ canales de comunicaciÃ³n tanto con sus vecinos conocidos en ese momento, como con cualquier descendencia que genere con Ã©xito. En este contexto, una generaciÃ³n exitosa de una descendencia significa simplemente infectar a un nuevo huÃ©sped y replicar una copia exacta de sÃ­ misma en dicho huÃ©sped. Llamamos a este gusano enjambre el gusano ZachiK en honor a uno de sus creadores. Como se puede ver en esta descripciÃ³n, el gusano ZachiK exhibe todos los elementos descritos anteriormente. En las siguientes secciones, describimos detalladamente cada uno de los elementos del gusano ZachiK. 2.7 Vector de InfecciÃ³n El vector de infecciÃ³n utilizado por el gusano ZachiK es el protocolo de shell seguro SSH. Se escribiÃ³ un cliente modificado que es capaz de recibir contraseÃ±as desde la lÃ­nea de comandos, e integrado con un script que le suministra diversas contraseÃ±as: conocidas y aleatorias. Cuando se encuentra una contraseÃ±a para un objetivo adecuado, comienza el proceso de infecciÃ³n. DespuÃ©s de descubrir la contraseÃ±a de root de un host, el gusano infecta el host objetivo y se replica a sÃ­ mismo. El gusano crea un nuevo directorio en el host objetivo, copia el cliente ssh modificado, el script, los servidores de comunicaciones y las versiones actualizadas de los archivos de datos (lista de contraseÃ±as conocidas y una lista de vecinos actuales). Luego ejecuta el script modificado en los hosts reciÃ©n infectados, lo que genera el servidor de comunicaciones, notifica a los vecinos y comienza a buscar nuevos objetivos. Se podrÃ­a argumentar, de manera correcta, que el gusano ZachiK puede ser fÃ¡cilmente derrotado por las tÃ©cnicas de contramedidas actuales presentes en la mayorÃ­a de los sistemas hoy en dÃ­a, como la prohibiciÃ³n de accesos directos de root desde la red. Dentro de este contexto, ZachiK puede ser rÃ¡pidamente descartado como un gusano muy simple e inofensivo que no requiere un estudio adicional. Sin embargo, el lector deberÃ­a considerar lo siguiente: 1. ZachiK se puede modificar fÃ¡cilmente para incluir una variedad de vectores de infecciÃ³n. Por ejemplo, podrÃ­a programarse para adivinar nombres de usuario comunes y sus contraseÃ±as; obtener acceso al sistema, luego adivinar la contraseÃ±a de root o utilizar otras vulnerabilidades conocidas para obtener privilegios de root. ZachiK es un gusano de prueba de concepto. La importancia de ZachiK radica en que incorpora todos los comportamientos de un gusano en enjambre, incluyendo, pero no limitÃ¡ndose a, el control distribuido, la comunicaciÃ³n entre agentes y el aprendizaje; 3. ZachiK estÃ¡ compuesto por una gran colecciÃ³n de agentes que operan de forma independiente, lo que se presta naturalmente a algoritmos paralelos como la bÃºsqueda paralela del espacio de direcciones IPV4. Dentro de este contexto, SLAMMER incorpora una capacidad de bÃºsqueda paralela de direcciones potencialmente susceptibles. Sin embargo, a diferencia de ZachiK, el conocimiento descubierto por la bÃºsqueda nunca se comparte entre los agentes. Por estas razones, y muchas otras, no se debe descartar el potencial de esta nueva clase de gusanos, sino mÃ¡s bien abrazar su estudio. 2.8 AutopreservaciÃ³n En el caso del gusano ZachiK, las principales tÃ©cnicas de autopreservaciÃ³n utilizadas son simplemente mantener el tamaÃ±o de la carga Ãºtil pequeÃ±o. En este contexto, esto simplemente significa restringir la cantidad de contraseÃ±as que una descendencia hereda, enmascarar mensajes de gusano como solicitudes http comunes y limitar el nÃºmero de vecinos a un mÃ¡ximo de cinco-(5). 2.9 PropagaciÃ³n Elegir el(los) prÃ³ximo(s) objetivo(s) de manera eficiente requiere reflexiÃ³n. En el pasado, los gusanos conocidos y propuestos, ver [5], han aplicado tÃ©cnicas de propagaciÃ³n que variaban. Estos incluyen: selecciÃ³n estrictamente aleatoria de un posible anfitriÃ³n vulnerable; listas de objetivos de anfitriones vulnerables; selecciÃ³n aleatoria localmente sesgada (seleccionar un objetivo de anfitriÃ³n al azar de una subred local); y una combinaciÃ³n de algunas o todas las anteriores. En nuestros entornos de prueba y simulaciÃ³n, aplicaremos una combinaciÃ³n de selecciÃ³n localmente sesgada y totalmente aleatoria de posibles hosts vulnerables. Sin embargo, debido a que el gusano ZachiK es un gusano enjambre, la informaciÃ³n de descubrimiento de direcciones (es decir, cuando se descubren direcciones inexistentes) se compartirÃ¡ entre los miembros del enjambre. Los hilos de infecciÃ³n y propagaciÃ³n realizan el siguiente conjunto de actividades repetidamente: â¢ Elegir una direcciÃ³n â¢ Verificar la validez de la direcciÃ³n â¢ Elegir un conjunto de contraseÃ±as â¢ Intentar infectar al host seleccionado con este conjunto de contraseÃ±as. Como se describiÃ³ anteriormente, la elecciÃ³n de una direcciÃ³n hace uso de una combinaciÃ³n de selecciÃ³n aleatoria, sesgo local y listas de objetivos. EspecÃ­ficamente, para elegir una direcciÃ³n, la instancia puede: â¢ Generar una nueva direcciÃ³n aleatoria â¢ Generar una direcciÃ³n en la red local â¢ Elegir una direcciÃ³n de una lista de transferencia La elecciÃ³n se realiza de forma aleatoria entre estas opciones, y puede variarse para probar la dependencia de la propagaciÃ³n en elecciones particulares. Las contraseÃ±as son elegidas de una lista de contraseÃ±as conocidas o generadas recientemente. Cuando una infecciÃ³n de una direcciÃ³n vÃ¡lida falla, se agrega a una lista de entregas, que se envÃ­a a los vecinos para intentar solucionar el problema. 2.10 Aprendizaje, ComunicaciÃ³n y Control Distribuido 2.10.1 ComunicaciÃ³n El concepto de un enjambre se basa en la transferencia de informaciÃ³n entre vecinos, quienes retransmiten sus nuevos mensajes entrantes a sus vecinos, y asÃ­ sucesivamente hasta que cada instancia del gusano en el enjambre estÃ© al tanto de estos mensajes. Hay dos clases de mensajes: mensajes de datos o informaciÃ³n y comandos. Los mensajes de comando estÃ¡n destinados a un usuario externo (tambiÃ©n conocidos como hackers y/o crackers) para controlar las acciones de las instancias, y actualmente no estÃ¡n implementados. Los mensajes de informaciÃ³n actualmente son de tres tipos: nuevo miembro, contraseÃ±as y direcciones explotables (transferencias). Los mensajes de nuevo miembro son mensajes que una nueva instancia envÃ­a a los vecinos en su lista (corta) de vecinos iniciales. Los vecinos luego registran estas instancias en su lista de vecinos. Estos son mensajes que forman la multi-conectividad del enjambre, y sin ellos, la topologÃ­a serÃ­a una estructura en forma de Ã¡rbol, donde la eliminaciÃ³n de un solo nodo harÃ­a que las instancias debajo de Ã©l fueran inaccesibles. Los mensajes de contraseÃ±as informan instancias de contraseÃ±as reciÃ©n descubiertas, y al informar a todas las instancias, el enjambre en su totalidad recopila esta informaciÃ³n, lo que le permite infectar nuevas instancias de manera mÃ¡s efectiva. Los mensajes de entrega informan instancias de direcciones vÃ¡lidas que no pudieron ser comprometidas (fallaron al romper la contraseÃ±a de la cuenta root). Dado que el espacio de direcciones es bastante disperso, lleva un tiempo relativamente largo (es decir, muchos intentos) descubrir una direcciÃ³n vÃ¡lida. Por lo tanto, al entregar las direcciones vÃ¡lidas descubiertas, el enjambre estÃ¡ (a) conservando energÃ­a al no redescubrir las mismas direcciones (b) atacando de manera mÃ¡s efectiva. De cierta manera, esto es una simple instancia de actividad coordinada de un enjambre. 2.10.2 CoordinaciÃ³n Cuando nace una instancia de gusano, transmite su existencia a todos los vecinos en su lista. El hilo principal luego genera algunas hebras de infecciÃ³n y continÃºa manejando mensajes entrantes (registrando vecinos, agregando nuevas contraseÃ±as, recibiendo direcciones y transmitiendo estos mensajes). 2.10.3 Control Distribuido El control en el gusano ZachiK es distribuido en el sentido de que cada instancia del gusano realiza un conjunto de acciones de forma independiente de cada otra instancia, al mismo tiempo que se beneficia del aprendizaje logrado por sus vecinos inmediatos. 2.11 Acciones Basadas en Objetivos La primera instancia del gusano ZachiK tiene dos objetivos bÃ¡sicos. Estos son: (1) propagar, y (2) descubrir y compartir con los miembros de la colonia nuevas contraseÃ±as de root. 3. DISEÃO EXPERIMENTAL Para verificar nuestra hipÃ³tesis de que los Gusanos de Enjambre son mÃ¡s capaces y, por lo tanto, mÃ¡s peligrosos que otros 327 gusanos conocidos, se creÃ³ un banco de pruebas de red y se desarrollÃ³ un simulador capaz de simular topologÃ­as a gran escala similares a Internet (espacio IPV4). El banco de pruebas de red consistÃ­a en una red de Ã¡rea local de 30 computadoras basadas en Linux. El simulador fue escrito en C++. El gusano de enjambre simple descrito en la secciÃ³n 2.6 se utilizÃ³ para infectar al paciente cero, y luego se permitiÃ³ que el gusano de enjambre se propagara a travÃ©s de sus propios mecanismos de propagaciÃ³n, control distribuido y comportamientos de enjambre. En el caso de una red de Ã¡rea local simple de 30 computadoras, se seleccionaron seis (6) contraseÃ±as raÃ­z diferentes de un espacio de contraseÃ±as de 4 dÃ­gitos (10000 opciones). Al comienzo del experimento se conoce una Ãºnica contraseÃ±a, la del paciente cero. Todas las contraseÃ±as compartidas se distribuyen aleatoriamente en todos los nodos. De manera similar, en el caso de la simulaciÃ³n, se construyÃ³ una topologÃ­a de red de 10,000 hosts cuyas direcciones fueron seleccionadas al azar en el espacio IPV4. Dentro de ese espacio, se seleccionaron y distribuyeron un total de 200 contraseÃ±as compartidas ya sea de forma aleatoria y/o dirigida a subredes especÃ­ficas de topologÃ­as de red. Por ejemplo, en una de nuestras ejecuciones de simulaciÃ³n, la topologÃ­a de red consistÃ­a en 200 subredes, cada una conteniendo 50 hosts. En dicha topologÃ­a, las contraseÃ±as compartidas se distribuÃ­an en subredes donde un porcentaje variable de contraseÃ±as se compartÃ­an entre subredes. Los porcentajes de contraseÃ±as compartidas utilizadas reflejaban los primeros estudios empÃ­ricos, donde se descubriÃ³ que hasta el 39.7% de las contraseÃ±as comunes eran compartidas. RESULTADOS En la Figura 3 se presentan los resultados comparando el comportamiento del Ataque de Enjambre versus el de un Gusano Malformado tÃ­pico para una LAN de 30 nodos. En este conjunto de ejecuciones empÃ­ricas, seis (6) contraseÃ±as compartidas fueron distribuidas al azar en todos los nodos de un total de 10,000 contraseÃ±as desconocidas posibles. Los datos presentados reflejan los comportamientos de un total de tres (3) clases distintas de gusanos o enjambres de gusanos. La clase de gusanos presentada es la siguiente: â¢ I-NS-NL:= Gusano genÃ©rico, independiente (I), sin aprendizaje/sin memoria (NL), y sin compartir informaciÃ³n con vecinos o descendientes (NS); â¢ S-L-SP:= Gusano en enjambre (S), aprendizaje (L), mantiene una lista de contraseÃ±as aprendidas, y comparte contraseÃ±as (SP) con vecinos mÃ¡s cercanos y descendientes; y â¢ S-L-SP&A:= Gusano en enjambre (S), aprendizaje (L), mantiene una lista de contraseÃ±as aprendidas, y comparte contraseÃ±as y direcciones existentes (SP&A) con vecinos mÃ¡s cercanos y descendientes. Como se muestra en la Figura 3, los resultados validan nuestra hipÃ³tesis original de que los gusanos en enjambre son significativamente mÃ¡s eficientes y peligrosos que los gusanos genÃ©ricos. En este conjunto de experimentos, el compartir contraseÃ±as proporciona una mejora de un orden de magnitud sobre un gusano aleatorio sin memoria. De manera similar, un gusano en enjambre que comparte contraseÃ±as y direcciones es aproximadamente dos Ã³rdenes de magnitud mÃ¡s eficiente que su contraparte genÃ©rica. En la Figura 3, se pueden observar una serie de discontinuidades. Estas discontinuidades son un artefacto del pequeÃ±o espacio muestral utilizado para este experimento. BÃ¡sicamente, tan pronto como se rompe una contraseÃ±a, todos los nodos que comparten esa contraseÃ±a especÃ­fica se infectan en cuestiÃ³n de segundos. Ten en cuenta que es trivial para un gusano en enjambre escanear y descubrir un pequeÃ±o espacio de contraseÃ±as compartidas. En la Figura 4, se presentan los resultados de la simulaciÃ³n comparando el Comportamiento de Ataque de Enjambre con el de un Gusano Malformado GenÃ©rico. En este conjunto de ejecuciones de simulaciÃ³n, se construyÃ³ una topologÃ­a de red de 10,000 hosts, cuyas direcciones fueron seleccionadas aleatoriamente en el espacio IPV4. Dentro de ese espacio, se seleccionaron y distribuyeron un total de 200 contraseÃ±as compartidas ya sea de forma aleatoria y/o dirigida a subredes especÃ­ficas de topologÃ­as de red. Los datos presentados reflejan los comportamientos de tres (3) clases distintas de gusanos o gusanos en enjambre y dos (2) estrategias de exploraciÃ³n de selecciÃ³n de objetivo de host diferentes (exploraciÃ³n aleatoria y sesgo local). La cantidad de sesgo local variÃ³ en mÃºltiples ejecuciones de simulaciÃ³n. Los resultados presentados son comportamientos agregados. En general, se simularon las siguientes clases de Gusanos GenÃ©ricos y Gusanos en Enjambre. ExploraciÃ³n de direcciones: â¢ Aleatoria:= las direcciones se seleccionan al azar de un subconjunto del espacio IPV4, es decir, un espacio de 224 direcciones; y â¢ Sesgo local:= las direcciones se seleccionan al azar de una subred local (256 direcciones) o de un subconjunto del espacio IPV4, es decir, un espacio de 224 direcciones. El porcentaje de sesgo local varÃ­a en mÃºltiples ejecuciones. Aprendizaje, ComunicaciÃ³n y Control Distribuido â¢ I-NL-NS: Gusano genÃ©rico, independiente (I), sin aprendizaje/sin memoria (NL), y sin compartir informaciÃ³n con vecinos o descendientes (NS); â¢ I-L-OOS: Gusano genÃ©rico, independiente (I), con aprendizaje/sin memoria (L), y compartiendo informaciÃ³n una sola vez con descendientes solamente (OOS); â¢ S-L-SP:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte contraseÃ±as (SP) con vecinos mÃ¡s cercanos y descendientes; â¢ S-L-S&AOP:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte direcciones con vecinos y descendientes, comparte contraseÃ±as solo una vez (al crearse) con descendientes (SA&OP); â¢ S-L-SP&A:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte contraseÃ±as y direcciones existentes (SP&A) con vecinos mÃ¡s cercanos y descendientes. Como se muestra en la Figura 4, los resultados son consistentes con nuestro conjunto de resultados empÃ­ricos. AdemÃ¡s, se pueden hacer las siguientes observaciones. 1. La preferencia local es increÃ­blemente efectiva. Las transferencias cortas de direcciÃ³n son mÃ¡s efectivas que las largas. Variamos el tamaÃ±o de la lista permitida en el intercambio de direcciones; el sobrecosto asociado con una lista de direcciones larga es perjudicial para el rendimiento del gusano en enjambre, asÃ­ como para su sigilo; 3. Para el caso de sesgo local, compartir direcciones vÃ¡lidas de host susceptibles, el gusano S-L-S&AOP (recuerde, el enjambre S-L-S&AOP comparte contraseÃ±as, solo una vez, con descendientes 328 en el momento de la creaciÃ³n) es mÃ¡s efectivo que compartir contraseÃ±as en el caso del enjambre S-L-SP. En este caso, podemos pensar en el enjambre como lanzando un ataque de diccionario distribuido: diferentes segmentos del enjambre utilizan diferentes contraseÃ±as para intentar ingresar a hosts no infectados susceptibles. En el modo de sesgo local, al principio de la vida del enjambre, compartir direcciones es mÃ¡s efectivo que compartir contraseÃ±as, hasta que se descubran la mayorÃ­a de las subredes. Entonces, el apuntar a direcciones locales ayuda a descubrir los hosts susceptibles, mientras que los miembros del enjambre necesitan perder tiempo redescubriendo contraseÃ±as; y 4. Infectar el Ãºltimo 0.5% de los nodos lleva mucho tiempo en modo de sesgo no local. BÃ¡sicamente, la lista de contraseÃ±as compartidas entre subredes se ha agotado, y el enjambre vuelve a simplemente descubrir una contraseÃ±a al azar. Figura 3: Comportamiento del Ataque de Enjambre vs Gusano Malformado: Resultados EmpÃ­ricos, LAN de 30 nodos Figura 4: Comportamiento del Ataque de Enjambre vs Gusano Malformado: Resultados de SimulaciÃ³n 5. RESUMEN Y TRABAJO FUTURO En este manuscrito, hemos presentado un modelo abstracto, similar en algunos aspectos al de Weaver [5], que ayuda a explicar la naturaleza genÃ©rica de los gusanos. El modelo presentado en la secciÃ³n 2 se extendiÃ³ para incorporar una nueva clase de gusanos potencialmente peligrosos llamados Gusanos en Enjambre. Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biolÃ³gicos y muestran un alto grado de aprendizaje, comunicaciÃ³n e inteligencia distribuida. Tales gusanos en enjambre son potencialmente mÃ¡s daÃ±inos que sus contrapartes genÃ©ricas. AdemÃ¡s, se creÃ³ la primera instancia, que sepamos, de un gusano de aprendizaje, llamado ZachiK. ZachiK es un gusano enjambre de descifrado de contraseÃ±as simple que incorpora diferentes estrategias de aprendizaje y comparticiÃ³n de informaciÃ³n. Un gusano de enjambre similar fue desplegado tanto en una red de Ã¡rea local de treinta (30) hosts, como simulado en una topologÃ­a de 10,000 nodos. Los resultados preliminares mostraron que tales gusanos son capaces de comprometer a los anfitriones a tasas hasta 2 Ã³rdenes de magnitud mÃ¡s rÃ¡pido que su contraparte genÃ©rica, manteniendo al mismo tiempo sus capacidades de sigilo. Este trabajo abre una nueva Ã¡rea de problemas interesantes. Algunos de los problemas mÃ¡s interesantes y urgentes a considerar son los siguientes: â¢ Â¿Es posible aplicar algunos de los conceptos de aprendizaje desarrollados en los Ãºltimos diez aÃ±os en las Ã¡reas de inteligencia de enjambre, sistemas de agentes y control distribuido al diseÃ±o de gusanos de enjambre sofisticados de tal manera que se produzca un verdadero comportamiento emergente? â¢ Â¿Son efectivas las tÃ©cnicas actuales que se estÃ¡n desarrollando en el diseÃ±o de Sistemas de DetecciÃ³n y Contramedidas de IntrusiÃ³n y sistemas supervivientes contra esta nueva clase de gusanos?; y â¢ Â¿QuÃ© tÃ©cnicas, si las hay, se pueden desarrollar para crear defensas contra los gusanos de enjambre? 6. AGRADECIMIENTOS Este trabajo se realizÃ³ como parte de un esfuerzo mÃ¡s amplio en el desarrollo de sistemas de DetecciÃ³n de Intrusiones y Contramedidas de prÃ³xima generaciÃ³n en WSSRL. El trabajo se lleva a cabo bajo los auspicios de la subvenciÃ³n ACG-2004-06 otorgada por Acumen Consulting Group, Inc., Marlboro, Massachusetts. REFERENCIAS [1] C.C. Zou, L. Gao, W. G., y Towsley, D. Monitoreo y alerta temprana para gusanos de internet. En la 10Âª Conferencia ACM sobre Seguridad InformÃ¡tica y de Comunicaciones, Washington, DC (octubre de 2003). [2] Liu, S. y Passino, K. Inteligencia de enjambre: Resumen de la literatura. En el Departamento de IngenierÃ­a ElÃ©ctrica, Universidad Estatal de Ohio, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., y Weaver, N. La propagaciÃ³n del gusano saphire/slammer. Inf. tÃ©cnico, Un esfuerzo conjunto de CAIDA, ICSI, Silicon Defense, UC Berkeley EECS y UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S. y Cunningham, R. Una taxonomÃ­a de gusanos informÃ¡ticos. En Actas del Taller de ACM sobre Malware RÃ¡pido (WORM) (2003). 329 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "zachik": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "An Initial Analysis and Presentation of Malware Exhibiting Swarm-Like Behavior Fernando C.ColÂ´on Osorio Wireless System Security Research Laboratory (W.S.S.R.L.)",
                "420 Lakeside Avneue Marlboro, Massachusetts 01752 fcco@cs.wpi.edu Zachi Klopman Wireless System Security Research Laboratory (W.S.S.R.L.) 420 Lakeside Avneue Marlboro, Massachusetts 01752 zachi@cs.wpi.edu ABSTRACT The Slammer, which is currently the fastest computer worm in recorded history, was observed to infect 90 percent of all vulnerable Internets hosts within 10 minutes.",
                "Although the main action that the Slammer worm takes is a relatively unsophisticated replication of itself, it still spreads so quickly that human response was ineffective.",
                "Most proposed countermeasures strategies are based primarily on rate detection and limiting algorithms.",
                "However, such strategies are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In our work, we put forth the hypothesis that next generation worms will be radically different, and potentially such techniques will prove ineffective.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
                "Emergent Intelligence is the behavior of systems, very much like biological systems such as ants or bees, where simple local interactions of autonomous members, with simple primitive actions, gives rise to complex and intelligent global behavior.",
                "In this manuscript we will introduce the basic principles behind the idea of Swarm Worms, as well as the basic structure required in order to be considered a swarm worm.",
                "In addition, we will present preliminary results on the propagation speeds of one such swarm worm, called the <br>zachik</br> worm.",
                "We will show that <br>zachik</br> is capable of propagating at a rate 2 orders of magnitude faster than similar worms without swarm capabilities.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Intrusion Detection; D.4.6 [Security and Protection]: Invasive software General Terms Experimentation, Security 1.",
                "INTRODUCTION AND PREVIOUSWORK In the early morning hours (05:30 GMT) of January 25, 2003 the fastest computer worm in recorded history began spreading throughout the Internet.",
                "Within 10 minutes after the first infected host (patient zero), 90 percent of all vulnerable hosts had been compromised creating significant disruption to the global Internet infrastructure.",
                "Vern Paxson of the International Computer Science Institute and Lawrence Berkeley National Laboratory in its analysis of Slammer commented: The Slammer worm spread so quickly that human response was ineffective, see [4] The interesting part, from our perspective, about the spread of Slammer is that it was a relatively unsophisticated worm with benign behavior, namely self-reproduction.",
                "Since Slammer, researchers have explored the behaviors of fast spreading worms, and have designed countermeasures strategies based primarily on rate detection and limiting algorithms.",
                "For example, Zou, et al., [2], proposed a scheme where a Kalman filter is used to detect the early propagation of a worm.",
                "Other researchers have proposed the use of detectors where rates of Destination Unreachable messages are monitored by firewalls, and a significant increase beyond normal, alerts the organization to the potential presence of a worm.",
                "However, such strategies suffer from the fighting the last War syndrome.",
                "That is, systems are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In the work described here, we put forth the hypothesis that next generation worms will be different, and therefore such techniques may have some significant limitations.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
                "The concept of emergent intelligence was first studied in association with biological systems.",
                "In such studies, early researchers discovered a variety of interesting insect or animal behaviors in the wild.",
                "A flock of birds sweeps across the sky.",
                "A group of ants forages for food.",
                "A school of fish swims, turns, flees together away from a predator, ands so forth.",
                "In general, this kind of aggregate motion has been called swarm behavior.",
                "Biologists, and computer scientists in the field of artificial intelligence have studied such biological swarms, and 323 attempted to create models that explain how the elements of a swarm interact, achieve goals, and evolve.",
                "Moreover, in recent years the study of swarm intelligence has become increasingly important in the fields of robotics, the design of Mobile ad-hoc Networks (MANETS), the design of Intrusion Detection Systems, the study of traffic patterns in transportation systems, in military applications, and other areas, see [3].",
                "The basic concepts that have been developed over the last decade to explain swarms, and swarm behavior include four basic components.",
                "These are: 1.",
                "Simplicity of logic & actions: A swarm is composed of N agents whose intelligence is limited.",
                "Agents in the swarm use simple local rules to govern their actions.",
                "Some models called this primitive actions or behaviors; 2.",
                "Local Communication Mechanisms: Agents interact with other members in the swarm via simple local communication mechanisms.",
                "For example, a bird in a flock senses the position of adjacent bird and applies a simple rule of avoidance and follow. 3.",
                "Distributed control: Autonomous agents interact with their environment, which probably consists of other agents, but act relatively independently from all other agents.",
                "There is no central command or leader, and certainly there is no global plan. 4.",
                "Emergent Intelligence: Aggregate behavior of autonomous agents results in complex intelligent behaviors; including self-organization.",
                "In order to understand fully the behavior of such swarms it is necessary to construct a model that explains the behavior of what we will call generic worms.",
                "This model, which extends the work by Weaver [5] is presented here in section 2.",
                "In addition, we intend to extend said model in such a way that it clearly explains the behaviors of this new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
                "Such Swarm Worms are potentially more harmful than their similar generic counterparts.",
                "Specifically, the first instance, to our knowledge, of such a learning worm was created, called <br>zachik</br>.",
                "<br>zachik</br> is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
                "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms are capable of compromising hosts at rates up to two orders of magnitude faster than their generic counterpart.",
                "The rest of this manuscript is structure as follows.",
                "In section 2 an abstract model of both generic worms as well as swarm worms is presented.",
                "This model is used in section 2.6 to described the first instance of a swarm worm, <br>zachik</br>.",
                "In section 4, preliminary results via both empirical measurements as well as simulation is presented.",
                "Finally, in section 5 our conclusions and insights into future work are presented. 2.",
                "WORM MODELING In order to study the behavior of swarm worms in general, it is necessary to create a model that realistically reflects the structure of worms and it is not necessarily tied to a specific instance.",
                "In this section, we described such a model where a general worm is describe as having four-(4) basic components or subfunctions.",
                "By definition, a worm is a selfcontained, self propagating program.",
                "Thus, in simple terms, it has two main functions: that which propagates and that which does other things.",
                "We propose that there is a third broad functionality of a worm, that of self-preservation.",
                "We also propose that the other functionality of a worm may be more appropriately categorized as Goal-Based Actions (GBA), as whatever functionality included in a worm will naturally be dependent on whatever goals (and subgoals) the author has.",
                "The work presented by Weaver et. al. in [5] provides us with mainly an action and technique based taxonomy of computer worms, which we utilize and further extend here. 2.1 Propagation The propagation function itself may be broken down into three actions: acquire target, send scan, and infect target.",
                "Acquiring the target simply means picking a host to attack next.",
                "Sending a scan involves checking to see if that host is receptive to an infection attempt, since IP-space is sparsely populated.",
                "This may involve a simple ping to check if the host is alive or a full out vulnerability assessment.",
                "Infecting the target is the actual method used to send the worm code to the new host.",
                "In algorithm form: propagate() { host := acquire_target() success := send_scan(host) if( success ) then infect(host) endif } In the case of a simple worm which does not first check to see if the host is available or susceptible (such as Slammer), the scan method is dropped: propagate() { host := acquire_target() infect(host) } Each of these actions may have an associated cost to its inclusion and execution, such as increased worm size and CPU or network load.",
                "Depending on the authors needs or requirements, these become limiting factors in what may be included in the worms actions.",
                "This is discussed further after expanding upon these actions below. 2.2 Target Acquisition: The Target Acquisition phase of our worm algorithm is built directly off of the Target Discovery section in [5].",
                "Weaver et. al. taxonomize this task into 5 separate categories.",
                "Here, we further extend their work through parameterization.",
                "Scanning: Scanning may be considered an equation-based method for choosing a host.",
                "Any type of equation may be used to arrive at an IP address, but there are three main types seen thus far: sequential, random, and local preference.",
                "Sequential scanning is exactly as it sounds: start at an IP address and increment through all the IP space.",
                "This could carry with it the options of which IP to start with (user chosen value, random, or based on IP of infected host) and 324 how many times to increment (continuous, chosen value, or subnet-based).",
                "Random scanning is completely at random (depending on the chosen PRNG method and its seed value).",
                "Local preference scanning is a variance of either Sequential or Random, whereby it has a greater probability of choosing a local IP address over a remote one (for example, the traditional 80/20 split).",
                "Pre-generated Target Lists: Pre-generated Target Lists, or so called hit-lists, could include the options for percentage of total population and percentage wrong, or just number of IPs to include.",
                "Implicit to this type is the fact that the list is divided among a parent and its children, avoiding the problem of every instance hitting the exact same machines.",
                "Externally Generated Target Lists: Externally generated target lists depend on one or more external sources that can be queried for host data.",
                "This will involve either servers that are normally publicly available, such as gaming meta-servers, or ones explicitly setup by the worm or worm author.",
                "The normally available meta-servers could have parameters for rates of change, such as many popping up at night or leaving in the morning.",
                "Each server could also have a maximum queries/second that it would be able to handle.",
                "The worm would also need a way of finding these servers, either hard-coded or through scanning.",
                "Internal Target Lists: Internal Target Lists are highly dependent on the infected host.",
                "This method could parameterize the choice of how much info is on the host, such as all machines in subnet, all windows boxes in subnet, particular servers, number of internal/external, or some combination.",
                "Passive: Passive methods are determined by normal interactions between hosts.",
                "Parameters may include a rate of interaction with particular machines, internal/external rate of interaction, or subnet-based rate of interaction.",
                "Any of these methods may also be combined to produce different types of target acquisition strategies.",
                "For example, the a worm may begin with an initial hit-list of 100 different hosts or subnets.",
                "Once it has exhausted its search using the hit-list, it may then proceed to perform random scanning with a 50% local bias.",
                "It is important to note, however, that the resource consumption of each method is not the same.",
                "Different methods may require the worm to be large, such as the extra bytes required by a hit-list, or to take more processing time, such as by searching the host for addresses of other vulnerable hosts.",
                "Further research and analysis should be performed in this area to determine associated costs for using each method.",
                "The costs could then be used in determining design tradeoffs that worm authors engage at.",
                "For example, hit lists provide a high rate of infection, but at a high cost of worm payload size. 2.2.1 Sending a Scan The send scan function tests to see if the host is available for infection.",
                "This can be as simple as checking if the host is up on the network or as complex as checking if the host is vulnerable to the exploit which will be used.",
                "The sending of a scan before attempted infection can increase the scanning rate if the cost for failing an infection is greater than the cost of failing a scan or sending a scan plus infection; and failures are more frequent than successes.",
                "One important parameter to this would be the choice of transport protocol (TCP/UDP) or just simply the time for one successful scan and time for one failed scan.",
                "Also, whether or not it tests for the host to be up or if it is a full test for the vulnerability (or for multiple vulnerabilities). 2.2.2 Infection Vector (IV) The particular infection vector used to access the remote host is mainly dependent on the particular vulnerability chosen to exploit.",
                "In a non-specific sense, it is dependent on the transport protocol chosen to use and the message size to be sent.",
                "Section 3 of [5] also proposes three particular classes of IV: Self-carried, second channel, and embedded. 2.3 Self Preservation The Self Preservation actions of a worm may take many forms.",
                "In the wild, worms have been observed to disable anti-virus software or prevent sending itself to certain antivirusknown addresses.",
                "They have also been seen to attempt disabling of other worms which may be contending for the same system.",
                "We also believe that a time-based throttled scanning may help the worm to slip under the radar.",
                "We also propose a decoy method, whereby a worm will release a few children that cause a lot of noise so that the parent is not noticed.",
                "It has also been proposed [5] that a worm cause damage to its host if, and only if, it is disturbed in some way.",
                "This module could contain parameters for: probability of success in disabling anti-virus or other software updates, probability of being noticed and thus removed, or hardening of the host against other worms. 2.4 Goal-Based Actions A worms GBA functionality depends on the authors goal list.",
                "The Payloads section of [5] provides some useful suggestions for such a module.",
                "The opening of a back-door can make the host susceptible to more attacks.",
                "This would involve a probability of the back-door being used and any associated traffic utilization.",
                "It could also provide a list of other worms this host is now susceptible to or a list of vulnerabilities this host now has.",
                "Spam relays and HTTP-Proxies of course have an associated bandwidth consumption or traffic pattern.",
                "Internet DoS attacks would have a set time of activation, a target, and a traffic pattern.",
                "Data damage would have an associated probability that the host dies because of the damage.",
                "In Figure 1, this general model of a worm is summarized.",
                "Please note that in this model there is no learning, no, or very little, sharing of information between worm instances, and certainly no coordination of actions.",
                "In the next section we expand the model to include such mechanisms, and hence, arrive at the general model of a swarm worm. 2.5 Swarms - General Model As described in section 1, the basic characteristics that distinguished swarm behavior from simply what appears to be collective coordinated behaviors are four basic attributes.",
                "These are: 1.",
                "Simplicity of logic & actions; 2.",
                "Local Communication Mechanisms; 3.",
                "Distributed control; and 4.",
                "Emergent Intelligence, including self-organization. 325 Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 1: General Worm Model In this work we aggregate all of these attributes under the general title of Learning, Communication, and Distributed Control.",
                "The presence of these attributes distinguishes swarm worms from otherwise regular worms, or other types of malware such as Zombies.",
                "In figure ? ?, the generic model of a worm is expanded to included these set of actions.",
                "Within this context then, a worm like Slammer cannot be categorized as a swarm worm due to the fact that new instances of the worm do not coordinate their actions or share information.",
                "On the other hand, Zombies and many other forms of DDoS, which at first glance may be consider swarm worms are not.",
                "This is simply due to fact that in the case of Zombies, control is not distributed but rather centralized, and no emergent behaviors arise.",
                "The latter, the potential emergence of intelligence or new behaviors is what makes swarm worms so potentially dangerous.",
                "Finally, when one considers the majority of recent disruptions to the Internet Infrastructure, and in light of our description of swarm attacks, then said disruptions can be easily categorized as precursors to truly swarm behavior.",
                "Specifically, â¢ DDOS - Large number of compromised hosts send useless packets requiring processing (Stacheldraht, http : //www.cert.org/ incidentnotes/IN â 99 â 04.html).",
                "DDoS attacks are the early precursors to Swarm Attacks due to the large number of agents involved. â¢ Code Red CrV1, Code Red II, Nimbda - Exhibit early notions of swarm attacks, including a backdoor communication channel. â¢ Staniford & Paxson in How to Own the Internet in Your Spare Time? explore modifications to CrV1, Code Red I, II with a swarm like type of behavior.",
                "For example, they speculate on new worms which employ direct worm-to-worm communication, and employ programmable updates.",
                "For example the Warhol worm, and Permutation-Scanning (self coordinating) worms. 2.6 Swarm Worm: the details In considering the creation of what we believed to be the first Swarm Worm in existence, we wanted to adhere as close as possible to the general model presented in section ? ? while at the same time facilitating large scale analysis, both empirical and through simulations, of the behavior of the swarm.",
                "For this reason, we selected as the first instance Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Learning, Communication, Pheromones/Flags (Test and Distributed Control if Worm is already present) Time bombs, Learning Algorithms, IRC channel Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 2: General Model of a Swarm Worm of the swarm a simple password cracking worm.",
                "The objective of this worm simply is to infect a host by sequentially attempting to login into the host using well known passwords (dictionary attack), passwords that have been discovered previously by any member of the swarm, and random passwords.",
                "Once, a host is infected, the worm will create communication channels with both its known neighbors at that time, as well as with any offsprings that it successfully generates.",
                "In this context a successful generation of an offspring means simply infecting a new host and replicating an exact copy of itself in such a host.",
                "We call this swarm worm the <br>zachik</br> worm in honor of one of its creators.",
                "As it can be seen from this description, the <br>zachik</br> worm exhibits all of the elements described before.",
                "In the following sections, we described in detail each one of the elements of the <br>zachik</br> worm. 2.7 Infection Vector The infection vector used for <br>zachik</br> worm is the secure shell protocol SSH.",
                "A modified client which is capable of receiving passwords from the command line was written, and integrated with a script that supplies it with various passwords: known and random.",
                "When a password is found for an appropriate target, the infection process begins.",
                "After the root password of a host is discovered, the worm infects the target host and replicates itself.",
                "The worm creates a new directory in the target host, copies the modified ssh client, the script, the communications servers, and the updated versions of data files (list of known passwords and a list of current neighbors).",
                "It then runs the modified script on the newly infected hosts, which spawns the communications server, notifies the neighbors and starts looking for new targets.",
                "It could be argued, correctly, that the <br>zachik</br> worm can be easily defeated by current countermeasure techniques present on most systems today, such as disallowing direct root logins from the network.",
                "Within this context <br>zachik</br> can quickly be discarded as very simple and harmless worm that does not require further study.",
                "However, the reader should consider the following: 1.",
                "<br>zachik</br> can be easily modified to include a variety of infection vectors.",
                "For example, it could be programmed to guess common user names and their passwords; gain 326 access to a system, then guess the root password or use other well know vulnerabilities to gain root privileges; 2.",
                "<br>zachik</br> is a proof of concept worm.",
                "The importance of <br>zachik</br> is that it incorporates all of the behaviors of a swarm worm including, but not restricted to, distributed control, communication amongst agents, and learning; 3.",
                "<br>zachik</br> is composed of a large collection of agents operating independently which lends itself naturally to parallel algorithms such as a parallel search of the IPV4 address space.",
                "Within this context, SLAMMER, does incorporate a parallel search capability of potentially susceptible addresses.",
                "However, unlike <br>zachik</br>, the knowledge discovered by the search is never shared amongst the agents.",
                "For this reasons, and many others, one should not discard the potential of this new class of worms but rather embrace its study. 2.8 Self-Preservation In the case of <br>zachik</br> worm, the main self-preservation techniques used are simply keeping the payload small.",
                "In this context, this simply means restricting the number of passwords that an offspring inherits, masquerading worm messages as common http requests, and restricting the number of neighbors to a maximum of five-(5). 2.9 Propagation Choosing the next target(s) in an efficient matter requires thought.",
                "In the past, known and proposed worms, see [5], have applied propagation techniques that varied.",
                "These include: strictly random selection of a potential vulnerable host; target lists of vulnerable hosts; locally biased random selection (select a host target at random from a local subnet); and a combination of some or all of the above.",
                "In our test and simulation environments, we will apply a combination of locally biased and totally random selection of potential vulnerable hosts.",
                "However, due to the fact that the <br>zachik</br> worm is a swarm worm, address discovery (that is when non-existent addresses are discovered) information will be shared amongst members of the swarm.",
                "The infection and propagation threads do the following set of activities repeatedly: â¢ Choose an address â¢ Check the validity of the address â¢ Choose a set of passwords â¢ Try infecting the selected host with this set of passwords As described earlier, choosing an address makes use of a combination of random selection, local bias, and target lists.",
                "Specifically, to choose an address, the instance may either: â¢ Generate a new random address â¢ Generate an address on the local network â¢ Pick an address from a handoff list The choice is made randomly among these options, and can be varied to test the dependency of propagation on particular choices.",
                "Password are either chosen from the list of known passwords or newly generated.",
                "When an infection of a valid address fails, it is added to a list of handoffs, which is sent to the neighbors to try to work on. 2.10 Learning, CommunicationandDistributed Control 2.10.1 Communication The concept of a swarm is based on transfer of information amongst neighbors, which relay their new incoming messages to their neighbors, and so on until every worm instance in the swarm is aware of these messages.",
                "There are two classes of messages: data or information messages and commands.",
                "The command messages are meant for an external user (a.k.a., hackers and/or crackers) to control the actions of the instances, and are currently not implemented.",
                "The information messages are currently of three kinds: new member, passwords and exploitable addresses (handoffs).",
                "The new member messages are messages that a new instance sends to the neighbors on its (short) list of initial neighbors.",
                "The neighbors then register these instances in their neighbor list.",
                "These are messages that form the multi-connectivity of the swarm, and without them, the topology will be a treelike structure, where eliminating a single node would cause the instances beneath it to be inaccessible.",
                "The passwords messages inform instances of newly discovered passwords, and by informing all instances, the swarm as whole collects this information, which allows it to infect new instances more effectively.",
                "The handoffs messages inform instances of valid addresses that could not be compromised (fail at breaking the password for the root account).",
                "Since the address space is rather sparse, it takes a relatively long time (i.e. many trials) to discover a valid address.",
                "Therefore, by handing off discovered valid addresses, the swarm is (a) conserving energy by not re-discovering the same addresses (b) attacking more effectively.",
                "In a way, this is a simple instance of coordinated activity of a swarm. 2.10.2 Coordination When a worm instance is born, it relays its existence to all neighbors on its list.",
                "The main thread then spawns a few infection threads, and continues to handle incoming messages (registering neighbors, adding new passwords, receiving addresses and relaying these messages). 2.10.3 Distributed Control Control in the <br>zachik</br> worm is distributed in the sense that each instance of the worm performs a set of actions independently of every other instance while at the same time benefiting from the learning achieve by its immediate neighbors. 2.11 Goal Based Actions The first instantiation of the <br>zachik</br> worm has two basic goals.",
                "These are: (1) propagate, and (2) discover and share with members of th swarm new root passwords. 3.",
                "EXPERIMENTAL DESIGN In order to verify our hypothesis that Swarm Worms are more capable, and therefore dangerous than other well known 327 worms, a network testbed was created, and a simulator, capable of simulating large scale Internet-like topologies (IPV4 space), was developed.",
                "The network testbed consisted of a local area network of 30 Linux based computers.",
                "The simulator was written in C++ .",
                "The simple swarm worm described in section 2.6 was used to infect patient-zero, and then the swarm worm was allowed to propagate via its own mechanisms of propagation, distributed control, and swarm behaviors.",
                "In the case of a simple local area network of 30 computers, six-(6) different root passwords out of a password space of 4 digits (10000 options) were selected.",
                "At the start of the experiment a single known password is known, that of patient-zero.",
                "All shared passwords are distributed randomly across all nodes.",
                "Similarly, in the case of the simulation, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "For example, in one of our simulation runs, the network topology consisted of 200 subnets each containing 50 hosts.",
                "In such a topology, shared passwords were distributed across subnets where a varying percentage of passwords were shared across subnets.",
                "The percentages of shared passwords used was reflective of early empirical studies, where up to 39.7% of common passwords were found to be shared. 4.",
                "RESULTS In Figure 3, the results comparing Swarm Attack behavior versus that of a typical Malform Worm for a 30 node LAN are presented.",
                "In this set of empirical runs, six-(6) shared passwords were distributed at random across all nodes from a possible of 10,000 unknown passwords.",
                "The data presented reflects the behaviors of a total of three-(3) distinct classes of worm or swarm worms.",
                "The class of worms presented are as follows: â¢ I-NS-NL:= Generic worm, independent (I), no learning/memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; and â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 3, the results validate our original hypothesis that swarm worms are significantly more efficient and dangerous than generic worms.",
                "In this set of experiments, the sharing of passwords provides an order of magnitude improvement over a memoryless random worm.",
                "Similarly, a swarm worm that shares passwords and addresses is approximately two orders of magnitude more efficient than its generic counterpart.",
                "In Figure 3, a series of discontinuities can be observed.",
                "These discontinuities are an artifact of the small sample space used for this experiment.",
                "Basically, as soon as a password is broken, all nodes sharing that specific password are infected within a few seconds.",
                "Note that it is trivial for a swarm worm to scan and discovered a small shared password space.",
                "In Figure 4, the simulation results comparing Swarm Attack Behavior versus that of a Generic Malform Worm are presented.",
                "In this set of simulation runs, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "The data presented reflects the behaviors of three-(3) distinct classes of worm or swarm worms and two(2) different target host selection scanning strategies (random scanning and local bias).",
                "The amount of local bias was varied across multiple simulation runs.",
                "The results presented are aggregate behaviors.",
                "In general the following class of Generic Worms and Swarm Worms were simulated.",
                "Address Scanning: â¢ Random:= addresses are selected at random from a subset of the IPV4 space, namely, a 224 address space; and â¢ Local Bias:= addresses are selected at random from either a local subnet (256 addresses) or from a subset of the IPV4 space, namely, a 224 address space.",
                "The percentage of local bias is varied across multiple runs.",
                "Learning, Communication & Distributed Control â¢ I-NL-NS: Generic worm, independent (I), no learning/ memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ I-L-OOS: Generic worm, independent (I), learning/ memoryless (L), and one time sharing of information with offsprings only (OOS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; â¢ S-L-S&AOP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of addresses with neighbors and offsprings, shares passwords one time only (at creation) with offsprings(SA&OP); â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 4, the results are consistent with our set of empirical results.",
                "In addition, the following observations can be made. 1.",
                "Local preference is incredibly effective. 2.",
                "Short address handoffs are more effective than long ones.",
                "We varied the size of the list allowed in the sharing of addresses; the overhead associated with a long address list is detrimental to the performance of the swarm worm, as well as to its stealthiness; 3.",
                "For the local bias case, sharing valid addresses of susceptible host, S-L-S&AOP worm (recall, the S-L-S&AOP swarm shares passwords, one time only, with offsprings 328 at creation time) is more effective than sharing passwords in the case of the S-L-SP swarm.",
                "In this case, we can think of the swarm as launching a distributeddictionary attack: different segments of the swarm use different passwords to try to break into susceptible uninfected host.",
                "In the local bias mode, early in the life of the swarm, address-sharing is more effective than password-sharing, until most subnets are discovered.",
                "Then the targeting of local addresses assists in discovering the susceptible hosts, while the swarm members need to waste time rediscovering passwords; and 4.",
                "Infecting the last 0.5% of nodes takes a very long time in non-local bias mode.",
                "Basically, the shared password list across subnets has been exhausted, and the swarm reverts to simply a random discovery of password algorithm.",
                "Figure 3: Swarm Attack Behavior vs. Malform Worm: Empirical Results, 30node LAN Figure 4: Swarm Attack Behavior vs. Malform Worm: Simulation Results 5.",
                "SUMMARY AND FUTURE WORK In this manuscript, we have presented an abstract model, similar in some aspects to that of Weaver [5], that helps explain the generic nature of worms.",
                "The model presented in section 2 was extended to incorporate a new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
                "Such Swarm Worms are potentially more harmful than their generic counterparts.",
                "In addition, the first instance, to our knowledge, of such a learning worm was created, called <br>zachik</br>.",
                "<br>zachik</br> is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
                "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms is capable of compromising hosts a rates up to 2 orders of magnitude faster than its generic counterpart while retaining stealth capabilities.",
                "This work opens up a new area of interesting problems.",
                "Some of the most interesting and pressing problems to be consider are as follows: â¢ Is it possible to apply some of learning concepts developed over the last ten years in the areas of swarm intelligence, agent systems, and distributed control to the design of sophisticated swarm worms in such a way that true emergent behavior takes place? â¢ Are the current techniques being developed in the design of Intrusion Detection & CounterMeasure Systems and Survivable systems effective against this new class of worms? ; and â¢ What techniques, if any, can be developed to create defenses against swarm worms? 6.",
                "ACKNOWLEDGMENTS This work was conducted as part of a larger effort in the development of next generation Intrusion Detection & CounterMeasure Systems at WSSRL.",
                "The work is conducted under the auspices of Grant ACG-2004-06 by the Acumen Consulting Group, Inc., Marlboro, Massachusetts. 7.",
                "REFERENCES [1] C.C.",
                "Zou, L. Gao, W. G., and Towsley, D. Monitoring and early warning for internet worms.",
                "In 10th ACM Conference on Computer and Communications Security, Washington, DC (October 2003). [2] Liu, S., and Passino, K. Swarm intelligence: Literature overview.",
                "In Dept. of Electrical Engineering, The Ohio State University, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., and Weaver, N. The spread of the saphire/slammer worm.",
                "Tech. rep., A joint effort of CAIDA, ICSI, Silicon Defense, UC Berkeley EECS and UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S., and Cunningham, R. A taxonomy of computer worms.",
                "In Proceedings of the ACM Workshop on Rapid Malware (WORM) (2003). 329"
            ],
            "original_annotated_samples": [
                "In addition, we will present preliminary results on the propagation speeds of one such swarm worm, called the <br>zachik</br> worm.",
                "We will show that <br>zachik</br> is capable of propagating at a rate 2 orders of magnitude faster than similar worms without swarm capabilities.",
                "Specifically, the first instance, to our knowledge, of such a learning worm was created, called <br>zachik</br>.",
                "<br>zachik</br> is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
                "This model is used in section 2.6 to described the first instance of a swarm worm, <br>zachik</br>."
            ],
            "translated_annotated_samples": [
                "AdemÃ¡s, presentaremos resultados preliminares sobre las velocidades de propagaciÃ³n de un gusano de enjambre llamado gusano ZachiK.",
                "Demostraremos que ZachiK es capaz de propagarse a una velocidad 2 Ã³rdenes de magnitud mÃ¡s rÃ¡pida que gusanos similares sin capacidades de enjambre.",
                "EspecÃ­ficamente, la primera instancia, segÃºn nuestro conocimiento, de un <br>gusano de aprendizaje</br> de este tipo fue creado, llamado ZachiK.",
                "ZachiK es un gusano enjambre de descifrado de contraseÃ±as simple que incorpora diferentes estrategias de aprendizaje y comparticiÃ³n de informaciÃ³n.",
                "Este modelo se utiliza en la secciÃ³n 2.6 para describir la primera instancia de un <br>gusano enjambre</br>, ZachiK."
            ],
            "translated_text": "Un AnÃ¡lisis Inicial y PresentaciÃ³n de Malware que Exhibe Comportamiento Similar a un Enjambre por Fernando C. ColÃ³n Osorio Laboratorio de InvestigaciÃ³n en Seguridad de Sistemas InalÃ¡mbricos (W.S.S.R.L.) El Slammer, que actualmente es el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada, se observÃ³ infectando el 90 por ciento de todos los hosts vulnerables de Internet en 10 minutos. Aunque la acciÃ³n principal que realiza el gusano Slammer es una replicaciÃ³n relativamente poco sofisticada de sÃ­ mismo, se propaga tan rÃ¡pidamente que la respuesta humana fue ineficaz. La mayorÃ­a de las estrategias de contramedidas propuestas se basan principalmente en la detecciÃ³n de tasas y algoritmos de limitaciÃ³n. Sin embargo, se estÃ¡n diseÃ±ando y desarrollando estrategias para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En nuestro trabajo, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n radicalmente diferentes, y posiblemente dichas tÃ©cnicas resultarÃ¡n ineficaces. EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. La Inteligencia Emergente es el comportamiento de sistemas, muy similar a sistemas biolÃ³gicos como hormigas o abejas, donde las interacciones locales simples de miembros autÃ³nomos, con acciones primitivas simples, dan lugar a un comportamiento global complejo e inteligente. En este manuscrito introduciremos los principios bÃ¡sicos detrÃ¡s de la idea de los Gusanos en Enjambre, asÃ­ como la estructura bÃ¡sica requerida para ser considerado un gusano en enjambre. AdemÃ¡s, presentaremos resultados preliminares sobre las velocidades de propagaciÃ³n de un gusano de enjambre llamado gusano ZachiK. Demostraremos que ZachiK es capaz de propagarse a una velocidad 2 Ã³rdenes de magnitud mÃ¡s rÃ¡pida que gusanos similares sin capacidades de enjambre. CategorÃ­as y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: DetecciÃ³n de Intrusiones; D.4.6 [Seguridad y ProtecciÃ³n]: Software Invasivo TÃ©rminos Generales ExperimentaciÃ³n, Seguridad 1. INTRODUCCIÃN Y TRABAJO PREVIO En las primeras horas de la maÃ±ana (05:30 GMT) del 25 de enero de 2003, el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada comenzÃ³ a propagarse por Internet. Dentro de los 10 minutos posteriores al primer huÃ©sped infectado (paciente cero), el 90 por ciento de todos los huÃ©spedes vulnerables habÃ­an sido comprometidos, creando una interrupciÃ³n significativa en la infraestructura de Internet a nivel global. Vern Paxson del Instituto Internacional de Ciencias de la ComputaciÃ³n y del Laboratorio Nacional Lawrence Berkeley comentÃ³ en su anÃ¡lisis de Slammer: El gusano Slammer se propagÃ³ tan rÃ¡pidamente que la respuesta humana fue ineficaz, ver [4]. La parte interesante, desde nuestro punto de vista, sobre la propagaciÃ³n de Slammer es que era un gusano relativamente poco sofisticado con un comportamiento benigno, es decir, la auto-reproducciÃ³n. Desde Slammer, los investigadores han explorado los comportamientos de los gusanos de propagaciÃ³n rÃ¡pida y han diseÃ±ado estrategias de contramedidas basadas principalmente en la detecciÃ³n de la velocidad y algoritmos de limitaciÃ³n. Por ejemplo, Zou, et al., [2], propusieron un esquema donde se utiliza un filtro de Kalman para detectar la propagaciÃ³n temprana de un gusano. Otros investigadores han propuesto el uso de detectores donde las tasas de mensajes de Destino Inalcanzable son monitoreadas por los firewalls, y un aumento significativo mÃ¡s allÃ¡ de lo normal alerta a la organizaciÃ³n sobre la posible presencia de un gusano. Sin embargo, tales estrategias sufren del sÃ­ndrome de luchar la Ãºltima guerra. Es decir, se estÃ¡n diseÃ±ando y desarrollando sistemas para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En el trabajo descrito aquÃ­, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n diferentes, y por lo tanto, dichas tÃ©cnicas pueden tener algunas limitaciones significativas. EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. El concepto de inteligencia emergente fue estudiado por primera vez en asociaciÃ³n con sistemas biolÃ³gicos. En tales estudios, los primeros investigadores descubrieron una variedad de comportamientos interesantes de insectos o animales en la naturaleza. Una bandada de pÃ¡jaros cruza el cielo. Un grupo de hormigas busca comida. Una escuela de peces nada, gira, huye juntos lejos de un depredador, y asÃ­ sucesivamente. En general, este tipo de movimiento agregado se ha llamado comportamiento de enjambre. Los biÃ³logos y cientÃ­ficos de la computaciÃ³n en el campo de la inteligencia artificial han estudiado tales enjambres biolÃ³gicos y han intentado crear modelos que expliquen cÃ³mo interactÃºan los elementos de un enjambre, logran objetivos y evolucionan. AdemÃ¡s, en los Ãºltimos aÃ±os el estudio de la inteligencia de enjambre ha cobrado cada vez mÃ¡s importancia en los campos de la robÃ³tica, el diseÃ±o de Redes MÃ³viles Ad-hoc (MANETS), el diseÃ±o de Sistemas de DetecciÃ³n de Intrusiones, el estudio de patrones de trÃ¡fico en sistemas de transporte, en aplicaciones militares y otras Ã¡reas, ver [3]. Los conceptos bÃ¡sicos que se han desarrollado en la Ãºltima dÃ©cada para explicar los enjambres y su comportamiento incluyen cuatro componentes bÃ¡sicos. Estos son: 1. Sencillez de la lÃ³gica y acciones: Un enjambre estÃ¡ compuesto por N agentes cuya inteligencia es limitada. Los agentes en el enjambre utilizan reglas locales simples para gobernar sus acciones. Algunos modelos llaman a estas acciones o comportamientos primitivos; 2. Mecanismos de comunicaciÃ³n local: Los agentes interactÃºan con otros miembros en el enjambre a travÃ©s de simples mecanismos de comunicaciÃ³n local. Por ejemplo, un pÃ¡jaro en una bandada percibe la posiciÃ³n del pÃ¡jaro adyacente y aplica una regla simple de evitaciÃ³n y seguimiento. 3. Control distribuido: Los agentes autÃ³nomos interactÃºan con su entorno, que probablemente consiste en otros agentes, pero actÃºan relativamente de forma independiente de todos los demÃ¡s agentes. No hay un mando central o lÃ­der, y ciertamente no hay un plan global. Inteligencia emergente: El comportamiento agregado de agentes autÃ³nomos resulta en comportamientos inteligentes complejos, incluyendo la autoorganizaciÃ³n. Para comprender completamente el comportamiento de tales enjambres, es necesario construir un modelo que explique el comportamiento de lo que llamaremos gusanos genÃ©ricos. Este modelo, que amplÃ­a el trabajo de Weaver [5], se presenta aquÃ­ en la secciÃ³n 2. AdemÃ¡s, tenemos la intenciÃ³n de ampliar dicho modelo de tal manera que explique claramente los comportamientos de esta nueva clase de gusanos potencialmente peligrosos llamados Gusanos en Enjambre. Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biolÃ³gicos y muestran un alto grado de aprendizaje, comunicaciÃ³n e inteligencia distribuida. Tales gusanos en enjambre son potencialmente mÃ¡s daÃ±inos que sus contrapartes genÃ©ricas similares. EspecÃ­ficamente, la primera instancia, segÃºn nuestro conocimiento, de un <br>gusano de aprendizaje</br> de este tipo fue creado, llamado ZachiK. ZachiK es un gusano enjambre de descifrado de contraseÃ±as simple que incorpora diferentes estrategias de aprendizaje y comparticiÃ³n de informaciÃ³n. Un gusano de enjambre similar fue desplegado tanto en una red de Ã¡rea local de treinta (30) hosts, como simulado en una topologÃ­a de 10,000 nodos. Los resultados preliminares mostraron que dichos gusanos son capaces de comprometer a los anfitriones a velocidades hasta dos Ã³rdenes de magnitud mÃ¡s rÃ¡pidas que su contraparte genÃ©rica. El resto de este manuscrito estÃ¡ estructurado de la siguiente manera. En la secciÃ³n 2 se presenta un modelo abstracto tanto de gusanos genÃ©ricos como de gusanos en enjambre. Este modelo se utiliza en la secciÃ³n 2.6 para describir la primera instancia de un <br>gusano enjambre</br>, ZachiK. ",
            "candidates": [],
            "error": [
                [
                    "gusano de aprendizaje",
                    "gusano enjambre"
                ]
            ]
        },
        "prng method": {
            "translated_key": "mÃ©todo PRNG",
            "is_in_text": true,
            "original_annotated_sentences": [
                "An Initial Analysis and Presentation of Malware Exhibiting Swarm-Like Behavior Fernando C.ColÂ´on Osorio Wireless System Security Research Laboratory (W.S.S.R.L.)",
                "420 Lakeside Avneue Marlboro, Massachusetts 01752 fcco@cs.wpi.edu Zachi Klopman Wireless System Security Research Laboratory (W.S.S.R.L.) 420 Lakeside Avneue Marlboro, Massachusetts 01752 zachi@cs.wpi.edu ABSTRACT The Slammer, which is currently the fastest computer worm in recorded history, was observed to infect 90 percent of all vulnerable Internets hosts within 10 minutes.",
                "Although the main action that the Slammer worm takes is a relatively unsophisticated replication of itself, it still spreads so quickly that human response was ineffective.",
                "Most proposed countermeasures strategies are based primarily on rate detection and limiting algorithms.",
                "However, such strategies are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In our work, we put forth the hypothesis that next generation worms will be radically different, and potentially such techniques will prove ineffective.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
                "Emergent Intelligence is the behavior of systems, very much like biological systems such as ants or bees, where simple local interactions of autonomous members, with simple primitive actions, gives rise to complex and intelligent global behavior.",
                "In this manuscript we will introduce the basic principles behind the idea of Swarm Worms, as well as the basic structure required in order to be considered a swarm worm.",
                "In addition, we will present preliminary results on the propagation speeds of one such swarm worm, called the ZachiK worm.",
                "We will show that ZachiK is capable of propagating at a rate 2 orders of magnitude faster than similar worms without swarm capabilities.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Intrusion Detection; D.4.6 [Security and Protection]: Invasive software General Terms Experimentation, Security 1.",
                "INTRODUCTION AND PREVIOUSWORK In the early morning hours (05:30 GMT) of January 25, 2003 the fastest computer worm in recorded history began spreading throughout the Internet.",
                "Within 10 minutes after the first infected host (patient zero), 90 percent of all vulnerable hosts had been compromised creating significant disruption to the global Internet infrastructure.",
                "Vern Paxson of the International Computer Science Institute and Lawrence Berkeley National Laboratory in its analysis of Slammer commented: The Slammer worm spread so quickly that human response was ineffective, see [4] The interesting part, from our perspective, about the spread of Slammer is that it was a relatively unsophisticated worm with benign behavior, namely self-reproduction.",
                "Since Slammer, researchers have explored the behaviors of fast spreading worms, and have designed countermeasures strategies based primarily on rate detection and limiting algorithms.",
                "For example, Zou, et al., [2], proposed a scheme where a Kalman filter is used to detect the early propagation of a worm.",
                "Other researchers have proposed the use of detectors where rates of Destination Unreachable messages are monitored by firewalls, and a significant increase beyond normal, alerts the organization to the potential presence of a worm.",
                "However, such strategies suffer from the fighting the last War syndrome.",
                "That is, systems are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In the work described here, we put forth the hypothesis that next generation worms will be different, and therefore such techniques may have some significant limitations.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
                "The concept of emergent intelligence was first studied in association with biological systems.",
                "In such studies, early researchers discovered a variety of interesting insect or animal behaviors in the wild.",
                "A flock of birds sweeps across the sky.",
                "A group of ants forages for food.",
                "A school of fish swims, turns, flees together away from a predator, ands so forth.",
                "In general, this kind of aggregate motion has been called swarm behavior.",
                "Biologists, and computer scientists in the field of artificial intelligence have studied such biological swarms, and 323 attempted to create models that explain how the elements of a swarm interact, achieve goals, and evolve.",
                "Moreover, in recent years the study of swarm intelligence has become increasingly important in the fields of robotics, the design of Mobile ad-hoc Networks (MANETS), the design of Intrusion Detection Systems, the study of traffic patterns in transportation systems, in military applications, and other areas, see [3].",
                "The basic concepts that have been developed over the last decade to explain swarms, and swarm behavior include four basic components.",
                "These are: 1.",
                "Simplicity of logic & actions: A swarm is composed of N agents whose intelligence is limited.",
                "Agents in the swarm use simple local rules to govern their actions.",
                "Some models called this primitive actions or behaviors; 2.",
                "Local Communication Mechanisms: Agents interact with other members in the swarm via simple local communication mechanisms.",
                "For example, a bird in a flock senses the position of adjacent bird and applies a simple rule of avoidance and follow. 3.",
                "Distributed control: Autonomous agents interact with their environment, which probably consists of other agents, but act relatively independently from all other agents.",
                "There is no central command or leader, and certainly there is no global plan. 4.",
                "Emergent Intelligence: Aggregate behavior of autonomous agents results in complex intelligent behaviors; including self-organization.",
                "In order to understand fully the behavior of such swarms it is necessary to construct a model that explains the behavior of what we will call generic worms.",
                "This model, which extends the work by Weaver [5] is presented here in section 2.",
                "In addition, we intend to extend said model in such a way that it clearly explains the behaviors of this new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
                "Such Swarm Worms are potentially more harmful than their similar generic counterparts.",
                "Specifically, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
                "ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
                "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms are capable of compromising hosts at rates up to two orders of magnitude faster than their generic counterpart.",
                "The rest of this manuscript is structure as follows.",
                "In section 2 an abstract model of both generic worms as well as swarm worms is presented.",
                "This model is used in section 2.6 to described the first instance of a swarm worm, ZachiK.",
                "In section 4, preliminary results via both empirical measurements as well as simulation is presented.",
                "Finally, in section 5 our conclusions and insights into future work are presented. 2.",
                "WORM MODELING In order to study the behavior of swarm worms in general, it is necessary to create a model that realistically reflects the structure of worms and it is not necessarily tied to a specific instance.",
                "In this section, we described such a model where a general worm is describe as having four-(4) basic components or subfunctions.",
                "By definition, a worm is a selfcontained, self propagating program.",
                "Thus, in simple terms, it has two main functions: that which propagates and that which does other things.",
                "We propose that there is a third broad functionality of a worm, that of self-preservation.",
                "We also propose that the other functionality of a worm may be more appropriately categorized as Goal-Based Actions (GBA), as whatever functionality included in a worm will naturally be dependent on whatever goals (and subgoals) the author has.",
                "The work presented by Weaver et. al. in [5] provides us with mainly an action and technique based taxonomy of computer worms, which we utilize and further extend here. 2.1 Propagation The propagation function itself may be broken down into three actions: acquire target, send scan, and infect target.",
                "Acquiring the target simply means picking a host to attack next.",
                "Sending a scan involves checking to see if that host is receptive to an infection attempt, since IP-space is sparsely populated.",
                "This may involve a simple ping to check if the host is alive or a full out vulnerability assessment.",
                "Infecting the target is the actual method used to send the worm code to the new host.",
                "In algorithm form: propagate() { host := acquire_target() success := send_scan(host) if( success ) then infect(host) endif } In the case of a simple worm which does not first check to see if the host is available or susceptible (such as Slammer), the scan method is dropped: propagate() { host := acquire_target() infect(host) } Each of these actions may have an associated cost to its inclusion and execution, such as increased worm size and CPU or network load.",
                "Depending on the authors needs or requirements, these become limiting factors in what may be included in the worms actions.",
                "This is discussed further after expanding upon these actions below. 2.2 Target Acquisition: The Target Acquisition phase of our worm algorithm is built directly off of the Target Discovery section in [5].",
                "Weaver et. al. taxonomize this task into 5 separate categories.",
                "Here, we further extend their work through parameterization.",
                "Scanning: Scanning may be considered an equation-based method for choosing a host.",
                "Any type of equation may be used to arrive at an IP address, but there are three main types seen thus far: sequential, random, and local preference.",
                "Sequential scanning is exactly as it sounds: start at an IP address and increment through all the IP space.",
                "This could carry with it the options of which IP to start with (user chosen value, random, or based on IP of infected host) and 324 how many times to increment (continuous, chosen value, or subnet-based).",
                "Random scanning is completely at random (depending on the chosen <br>prng method</br> and its seed value).",
                "Local preference scanning is a variance of either Sequential or Random, whereby it has a greater probability of choosing a local IP address over a remote one (for example, the traditional 80/20 split).",
                "Pre-generated Target Lists: Pre-generated Target Lists, or so called hit-lists, could include the options for percentage of total population and percentage wrong, or just number of IPs to include.",
                "Implicit to this type is the fact that the list is divided among a parent and its children, avoiding the problem of every instance hitting the exact same machines.",
                "Externally Generated Target Lists: Externally generated target lists depend on one or more external sources that can be queried for host data.",
                "This will involve either servers that are normally publicly available, such as gaming meta-servers, or ones explicitly setup by the worm or worm author.",
                "The normally available meta-servers could have parameters for rates of change, such as many popping up at night or leaving in the morning.",
                "Each server could also have a maximum queries/second that it would be able to handle.",
                "The worm would also need a way of finding these servers, either hard-coded or through scanning.",
                "Internal Target Lists: Internal Target Lists are highly dependent on the infected host.",
                "This method could parameterize the choice of how much info is on the host, such as all machines in subnet, all windows boxes in subnet, particular servers, number of internal/external, or some combination.",
                "Passive: Passive methods are determined by normal interactions between hosts.",
                "Parameters may include a rate of interaction with particular machines, internal/external rate of interaction, or subnet-based rate of interaction.",
                "Any of these methods may also be combined to produce different types of target acquisition strategies.",
                "For example, the a worm may begin with an initial hit-list of 100 different hosts or subnets.",
                "Once it has exhausted its search using the hit-list, it may then proceed to perform random scanning with a 50% local bias.",
                "It is important to note, however, that the resource consumption of each method is not the same.",
                "Different methods may require the worm to be large, such as the extra bytes required by a hit-list, or to take more processing time, such as by searching the host for addresses of other vulnerable hosts.",
                "Further research and analysis should be performed in this area to determine associated costs for using each method.",
                "The costs could then be used in determining design tradeoffs that worm authors engage at.",
                "For example, hit lists provide a high rate of infection, but at a high cost of worm payload size. 2.2.1 Sending a Scan The send scan function tests to see if the host is available for infection.",
                "This can be as simple as checking if the host is up on the network or as complex as checking if the host is vulnerable to the exploit which will be used.",
                "The sending of a scan before attempted infection can increase the scanning rate if the cost for failing an infection is greater than the cost of failing a scan or sending a scan plus infection; and failures are more frequent than successes.",
                "One important parameter to this would be the choice of transport protocol (TCP/UDP) or just simply the time for one successful scan and time for one failed scan.",
                "Also, whether or not it tests for the host to be up or if it is a full test for the vulnerability (or for multiple vulnerabilities). 2.2.2 Infection Vector (IV) The particular infection vector used to access the remote host is mainly dependent on the particular vulnerability chosen to exploit.",
                "In a non-specific sense, it is dependent on the transport protocol chosen to use and the message size to be sent.",
                "Section 3 of [5] also proposes three particular classes of IV: Self-carried, second channel, and embedded. 2.3 Self Preservation The Self Preservation actions of a worm may take many forms.",
                "In the wild, worms have been observed to disable anti-virus software or prevent sending itself to certain antivirusknown addresses.",
                "They have also been seen to attempt disabling of other worms which may be contending for the same system.",
                "We also believe that a time-based throttled scanning may help the worm to slip under the radar.",
                "We also propose a decoy method, whereby a worm will release a few children that cause a lot of noise so that the parent is not noticed.",
                "It has also been proposed [5] that a worm cause damage to its host if, and only if, it is disturbed in some way.",
                "This module could contain parameters for: probability of success in disabling anti-virus or other software updates, probability of being noticed and thus removed, or hardening of the host against other worms. 2.4 Goal-Based Actions A worms GBA functionality depends on the authors goal list.",
                "The Payloads section of [5] provides some useful suggestions for such a module.",
                "The opening of a back-door can make the host susceptible to more attacks.",
                "This would involve a probability of the back-door being used and any associated traffic utilization.",
                "It could also provide a list of other worms this host is now susceptible to or a list of vulnerabilities this host now has.",
                "Spam relays and HTTP-Proxies of course have an associated bandwidth consumption or traffic pattern.",
                "Internet DoS attacks would have a set time of activation, a target, and a traffic pattern.",
                "Data damage would have an associated probability that the host dies because of the damage.",
                "In Figure 1, this general model of a worm is summarized.",
                "Please note that in this model there is no learning, no, or very little, sharing of information between worm instances, and certainly no coordination of actions.",
                "In the next section we expand the model to include such mechanisms, and hence, arrive at the general model of a swarm worm. 2.5 Swarms - General Model As described in section 1, the basic characteristics that distinguished swarm behavior from simply what appears to be collective coordinated behaviors are four basic attributes.",
                "These are: 1.",
                "Simplicity of logic & actions; 2.",
                "Local Communication Mechanisms; 3.",
                "Distributed control; and 4.",
                "Emergent Intelligence, including self-organization. 325 Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 1: General Worm Model In this work we aggregate all of these attributes under the general title of Learning, Communication, and Distributed Control.",
                "The presence of these attributes distinguishes swarm worms from otherwise regular worms, or other types of malware such as Zombies.",
                "In figure ? ?, the generic model of a worm is expanded to included these set of actions.",
                "Within this context then, a worm like Slammer cannot be categorized as a swarm worm due to the fact that new instances of the worm do not coordinate their actions or share information.",
                "On the other hand, Zombies and many other forms of DDoS, which at first glance may be consider swarm worms are not.",
                "This is simply due to fact that in the case of Zombies, control is not distributed but rather centralized, and no emergent behaviors arise.",
                "The latter, the potential emergence of intelligence or new behaviors is what makes swarm worms so potentially dangerous.",
                "Finally, when one considers the majority of recent disruptions to the Internet Infrastructure, and in light of our description of swarm attacks, then said disruptions can be easily categorized as precursors to truly swarm behavior.",
                "Specifically, â¢ DDOS - Large number of compromised hosts send useless packets requiring processing (Stacheldraht, http : //www.cert.org/ incidentnotes/IN â 99 â 04.html).",
                "DDoS attacks are the early precursors to Swarm Attacks due to the large number of agents involved. â¢ Code Red CrV1, Code Red II, Nimbda - Exhibit early notions of swarm attacks, including a backdoor communication channel. â¢ Staniford & Paxson in How to Own the Internet in Your Spare Time? explore modifications to CrV1, Code Red I, II with a swarm like type of behavior.",
                "For example, they speculate on new worms which employ direct worm-to-worm communication, and employ programmable updates.",
                "For example the Warhol worm, and Permutation-Scanning (self coordinating) worms. 2.6 Swarm Worm: the details In considering the creation of what we believed to be the first Swarm Worm in existence, we wanted to adhere as close as possible to the general model presented in section ? ? while at the same time facilitating large scale analysis, both empirical and through simulations, of the behavior of the swarm.",
                "For this reason, we selected as the first instance Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Learning, Communication, Pheromones/Flags (Test and Distributed Control if Worm is already present) Time bombs, Learning Algorithms, IRC channel Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 2: General Model of a Swarm Worm of the swarm a simple password cracking worm.",
                "The objective of this worm simply is to infect a host by sequentially attempting to login into the host using well known passwords (dictionary attack), passwords that have been discovered previously by any member of the swarm, and random passwords.",
                "Once, a host is infected, the worm will create communication channels with both its known neighbors at that time, as well as with any offsprings that it successfully generates.",
                "In this context a successful generation of an offspring means simply infecting a new host and replicating an exact copy of itself in such a host.",
                "We call this swarm worm the ZachiK worm in honor of one of its creators.",
                "As it can be seen from this description, the ZachiK worm exhibits all of the elements described before.",
                "In the following sections, we described in detail each one of the elements of the ZachiK worm. 2.7 Infection Vector The infection vector used for ZachiK worm is the secure shell protocol SSH.",
                "A modified client which is capable of receiving passwords from the command line was written, and integrated with a script that supplies it with various passwords: known and random.",
                "When a password is found for an appropriate target, the infection process begins.",
                "After the root password of a host is discovered, the worm infects the target host and replicates itself.",
                "The worm creates a new directory in the target host, copies the modified ssh client, the script, the communications servers, and the updated versions of data files (list of known passwords and a list of current neighbors).",
                "It then runs the modified script on the newly infected hosts, which spawns the communications server, notifies the neighbors and starts looking for new targets.",
                "It could be argued, correctly, that the ZachiK worm can be easily defeated by current countermeasure techniques present on most systems today, such as disallowing direct root logins from the network.",
                "Within this context ZachiK can quickly be discarded as very simple and harmless worm that does not require further study.",
                "However, the reader should consider the following: 1.",
                "ZachiK can be easily modified to include a variety of infection vectors.",
                "For example, it could be programmed to guess common user names and their passwords; gain 326 access to a system, then guess the root password or use other well know vulnerabilities to gain root privileges; 2.",
                "ZachiK is a proof of concept worm.",
                "The importance of ZachiK is that it incorporates all of the behaviors of a swarm worm including, but not restricted to, distributed control, communication amongst agents, and learning; 3.",
                "ZachiK is composed of a large collection of agents operating independently which lends itself naturally to parallel algorithms such as a parallel search of the IPV4 address space.",
                "Within this context, SLAMMER, does incorporate a parallel search capability of potentially susceptible addresses.",
                "However, unlike ZachiK, the knowledge discovered by the search is never shared amongst the agents.",
                "For this reasons, and many others, one should not discard the potential of this new class of worms but rather embrace its study. 2.8 Self-Preservation In the case of ZachiK worm, the main self-preservation techniques used are simply keeping the payload small.",
                "In this context, this simply means restricting the number of passwords that an offspring inherits, masquerading worm messages as common http requests, and restricting the number of neighbors to a maximum of five-(5). 2.9 Propagation Choosing the next target(s) in an efficient matter requires thought.",
                "In the past, known and proposed worms, see [5], have applied propagation techniques that varied.",
                "These include: strictly random selection of a potential vulnerable host; target lists of vulnerable hosts; locally biased random selection (select a host target at random from a local subnet); and a combination of some or all of the above.",
                "In our test and simulation environments, we will apply a combination of locally biased and totally random selection of potential vulnerable hosts.",
                "However, due to the fact that the ZachiK worm is a swarm worm, address discovery (that is when non-existent addresses are discovered) information will be shared amongst members of the swarm.",
                "The infection and propagation threads do the following set of activities repeatedly: â¢ Choose an address â¢ Check the validity of the address â¢ Choose a set of passwords â¢ Try infecting the selected host with this set of passwords As described earlier, choosing an address makes use of a combination of random selection, local bias, and target lists.",
                "Specifically, to choose an address, the instance may either: â¢ Generate a new random address â¢ Generate an address on the local network â¢ Pick an address from a handoff list The choice is made randomly among these options, and can be varied to test the dependency of propagation on particular choices.",
                "Password are either chosen from the list of known passwords or newly generated.",
                "When an infection of a valid address fails, it is added to a list of handoffs, which is sent to the neighbors to try to work on. 2.10 Learning, CommunicationandDistributed Control 2.10.1 Communication The concept of a swarm is based on transfer of information amongst neighbors, which relay their new incoming messages to their neighbors, and so on until every worm instance in the swarm is aware of these messages.",
                "There are two classes of messages: data or information messages and commands.",
                "The command messages are meant for an external user (a.k.a., hackers and/or crackers) to control the actions of the instances, and are currently not implemented.",
                "The information messages are currently of three kinds: new member, passwords and exploitable addresses (handoffs).",
                "The new member messages are messages that a new instance sends to the neighbors on its (short) list of initial neighbors.",
                "The neighbors then register these instances in their neighbor list.",
                "These are messages that form the multi-connectivity of the swarm, and without them, the topology will be a treelike structure, where eliminating a single node would cause the instances beneath it to be inaccessible.",
                "The passwords messages inform instances of newly discovered passwords, and by informing all instances, the swarm as whole collects this information, which allows it to infect new instances more effectively.",
                "The handoffs messages inform instances of valid addresses that could not be compromised (fail at breaking the password for the root account).",
                "Since the address space is rather sparse, it takes a relatively long time (i.e. many trials) to discover a valid address.",
                "Therefore, by handing off discovered valid addresses, the swarm is (a) conserving energy by not re-discovering the same addresses (b) attacking more effectively.",
                "In a way, this is a simple instance of coordinated activity of a swarm. 2.10.2 Coordination When a worm instance is born, it relays its existence to all neighbors on its list.",
                "The main thread then spawns a few infection threads, and continues to handle incoming messages (registering neighbors, adding new passwords, receiving addresses and relaying these messages). 2.10.3 Distributed Control Control in the ZachiK worm is distributed in the sense that each instance of the worm performs a set of actions independently of every other instance while at the same time benefiting from the learning achieve by its immediate neighbors. 2.11 Goal Based Actions The first instantiation of the ZachiK worm has two basic goals.",
                "These are: (1) propagate, and (2) discover and share with members of th swarm new root passwords. 3.",
                "EXPERIMENTAL DESIGN In order to verify our hypothesis that Swarm Worms are more capable, and therefore dangerous than other well known 327 worms, a network testbed was created, and a simulator, capable of simulating large scale Internet-like topologies (IPV4 space), was developed.",
                "The network testbed consisted of a local area network of 30 Linux based computers.",
                "The simulator was written in C++ .",
                "The simple swarm worm described in section 2.6 was used to infect patient-zero, and then the swarm worm was allowed to propagate via its own mechanisms of propagation, distributed control, and swarm behaviors.",
                "In the case of a simple local area network of 30 computers, six-(6) different root passwords out of a password space of 4 digits (10000 options) were selected.",
                "At the start of the experiment a single known password is known, that of patient-zero.",
                "All shared passwords are distributed randomly across all nodes.",
                "Similarly, in the case of the simulation, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "For example, in one of our simulation runs, the network topology consisted of 200 subnets each containing 50 hosts.",
                "In such a topology, shared passwords were distributed across subnets where a varying percentage of passwords were shared across subnets.",
                "The percentages of shared passwords used was reflective of early empirical studies, where up to 39.7% of common passwords were found to be shared. 4.",
                "RESULTS In Figure 3, the results comparing Swarm Attack behavior versus that of a typical Malform Worm for a 30 node LAN are presented.",
                "In this set of empirical runs, six-(6) shared passwords were distributed at random across all nodes from a possible of 10,000 unknown passwords.",
                "The data presented reflects the behaviors of a total of three-(3) distinct classes of worm or swarm worms.",
                "The class of worms presented are as follows: â¢ I-NS-NL:= Generic worm, independent (I), no learning/memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; and â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 3, the results validate our original hypothesis that swarm worms are significantly more efficient and dangerous than generic worms.",
                "In this set of experiments, the sharing of passwords provides an order of magnitude improvement over a memoryless random worm.",
                "Similarly, a swarm worm that shares passwords and addresses is approximately two orders of magnitude more efficient than its generic counterpart.",
                "In Figure 3, a series of discontinuities can be observed.",
                "These discontinuities are an artifact of the small sample space used for this experiment.",
                "Basically, as soon as a password is broken, all nodes sharing that specific password are infected within a few seconds.",
                "Note that it is trivial for a swarm worm to scan and discovered a small shared password space.",
                "In Figure 4, the simulation results comparing Swarm Attack Behavior versus that of a Generic Malform Worm are presented.",
                "In this set of simulation runs, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "The data presented reflects the behaviors of three-(3) distinct classes of worm or swarm worms and two(2) different target host selection scanning strategies (random scanning and local bias).",
                "The amount of local bias was varied across multiple simulation runs.",
                "The results presented are aggregate behaviors.",
                "In general the following class of Generic Worms and Swarm Worms were simulated.",
                "Address Scanning: â¢ Random:= addresses are selected at random from a subset of the IPV4 space, namely, a 224 address space; and â¢ Local Bias:= addresses are selected at random from either a local subnet (256 addresses) or from a subset of the IPV4 space, namely, a 224 address space.",
                "The percentage of local bias is varied across multiple runs.",
                "Learning, Communication & Distributed Control â¢ I-NL-NS: Generic worm, independent (I), no learning/ memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ I-L-OOS: Generic worm, independent (I), learning/ memoryless (L), and one time sharing of information with offsprings only (OOS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; â¢ S-L-S&AOP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of addresses with neighbors and offsprings, shares passwords one time only (at creation) with offsprings(SA&OP); â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 4, the results are consistent with our set of empirical results.",
                "In addition, the following observations can be made. 1.",
                "Local preference is incredibly effective. 2.",
                "Short address handoffs are more effective than long ones.",
                "We varied the size of the list allowed in the sharing of addresses; the overhead associated with a long address list is detrimental to the performance of the swarm worm, as well as to its stealthiness; 3.",
                "For the local bias case, sharing valid addresses of susceptible host, S-L-S&AOP worm (recall, the S-L-S&AOP swarm shares passwords, one time only, with offsprings 328 at creation time) is more effective than sharing passwords in the case of the S-L-SP swarm.",
                "In this case, we can think of the swarm as launching a distributeddictionary attack: different segments of the swarm use different passwords to try to break into susceptible uninfected host.",
                "In the local bias mode, early in the life of the swarm, address-sharing is more effective than password-sharing, until most subnets are discovered.",
                "Then the targeting of local addresses assists in discovering the susceptible hosts, while the swarm members need to waste time rediscovering passwords; and 4.",
                "Infecting the last 0.5% of nodes takes a very long time in non-local bias mode.",
                "Basically, the shared password list across subnets has been exhausted, and the swarm reverts to simply a random discovery of password algorithm.",
                "Figure 3: Swarm Attack Behavior vs. Malform Worm: Empirical Results, 30node LAN Figure 4: Swarm Attack Behavior vs. Malform Worm: Simulation Results 5.",
                "SUMMARY AND FUTURE WORK In this manuscript, we have presented an abstract model, similar in some aspects to that of Weaver [5], that helps explain the generic nature of worms.",
                "The model presented in section 2 was extended to incorporate a new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
                "Such Swarm Worms are potentially more harmful than their generic counterparts.",
                "In addition, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
                "ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
                "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms is capable of compromising hosts a rates up to 2 orders of magnitude faster than its generic counterpart while retaining stealth capabilities.",
                "This work opens up a new area of interesting problems.",
                "Some of the most interesting and pressing problems to be consider are as follows: â¢ Is it possible to apply some of learning concepts developed over the last ten years in the areas of swarm intelligence, agent systems, and distributed control to the design of sophisticated swarm worms in such a way that true emergent behavior takes place? â¢ Are the current techniques being developed in the design of Intrusion Detection & CounterMeasure Systems and Survivable systems effective against this new class of worms? ; and â¢ What techniques, if any, can be developed to create defenses against swarm worms? 6.",
                "ACKNOWLEDGMENTS This work was conducted as part of a larger effort in the development of next generation Intrusion Detection & CounterMeasure Systems at WSSRL.",
                "The work is conducted under the auspices of Grant ACG-2004-06 by the Acumen Consulting Group, Inc., Marlboro, Massachusetts. 7.",
                "REFERENCES [1] C.C.",
                "Zou, L. Gao, W. G., and Towsley, D. Monitoring and early warning for internet worms.",
                "In 10th ACM Conference on Computer and Communications Security, Washington, DC (October 2003). [2] Liu, S., and Passino, K. Swarm intelligence: Literature overview.",
                "In Dept. of Electrical Engineering, The Ohio State University, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., and Weaver, N. The spread of the saphire/slammer worm.",
                "Tech. rep., A joint effort of CAIDA, ICSI, Silicon Defense, UC Berkeley EECS and UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S., and Cunningham, R. A taxonomy of computer worms.",
                "In Proceedings of the ACM Workshop on Rapid Malware (WORM) (2003). 329"
            ],
            "original_annotated_samples": [
                "Random scanning is completely at random (depending on the chosen <br>prng method</br> and its seed value)."
            ],
            "translated_annotated_samples": [
                "El escaneo aleatorio es completamente al azar (dependiendo del <br>mÃ©todo PRNG</br> elegido y su valor de semilla)."
            ],
            "translated_text": "Un AnÃ¡lisis Inicial y PresentaciÃ³n de Malware que Exhibe Comportamiento Similar a un Enjambre por Fernando C. ColÃ³n Osorio Laboratorio de InvestigaciÃ³n en Seguridad de Sistemas InalÃ¡mbricos (W.S.S.R.L.) El Slammer, que actualmente es el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada, se observÃ³ infectando el 90 por ciento de todos los hosts vulnerables de Internet en 10 minutos. Aunque la acciÃ³n principal que realiza el gusano Slammer es una replicaciÃ³n relativamente poco sofisticada de sÃ­ mismo, se propaga tan rÃ¡pidamente que la respuesta humana fue ineficaz. La mayorÃ­a de las estrategias de contramedidas propuestas se basan principalmente en la detecciÃ³n de tasas y algoritmos de limitaciÃ³n. Sin embargo, se estÃ¡n diseÃ±ando y desarrollando estrategias para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En nuestro trabajo, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n radicalmente diferentes, y posiblemente dichas tÃ©cnicas resultarÃ¡n ineficaces. EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. La Inteligencia Emergente es el comportamiento de sistemas, muy similar a sistemas biolÃ³gicos como hormigas o abejas, donde las interacciones locales simples de miembros autÃ³nomos, con acciones primitivas simples, dan lugar a un comportamiento global complejo e inteligente. En este manuscrito introduciremos los principios bÃ¡sicos detrÃ¡s de la idea de los Gusanos en Enjambre, asÃ­ como la estructura bÃ¡sica requerida para ser considerado un gusano en enjambre. AdemÃ¡s, presentaremos resultados preliminares sobre las velocidades de propagaciÃ³n de un gusano de enjambre llamado gusano ZachiK. Demostraremos que ZachiK es capaz de propagarse a una velocidad 2 Ã³rdenes de magnitud mÃ¡s rÃ¡pida que gusanos similares sin capacidades de enjambre. CategorÃ­as y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: DetecciÃ³n de Intrusiones; D.4.6 [Seguridad y ProtecciÃ³n]: Software Invasivo TÃ©rminos Generales ExperimentaciÃ³n, Seguridad 1. INTRODUCCIÃN Y TRABAJO PREVIO En las primeras horas de la maÃ±ana (05:30 GMT) del 25 de enero de 2003, el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada comenzÃ³ a propagarse por Internet. Dentro de los 10 minutos posteriores al primer huÃ©sped infectado (paciente cero), el 90 por ciento de todos los huÃ©spedes vulnerables habÃ­an sido comprometidos, creando una interrupciÃ³n significativa en la infraestructura de Internet a nivel global. Vern Paxson del Instituto Internacional de Ciencias de la ComputaciÃ³n y del Laboratorio Nacional Lawrence Berkeley comentÃ³ en su anÃ¡lisis de Slammer: El gusano Slammer se propagÃ³ tan rÃ¡pidamente que la respuesta humana fue ineficaz, ver [4]. La parte interesante, desde nuestro punto de vista, sobre la propagaciÃ³n de Slammer es que era un gusano relativamente poco sofisticado con un comportamiento benigno, es decir, la auto-reproducciÃ³n. Desde Slammer, los investigadores han explorado los comportamientos de los gusanos de propagaciÃ³n rÃ¡pida y han diseÃ±ado estrategias de contramedidas basadas principalmente en la detecciÃ³n de la velocidad y algoritmos de limitaciÃ³n. Por ejemplo, Zou, et al., [2], propusieron un esquema donde se utiliza un filtro de Kalman para detectar la propagaciÃ³n temprana de un gusano. Otros investigadores han propuesto el uso de detectores donde las tasas de mensajes de Destino Inalcanzable son monitoreadas por los firewalls, y un aumento significativo mÃ¡s allÃ¡ de lo normal alerta a la organizaciÃ³n sobre la posible presencia de un gusano. Sin embargo, tales estrategias sufren del sÃ­ndrome de luchar la Ãºltima guerra. Es decir, se estÃ¡n diseÃ±ando y desarrollando sistemas para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En el trabajo descrito aquÃ­, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n diferentes, y por lo tanto, dichas tÃ©cnicas pueden tener algunas limitaciones significativas. EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. El concepto de inteligencia emergente fue estudiado por primera vez en asociaciÃ³n con sistemas biolÃ³gicos. En tales estudios, los primeros investigadores descubrieron una variedad de comportamientos interesantes de insectos o animales en la naturaleza. Una bandada de pÃ¡jaros cruza el cielo. Un grupo de hormigas busca comida. Una escuela de peces nada, gira, huye juntos lejos de un depredador, y asÃ­ sucesivamente. En general, este tipo de movimiento agregado se ha llamado comportamiento de enjambre. Los biÃ³logos y cientÃ­ficos de la computaciÃ³n en el campo de la inteligencia artificial han estudiado tales enjambres biolÃ³gicos y han intentado crear modelos que expliquen cÃ³mo interactÃºan los elementos de un enjambre, logran objetivos y evolucionan. AdemÃ¡s, en los Ãºltimos aÃ±os el estudio de la inteligencia de enjambre ha cobrado cada vez mÃ¡s importancia en los campos de la robÃ³tica, el diseÃ±o de Redes MÃ³viles Ad-hoc (MANETS), el diseÃ±o de Sistemas de DetecciÃ³n de Intrusiones, el estudio de patrones de trÃ¡fico en sistemas de transporte, en aplicaciones militares y otras Ã¡reas, ver [3]. Los conceptos bÃ¡sicos que se han desarrollado en la Ãºltima dÃ©cada para explicar los enjambres y su comportamiento incluyen cuatro componentes bÃ¡sicos. Estos son: 1. Sencillez de la lÃ³gica y acciones: Un enjambre estÃ¡ compuesto por N agentes cuya inteligencia es limitada. Los agentes en el enjambre utilizan reglas locales simples para gobernar sus acciones. Algunos modelos llaman a estas acciones o comportamientos primitivos; 2. Mecanismos de comunicaciÃ³n local: Los agentes interactÃºan con otros miembros en el enjambre a travÃ©s de simples mecanismos de comunicaciÃ³n local. Por ejemplo, un pÃ¡jaro en una bandada percibe la posiciÃ³n del pÃ¡jaro adyacente y aplica una regla simple de evitaciÃ³n y seguimiento. 3. Control distribuido: Los agentes autÃ³nomos interactÃºan con su entorno, que probablemente consiste en otros agentes, pero actÃºan relativamente de forma independiente de todos los demÃ¡s agentes. No hay un mando central o lÃ­der, y ciertamente no hay un plan global. Inteligencia emergente: El comportamiento agregado de agentes autÃ³nomos resulta en comportamientos inteligentes complejos, incluyendo la autoorganizaciÃ³n. Para comprender completamente el comportamiento de tales enjambres, es necesario construir un modelo que explique el comportamiento de lo que llamaremos gusanos genÃ©ricos. Este modelo, que amplÃ­a el trabajo de Weaver [5], se presenta aquÃ­ en la secciÃ³n 2. AdemÃ¡s, tenemos la intenciÃ³n de ampliar dicho modelo de tal manera que explique claramente los comportamientos de esta nueva clase de gusanos potencialmente peligrosos llamados Gusanos en Enjambre. Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biolÃ³gicos y muestran un alto grado de aprendizaje, comunicaciÃ³n e inteligencia distribuida. Tales gusanos en enjambre son potencialmente mÃ¡s daÃ±inos que sus contrapartes genÃ©ricas similares. EspecÃ­ficamente, la primera instancia, segÃºn nuestro conocimiento, de un gusano de aprendizaje de este tipo fue creado, llamado ZachiK. ZachiK es un gusano enjambre de descifrado de contraseÃ±as simple que incorpora diferentes estrategias de aprendizaje y comparticiÃ³n de informaciÃ³n. Un gusano de enjambre similar fue desplegado tanto en una red de Ã¡rea local de treinta (30) hosts, como simulado en una topologÃ­a de 10,000 nodos. Los resultados preliminares mostraron que dichos gusanos son capaces de comprometer a los anfitriones a velocidades hasta dos Ã³rdenes de magnitud mÃ¡s rÃ¡pidas que su contraparte genÃ©rica. El resto de este manuscrito estÃ¡ estructurado de la siguiente manera. En la secciÃ³n 2 se presenta un modelo abstracto tanto de gusanos genÃ©ricos como de gusanos en enjambre. Este modelo se utiliza en la secciÃ³n 2.6 para describir la primera instancia de un gusano enjambre, ZachiK. En la secciÃ³n 4, se presentan resultados preliminares a travÃ©s de mediciones empÃ­ricas y simulaciones. Finalmente, en la secciÃ³n 5 se presentan nuestras conclusiones y perspectivas sobre trabajos futuros. MODELADO DE GUSANOS Para estudiar el comportamiento de los gusanos en enjambre en general, es necesario crear un modelo que refleje de manera realista la estructura de los gusanos y que no estÃ© necesariamente ligado a una instancia especÃ­fica. En esta secciÃ³n, describimos un modelo en el que un gusano general se describe como teniendo cuatro (4) componentes bÃ¡sicos o subfunciones. Por definiciÃ³n, un gusano es un programa autocontenido y auto propagante. Por lo tanto, en tÃ©rminos simples, tiene dos funciones principales: la que se propaga y la que realiza otras tareas. Proponemos que hay una tercera amplia funcionalidad de un gusano, la de autoconservaciÃ³n. TambiÃ©n proponemos que la otra funcionalidad de un gusano podrÃ­a ser categorizada de manera mÃ¡s apropiada como Acciones Basadas en Objetivos (ABO), ya que cualquier funcionalidad incluida en un gusano dependerÃ¡ naturalmente de los objetivos (y subobjetivos) que tenga el autor. El trabajo presentado por Weaver et al. en [5] nos proporciona principalmente una taxonomÃ­a de gusanos informÃ¡ticos basada en acciones y tÃ©cnicas, la cual utilizamos y ampliamos aquÃ­. 2.1 PropagaciÃ³n La funciÃ³n de propagaciÃ³n en sÃ­ misma puede desglosarse en tres acciones: adquirir objetivo, enviar escaneo e infectar objetivo. Adquirir el objetivo simplemente significa elegir un anfitriÃ³n para atacar a continuaciÃ³n. Enviar un escaneo implica verificar si ese host estÃ¡ receptivo a un intento de infecciÃ³n, ya que el espacio de direcciones IP estÃ¡ escasamente poblado. Esto puede implicar un simple ping para verificar si el host estÃ¡ activo o una evaluaciÃ³n completa de vulnerabilidades. Infectar al objetivo es el mÃ©todo real utilizado para enviar el cÃ³digo del gusano al nuevo hospedador. En forma de algoritmo: propagar() { host := adquirir_objetivo() Ã©xito := enviar_escaneo(host) si( Ã©xito ) entonces infectar(host) fin si } En el caso de un gusano simple que no verifica primero si el host estÃ¡ disponible o susceptible (como Slammer), se elimina el mÃ©todo de escaneo: propagar() { host := adquirir_objetivo() infectar(host) } Cada una de estas acciones puede tener un costo asociado a su inclusiÃ³n y ejecuciÃ³n, como un aumento en el tamaÃ±o del gusano y la carga de CPU o red. Dependiendo de las necesidades o requisitos de los autores, estos se convierten en factores limitantes en lo que puede incluirse en las acciones de los gusanos. Esto se discute mÃ¡s a fondo despuÃ©s de expandir sobre estas acciones a continuaciÃ³n. 2.2 AdquisiciÃ³n de Objetivos: La fase de AdquisiciÃ³n de Objetivos de nuestro algoritmo de gusano se construye directamente a partir de la secciÃ³n de Descubrimiento de Objetivos en [5]. Weaver et al. clasifican esta tarea en 5 categorÃ­as separadas. AquÃ­, ampliamos aÃºn mÃ¡s su trabajo a travÃ©s de la parametrizaciÃ³n. Escaneo: El escaneo puede considerarse un mÃ©todo basado en ecuaciones para elegir un anfitriÃ³n. Cualquier tipo de ecuaciÃ³n puede ser utilizada para llegar a una direcciÃ³n IP, pero hasta ahora se han visto tres tipos principales: secuencial, aleatorio y preferencia local. El escaneo secuencial es exactamente como suena: comenzar en una direcciÃ³n IP e incrementar a travÃ©s de todo el espacio de direcciones IP. Esto podrÃ­a llevar consigo las opciones de quÃ© IP empezar (valor elegido por el usuario, aleatorio o basado en la IP del host infectado) y cuÃ¡ntas veces incrementar (continuo, valor elegido o basado en subred). El escaneo aleatorio es completamente al azar (dependiendo del <br>mÃ©todo PRNG</br> elegido y su valor de semilla). El escaneo de preferencia local es una variante de Secuencial o Aleatorio, en la que tiene una mayor probabilidad de elegir una direcciÃ³n IP local en lugar de una remota (por ejemplo, la divisiÃ³n tradicional de 80/20). Listas de objetivos pregeneradas: Las listas de objetivos pregeneradas, o tambiÃ©n llamadas listas de objetivos, podrÃ­an incluir opciones para el porcentaje de la poblaciÃ³n total y el porcentaje de errores, o simplemente el nÃºmero de direcciones IP a incluir. ImplÃ­cito en este tipo es el hecho de que la lista se divide entre un padre y sus hijos, evitando el problema de que cada instancia golpee exactamente las mismas mÃ¡quinas. Listas de objetivos generadas externamente: Las listas de objetivos generadas externamente dependen de una o mÃ¡s fuentes externas que pueden ser consultadas para obtener datos del host. Esto implicarÃ¡ servidores que normalmente estÃ¡n pÃºblicamente disponibles, como los meta-servidores de juegos, o aquellos configurados explÃ­citamente por el gusano o el autor del gusano. Los meta-servidores normalmente disponibles podrÃ­an tener parÃ¡metros para tasas de cambio, como muchos apareciendo por la noche o desapareciendo por la maÃ±ana. Cada servidor tambiÃ©n podrÃ­a tener un mÃ¡ximo de consultas por segundo que serÃ­a capaz de manejar. El gusano tambiÃ©n necesitarÃ­a una forma de encontrar estos servidores, ya sea codificada en duro o a travÃ©s de escaneo. Listas de Objetivos Internos: Las Listas de Objetivos Internos dependen en gran medida del host infectado. Este mÃ©todo podrÃ­a parametrizar la elecciÃ³n de cuÃ¡nta informaciÃ³n hay en el host, como todas las mÃ¡quinas en la subred, todas las computadoras con Windows en la subred, servidores especÃ­ficos, nÃºmero de internos/externos, o alguna combinaciÃ³n. Los mÃ©todos pasivos son determinados por las interacciones normales entre los anfitriones. Los parÃ¡metros pueden incluir una tasa de interacciÃ³n con mÃ¡quinas particulares, una tasa de interacciÃ³n interna/externa, o una tasa de interacciÃ³n basada en subredes. Cualquiera de estos mÃ©todos tambiÃ©n puede combinarse para producir diferentes tipos de estrategias de adquisiciÃ³n de objetivos. Por ejemplo, un gusano puede comenzar con una lista inicial de 100 hosts o subredes diferentes. Una vez que haya agotado su bÃºsqueda utilizando la lista de Ã©xitos, puede proceder a realizar un escaneo aleatorio con un sesgo local del 50%. Es importante tener en cuenta, sin embargo, que el consumo de recursos de cada mÃ©todo no es el mismo. Diferentes mÃ©todos pueden requerir que el gusano sea grande, como los bytes adicionales necesarios para una lista de objetivos, o que tome mÃ¡s tiempo de procesamiento, como al buscar direcciones de otros hosts vulnerables en el host. Se deben realizar investigaciones y anÃ¡lisis adicionales en esta Ã¡rea para determinar los costos asociados de utilizar cada mÃ©todo. Los costos podrÃ­an ser utilizados para determinar los compromisos de diseÃ±o en los que los autores de gusanos participan. Por ejemplo, las listas de objetivos proporcionan una alta tasa de infecciÃ³n, pero a un alto costo en el tamaÃ±o de la carga Ãºtil del gusano. 2.2.1 EnvÃ­o de un Escaneo La funciÃ³n de envÃ­o de escaneo prueba si el host estÃ¡ disponible para la infecciÃ³n. Esto puede ser tan simple como verificar si el host estÃ¡ activo en la red o tan complejo como verificar si el host es vulnerable al exploit que se utilizarÃ¡. El envÃ­o de un escaneo antes de intentar una infecciÃ³n puede aumentar la tasa de escaneo si el costo por fallar en una infecciÃ³n es mayor que el costo de fallar en un escaneo o de enviar un escaneo mÃ¡s una infecciÃ³n; y las fallas son mÃ¡s frecuentes que los Ã©xitos. Un parÃ¡metro importante para esto serÃ­a la elecciÃ³n del protocolo de transporte (TCP/UDP) o simplemente el tiempo para un escaneo exitoso y el tiempo para un escaneo fallido. AdemÃ¡s, ya sea que se pruebe si el host estÃ¡ activo o si es una prueba completa de la vulnerabilidad (o de mÃºltiples vulnerabilidades). 2.2.2 Vector de InfecciÃ³n (VI) El vector de infecciÃ³n particular utilizado para acceder al host remoto depende principalmente de la vulnerabilidad especÃ­fica elegida para explotar. En un sentido no especÃ­fico, depende del protocolo de transporte elegido para usar y del tamaÃ±o del mensaje que se va a enviar. La SecciÃ³n 3 de [5] tambiÃ©n propone tres clases particulares de IV: Autotransportado, segundo canal e incrustado. 2.3 AutopreservaciÃ³n Las acciones de autopreservaciÃ³n de un gusano pueden tomar muchas formas. En la naturaleza, se ha observado que los gusanos desactivan el software antivirus o evitan enviarse a ciertas direcciones conocidas por los antivirus. TambiÃ©n se ha observado que intentan deshabilitar otros gusanos que podrÃ­an estar compitiendo por el mismo sistema. TambiÃ©n creemos que un escaneo con limitaciÃ³n de tiempo podrÃ­a ayudar al gusano a pasar desapercibido. TambiÃ©n proponemos un mÃ©todo de seÃ±uelo, mediante el cual un gusano liberarÃ¡ a unos pocos hijos que causen mucho ruido para que el progenitor no sea notado. TambiÃ©n se ha propuesto [5] que un gusano cause daÃ±o a su huÃ©sped si, y solo si, se ve perturbado de alguna manera. Este mÃ³dulo podrÃ­a contener parÃ¡metros para: probabilidad de Ã©xito en deshabilitar actualizaciones de antivirus u otro software, probabilidad de ser detectado y por ende eliminado, o fortalecimiento del anfitriÃ³n contra otros gusanos. 2.4 Acciones Basadas en Objetivos La funcionalidad de GBA de un gusano depende de la lista de objetivos del autor. La secciÃ³n de Cargas Ãºtiles de [5] proporciona algunas sugerencias Ãºtiles para dicho mÃ³dulo. La apertura de una puerta trasera puede hacer que el anfitriÃ³n sea susceptible a mÃ¡s ataques. Esto implicarÃ­a una probabilidad de que se utilice la puerta trasera y cualquier utilizaciÃ³n de trÃ¡fico asociada. TambiÃ©n podrÃ­a proporcionar una lista de otros gusanos a los que este hospedador es ahora susceptible o una lista de vulnerabilidades que este hospedador tiene ahora. Los retransmisores de spam y los servidores proxy HTTP, por supuesto, tienen un consumo de ancho de banda o un patrÃ³n de trÃ¡fico asociado. Los ataques de denegaciÃ³n de servicio en Internet tendrÃ­an un tiempo de activaciÃ³n establecido, un objetivo y un patrÃ³n de trÃ¡fico. El daÃ±o de los datos tendrÃ­a una probabilidad asociada de que el anfitriÃ³n muera debido al daÃ±o. En la Figura 1, se resume este modelo general de un gusano. Por favor, tenga en cuenta que en este modelo no hay aprendizaje, o muy poco, intercambio de informaciÃ³n entre las instancias de gusano, y ciertamente no hay coordinaciÃ³n de acciones. En la siguiente secciÃ³n ampliamos el modelo para incluir dichos mecanismos, y por lo tanto, llegamos al modelo general de un gusano en enjambre. 2.5 Enjambres - Modelo General Como se describe en la secciÃ³n 1, las caracterÃ­sticas bÃ¡sicas que distinguen el comportamiento en enjambre de lo que simplemente parece ser comportamientos colectivos coordinados son cuatro atributos bÃ¡sicos. Estos son: 1. Sencillez de lÃ³gica y acciones; 2. Mecanismos de ComunicaciÃ³n Local; 3. Control distribuido; y 4. Inteligencia emergente, incluyendo autoorganizaciÃ³n. 325 Estructura FunciÃ³n/Ejemplo InfecciÃ³n, Vector de InfecciÃ³n El ejecutable se ejecuta ProtecciÃ³n y sigilo Deshabilitar McAfee (Mantenerse vivo) PropagaciÃ³n Enviar correo electrÃ³nico a todos en la libreta de direcciones AcciÃ³n basada en objetivos (ABO) DDoS www.sco.com Todo lo demÃ¡s, a menudo llamado carga Ãºtil Figura 1: Modelo general de gusano En este trabajo agregamos todos estos atributos bajo el tÃ­tulo general de Aprendizaje, ComunicaciÃ³n y Control Distribuido. La presencia de estos atributos distingue a los gusanos de enjambre de los gusanos regulares, u otros tipos de malware como los Zombies. En la figura ? ?, el modelo genÃ©rico de un gusano se amplÃ­a para incluir este conjunto de acciones. Dentro de este contexto, un gusano como Slammer no puede ser categorizado como un gusano en enjambre debido a que las nuevas instancias del gusano no coordinan sus acciones ni comparten informaciÃ³n. Por otro lado, los zombies y muchas otras formas de DDoS, que a primera vista pueden considerarse gusanos enjambre, no lo son. Esto se debe simplemente al hecho de que en el caso de los zombies, el control no estÃ¡ distribuido sino centralizado, y no surgen comportamientos emergentes. Lo Ãºltimo, la posible apariciÃ³n de inteligencia o nuevos comportamientos es lo que hace que los gusanos en enjambre sean potencialmente peligrosos. Finalmente, cuando se considera la mayorÃ­a de las interrupciones recientes en la Infraestructura de Internet, y a la luz de nuestra descripciÃ³n de los ataques en enjambre, entonces dichas interrupciones pueden ser fÃ¡cilmente categorizadas como precursores de un comportamiento verdaderamente en enjambre. EspecÃ­ficamente, â¢ DDOS: Un gran nÃºmero de hosts comprometidos envÃ­an paquetes inÃºtiles que requieren procesamiento (Stacheldraht, http://www.cert.org/incidentnotes/IN-99-04.html). Los ataques DDoS son los precursores tempranos de los Ataques en Enjambre debido al gran nÃºmero de agentes involucrados. â¢ Code Red CrV1, Code Red II, Nimbda - Exhiben nociones tempranas de ataques en enjambre, incluyendo un canal de comunicaciÃ³n oculto. â¢ Staniford & Paxson en Â¿CÃ³mo Dominar Internet en Tu Tiempo Libre? exploran modificaciones a CrV1, Code Red I, II con un tipo de comportamiento similar a un enjambre. Por ejemplo, especulan sobre nuevos gusanos que emplean comunicaciÃ³n directa de gusano a gusano y utilizan actualizaciones programables. Por ejemplo, el gusano Warhol y los gusanos de Permutation-Scanning (autocoordinados). 2.6 Gusano Swarm: los detalles Al considerar la creaciÃ³n de lo que creÃ­amos que era el primer Gusano Swarm en existencia, querÃ­amos adherirnos lo mÃ¡s cercanamente posible al modelo general presentado en la secciÃ³n ? ? mientras facilitÃ¡bamos al mismo tiempo un anÃ¡lisis a gran escala, tanto empÃ­rico como a travÃ©s de simulaciones, del comportamiento del enjambre. Por esta razÃ³n, seleccionamos como primera instancia Estructura FunciÃ³n/Ejemplo InfecciÃ³n, InfecciÃ³n Vector Ejecutable se ejecuta ProtecciÃ³n y Sigilo Deshabilitar McAfee (ManteniÃ©ndose Vivo) PropagaciÃ³n Enviar correo electrÃ³nico a todos en la libreta de direcciones Aprendizaje, ComunicaciÃ³n, Feromonas/Banderas (Prueba y Control Distribuido si el Gusano ya estÃ¡ presente) Bombas de tiempo, Algoritmos de Aprendizaje, Canal IRC AcciÃ³n Basada en Objetivos (ABO) DDoS www.sco.com Todo lo demÃ¡s, a menudo llamado carga Ãºtil Figura 2: Modelo General de un Gusano de Enjambre del enjambre un gusano simple de craqueo de contraseÃ±as. El objetivo de este gusano simplemente es infectar a un anfitriÃ³n intentando secuencialmente iniciar sesiÃ³n en el anfitriÃ³n utilizando contraseÃ±as conocidas (ataque de diccionario), contraseÃ±as que han sido descubiertas previamente por cualquier miembro del enjambre, y contraseÃ±as aleatorias. Una vez que un huÃ©sped estÃ¡ infectado, el gusano crearÃ¡ canales de comunicaciÃ³n tanto con sus vecinos conocidos en ese momento, como con cualquier descendencia que genere con Ã©xito. En este contexto, una generaciÃ³n exitosa de una descendencia significa simplemente infectar a un nuevo huÃ©sped y replicar una copia exacta de sÃ­ misma en dicho huÃ©sped. Llamamos a este gusano enjambre el gusano ZachiK en honor a uno de sus creadores. Como se puede ver en esta descripciÃ³n, el gusano ZachiK exhibe todos los elementos descritos anteriormente. En las siguientes secciones, describimos detalladamente cada uno de los elementos del gusano ZachiK. 2.7 Vector de InfecciÃ³n El vector de infecciÃ³n utilizado por el gusano ZachiK es el protocolo de shell seguro SSH. Se escribiÃ³ un cliente modificado que es capaz de recibir contraseÃ±as desde la lÃ­nea de comandos, e integrado con un script que le suministra diversas contraseÃ±as: conocidas y aleatorias. Cuando se encuentra una contraseÃ±a para un objetivo adecuado, comienza el proceso de infecciÃ³n. DespuÃ©s de descubrir la contraseÃ±a de root de un host, el gusano infecta el host objetivo y se replica a sÃ­ mismo. El gusano crea un nuevo directorio en el host objetivo, copia el cliente ssh modificado, el script, los servidores de comunicaciones y las versiones actualizadas de los archivos de datos (lista de contraseÃ±as conocidas y una lista de vecinos actuales). Luego ejecuta el script modificado en los hosts reciÃ©n infectados, lo que genera el servidor de comunicaciones, notifica a los vecinos y comienza a buscar nuevos objetivos. Se podrÃ­a argumentar, de manera correcta, que el gusano ZachiK puede ser fÃ¡cilmente derrotado por las tÃ©cnicas de contramedidas actuales presentes en la mayorÃ­a de los sistemas hoy en dÃ­a, como la prohibiciÃ³n de accesos directos de root desde la red. Dentro de este contexto, ZachiK puede ser rÃ¡pidamente descartado como un gusano muy simple e inofensivo que no requiere un estudio adicional. Sin embargo, el lector deberÃ­a considerar lo siguiente: 1. ZachiK se puede modificar fÃ¡cilmente para incluir una variedad de vectores de infecciÃ³n. Por ejemplo, podrÃ­a programarse para adivinar nombres de usuario comunes y sus contraseÃ±as; obtener acceso al sistema, luego adivinar la contraseÃ±a de root o utilizar otras vulnerabilidades conocidas para obtener privilegios de root. ZachiK es un gusano de prueba de concepto. La importancia de ZachiK radica en que incorpora todos los comportamientos de un gusano en enjambre, incluyendo, pero no limitÃ¡ndose a, el control distribuido, la comunicaciÃ³n entre agentes y el aprendizaje; 3. ZachiK estÃ¡ compuesto por una gran colecciÃ³n de agentes que operan de forma independiente, lo que se presta naturalmente a algoritmos paralelos como la bÃºsqueda paralela del espacio de direcciones IPV4. Dentro de este contexto, SLAMMER incorpora una capacidad de bÃºsqueda paralela de direcciones potencialmente susceptibles. Sin embargo, a diferencia de ZachiK, el conocimiento descubierto por la bÃºsqueda nunca se comparte entre los agentes. Por estas razones, y muchas otras, no se debe descartar el potencial de esta nueva clase de gusanos, sino mÃ¡s bien abrazar su estudio. 2.8 AutopreservaciÃ³n En el caso del gusano ZachiK, las principales tÃ©cnicas de autopreservaciÃ³n utilizadas son simplemente mantener el tamaÃ±o de la carga Ãºtil pequeÃ±o. En este contexto, esto simplemente significa restringir la cantidad de contraseÃ±as que una descendencia hereda, enmascarar mensajes de gusano como solicitudes http comunes y limitar el nÃºmero de vecinos a un mÃ¡ximo de cinco-(5). 2.9 PropagaciÃ³n Elegir el(los) prÃ³ximo(s) objetivo(s) de manera eficiente requiere reflexiÃ³n. En el pasado, los gusanos conocidos y propuestos, ver [5], han aplicado tÃ©cnicas de propagaciÃ³n que variaban. Estos incluyen: selecciÃ³n estrictamente aleatoria de un posible anfitriÃ³n vulnerable; listas de objetivos de anfitriones vulnerables; selecciÃ³n aleatoria localmente sesgada (seleccionar un objetivo de anfitriÃ³n al azar de una subred local); y una combinaciÃ³n de algunas o todas las anteriores. En nuestros entornos de prueba y simulaciÃ³n, aplicaremos una combinaciÃ³n de selecciÃ³n localmente sesgada y totalmente aleatoria de posibles hosts vulnerables. Sin embargo, debido a que el gusano ZachiK es un gusano enjambre, la informaciÃ³n de descubrimiento de direcciones (es decir, cuando se descubren direcciones inexistentes) se compartirÃ¡ entre los miembros del enjambre. Los hilos de infecciÃ³n y propagaciÃ³n realizan el siguiente conjunto de actividades repetidamente: â¢ Elegir una direcciÃ³n â¢ Verificar la validez de la direcciÃ³n â¢ Elegir un conjunto de contraseÃ±as â¢ Intentar infectar al host seleccionado con este conjunto de contraseÃ±as. Como se describiÃ³ anteriormente, la elecciÃ³n de una direcciÃ³n hace uso de una combinaciÃ³n de selecciÃ³n aleatoria, sesgo local y listas de objetivos. EspecÃ­ficamente, para elegir una direcciÃ³n, la instancia puede: â¢ Generar una nueva direcciÃ³n aleatoria â¢ Generar una direcciÃ³n en la red local â¢ Elegir una direcciÃ³n de una lista de transferencia La elecciÃ³n se realiza de forma aleatoria entre estas opciones, y puede variarse para probar la dependencia de la propagaciÃ³n en elecciones particulares. Las contraseÃ±as son elegidas de una lista de contraseÃ±as conocidas o generadas recientemente. Cuando una infecciÃ³n de una direcciÃ³n vÃ¡lida falla, se agrega a una lista de entregas, que se envÃ­a a los vecinos para intentar solucionar el problema. 2.10 Aprendizaje, ComunicaciÃ³n y Control Distribuido 2.10.1 ComunicaciÃ³n El concepto de un enjambre se basa en la transferencia de informaciÃ³n entre vecinos, quienes retransmiten sus nuevos mensajes entrantes a sus vecinos, y asÃ­ sucesivamente hasta que cada instancia del gusano en el enjambre estÃ© al tanto de estos mensajes. Hay dos clases de mensajes: mensajes de datos o informaciÃ³n y comandos. Los mensajes de comando estÃ¡n destinados a un usuario externo (tambiÃ©n conocidos como hackers y/o crackers) para controlar las acciones de las instancias, y actualmente no estÃ¡n implementados. Los mensajes de informaciÃ³n actualmente son de tres tipos: nuevo miembro, contraseÃ±as y direcciones explotables (transferencias). Los mensajes de nuevo miembro son mensajes que una nueva instancia envÃ­a a los vecinos en su lista (corta) de vecinos iniciales. Los vecinos luego registran estas instancias en su lista de vecinos. Estos son mensajes que forman la multi-conectividad del enjambre, y sin ellos, la topologÃ­a serÃ­a una estructura en forma de Ã¡rbol, donde la eliminaciÃ³n de un solo nodo harÃ­a que las instancias debajo de Ã©l fueran inaccesibles. Los mensajes de contraseÃ±as informan instancias de contraseÃ±as reciÃ©n descubiertas, y al informar a todas las instancias, el enjambre en su totalidad recopila esta informaciÃ³n, lo que le permite infectar nuevas instancias de manera mÃ¡s efectiva. Los mensajes de entrega informan instancias de direcciones vÃ¡lidas que no pudieron ser comprometidas (fallaron al romper la contraseÃ±a de la cuenta root). Dado que el espacio de direcciones es bastante disperso, lleva un tiempo relativamente largo (es decir, muchos intentos) descubrir una direcciÃ³n vÃ¡lida. Por lo tanto, al entregar las direcciones vÃ¡lidas descubiertas, el enjambre estÃ¡ (a) conservando energÃ­a al no redescubrir las mismas direcciones (b) atacando de manera mÃ¡s efectiva. De cierta manera, esto es una simple instancia de actividad coordinada de un enjambre. 2.10.2 CoordinaciÃ³n Cuando nace una instancia de gusano, transmite su existencia a todos los vecinos en su lista. El hilo principal luego genera algunas hebras de infecciÃ³n y continÃºa manejando mensajes entrantes (registrando vecinos, agregando nuevas contraseÃ±as, recibiendo direcciones y transmitiendo estos mensajes). 2.10.3 Control Distribuido El control en el gusano ZachiK es distribuido en el sentido de que cada instancia del gusano realiza un conjunto de acciones de forma independiente de cada otra instancia, al mismo tiempo que se beneficia del aprendizaje logrado por sus vecinos inmediatos. 2.11 Acciones Basadas en Objetivos La primera instancia del gusano ZachiK tiene dos objetivos bÃ¡sicos. Estos son: (1) propagar, y (2) descubrir y compartir con los miembros de la colonia nuevas contraseÃ±as de root. 3. DISEÃO EXPERIMENTAL Para verificar nuestra hipÃ³tesis de que los Gusanos de Enjambre son mÃ¡s capaces y, por lo tanto, mÃ¡s peligrosos que otros 327 gusanos conocidos, se creÃ³ un banco de pruebas de red y se desarrollÃ³ un simulador capaz de simular topologÃ­as a gran escala similares a Internet (espacio IPV4). El banco de pruebas de red consistÃ­a en una red de Ã¡rea local de 30 computadoras basadas en Linux. El simulador fue escrito en C++. El gusano de enjambre simple descrito en la secciÃ³n 2.6 se utilizÃ³ para infectar al paciente cero, y luego se permitiÃ³ que el gusano de enjambre se propagara a travÃ©s de sus propios mecanismos de propagaciÃ³n, control distribuido y comportamientos de enjambre. En el caso de una red de Ã¡rea local simple de 30 computadoras, se seleccionaron seis (6) contraseÃ±as raÃ­z diferentes de un espacio de contraseÃ±as de 4 dÃ­gitos (10000 opciones). Al comienzo del experimento se conoce una Ãºnica contraseÃ±a, la del paciente cero. Todas las contraseÃ±as compartidas se distribuyen aleatoriamente en todos los nodos. De manera similar, en el caso de la simulaciÃ³n, se construyÃ³ una topologÃ­a de red de 10,000 hosts cuyas direcciones fueron seleccionadas al azar en el espacio IPV4. Dentro de ese espacio, se seleccionaron y distribuyeron un total de 200 contraseÃ±as compartidas ya sea de forma aleatoria y/o dirigida a subredes especÃ­ficas de topologÃ­as de red. Por ejemplo, en una de nuestras ejecuciones de simulaciÃ³n, la topologÃ­a de red consistÃ­a en 200 subredes, cada una conteniendo 50 hosts. En dicha topologÃ­a, las contraseÃ±as compartidas se distribuÃ­an en subredes donde un porcentaje variable de contraseÃ±as se compartÃ­an entre subredes. Los porcentajes de contraseÃ±as compartidas utilizadas reflejaban los primeros estudios empÃ­ricos, donde se descubriÃ³ que hasta el 39.7% de las contraseÃ±as comunes eran compartidas. RESULTADOS En la Figura 3 se presentan los resultados comparando el comportamiento del Ataque de Enjambre versus el de un Gusano Malformado tÃ­pico para una LAN de 30 nodos. En este conjunto de ejecuciones empÃ­ricas, seis (6) contraseÃ±as compartidas fueron distribuidas al azar en todos los nodos de un total de 10,000 contraseÃ±as desconocidas posibles. Los datos presentados reflejan los comportamientos de un total de tres (3) clases distintas de gusanos o enjambres de gusanos. La clase de gusanos presentada es la siguiente: â¢ I-NS-NL:= Gusano genÃ©rico, independiente (I), sin aprendizaje/sin memoria (NL), y sin compartir informaciÃ³n con vecinos o descendientes (NS); â¢ S-L-SP:= Gusano en enjambre (S), aprendizaje (L), mantiene una lista de contraseÃ±as aprendidas, y comparte contraseÃ±as (SP) con vecinos mÃ¡s cercanos y descendientes; y â¢ S-L-SP&A:= Gusano en enjambre (S), aprendizaje (L), mantiene una lista de contraseÃ±as aprendidas, y comparte contraseÃ±as y direcciones existentes (SP&A) con vecinos mÃ¡s cercanos y descendientes. Como se muestra en la Figura 3, los resultados validan nuestra hipÃ³tesis original de que los gusanos en enjambre son significativamente mÃ¡s eficientes y peligrosos que los gusanos genÃ©ricos. En este conjunto de experimentos, el compartir contraseÃ±as proporciona una mejora de un orden de magnitud sobre un gusano aleatorio sin memoria. De manera similar, un gusano en enjambre que comparte contraseÃ±as y direcciones es aproximadamente dos Ã³rdenes de magnitud mÃ¡s eficiente que su contraparte genÃ©rica. En la Figura 3, se pueden observar una serie de discontinuidades. Estas discontinuidades son un artefacto del pequeÃ±o espacio muestral utilizado para este experimento. BÃ¡sicamente, tan pronto como se rompe una contraseÃ±a, todos los nodos que comparten esa contraseÃ±a especÃ­fica se infectan en cuestiÃ³n de segundos. Ten en cuenta que es trivial para un gusano en enjambre escanear y descubrir un pequeÃ±o espacio de contraseÃ±as compartidas. En la Figura 4, se presentan los resultados de la simulaciÃ³n comparando el Comportamiento de Ataque de Enjambre con el de un Gusano Malformado GenÃ©rico. En este conjunto de ejecuciones de simulaciÃ³n, se construyÃ³ una topologÃ­a de red de 10,000 hosts, cuyas direcciones fueron seleccionadas aleatoriamente en el espacio IPV4. Dentro de ese espacio, se seleccionaron y distribuyeron un total de 200 contraseÃ±as compartidas ya sea de forma aleatoria y/o dirigida a subredes especÃ­ficas de topologÃ­as de red. Los datos presentados reflejan los comportamientos de tres (3) clases distintas de gusanos o gusanos en enjambre y dos (2) estrategias de exploraciÃ³n de selecciÃ³n de objetivo de host diferentes (exploraciÃ³n aleatoria y sesgo local). La cantidad de sesgo local variÃ³ en mÃºltiples ejecuciones de simulaciÃ³n. Los resultados presentados son comportamientos agregados. En general, se simularon las siguientes clases de Gusanos GenÃ©ricos y Gusanos en Enjambre. ExploraciÃ³n de direcciones: â¢ Aleatoria:= las direcciones se seleccionan al azar de un subconjunto del espacio IPV4, es decir, un espacio de 224 direcciones; y â¢ Sesgo local:= las direcciones se seleccionan al azar de una subred local (256 direcciones) o de un subconjunto del espacio IPV4, es decir, un espacio de 224 direcciones. El porcentaje de sesgo local varÃ­a en mÃºltiples ejecuciones. Aprendizaje, ComunicaciÃ³n y Control Distribuido â¢ I-NL-NS: Gusano genÃ©rico, independiente (I), sin aprendizaje/sin memoria (NL), y sin compartir informaciÃ³n con vecinos o descendientes (NS); â¢ I-L-OOS: Gusano genÃ©rico, independiente (I), con aprendizaje/sin memoria (L), y compartiendo informaciÃ³n una sola vez con descendientes solamente (OOS); â¢ S-L-SP:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte contraseÃ±as (SP) con vecinos mÃ¡s cercanos y descendientes; â¢ S-L-S&AOP:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte direcciones con vecinos y descendientes, comparte contraseÃ±as solo una vez (al crearse) con descendientes (SA&OP); â¢ S-L-SP&A:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte contraseÃ±as y direcciones existentes (SP&A) con vecinos mÃ¡s cercanos y descendientes. Como se muestra en la Figura 4, los resultados son consistentes con nuestro conjunto de resultados empÃ­ricos. AdemÃ¡s, se pueden hacer las siguientes observaciones. 1. La preferencia local es increÃ­blemente efectiva. Las transferencias cortas de direcciÃ³n son mÃ¡s efectivas que las largas. Variamos el tamaÃ±o de la lista permitida en el intercambio de direcciones; el sobrecosto asociado con una lista de direcciones larga es perjudicial para el rendimiento del gusano en enjambre, asÃ­ como para su sigilo; 3. Para el caso de sesgo local, compartir direcciones vÃ¡lidas de host susceptibles, el gusano S-L-S&AOP (recuerde, el enjambre S-L-S&AOP comparte contraseÃ±as, solo una vez, con descendientes 328 en el momento de la creaciÃ³n) es mÃ¡s efectivo que compartir contraseÃ±as en el caso del enjambre S-L-SP. En este caso, podemos pensar en el enjambre como lanzando un ataque de diccionario distribuido: diferentes segmentos del enjambre utilizan diferentes contraseÃ±as para intentar ingresar a hosts no infectados susceptibles. En el modo de sesgo local, al principio de la vida del enjambre, compartir direcciones es mÃ¡s efectivo que compartir contraseÃ±as, hasta que se descubran la mayorÃ­a de las subredes. Entonces, el apuntar a direcciones locales ayuda a descubrir los hosts susceptibles, mientras que los miembros del enjambre necesitan perder tiempo redescubriendo contraseÃ±as; y 4. Infectar el Ãºltimo 0.5% de los nodos lleva mucho tiempo en modo de sesgo no local. BÃ¡sicamente, la lista de contraseÃ±as compartidas entre subredes se ha agotado, y el enjambre vuelve a simplemente descubrir una contraseÃ±a al azar. Figura 3: Comportamiento del Ataque de Enjambre vs Gusano Malformado: Resultados EmpÃ­ricos, LAN de 30 nodos Figura 4: Comportamiento del Ataque de Enjambre vs Gusano Malformado: Resultados de SimulaciÃ³n 5. RESUMEN Y TRABAJO FUTURO En este manuscrito, hemos presentado un modelo abstracto, similar en algunos aspectos al de Weaver [5], que ayuda a explicar la naturaleza genÃ©rica de los gusanos. El modelo presentado en la secciÃ³n 2 se extendiÃ³ para incorporar una nueva clase de gusanos potencialmente peligrosos llamados Gusanos en Enjambre. Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biolÃ³gicos y muestran un alto grado de aprendizaje, comunicaciÃ³n e inteligencia distribuida. Tales gusanos en enjambre son potencialmente mÃ¡s daÃ±inos que sus contrapartes genÃ©ricas. AdemÃ¡s, se creÃ³ la primera instancia, que sepamos, de un gusano de aprendizaje, llamado ZachiK. ZachiK es un gusano enjambre de descifrado de contraseÃ±as simple que incorpora diferentes estrategias de aprendizaje y comparticiÃ³n de informaciÃ³n. Un gusano de enjambre similar fue desplegado tanto en una red de Ã¡rea local de treinta (30) hosts, como simulado en una topologÃ­a de 10,000 nodos. Los resultados preliminares mostraron que tales gusanos son capaces de comprometer a los anfitriones a tasas hasta 2 Ã³rdenes de magnitud mÃ¡s rÃ¡pido que su contraparte genÃ©rica, manteniendo al mismo tiempo sus capacidades de sigilo. Este trabajo abre una nueva Ã¡rea de problemas interesantes. Algunos de los problemas mÃ¡s interesantes y urgentes a considerar son los siguientes: â¢ Â¿Es posible aplicar algunos de los conceptos de aprendizaje desarrollados en los Ãºltimos diez aÃ±os en las Ã¡reas de inteligencia de enjambre, sistemas de agentes y control distribuido al diseÃ±o de gusanos de enjambre sofisticados de tal manera que se produzca un verdadero comportamiento emergente? â¢ Â¿Son efectivas las tÃ©cnicas actuales que se estÃ¡n desarrollando en el diseÃ±o de Sistemas de DetecciÃ³n y Contramedidas de IntrusiÃ³n y sistemas supervivientes contra esta nueva clase de gusanos?; y â¢ Â¿QuÃ© tÃ©cnicas, si las hay, se pueden desarrollar para crear defensas contra los gusanos de enjambre? 6. AGRADECIMIENTOS Este trabajo se realizÃ³ como parte de un esfuerzo mÃ¡s amplio en el desarrollo de sistemas de DetecciÃ³n de Intrusiones y Contramedidas de prÃ³xima generaciÃ³n en WSSRL. El trabajo se lleva a cabo bajo los auspicios de la subvenciÃ³n ACG-2004-06 otorgada por Acumen Consulting Group, Inc., Marlboro, Massachusetts. REFERENCIAS [1] C.C. Zou, L. Gao, W. G., y Towsley, D. Monitoreo y alerta temprana para gusanos de internet. En la 10Âª Conferencia ACM sobre Seguridad InformÃ¡tica y de Comunicaciones, Washington, DC (octubre de 2003). [2] Liu, S. y Passino, K. Inteligencia de enjambre: Resumen de la literatura. En el Departamento de IngenierÃ­a ElÃ©ctrica, Universidad Estatal de Ohio, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., y Weaver, N. La propagaciÃ³n del gusano saphire/slammer. Inf. tÃ©cnico, Un esfuerzo conjunto de CAIDA, ICSI, Silicon Defense, UC Berkeley EECS y UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S. y Cunningham, R. Una taxonomÃ­a de gusanos informÃ¡ticos. En Actas del Taller de ACM sobre Malware RÃ¡pido (WORM) (2003). 329 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "pre-generated target list": {
            "translated_key": "lista de objetivos pregenerada",
            "is_in_text": false,
            "original_annotated_sentences": [
                "An Initial Analysis and Presentation of Malware Exhibiting Swarm-Like Behavior Fernando C.ColÂ´on Osorio Wireless System Security Research Laboratory (W.S.S.R.L.)",
                "420 Lakeside Avneue Marlboro, Massachusetts 01752 fcco@cs.wpi.edu Zachi Klopman Wireless System Security Research Laboratory (W.S.S.R.L.) 420 Lakeside Avneue Marlboro, Massachusetts 01752 zachi@cs.wpi.edu ABSTRACT The Slammer, which is currently the fastest computer worm in recorded history, was observed to infect 90 percent of all vulnerable Internets hosts within 10 minutes.",
                "Although the main action that the Slammer worm takes is a relatively unsophisticated replication of itself, it still spreads so quickly that human response was ineffective.",
                "Most proposed countermeasures strategies are based primarily on rate detection and limiting algorithms.",
                "However, such strategies are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In our work, we put forth the hypothesis that next generation worms will be radically different, and potentially such techniques will prove ineffective.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
                "Emergent Intelligence is the behavior of systems, very much like biological systems such as ants or bees, where simple local interactions of autonomous members, with simple primitive actions, gives rise to complex and intelligent global behavior.",
                "In this manuscript we will introduce the basic principles behind the idea of Swarm Worms, as well as the basic structure required in order to be considered a swarm worm.",
                "In addition, we will present preliminary results on the propagation speeds of one such swarm worm, called the ZachiK worm.",
                "We will show that ZachiK is capable of propagating at a rate 2 orders of magnitude faster than similar worms without swarm capabilities.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Intrusion Detection; D.4.6 [Security and Protection]: Invasive software General Terms Experimentation, Security 1.",
                "INTRODUCTION AND PREVIOUSWORK In the early morning hours (05:30 GMT) of January 25, 2003 the fastest computer worm in recorded history began spreading throughout the Internet.",
                "Within 10 minutes after the first infected host (patient zero), 90 percent of all vulnerable hosts had been compromised creating significant disruption to the global Internet infrastructure.",
                "Vern Paxson of the International Computer Science Institute and Lawrence Berkeley National Laboratory in its analysis of Slammer commented: The Slammer worm spread so quickly that human response was ineffective, see [4] The interesting part, from our perspective, about the spread of Slammer is that it was a relatively unsophisticated worm with benign behavior, namely self-reproduction.",
                "Since Slammer, researchers have explored the behaviors of fast spreading worms, and have designed countermeasures strategies based primarily on rate detection and limiting algorithms.",
                "For example, Zou, et al., [2], proposed a scheme where a Kalman filter is used to detect the early propagation of a worm.",
                "Other researchers have proposed the use of detectors where rates of Destination Unreachable messages are monitored by firewalls, and a significant increase beyond normal, alerts the organization to the potential presence of a worm.",
                "However, such strategies suffer from the fighting the last War syndrome.",
                "That is, systems are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In the work described here, we put forth the hypothesis that next generation worms will be different, and therefore such techniques may have some significant limitations.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
                "The concept of emergent intelligence was first studied in association with biological systems.",
                "In such studies, early researchers discovered a variety of interesting insect or animal behaviors in the wild.",
                "A flock of birds sweeps across the sky.",
                "A group of ants forages for food.",
                "A school of fish swims, turns, flees together away from a predator, ands so forth.",
                "In general, this kind of aggregate motion has been called swarm behavior.",
                "Biologists, and computer scientists in the field of artificial intelligence have studied such biological swarms, and 323 attempted to create models that explain how the elements of a swarm interact, achieve goals, and evolve.",
                "Moreover, in recent years the study of swarm intelligence has become increasingly important in the fields of robotics, the design of Mobile ad-hoc Networks (MANETS), the design of Intrusion Detection Systems, the study of traffic patterns in transportation systems, in military applications, and other areas, see [3].",
                "The basic concepts that have been developed over the last decade to explain swarms, and swarm behavior include four basic components.",
                "These are: 1.",
                "Simplicity of logic & actions: A swarm is composed of N agents whose intelligence is limited.",
                "Agents in the swarm use simple local rules to govern their actions.",
                "Some models called this primitive actions or behaviors; 2.",
                "Local Communication Mechanisms: Agents interact with other members in the swarm via simple local communication mechanisms.",
                "For example, a bird in a flock senses the position of adjacent bird and applies a simple rule of avoidance and follow. 3.",
                "Distributed control: Autonomous agents interact with their environment, which probably consists of other agents, but act relatively independently from all other agents.",
                "There is no central command or leader, and certainly there is no global plan. 4.",
                "Emergent Intelligence: Aggregate behavior of autonomous agents results in complex intelligent behaviors; including self-organization.",
                "In order to understand fully the behavior of such swarms it is necessary to construct a model that explains the behavior of what we will call generic worms.",
                "This model, which extends the work by Weaver [5] is presented here in section 2.",
                "In addition, we intend to extend said model in such a way that it clearly explains the behaviors of this new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
                "Such Swarm Worms are potentially more harmful than their similar generic counterparts.",
                "Specifically, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
                "ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
                "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms are capable of compromising hosts at rates up to two orders of magnitude faster than their generic counterpart.",
                "The rest of this manuscript is structure as follows.",
                "In section 2 an abstract model of both generic worms as well as swarm worms is presented.",
                "This model is used in section 2.6 to described the first instance of a swarm worm, ZachiK.",
                "In section 4, preliminary results via both empirical measurements as well as simulation is presented.",
                "Finally, in section 5 our conclusions and insights into future work are presented. 2.",
                "WORM MODELING In order to study the behavior of swarm worms in general, it is necessary to create a model that realistically reflects the structure of worms and it is not necessarily tied to a specific instance.",
                "In this section, we described such a model where a general worm is describe as having four-(4) basic components or subfunctions.",
                "By definition, a worm is a selfcontained, self propagating program.",
                "Thus, in simple terms, it has two main functions: that which propagates and that which does other things.",
                "We propose that there is a third broad functionality of a worm, that of self-preservation.",
                "We also propose that the other functionality of a worm may be more appropriately categorized as Goal-Based Actions (GBA), as whatever functionality included in a worm will naturally be dependent on whatever goals (and subgoals) the author has.",
                "The work presented by Weaver et. al. in [5] provides us with mainly an action and technique based taxonomy of computer worms, which we utilize and further extend here. 2.1 Propagation The propagation function itself may be broken down into three actions: acquire target, send scan, and infect target.",
                "Acquiring the target simply means picking a host to attack next.",
                "Sending a scan involves checking to see if that host is receptive to an infection attempt, since IP-space is sparsely populated.",
                "This may involve a simple ping to check if the host is alive or a full out vulnerability assessment.",
                "Infecting the target is the actual method used to send the worm code to the new host.",
                "In algorithm form: propagate() { host := acquire_target() success := send_scan(host) if( success ) then infect(host) endif } In the case of a simple worm which does not first check to see if the host is available or susceptible (such as Slammer), the scan method is dropped: propagate() { host := acquire_target() infect(host) } Each of these actions may have an associated cost to its inclusion and execution, such as increased worm size and CPU or network load.",
                "Depending on the authors needs or requirements, these become limiting factors in what may be included in the worms actions.",
                "This is discussed further after expanding upon these actions below. 2.2 Target Acquisition: The Target Acquisition phase of our worm algorithm is built directly off of the Target Discovery section in [5].",
                "Weaver et. al. taxonomize this task into 5 separate categories.",
                "Here, we further extend their work through parameterization.",
                "Scanning: Scanning may be considered an equation-based method for choosing a host.",
                "Any type of equation may be used to arrive at an IP address, but there are three main types seen thus far: sequential, random, and local preference.",
                "Sequential scanning is exactly as it sounds: start at an IP address and increment through all the IP space.",
                "This could carry with it the options of which IP to start with (user chosen value, random, or based on IP of infected host) and 324 how many times to increment (continuous, chosen value, or subnet-based).",
                "Random scanning is completely at random (depending on the chosen PRNG method and its seed value).",
                "Local preference scanning is a variance of either Sequential or Random, whereby it has a greater probability of choosing a local IP address over a remote one (for example, the traditional 80/20 split).",
                "Pre-generated Target Lists: Pre-generated Target Lists, or so called hit-lists, could include the options for percentage of total population and percentage wrong, or just number of IPs to include.",
                "Implicit to this type is the fact that the list is divided among a parent and its children, avoiding the problem of every instance hitting the exact same machines.",
                "Externally Generated Target Lists: Externally generated target lists depend on one or more external sources that can be queried for host data.",
                "This will involve either servers that are normally publicly available, such as gaming meta-servers, or ones explicitly setup by the worm or worm author.",
                "The normally available meta-servers could have parameters for rates of change, such as many popping up at night or leaving in the morning.",
                "Each server could also have a maximum queries/second that it would be able to handle.",
                "The worm would also need a way of finding these servers, either hard-coded or through scanning.",
                "Internal Target Lists: Internal Target Lists are highly dependent on the infected host.",
                "This method could parameterize the choice of how much info is on the host, such as all machines in subnet, all windows boxes in subnet, particular servers, number of internal/external, or some combination.",
                "Passive: Passive methods are determined by normal interactions between hosts.",
                "Parameters may include a rate of interaction with particular machines, internal/external rate of interaction, or subnet-based rate of interaction.",
                "Any of these methods may also be combined to produce different types of target acquisition strategies.",
                "For example, the a worm may begin with an initial hit-list of 100 different hosts or subnets.",
                "Once it has exhausted its search using the hit-list, it may then proceed to perform random scanning with a 50% local bias.",
                "It is important to note, however, that the resource consumption of each method is not the same.",
                "Different methods may require the worm to be large, such as the extra bytes required by a hit-list, or to take more processing time, such as by searching the host for addresses of other vulnerable hosts.",
                "Further research and analysis should be performed in this area to determine associated costs for using each method.",
                "The costs could then be used in determining design tradeoffs that worm authors engage at.",
                "For example, hit lists provide a high rate of infection, but at a high cost of worm payload size. 2.2.1 Sending a Scan The send scan function tests to see if the host is available for infection.",
                "This can be as simple as checking if the host is up on the network or as complex as checking if the host is vulnerable to the exploit which will be used.",
                "The sending of a scan before attempted infection can increase the scanning rate if the cost for failing an infection is greater than the cost of failing a scan or sending a scan plus infection; and failures are more frequent than successes.",
                "One important parameter to this would be the choice of transport protocol (TCP/UDP) or just simply the time for one successful scan and time for one failed scan.",
                "Also, whether or not it tests for the host to be up or if it is a full test for the vulnerability (or for multiple vulnerabilities). 2.2.2 Infection Vector (IV) The particular infection vector used to access the remote host is mainly dependent on the particular vulnerability chosen to exploit.",
                "In a non-specific sense, it is dependent on the transport protocol chosen to use and the message size to be sent.",
                "Section 3 of [5] also proposes three particular classes of IV: Self-carried, second channel, and embedded. 2.3 Self Preservation The Self Preservation actions of a worm may take many forms.",
                "In the wild, worms have been observed to disable anti-virus software or prevent sending itself to certain antivirusknown addresses.",
                "They have also been seen to attempt disabling of other worms which may be contending for the same system.",
                "We also believe that a time-based throttled scanning may help the worm to slip under the radar.",
                "We also propose a decoy method, whereby a worm will release a few children that cause a lot of noise so that the parent is not noticed.",
                "It has also been proposed [5] that a worm cause damage to its host if, and only if, it is disturbed in some way.",
                "This module could contain parameters for: probability of success in disabling anti-virus or other software updates, probability of being noticed and thus removed, or hardening of the host against other worms. 2.4 Goal-Based Actions A worms GBA functionality depends on the authors goal list.",
                "The Payloads section of [5] provides some useful suggestions for such a module.",
                "The opening of a back-door can make the host susceptible to more attacks.",
                "This would involve a probability of the back-door being used and any associated traffic utilization.",
                "It could also provide a list of other worms this host is now susceptible to or a list of vulnerabilities this host now has.",
                "Spam relays and HTTP-Proxies of course have an associated bandwidth consumption or traffic pattern.",
                "Internet DoS attacks would have a set time of activation, a target, and a traffic pattern.",
                "Data damage would have an associated probability that the host dies because of the damage.",
                "In Figure 1, this general model of a worm is summarized.",
                "Please note that in this model there is no learning, no, or very little, sharing of information between worm instances, and certainly no coordination of actions.",
                "In the next section we expand the model to include such mechanisms, and hence, arrive at the general model of a swarm worm. 2.5 Swarms - General Model As described in section 1, the basic characteristics that distinguished swarm behavior from simply what appears to be collective coordinated behaviors are four basic attributes.",
                "These are: 1.",
                "Simplicity of logic & actions; 2.",
                "Local Communication Mechanisms; 3.",
                "Distributed control; and 4.",
                "Emergent Intelligence, including self-organization. 325 Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 1: General Worm Model In this work we aggregate all of these attributes under the general title of Learning, Communication, and Distributed Control.",
                "The presence of these attributes distinguishes swarm worms from otherwise regular worms, or other types of malware such as Zombies.",
                "In figure ? ?, the generic model of a worm is expanded to included these set of actions.",
                "Within this context then, a worm like Slammer cannot be categorized as a swarm worm due to the fact that new instances of the worm do not coordinate their actions or share information.",
                "On the other hand, Zombies and many other forms of DDoS, which at first glance may be consider swarm worms are not.",
                "This is simply due to fact that in the case of Zombies, control is not distributed but rather centralized, and no emergent behaviors arise.",
                "The latter, the potential emergence of intelligence or new behaviors is what makes swarm worms so potentially dangerous.",
                "Finally, when one considers the majority of recent disruptions to the Internet Infrastructure, and in light of our description of swarm attacks, then said disruptions can be easily categorized as precursors to truly swarm behavior.",
                "Specifically, â¢ DDOS - Large number of compromised hosts send useless packets requiring processing (Stacheldraht, http : //www.cert.org/ incidentnotes/IN â 99 â 04.html).",
                "DDoS attacks are the early precursors to Swarm Attacks due to the large number of agents involved. â¢ Code Red CrV1, Code Red II, Nimbda - Exhibit early notions of swarm attacks, including a backdoor communication channel. â¢ Staniford & Paxson in How to Own the Internet in Your Spare Time? explore modifications to CrV1, Code Red I, II with a swarm like type of behavior.",
                "For example, they speculate on new worms which employ direct worm-to-worm communication, and employ programmable updates.",
                "For example the Warhol worm, and Permutation-Scanning (self coordinating) worms. 2.6 Swarm Worm: the details In considering the creation of what we believed to be the first Swarm Worm in existence, we wanted to adhere as close as possible to the general model presented in section ? ? while at the same time facilitating large scale analysis, both empirical and through simulations, of the behavior of the swarm.",
                "For this reason, we selected as the first instance Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Learning, Communication, Pheromones/Flags (Test and Distributed Control if Worm is already present) Time bombs, Learning Algorithms, IRC channel Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 2: General Model of a Swarm Worm of the swarm a simple password cracking worm.",
                "The objective of this worm simply is to infect a host by sequentially attempting to login into the host using well known passwords (dictionary attack), passwords that have been discovered previously by any member of the swarm, and random passwords.",
                "Once, a host is infected, the worm will create communication channels with both its known neighbors at that time, as well as with any offsprings that it successfully generates.",
                "In this context a successful generation of an offspring means simply infecting a new host and replicating an exact copy of itself in such a host.",
                "We call this swarm worm the ZachiK worm in honor of one of its creators.",
                "As it can be seen from this description, the ZachiK worm exhibits all of the elements described before.",
                "In the following sections, we described in detail each one of the elements of the ZachiK worm. 2.7 Infection Vector The infection vector used for ZachiK worm is the secure shell protocol SSH.",
                "A modified client which is capable of receiving passwords from the command line was written, and integrated with a script that supplies it with various passwords: known and random.",
                "When a password is found for an appropriate target, the infection process begins.",
                "After the root password of a host is discovered, the worm infects the target host and replicates itself.",
                "The worm creates a new directory in the target host, copies the modified ssh client, the script, the communications servers, and the updated versions of data files (list of known passwords and a list of current neighbors).",
                "It then runs the modified script on the newly infected hosts, which spawns the communications server, notifies the neighbors and starts looking for new targets.",
                "It could be argued, correctly, that the ZachiK worm can be easily defeated by current countermeasure techniques present on most systems today, such as disallowing direct root logins from the network.",
                "Within this context ZachiK can quickly be discarded as very simple and harmless worm that does not require further study.",
                "However, the reader should consider the following: 1.",
                "ZachiK can be easily modified to include a variety of infection vectors.",
                "For example, it could be programmed to guess common user names and their passwords; gain 326 access to a system, then guess the root password or use other well know vulnerabilities to gain root privileges; 2.",
                "ZachiK is a proof of concept worm.",
                "The importance of ZachiK is that it incorporates all of the behaviors of a swarm worm including, but not restricted to, distributed control, communication amongst agents, and learning; 3.",
                "ZachiK is composed of a large collection of agents operating independently which lends itself naturally to parallel algorithms such as a parallel search of the IPV4 address space.",
                "Within this context, SLAMMER, does incorporate a parallel search capability of potentially susceptible addresses.",
                "However, unlike ZachiK, the knowledge discovered by the search is never shared amongst the agents.",
                "For this reasons, and many others, one should not discard the potential of this new class of worms but rather embrace its study. 2.8 Self-Preservation In the case of ZachiK worm, the main self-preservation techniques used are simply keeping the payload small.",
                "In this context, this simply means restricting the number of passwords that an offspring inherits, masquerading worm messages as common http requests, and restricting the number of neighbors to a maximum of five-(5). 2.9 Propagation Choosing the next target(s) in an efficient matter requires thought.",
                "In the past, known and proposed worms, see [5], have applied propagation techniques that varied.",
                "These include: strictly random selection of a potential vulnerable host; target lists of vulnerable hosts; locally biased random selection (select a host target at random from a local subnet); and a combination of some or all of the above.",
                "In our test and simulation environments, we will apply a combination of locally biased and totally random selection of potential vulnerable hosts.",
                "However, due to the fact that the ZachiK worm is a swarm worm, address discovery (that is when non-existent addresses are discovered) information will be shared amongst members of the swarm.",
                "The infection and propagation threads do the following set of activities repeatedly: â¢ Choose an address â¢ Check the validity of the address â¢ Choose a set of passwords â¢ Try infecting the selected host with this set of passwords As described earlier, choosing an address makes use of a combination of random selection, local bias, and target lists.",
                "Specifically, to choose an address, the instance may either: â¢ Generate a new random address â¢ Generate an address on the local network â¢ Pick an address from a handoff list The choice is made randomly among these options, and can be varied to test the dependency of propagation on particular choices.",
                "Password are either chosen from the list of known passwords or newly generated.",
                "When an infection of a valid address fails, it is added to a list of handoffs, which is sent to the neighbors to try to work on. 2.10 Learning, CommunicationandDistributed Control 2.10.1 Communication The concept of a swarm is based on transfer of information amongst neighbors, which relay their new incoming messages to their neighbors, and so on until every worm instance in the swarm is aware of these messages.",
                "There are two classes of messages: data or information messages and commands.",
                "The command messages are meant for an external user (a.k.a., hackers and/or crackers) to control the actions of the instances, and are currently not implemented.",
                "The information messages are currently of three kinds: new member, passwords and exploitable addresses (handoffs).",
                "The new member messages are messages that a new instance sends to the neighbors on its (short) list of initial neighbors.",
                "The neighbors then register these instances in their neighbor list.",
                "These are messages that form the multi-connectivity of the swarm, and without them, the topology will be a treelike structure, where eliminating a single node would cause the instances beneath it to be inaccessible.",
                "The passwords messages inform instances of newly discovered passwords, and by informing all instances, the swarm as whole collects this information, which allows it to infect new instances more effectively.",
                "The handoffs messages inform instances of valid addresses that could not be compromised (fail at breaking the password for the root account).",
                "Since the address space is rather sparse, it takes a relatively long time (i.e. many trials) to discover a valid address.",
                "Therefore, by handing off discovered valid addresses, the swarm is (a) conserving energy by not re-discovering the same addresses (b) attacking more effectively.",
                "In a way, this is a simple instance of coordinated activity of a swarm. 2.10.2 Coordination When a worm instance is born, it relays its existence to all neighbors on its list.",
                "The main thread then spawns a few infection threads, and continues to handle incoming messages (registering neighbors, adding new passwords, receiving addresses and relaying these messages). 2.10.3 Distributed Control Control in the ZachiK worm is distributed in the sense that each instance of the worm performs a set of actions independently of every other instance while at the same time benefiting from the learning achieve by its immediate neighbors. 2.11 Goal Based Actions The first instantiation of the ZachiK worm has two basic goals.",
                "These are: (1) propagate, and (2) discover and share with members of th swarm new root passwords. 3.",
                "EXPERIMENTAL DESIGN In order to verify our hypothesis that Swarm Worms are more capable, and therefore dangerous than other well known 327 worms, a network testbed was created, and a simulator, capable of simulating large scale Internet-like topologies (IPV4 space), was developed.",
                "The network testbed consisted of a local area network of 30 Linux based computers.",
                "The simulator was written in C++ .",
                "The simple swarm worm described in section 2.6 was used to infect patient-zero, and then the swarm worm was allowed to propagate via its own mechanisms of propagation, distributed control, and swarm behaviors.",
                "In the case of a simple local area network of 30 computers, six-(6) different root passwords out of a password space of 4 digits (10000 options) were selected.",
                "At the start of the experiment a single known password is known, that of patient-zero.",
                "All shared passwords are distributed randomly across all nodes.",
                "Similarly, in the case of the simulation, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "For example, in one of our simulation runs, the network topology consisted of 200 subnets each containing 50 hosts.",
                "In such a topology, shared passwords were distributed across subnets where a varying percentage of passwords were shared across subnets.",
                "The percentages of shared passwords used was reflective of early empirical studies, where up to 39.7% of common passwords were found to be shared. 4.",
                "RESULTS In Figure 3, the results comparing Swarm Attack behavior versus that of a typical Malform Worm for a 30 node LAN are presented.",
                "In this set of empirical runs, six-(6) shared passwords were distributed at random across all nodes from a possible of 10,000 unknown passwords.",
                "The data presented reflects the behaviors of a total of three-(3) distinct classes of worm or swarm worms.",
                "The class of worms presented are as follows: â¢ I-NS-NL:= Generic worm, independent (I), no learning/memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; and â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 3, the results validate our original hypothesis that swarm worms are significantly more efficient and dangerous than generic worms.",
                "In this set of experiments, the sharing of passwords provides an order of magnitude improvement over a memoryless random worm.",
                "Similarly, a swarm worm that shares passwords and addresses is approximately two orders of magnitude more efficient than its generic counterpart.",
                "In Figure 3, a series of discontinuities can be observed.",
                "These discontinuities are an artifact of the small sample space used for this experiment.",
                "Basically, as soon as a password is broken, all nodes sharing that specific password are infected within a few seconds.",
                "Note that it is trivial for a swarm worm to scan and discovered a small shared password space.",
                "In Figure 4, the simulation results comparing Swarm Attack Behavior versus that of a Generic Malform Worm are presented.",
                "In this set of simulation runs, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "The data presented reflects the behaviors of three-(3) distinct classes of worm or swarm worms and two(2) different target host selection scanning strategies (random scanning and local bias).",
                "The amount of local bias was varied across multiple simulation runs.",
                "The results presented are aggregate behaviors.",
                "In general the following class of Generic Worms and Swarm Worms were simulated.",
                "Address Scanning: â¢ Random:= addresses are selected at random from a subset of the IPV4 space, namely, a 224 address space; and â¢ Local Bias:= addresses are selected at random from either a local subnet (256 addresses) or from a subset of the IPV4 space, namely, a 224 address space.",
                "The percentage of local bias is varied across multiple runs.",
                "Learning, Communication & Distributed Control â¢ I-NL-NS: Generic worm, independent (I), no learning/ memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ I-L-OOS: Generic worm, independent (I), learning/ memoryless (L), and one time sharing of information with offsprings only (OOS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; â¢ S-L-S&AOP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of addresses with neighbors and offsprings, shares passwords one time only (at creation) with offsprings(SA&OP); â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 4, the results are consistent with our set of empirical results.",
                "In addition, the following observations can be made. 1.",
                "Local preference is incredibly effective. 2.",
                "Short address handoffs are more effective than long ones.",
                "We varied the size of the list allowed in the sharing of addresses; the overhead associated with a long address list is detrimental to the performance of the swarm worm, as well as to its stealthiness; 3.",
                "For the local bias case, sharing valid addresses of susceptible host, S-L-S&AOP worm (recall, the S-L-S&AOP swarm shares passwords, one time only, with offsprings 328 at creation time) is more effective than sharing passwords in the case of the S-L-SP swarm.",
                "In this case, we can think of the swarm as launching a distributeddictionary attack: different segments of the swarm use different passwords to try to break into susceptible uninfected host.",
                "In the local bias mode, early in the life of the swarm, address-sharing is more effective than password-sharing, until most subnets are discovered.",
                "Then the targeting of local addresses assists in discovering the susceptible hosts, while the swarm members need to waste time rediscovering passwords; and 4.",
                "Infecting the last 0.5% of nodes takes a very long time in non-local bias mode.",
                "Basically, the shared password list across subnets has been exhausted, and the swarm reverts to simply a random discovery of password algorithm.",
                "Figure 3: Swarm Attack Behavior vs. Malform Worm: Empirical Results, 30node LAN Figure 4: Swarm Attack Behavior vs. Malform Worm: Simulation Results 5.",
                "SUMMARY AND FUTURE WORK In this manuscript, we have presented an abstract model, similar in some aspects to that of Weaver [5], that helps explain the generic nature of worms.",
                "The model presented in section 2 was extended to incorporate a new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
                "Such Swarm Worms are potentially more harmful than their generic counterparts.",
                "In addition, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
                "ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
                "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms is capable of compromising hosts a rates up to 2 orders of magnitude faster than its generic counterpart while retaining stealth capabilities.",
                "This work opens up a new area of interesting problems.",
                "Some of the most interesting and pressing problems to be consider are as follows: â¢ Is it possible to apply some of learning concepts developed over the last ten years in the areas of swarm intelligence, agent systems, and distributed control to the design of sophisticated swarm worms in such a way that true emergent behavior takes place? â¢ Are the current techniques being developed in the design of Intrusion Detection & CounterMeasure Systems and Survivable systems effective against this new class of worms? ; and â¢ What techniques, if any, can be developed to create defenses against swarm worms? 6.",
                "ACKNOWLEDGMENTS This work was conducted as part of a larger effort in the development of next generation Intrusion Detection & CounterMeasure Systems at WSSRL.",
                "The work is conducted under the auspices of Grant ACG-2004-06 by the Acumen Consulting Group, Inc., Marlboro, Massachusetts. 7.",
                "REFERENCES [1] C.C.",
                "Zou, L. Gao, W. G., and Towsley, D. Monitoring and early warning for internet worms.",
                "In 10th ACM Conference on Computer and Communications Security, Washington, DC (October 2003). [2] Liu, S., and Passino, K. Swarm intelligence: Literature overview.",
                "In Dept. of Electrical Engineering, The Ohio State University, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., and Weaver, N. The spread of the saphire/slammer worm.",
                "Tech. rep., A joint effort of CAIDA, ICSI, Silicon Defense, UC Berkeley EECS and UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S., and Cunningham, R. A taxonomy of computer worms.",
                "In Proceedings of the ACM Workshop on Rapid Malware (WORM) (2003). 329"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        },
        "distributed intelligence": {
            "translated_key": "inteligencia distribuida",
            "is_in_text": true,
            "original_annotated_sentences": [
                "An Initial Analysis and Presentation of Malware Exhibiting Swarm-Like Behavior Fernando C.ColÂ´on Osorio Wireless System Security Research Laboratory (W.S.S.R.L.)",
                "420 Lakeside Avneue Marlboro, Massachusetts 01752 fcco@cs.wpi.edu Zachi Klopman Wireless System Security Research Laboratory (W.S.S.R.L.) 420 Lakeside Avneue Marlboro, Massachusetts 01752 zachi@cs.wpi.edu ABSTRACT The Slammer, which is currently the fastest computer worm in recorded history, was observed to infect 90 percent of all vulnerable Internets hosts within 10 minutes.",
                "Although the main action that the Slammer worm takes is a relatively unsophisticated replication of itself, it still spreads so quickly that human response was ineffective.",
                "Most proposed countermeasures strategies are based primarily on rate detection and limiting algorithms.",
                "However, such strategies are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In our work, we put forth the hypothesis that next generation worms will be radically different, and potentially such techniques will prove ineffective.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
                "Emergent Intelligence is the behavior of systems, very much like biological systems such as ants or bees, where simple local interactions of autonomous members, with simple primitive actions, gives rise to complex and intelligent global behavior.",
                "In this manuscript we will introduce the basic principles behind the idea of Swarm Worms, as well as the basic structure required in order to be considered a swarm worm.",
                "In addition, we will present preliminary results on the propagation speeds of one such swarm worm, called the ZachiK worm.",
                "We will show that ZachiK is capable of propagating at a rate 2 orders of magnitude faster than similar worms without swarm capabilities.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Intrusion Detection; D.4.6 [Security and Protection]: Invasive software General Terms Experimentation, Security 1.",
                "INTRODUCTION AND PREVIOUSWORK In the early morning hours (05:30 GMT) of January 25, 2003 the fastest computer worm in recorded history began spreading throughout the Internet.",
                "Within 10 minutes after the first infected host (patient zero), 90 percent of all vulnerable hosts had been compromised creating significant disruption to the global Internet infrastructure.",
                "Vern Paxson of the International Computer Science Institute and Lawrence Berkeley National Laboratory in its analysis of Slammer commented: The Slammer worm spread so quickly that human response was ineffective, see [4] The interesting part, from our perspective, about the spread of Slammer is that it was a relatively unsophisticated worm with benign behavior, namely self-reproduction.",
                "Since Slammer, researchers have explored the behaviors of fast spreading worms, and have designed countermeasures strategies based primarily on rate detection and limiting algorithms.",
                "For example, Zou, et al., [2], proposed a scheme where a Kalman filter is used to detect the early propagation of a worm.",
                "Other researchers have proposed the use of detectors where rates of Destination Unreachable messages are monitored by firewalls, and a significant increase beyond normal, alerts the organization to the potential presence of a worm.",
                "However, such strategies suffer from the fighting the last War syndrome.",
                "That is, systems are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In the work described here, we put forth the hypothesis that next generation worms will be different, and therefore such techniques may have some significant limitations.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
                "The concept of emergent intelligence was first studied in association with biological systems.",
                "In such studies, early researchers discovered a variety of interesting insect or animal behaviors in the wild.",
                "A flock of birds sweeps across the sky.",
                "A group of ants forages for food.",
                "A school of fish swims, turns, flees together away from a predator, ands so forth.",
                "In general, this kind of aggregate motion has been called swarm behavior.",
                "Biologists, and computer scientists in the field of artificial intelligence have studied such biological swarms, and 323 attempted to create models that explain how the elements of a swarm interact, achieve goals, and evolve.",
                "Moreover, in recent years the study of swarm intelligence has become increasingly important in the fields of robotics, the design of Mobile ad-hoc Networks (MANETS), the design of Intrusion Detection Systems, the study of traffic patterns in transportation systems, in military applications, and other areas, see [3].",
                "The basic concepts that have been developed over the last decade to explain swarms, and swarm behavior include four basic components.",
                "These are: 1.",
                "Simplicity of logic & actions: A swarm is composed of N agents whose intelligence is limited.",
                "Agents in the swarm use simple local rules to govern their actions.",
                "Some models called this primitive actions or behaviors; 2.",
                "Local Communication Mechanisms: Agents interact with other members in the swarm via simple local communication mechanisms.",
                "For example, a bird in a flock senses the position of adjacent bird and applies a simple rule of avoidance and follow. 3.",
                "Distributed control: Autonomous agents interact with their environment, which probably consists of other agents, but act relatively independently from all other agents.",
                "There is no central command or leader, and certainly there is no global plan. 4.",
                "Emergent Intelligence: Aggregate behavior of autonomous agents results in complex intelligent behaviors; including self-organization.",
                "In order to understand fully the behavior of such swarms it is necessary to construct a model that explains the behavior of what we will call generic worms.",
                "This model, which extends the work by Weaver [5] is presented here in section 2.",
                "In addition, we intend to extend said model in such a way that it clearly explains the behaviors of this new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and <br>distributed intelligence</br>.",
                "Such Swarm Worms are potentially more harmful than their similar generic counterparts.",
                "Specifically, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
                "ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
                "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms are capable of compromising hosts at rates up to two orders of magnitude faster than their generic counterpart.",
                "The rest of this manuscript is structure as follows.",
                "In section 2 an abstract model of both generic worms as well as swarm worms is presented.",
                "This model is used in section 2.6 to described the first instance of a swarm worm, ZachiK.",
                "In section 4, preliminary results via both empirical measurements as well as simulation is presented.",
                "Finally, in section 5 our conclusions and insights into future work are presented. 2.",
                "WORM MODELING In order to study the behavior of swarm worms in general, it is necessary to create a model that realistically reflects the structure of worms and it is not necessarily tied to a specific instance.",
                "In this section, we described such a model where a general worm is describe as having four-(4) basic components or subfunctions.",
                "By definition, a worm is a selfcontained, self propagating program.",
                "Thus, in simple terms, it has two main functions: that which propagates and that which does other things.",
                "We propose that there is a third broad functionality of a worm, that of self-preservation.",
                "We also propose that the other functionality of a worm may be more appropriately categorized as Goal-Based Actions (GBA), as whatever functionality included in a worm will naturally be dependent on whatever goals (and subgoals) the author has.",
                "The work presented by Weaver et. al. in [5] provides us with mainly an action and technique based taxonomy of computer worms, which we utilize and further extend here. 2.1 Propagation The propagation function itself may be broken down into three actions: acquire target, send scan, and infect target.",
                "Acquiring the target simply means picking a host to attack next.",
                "Sending a scan involves checking to see if that host is receptive to an infection attempt, since IP-space is sparsely populated.",
                "This may involve a simple ping to check if the host is alive or a full out vulnerability assessment.",
                "Infecting the target is the actual method used to send the worm code to the new host.",
                "In algorithm form: propagate() { host := acquire_target() success := send_scan(host) if( success ) then infect(host) endif } In the case of a simple worm which does not first check to see if the host is available or susceptible (such as Slammer), the scan method is dropped: propagate() { host := acquire_target() infect(host) } Each of these actions may have an associated cost to its inclusion and execution, such as increased worm size and CPU or network load.",
                "Depending on the authors needs or requirements, these become limiting factors in what may be included in the worms actions.",
                "This is discussed further after expanding upon these actions below. 2.2 Target Acquisition: The Target Acquisition phase of our worm algorithm is built directly off of the Target Discovery section in [5].",
                "Weaver et. al. taxonomize this task into 5 separate categories.",
                "Here, we further extend their work through parameterization.",
                "Scanning: Scanning may be considered an equation-based method for choosing a host.",
                "Any type of equation may be used to arrive at an IP address, but there are three main types seen thus far: sequential, random, and local preference.",
                "Sequential scanning is exactly as it sounds: start at an IP address and increment through all the IP space.",
                "This could carry with it the options of which IP to start with (user chosen value, random, or based on IP of infected host) and 324 how many times to increment (continuous, chosen value, or subnet-based).",
                "Random scanning is completely at random (depending on the chosen PRNG method and its seed value).",
                "Local preference scanning is a variance of either Sequential or Random, whereby it has a greater probability of choosing a local IP address over a remote one (for example, the traditional 80/20 split).",
                "Pre-generated Target Lists: Pre-generated Target Lists, or so called hit-lists, could include the options for percentage of total population and percentage wrong, or just number of IPs to include.",
                "Implicit to this type is the fact that the list is divided among a parent and its children, avoiding the problem of every instance hitting the exact same machines.",
                "Externally Generated Target Lists: Externally generated target lists depend on one or more external sources that can be queried for host data.",
                "This will involve either servers that are normally publicly available, such as gaming meta-servers, or ones explicitly setup by the worm or worm author.",
                "The normally available meta-servers could have parameters for rates of change, such as many popping up at night or leaving in the morning.",
                "Each server could also have a maximum queries/second that it would be able to handle.",
                "The worm would also need a way of finding these servers, either hard-coded or through scanning.",
                "Internal Target Lists: Internal Target Lists are highly dependent on the infected host.",
                "This method could parameterize the choice of how much info is on the host, such as all machines in subnet, all windows boxes in subnet, particular servers, number of internal/external, or some combination.",
                "Passive: Passive methods are determined by normal interactions between hosts.",
                "Parameters may include a rate of interaction with particular machines, internal/external rate of interaction, or subnet-based rate of interaction.",
                "Any of these methods may also be combined to produce different types of target acquisition strategies.",
                "For example, the a worm may begin with an initial hit-list of 100 different hosts or subnets.",
                "Once it has exhausted its search using the hit-list, it may then proceed to perform random scanning with a 50% local bias.",
                "It is important to note, however, that the resource consumption of each method is not the same.",
                "Different methods may require the worm to be large, such as the extra bytes required by a hit-list, or to take more processing time, such as by searching the host for addresses of other vulnerable hosts.",
                "Further research and analysis should be performed in this area to determine associated costs for using each method.",
                "The costs could then be used in determining design tradeoffs that worm authors engage at.",
                "For example, hit lists provide a high rate of infection, but at a high cost of worm payload size. 2.2.1 Sending a Scan The send scan function tests to see if the host is available for infection.",
                "This can be as simple as checking if the host is up on the network or as complex as checking if the host is vulnerable to the exploit which will be used.",
                "The sending of a scan before attempted infection can increase the scanning rate if the cost for failing an infection is greater than the cost of failing a scan or sending a scan plus infection; and failures are more frequent than successes.",
                "One important parameter to this would be the choice of transport protocol (TCP/UDP) or just simply the time for one successful scan and time for one failed scan.",
                "Also, whether or not it tests for the host to be up or if it is a full test for the vulnerability (or for multiple vulnerabilities). 2.2.2 Infection Vector (IV) The particular infection vector used to access the remote host is mainly dependent on the particular vulnerability chosen to exploit.",
                "In a non-specific sense, it is dependent on the transport protocol chosen to use and the message size to be sent.",
                "Section 3 of [5] also proposes three particular classes of IV: Self-carried, second channel, and embedded. 2.3 Self Preservation The Self Preservation actions of a worm may take many forms.",
                "In the wild, worms have been observed to disable anti-virus software or prevent sending itself to certain antivirusknown addresses.",
                "They have also been seen to attempt disabling of other worms which may be contending for the same system.",
                "We also believe that a time-based throttled scanning may help the worm to slip under the radar.",
                "We also propose a decoy method, whereby a worm will release a few children that cause a lot of noise so that the parent is not noticed.",
                "It has also been proposed [5] that a worm cause damage to its host if, and only if, it is disturbed in some way.",
                "This module could contain parameters for: probability of success in disabling anti-virus or other software updates, probability of being noticed and thus removed, or hardening of the host against other worms. 2.4 Goal-Based Actions A worms GBA functionality depends on the authors goal list.",
                "The Payloads section of [5] provides some useful suggestions for such a module.",
                "The opening of a back-door can make the host susceptible to more attacks.",
                "This would involve a probability of the back-door being used and any associated traffic utilization.",
                "It could also provide a list of other worms this host is now susceptible to or a list of vulnerabilities this host now has.",
                "Spam relays and HTTP-Proxies of course have an associated bandwidth consumption or traffic pattern.",
                "Internet DoS attacks would have a set time of activation, a target, and a traffic pattern.",
                "Data damage would have an associated probability that the host dies because of the damage.",
                "In Figure 1, this general model of a worm is summarized.",
                "Please note that in this model there is no learning, no, or very little, sharing of information between worm instances, and certainly no coordination of actions.",
                "In the next section we expand the model to include such mechanisms, and hence, arrive at the general model of a swarm worm. 2.5 Swarms - General Model As described in section 1, the basic characteristics that distinguished swarm behavior from simply what appears to be collective coordinated behaviors are four basic attributes.",
                "These are: 1.",
                "Simplicity of logic & actions; 2.",
                "Local Communication Mechanisms; 3.",
                "Distributed control; and 4.",
                "Emergent Intelligence, including self-organization. 325 Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 1: General Worm Model In this work we aggregate all of these attributes under the general title of Learning, Communication, and Distributed Control.",
                "The presence of these attributes distinguishes swarm worms from otherwise regular worms, or other types of malware such as Zombies.",
                "In figure ? ?, the generic model of a worm is expanded to included these set of actions.",
                "Within this context then, a worm like Slammer cannot be categorized as a swarm worm due to the fact that new instances of the worm do not coordinate their actions or share information.",
                "On the other hand, Zombies and many other forms of DDoS, which at first glance may be consider swarm worms are not.",
                "This is simply due to fact that in the case of Zombies, control is not distributed but rather centralized, and no emergent behaviors arise.",
                "The latter, the potential emergence of intelligence or new behaviors is what makes swarm worms so potentially dangerous.",
                "Finally, when one considers the majority of recent disruptions to the Internet Infrastructure, and in light of our description of swarm attacks, then said disruptions can be easily categorized as precursors to truly swarm behavior.",
                "Specifically, â¢ DDOS - Large number of compromised hosts send useless packets requiring processing (Stacheldraht, http : //www.cert.org/ incidentnotes/IN â 99 â 04.html).",
                "DDoS attacks are the early precursors to Swarm Attacks due to the large number of agents involved. â¢ Code Red CrV1, Code Red II, Nimbda - Exhibit early notions of swarm attacks, including a backdoor communication channel. â¢ Staniford & Paxson in How to Own the Internet in Your Spare Time? explore modifications to CrV1, Code Red I, II with a swarm like type of behavior.",
                "For example, they speculate on new worms which employ direct worm-to-worm communication, and employ programmable updates.",
                "For example the Warhol worm, and Permutation-Scanning (self coordinating) worms. 2.6 Swarm Worm: the details In considering the creation of what we believed to be the first Swarm Worm in existence, we wanted to adhere as close as possible to the general model presented in section ? ? while at the same time facilitating large scale analysis, both empirical and through simulations, of the behavior of the swarm.",
                "For this reason, we selected as the first instance Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Learning, Communication, Pheromones/Flags (Test and Distributed Control if Worm is already present) Time bombs, Learning Algorithms, IRC channel Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 2: General Model of a Swarm Worm of the swarm a simple password cracking worm.",
                "The objective of this worm simply is to infect a host by sequentially attempting to login into the host using well known passwords (dictionary attack), passwords that have been discovered previously by any member of the swarm, and random passwords.",
                "Once, a host is infected, the worm will create communication channels with both its known neighbors at that time, as well as with any offsprings that it successfully generates.",
                "In this context a successful generation of an offspring means simply infecting a new host and replicating an exact copy of itself in such a host.",
                "We call this swarm worm the ZachiK worm in honor of one of its creators.",
                "As it can be seen from this description, the ZachiK worm exhibits all of the elements described before.",
                "In the following sections, we described in detail each one of the elements of the ZachiK worm. 2.7 Infection Vector The infection vector used for ZachiK worm is the secure shell protocol SSH.",
                "A modified client which is capable of receiving passwords from the command line was written, and integrated with a script that supplies it with various passwords: known and random.",
                "When a password is found for an appropriate target, the infection process begins.",
                "After the root password of a host is discovered, the worm infects the target host and replicates itself.",
                "The worm creates a new directory in the target host, copies the modified ssh client, the script, the communications servers, and the updated versions of data files (list of known passwords and a list of current neighbors).",
                "It then runs the modified script on the newly infected hosts, which spawns the communications server, notifies the neighbors and starts looking for new targets.",
                "It could be argued, correctly, that the ZachiK worm can be easily defeated by current countermeasure techniques present on most systems today, such as disallowing direct root logins from the network.",
                "Within this context ZachiK can quickly be discarded as very simple and harmless worm that does not require further study.",
                "However, the reader should consider the following: 1.",
                "ZachiK can be easily modified to include a variety of infection vectors.",
                "For example, it could be programmed to guess common user names and their passwords; gain 326 access to a system, then guess the root password or use other well know vulnerabilities to gain root privileges; 2.",
                "ZachiK is a proof of concept worm.",
                "The importance of ZachiK is that it incorporates all of the behaviors of a swarm worm including, but not restricted to, distributed control, communication amongst agents, and learning; 3.",
                "ZachiK is composed of a large collection of agents operating independently which lends itself naturally to parallel algorithms such as a parallel search of the IPV4 address space.",
                "Within this context, SLAMMER, does incorporate a parallel search capability of potentially susceptible addresses.",
                "However, unlike ZachiK, the knowledge discovered by the search is never shared amongst the agents.",
                "For this reasons, and many others, one should not discard the potential of this new class of worms but rather embrace its study. 2.8 Self-Preservation In the case of ZachiK worm, the main self-preservation techniques used are simply keeping the payload small.",
                "In this context, this simply means restricting the number of passwords that an offspring inherits, masquerading worm messages as common http requests, and restricting the number of neighbors to a maximum of five-(5). 2.9 Propagation Choosing the next target(s) in an efficient matter requires thought.",
                "In the past, known and proposed worms, see [5], have applied propagation techniques that varied.",
                "These include: strictly random selection of a potential vulnerable host; target lists of vulnerable hosts; locally biased random selection (select a host target at random from a local subnet); and a combination of some or all of the above.",
                "In our test and simulation environments, we will apply a combination of locally biased and totally random selection of potential vulnerable hosts.",
                "However, due to the fact that the ZachiK worm is a swarm worm, address discovery (that is when non-existent addresses are discovered) information will be shared amongst members of the swarm.",
                "The infection and propagation threads do the following set of activities repeatedly: â¢ Choose an address â¢ Check the validity of the address â¢ Choose a set of passwords â¢ Try infecting the selected host with this set of passwords As described earlier, choosing an address makes use of a combination of random selection, local bias, and target lists.",
                "Specifically, to choose an address, the instance may either: â¢ Generate a new random address â¢ Generate an address on the local network â¢ Pick an address from a handoff list The choice is made randomly among these options, and can be varied to test the dependency of propagation on particular choices.",
                "Password are either chosen from the list of known passwords or newly generated.",
                "When an infection of a valid address fails, it is added to a list of handoffs, which is sent to the neighbors to try to work on. 2.10 Learning, CommunicationandDistributed Control 2.10.1 Communication The concept of a swarm is based on transfer of information amongst neighbors, which relay their new incoming messages to their neighbors, and so on until every worm instance in the swarm is aware of these messages.",
                "There are two classes of messages: data or information messages and commands.",
                "The command messages are meant for an external user (a.k.a., hackers and/or crackers) to control the actions of the instances, and are currently not implemented.",
                "The information messages are currently of three kinds: new member, passwords and exploitable addresses (handoffs).",
                "The new member messages are messages that a new instance sends to the neighbors on its (short) list of initial neighbors.",
                "The neighbors then register these instances in their neighbor list.",
                "These are messages that form the multi-connectivity of the swarm, and without them, the topology will be a treelike structure, where eliminating a single node would cause the instances beneath it to be inaccessible.",
                "The passwords messages inform instances of newly discovered passwords, and by informing all instances, the swarm as whole collects this information, which allows it to infect new instances more effectively.",
                "The handoffs messages inform instances of valid addresses that could not be compromised (fail at breaking the password for the root account).",
                "Since the address space is rather sparse, it takes a relatively long time (i.e. many trials) to discover a valid address.",
                "Therefore, by handing off discovered valid addresses, the swarm is (a) conserving energy by not re-discovering the same addresses (b) attacking more effectively.",
                "In a way, this is a simple instance of coordinated activity of a swarm. 2.10.2 Coordination When a worm instance is born, it relays its existence to all neighbors on its list.",
                "The main thread then spawns a few infection threads, and continues to handle incoming messages (registering neighbors, adding new passwords, receiving addresses and relaying these messages). 2.10.3 Distributed Control Control in the ZachiK worm is distributed in the sense that each instance of the worm performs a set of actions independently of every other instance while at the same time benefiting from the learning achieve by its immediate neighbors. 2.11 Goal Based Actions The first instantiation of the ZachiK worm has two basic goals.",
                "These are: (1) propagate, and (2) discover and share with members of th swarm new root passwords. 3.",
                "EXPERIMENTAL DESIGN In order to verify our hypothesis that Swarm Worms are more capable, and therefore dangerous than other well known 327 worms, a network testbed was created, and a simulator, capable of simulating large scale Internet-like topologies (IPV4 space), was developed.",
                "The network testbed consisted of a local area network of 30 Linux based computers.",
                "The simulator was written in C++ .",
                "The simple swarm worm described in section 2.6 was used to infect patient-zero, and then the swarm worm was allowed to propagate via its own mechanisms of propagation, distributed control, and swarm behaviors.",
                "In the case of a simple local area network of 30 computers, six-(6) different root passwords out of a password space of 4 digits (10000 options) were selected.",
                "At the start of the experiment a single known password is known, that of patient-zero.",
                "All shared passwords are distributed randomly across all nodes.",
                "Similarly, in the case of the simulation, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "For example, in one of our simulation runs, the network topology consisted of 200 subnets each containing 50 hosts.",
                "In such a topology, shared passwords were distributed across subnets where a varying percentage of passwords were shared across subnets.",
                "The percentages of shared passwords used was reflective of early empirical studies, where up to 39.7% of common passwords were found to be shared. 4.",
                "RESULTS In Figure 3, the results comparing Swarm Attack behavior versus that of a typical Malform Worm for a 30 node LAN are presented.",
                "In this set of empirical runs, six-(6) shared passwords were distributed at random across all nodes from a possible of 10,000 unknown passwords.",
                "The data presented reflects the behaviors of a total of three-(3) distinct classes of worm or swarm worms.",
                "The class of worms presented are as follows: â¢ I-NS-NL:= Generic worm, independent (I), no learning/memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; and â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 3, the results validate our original hypothesis that swarm worms are significantly more efficient and dangerous than generic worms.",
                "In this set of experiments, the sharing of passwords provides an order of magnitude improvement over a memoryless random worm.",
                "Similarly, a swarm worm that shares passwords and addresses is approximately two orders of magnitude more efficient than its generic counterpart.",
                "In Figure 3, a series of discontinuities can be observed.",
                "These discontinuities are an artifact of the small sample space used for this experiment.",
                "Basically, as soon as a password is broken, all nodes sharing that specific password are infected within a few seconds.",
                "Note that it is trivial for a swarm worm to scan and discovered a small shared password space.",
                "In Figure 4, the simulation results comparing Swarm Attack Behavior versus that of a Generic Malform Worm are presented.",
                "In this set of simulation runs, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "The data presented reflects the behaviors of three-(3) distinct classes of worm or swarm worms and two(2) different target host selection scanning strategies (random scanning and local bias).",
                "The amount of local bias was varied across multiple simulation runs.",
                "The results presented are aggregate behaviors.",
                "In general the following class of Generic Worms and Swarm Worms were simulated.",
                "Address Scanning: â¢ Random:= addresses are selected at random from a subset of the IPV4 space, namely, a 224 address space; and â¢ Local Bias:= addresses are selected at random from either a local subnet (256 addresses) or from a subset of the IPV4 space, namely, a 224 address space.",
                "The percentage of local bias is varied across multiple runs.",
                "Learning, Communication & Distributed Control â¢ I-NL-NS: Generic worm, independent (I), no learning/ memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ I-L-OOS: Generic worm, independent (I), learning/ memoryless (L), and one time sharing of information with offsprings only (OOS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; â¢ S-L-S&AOP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of addresses with neighbors and offsprings, shares passwords one time only (at creation) with offsprings(SA&OP); â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 4, the results are consistent with our set of empirical results.",
                "In addition, the following observations can be made. 1.",
                "Local preference is incredibly effective. 2.",
                "Short address handoffs are more effective than long ones.",
                "We varied the size of the list allowed in the sharing of addresses; the overhead associated with a long address list is detrimental to the performance of the swarm worm, as well as to its stealthiness; 3.",
                "For the local bias case, sharing valid addresses of susceptible host, S-L-S&AOP worm (recall, the S-L-S&AOP swarm shares passwords, one time only, with offsprings 328 at creation time) is more effective than sharing passwords in the case of the S-L-SP swarm.",
                "In this case, we can think of the swarm as launching a distributeddictionary attack: different segments of the swarm use different passwords to try to break into susceptible uninfected host.",
                "In the local bias mode, early in the life of the swarm, address-sharing is more effective than password-sharing, until most subnets are discovered.",
                "Then the targeting of local addresses assists in discovering the susceptible hosts, while the swarm members need to waste time rediscovering passwords; and 4.",
                "Infecting the last 0.5% of nodes takes a very long time in non-local bias mode.",
                "Basically, the shared password list across subnets has been exhausted, and the swarm reverts to simply a random discovery of password algorithm.",
                "Figure 3: Swarm Attack Behavior vs. Malform Worm: Empirical Results, 30node LAN Figure 4: Swarm Attack Behavior vs. Malform Worm: Simulation Results 5.",
                "SUMMARY AND FUTURE WORK In this manuscript, we have presented an abstract model, similar in some aspects to that of Weaver [5], that helps explain the generic nature of worms.",
                "The model presented in section 2 was extended to incorporate a new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and <br>distributed intelligence</br>.",
                "Such Swarm Worms are potentially more harmful than their generic counterparts.",
                "In addition, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
                "ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
                "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms is capable of compromising hosts a rates up to 2 orders of magnitude faster than its generic counterpart while retaining stealth capabilities.",
                "This work opens up a new area of interesting problems.",
                "Some of the most interesting and pressing problems to be consider are as follows: â¢ Is it possible to apply some of learning concepts developed over the last ten years in the areas of swarm intelligence, agent systems, and distributed control to the design of sophisticated swarm worms in such a way that true emergent behavior takes place? â¢ Are the current techniques being developed in the design of Intrusion Detection & CounterMeasure Systems and Survivable systems effective against this new class of worms? ; and â¢ What techniques, if any, can be developed to create defenses against swarm worms? 6.",
                "ACKNOWLEDGMENTS This work was conducted as part of a larger effort in the development of next generation Intrusion Detection & CounterMeasure Systems at WSSRL.",
                "The work is conducted under the auspices of Grant ACG-2004-06 by the Acumen Consulting Group, Inc., Marlboro, Massachusetts. 7.",
                "REFERENCES [1] C.C.",
                "Zou, L. Gao, W. G., and Towsley, D. Monitoring and early warning for internet worms.",
                "In 10th ACM Conference on Computer and Communications Security, Washington, DC (October 2003). [2] Liu, S., and Passino, K. Swarm intelligence: Literature overview.",
                "In Dept. of Electrical Engineering, The Ohio State University, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., and Weaver, N. The spread of the saphire/slammer worm.",
                "Tech. rep., A joint effort of CAIDA, ICSI, Silicon Defense, UC Berkeley EECS and UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S., and Cunningham, R. A taxonomy of computer worms.",
                "In Proceedings of the ACM Workshop on Rapid Malware (WORM) (2003). 329"
            ],
            "original_annotated_samples": [
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and <br>distributed intelligence</br>.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and <br>distributed intelligence</br>."
            ],
            "translated_annotated_samples": [
                "Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biolÃ³gicos y muestran un alto grado de aprendizaje, comunicaciÃ³n e <br>inteligencia distribuida</br>.",
                "Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biolÃ³gicos y muestran un alto grado de aprendizaje, comunicaciÃ³n e <br>inteligencia distribuida</br>."
            ],
            "translated_text": "Un AnÃ¡lisis Inicial y PresentaciÃ³n de Malware que Exhibe Comportamiento Similar a un Enjambre por Fernando C. ColÃ³n Osorio Laboratorio de InvestigaciÃ³n en Seguridad de Sistemas InalÃ¡mbricos (W.S.S.R.L.) El Slammer, que actualmente es el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada, se observÃ³ infectando el 90 por ciento de todos los hosts vulnerables de Internet en 10 minutos. Aunque la acciÃ³n principal que realiza el gusano Slammer es una replicaciÃ³n relativamente poco sofisticada de sÃ­ mismo, se propaga tan rÃ¡pidamente que la respuesta humana fue ineficaz. La mayorÃ­a de las estrategias de contramedidas propuestas se basan principalmente en la detecciÃ³n de tasas y algoritmos de limitaciÃ³n. Sin embargo, se estÃ¡n diseÃ±ando y desarrollando estrategias para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En nuestro trabajo, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n radicalmente diferentes, y posiblemente dichas tÃ©cnicas resultarÃ¡n ineficaces. EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. La Inteligencia Emergente es el comportamiento de sistemas, muy similar a sistemas biolÃ³gicos como hormigas o abejas, donde las interacciones locales simples de miembros autÃ³nomos, con acciones primitivas simples, dan lugar a un comportamiento global complejo e inteligente. En este manuscrito introduciremos los principios bÃ¡sicos detrÃ¡s de la idea de los Gusanos en Enjambre, asÃ­ como la estructura bÃ¡sica requerida para ser considerado un gusano en enjambre. AdemÃ¡s, presentaremos resultados preliminares sobre las velocidades de propagaciÃ³n de un gusano de enjambre llamado gusano ZachiK. Demostraremos que ZachiK es capaz de propagarse a una velocidad 2 Ã³rdenes de magnitud mÃ¡s rÃ¡pida que gusanos similares sin capacidades de enjambre. CategorÃ­as y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: DetecciÃ³n de Intrusiones; D.4.6 [Seguridad y ProtecciÃ³n]: Software Invasivo TÃ©rminos Generales ExperimentaciÃ³n, Seguridad 1. INTRODUCCIÃN Y TRABAJO PREVIO En las primeras horas de la maÃ±ana (05:30 GMT) del 25 de enero de 2003, el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada comenzÃ³ a propagarse por Internet. Dentro de los 10 minutos posteriores al primer huÃ©sped infectado (paciente cero), el 90 por ciento de todos los huÃ©spedes vulnerables habÃ­an sido comprometidos, creando una interrupciÃ³n significativa en la infraestructura de Internet a nivel global. Vern Paxson del Instituto Internacional de Ciencias de la ComputaciÃ³n y del Laboratorio Nacional Lawrence Berkeley comentÃ³ en su anÃ¡lisis de Slammer: El gusano Slammer se propagÃ³ tan rÃ¡pidamente que la respuesta humana fue ineficaz, ver [4]. La parte interesante, desde nuestro punto de vista, sobre la propagaciÃ³n de Slammer es que era un gusano relativamente poco sofisticado con un comportamiento benigno, es decir, la auto-reproducciÃ³n. Desde Slammer, los investigadores han explorado los comportamientos de los gusanos de propagaciÃ³n rÃ¡pida y han diseÃ±ado estrategias de contramedidas basadas principalmente en la detecciÃ³n de la velocidad y algoritmos de limitaciÃ³n. Por ejemplo, Zou, et al., [2], propusieron un esquema donde se utiliza un filtro de Kalman para detectar la propagaciÃ³n temprana de un gusano. Otros investigadores han propuesto el uso de detectores donde las tasas de mensajes de Destino Inalcanzable son monitoreadas por los firewalls, y un aumento significativo mÃ¡s allÃ¡ de lo normal alerta a la organizaciÃ³n sobre la posible presencia de un gusano. Sin embargo, tales estrategias sufren del sÃ­ndrome de luchar la Ãºltima guerra. Es decir, se estÃ¡n diseÃ±ando y desarrollando sistemas para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En el trabajo descrito aquÃ­, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n diferentes, y por lo tanto, dichas tÃ©cnicas pueden tener algunas limitaciones significativas. EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. El concepto de inteligencia emergente fue estudiado por primera vez en asociaciÃ³n con sistemas biolÃ³gicos. En tales estudios, los primeros investigadores descubrieron una variedad de comportamientos interesantes de insectos o animales en la naturaleza. Una bandada de pÃ¡jaros cruza el cielo. Un grupo de hormigas busca comida. Una escuela de peces nada, gira, huye juntos lejos de un depredador, y asÃ­ sucesivamente. En general, este tipo de movimiento agregado se ha llamado comportamiento de enjambre. Los biÃ³logos y cientÃ­ficos de la computaciÃ³n en el campo de la inteligencia artificial han estudiado tales enjambres biolÃ³gicos y han intentado crear modelos que expliquen cÃ³mo interactÃºan los elementos de un enjambre, logran objetivos y evolucionan. AdemÃ¡s, en los Ãºltimos aÃ±os el estudio de la inteligencia de enjambre ha cobrado cada vez mÃ¡s importancia en los campos de la robÃ³tica, el diseÃ±o de Redes MÃ³viles Ad-hoc (MANETS), el diseÃ±o de Sistemas de DetecciÃ³n de Intrusiones, el estudio de patrones de trÃ¡fico en sistemas de transporte, en aplicaciones militares y otras Ã¡reas, ver [3]. Los conceptos bÃ¡sicos que se han desarrollado en la Ãºltima dÃ©cada para explicar los enjambres y su comportamiento incluyen cuatro componentes bÃ¡sicos. Estos son: 1. Sencillez de la lÃ³gica y acciones: Un enjambre estÃ¡ compuesto por N agentes cuya inteligencia es limitada. Los agentes en el enjambre utilizan reglas locales simples para gobernar sus acciones. Algunos modelos llaman a estas acciones o comportamientos primitivos; 2. Mecanismos de comunicaciÃ³n local: Los agentes interactÃºan con otros miembros en el enjambre a travÃ©s de simples mecanismos de comunicaciÃ³n local. Por ejemplo, un pÃ¡jaro en una bandada percibe la posiciÃ³n del pÃ¡jaro adyacente y aplica una regla simple de evitaciÃ³n y seguimiento. 3. Control distribuido: Los agentes autÃ³nomos interactÃºan con su entorno, que probablemente consiste en otros agentes, pero actÃºan relativamente de forma independiente de todos los demÃ¡s agentes. No hay un mando central o lÃ­der, y ciertamente no hay un plan global. Inteligencia emergente: El comportamiento agregado de agentes autÃ³nomos resulta en comportamientos inteligentes complejos, incluyendo la autoorganizaciÃ³n. Para comprender completamente el comportamiento de tales enjambres, es necesario construir un modelo que explique el comportamiento de lo que llamaremos gusanos genÃ©ricos. Este modelo, que amplÃ­a el trabajo de Weaver [5], se presenta aquÃ­ en la secciÃ³n 2. AdemÃ¡s, tenemos la intenciÃ³n de ampliar dicho modelo de tal manera que explique claramente los comportamientos de esta nueva clase de gusanos potencialmente peligrosos llamados Gusanos en Enjambre. Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biolÃ³gicos y muestran un alto grado de aprendizaje, comunicaciÃ³n e <br>inteligencia distribuida</br>. Tales gusanos en enjambre son potencialmente mÃ¡s daÃ±inos que sus contrapartes genÃ©ricas similares. EspecÃ­ficamente, la primera instancia, segÃºn nuestro conocimiento, de un gusano de aprendizaje de este tipo fue creado, llamado ZachiK. ZachiK es un gusano enjambre de descifrado de contraseÃ±as simple que incorpora diferentes estrategias de aprendizaje y comparticiÃ³n de informaciÃ³n. Un gusano de enjambre similar fue desplegado tanto en una red de Ã¡rea local de treinta (30) hosts, como simulado en una topologÃ­a de 10,000 nodos. Los resultados preliminares mostraron que dichos gusanos son capaces de comprometer a los anfitriones a velocidades hasta dos Ã³rdenes de magnitud mÃ¡s rÃ¡pidas que su contraparte genÃ©rica. El resto de este manuscrito estÃ¡ estructurado de la siguiente manera. En la secciÃ³n 2 se presenta un modelo abstracto tanto de gusanos genÃ©ricos como de gusanos en enjambre. Este modelo se utiliza en la secciÃ³n 2.6 para describir la primera instancia de un gusano enjambre, ZachiK. En la secciÃ³n 4, se presentan resultados preliminares a travÃ©s de mediciones empÃ­ricas y simulaciones. Finalmente, en la secciÃ³n 5 se presentan nuestras conclusiones y perspectivas sobre trabajos futuros. MODELADO DE GUSANOS Para estudiar el comportamiento de los gusanos en enjambre en general, es necesario crear un modelo que refleje de manera realista la estructura de los gusanos y que no estÃ© necesariamente ligado a una instancia especÃ­fica. En esta secciÃ³n, describimos un modelo en el que un gusano general se describe como teniendo cuatro (4) componentes bÃ¡sicos o subfunciones. Por definiciÃ³n, un gusano es un programa autocontenido y auto propagante. Por lo tanto, en tÃ©rminos simples, tiene dos funciones principales: la que se propaga y la que realiza otras tareas. Proponemos que hay una tercera amplia funcionalidad de un gusano, la de autoconservaciÃ³n. TambiÃ©n proponemos que la otra funcionalidad de un gusano podrÃ­a ser categorizada de manera mÃ¡s apropiada como Acciones Basadas en Objetivos (ABO), ya que cualquier funcionalidad incluida en un gusano dependerÃ¡ naturalmente de los objetivos (y subobjetivos) que tenga el autor. El trabajo presentado por Weaver et al. en [5] nos proporciona principalmente una taxonomÃ­a de gusanos informÃ¡ticos basada en acciones y tÃ©cnicas, la cual utilizamos y ampliamos aquÃ­. 2.1 PropagaciÃ³n La funciÃ³n de propagaciÃ³n en sÃ­ misma puede desglosarse en tres acciones: adquirir objetivo, enviar escaneo e infectar objetivo. Adquirir el objetivo simplemente significa elegir un anfitriÃ³n para atacar a continuaciÃ³n. Enviar un escaneo implica verificar si ese host estÃ¡ receptivo a un intento de infecciÃ³n, ya que el espacio de direcciones IP estÃ¡ escasamente poblado. Esto puede implicar un simple ping para verificar si el host estÃ¡ activo o una evaluaciÃ³n completa de vulnerabilidades. Infectar al objetivo es el mÃ©todo real utilizado para enviar el cÃ³digo del gusano al nuevo hospedador. En forma de algoritmo: propagar() { host := adquirir_objetivo() Ã©xito := enviar_escaneo(host) si( Ã©xito ) entonces infectar(host) fin si } En el caso de un gusano simple que no verifica primero si el host estÃ¡ disponible o susceptible (como Slammer), se elimina el mÃ©todo de escaneo: propagar() { host := adquirir_objetivo() infectar(host) } Cada una de estas acciones puede tener un costo asociado a su inclusiÃ³n y ejecuciÃ³n, como un aumento en el tamaÃ±o del gusano y la carga de CPU o red. Dependiendo de las necesidades o requisitos de los autores, estos se convierten en factores limitantes en lo que puede incluirse en las acciones de los gusanos. Esto se discute mÃ¡s a fondo despuÃ©s de expandir sobre estas acciones a continuaciÃ³n. 2.2 AdquisiciÃ³n de Objetivos: La fase de AdquisiciÃ³n de Objetivos de nuestro algoritmo de gusano se construye directamente a partir de la secciÃ³n de Descubrimiento de Objetivos en [5]. Weaver et al. clasifican esta tarea en 5 categorÃ­as separadas. AquÃ­, ampliamos aÃºn mÃ¡s su trabajo a travÃ©s de la parametrizaciÃ³n. Escaneo: El escaneo puede considerarse un mÃ©todo basado en ecuaciones para elegir un anfitriÃ³n. Cualquier tipo de ecuaciÃ³n puede ser utilizada para llegar a una direcciÃ³n IP, pero hasta ahora se han visto tres tipos principales: secuencial, aleatorio y preferencia local. El escaneo secuencial es exactamente como suena: comenzar en una direcciÃ³n IP e incrementar a travÃ©s de todo el espacio de direcciones IP. Esto podrÃ­a llevar consigo las opciones de quÃ© IP empezar (valor elegido por el usuario, aleatorio o basado en la IP del host infectado) y cuÃ¡ntas veces incrementar (continuo, valor elegido o basado en subred). El escaneo aleatorio es completamente al azar (dependiendo del mÃ©todo PRNG elegido y su valor de semilla). El escaneo de preferencia local es una variante de Secuencial o Aleatorio, en la que tiene una mayor probabilidad de elegir una direcciÃ³n IP local en lugar de una remota (por ejemplo, la divisiÃ³n tradicional de 80/20). Listas de objetivos pregeneradas: Las listas de objetivos pregeneradas, o tambiÃ©n llamadas listas de objetivos, podrÃ­an incluir opciones para el porcentaje de la poblaciÃ³n total y el porcentaje de errores, o simplemente el nÃºmero de direcciones IP a incluir. ImplÃ­cito en este tipo es el hecho de que la lista se divide entre un padre y sus hijos, evitando el problema de que cada instancia golpee exactamente las mismas mÃ¡quinas. Listas de objetivos generadas externamente: Las listas de objetivos generadas externamente dependen de una o mÃ¡s fuentes externas que pueden ser consultadas para obtener datos del host. Esto implicarÃ¡ servidores que normalmente estÃ¡n pÃºblicamente disponibles, como los meta-servidores de juegos, o aquellos configurados explÃ­citamente por el gusano o el autor del gusano. Los meta-servidores normalmente disponibles podrÃ­an tener parÃ¡metros para tasas de cambio, como muchos apareciendo por la noche o desapareciendo por la maÃ±ana. Cada servidor tambiÃ©n podrÃ­a tener un mÃ¡ximo de consultas por segundo que serÃ­a capaz de manejar. El gusano tambiÃ©n necesitarÃ­a una forma de encontrar estos servidores, ya sea codificada en duro o a travÃ©s de escaneo. Listas de Objetivos Internos: Las Listas de Objetivos Internos dependen en gran medida del host infectado. Este mÃ©todo podrÃ­a parametrizar la elecciÃ³n de cuÃ¡nta informaciÃ³n hay en el host, como todas las mÃ¡quinas en la subred, todas las computadoras con Windows en la subred, servidores especÃ­ficos, nÃºmero de internos/externos, o alguna combinaciÃ³n. Los mÃ©todos pasivos son determinados por las interacciones normales entre los anfitriones. Los parÃ¡metros pueden incluir una tasa de interacciÃ³n con mÃ¡quinas particulares, una tasa de interacciÃ³n interna/externa, o una tasa de interacciÃ³n basada en subredes. Cualquiera de estos mÃ©todos tambiÃ©n puede combinarse para producir diferentes tipos de estrategias de adquisiciÃ³n de objetivos. Por ejemplo, un gusano puede comenzar con una lista inicial de 100 hosts o subredes diferentes. Una vez que haya agotado su bÃºsqueda utilizando la lista de Ã©xitos, puede proceder a realizar un escaneo aleatorio con un sesgo local del 50%. Es importante tener en cuenta, sin embargo, que el consumo de recursos de cada mÃ©todo no es el mismo. Diferentes mÃ©todos pueden requerir que el gusano sea grande, como los bytes adicionales necesarios para una lista de objetivos, o que tome mÃ¡s tiempo de procesamiento, como al buscar direcciones de otros hosts vulnerables en el host. Se deben realizar investigaciones y anÃ¡lisis adicionales en esta Ã¡rea para determinar los costos asociados de utilizar cada mÃ©todo. Los costos podrÃ­an ser utilizados para determinar los compromisos de diseÃ±o en los que los autores de gusanos participan. Por ejemplo, las listas de objetivos proporcionan una alta tasa de infecciÃ³n, pero a un alto costo en el tamaÃ±o de la carga Ãºtil del gusano. 2.2.1 EnvÃ­o de un Escaneo La funciÃ³n de envÃ­o de escaneo prueba si el host estÃ¡ disponible para la infecciÃ³n. Esto puede ser tan simple como verificar si el host estÃ¡ activo en la red o tan complejo como verificar si el host es vulnerable al exploit que se utilizarÃ¡. El envÃ­o de un escaneo antes de intentar una infecciÃ³n puede aumentar la tasa de escaneo si el costo por fallar en una infecciÃ³n es mayor que el costo de fallar en un escaneo o de enviar un escaneo mÃ¡s una infecciÃ³n; y las fallas son mÃ¡s frecuentes que los Ã©xitos. Un parÃ¡metro importante para esto serÃ­a la elecciÃ³n del protocolo de transporte (TCP/UDP) o simplemente el tiempo para un escaneo exitoso y el tiempo para un escaneo fallido. AdemÃ¡s, ya sea que se pruebe si el host estÃ¡ activo o si es una prueba completa de la vulnerabilidad (o de mÃºltiples vulnerabilidades). 2.2.2 Vector de InfecciÃ³n (VI) El vector de infecciÃ³n particular utilizado para acceder al host remoto depende principalmente de la vulnerabilidad especÃ­fica elegida para explotar. En un sentido no especÃ­fico, depende del protocolo de transporte elegido para usar y del tamaÃ±o del mensaje que se va a enviar. La SecciÃ³n 3 de [5] tambiÃ©n propone tres clases particulares de IV: Autotransportado, segundo canal e incrustado. 2.3 AutopreservaciÃ³n Las acciones de autopreservaciÃ³n de un gusano pueden tomar muchas formas. En la naturaleza, se ha observado que los gusanos desactivan el software antivirus o evitan enviarse a ciertas direcciones conocidas por los antivirus. TambiÃ©n se ha observado que intentan deshabilitar otros gusanos que podrÃ­an estar compitiendo por el mismo sistema. TambiÃ©n creemos que un escaneo con limitaciÃ³n de tiempo podrÃ­a ayudar al gusano a pasar desapercibido. TambiÃ©n proponemos un mÃ©todo de seÃ±uelo, mediante el cual un gusano liberarÃ¡ a unos pocos hijos que causen mucho ruido para que el progenitor no sea notado. TambiÃ©n se ha propuesto [5] que un gusano cause daÃ±o a su huÃ©sped si, y solo si, se ve perturbado de alguna manera. Este mÃ³dulo podrÃ­a contener parÃ¡metros para: probabilidad de Ã©xito en deshabilitar actualizaciones de antivirus u otro software, probabilidad de ser detectado y por ende eliminado, o fortalecimiento del anfitriÃ³n contra otros gusanos. 2.4 Acciones Basadas en Objetivos La funcionalidad de GBA de un gusano depende de la lista de objetivos del autor. La secciÃ³n de Cargas Ãºtiles de [5] proporciona algunas sugerencias Ãºtiles para dicho mÃ³dulo. La apertura de una puerta trasera puede hacer que el anfitriÃ³n sea susceptible a mÃ¡s ataques. Esto implicarÃ­a una probabilidad de que se utilice la puerta trasera y cualquier utilizaciÃ³n de trÃ¡fico asociada. TambiÃ©n podrÃ­a proporcionar una lista de otros gusanos a los que este hospedador es ahora susceptible o una lista de vulnerabilidades que este hospedador tiene ahora. Los retransmisores de spam y los servidores proxy HTTP, por supuesto, tienen un consumo de ancho de banda o un patrÃ³n de trÃ¡fico asociado. Los ataques de denegaciÃ³n de servicio en Internet tendrÃ­an un tiempo de activaciÃ³n establecido, un objetivo y un patrÃ³n de trÃ¡fico. El daÃ±o de los datos tendrÃ­a una probabilidad asociada de que el anfitriÃ³n muera debido al daÃ±o. En la Figura 1, se resume este modelo general de un gusano. Por favor, tenga en cuenta que en este modelo no hay aprendizaje, o muy poco, intercambio de informaciÃ³n entre las instancias de gusano, y ciertamente no hay coordinaciÃ³n de acciones. En la siguiente secciÃ³n ampliamos el modelo para incluir dichos mecanismos, y por lo tanto, llegamos al modelo general de un gusano en enjambre. 2.5 Enjambres - Modelo General Como se describe en la secciÃ³n 1, las caracterÃ­sticas bÃ¡sicas que distinguen el comportamiento en enjambre de lo que simplemente parece ser comportamientos colectivos coordinados son cuatro atributos bÃ¡sicos. Estos son: 1. Sencillez de lÃ³gica y acciones; 2. Mecanismos de ComunicaciÃ³n Local; 3. Control distribuido; y 4. Inteligencia emergente, incluyendo autoorganizaciÃ³n. 325 Estructura FunciÃ³n/Ejemplo InfecciÃ³n, Vector de InfecciÃ³n El ejecutable se ejecuta ProtecciÃ³n y sigilo Deshabilitar McAfee (Mantenerse vivo) PropagaciÃ³n Enviar correo electrÃ³nico a todos en la libreta de direcciones AcciÃ³n basada en objetivos (ABO) DDoS www.sco.com Todo lo demÃ¡s, a menudo llamado carga Ãºtil Figura 1: Modelo general de gusano En este trabajo agregamos todos estos atributos bajo el tÃ­tulo general de Aprendizaje, ComunicaciÃ³n y Control Distribuido. La presencia de estos atributos distingue a los gusanos de enjambre de los gusanos regulares, u otros tipos de malware como los Zombies. En la figura ? ?, el modelo genÃ©rico de un gusano se amplÃ­a para incluir este conjunto de acciones. Dentro de este contexto, un gusano como Slammer no puede ser categorizado como un gusano en enjambre debido a que las nuevas instancias del gusano no coordinan sus acciones ni comparten informaciÃ³n. Por otro lado, los zombies y muchas otras formas de DDoS, que a primera vista pueden considerarse gusanos enjambre, no lo son. Esto se debe simplemente al hecho de que en el caso de los zombies, el control no estÃ¡ distribuido sino centralizado, y no surgen comportamientos emergentes. Lo Ãºltimo, la posible apariciÃ³n de inteligencia o nuevos comportamientos es lo que hace que los gusanos en enjambre sean potencialmente peligrosos. Finalmente, cuando se considera la mayorÃ­a de las interrupciones recientes en la Infraestructura de Internet, y a la luz de nuestra descripciÃ³n de los ataques en enjambre, entonces dichas interrupciones pueden ser fÃ¡cilmente categorizadas como precursores de un comportamiento verdaderamente en enjambre. EspecÃ­ficamente, â¢ DDOS: Un gran nÃºmero de hosts comprometidos envÃ­an paquetes inÃºtiles que requieren procesamiento (Stacheldraht, http://www.cert.org/incidentnotes/IN-99-04.html). Los ataques DDoS son los precursores tempranos de los Ataques en Enjambre debido al gran nÃºmero de agentes involucrados. â¢ Code Red CrV1, Code Red II, Nimbda - Exhiben nociones tempranas de ataques en enjambre, incluyendo un canal de comunicaciÃ³n oculto. â¢ Staniford & Paxson en Â¿CÃ³mo Dominar Internet en Tu Tiempo Libre? exploran modificaciones a CrV1, Code Red I, II con un tipo de comportamiento similar a un enjambre. Por ejemplo, especulan sobre nuevos gusanos que emplean comunicaciÃ³n directa de gusano a gusano y utilizan actualizaciones programables. Por ejemplo, el gusano Warhol y los gusanos de Permutation-Scanning (autocoordinados). 2.6 Gusano Swarm: los detalles Al considerar la creaciÃ³n de lo que creÃ­amos que era el primer Gusano Swarm en existencia, querÃ­amos adherirnos lo mÃ¡s cercanamente posible al modelo general presentado en la secciÃ³n ? ? mientras facilitÃ¡bamos al mismo tiempo un anÃ¡lisis a gran escala, tanto empÃ­rico como a travÃ©s de simulaciones, del comportamiento del enjambre. Por esta razÃ³n, seleccionamos como primera instancia Estructura FunciÃ³n/Ejemplo InfecciÃ³n, InfecciÃ³n Vector Ejecutable se ejecuta ProtecciÃ³n y Sigilo Deshabilitar McAfee (ManteniÃ©ndose Vivo) PropagaciÃ³n Enviar correo electrÃ³nico a todos en la libreta de direcciones Aprendizaje, ComunicaciÃ³n, Feromonas/Banderas (Prueba y Control Distribuido si el Gusano ya estÃ¡ presente) Bombas de tiempo, Algoritmos de Aprendizaje, Canal IRC AcciÃ³n Basada en Objetivos (ABO) DDoS www.sco.com Todo lo demÃ¡s, a menudo llamado carga Ãºtil Figura 2: Modelo General de un Gusano de Enjambre del enjambre un gusano simple de craqueo de contraseÃ±as. El objetivo de este gusano simplemente es infectar a un anfitriÃ³n intentando secuencialmente iniciar sesiÃ³n en el anfitriÃ³n utilizando contraseÃ±as conocidas (ataque de diccionario), contraseÃ±as que han sido descubiertas previamente por cualquier miembro del enjambre, y contraseÃ±as aleatorias. Una vez que un huÃ©sped estÃ¡ infectado, el gusano crearÃ¡ canales de comunicaciÃ³n tanto con sus vecinos conocidos en ese momento, como con cualquier descendencia que genere con Ã©xito. En este contexto, una generaciÃ³n exitosa de una descendencia significa simplemente infectar a un nuevo huÃ©sped y replicar una copia exacta de sÃ­ misma en dicho huÃ©sped. Llamamos a este gusano enjambre el gusano ZachiK en honor a uno de sus creadores. Como se puede ver en esta descripciÃ³n, el gusano ZachiK exhibe todos los elementos descritos anteriormente. En las siguientes secciones, describimos detalladamente cada uno de los elementos del gusano ZachiK. 2.7 Vector de InfecciÃ³n El vector de infecciÃ³n utilizado por el gusano ZachiK es el protocolo de shell seguro SSH. Se escribiÃ³ un cliente modificado que es capaz de recibir contraseÃ±as desde la lÃ­nea de comandos, e integrado con un script que le suministra diversas contraseÃ±as: conocidas y aleatorias. Cuando se encuentra una contraseÃ±a para un objetivo adecuado, comienza el proceso de infecciÃ³n. DespuÃ©s de descubrir la contraseÃ±a de root de un host, el gusano infecta el host objetivo y se replica a sÃ­ mismo. El gusano crea un nuevo directorio en el host objetivo, copia el cliente ssh modificado, el script, los servidores de comunicaciones y las versiones actualizadas de los archivos de datos (lista de contraseÃ±as conocidas y una lista de vecinos actuales). Luego ejecuta el script modificado en los hosts reciÃ©n infectados, lo que genera el servidor de comunicaciones, notifica a los vecinos y comienza a buscar nuevos objetivos. Se podrÃ­a argumentar, de manera correcta, que el gusano ZachiK puede ser fÃ¡cilmente derrotado por las tÃ©cnicas de contramedidas actuales presentes en la mayorÃ­a de los sistemas hoy en dÃ­a, como la prohibiciÃ³n de accesos directos de root desde la red. Dentro de este contexto, ZachiK puede ser rÃ¡pidamente descartado como un gusano muy simple e inofensivo que no requiere un estudio adicional. Sin embargo, el lector deberÃ­a considerar lo siguiente: 1. ZachiK se puede modificar fÃ¡cilmente para incluir una variedad de vectores de infecciÃ³n. Por ejemplo, podrÃ­a programarse para adivinar nombres de usuario comunes y sus contraseÃ±as; obtener acceso al sistema, luego adivinar la contraseÃ±a de root o utilizar otras vulnerabilidades conocidas para obtener privilegios de root. ZachiK es un gusano de prueba de concepto. La importancia de ZachiK radica en que incorpora todos los comportamientos de un gusano en enjambre, incluyendo, pero no limitÃ¡ndose a, el control distribuido, la comunicaciÃ³n entre agentes y el aprendizaje; 3. ZachiK estÃ¡ compuesto por una gran colecciÃ³n de agentes que operan de forma independiente, lo que se presta naturalmente a algoritmos paralelos como la bÃºsqueda paralela del espacio de direcciones IPV4. Dentro de este contexto, SLAMMER incorpora una capacidad de bÃºsqueda paralela de direcciones potencialmente susceptibles. Sin embargo, a diferencia de ZachiK, el conocimiento descubierto por la bÃºsqueda nunca se comparte entre los agentes. Por estas razones, y muchas otras, no se debe descartar el potencial de esta nueva clase de gusanos, sino mÃ¡s bien abrazar su estudio. 2.8 AutopreservaciÃ³n En el caso del gusano ZachiK, las principales tÃ©cnicas de autopreservaciÃ³n utilizadas son simplemente mantener el tamaÃ±o de la carga Ãºtil pequeÃ±o. En este contexto, esto simplemente significa restringir la cantidad de contraseÃ±as que una descendencia hereda, enmascarar mensajes de gusano como solicitudes http comunes y limitar el nÃºmero de vecinos a un mÃ¡ximo de cinco-(5). 2.9 PropagaciÃ³n Elegir el(los) prÃ³ximo(s) objetivo(s) de manera eficiente requiere reflexiÃ³n. En el pasado, los gusanos conocidos y propuestos, ver [5], han aplicado tÃ©cnicas de propagaciÃ³n que variaban. Estos incluyen: selecciÃ³n estrictamente aleatoria de un posible anfitriÃ³n vulnerable; listas de objetivos de anfitriones vulnerables; selecciÃ³n aleatoria localmente sesgada (seleccionar un objetivo de anfitriÃ³n al azar de una subred local); y una combinaciÃ³n de algunas o todas las anteriores. En nuestros entornos de prueba y simulaciÃ³n, aplicaremos una combinaciÃ³n de selecciÃ³n localmente sesgada y totalmente aleatoria de posibles hosts vulnerables. Sin embargo, debido a que el gusano ZachiK es un gusano enjambre, la informaciÃ³n de descubrimiento de direcciones (es decir, cuando se descubren direcciones inexistentes) se compartirÃ¡ entre los miembros del enjambre. Los hilos de infecciÃ³n y propagaciÃ³n realizan el siguiente conjunto de actividades repetidamente: â¢ Elegir una direcciÃ³n â¢ Verificar la validez de la direcciÃ³n â¢ Elegir un conjunto de contraseÃ±as â¢ Intentar infectar al host seleccionado con este conjunto de contraseÃ±as. Como se describiÃ³ anteriormente, la elecciÃ³n de una direcciÃ³n hace uso de una combinaciÃ³n de selecciÃ³n aleatoria, sesgo local y listas de objetivos. EspecÃ­ficamente, para elegir una direcciÃ³n, la instancia puede: â¢ Generar una nueva direcciÃ³n aleatoria â¢ Generar una direcciÃ³n en la red local â¢ Elegir una direcciÃ³n de una lista de transferencia La elecciÃ³n se realiza de forma aleatoria entre estas opciones, y puede variarse para probar la dependencia de la propagaciÃ³n en elecciones particulares. Las contraseÃ±as son elegidas de una lista de contraseÃ±as conocidas o generadas recientemente. Cuando una infecciÃ³n de una direcciÃ³n vÃ¡lida falla, se agrega a una lista de entregas, que se envÃ­a a los vecinos para intentar solucionar el problema. 2.10 Aprendizaje, ComunicaciÃ³n y Control Distribuido 2.10.1 ComunicaciÃ³n El concepto de un enjambre se basa en la transferencia de informaciÃ³n entre vecinos, quienes retransmiten sus nuevos mensajes entrantes a sus vecinos, y asÃ­ sucesivamente hasta que cada instancia del gusano en el enjambre estÃ© al tanto de estos mensajes. Hay dos clases de mensajes: mensajes de datos o informaciÃ³n y comandos. Los mensajes de comando estÃ¡n destinados a un usuario externo (tambiÃ©n conocidos como hackers y/o crackers) para controlar las acciones de las instancias, y actualmente no estÃ¡n implementados. Los mensajes de informaciÃ³n actualmente son de tres tipos: nuevo miembro, contraseÃ±as y direcciones explotables (transferencias). Los mensajes de nuevo miembro son mensajes que una nueva instancia envÃ­a a los vecinos en su lista (corta) de vecinos iniciales. Los vecinos luego registran estas instancias en su lista de vecinos. Estos son mensajes que forman la multi-conectividad del enjambre, y sin ellos, la topologÃ­a serÃ­a una estructura en forma de Ã¡rbol, donde la eliminaciÃ³n de un solo nodo harÃ­a que las instancias debajo de Ã©l fueran inaccesibles. Los mensajes de contraseÃ±as informan instancias de contraseÃ±as reciÃ©n descubiertas, y al informar a todas las instancias, el enjambre en su totalidad recopila esta informaciÃ³n, lo que le permite infectar nuevas instancias de manera mÃ¡s efectiva. Los mensajes de entrega informan instancias de direcciones vÃ¡lidas que no pudieron ser comprometidas (fallaron al romper la contraseÃ±a de la cuenta root). Dado que el espacio de direcciones es bastante disperso, lleva un tiempo relativamente largo (es decir, muchos intentos) descubrir una direcciÃ³n vÃ¡lida. Por lo tanto, al entregar las direcciones vÃ¡lidas descubiertas, el enjambre estÃ¡ (a) conservando energÃ­a al no redescubrir las mismas direcciones (b) atacando de manera mÃ¡s efectiva. De cierta manera, esto es una simple instancia de actividad coordinada de un enjambre. 2.10.2 CoordinaciÃ³n Cuando nace una instancia de gusano, transmite su existencia a todos los vecinos en su lista. El hilo principal luego genera algunas hebras de infecciÃ³n y continÃºa manejando mensajes entrantes (registrando vecinos, agregando nuevas contraseÃ±as, recibiendo direcciones y transmitiendo estos mensajes). 2.10.3 Control Distribuido El control en el gusano ZachiK es distribuido en el sentido de que cada instancia del gusano realiza un conjunto de acciones de forma independiente de cada otra instancia, al mismo tiempo que se beneficia del aprendizaje logrado por sus vecinos inmediatos. 2.11 Acciones Basadas en Objetivos La primera instancia del gusano ZachiK tiene dos objetivos bÃ¡sicos. Estos son: (1) propagar, y (2) descubrir y compartir con los miembros de la colonia nuevas contraseÃ±as de root. 3. DISEÃO EXPERIMENTAL Para verificar nuestra hipÃ³tesis de que los Gusanos de Enjambre son mÃ¡s capaces y, por lo tanto, mÃ¡s peligrosos que otros 327 gusanos conocidos, se creÃ³ un banco de pruebas de red y se desarrollÃ³ un simulador capaz de simular topologÃ­as a gran escala similares a Internet (espacio IPV4). El banco de pruebas de red consistÃ­a en una red de Ã¡rea local de 30 computadoras basadas en Linux. El simulador fue escrito en C++. El gusano de enjambre simple descrito en la secciÃ³n 2.6 se utilizÃ³ para infectar al paciente cero, y luego se permitiÃ³ que el gusano de enjambre se propagara a travÃ©s de sus propios mecanismos de propagaciÃ³n, control distribuido y comportamientos de enjambre. En el caso de una red de Ã¡rea local simple de 30 computadoras, se seleccionaron seis (6) contraseÃ±as raÃ­z diferentes de un espacio de contraseÃ±as de 4 dÃ­gitos (10000 opciones). Al comienzo del experimento se conoce una Ãºnica contraseÃ±a, la del paciente cero. Todas las contraseÃ±as compartidas se distribuyen aleatoriamente en todos los nodos. De manera similar, en el caso de la simulaciÃ³n, se construyÃ³ una topologÃ­a de red de 10,000 hosts cuyas direcciones fueron seleccionadas al azar en el espacio IPV4. Dentro de ese espacio, se seleccionaron y distribuyeron un total de 200 contraseÃ±as compartidas ya sea de forma aleatoria y/o dirigida a subredes especÃ­ficas de topologÃ­as de red. Por ejemplo, en una de nuestras ejecuciones de simulaciÃ³n, la topologÃ­a de red consistÃ­a en 200 subredes, cada una conteniendo 50 hosts. En dicha topologÃ­a, las contraseÃ±as compartidas se distribuÃ­an en subredes donde un porcentaje variable de contraseÃ±as se compartÃ­an entre subredes. Los porcentajes de contraseÃ±as compartidas utilizadas reflejaban los primeros estudios empÃ­ricos, donde se descubriÃ³ que hasta el 39.7% de las contraseÃ±as comunes eran compartidas. RESULTADOS En la Figura 3 se presentan los resultados comparando el comportamiento del Ataque de Enjambre versus el de un Gusano Malformado tÃ­pico para una LAN de 30 nodos. En este conjunto de ejecuciones empÃ­ricas, seis (6) contraseÃ±as compartidas fueron distribuidas al azar en todos los nodos de un total de 10,000 contraseÃ±as desconocidas posibles. Los datos presentados reflejan los comportamientos de un total de tres (3) clases distintas de gusanos o enjambres de gusanos. La clase de gusanos presentada es la siguiente: â¢ I-NS-NL:= Gusano genÃ©rico, independiente (I), sin aprendizaje/sin memoria (NL), y sin compartir informaciÃ³n con vecinos o descendientes (NS); â¢ S-L-SP:= Gusano en enjambre (S), aprendizaje (L), mantiene una lista de contraseÃ±as aprendidas, y comparte contraseÃ±as (SP) con vecinos mÃ¡s cercanos y descendientes; y â¢ S-L-SP&A:= Gusano en enjambre (S), aprendizaje (L), mantiene una lista de contraseÃ±as aprendidas, y comparte contraseÃ±as y direcciones existentes (SP&A) con vecinos mÃ¡s cercanos y descendientes. Como se muestra en la Figura 3, los resultados validan nuestra hipÃ³tesis original de que los gusanos en enjambre son significativamente mÃ¡s eficientes y peligrosos que los gusanos genÃ©ricos. En este conjunto de experimentos, el compartir contraseÃ±as proporciona una mejora de un orden de magnitud sobre un gusano aleatorio sin memoria. De manera similar, un gusano en enjambre que comparte contraseÃ±as y direcciones es aproximadamente dos Ã³rdenes de magnitud mÃ¡s eficiente que su contraparte genÃ©rica. En la Figura 3, se pueden observar una serie de discontinuidades. Estas discontinuidades son un artefacto del pequeÃ±o espacio muestral utilizado para este experimento. BÃ¡sicamente, tan pronto como se rompe una contraseÃ±a, todos los nodos que comparten esa contraseÃ±a especÃ­fica se infectan en cuestiÃ³n de segundos. Ten en cuenta que es trivial para un gusano en enjambre escanear y descubrir un pequeÃ±o espacio de contraseÃ±as compartidas. En la Figura 4, se presentan los resultados de la simulaciÃ³n comparando el Comportamiento de Ataque de Enjambre con el de un Gusano Malformado GenÃ©rico. En este conjunto de ejecuciones de simulaciÃ³n, se construyÃ³ una topologÃ­a de red de 10,000 hosts, cuyas direcciones fueron seleccionadas aleatoriamente en el espacio IPV4. Dentro de ese espacio, se seleccionaron y distribuyeron un total de 200 contraseÃ±as compartidas ya sea de forma aleatoria y/o dirigida a subredes especÃ­ficas de topologÃ­as de red. Los datos presentados reflejan los comportamientos de tres (3) clases distintas de gusanos o gusanos en enjambre y dos (2) estrategias de exploraciÃ³n de selecciÃ³n de objetivo de host diferentes (exploraciÃ³n aleatoria y sesgo local). La cantidad de sesgo local variÃ³ en mÃºltiples ejecuciones de simulaciÃ³n. Los resultados presentados son comportamientos agregados. En general, se simularon las siguientes clases de Gusanos GenÃ©ricos y Gusanos en Enjambre. ExploraciÃ³n de direcciones: â¢ Aleatoria:= las direcciones se seleccionan al azar de un subconjunto del espacio IPV4, es decir, un espacio de 224 direcciones; y â¢ Sesgo local:= las direcciones se seleccionan al azar de una subred local (256 direcciones) o de un subconjunto del espacio IPV4, es decir, un espacio de 224 direcciones. El porcentaje de sesgo local varÃ­a en mÃºltiples ejecuciones. Aprendizaje, ComunicaciÃ³n y Control Distribuido â¢ I-NL-NS: Gusano genÃ©rico, independiente (I), sin aprendizaje/sin memoria (NL), y sin compartir informaciÃ³n con vecinos o descendientes (NS); â¢ I-L-OOS: Gusano genÃ©rico, independiente (I), con aprendizaje/sin memoria (L), y compartiendo informaciÃ³n una sola vez con descendientes solamente (OOS); â¢ S-L-SP:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte contraseÃ±as (SP) con vecinos mÃ¡s cercanos y descendientes; â¢ S-L-S&AOP:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte direcciones con vecinos y descendientes, comparte contraseÃ±as solo una vez (al crearse) con descendientes (SA&OP); â¢ S-L-SP&A:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte contraseÃ±as y direcciones existentes (SP&A) con vecinos mÃ¡s cercanos y descendientes. Como se muestra en la Figura 4, los resultados son consistentes con nuestro conjunto de resultados empÃ­ricos. AdemÃ¡s, se pueden hacer las siguientes observaciones. 1. La preferencia local es increÃ­blemente efectiva. Las transferencias cortas de direcciÃ³n son mÃ¡s efectivas que las largas. Variamos el tamaÃ±o de la lista permitida en el intercambio de direcciones; el sobrecosto asociado con una lista de direcciones larga es perjudicial para el rendimiento del gusano en enjambre, asÃ­ como para su sigilo; 3. Para el caso de sesgo local, compartir direcciones vÃ¡lidas de host susceptibles, el gusano S-L-S&AOP (recuerde, el enjambre S-L-S&AOP comparte contraseÃ±as, solo una vez, con descendientes 328 en el momento de la creaciÃ³n) es mÃ¡s efectivo que compartir contraseÃ±as en el caso del enjambre S-L-SP. En este caso, podemos pensar en el enjambre como lanzando un ataque de diccionario distribuido: diferentes segmentos del enjambre utilizan diferentes contraseÃ±as para intentar ingresar a hosts no infectados susceptibles. En el modo de sesgo local, al principio de la vida del enjambre, compartir direcciones es mÃ¡s efectivo que compartir contraseÃ±as, hasta que se descubran la mayorÃ­a de las subredes. Entonces, el apuntar a direcciones locales ayuda a descubrir los hosts susceptibles, mientras que los miembros del enjambre necesitan perder tiempo redescubriendo contraseÃ±as; y 4. Infectar el Ãºltimo 0.5% de los nodos lleva mucho tiempo en modo de sesgo no local. BÃ¡sicamente, la lista de contraseÃ±as compartidas entre subredes se ha agotado, y el enjambre vuelve a simplemente descubrir una contraseÃ±a al azar. Figura 3: Comportamiento del Ataque de Enjambre vs Gusano Malformado: Resultados EmpÃ­ricos, LAN de 30 nodos Figura 4: Comportamiento del Ataque de Enjambre vs Gusano Malformado: Resultados de SimulaciÃ³n 5. RESUMEN Y TRABAJO FUTURO En este manuscrito, hemos presentado un modelo abstracto, similar en algunos aspectos al de Weaver [5], que ayuda a explicar la naturaleza genÃ©rica de los gusanos. El modelo presentado en la secciÃ³n 2 se extendiÃ³ para incorporar una nueva clase de gusanos potencialmente peligrosos llamados Gusanos en Enjambre. Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biolÃ³gicos y muestran un alto grado de aprendizaje, comunicaciÃ³n e <br>inteligencia distribuida</br>. Tales gusanos en enjambre son potencialmente mÃ¡s daÃ±inos que sus contrapartes genÃ©ricas. AdemÃ¡s, se creÃ³ la primera instancia, que sepamos, de un gusano de aprendizaje, llamado ZachiK. ZachiK es un gusano enjambre de descifrado de contraseÃ±as simple que incorpora diferentes estrategias de aprendizaje y comparticiÃ³n de informaciÃ³n. Un gusano de enjambre similar fue desplegado tanto en una red de Ã¡rea local de treinta (30) hosts, como simulado en una topologÃ­a de 10,000 nodos. Los resultados preliminares mostraron que tales gusanos son capaces de comprometer a los anfitriones a tasas hasta 2 Ã³rdenes de magnitud mÃ¡s rÃ¡pido que su contraparte genÃ©rica, manteniendo al mismo tiempo sus capacidades de sigilo. Este trabajo abre una nueva Ã¡rea de problemas interesantes. Algunos de los problemas mÃ¡s interesantes y urgentes a considerar son los siguientes: â¢ Â¿Es posible aplicar algunos de los conceptos de aprendizaje desarrollados en los Ãºltimos diez aÃ±os en las Ã¡reas de inteligencia de enjambre, sistemas de agentes y control distribuido al diseÃ±o de gusanos de enjambre sofisticados de tal manera que se produzca un verdadero comportamiento emergente? â¢ Â¿Son efectivas las tÃ©cnicas actuales que se estÃ¡n desarrollando en el diseÃ±o de Sistemas de DetecciÃ³n y Contramedidas de IntrusiÃ³n y sistemas supervivientes contra esta nueva clase de gusanos?; y â¢ Â¿QuÃ© tÃ©cnicas, si las hay, se pueden desarrollar para crear defensas contra los gusanos de enjambre? 6. AGRADECIMIENTOS Este trabajo se realizÃ³ como parte de un esfuerzo mÃ¡s amplio en el desarrollo de sistemas de DetecciÃ³n de Intrusiones y Contramedidas de prÃ³xima generaciÃ³n en WSSRL. El trabajo se lleva a cabo bajo los auspicios de la subvenciÃ³n ACG-2004-06 otorgada por Acumen Consulting Group, Inc., Marlboro, Massachusetts. REFERENCIAS [1] C.C. Zou, L. Gao, W. G., y Towsley, D. Monitoreo y alerta temprana para gusanos de internet. En la 10Âª Conferencia ACM sobre Seguridad InformÃ¡tica y de Comunicaciones, Washington, DC (octubre de 2003). [2] Liu, S. y Passino, K. Inteligencia de enjambre: Resumen de la literatura. En el Departamento de IngenierÃ­a ElÃ©ctrica, Universidad Estatal de Ohio, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., y Weaver, N. La propagaciÃ³n del gusano saphire/slammer. Inf. tÃ©cnico, Un esfuerzo conjunto de CAIDA, ICSI, Silicon Defense, UC Berkeley EECS y UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S. y Cunningham, R. Una taxonomÃ­a de gusanos informÃ¡ticos. En Actas del Taller de ACM sobre Malware RÃ¡pido (WORM) (2003). 329 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "intrusion detection": {
            "translated_key": "Sistemas de DetecciÃ³n de Intrusiones",
            "is_in_text": true,
            "original_annotated_sentences": [
                "An Initial Analysis and Presentation of Malware Exhibiting Swarm-Like Behavior Fernando C.ColÂ´on Osorio Wireless System Security Research Laboratory (W.S.S.R.L.)",
                "420 Lakeside Avneue Marlboro, Massachusetts 01752 fcco@cs.wpi.edu Zachi Klopman Wireless System Security Research Laboratory (W.S.S.R.L.) 420 Lakeside Avneue Marlboro, Massachusetts 01752 zachi@cs.wpi.edu ABSTRACT The Slammer, which is currently the fastest computer worm in recorded history, was observed to infect 90 percent of all vulnerable Internets hosts within 10 minutes.",
                "Although the main action that the Slammer worm takes is a relatively unsophisticated replication of itself, it still spreads so quickly that human response was ineffective.",
                "Most proposed countermeasures strategies are based primarily on rate detection and limiting algorithms.",
                "However, such strategies are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In our work, we put forth the hypothesis that next generation worms will be radically different, and potentially such techniques will prove ineffective.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
                "Emergent Intelligence is the behavior of systems, very much like biological systems such as ants or bees, where simple local interactions of autonomous members, with simple primitive actions, gives rise to complex and intelligent global behavior.",
                "In this manuscript we will introduce the basic principles behind the idea of Swarm Worms, as well as the basic structure required in order to be considered a swarm worm.",
                "In addition, we will present preliminary results on the propagation speeds of one such swarm worm, called the ZachiK worm.",
                "We will show that ZachiK is capable of propagating at a rate 2 orders of magnitude faster than similar worms without swarm capabilities.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: <br>intrusion detection</br>; D.4.6 [Security and Protection]: Invasive software General Terms Experimentation, Security 1.",
                "INTRODUCTION AND PREVIOUSWORK In the early morning hours (05:30 GMT) of January 25, 2003 the fastest computer worm in recorded history began spreading throughout the Internet.",
                "Within 10 minutes after the first infected host (patient zero), 90 percent of all vulnerable hosts had been compromised creating significant disruption to the global Internet infrastructure.",
                "Vern Paxson of the International Computer Science Institute and Lawrence Berkeley National Laboratory in its analysis of Slammer commented: The Slammer worm spread so quickly that human response was ineffective, see [4] The interesting part, from our perspective, about the spread of Slammer is that it was a relatively unsophisticated worm with benign behavior, namely self-reproduction.",
                "Since Slammer, researchers have explored the behaviors of fast spreading worms, and have designed countermeasures strategies based primarily on rate detection and limiting algorithms.",
                "For example, Zou, et al., [2], proposed a scheme where a Kalman filter is used to detect the early propagation of a worm.",
                "Other researchers have proposed the use of detectors where rates of Destination Unreachable messages are monitored by firewalls, and a significant increase beyond normal, alerts the organization to the potential presence of a worm.",
                "However, such strategies suffer from the fighting the last War syndrome.",
                "That is, systems are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In the work described here, we put forth the hypothesis that next generation worms will be different, and therefore such techniques may have some significant limitations.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
                "The concept of emergent intelligence was first studied in association with biological systems.",
                "In such studies, early researchers discovered a variety of interesting insect or animal behaviors in the wild.",
                "A flock of birds sweeps across the sky.",
                "A group of ants forages for food.",
                "A school of fish swims, turns, flees together away from a predator, ands so forth.",
                "In general, this kind of aggregate motion has been called swarm behavior.",
                "Biologists, and computer scientists in the field of artificial intelligence have studied such biological swarms, and 323 attempted to create models that explain how the elements of a swarm interact, achieve goals, and evolve.",
                "Moreover, in recent years the study of swarm intelligence has become increasingly important in the fields of robotics, the design of Mobile ad-hoc Networks (MANETS), the design of <br>intrusion detection</br> Systems, the study of traffic patterns in transportation systems, in military applications, and other areas, see [3].",
                "The basic concepts that have been developed over the last decade to explain swarms, and swarm behavior include four basic components.",
                "These are: 1.",
                "Simplicity of logic & actions: A swarm is composed of N agents whose intelligence is limited.",
                "Agents in the swarm use simple local rules to govern their actions.",
                "Some models called this primitive actions or behaviors; 2.",
                "Local Communication Mechanisms: Agents interact with other members in the swarm via simple local communication mechanisms.",
                "For example, a bird in a flock senses the position of adjacent bird and applies a simple rule of avoidance and follow. 3.",
                "Distributed control: Autonomous agents interact with their environment, which probably consists of other agents, but act relatively independently from all other agents.",
                "There is no central command or leader, and certainly there is no global plan. 4.",
                "Emergent Intelligence: Aggregate behavior of autonomous agents results in complex intelligent behaviors; including self-organization.",
                "In order to understand fully the behavior of such swarms it is necessary to construct a model that explains the behavior of what we will call generic worms.",
                "This model, which extends the work by Weaver [5] is presented here in section 2.",
                "In addition, we intend to extend said model in such a way that it clearly explains the behaviors of this new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
                "Such Swarm Worms are potentially more harmful than their similar generic counterparts.",
                "Specifically, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
                "ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
                "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms are capable of compromising hosts at rates up to two orders of magnitude faster than their generic counterpart.",
                "The rest of this manuscript is structure as follows.",
                "In section 2 an abstract model of both generic worms as well as swarm worms is presented.",
                "This model is used in section 2.6 to described the first instance of a swarm worm, ZachiK.",
                "In section 4, preliminary results via both empirical measurements as well as simulation is presented.",
                "Finally, in section 5 our conclusions and insights into future work are presented. 2.",
                "WORM MODELING In order to study the behavior of swarm worms in general, it is necessary to create a model that realistically reflects the structure of worms and it is not necessarily tied to a specific instance.",
                "In this section, we described such a model where a general worm is describe as having four-(4) basic components or subfunctions.",
                "By definition, a worm is a selfcontained, self propagating program.",
                "Thus, in simple terms, it has two main functions: that which propagates and that which does other things.",
                "We propose that there is a third broad functionality of a worm, that of self-preservation.",
                "We also propose that the other functionality of a worm may be more appropriately categorized as Goal-Based Actions (GBA), as whatever functionality included in a worm will naturally be dependent on whatever goals (and subgoals) the author has.",
                "The work presented by Weaver et. al. in [5] provides us with mainly an action and technique based taxonomy of computer worms, which we utilize and further extend here. 2.1 Propagation The propagation function itself may be broken down into three actions: acquire target, send scan, and infect target.",
                "Acquiring the target simply means picking a host to attack next.",
                "Sending a scan involves checking to see if that host is receptive to an infection attempt, since IP-space is sparsely populated.",
                "This may involve a simple ping to check if the host is alive or a full out vulnerability assessment.",
                "Infecting the target is the actual method used to send the worm code to the new host.",
                "In algorithm form: propagate() { host := acquire_target() success := send_scan(host) if( success ) then infect(host) endif } In the case of a simple worm which does not first check to see if the host is available or susceptible (such as Slammer), the scan method is dropped: propagate() { host := acquire_target() infect(host) } Each of these actions may have an associated cost to its inclusion and execution, such as increased worm size and CPU or network load.",
                "Depending on the authors needs or requirements, these become limiting factors in what may be included in the worms actions.",
                "This is discussed further after expanding upon these actions below. 2.2 Target Acquisition: The Target Acquisition phase of our worm algorithm is built directly off of the Target Discovery section in [5].",
                "Weaver et. al. taxonomize this task into 5 separate categories.",
                "Here, we further extend their work through parameterization.",
                "Scanning: Scanning may be considered an equation-based method for choosing a host.",
                "Any type of equation may be used to arrive at an IP address, but there are three main types seen thus far: sequential, random, and local preference.",
                "Sequential scanning is exactly as it sounds: start at an IP address and increment through all the IP space.",
                "This could carry with it the options of which IP to start with (user chosen value, random, or based on IP of infected host) and 324 how many times to increment (continuous, chosen value, or subnet-based).",
                "Random scanning is completely at random (depending on the chosen PRNG method and its seed value).",
                "Local preference scanning is a variance of either Sequential or Random, whereby it has a greater probability of choosing a local IP address over a remote one (for example, the traditional 80/20 split).",
                "Pre-generated Target Lists: Pre-generated Target Lists, or so called hit-lists, could include the options for percentage of total population and percentage wrong, or just number of IPs to include.",
                "Implicit to this type is the fact that the list is divided among a parent and its children, avoiding the problem of every instance hitting the exact same machines.",
                "Externally Generated Target Lists: Externally generated target lists depend on one or more external sources that can be queried for host data.",
                "This will involve either servers that are normally publicly available, such as gaming meta-servers, or ones explicitly setup by the worm or worm author.",
                "The normally available meta-servers could have parameters for rates of change, such as many popping up at night or leaving in the morning.",
                "Each server could also have a maximum queries/second that it would be able to handle.",
                "The worm would also need a way of finding these servers, either hard-coded or through scanning.",
                "Internal Target Lists: Internal Target Lists are highly dependent on the infected host.",
                "This method could parameterize the choice of how much info is on the host, such as all machines in subnet, all windows boxes in subnet, particular servers, number of internal/external, or some combination.",
                "Passive: Passive methods are determined by normal interactions between hosts.",
                "Parameters may include a rate of interaction with particular machines, internal/external rate of interaction, or subnet-based rate of interaction.",
                "Any of these methods may also be combined to produce different types of target acquisition strategies.",
                "For example, the a worm may begin with an initial hit-list of 100 different hosts or subnets.",
                "Once it has exhausted its search using the hit-list, it may then proceed to perform random scanning with a 50% local bias.",
                "It is important to note, however, that the resource consumption of each method is not the same.",
                "Different methods may require the worm to be large, such as the extra bytes required by a hit-list, or to take more processing time, such as by searching the host for addresses of other vulnerable hosts.",
                "Further research and analysis should be performed in this area to determine associated costs for using each method.",
                "The costs could then be used in determining design tradeoffs that worm authors engage at.",
                "For example, hit lists provide a high rate of infection, but at a high cost of worm payload size. 2.2.1 Sending a Scan The send scan function tests to see if the host is available for infection.",
                "This can be as simple as checking if the host is up on the network or as complex as checking if the host is vulnerable to the exploit which will be used.",
                "The sending of a scan before attempted infection can increase the scanning rate if the cost for failing an infection is greater than the cost of failing a scan or sending a scan plus infection; and failures are more frequent than successes.",
                "One important parameter to this would be the choice of transport protocol (TCP/UDP) or just simply the time for one successful scan and time for one failed scan.",
                "Also, whether or not it tests for the host to be up or if it is a full test for the vulnerability (or for multiple vulnerabilities). 2.2.2 Infection Vector (IV) The particular infection vector used to access the remote host is mainly dependent on the particular vulnerability chosen to exploit.",
                "In a non-specific sense, it is dependent on the transport protocol chosen to use and the message size to be sent.",
                "Section 3 of [5] also proposes three particular classes of IV: Self-carried, second channel, and embedded. 2.3 Self Preservation The Self Preservation actions of a worm may take many forms.",
                "In the wild, worms have been observed to disable anti-virus software or prevent sending itself to certain antivirusknown addresses.",
                "They have also been seen to attempt disabling of other worms which may be contending for the same system.",
                "We also believe that a time-based throttled scanning may help the worm to slip under the radar.",
                "We also propose a decoy method, whereby a worm will release a few children that cause a lot of noise so that the parent is not noticed.",
                "It has also been proposed [5] that a worm cause damage to its host if, and only if, it is disturbed in some way.",
                "This module could contain parameters for: probability of success in disabling anti-virus or other software updates, probability of being noticed and thus removed, or hardening of the host against other worms. 2.4 Goal-Based Actions A worms GBA functionality depends on the authors goal list.",
                "The Payloads section of [5] provides some useful suggestions for such a module.",
                "The opening of a back-door can make the host susceptible to more attacks.",
                "This would involve a probability of the back-door being used and any associated traffic utilization.",
                "It could also provide a list of other worms this host is now susceptible to or a list of vulnerabilities this host now has.",
                "Spam relays and HTTP-Proxies of course have an associated bandwidth consumption or traffic pattern.",
                "Internet DoS attacks would have a set time of activation, a target, and a traffic pattern.",
                "Data damage would have an associated probability that the host dies because of the damage.",
                "In Figure 1, this general model of a worm is summarized.",
                "Please note that in this model there is no learning, no, or very little, sharing of information between worm instances, and certainly no coordination of actions.",
                "In the next section we expand the model to include such mechanisms, and hence, arrive at the general model of a swarm worm. 2.5 Swarms - General Model As described in section 1, the basic characteristics that distinguished swarm behavior from simply what appears to be collective coordinated behaviors are four basic attributes.",
                "These are: 1.",
                "Simplicity of logic & actions; 2.",
                "Local Communication Mechanisms; 3.",
                "Distributed control; and 4.",
                "Emergent Intelligence, including self-organization. 325 Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 1: General Worm Model In this work we aggregate all of these attributes under the general title of Learning, Communication, and Distributed Control.",
                "The presence of these attributes distinguishes swarm worms from otherwise regular worms, or other types of malware such as Zombies.",
                "In figure ? ?, the generic model of a worm is expanded to included these set of actions.",
                "Within this context then, a worm like Slammer cannot be categorized as a swarm worm due to the fact that new instances of the worm do not coordinate their actions or share information.",
                "On the other hand, Zombies and many other forms of DDoS, which at first glance may be consider swarm worms are not.",
                "This is simply due to fact that in the case of Zombies, control is not distributed but rather centralized, and no emergent behaviors arise.",
                "The latter, the potential emergence of intelligence or new behaviors is what makes swarm worms so potentially dangerous.",
                "Finally, when one considers the majority of recent disruptions to the Internet Infrastructure, and in light of our description of swarm attacks, then said disruptions can be easily categorized as precursors to truly swarm behavior.",
                "Specifically, â¢ DDOS - Large number of compromised hosts send useless packets requiring processing (Stacheldraht, http : //www.cert.org/ incidentnotes/IN â 99 â 04.html).",
                "DDoS attacks are the early precursors to Swarm Attacks due to the large number of agents involved. â¢ Code Red CrV1, Code Red II, Nimbda - Exhibit early notions of swarm attacks, including a backdoor communication channel. â¢ Staniford & Paxson in How to Own the Internet in Your Spare Time? explore modifications to CrV1, Code Red I, II with a swarm like type of behavior.",
                "For example, they speculate on new worms which employ direct worm-to-worm communication, and employ programmable updates.",
                "For example the Warhol worm, and Permutation-Scanning (self coordinating) worms. 2.6 Swarm Worm: the details In considering the creation of what we believed to be the first Swarm Worm in existence, we wanted to adhere as close as possible to the general model presented in section ? ? while at the same time facilitating large scale analysis, both empirical and through simulations, of the behavior of the swarm.",
                "For this reason, we selected as the first instance Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Learning, Communication, Pheromones/Flags (Test and Distributed Control if Worm is already present) Time bombs, Learning Algorithms, IRC channel Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 2: General Model of a Swarm Worm of the swarm a simple password cracking worm.",
                "The objective of this worm simply is to infect a host by sequentially attempting to login into the host using well known passwords (dictionary attack), passwords that have been discovered previously by any member of the swarm, and random passwords.",
                "Once, a host is infected, the worm will create communication channels with both its known neighbors at that time, as well as with any offsprings that it successfully generates.",
                "In this context a successful generation of an offspring means simply infecting a new host and replicating an exact copy of itself in such a host.",
                "We call this swarm worm the ZachiK worm in honor of one of its creators.",
                "As it can be seen from this description, the ZachiK worm exhibits all of the elements described before.",
                "In the following sections, we described in detail each one of the elements of the ZachiK worm. 2.7 Infection Vector The infection vector used for ZachiK worm is the secure shell protocol SSH.",
                "A modified client which is capable of receiving passwords from the command line was written, and integrated with a script that supplies it with various passwords: known and random.",
                "When a password is found for an appropriate target, the infection process begins.",
                "After the root password of a host is discovered, the worm infects the target host and replicates itself.",
                "The worm creates a new directory in the target host, copies the modified ssh client, the script, the communications servers, and the updated versions of data files (list of known passwords and a list of current neighbors).",
                "It then runs the modified script on the newly infected hosts, which spawns the communications server, notifies the neighbors and starts looking for new targets.",
                "It could be argued, correctly, that the ZachiK worm can be easily defeated by current countermeasure techniques present on most systems today, such as disallowing direct root logins from the network.",
                "Within this context ZachiK can quickly be discarded as very simple and harmless worm that does not require further study.",
                "However, the reader should consider the following: 1.",
                "ZachiK can be easily modified to include a variety of infection vectors.",
                "For example, it could be programmed to guess common user names and their passwords; gain 326 access to a system, then guess the root password or use other well know vulnerabilities to gain root privileges; 2.",
                "ZachiK is a proof of concept worm.",
                "The importance of ZachiK is that it incorporates all of the behaviors of a swarm worm including, but not restricted to, distributed control, communication amongst agents, and learning; 3.",
                "ZachiK is composed of a large collection of agents operating independently which lends itself naturally to parallel algorithms such as a parallel search of the IPV4 address space.",
                "Within this context, SLAMMER, does incorporate a parallel search capability of potentially susceptible addresses.",
                "However, unlike ZachiK, the knowledge discovered by the search is never shared amongst the agents.",
                "For this reasons, and many others, one should not discard the potential of this new class of worms but rather embrace its study. 2.8 Self-Preservation In the case of ZachiK worm, the main self-preservation techniques used are simply keeping the payload small.",
                "In this context, this simply means restricting the number of passwords that an offspring inherits, masquerading worm messages as common http requests, and restricting the number of neighbors to a maximum of five-(5). 2.9 Propagation Choosing the next target(s) in an efficient matter requires thought.",
                "In the past, known and proposed worms, see [5], have applied propagation techniques that varied.",
                "These include: strictly random selection of a potential vulnerable host; target lists of vulnerable hosts; locally biased random selection (select a host target at random from a local subnet); and a combination of some or all of the above.",
                "In our test and simulation environments, we will apply a combination of locally biased and totally random selection of potential vulnerable hosts.",
                "However, due to the fact that the ZachiK worm is a swarm worm, address discovery (that is when non-existent addresses are discovered) information will be shared amongst members of the swarm.",
                "The infection and propagation threads do the following set of activities repeatedly: â¢ Choose an address â¢ Check the validity of the address â¢ Choose a set of passwords â¢ Try infecting the selected host with this set of passwords As described earlier, choosing an address makes use of a combination of random selection, local bias, and target lists.",
                "Specifically, to choose an address, the instance may either: â¢ Generate a new random address â¢ Generate an address on the local network â¢ Pick an address from a handoff list The choice is made randomly among these options, and can be varied to test the dependency of propagation on particular choices.",
                "Password are either chosen from the list of known passwords or newly generated.",
                "When an infection of a valid address fails, it is added to a list of handoffs, which is sent to the neighbors to try to work on. 2.10 Learning, CommunicationandDistributed Control 2.10.1 Communication The concept of a swarm is based on transfer of information amongst neighbors, which relay their new incoming messages to their neighbors, and so on until every worm instance in the swarm is aware of these messages.",
                "There are two classes of messages: data or information messages and commands.",
                "The command messages are meant for an external user (a.k.a., hackers and/or crackers) to control the actions of the instances, and are currently not implemented.",
                "The information messages are currently of three kinds: new member, passwords and exploitable addresses (handoffs).",
                "The new member messages are messages that a new instance sends to the neighbors on its (short) list of initial neighbors.",
                "The neighbors then register these instances in their neighbor list.",
                "These are messages that form the multi-connectivity of the swarm, and without them, the topology will be a treelike structure, where eliminating a single node would cause the instances beneath it to be inaccessible.",
                "The passwords messages inform instances of newly discovered passwords, and by informing all instances, the swarm as whole collects this information, which allows it to infect new instances more effectively.",
                "The handoffs messages inform instances of valid addresses that could not be compromised (fail at breaking the password for the root account).",
                "Since the address space is rather sparse, it takes a relatively long time (i.e. many trials) to discover a valid address.",
                "Therefore, by handing off discovered valid addresses, the swarm is (a) conserving energy by not re-discovering the same addresses (b) attacking more effectively.",
                "In a way, this is a simple instance of coordinated activity of a swarm. 2.10.2 Coordination When a worm instance is born, it relays its existence to all neighbors on its list.",
                "The main thread then spawns a few infection threads, and continues to handle incoming messages (registering neighbors, adding new passwords, receiving addresses and relaying these messages). 2.10.3 Distributed Control Control in the ZachiK worm is distributed in the sense that each instance of the worm performs a set of actions independently of every other instance while at the same time benefiting from the learning achieve by its immediate neighbors. 2.11 Goal Based Actions The first instantiation of the ZachiK worm has two basic goals.",
                "These are: (1) propagate, and (2) discover and share with members of th swarm new root passwords. 3.",
                "EXPERIMENTAL DESIGN In order to verify our hypothesis that Swarm Worms are more capable, and therefore dangerous than other well known 327 worms, a network testbed was created, and a simulator, capable of simulating large scale Internet-like topologies (IPV4 space), was developed.",
                "The network testbed consisted of a local area network of 30 Linux based computers.",
                "The simulator was written in C++ .",
                "The simple swarm worm described in section 2.6 was used to infect patient-zero, and then the swarm worm was allowed to propagate via its own mechanisms of propagation, distributed control, and swarm behaviors.",
                "In the case of a simple local area network of 30 computers, six-(6) different root passwords out of a password space of 4 digits (10000 options) were selected.",
                "At the start of the experiment a single known password is known, that of patient-zero.",
                "All shared passwords are distributed randomly across all nodes.",
                "Similarly, in the case of the simulation, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "For example, in one of our simulation runs, the network topology consisted of 200 subnets each containing 50 hosts.",
                "In such a topology, shared passwords were distributed across subnets where a varying percentage of passwords were shared across subnets.",
                "The percentages of shared passwords used was reflective of early empirical studies, where up to 39.7% of common passwords were found to be shared. 4.",
                "RESULTS In Figure 3, the results comparing Swarm Attack behavior versus that of a typical Malform Worm for a 30 node LAN are presented.",
                "In this set of empirical runs, six-(6) shared passwords were distributed at random across all nodes from a possible of 10,000 unknown passwords.",
                "The data presented reflects the behaviors of a total of three-(3) distinct classes of worm or swarm worms.",
                "The class of worms presented are as follows: â¢ I-NS-NL:= Generic worm, independent (I), no learning/memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; and â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 3, the results validate our original hypothesis that swarm worms are significantly more efficient and dangerous than generic worms.",
                "In this set of experiments, the sharing of passwords provides an order of magnitude improvement over a memoryless random worm.",
                "Similarly, a swarm worm that shares passwords and addresses is approximately two orders of magnitude more efficient than its generic counterpart.",
                "In Figure 3, a series of discontinuities can be observed.",
                "These discontinuities are an artifact of the small sample space used for this experiment.",
                "Basically, as soon as a password is broken, all nodes sharing that specific password are infected within a few seconds.",
                "Note that it is trivial for a swarm worm to scan and discovered a small shared password space.",
                "In Figure 4, the simulation results comparing Swarm Attack Behavior versus that of a Generic Malform Worm are presented.",
                "In this set of simulation runs, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "The data presented reflects the behaviors of three-(3) distinct classes of worm or swarm worms and two(2) different target host selection scanning strategies (random scanning and local bias).",
                "The amount of local bias was varied across multiple simulation runs.",
                "The results presented are aggregate behaviors.",
                "In general the following class of Generic Worms and Swarm Worms were simulated.",
                "Address Scanning: â¢ Random:= addresses are selected at random from a subset of the IPV4 space, namely, a 224 address space; and â¢ Local Bias:= addresses are selected at random from either a local subnet (256 addresses) or from a subset of the IPV4 space, namely, a 224 address space.",
                "The percentage of local bias is varied across multiple runs.",
                "Learning, Communication & Distributed Control â¢ I-NL-NS: Generic worm, independent (I), no learning/ memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ I-L-OOS: Generic worm, independent (I), learning/ memoryless (L), and one time sharing of information with offsprings only (OOS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; â¢ S-L-S&AOP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of addresses with neighbors and offsprings, shares passwords one time only (at creation) with offsprings(SA&OP); â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 4, the results are consistent with our set of empirical results.",
                "In addition, the following observations can be made. 1.",
                "Local preference is incredibly effective. 2.",
                "Short address handoffs are more effective than long ones.",
                "We varied the size of the list allowed in the sharing of addresses; the overhead associated with a long address list is detrimental to the performance of the swarm worm, as well as to its stealthiness; 3.",
                "For the local bias case, sharing valid addresses of susceptible host, S-L-S&AOP worm (recall, the S-L-S&AOP swarm shares passwords, one time only, with offsprings 328 at creation time) is more effective than sharing passwords in the case of the S-L-SP swarm.",
                "In this case, we can think of the swarm as launching a distributeddictionary attack: different segments of the swarm use different passwords to try to break into susceptible uninfected host.",
                "In the local bias mode, early in the life of the swarm, address-sharing is more effective than password-sharing, until most subnets are discovered.",
                "Then the targeting of local addresses assists in discovering the susceptible hosts, while the swarm members need to waste time rediscovering passwords; and 4.",
                "Infecting the last 0.5% of nodes takes a very long time in non-local bias mode.",
                "Basically, the shared password list across subnets has been exhausted, and the swarm reverts to simply a random discovery of password algorithm.",
                "Figure 3: Swarm Attack Behavior vs. Malform Worm: Empirical Results, 30node LAN Figure 4: Swarm Attack Behavior vs. Malform Worm: Simulation Results 5.",
                "SUMMARY AND FUTURE WORK In this manuscript, we have presented an abstract model, similar in some aspects to that of Weaver [5], that helps explain the generic nature of worms.",
                "The model presented in section 2 was extended to incorporate a new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
                "Such Swarm Worms are potentially more harmful than their generic counterparts.",
                "In addition, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
                "ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
                "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms is capable of compromising hosts a rates up to 2 orders of magnitude faster than its generic counterpart while retaining stealth capabilities.",
                "This work opens up a new area of interesting problems.",
                "Some of the most interesting and pressing problems to be consider are as follows: â¢ Is it possible to apply some of learning concepts developed over the last ten years in the areas of swarm intelligence, agent systems, and distributed control to the design of sophisticated swarm worms in such a way that true emergent behavior takes place? â¢ Are the current techniques being developed in the design of <br>intrusion detection</br> & CounterMeasure Systems and Survivable systems effective against this new class of worms? ; and â¢ What techniques, if any, can be developed to create defenses against swarm worms? 6.",
                "ACKNOWLEDGMENTS This work was conducted as part of a larger effort in the development of next generation <br>intrusion detection</br> & CounterMeasure Systems at WSSRL.",
                "The work is conducted under the auspices of Grant ACG-2004-06 by the Acumen Consulting Group, Inc., Marlboro, Massachusetts. 7.",
                "REFERENCES [1] C.C.",
                "Zou, L. Gao, W. G., and Towsley, D. Monitoring and early warning for internet worms.",
                "In 10th ACM Conference on Computer and Communications Security, Washington, DC (October 2003). [2] Liu, S., and Passino, K. Swarm intelligence: Literature overview.",
                "In Dept. of Electrical Engineering, The Ohio State University, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., and Weaver, N. The spread of the saphire/slammer worm.",
                "Tech. rep., A joint effort of CAIDA, ICSI, Silicon Defense, UC Berkeley EECS and UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S., and Cunningham, R. A taxonomy of computer worms.",
                "In Proceedings of the ACM Workshop on Rapid Malware (WORM) (2003). 329"
            ],
            "original_annotated_samples": [
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: <br>intrusion detection</br>; D.4.6 [Security and Protection]: Invasive software General Terms Experimentation, Security 1.",
                "Moreover, in recent years the study of swarm intelligence has become increasingly important in the fields of robotics, the design of Mobile ad-hoc Networks (MANETS), the design of <br>intrusion detection</br> Systems, the study of traffic patterns in transportation systems, in military applications, and other areas, see [3].",
                "Some of the most interesting and pressing problems to be consider are as follows: â¢ Is it possible to apply some of learning concepts developed over the last ten years in the areas of swarm intelligence, agent systems, and distributed control to the design of sophisticated swarm worms in such a way that true emergent behavior takes place? â¢ Are the current techniques being developed in the design of <br>intrusion detection</br> & CounterMeasure Systems and Survivable systems effective against this new class of worms? ; and â¢ What techniques, if any, can be developed to create defenses against swarm worms? 6.",
                "ACKNOWLEDGMENTS This work was conducted as part of a larger effort in the development of next generation <br>intrusion detection</br> & CounterMeasure Systems at WSSRL."
            ],
            "translated_annotated_samples": [
                "CategorÃ­as y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: DetecciÃ³n de Intrusiones; D.4.6 [Seguridad y ProtecciÃ³n]: Software Invasivo TÃ©rminos Generales ExperimentaciÃ³n, Seguridad 1.",
                "AdemÃ¡s, en los Ãºltimos aÃ±os el estudio de la inteligencia de enjambre ha cobrado cada vez mÃ¡s importancia en los campos de la robÃ³tica, el diseÃ±o de Redes MÃ³viles Ad-hoc (MANETS), el diseÃ±o de <br>Sistemas de DetecciÃ³n de Intrusiones</br>, el estudio de patrones de trÃ¡fico en sistemas de transporte, en aplicaciones militares y otras Ã¡reas, ver [3].",
                "Algunos de los problemas mÃ¡s interesantes y urgentes a considerar son los siguientes: â¢ Â¿Es posible aplicar algunos de los conceptos de aprendizaje desarrollados en los Ãºltimos diez aÃ±os en las Ã¡reas de inteligencia de enjambre, sistemas de agentes y control distribuido al diseÃ±o de gusanos de enjambre sofisticados de tal manera que se produzca un verdadero comportamiento emergente? â¢ Â¿Son efectivas las tÃ©cnicas actuales que se estÃ¡n desarrollando en el diseÃ±o de Sistemas de DetecciÃ³n y Contramedidas de IntrusiÃ³n y sistemas supervivientes contra esta nueva clase de gusanos?; y â¢ Â¿QuÃ© tÃ©cnicas, si las hay, se pueden desarrollar para crear defensas contra los gusanos de enjambre? 6.",
                "AGRADECIMIENTOS Este trabajo se realizÃ³ como parte de un esfuerzo mÃ¡s amplio en el desarrollo de sistemas de DetecciÃ³n de Intrusiones y Contramedidas de prÃ³xima generaciÃ³n en WSSRL."
            ],
            "translated_text": "Un AnÃ¡lisis Inicial y PresentaciÃ³n de Malware que Exhibe Comportamiento Similar a un Enjambre por Fernando C. ColÃ³n Osorio Laboratorio de InvestigaciÃ³n en Seguridad de Sistemas InalÃ¡mbricos (W.S.S.R.L.) El Slammer, que actualmente es el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada, se observÃ³ infectando el 90 por ciento de todos los hosts vulnerables de Internet en 10 minutos. Aunque la acciÃ³n principal que realiza el gusano Slammer es una replicaciÃ³n relativamente poco sofisticada de sÃ­ mismo, se propaga tan rÃ¡pidamente que la respuesta humana fue ineficaz. La mayorÃ­a de las estrategias de contramedidas propuestas se basan principalmente en la detecciÃ³n de tasas y algoritmos de limitaciÃ³n. Sin embargo, se estÃ¡n diseÃ±ando y desarrollando estrategias para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En nuestro trabajo, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n radicalmente diferentes, y posiblemente dichas tÃ©cnicas resultarÃ¡n ineficaces. EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. La Inteligencia Emergente es el comportamiento de sistemas, muy similar a sistemas biolÃ³gicos como hormigas o abejas, donde las interacciones locales simples de miembros autÃ³nomos, con acciones primitivas simples, dan lugar a un comportamiento global complejo e inteligente. En este manuscrito introduciremos los principios bÃ¡sicos detrÃ¡s de la idea de los Gusanos en Enjambre, asÃ­ como la estructura bÃ¡sica requerida para ser considerado un gusano en enjambre. AdemÃ¡s, presentaremos resultados preliminares sobre las velocidades de propagaciÃ³n de un gusano de enjambre llamado gusano ZachiK. Demostraremos que ZachiK es capaz de propagarse a una velocidad 2 Ã³rdenes de magnitud mÃ¡s rÃ¡pida que gusanos similares sin capacidades de enjambre. CategorÃ­as y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: DetecciÃ³n de Intrusiones; D.4.6 [Seguridad y ProtecciÃ³n]: Software Invasivo TÃ©rminos Generales ExperimentaciÃ³n, Seguridad 1. INTRODUCCIÃN Y TRABAJO PREVIO En las primeras horas de la maÃ±ana (05:30 GMT) del 25 de enero de 2003, el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada comenzÃ³ a propagarse por Internet. Dentro de los 10 minutos posteriores al primer huÃ©sped infectado (paciente cero), el 90 por ciento de todos los huÃ©spedes vulnerables habÃ­an sido comprometidos, creando una interrupciÃ³n significativa en la infraestructura de Internet a nivel global. Vern Paxson del Instituto Internacional de Ciencias de la ComputaciÃ³n y del Laboratorio Nacional Lawrence Berkeley comentÃ³ en su anÃ¡lisis de Slammer: El gusano Slammer se propagÃ³ tan rÃ¡pidamente que la respuesta humana fue ineficaz, ver [4]. La parte interesante, desde nuestro punto de vista, sobre la propagaciÃ³n de Slammer es que era un gusano relativamente poco sofisticado con un comportamiento benigno, es decir, la auto-reproducciÃ³n. Desde Slammer, los investigadores han explorado los comportamientos de los gusanos de propagaciÃ³n rÃ¡pida y han diseÃ±ado estrategias de contramedidas basadas principalmente en la detecciÃ³n de la velocidad y algoritmos de limitaciÃ³n. Por ejemplo, Zou, et al., [2], propusieron un esquema donde se utiliza un filtro de Kalman para detectar la propagaciÃ³n temprana de un gusano. Otros investigadores han propuesto el uso de detectores donde las tasas de mensajes de Destino Inalcanzable son monitoreadas por los firewalls, y un aumento significativo mÃ¡s allÃ¡ de lo normal alerta a la organizaciÃ³n sobre la posible presencia de un gusano. Sin embargo, tales estrategias sufren del sÃ­ndrome de luchar la Ãºltima guerra. Es decir, se estÃ¡n diseÃ±ando y desarrollando sistemas para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En el trabajo descrito aquÃ­, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n diferentes, y por lo tanto, dichas tÃ©cnicas pueden tener algunas limitaciones significativas. EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. El concepto de inteligencia emergente fue estudiado por primera vez en asociaciÃ³n con sistemas biolÃ³gicos. En tales estudios, los primeros investigadores descubrieron una variedad de comportamientos interesantes de insectos o animales en la naturaleza. Una bandada de pÃ¡jaros cruza el cielo. Un grupo de hormigas busca comida. Una escuela de peces nada, gira, huye juntos lejos de un depredador, y asÃ­ sucesivamente. En general, este tipo de movimiento agregado se ha llamado comportamiento de enjambre. Los biÃ³logos y cientÃ­ficos de la computaciÃ³n en el campo de la inteligencia artificial han estudiado tales enjambres biolÃ³gicos y han intentado crear modelos que expliquen cÃ³mo interactÃºan los elementos de un enjambre, logran objetivos y evolucionan. AdemÃ¡s, en los Ãºltimos aÃ±os el estudio de la inteligencia de enjambre ha cobrado cada vez mÃ¡s importancia en los campos de la robÃ³tica, el diseÃ±o de Redes MÃ³viles Ad-hoc (MANETS), el diseÃ±o de <br>Sistemas de DetecciÃ³n de Intrusiones</br>, el estudio de patrones de trÃ¡fico en sistemas de transporte, en aplicaciones militares y otras Ã¡reas, ver [3]. Los conceptos bÃ¡sicos que se han desarrollado en la Ãºltima dÃ©cada para explicar los enjambres y su comportamiento incluyen cuatro componentes bÃ¡sicos. Estos son: 1. Sencillez de la lÃ³gica y acciones: Un enjambre estÃ¡ compuesto por N agentes cuya inteligencia es limitada. Los agentes en el enjambre utilizan reglas locales simples para gobernar sus acciones. Algunos modelos llaman a estas acciones o comportamientos primitivos; 2. Mecanismos de comunicaciÃ³n local: Los agentes interactÃºan con otros miembros en el enjambre a travÃ©s de simples mecanismos de comunicaciÃ³n local. Por ejemplo, un pÃ¡jaro en una bandada percibe la posiciÃ³n del pÃ¡jaro adyacente y aplica una regla simple de evitaciÃ³n y seguimiento. 3. Control distribuido: Los agentes autÃ³nomos interactÃºan con su entorno, que probablemente consiste en otros agentes, pero actÃºan relativamente de forma independiente de todos los demÃ¡s agentes. No hay un mando central o lÃ­der, y ciertamente no hay un plan global. Inteligencia emergente: El comportamiento agregado de agentes autÃ³nomos resulta en comportamientos inteligentes complejos, incluyendo la autoorganizaciÃ³n. Para comprender completamente el comportamiento de tales enjambres, es necesario construir un modelo que explique el comportamiento de lo que llamaremos gusanos genÃ©ricos. Este modelo, que amplÃ­a el trabajo de Weaver [5], se presenta aquÃ­ en la secciÃ³n 2. AdemÃ¡s, tenemos la intenciÃ³n de ampliar dicho modelo de tal manera que explique claramente los comportamientos de esta nueva clase de gusanos potencialmente peligrosos llamados Gusanos en Enjambre. Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biolÃ³gicos y muestran un alto grado de aprendizaje, comunicaciÃ³n e inteligencia distribuida. Tales gusanos en enjambre son potencialmente mÃ¡s daÃ±inos que sus contrapartes genÃ©ricas similares. EspecÃ­ficamente, la primera instancia, segÃºn nuestro conocimiento, de un gusano de aprendizaje de este tipo fue creado, llamado ZachiK. ZachiK es un gusano enjambre de descifrado de contraseÃ±as simple que incorpora diferentes estrategias de aprendizaje y comparticiÃ³n de informaciÃ³n. Un gusano de enjambre similar fue desplegado tanto en una red de Ã¡rea local de treinta (30) hosts, como simulado en una topologÃ­a de 10,000 nodos. Los resultados preliminares mostraron que dichos gusanos son capaces de comprometer a los anfitriones a velocidades hasta dos Ã³rdenes de magnitud mÃ¡s rÃ¡pidas que su contraparte genÃ©rica. El resto de este manuscrito estÃ¡ estructurado de la siguiente manera. En la secciÃ³n 2 se presenta un modelo abstracto tanto de gusanos genÃ©ricos como de gusanos en enjambre. Este modelo se utiliza en la secciÃ³n 2.6 para describir la primera instancia de un gusano enjambre, ZachiK. En la secciÃ³n 4, se presentan resultados preliminares a travÃ©s de mediciones empÃ­ricas y simulaciones. Finalmente, en la secciÃ³n 5 se presentan nuestras conclusiones y perspectivas sobre trabajos futuros. MODELADO DE GUSANOS Para estudiar el comportamiento de los gusanos en enjambre en general, es necesario crear un modelo que refleje de manera realista la estructura de los gusanos y que no estÃ© necesariamente ligado a una instancia especÃ­fica. En esta secciÃ³n, describimos un modelo en el que un gusano general se describe como teniendo cuatro (4) componentes bÃ¡sicos o subfunciones. Por definiciÃ³n, un gusano es un programa autocontenido y auto propagante. Por lo tanto, en tÃ©rminos simples, tiene dos funciones principales: la que se propaga y la que realiza otras tareas. Proponemos que hay una tercera amplia funcionalidad de un gusano, la de autoconservaciÃ³n. TambiÃ©n proponemos que la otra funcionalidad de un gusano podrÃ­a ser categorizada de manera mÃ¡s apropiada como Acciones Basadas en Objetivos (ABO), ya que cualquier funcionalidad incluida en un gusano dependerÃ¡ naturalmente de los objetivos (y subobjetivos) que tenga el autor. El trabajo presentado por Weaver et al. en [5] nos proporciona principalmente una taxonomÃ­a de gusanos informÃ¡ticos basada en acciones y tÃ©cnicas, la cual utilizamos y ampliamos aquÃ­. 2.1 PropagaciÃ³n La funciÃ³n de propagaciÃ³n en sÃ­ misma puede desglosarse en tres acciones: adquirir objetivo, enviar escaneo e infectar objetivo. Adquirir el objetivo simplemente significa elegir un anfitriÃ³n para atacar a continuaciÃ³n. Enviar un escaneo implica verificar si ese host estÃ¡ receptivo a un intento de infecciÃ³n, ya que el espacio de direcciones IP estÃ¡ escasamente poblado. Esto puede implicar un simple ping para verificar si el host estÃ¡ activo o una evaluaciÃ³n completa de vulnerabilidades. Infectar al objetivo es el mÃ©todo real utilizado para enviar el cÃ³digo del gusano al nuevo hospedador. En forma de algoritmo: propagar() { host := adquirir_objetivo() Ã©xito := enviar_escaneo(host) si( Ã©xito ) entonces infectar(host) fin si } En el caso de un gusano simple que no verifica primero si el host estÃ¡ disponible o susceptible (como Slammer), se elimina el mÃ©todo de escaneo: propagar() { host := adquirir_objetivo() infectar(host) } Cada una de estas acciones puede tener un costo asociado a su inclusiÃ³n y ejecuciÃ³n, como un aumento en el tamaÃ±o del gusano y la carga de CPU o red. Dependiendo de las necesidades o requisitos de los autores, estos se convierten en factores limitantes en lo que puede incluirse en las acciones de los gusanos. Esto se discute mÃ¡s a fondo despuÃ©s de expandir sobre estas acciones a continuaciÃ³n. 2.2 AdquisiciÃ³n de Objetivos: La fase de AdquisiciÃ³n de Objetivos de nuestro algoritmo de gusano se construye directamente a partir de la secciÃ³n de Descubrimiento de Objetivos en [5]. Weaver et al. clasifican esta tarea en 5 categorÃ­as separadas. AquÃ­, ampliamos aÃºn mÃ¡s su trabajo a travÃ©s de la parametrizaciÃ³n. Escaneo: El escaneo puede considerarse un mÃ©todo basado en ecuaciones para elegir un anfitriÃ³n. Cualquier tipo de ecuaciÃ³n puede ser utilizada para llegar a una direcciÃ³n IP, pero hasta ahora se han visto tres tipos principales: secuencial, aleatorio y preferencia local. El escaneo secuencial es exactamente como suena: comenzar en una direcciÃ³n IP e incrementar a travÃ©s de todo el espacio de direcciones IP. Esto podrÃ­a llevar consigo las opciones de quÃ© IP empezar (valor elegido por el usuario, aleatorio o basado en la IP del host infectado) y cuÃ¡ntas veces incrementar (continuo, valor elegido o basado en subred). El escaneo aleatorio es completamente al azar (dependiendo del mÃ©todo PRNG elegido y su valor de semilla). El escaneo de preferencia local es una variante de Secuencial o Aleatorio, en la que tiene una mayor probabilidad de elegir una direcciÃ³n IP local en lugar de una remota (por ejemplo, la divisiÃ³n tradicional de 80/20). Listas de objetivos pregeneradas: Las listas de objetivos pregeneradas, o tambiÃ©n llamadas listas de objetivos, podrÃ­an incluir opciones para el porcentaje de la poblaciÃ³n total y el porcentaje de errores, o simplemente el nÃºmero de direcciones IP a incluir. ImplÃ­cito en este tipo es el hecho de que la lista se divide entre un padre y sus hijos, evitando el problema de que cada instancia golpee exactamente las mismas mÃ¡quinas. Listas de objetivos generadas externamente: Las listas de objetivos generadas externamente dependen de una o mÃ¡s fuentes externas que pueden ser consultadas para obtener datos del host. Esto implicarÃ¡ servidores que normalmente estÃ¡n pÃºblicamente disponibles, como los meta-servidores de juegos, o aquellos configurados explÃ­citamente por el gusano o el autor del gusano. Los meta-servidores normalmente disponibles podrÃ­an tener parÃ¡metros para tasas de cambio, como muchos apareciendo por la noche o desapareciendo por la maÃ±ana. Cada servidor tambiÃ©n podrÃ­a tener un mÃ¡ximo de consultas por segundo que serÃ­a capaz de manejar. El gusano tambiÃ©n necesitarÃ­a una forma de encontrar estos servidores, ya sea codificada en duro o a travÃ©s de escaneo. Listas de Objetivos Internos: Las Listas de Objetivos Internos dependen en gran medida del host infectado. Este mÃ©todo podrÃ­a parametrizar la elecciÃ³n de cuÃ¡nta informaciÃ³n hay en el host, como todas las mÃ¡quinas en la subred, todas las computadoras con Windows en la subred, servidores especÃ­ficos, nÃºmero de internos/externos, o alguna combinaciÃ³n. Los mÃ©todos pasivos son determinados por las interacciones normales entre los anfitriones. Los parÃ¡metros pueden incluir una tasa de interacciÃ³n con mÃ¡quinas particulares, una tasa de interacciÃ³n interna/externa, o una tasa de interacciÃ³n basada en subredes. Cualquiera de estos mÃ©todos tambiÃ©n puede combinarse para producir diferentes tipos de estrategias de adquisiciÃ³n de objetivos. Por ejemplo, un gusano puede comenzar con una lista inicial de 100 hosts o subredes diferentes. Una vez que haya agotado su bÃºsqueda utilizando la lista de Ã©xitos, puede proceder a realizar un escaneo aleatorio con un sesgo local del 50%. Es importante tener en cuenta, sin embargo, que el consumo de recursos de cada mÃ©todo no es el mismo. Diferentes mÃ©todos pueden requerir que el gusano sea grande, como los bytes adicionales necesarios para una lista de objetivos, o que tome mÃ¡s tiempo de procesamiento, como al buscar direcciones de otros hosts vulnerables en el host. Se deben realizar investigaciones y anÃ¡lisis adicionales en esta Ã¡rea para determinar los costos asociados de utilizar cada mÃ©todo. Los costos podrÃ­an ser utilizados para determinar los compromisos de diseÃ±o en los que los autores de gusanos participan. Por ejemplo, las listas de objetivos proporcionan una alta tasa de infecciÃ³n, pero a un alto costo en el tamaÃ±o de la carga Ãºtil del gusano. 2.2.1 EnvÃ­o de un Escaneo La funciÃ³n de envÃ­o de escaneo prueba si el host estÃ¡ disponible para la infecciÃ³n. Esto puede ser tan simple como verificar si el host estÃ¡ activo en la red o tan complejo como verificar si el host es vulnerable al exploit que se utilizarÃ¡. El envÃ­o de un escaneo antes de intentar una infecciÃ³n puede aumentar la tasa de escaneo si el costo por fallar en una infecciÃ³n es mayor que el costo de fallar en un escaneo o de enviar un escaneo mÃ¡s una infecciÃ³n; y las fallas son mÃ¡s frecuentes que los Ã©xitos. Un parÃ¡metro importante para esto serÃ­a la elecciÃ³n del protocolo de transporte (TCP/UDP) o simplemente el tiempo para un escaneo exitoso y el tiempo para un escaneo fallido. AdemÃ¡s, ya sea que se pruebe si el host estÃ¡ activo o si es una prueba completa de la vulnerabilidad (o de mÃºltiples vulnerabilidades). 2.2.2 Vector de InfecciÃ³n (VI) El vector de infecciÃ³n particular utilizado para acceder al host remoto depende principalmente de la vulnerabilidad especÃ­fica elegida para explotar. En un sentido no especÃ­fico, depende del protocolo de transporte elegido para usar y del tamaÃ±o del mensaje que se va a enviar. La SecciÃ³n 3 de [5] tambiÃ©n propone tres clases particulares de IV: Autotransportado, segundo canal e incrustado. 2.3 AutopreservaciÃ³n Las acciones de autopreservaciÃ³n de un gusano pueden tomar muchas formas. En la naturaleza, se ha observado que los gusanos desactivan el software antivirus o evitan enviarse a ciertas direcciones conocidas por los antivirus. TambiÃ©n se ha observado que intentan deshabilitar otros gusanos que podrÃ­an estar compitiendo por el mismo sistema. TambiÃ©n creemos que un escaneo con limitaciÃ³n de tiempo podrÃ­a ayudar al gusano a pasar desapercibido. TambiÃ©n proponemos un mÃ©todo de seÃ±uelo, mediante el cual un gusano liberarÃ¡ a unos pocos hijos que causen mucho ruido para que el progenitor no sea notado. TambiÃ©n se ha propuesto [5] que un gusano cause daÃ±o a su huÃ©sped si, y solo si, se ve perturbado de alguna manera. Este mÃ³dulo podrÃ­a contener parÃ¡metros para: probabilidad de Ã©xito en deshabilitar actualizaciones de antivirus u otro software, probabilidad de ser detectado y por ende eliminado, o fortalecimiento del anfitriÃ³n contra otros gusanos. 2.4 Acciones Basadas en Objetivos La funcionalidad de GBA de un gusano depende de la lista de objetivos del autor. La secciÃ³n de Cargas Ãºtiles de [5] proporciona algunas sugerencias Ãºtiles para dicho mÃ³dulo. La apertura de una puerta trasera puede hacer que el anfitriÃ³n sea susceptible a mÃ¡s ataques. Esto implicarÃ­a una probabilidad de que se utilice la puerta trasera y cualquier utilizaciÃ³n de trÃ¡fico asociada. TambiÃ©n podrÃ­a proporcionar una lista de otros gusanos a los que este hospedador es ahora susceptible o una lista de vulnerabilidades que este hospedador tiene ahora. Los retransmisores de spam y los servidores proxy HTTP, por supuesto, tienen un consumo de ancho de banda o un patrÃ³n de trÃ¡fico asociado. Los ataques de denegaciÃ³n de servicio en Internet tendrÃ­an un tiempo de activaciÃ³n establecido, un objetivo y un patrÃ³n de trÃ¡fico. El daÃ±o de los datos tendrÃ­a una probabilidad asociada de que el anfitriÃ³n muera debido al daÃ±o. En la Figura 1, se resume este modelo general de un gusano. Por favor, tenga en cuenta que en este modelo no hay aprendizaje, o muy poco, intercambio de informaciÃ³n entre las instancias de gusano, y ciertamente no hay coordinaciÃ³n de acciones. En la siguiente secciÃ³n ampliamos el modelo para incluir dichos mecanismos, y por lo tanto, llegamos al modelo general de un gusano en enjambre. 2.5 Enjambres - Modelo General Como se describe en la secciÃ³n 1, las caracterÃ­sticas bÃ¡sicas que distinguen el comportamiento en enjambre de lo que simplemente parece ser comportamientos colectivos coordinados son cuatro atributos bÃ¡sicos. Estos son: 1. Sencillez de lÃ³gica y acciones; 2. Mecanismos de ComunicaciÃ³n Local; 3. Control distribuido; y 4. Inteligencia emergente, incluyendo autoorganizaciÃ³n. 325 Estructura FunciÃ³n/Ejemplo InfecciÃ³n, Vector de InfecciÃ³n El ejecutable se ejecuta ProtecciÃ³n y sigilo Deshabilitar McAfee (Mantenerse vivo) PropagaciÃ³n Enviar correo electrÃ³nico a todos en la libreta de direcciones AcciÃ³n basada en objetivos (ABO) DDoS www.sco.com Todo lo demÃ¡s, a menudo llamado carga Ãºtil Figura 1: Modelo general de gusano En este trabajo agregamos todos estos atributos bajo el tÃ­tulo general de Aprendizaje, ComunicaciÃ³n y Control Distribuido. La presencia de estos atributos distingue a los gusanos de enjambre de los gusanos regulares, u otros tipos de malware como los Zombies. En la figura ? ?, el modelo genÃ©rico de un gusano se amplÃ­a para incluir este conjunto de acciones. Dentro de este contexto, un gusano como Slammer no puede ser categorizado como un gusano en enjambre debido a que las nuevas instancias del gusano no coordinan sus acciones ni comparten informaciÃ³n. Por otro lado, los zombies y muchas otras formas de DDoS, que a primera vista pueden considerarse gusanos enjambre, no lo son. Esto se debe simplemente al hecho de que en el caso de los zombies, el control no estÃ¡ distribuido sino centralizado, y no surgen comportamientos emergentes. Lo Ãºltimo, la posible apariciÃ³n de inteligencia o nuevos comportamientos es lo que hace que los gusanos en enjambre sean potencialmente peligrosos. Finalmente, cuando se considera la mayorÃ­a de las interrupciones recientes en la Infraestructura de Internet, y a la luz de nuestra descripciÃ³n de los ataques en enjambre, entonces dichas interrupciones pueden ser fÃ¡cilmente categorizadas como precursores de un comportamiento verdaderamente en enjambre. EspecÃ­ficamente, â¢ DDOS: Un gran nÃºmero de hosts comprometidos envÃ­an paquetes inÃºtiles que requieren procesamiento (Stacheldraht, http://www.cert.org/incidentnotes/IN-99-04.html). Los ataques DDoS son los precursores tempranos de los Ataques en Enjambre debido al gran nÃºmero de agentes involucrados. â¢ Code Red CrV1, Code Red II, Nimbda - Exhiben nociones tempranas de ataques en enjambre, incluyendo un canal de comunicaciÃ³n oculto. â¢ Staniford & Paxson en Â¿CÃ³mo Dominar Internet en Tu Tiempo Libre? exploran modificaciones a CrV1, Code Red I, II con un tipo de comportamiento similar a un enjambre. Por ejemplo, especulan sobre nuevos gusanos que emplean comunicaciÃ³n directa de gusano a gusano y utilizan actualizaciones programables. Por ejemplo, el gusano Warhol y los gusanos de Permutation-Scanning (autocoordinados). 2.6 Gusano Swarm: los detalles Al considerar la creaciÃ³n de lo que creÃ­amos que era el primer Gusano Swarm en existencia, querÃ­amos adherirnos lo mÃ¡s cercanamente posible al modelo general presentado en la secciÃ³n ? ? mientras facilitÃ¡bamos al mismo tiempo un anÃ¡lisis a gran escala, tanto empÃ­rico como a travÃ©s de simulaciones, del comportamiento del enjambre. Por esta razÃ³n, seleccionamos como primera instancia Estructura FunciÃ³n/Ejemplo InfecciÃ³n, InfecciÃ³n Vector Ejecutable se ejecuta ProtecciÃ³n y Sigilo Deshabilitar McAfee (ManteniÃ©ndose Vivo) PropagaciÃ³n Enviar correo electrÃ³nico a todos en la libreta de direcciones Aprendizaje, ComunicaciÃ³n, Feromonas/Banderas (Prueba y Control Distribuido si el Gusano ya estÃ¡ presente) Bombas de tiempo, Algoritmos de Aprendizaje, Canal IRC AcciÃ³n Basada en Objetivos (ABO) DDoS www.sco.com Todo lo demÃ¡s, a menudo llamado carga Ãºtil Figura 2: Modelo General de un Gusano de Enjambre del enjambre un gusano simple de craqueo de contraseÃ±as. El objetivo de este gusano simplemente es infectar a un anfitriÃ³n intentando secuencialmente iniciar sesiÃ³n en el anfitriÃ³n utilizando contraseÃ±as conocidas (ataque de diccionario), contraseÃ±as que han sido descubiertas previamente por cualquier miembro del enjambre, y contraseÃ±as aleatorias. Una vez que un huÃ©sped estÃ¡ infectado, el gusano crearÃ¡ canales de comunicaciÃ³n tanto con sus vecinos conocidos en ese momento, como con cualquier descendencia que genere con Ã©xito. En este contexto, una generaciÃ³n exitosa de una descendencia significa simplemente infectar a un nuevo huÃ©sped y replicar una copia exacta de sÃ­ misma en dicho huÃ©sped. Llamamos a este gusano enjambre el gusano ZachiK en honor a uno de sus creadores. Como se puede ver en esta descripciÃ³n, el gusano ZachiK exhibe todos los elementos descritos anteriormente. En las siguientes secciones, describimos detalladamente cada uno de los elementos del gusano ZachiK. 2.7 Vector de InfecciÃ³n El vector de infecciÃ³n utilizado por el gusano ZachiK es el protocolo de shell seguro SSH. Se escribiÃ³ un cliente modificado que es capaz de recibir contraseÃ±as desde la lÃ­nea de comandos, e integrado con un script que le suministra diversas contraseÃ±as: conocidas y aleatorias. Cuando se encuentra una contraseÃ±a para un objetivo adecuado, comienza el proceso de infecciÃ³n. DespuÃ©s de descubrir la contraseÃ±a de root de un host, el gusano infecta el host objetivo y se replica a sÃ­ mismo. El gusano crea un nuevo directorio en el host objetivo, copia el cliente ssh modificado, el script, los servidores de comunicaciones y las versiones actualizadas de los archivos de datos (lista de contraseÃ±as conocidas y una lista de vecinos actuales). Luego ejecuta el script modificado en los hosts reciÃ©n infectados, lo que genera el servidor de comunicaciones, notifica a los vecinos y comienza a buscar nuevos objetivos. Se podrÃ­a argumentar, de manera correcta, que el gusano ZachiK puede ser fÃ¡cilmente derrotado por las tÃ©cnicas de contramedidas actuales presentes en la mayorÃ­a de los sistemas hoy en dÃ­a, como la prohibiciÃ³n de accesos directos de root desde la red. Dentro de este contexto, ZachiK puede ser rÃ¡pidamente descartado como un gusano muy simple e inofensivo que no requiere un estudio adicional. Sin embargo, el lector deberÃ­a considerar lo siguiente: 1. ZachiK se puede modificar fÃ¡cilmente para incluir una variedad de vectores de infecciÃ³n. Por ejemplo, podrÃ­a programarse para adivinar nombres de usuario comunes y sus contraseÃ±as; obtener acceso al sistema, luego adivinar la contraseÃ±a de root o utilizar otras vulnerabilidades conocidas para obtener privilegios de root. ZachiK es un gusano de prueba de concepto. La importancia de ZachiK radica en que incorpora todos los comportamientos de un gusano en enjambre, incluyendo, pero no limitÃ¡ndose a, el control distribuido, la comunicaciÃ³n entre agentes y el aprendizaje; 3. ZachiK estÃ¡ compuesto por una gran colecciÃ³n de agentes que operan de forma independiente, lo que se presta naturalmente a algoritmos paralelos como la bÃºsqueda paralela del espacio de direcciones IPV4. Dentro de este contexto, SLAMMER incorpora una capacidad de bÃºsqueda paralela de direcciones potencialmente susceptibles. Sin embargo, a diferencia de ZachiK, el conocimiento descubierto por la bÃºsqueda nunca se comparte entre los agentes. Por estas razones, y muchas otras, no se debe descartar el potencial de esta nueva clase de gusanos, sino mÃ¡s bien abrazar su estudio. 2.8 AutopreservaciÃ³n En el caso del gusano ZachiK, las principales tÃ©cnicas de autopreservaciÃ³n utilizadas son simplemente mantener el tamaÃ±o de la carga Ãºtil pequeÃ±o. En este contexto, esto simplemente significa restringir la cantidad de contraseÃ±as que una descendencia hereda, enmascarar mensajes de gusano como solicitudes http comunes y limitar el nÃºmero de vecinos a un mÃ¡ximo de cinco-(5). 2.9 PropagaciÃ³n Elegir el(los) prÃ³ximo(s) objetivo(s) de manera eficiente requiere reflexiÃ³n. En el pasado, los gusanos conocidos y propuestos, ver [5], han aplicado tÃ©cnicas de propagaciÃ³n que variaban. Estos incluyen: selecciÃ³n estrictamente aleatoria de un posible anfitriÃ³n vulnerable; listas de objetivos de anfitriones vulnerables; selecciÃ³n aleatoria localmente sesgada (seleccionar un objetivo de anfitriÃ³n al azar de una subred local); y una combinaciÃ³n de algunas o todas las anteriores. En nuestros entornos de prueba y simulaciÃ³n, aplicaremos una combinaciÃ³n de selecciÃ³n localmente sesgada y totalmente aleatoria de posibles hosts vulnerables. Sin embargo, debido a que el gusano ZachiK es un gusano enjambre, la informaciÃ³n de descubrimiento de direcciones (es decir, cuando se descubren direcciones inexistentes) se compartirÃ¡ entre los miembros del enjambre. Los hilos de infecciÃ³n y propagaciÃ³n realizan el siguiente conjunto de actividades repetidamente: â¢ Elegir una direcciÃ³n â¢ Verificar la validez de la direcciÃ³n â¢ Elegir un conjunto de contraseÃ±as â¢ Intentar infectar al host seleccionado con este conjunto de contraseÃ±as. Como se describiÃ³ anteriormente, la elecciÃ³n de una direcciÃ³n hace uso de una combinaciÃ³n de selecciÃ³n aleatoria, sesgo local y listas de objetivos. EspecÃ­ficamente, para elegir una direcciÃ³n, la instancia puede: â¢ Generar una nueva direcciÃ³n aleatoria â¢ Generar una direcciÃ³n en la red local â¢ Elegir una direcciÃ³n de una lista de transferencia La elecciÃ³n se realiza de forma aleatoria entre estas opciones, y puede variarse para probar la dependencia de la propagaciÃ³n en elecciones particulares. Las contraseÃ±as son elegidas de una lista de contraseÃ±as conocidas o generadas recientemente. Cuando una infecciÃ³n de una direcciÃ³n vÃ¡lida falla, se agrega a una lista de entregas, que se envÃ­a a los vecinos para intentar solucionar el problema. 2.10 Aprendizaje, ComunicaciÃ³n y Control Distribuido 2.10.1 ComunicaciÃ³n El concepto de un enjambre se basa en la transferencia de informaciÃ³n entre vecinos, quienes retransmiten sus nuevos mensajes entrantes a sus vecinos, y asÃ­ sucesivamente hasta que cada instancia del gusano en el enjambre estÃ© al tanto de estos mensajes. Hay dos clases de mensajes: mensajes de datos o informaciÃ³n y comandos. Los mensajes de comando estÃ¡n destinados a un usuario externo (tambiÃ©n conocidos como hackers y/o crackers) para controlar las acciones de las instancias, y actualmente no estÃ¡n implementados. Los mensajes de informaciÃ³n actualmente son de tres tipos: nuevo miembro, contraseÃ±as y direcciones explotables (transferencias). Los mensajes de nuevo miembro son mensajes que una nueva instancia envÃ­a a los vecinos en su lista (corta) de vecinos iniciales. Los vecinos luego registran estas instancias en su lista de vecinos. Estos son mensajes que forman la multi-conectividad del enjambre, y sin ellos, la topologÃ­a serÃ­a una estructura en forma de Ã¡rbol, donde la eliminaciÃ³n de un solo nodo harÃ­a que las instancias debajo de Ã©l fueran inaccesibles. Los mensajes de contraseÃ±as informan instancias de contraseÃ±as reciÃ©n descubiertas, y al informar a todas las instancias, el enjambre en su totalidad recopila esta informaciÃ³n, lo que le permite infectar nuevas instancias de manera mÃ¡s efectiva. Los mensajes de entrega informan instancias de direcciones vÃ¡lidas que no pudieron ser comprometidas (fallaron al romper la contraseÃ±a de la cuenta root). Dado que el espacio de direcciones es bastante disperso, lleva un tiempo relativamente largo (es decir, muchos intentos) descubrir una direcciÃ³n vÃ¡lida. Por lo tanto, al entregar las direcciones vÃ¡lidas descubiertas, el enjambre estÃ¡ (a) conservando energÃ­a al no redescubrir las mismas direcciones (b) atacando de manera mÃ¡s efectiva. De cierta manera, esto es una simple instancia de actividad coordinada de un enjambre. 2.10.2 CoordinaciÃ³n Cuando nace una instancia de gusano, transmite su existencia a todos los vecinos en su lista. El hilo principal luego genera algunas hebras de infecciÃ³n y continÃºa manejando mensajes entrantes (registrando vecinos, agregando nuevas contraseÃ±as, recibiendo direcciones y transmitiendo estos mensajes). 2.10.3 Control Distribuido El control en el gusano ZachiK es distribuido en el sentido de que cada instancia del gusano realiza un conjunto de acciones de forma independiente de cada otra instancia, al mismo tiempo que se beneficia del aprendizaje logrado por sus vecinos inmediatos. 2.11 Acciones Basadas en Objetivos La primera instancia del gusano ZachiK tiene dos objetivos bÃ¡sicos. Estos son: (1) propagar, y (2) descubrir y compartir con los miembros de la colonia nuevas contraseÃ±as de root. 3. DISEÃO EXPERIMENTAL Para verificar nuestra hipÃ³tesis de que los Gusanos de Enjambre son mÃ¡s capaces y, por lo tanto, mÃ¡s peligrosos que otros 327 gusanos conocidos, se creÃ³ un banco de pruebas de red y se desarrollÃ³ un simulador capaz de simular topologÃ­as a gran escala similares a Internet (espacio IPV4). El banco de pruebas de red consistÃ­a en una red de Ã¡rea local de 30 computadoras basadas en Linux. El simulador fue escrito en C++. El gusano de enjambre simple descrito en la secciÃ³n 2.6 se utilizÃ³ para infectar al paciente cero, y luego se permitiÃ³ que el gusano de enjambre se propagara a travÃ©s de sus propios mecanismos de propagaciÃ³n, control distribuido y comportamientos de enjambre. En el caso de una red de Ã¡rea local simple de 30 computadoras, se seleccionaron seis (6) contraseÃ±as raÃ­z diferentes de un espacio de contraseÃ±as de 4 dÃ­gitos (10000 opciones). Al comienzo del experimento se conoce una Ãºnica contraseÃ±a, la del paciente cero. Todas las contraseÃ±as compartidas se distribuyen aleatoriamente en todos los nodos. De manera similar, en el caso de la simulaciÃ³n, se construyÃ³ una topologÃ­a de red de 10,000 hosts cuyas direcciones fueron seleccionadas al azar en el espacio IPV4. Dentro de ese espacio, se seleccionaron y distribuyeron un total de 200 contraseÃ±as compartidas ya sea de forma aleatoria y/o dirigida a subredes especÃ­ficas de topologÃ­as de red. Por ejemplo, en una de nuestras ejecuciones de simulaciÃ³n, la topologÃ­a de red consistÃ­a en 200 subredes, cada una conteniendo 50 hosts. En dicha topologÃ­a, las contraseÃ±as compartidas se distribuÃ­an en subredes donde un porcentaje variable de contraseÃ±as se compartÃ­an entre subredes. Los porcentajes de contraseÃ±as compartidas utilizadas reflejaban los primeros estudios empÃ­ricos, donde se descubriÃ³ que hasta el 39.7% de las contraseÃ±as comunes eran compartidas. RESULTADOS En la Figura 3 se presentan los resultados comparando el comportamiento del Ataque de Enjambre versus el de un Gusano Malformado tÃ­pico para una LAN de 30 nodos. En este conjunto de ejecuciones empÃ­ricas, seis (6) contraseÃ±as compartidas fueron distribuidas al azar en todos los nodos de un total de 10,000 contraseÃ±as desconocidas posibles. Los datos presentados reflejan los comportamientos de un total de tres (3) clases distintas de gusanos o enjambres de gusanos. La clase de gusanos presentada es la siguiente: â¢ I-NS-NL:= Gusano genÃ©rico, independiente (I), sin aprendizaje/sin memoria (NL), y sin compartir informaciÃ³n con vecinos o descendientes (NS); â¢ S-L-SP:= Gusano en enjambre (S), aprendizaje (L), mantiene una lista de contraseÃ±as aprendidas, y comparte contraseÃ±as (SP) con vecinos mÃ¡s cercanos y descendientes; y â¢ S-L-SP&A:= Gusano en enjambre (S), aprendizaje (L), mantiene una lista de contraseÃ±as aprendidas, y comparte contraseÃ±as y direcciones existentes (SP&A) con vecinos mÃ¡s cercanos y descendientes. Como se muestra en la Figura 3, los resultados validan nuestra hipÃ³tesis original de que los gusanos en enjambre son significativamente mÃ¡s eficientes y peligrosos que los gusanos genÃ©ricos. En este conjunto de experimentos, el compartir contraseÃ±as proporciona una mejora de un orden de magnitud sobre un gusano aleatorio sin memoria. De manera similar, un gusano en enjambre que comparte contraseÃ±as y direcciones es aproximadamente dos Ã³rdenes de magnitud mÃ¡s eficiente que su contraparte genÃ©rica. En la Figura 3, se pueden observar una serie de discontinuidades. Estas discontinuidades son un artefacto del pequeÃ±o espacio muestral utilizado para este experimento. BÃ¡sicamente, tan pronto como se rompe una contraseÃ±a, todos los nodos que comparten esa contraseÃ±a especÃ­fica se infectan en cuestiÃ³n de segundos. Ten en cuenta que es trivial para un gusano en enjambre escanear y descubrir un pequeÃ±o espacio de contraseÃ±as compartidas. En la Figura 4, se presentan los resultados de la simulaciÃ³n comparando el Comportamiento de Ataque de Enjambre con el de un Gusano Malformado GenÃ©rico. En este conjunto de ejecuciones de simulaciÃ³n, se construyÃ³ una topologÃ­a de red de 10,000 hosts, cuyas direcciones fueron seleccionadas aleatoriamente en el espacio IPV4. Dentro de ese espacio, se seleccionaron y distribuyeron un total de 200 contraseÃ±as compartidas ya sea de forma aleatoria y/o dirigida a subredes especÃ­ficas de topologÃ­as de red. Los datos presentados reflejan los comportamientos de tres (3) clases distintas de gusanos o gusanos en enjambre y dos (2) estrategias de exploraciÃ³n de selecciÃ³n de objetivo de host diferentes (exploraciÃ³n aleatoria y sesgo local). La cantidad de sesgo local variÃ³ en mÃºltiples ejecuciones de simulaciÃ³n. Los resultados presentados son comportamientos agregados. En general, se simularon las siguientes clases de Gusanos GenÃ©ricos y Gusanos en Enjambre. ExploraciÃ³n de direcciones: â¢ Aleatoria:= las direcciones se seleccionan al azar de un subconjunto del espacio IPV4, es decir, un espacio de 224 direcciones; y â¢ Sesgo local:= las direcciones se seleccionan al azar de una subred local (256 direcciones) o de un subconjunto del espacio IPV4, es decir, un espacio de 224 direcciones. El porcentaje de sesgo local varÃ­a en mÃºltiples ejecuciones. Aprendizaje, ComunicaciÃ³n y Control Distribuido â¢ I-NL-NS: Gusano genÃ©rico, independiente (I), sin aprendizaje/sin memoria (NL), y sin compartir informaciÃ³n con vecinos o descendientes (NS); â¢ I-L-OOS: Gusano genÃ©rico, independiente (I), con aprendizaje/sin memoria (L), y compartiendo informaciÃ³n una sola vez con descendientes solamente (OOS); â¢ S-L-SP:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte contraseÃ±as (SP) con vecinos mÃ¡s cercanos y descendientes; â¢ S-L-S&AOP:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte direcciones con vecinos y descendientes, comparte contraseÃ±as solo una vez (al crearse) con descendientes (SA&OP); â¢ S-L-SP&A:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte contraseÃ±as y direcciones existentes (SP&A) con vecinos mÃ¡s cercanos y descendientes. Como se muestra en la Figura 4, los resultados son consistentes con nuestro conjunto de resultados empÃ­ricos. AdemÃ¡s, se pueden hacer las siguientes observaciones. 1. La preferencia local es increÃ­blemente efectiva. Las transferencias cortas de direcciÃ³n son mÃ¡s efectivas que las largas. Variamos el tamaÃ±o de la lista permitida en el intercambio de direcciones; el sobrecosto asociado con una lista de direcciones larga es perjudicial para el rendimiento del gusano en enjambre, asÃ­ como para su sigilo; 3. Para el caso de sesgo local, compartir direcciones vÃ¡lidas de host susceptibles, el gusano S-L-S&AOP (recuerde, el enjambre S-L-S&AOP comparte contraseÃ±as, solo una vez, con descendientes 328 en el momento de la creaciÃ³n) es mÃ¡s efectivo que compartir contraseÃ±as en el caso del enjambre S-L-SP. En este caso, podemos pensar en el enjambre como lanzando un ataque de diccionario distribuido: diferentes segmentos del enjambre utilizan diferentes contraseÃ±as para intentar ingresar a hosts no infectados susceptibles. En el modo de sesgo local, al principio de la vida del enjambre, compartir direcciones es mÃ¡s efectivo que compartir contraseÃ±as, hasta que se descubran la mayorÃ­a de las subredes. Entonces, el apuntar a direcciones locales ayuda a descubrir los hosts susceptibles, mientras que los miembros del enjambre necesitan perder tiempo redescubriendo contraseÃ±as; y 4. Infectar el Ãºltimo 0.5% de los nodos lleva mucho tiempo en modo de sesgo no local. BÃ¡sicamente, la lista de contraseÃ±as compartidas entre subredes se ha agotado, y el enjambre vuelve a simplemente descubrir una contraseÃ±a al azar. Figura 3: Comportamiento del Ataque de Enjambre vs Gusano Malformado: Resultados EmpÃ­ricos, LAN de 30 nodos Figura 4: Comportamiento del Ataque de Enjambre vs Gusano Malformado: Resultados de SimulaciÃ³n 5. RESUMEN Y TRABAJO FUTURO En este manuscrito, hemos presentado un modelo abstracto, similar en algunos aspectos al de Weaver [5], que ayuda a explicar la naturaleza genÃ©rica de los gusanos. El modelo presentado en la secciÃ³n 2 se extendiÃ³ para incorporar una nueva clase de gusanos potencialmente peligrosos llamados Gusanos en Enjambre. Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biolÃ³gicos y muestran un alto grado de aprendizaje, comunicaciÃ³n e inteligencia distribuida. Tales gusanos en enjambre son potencialmente mÃ¡s daÃ±inos que sus contrapartes genÃ©ricas. AdemÃ¡s, se creÃ³ la primera instancia, que sepamos, de un gusano de aprendizaje, llamado ZachiK. ZachiK es un gusano enjambre de descifrado de contraseÃ±as simple que incorpora diferentes estrategias de aprendizaje y comparticiÃ³n de informaciÃ³n. Un gusano de enjambre similar fue desplegado tanto en una red de Ã¡rea local de treinta (30) hosts, como simulado en una topologÃ­a de 10,000 nodos. Los resultados preliminares mostraron que tales gusanos son capaces de comprometer a los anfitriones a tasas hasta 2 Ã³rdenes de magnitud mÃ¡s rÃ¡pido que su contraparte genÃ©rica, manteniendo al mismo tiempo sus capacidades de sigilo. Este trabajo abre una nueva Ã¡rea de problemas interesantes. Algunos de los problemas mÃ¡s interesantes y urgentes a considerar son los siguientes: â¢ Â¿Es posible aplicar algunos de los conceptos de aprendizaje desarrollados en los Ãºltimos diez aÃ±os en las Ã¡reas de inteligencia de enjambre, sistemas de agentes y control distribuido al diseÃ±o de gusanos de enjambre sofisticados de tal manera que se produzca un verdadero comportamiento emergente? â¢ Â¿Son efectivas las tÃ©cnicas actuales que se estÃ¡n desarrollando en el diseÃ±o de Sistemas de DetecciÃ³n y Contramedidas de IntrusiÃ³n y sistemas supervivientes contra esta nueva clase de gusanos?; y â¢ Â¿QuÃ© tÃ©cnicas, si las hay, se pueden desarrollar para crear defensas contra los gusanos de enjambre? 6. AGRADECIMIENTOS Este trabajo se realizÃ³ como parte de un esfuerzo mÃ¡s amplio en el desarrollo de sistemas de DetecciÃ³n de Intrusiones y Contramedidas de prÃ³xima generaciÃ³n en WSSRL. El trabajo se lleva a cabo bajo los auspicios de la subvenciÃ³n ACG-2004-06 otorgada por Acumen Consulting Group, Inc., Marlboro, Massachusetts. REFERENCIAS [1] C.C. Zou, L. Gao, W. G., y Towsley, D. Monitoreo y alerta temprana para gusanos de internet. En la 10Âª Conferencia ACM sobre Seguridad InformÃ¡tica y de Comunicaciones, Washington, DC (octubre de 2003). [2] Liu, S. y Passino, K. Inteligencia de enjambre: Resumen de la literatura. En el Departamento de IngenierÃ­a ElÃ©ctrica, Universidad Estatal de Ohio, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., y Weaver, N. La propagaciÃ³n del gusano saphire/slammer. Inf. tÃ©cnico, Un esfuerzo conjunto de CAIDA, ICSI, Silicon Defense, UC Berkeley EECS y UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S. y Cunningham, R. Una taxonomÃ­a de gusanos informÃ¡ticos. En Actas del Taller de ACM sobre Malware RÃ¡pido (WORM) (2003). 329 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "countermeasure system": {
            "translated_key": "sistema de contramedidas",
            "is_in_text": false,
            "original_annotated_sentences": [
                "An Initial Analysis and Presentation of Malware Exhibiting Swarm-Like Behavior Fernando C.ColÂ´on Osorio Wireless System Security Research Laboratory (W.S.S.R.L.)",
                "420 Lakeside Avneue Marlboro, Massachusetts 01752 fcco@cs.wpi.edu Zachi Klopman Wireless System Security Research Laboratory (W.S.S.R.L.) 420 Lakeside Avneue Marlboro, Massachusetts 01752 zachi@cs.wpi.edu ABSTRACT The Slammer, which is currently the fastest computer worm in recorded history, was observed to infect 90 percent of all vulnerable Internets hosts within 10 minutes.",
                "Although the main action that the Slammer worm takes is a relatively unsophisticated replication of itself, it still spreads so quickly that human response was ineffective.",
                "Most proposed countermeasures strategies are based primarily on rate detection and limiting algorithms.",
                "However, such strategies are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In our work, we put forth the hypothesis that next generation worms will be radically different, and potentially such techniques will prove ineffective.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
                "Emergent Intelligence is the behavior of systems, very much like biological systems such as ants or bees, where simple local interactions of autonomous members, with simple primitive actions, gives rise to complex and intelligent global behavior.",
                "In this manuscript we will introduce the basic principles behind the idea of Swarm Worms, as well as the basic structure required in order to be considered a swarm worm.",
                "In addition, we will present preliminary results on the propagation speeds of one such swarm worm, called the ZachiK worm.",
                "We will show that ZachiK is capable of propagating at a rate 2 orders of magnitude faster than similar worms without swarm capabilities.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Intrusion Detection; D.4.6 [Security and Protection]: Invasive software General Terms Experimentation, Security 1.",
                "INTRODUCTION AND PREVIOUSWORK In the early morning hours (05:30 GMT) of January 25, 2003 the fastest computer worm in recorded history began spreading throughout the Internet.",
                "Within 10 minutes after the first infected host (patient zero), 90 percent of all vulnerable hosts had been compromised creating significant disruption to the global Internet infrastructure.",
                "Vern Paxson of the International Computer Science Institute and Lawrence Berkeley National Laboratory in its analysis of Slammer commented: The Slammer worm spread so quickly that human response was ineffective, see [4] The interesting part, from our perspective, about the spread of Slammer is that it was a relatively unsophisticated worm with benign behavior, namely self-reproduction.",
                "Since Slammer, researchers have explored the behaviors of fast spreading worms, and have designed countermeasures strategies based primarily on rate detection and limiting algorithms.",
                "For example, Zou, et al., [2], proposed a scheme where a Kalman filter is used to detect the early propagation of a worm.",
                "Other researchers have proposed the use of detectors where rates of Destination Unreachable messages are monitored by firewalls, and a significant increase beyond normal, alerts the organization to the potential presence of a worm.",
                "However, such strategies suffer from the fighting the last War syndrome.",
                "That is, systems are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In the work described here, we put forth the hypothesis that next generation worms will be different, and therefore such techniques may have some significant limitations.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
                "The concept of emergent intelligence was first studied in association with biological systems.",
                "In such studies, early researchers discovered a variety of interesting insect or animal behaviors in the wild.",
                "A flock of birds sweeps across the sky.",
                "A group of ants forages for food.",
                "A school of fish swims, turns, flees together away from a predator, ands so forth.",
                "In general, this kind of aggregate motion has been called swarm behavior.",
                "Biologists, and computer scientists in the field of artificial intelligence have studied such biological swarms, and 323 attempted to create models that explain how the elements of a swarm interact, achieve goals, and evolve.",
                "Moreover, in recent years the study of swarm intelligence has become increasingly important in the fields of robotics, the design of Mobile ad-hoc Networks (MANETS), the design of Intrusion Detection Systems, the study of traffic patterns in transportation systems, in military applications, and other areas, see [3].",
                "The basic concepts that have been developed over the last decade to explain swarms, and swarm behavior include four basic components.",
                "These are: 1.",
                "Simplicity of logic & actions: A swarm is composed of N agents whose intelligence is limited.",
                "Agents in the swarm use simple local rules to govern their actions.",
                "Some models called this primitive actions or behaviors; 2.",
                "Local Communication Mechanisms: Agents interact with other members in the swarm via simple local communication mechanisms.",
                "For example, a bird in a flock senses the position of adjacent bird and applies a simple rule of avoidance and follow. 3.",
                "Distributed control: Autonomous agents interact with their environment, which probably consists of other agents, but act relatively independently from all other agents.",
                "There is no central command or leader, and certainly there is no global plan. 4.",
                "Emergent Intelligence: Aggregate behavior of autonomous agents results in complex intelligent behaviors; including self-organization.",
                "In order to understand fully the behavior of such swarms it is necessary to construct a model that explains the behavior of what we will call generic worms.",
                "This model, which extends the work by Weaver [5] is presented here in section 2.",
                "In addition, we intend to extend said model in such a way that it clearly explains the behaviors of this new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
                "Such Swarm Worms are potentially more harmful than their similar generic counterparts.",
                "Specifically, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
                "ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
                "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms are capable of compromising hosts at rates up to two orders of magnitude faster than their generic counterpart.",
                "The rest of this manuscript is structure as follows.",
                "In section 2 an abstract model of both generic worms as well as swarm worms is presented.",
                "This model is used in section 2.6 to described the first instance of a swarm worm, ZachiK.",
                "In section 4, preliminary results via both empirical measurements as well as simulation is presented.",
                "Finally, in section 5 our conclusions and insights into future work are presented. 2.",
                "WORM MODELING In order to study the behavior of swarm worms in general, it is necessary to create a model that realistically reflects the structure of worms and it is not necessarily tied to a specific instance.",
                "In this section, we described such a model where a general worm is describe as having four-(4) basic components or subfunctions.",
                "By definition, a worm is a selfcontained, self propagating program.",
                "Thus, in simple terms, it has two main functions: that which propagates and that which does other things.",
                "We propose that there is a third broad functionality of a worm, that of self-preservation.",
                "We also propose that the other functionality of a worm may be more appropriately categorized as Goal-Based Actions (GBA), as whatever functionality included in a worm will naturally be dependent on whatever goals (and subgoals) the author has.",
                "The work presented by Weaver et. al. in [5] provides us with mainly an action and technique based taxonomy of computer worms, which we utilize and further extend here. 2.1 Propagation The propagation function itself may be broken down into three actions: acquire target, send scan, and infect target.",
                "Acquiring the target simply means picking a host to attack next.",
                "Sending a scan involves checking to see if that host is receptive to an infection attempt, since IP-space is sparsely populated.",
                "This may involve a simple ping to check if the host is alive or a full out vulnerability assessment.",
                "Infecting the target is the actual method used to send the worm code to the new host.",
                "In algorithm form: propagate() { host := acquire_target() success := send_scan(host) if( success ) then infect(host) endif } In the case of a simple worm which does not first check to see if the host is available or susceptible (such as Slammer), the scan method is dropped: propagate() { host := acquire_target() infect(host) } Each of these actions may have an associated cost to its inclusion and execution, such as increased worm size and CPU or network load.",
                "Depending on the authors needs or requirements, these become limiting factors in what may be included in the worms actions.",
                "This is discussed further after expanding upon these actions below. 2.2 Target Acquisition: The Target Acquisition phase of our worm algorithm is built directly off of the Target Discovery section in [5].",
                "Weaver et. al. taxonomize this task into 5 separate categories.",
                "Here, we further extend their work through parameterization.",
                "Scanning: Scanning may be considered an equation-based method for choosing a host.",
                "Any type of equation may be used to arrive at an IP address, but there are three main types seen thus far: sequential, random, and local preference.",
                "Sequential scanning is exactly as it sounds: start at an IP address and increment through all the IP space.",
                "This could carry with it the options of which IP to start with (user chosen value, random, or based on IP of infected host) and 324 how many times to increment (continuous, chosen value, or subnet-based).",
                "Random scanning is completely at random (depending on the chosen PRNG method and its seed value).",
                "Local preference scanning is a variance of either Sequential or Random, whereby it has a greater probability of choosing a local IP address over a remote one (for example, the traditional 80/20 split).",
                "Pre-generated Target Lists: Pre-generated Target Lists, or so called hit-lists, could include the options for percentage of total population and percentage wrong, or just number of IPs to include.",
                "Implicit to this type is the fact that the list is divided among a parent and its children, avoiding the problem of every instance hitting the exact same machines.",
                "Externally Generated Target Lists: Externally generated target lists depend on one or more external sources that can be queried for host data.",
                "This will involve either servers that are normally publicly available, such as gaming meta-servers, or ones explicitly setup by the worm or worm author.",
                "The normally available meta-servers could have parameters for rates of change, such as many popping up at night or leaving in the morning.",
                "Each server could also have a maximum queries/second that it would be able to handle.",
                "The worm would also need a way of finding these servers, either hard-coded or through scanning.",
                "Internal Target Lists: Internal Target Lists are highly dependent on the infected host.",
                "This method could parameterize the choice of how much info is on the host, such as all machines in subnet, all windows boxes in subnet, particular servers, number of internal/external, or some combination.",
                "Passive: Passive methods are determined by normal interactions between hosts.",
                "Parameters may include a rate of interaction with particular machines, internal/external rate of interaction, or subnet-based rate of interaction.",
                "Any of these methods may also be combined to produce different types of target acquisition strategies.",
                "For example, the a worm may begin with an initial hit-list of 100 different hosts or subnets.",
                "Once it has exhausted its search using the hit-list, it may then proceed to perform random scanning with a 50% local bias.",
                "It is important to note, however, that the resource consumption of each method is not the same.",
                "Different methods may require the worm to be large, such as the extra bytes required by a hit-list, or to take more processing time, such as by searching the host for addresses of other vulnerable hosts.",
                "Further research and analysis should be performed in this area to determine associated costs for using each method.",
                "The costs could then be used in determining design tradeoffs that worm authors engage at.",
                "For example, hit lists provide a high rate of infection, but at a high cost of worm payload size. 2.2.1 Sending a Scan The send scan function tests to see if the host is available for infection.",
                "This can be as simple as checking if the host is up on the network or as complex as checking if the host is vulnerable to the exploit which will be used.",
                "The sending of a scan before attempted infection can increase the scanning rate if the cost for failing an infection is greater than the cost of failing a scan or sending a scan plus infection; and failures are more frequent than successes.",
                "One important parameter to this would be the choice of transport protocol (TCP/UDP) or just simply the time for one successful scan and time for one failed scan.",
                "Also, whether or not it tests for the host to be up or if it is a full test for the vulnerability (or for multiple vulnerabilities). 2.2.2 Infection Vector (IV) The particular infection vector used to access the remote host is mainly dependent on the particular vulnerability chosen to exploit.",
                "In a non-specific sense, it is dependent on the transport protocol chosen to use and the message size to be sent.",
                "Section 3 of [5] also proposes three particular classes of IV: Self-carried, second channel, and embedded. 2.3 Self Preservation The Self Preservation actions of a worm may take many forms.",
                "In the wild, worms have been observed to disable anti-virus software or prevent sending itself to certain antivirusknown addresses.",
                "They have also been seen to attempt disabling of other worms which may be contending for the same system.",
                "We also believe that a time-based throttled scanning may help the worm to slip under the radar.",
                "We also propose a decoy method, whereby a worm will release a few children that cause a lot of noise so that the parent is not noticed.",
                "It has also been proposed [5] that a worm cause damage to its host if, and only if, it is disturbed in some way.",
                "This module could contain parameters for: probability of success in disabling anti-virus or other software updates, probability of being noticed and thus removed, or hardening of the host against other worms. 2.4 Goal-Based Actions A worms GBA functionality depends on the authors goal list.",
                "The Payloads section of [5] provides some useful suggestions for such a module.",
                "The opening of a back-door can make the host susceptible to more attacks.",
                "This would involve a probability of the back-door being used and any associated traffic utilization.",
                "It could also provide a list of other worms this host is now susceptible to or a list of vulnerabilities this host now has.",
                "Spam relays and HTTP-Proxies of course have an associated bandwidth consumption or traffic pattern.",
                "Internet DoS attacks would have a set time of activation, a target, and a traffic pattern.",
                "Data damage would have an associated probability that the host dies because of the damage.",
                "In Figure 1, this general model of a worm is summarized.",
                "Please note that in this model there is no learning, no, or very little, sharing of information between worm instances, and certainly no coordination of actions.",
                "In the next section we expand the model to include such mechanisms, and hence, arrive at the general model of a swarm worm. 2.5 Swarms - General Model As described in section 1, the basic characteristics that distinguished swarm behavior from simply what appears to be collective coordinated behaviors are four basic attributes.",
                "These are: 1.",
                "Simplicity of logic & actions; 2.",
                "Local Communication Mechanisms; 3.",
                "Distributed control; and 4.",
                "Emergent Intelligence, including self-organization. 325 Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 1: General Worm Model In this work we aggregate all of these attributes under the general title of Learning, Communication, and Distributed Control.",
                "The presence of these attributes distinguishes swarm worms from otherwise regular worms, or other types of malware such as Zombies.",
                "In figure ? ?, the generic model of a worm is expanded to included these set of actions.",
                "Within this context then, a worm like Slammer cannot be categorized as a swarm worm due to the fact that new instances of the worm do not coordinate their actions or share information.",
                "On the other hand, Zombies and many other forms of DDoS, which at first glance may be consider swarm worms are not.",
                "This is simply due to fact that in the case of Zombies, control is not distributed but rather centralized, and no emergent behaviors arise.",
                "The latter, the potential emergence of intelligence or new behaviors is what makes swarm worms so potentially dangerous.",
                "Finally, when one considers the majority of recent disruptions to the Internet Infrastructure, and in light of our description of swarm attacks, then said disruptions can be easily categorized as precursors to truly swarm behavior.",
                "Specifically, â¢ DDOS - Large number of compromised hosts send useless packets requiring processing (Stacheldraht, http : //www.cert.org/ incidentnotes/IN â 99 â 04.html).",
                "DDoS attacks are the early precursors to Swarm Attacks due to the large number of agents involved. â¢ Code Red CrV1, Code Red II, Nimbda - Exhibit early notions of swarm attacks, including a backdoor communication channel. â¢ Staniford & Paxson in How to Own the Internet in Your Spare Time? explore modifications to CrV1, Code Red I, II with a swarm like type of behavior.",
                "For example, they speculate on new worms which employ direct worm-to-worm communication, and employ programmable updates.",
                "For example the Warhol worm, and Permutation-Scanning (self coordinating) worms. 2.6 Swarm Worm: the details In considering the creation of what we believed to be the first Swarm Worm in existence, we wanted to adhere as close as possible to the general model presented in section ? ? while at the same time facilitating large scale analysis, both empirical and through simulations, of the behavior of the swarm.",
                "For this reason, we selected as the first instance Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Learning, Communication, Pheromones/Flags (Test and Distributed Control if Worm is already present) Time bombs, Learning Algorithms, IRC channel Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 2: General Model of a Swarm Worm of the swarm a simple password cracking worm.",
                "The objective of this worm simply is to infect a host by sequentially attempting to login into the host using well known passwords (dictionary attack), passwords that have been discovered previously by any member of the swarm, and random passwords.",
                "Once, a host is infected, the worm will create communication channels with both its known neighbors at that time, as well as with any offsprings that it successfully generates.",
                "In this context a successful generation of an offspring means simply infecting a new host and replicating an exact copy of itself in such a host.",
                "We call this swarm worm the ZachiK worm in honor of one of its creators.",
                "As it can be seen from this description, the ZachiK worm exhibits all of the elements described before.",
                "In the following sections, we described in detail each one of the elements of the ZachiK worm. 2.7 Infection Vector The infection vector used for ZachiK worm is the secure shell protocol SSH.",
                "A modified client which is capable of receiving passwords from the command line was written, and integrated with a script that supplies it with various passwords: known and random.",
                "When a password is found for an appropriate target, the infection process begins.",
                "After the root password of a host is discovered, the worm infects the target host and replicates itself.",
                "The worm creates a new directory in the target host, copies the modified ssh client, the script, the communications servers, and the updated versions of data files (list of known passwords and a list of current neighbors).",
                "It then runs the modified script on the newly infected hosts, which spawns the communications server, notifies the neighbors and starts looking for new targets.",
                "It could be argued, correctly, that the ZachiK worm can be easily defeated by current countermeasure techniques present on most systems today, such as disallowing direct root logins from the network.",
                "Within this context ZachiK can quickly be discarded as very simple and harmless worm that does not require further study.",
                "However, the reader should consider the following: 1.",
                "ZachiK can be easily modified to include a variety of infection vectors.",
                "For example, it could be programmed to guess common user names and their passwords; gain 326 access to a system, then guess the root password or use other well know vulnerabilities to gain root privileges; 2.",
                "ZachiK is a proof of concept worm.",
                "The importance of ZachiK is that it incorporates all of the behaviors of a swarm worm including, but not restricted to, distributed control, communication amongst agents, and learning; 3.",
                "ZachiK is composed of a large collection of agents operating independently which lends itself naturally to parallel algorithms such as a parallel search of the IPV4 address space.",
                "Within this context, SLAMMER, does incorporate a parallel search capability of potentially susceptible addresses.",
                "However, unlike ZachiK, the knowledge discovered by the search is never shared amongst the agents.",
                "For this reasons, and many others, one should not discard the potential of this new class of worms but rather embrace its study. 2.8 Self-Preservation In the case of ZachiK worm, the main self-preservation techniques used are simply keeping the payload small.",
                "In this context, this simply means restricting the number of passwords that an offspring inherits, masquerading worm messages as common http requests, and restricting the number of neighbors to a maximum of five-(5). 2.9 Propagation Choosing the next target(s) in an efficient matter requires thought.",
                "In the past, known and proposed worms, see [5], have applied propagation techniques that varied.",
                "These include: strictly random selection of a potential vulnerable host; target lists of vulnerable hosts; locally biased random selection (select a host target at random from a local subnet); and a combination of some or all of the above.",
                "In our test and simulation environments, we will apply a combination of locally biased and totally random selection of potential vulnerable hosts.",
                "However, due to the fact that the ZachiK worm is a swarm worm, address discovery (that is when non-existent addresses are discovered) information will be shared amongst members of the swarm.",
                "The infection and propagation threads do the following set of activities repeatedly: â¢ Choose an address â¢ Check the validity of the address â¢ Choose a set of passwords â¢ Try infecting the selected host with this set of passwords As described earlier, choosing an address makes use of a combination of random selection, local bias, and target lists.",
                "Specifically, to choose an address, the instance may either: â¢ Generate a new random address â¢ Generate an address on the local network â¢ Pick an address from a handoff list The choice is made randomly among these options, and can be varied to test the dependency of propagation on particular choices.",
                "Password are either chosen from the list of known passwords or newly generated.",
                "When an infection of a valid address fails, it is added to a list of handoffs, which is sent to the neighbors to try to work on. 2.10 Learning, CommunicationandDistributed Control 2.10.1 Communication The concept of a swarm is based on transfer of information amongst neighbors, which relay their new incoming messages to their neighbors, and so on until every worm instance in the swarm is aware of these messages.",
                "There are two classes of messages: data or information messages and commands.",
                "The command messages are meant for an external user (a.k.a., hackers and/or crackers) to control the actions of the instances, and are currently not implemented.",
                "The information messages are currently of three kinds: new member, passwords and exploitable addresses (handoffs).",
                "The new member messages are messages that a new instance sends to the neighbors on its (short) list of initial neighbors.",
                "The neighbors then register these instances in their neighbor list.",
                "These are messages that form the multi-connectivity of the swarm, and without them, the topology will be a treelike structure, where eliminating a single node would cause the instances beneath it to be inaccessible.",
                "The passwords messages inform instances of newly discovered passwords, and by informing all instances, the swarm as whole collects this information, which allows it to infect new instances more effectively.",
                "The handoffs messages inform instances of valid addresses that could not be compromised (fail at breaking the password for the root account).",
                "Since the address space is rather sparse, it takes a relatively long time (i.e. many trials) to discover a valid address.",
                "Therefore, by handing off discovered valid addresses, the swarm is (a) conserving energy by not re-discovering the same addresses (b) attacking more effectively.",
                "In a way, this is a simple instance of coordinated activity of a swarm. 2.10.2 Coordination When a worm instance is born, it relays its existence to all neighbors on its list.",
                "The main thread then spawns a few infection threads, and continues to handle incoming messages (registering neighbors, adding new passwords, receiving addresses and relaying these messages). 2.10.3 Distributed Control Control in the ZachiK worm is distributed in the sense that each instance of the worm performs a set of actions independently of every other instance while at the same time benefiting from the learning achieve by its immediate neighbors. 2.11 Goal Based Actions The first instantiation of the ZachiK worm has two basic goals.",
                "These are: (1) propagate, and (2) discover and share with members of th swarm new root passwords. 3.",
                "EXPERIMENTAL DESIGN In order to verify our hypothesis that Swarm Worms are more capable, and therefore dangerous than other well known 327 worms, a network testbed was created, and a simulator, capable of simulating large scale Internet-like topologies (IPV4 space), was developed.",
                "The network testbed consisted of a local area network of 30 Linux based computers.",
                "The simulator was written in C++ .",
                "The simple swarm worm described in section 2.6 was used to infect patient-zero, and then the swarm worm was allowed to propagate via its own mechanisms of propagation, distributed control, and swarm behaviors.",
                "In the case of a simple local area network of 30 computers, six-(6) different root passwords out of a password space of 4 digits (10000 options) were selected.",
                "At the start of the experiment a single known password is known, that of patient-zero.",
                "All shared passwords are distributed randomly across all nodes.",
                "Similarly, in the case of the simulation, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "For example, in one of our simulation runs, the network topology consisted of 200 subnets each containing 50 hosts.",
                "In such a topology, shared passwords were distributed across subnets where a varying percentage of passwords were shared across subnets.",
                "The percentages of shared passwords used was reflective of early empirical studies, where up to 39.7% of common passwords were found to be shared. 4.",
                "RESULTS In Figure 3, the results comparing Swarm Attack behavior versus that of a typical Malform Worm for a 30 node LAN are presented.",
                "In this set of empirical runs, six-(6) shared passwords were distributed at random across all nodes from a possible of 10,000 unknown passwords.",
                "The data presented reflects the behaviors of a total of three-(3) distinct classes of worm or swarm worms.",
                "The class of worms presented are as follows: â¢ I-NS-NL:= Generic worm, independent (I), no learning/memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; and â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 3, the results validate our original hypothesis that swarm worms are significantly more efficient and dangerous than generic worms.",
                "In this set of experiments, the sharing of passwords provides an order of magnitude improvement over a memoryless random worm.",
                "Similarly, a swarm worm that shares passwords and addresses is approximately two orders of magnitude more efficient than its generic counterpart.",
                "In Figure 3, a series of discontinuities can be observed.",
                "These discontinuities are an artifact of the small sample space used for this experiment.",
                "Basically, as soon as a password is broken, all nodes sharing that specific password are infected within a few seconds.",
                "Note that it is trivial for a swarm worm to scan and discovered a small shared password space.",
                "In Figure 4, the simulation results comparing Swarm Attack Behavior versus that of a Generic Malform Worm are presented.",
                "In this set of simulation runs, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "The data presented reflects the behaviors of three-(3) distinct classes of worm or swarm worms and two(2) different target host selection scanning strategies (random scanning and local bias).",
                "The amount of local bias was varied across multiple simulation runs.",
                "The results presented are aggregate behaviors.",
                "In general the following class of Generic Worms and Swarm Worms were simulated.",
                "Address Scanning: â¢ Random:= addresses are selected at random from a subset of the IPV4 space, namely, a 224 address space; and â¢ Local Bias:= addresses are selected at random from either a local subnet (256 addresses) or from a subset of the IPV4 space, namely, a 224 address space.",
                "The percentage of local bias is varied across multiple runs.",
                "Learning, Communication & Distributed Control â¢ I-NL-NS: Generic worm, independent (I), no learning/ memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ I-L-OOS: Generic worm, independent (I), learning/ memoryless (L), and one time sharing of information with offsprings only (OOS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; â¢ S-L-S&AOP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of addresses with neighbors and offsprings, shares passwords one time only (at creation) with offsprings(SA&OP); â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 4, the results are consistent with our set of empirical results.",
                "In addition, the following observations can be made. 1.",
                "Local preference is incredibly effective. 2.",
                "Short address handoffs are more effective than long ones.",
                "We varied the size of the list allowed in the sharing of addresses; the overhead associated with a long address list is detrimental to the performance of the swarm worm, as well as to its stealthiness; 3.",
                "For the local bias case, sharing valid addresses of susceptible host, S-L-S&AOP worm (recall, the S-L-S&AOP swarm shares passwords, one time only, with offsprings 328 at creation time) is more effective than sharing passwords in the case of the S-L-SP swarm.",
                "In this case, we can think of the swarm as launching a distributeddictionary attack: different segments of the swarm use different passwords to try to break into susceptible uninfected host.",
                "In the local bias mode, early in the life of the swarm, address-sharing is more effective than password-sharing, until most subnets are discovered.",
                "Then the targeting of local addresses assists in discovering the susceptible hosts, while the swarm members need to waste time rediscovering passwords; and 4.",
                "Infecting the last 0.5% of nodes takes a very long time in non-local bias mode.",
                "Basically, the shared password list across subnets has been exhausted, and the swarm reverts to simply a random discovery of password algorithm.",
                "Figure 3: Swarm Attack Behavior vs. Malform Worm: Empirical Results, 30node LAN Figure 4: Swarm Attack Behavior vs. Malform Worm: Simulation Results 5.",
                "SUMMARY AND FUTURE WORK In this manuscript, we have presented an abstract model, similar in some aspects to that of Weaver [5], that helps explain the generic nature of worms.",
                "The model presented in section 2 was extended to incorporate a new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
                "Such Swarm Worms are potentially more harmful than their generic counterparts.",
                "In addition, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
                "ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
                "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms is capable of compromising hosts a rates up to 2 orders of magnitude faster than its generic counterpart while retaining stealth capabilities.",
                "This work opens up a new area of interesting problems.",
                "Some of the most interesting and pressing problems to be consider are as follows: â¢ Is it possible to apply some of learning concepts developed over the last ten years in the areas of swarm intelligence, agent systems, and distributed control to the design of sophisticated swarm worms in such a way that true emergent behavior takes place? â¢ Are the current techniques being developed in the design of Intrusion Detection & CounterMeasure Systems and Survivable systems effective against this new class of worms? ; and â¢ What techniques, if any, can be developed to create defenses against swarm worms? 6.",
                "ACKNOWLEDGMENTS This work was conducted as part of a larger effort in the development of next generation Intrusion Detection & CounterMeasure Systems at WSSRL.",
                "The work is conducted under the auspices of Grant ACG-2004-06 by the Acumen Consulting Group, Inc., Marlboro, Massachusetts. 7.",
                "REFERENCES [1] C.C.",
                "Zou, L. Gao, W. G., and Towsley, D. Monitoring and early warning for internet worms.",
                "In 10th ACM Conference on Computer and Communications Security, Washington, DC (October 2003). [2] Liu, S., and Passino, K. Swarm intelligence: Literature overview.",
                "In Dept. of Electrical Engineering, The Ohio State University, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., and Weaver, N. The spread of the saphire/slammer worm.",
                "Tech. rep., A joint effort of CAIDA, ICSI, Silicon Defense, UC Berkeley EECS and UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S., and Cunningham, R. A taxonomy of computer worms.",
                "In Proceedings of the ACM Workshop on Rapid Malware (WORM) (2003). 329"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        },
        "emergent behavior": {
            "translated_key": "comportamiento emergente",
            "is_in_text": true,
            "original_annotated_sentences": [
                "An Initial Analysis and Presentation of Malware Exhibiting Swarm-Like Behavior Fernando C.ColÂ´on Osorio Wireless System Security Research Laboratory (W.S.S.R.L.)",
                "420 Lakeside Avneue Marlboro, Massachusetts 01752 fcco@cs.wpi.edu Zachi Klopman Wireless System Security Research Laboratory (W.S.S.R.L.) 420 Lakeside Avneue Marlboro, Massachusetts 01752 zachi@cs.wpi.edu ABSTRACT The Slammer, which is currently the fastest computer worm in recorded history, was observed to infect 90 percent of all vulnerable Internets hosts within 10 minutes.",
                "Although the main action that the Slammer worm takes is a relatively unsophisticated replication of itself, it still spreads so quickly that human response was ineffective.",
                "Most proposed countermeasures strategies are based primarily on rate detection and limiting algorithms.",
                "However, such strategies are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In our work, we put forth the hypothesis that next generation worms will be radically different, and potentially such techniques will prove ineffective.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
                "Emergent Intelligence is the behavior of systems, very much like biological systems such as ants or bees, where simple local interactions of autonomous members, with simple primitive actions, gives rise to complex and intelligent global behavior.",
                "In this manuscript we will introduce the basic principles behind the idea of Swarm Worms, as well as the basic structure required in order to be considered a swarm worm.",
                "In addition, we will present preliminary results on the propagation speeds of one such swarm worm, called the ZachiK worm.",
                "We will show that ZachiK is capable of propagating at a rate 2 orders of magnitude faster than similar worms without swarm capabilities.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Intrusion Detection; D.4.6 [Security and Protection]: Invasive software General Terms Experimentation, Security 1.",
                "INTRODUCTION AND PREVIOUSWORK In the early morning hours (05:30 GMT) of January 25, 2003 the fastest computer worm in recorded history began spreading throughout the Internet.",
                "Within 10 minutes after the first infected host (patient zero), 90 percent of all vulnerable hosts had been compromised creating significant disruption to the global Internet infrastructure.",
                "Vern Paxson of the International Computer Science Institute and Lawrence Berkeley National Laboratory in its analysis of Slammer commented: The Slammer worm spread so quickly that human response was ineffective, see [4] The interesting part, from our perspective, about the spread of Slammer is that it was a relatively unsophisticated worm with benign behavior, namely self-reproduction.",
                "Since Slammer, researchers have explored the behaviors of fast spreading worms, and have designed countermeasures strategies based primarily on rate detection and limiting algorithms.",
                "For example, Zou, et al., [2], proposed a scheme where a Kalman filter is used to detect the early propagation of a worm.",
                "Other researchers have proposed the use of detectors where rates of Destination Unreachable messages are monitored by firewalls, and a significant increase beyond normal, alerts the organization to the potential presence of a worm.",
                "However, such strategies suffer from the fighting the last War syndrome.",
                "That is, systems are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In the work described here, we put forth the hypothesis that next generation worms will be different, and therefore such techniques may have some significant limitations.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
                "The concept of emergent intelligence was first studied in association with biological systems.",
                "In such studies, early researchers discovered a variety of interesting insect or animal behaviors in the wild.",
                "A flock of birds sweeps across the sky.",
                "A group of ants forages for food.",
                "A school of fish swims, turns, flees together away from a predator, ands so forth.",
                "In general, this kind of aggregate motion has been called swarm behavior.",
                "Biologists, and computer scientists in the field of artificial intelligence have studied such biological swarms, and 323 attempted to create models that explain how the elements of a swarm interact, achieve goals, and evolve.",
                "Moreover, in recent years the study of swarm intelligence has become increasingly important in the fields of robotics, the design of Mobile ad-hoc Networks (MANETS), the design of Intrusion Detection Systems, the study of traffic patterns in transportation systems, in military applications, and other areas, see [3].",
                "The basic concepts that have been developed over the last decade to explain swarms, and swarm behavior include four basic components.",
                "These are: 1.",
                "Simplicity of logic & actions: A swarm is composed of N agents whose intelligence is limited.",
                "Agents in the swarm use simple local rules to govern their actions.",
                "Some models called this primitive actions or behaviors; 2.",
                "Local Communication Mechanisms: Agents interact with other members in the swarm via simple local communication mechanisms.",
                "For example, a bird in a flock senses the position of adjacent bird and applies a simple rule of avoidance and follow. 3.",
                "Distributed control: Autonomous agents interact with their environment, which probably consists of other agents, but act relatively independently from all other agents.",
                "There is no central command or leader, and certainly there is no global plan. 4.",
                "Emergent Intelligence: Aggregate behavior of autonomous agents results in complex intelligent behaviors; including self-organization.",
                "In order to understand fully the behavior of such swarms it is necessary to construct a model that explains the behavior of what we will call generic worms.",
                "This model, which extends the work by Weaver [5] is presented here in section 2.",
                "In addition, we intend to extend said model in such a way that it clearly explains the behaviors of this new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
                "Such Swarm Worms are potentially more harmful than their similar generic counterparts.",
                "Specifically, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
                "ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
                "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms are capable of compromising hosts at rates up to two orders of magnitude faster than their generic counterpart.",
                "The rest of this manuscript is structure as follows.",
                "In section 2 an abstract model of both generic worms as well as swarm worms is presented.",
                "This model is used in section 2.6 to described the first instance of a swarm worm, ZachiK.",
                "In section 4, preliminary results via both empirical measurements as well as simulation is presented.",
                "Finally, in section 5 our conclusions and insights into future work are presented. 2.",
                "WORM MODELING In order to study the behavior of swarm worms in general, it is necessary to create a model that realistically reflects the structure of worms and it is not necessarily tied to a specific instance.",
                "In this section, we described such a model where a general worm is describe as having four-(4) basic components or subfunctions.",
                "By definition, a worm is a selfcontained, self propagating program.",
                "Thus, in simple terms, it has two main functions: that which propagates and that which does other things.",
                "We propose that there is a third broad functionality of a worm, that of self-preservation.",
                "We also propose that the other functionality of a worm may be more appropriately categorized as Goal-Based Actions (GBA), as whatever functionality included in a worm will naturally be dependent on whatever goals (and subgoals) the author has.",
                "The work presented by Weaver et. al. in [5] provides us with mainly an action and technique based taxonomy of computer worms, which we utilize and further extend here. 2.1 Propagation The propagation function itself may be broken down into three actions: acquire target, send scan, and infect target.",
                "Acquiring the target simply means picking a host to attack next.",
                "Sending a scan involves checking to see if that host is receptive to an infection attempt, since IP-space is sparsely populated.",
                "This may involve a simple ping to check if the host is alive or a full out vulnerability assessment.",
                "Infecting the target is the actual method used to send the worm code to the new host.",
                "In algorithm form: propagate() { host := acquire_target() success := send_scan(host) if( success ) then infect(host) endif } In the case of a simple worm which does not first check to see if the host is available or susceptible (such as Slammer), the scan method is dropped: propagate() { host := acquire_target() infect(host) } Each of these actions may have an associated cost to its inclusion and execution, such as increased worm size and CPU or network load.",
                "Depending on the authors needs or requirements, these become limiting factors in what may be included in the worms actions.",
                "This is discussed further after expanding upon these actions below. 2.2 Target Acquisition: The Target Acquisition phase of our worm algorithm is built directly off of the Target Discovery section in [5].",
                "Weaver et. al. taxonomize this task into 5 separate categories.",
                "Here, we further extend their work through parameterization.",
                "Scanning: Scanning may be considered an equation-based method for choosing a host.",
                "Any type of equation may be used to arrive at an IP address, but there are three main types seen thus far: sequential, random, and local preference.",
                "Sequential scanning is exactly as it sounds: start at an IP address and increment through all the IP space.",
                "This could carry with it the options of which IP to start with (user chosen value, random, or based on IP of infected host) and 324 how many times to increment (continuous, chosen value, or subnet-based).",
                "Random scanning is completely at random (depending on the chosen PRNG method and its seed value).",
                "Local preference scanning is a variance of either Sequential or Random, whereby it has a greater probability of choosing a local IP address over a remote one (for example, the traditional 80/20 split).",
                "Pre-generated Target Lists: Pre-generated Target Lists, or so called hit-lists, could include the options for percentage of total population and percentage wrong, or just number of IPs to include.",
                "Implicit to this type is the fact that the list is divided among a parent and its children, avoiding the problem of every instance hitting the exact same machines.",
                "Externally Generated Target Lists: Externally generated target lists depend on one or more external sources that can be queried for host data.",
                "This will involve either servers that are normally publicly available, such as gaming meta-servers, or ones explicitly setup by the worm or worm author.",
                "The normally available meta-servers could have parameters for rates of change, such as many popping up at night or leaving in the morning.",
                "Each server could also have a maximum queries/second that it would be able to handle.",
                "The worm would also need a way of finding these servers, either hard-coded or through scanning.",
                "Internal Target Lists: Internal Target Lists are highly dependent on the infected host.",
                "This method could parameterize the choice of how much info is on the host, such as all machines in subnet, all windows boxes in subnet, particular servers, number of internal/external, or some combination.",
                "Passive: Passive methods are determined by normal interactions between hosts.",
                "Parameters may include a rate of interaction with particular machines, internal/external rate of interaction, or subnet-based rate of interaction.",
                "Any of these methods may also be combined to produce different types of target acquisition strategies.",
                "For example, the a worm may begin with an initial hit-list of 100 different hosts or subnets.",
                "Once it has exhausted its search using the hit-list, it may then proceed to perform random scanning with a 50% local bias.",
                "It is important to note, however, that the resource consumption of each method is not the same.",
                "Different methods may require the worm to be large, such as the extra bytes required by a hit-list, or to take more processing time, such as by searching the host for addresses of other vulnerable hosts.",
                "Further research and analysis should be performed in this area to determine associated costs for using each method.",
                "The costs could then be used in determining design tradeoffs that worm authors engage at.",
                "For example, hit lists provide a high rate of infection, but at a high cost of worm payload size. 2.2.1 Sending a Scan The send scan function tests to see if the host is available for infection.",
                "This can be as simple as checking if the host is up on the network or as complex as checking if the host is vulnerable to the exploit which will be used.",
                "The sending of a scan before attempted infection can increase the scanning rate if the cost for failing an infection is greater than the cost of failing a scan or sending a scan plus infection; and failures are more frequent than successes.",
                "One important parameter to this would be the choice of transport protocol (TCP/UDP) or just simply the time for one successful scan and time for one failed scan.",
                "Also, whether or not it tests for the host to be up or if it is a full test for the vulnerability (or for multiple vulnerabilities). 2.2.2 Infection Vector (IV) The particular infection vector used to access the remote host is mainly dependent on the particular vulnerability chosen to exploit.",
                "In a non-specific sense, it is dependent on the transport protocol chosen to use and the message size to be sent.",
                "Section 3 of [5] also proposes three particular classes of IV: Self-carried, second channel, and embedded. 2.3 Self Preservation The Self Preservation actions of a worm may take many forms.",
                "In the wild, worms have been observed to disable anti-virus software or prevent sending itself to certain antivirusknown addresses.",
                "They have also been seen to attempt disabling of other worms which may be contending for the same system.",
                "We also believe that a time-based throttled scanning may help the worm to slip under the radar.",
                "We also propose a decoy method, whereby a worm will release a few children that cause a lot of noise so that the parent is not noticed.",
                "It has also been proposed [5] that a worm cause damage to its host if, and only if, it is disturbed in some way.",
                "This module could contain parameters for: probability of success in disabling anti-virus or other software updates, probability of being noticed and thus removed, or hardening of the host against other worms. 2.4 Goal-Based Actions A worms GBA functionality depends on the authors goal list.",
                "The Payloads section of [5] provides some useful suggestions for such a module.",
                "The opening of a back-door can make the host susceptible to more attacks.",
                "This would involve a probability of the back-door being used and any associated traffic utilization.",
                "It could also provide a list of other worms this host is now susceptible to or a list of vulnerabilities this host now has.",
                "Spam relays and HTTP-Proxies of course have an associated bandwidth consumption or traffic pattern.",
                "Internet DoS attacks would have a set time of activation, a target, and a traffic pattern.",
                "Data damage would have an associated probability that the host dies because of the damage.",
                "In Figure 1, this general model of a worm is summarized.",
                "Please note that in this model there is no learning, no, or very little, sharing of information between worm instances, and certainly no coordination of actions.",
                "In the next section we expand the model to include such mechanisms, and hence, arrive at the general model of a swarm worm. 2.5 Swarms - General Model As described in section 1, the basic characteristics that distinguished swarm behavior from simply what appears to be collective coordinated behaviors are four basic attributes.",
                "These are: 1.",
                "Simplicity of logic & actions; 2.",
                "Local Communication Mechanisms; 3.",
                "Distributed control; and 4.",
                "Emergent Intelligence, including self-organization. 325 Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 1: General Worm Model In this work we aggregate all of these attributes under the general title of Learning, Communication, and Distributed Control.",
                "The presence of these attributes distinguishes swarm worms from otherwise regular worms, or other types of malware such as Zombies.",
                "In figure ? ?, the generic model of a worm is expanded to included these set of actions.",
                "Within this context then, a worm like Slammer cannot be categorized as a swarm worm due to the fact that new instances of the worm do not coordinate their actions or share information.",
                "On the other hand, Zombies and many other forms of DDoS, which at first glance may be consider swarm worms are not.",
                "This is simply due to fact that in the case of Zombies, control is not distributed but rather centralized, and no emergent behaviors arise.",
                "The latter, the potential emergence of intelligence or new behaviors is what makes swarm worms so potentially dangerous.",
                "Finally, when one considers the majority of recent disruptions to the Internet Infrastructure, and in light of our description of swarm attacks, then said disruptions can be easily categorized as precursors to truly swarm behavior.",
                "Specifically, â¢ DDOS - Large number of compromised hosts send useless packets requiring processing (Stacheldraht, http : //www.cert.org/ incidentnotes/IN â 99 â 04.html).",
                "DDoS attacks are the early precursors to Swarm Attacks due to the large number of agents involved. â¢ Code Red CrV1, Code Red II, Nimbda - Exhibit early notions of swarm attacks, including a backdoor communication channel. â¢ Staniford & Paxson in How to Own the Internet in Your Spare Time? explore modifications to CrV1, Code Red I, II with a swarm like type of behavior.",
                "For example, they speculate on new worms which employ direct worm-to-worm communication, and employ programmable updates.",
                "For example the Warhol worm, and Permutation-Scanning (self coordinating) worms. 2.6 Swarm Worm: the details In considering the creation of what we believed to be the first Swarm Worm in existence, we wanted to adhere as close as possible to the general model presented in section ? ? while at the same time facilitating large scale analysis, both empirical and through simulations, of the behavior of the swarm.",
                "For this reason, we selected as the first instance Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Learning, Communication, Pheromones/Flags (Test and Distributed Control if Worm is already present) Time bombs, Learning Algorithms, IRC channel Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 2: General Model of a Swarm Worm of the swarm a simple password cracking worm.",
                "The objective of this worm simply is to infect a host by sequentially attempting to login into the host using well known passwords (dictionary attack), passwords that have been discovered previously by any member of the swarm, and random passwords.",
                "Once, a host is infected, the worm will create communication channels with both its known neighbors at that time, as well as with any offsprings that it successfully generates.",
                "In this context a successful generation of an offspring means simply infecting a new host and replicating an exact copy of itself in such a host.",
                "We call this swarm worm the ZachiK worm in honor of one of its creators.",
                "As it can be seen from this description, the ZachiK worm exhibits all of the elements described before.",
                "In the following sections, we described in detail each one of the elements of the ZachiK worm. 2.7 Infection Vector The infection vector used for ZachiK worm is the secure shell protocol SSH.",
                "A modified client which is capable of receiving passwords from the command line was written, and integrated with a script that supplies it with various passwords: known and random.",
                "When a password is found for an appropriate target, the infection process begins.",
                "After the root password of a host is discovered, the worm infects the target host and replicates itself.",
                "The worm creates a new directory in the target host, copies the modified ssh client, the script, the communications servers, and the updated versions of data files (list of known passwords and a list of current neighbors).",
                "It then runs the modified script on the newly infected hosts, which spawns the communications server, notifies the neighbors and starts looking for new targets.",
                "It could be argued, correctly, that the ZachiK worm can be easily defeated by current countermeasure techniques present on most systems today, such as disallowing direct root logins from the network.",
                "Within this context ZachiK can quickly be discarded as very simple and harmless worm that does not require further study.",
                "However, the reader should consider the following: 1.",
                "ZachiK can be easily modified to include a variety of infection vectors.",
                "For example, it could be programmed to guess common user names and their passwords; gain 326 access to a system, then guess the root password or use other well know vulnerabilities to gain root privileges; 2.",
                "ZachiK is a proof of concept worm.",
                "The importance of ZachiK is that it incorporates all of the behaviors of a swarm worm including, but not restricted to, distributed control, communication amongst agents, and learning; 3.",
                "ZachiK is composed of a large collection of agents operating independently which lends itself naturally to parallel algorithms such as a parallel search of the IPV4 address space.",
                "Within this context, SLAMMER, does incorporate a parallel search capability of potentially susceptible addresses.",
                "However, unlike ZachiK, the knowledge discovered by the search is never shared amongst the agents.",
                "For this reasons, and many others, one should not discard the potential of this new class of worms but rather embrace its study. 2.8 Self-Preservation In the case of ZachiK worm, the main self-preservation techniques used are simply keeping the payload small.",
                "In this context, this simply means restricting the number of passwords that an offspring inherits, masquerading worm messages as common http requests, and restricting the number of neighbors to a maximum of five-(5). 2.9 Propagation Choosing the next target(s) in an efficient matter requires thought.",
                "In the past, known and proposed worms, see [5], have applied propagation techniques that varied.",
                "These include: strictly random selection of a potential vulnerable host; target lists of vulnerable hosts; locally biased random selection (select a host target at random from a local subnet); and a combination of some or all of the above.",
                "In our test and simulation environments, we will apply a combination of locally biased and totally random selection of potential vulnerable hosts.",
                "However, due to the fact that the ZachiK worm is a swarm worm, address discovery (that is when non-existent addresses are discovered) information will be shared amongst members of the swarm.",
                "The infection and propagation threads do the following set of activities repeatedly: â¢ Choose an address â¢ Check the validity of the address â¢ Choose a set of passwords â¢ Try infecting the selected host with this set of passwords As described earlier, choosing an address makes use of a combination of random selection, local bias, and target lists.",
                "Specifically, to choose an address, the instance may either: â¢ Generate a new random address â¢ Generate an address on the local network â¢ Pick an address from a handoff list The choice is made randomly among these options, and can be varied to test the dependency of propagation on particular choices.",
                "Password are either chosen from the list of known passwords or newly generated.",
                "When an infection of a valid address fails, it is added to a list of handoffs, which is sent to the neighbors to try to work on. 2.10 Learning, CommunicationandDistributed Control 2.10.1 Communication The concept of a swarm is based on transfer of information amongst neighbors, which relay their new incoming messages to their neighbors, and so on until every worm instance in the swarm is aware of these messages.",
                "There are two classes of messages: data or information messages and commands.",
                "The command messages are meant for an external user (a.k.a., hackers and/or crackers) to control the actions of the instances, and are currently not implemented.",
                "The information messages are currently of three kinds: new member, passwords and exploitable addresses (handoffs).",
                "The new member messages are messages that a new instance sends to the neighbors on its (short) list of initial neighbors.",
                "The neighbors then register these instances in their neighbor list.",
                "These are messages that form the multi-connectivity of the swarm, and without them, the topology will be a treelike structure, where eliminating a single node would cause the instances beneath it to be inaccessible.",
                "The passwords messages inform instances of newly discovered passwords, and by informing all instances, the swarm as whole collects this information, which allows it to infect new instances more effectively.",
                "The handoffs messages inform instances of valid addresses that could not be compromised (fail at breaking the password for the root account).",
                "Since the address space is rather sparse, it takes a relatively long time (i.e. many trials) to discover a valid address.",
                "Therefore, by handing off discovered valid addresses, the swarm is (a) conserving energy by not re-discovering the same addresses (b) attacking more effectively.",
                "In a way, this is a simple instance of coordinated activity of a swarm. 2.10.2 Coordination When a worm instance is born, it relays its existence to all neighbors on its list.",
                "The main thread then spawns a few infection threads, and continues to handle incoming messages (registering neighbors, adding new passwords, receiving addresses and relaying these messages). 2.10.3 Distributed Control Control in the ZachiK worm is distributed in the sense that each instance of the worm performs a set of actions independently of every other instance while at the same time benefiting from the learning achieve by its immediate neighbors. 2.11 Goal Based Actions The first instantiation of the ZachiK worm has two basic goals.",
                "These are: (1) propagate, and (2) discover and share with members of th swarm new root passwords. 3.",
                "EXPERIMENTAL DESIGN In order to verify our hypothesis that Swarm Worms are more capable, and therefore dangerous than other well known 327 worms, a network testbed was created, and a simulator, capable of simulating large scale Internet-like topologies (IPV4 space), was developed.",
                "The network testbed consisted of a local area network of 30 Linux based computers.",
                "The simulator was written in C++ .",
                "The simple swarm worm described in section 2.6 was used to infect patient-zero, and then the swarm worm was allowed to propagate via its own mechanisms of propagation, distributed control, and swarm behaviors.",
                "In the case of a simple local area network of 30 computers, six-(6) different root passwords out of a password space of 4 digits (10000 options) were selected.",
                "At the start of the experiment a single known password is known, that of patient-zero.",
                "All shared passwords are distributed randomly across all nodes.",
                "Similarly, in the case of the simulation, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "For example, in one of our simulation runs, the network topology consisted of 200 subnets each containing 50 hosts.",
                "In such a topology, shared passwords were distributed across subnets where a varying percentage of passwords were shared across subnets.",
                "The percentages of shared passwords used was reflective of early empirical studies, where up to 39.7% of common passwords were found to be shared. 4.",
                "RESULTS In Figure 3, the results comparing Swarm Attack behavior versus that of a typical Malform Worm for a 30 node LAN are presented.",
                "In this set of empirical runs, six-(6) shared passwords were distributed at random across all nodes from a possible of 10,000 unknown passwords.",
                "The data presented reflects the behaviors of a total of three-(3) distinct classes of worm or swarm worms.",
                "The class of worms presented are as follows: â¢ I-NS-NL:= Generic worm, independent (I), no learning/memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; and â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 3, the results validate our original hypothesis that swarm worms are significantly more efficient and dangerous than generic worms.",
                "In this set of experiments, the sharing of passwords provides an order of magnitude improvement over a memoryless random worm.",
                "Similarly, a swarm worm that shares passwords and addresses is approximately two orders of magnitude more efficient than its generic counterpart.",
                "In Figure 3, a series of discontinuities can be observed.",
                "These discontinuities are an artifact of the small sample space used for this experiment.",
                "Basically, as soon as a password is broken, all nodes sharing that specific password are infected within a few seconds.",
                "Note that it is trivial for a swarm worm to scan and discovered a small shared password space.",
                "In Figure 4, the simulation results comparing Swarm Attack Behavior versus that of a Generic Malform Worm are presented.",
                "In this set of simulation runs, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "The data presented reflects the behaviors of three-(3) distinct classes of worm or swarm worms and two(2) different target host selection scanning strategies (random scanning and local bias).",
                "The amount of local bias was varied across multiple simulation runs.",
                "The results presented are aggregate behaviors.",
                "In general the following class of Generic Worms and Swarm Worms were simulated.",
                "Address Scanning: â¢ Random:= addresses are selected at random from a subset of the IPV4 space, namely, a 224 address space; and â¢ Local Bias:= addresses are selected at random from either a local subnet (256 addresses) or from a subset of the IPV4 space, namely, a 224 address space.",
                "The percentage of local bias is varied across multiple runs.",
                "Learning, Communication & Distributed Control â¢ I-NL-NS: Generic worm, independent (I), no learning/ memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ I-L-OOS: Generic worm, independent (I), learning/ memoryless (L), and one time sharing of information with offsprings only (OOS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; â¢ S-L-S&AOP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of addresses with neighbors and offsprings, shares passwords one time only (at creation) with offsprings(SA&OP); â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 4, the results are consistent with our set of empirical results.",
                "In addition, the following observations can be made. 1.",
                "Local preference is incredibly effective. 2.",
                "Short address handoffs are more effective than long ones.",
                "We varied the size of the list allowed in the sharing of addresses; the overhead associated with a long address list is detrimental to the performance of the swarm worm, as well as to its stealthiness; 3.",
                "For the local bias case, sharing valid addresses of susceptible host, S-L-S&AOP worm (recall, the S-L-S&AOP swarm shares passwords, one time only, with offsprings 328 at creation time) is more effective than sharing passwords in the case of the S-L-SP swarm.",
                "In this case, we can think of the swarm as launching a distributeddictionary attack: different segments of the swarm use different passwords to try to break into susceptible uninfected host.",
                "In the local bias mode, early in the life of the swarm, address-sharing is more effective than password-sharing, until most subnets are discovered.",
                "Then the targeting of local addresses assists in discovering the susceptible hosts, while the swarm members need to waste time rediscovering passwords; and 4.",
                "Infecting the last 0.5% of nodes takes a very long time in non-local bias mode.",
                "Basically, the shared password list across subnets has been exhausted, and the swarm reverts to simply a random discovery of password algorithm.",
                "Figure 3: Swarm Attack Behavior vs. Malform Worm: Empirical Results, 30node LAN Figure 4: Swarm Attack Behavior vs. Malform Worm: Simulation Results 5.",
                "SUMMARY AND FUTURE WORK In this manuscript, we have presented an abstract model, similar in some aspects to that of Weaver [5], that helps explain the generic nature of worms.",
                "The model presented in section 2 was extended to incorporate a new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
                "Such Swarm Worms are potentially more harmful than their generic counterparts.",
                "In addition, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
                "ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
                "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms is capable of compromising hosts a rates up to 2 orders of magnitude faster than its generic counterpart while retaining stealth capabilities.",
                "This work opens up a new area of interesting problems.",
                "Some of the most interesting and pressing problems to be consider are as follows: â¢ Is it possible to apply some of learning concepts developed over the last ten years in the areas of swarm intelligence, agent systems, and distributed control to the design of sophisticated swarm worms in such a way that true <br>emergent behavior</br> takes place? â¢ Are the current techniques being developed in the design of Intrusion Detection & CounterMeasure Systems and Survivable systems effective against this new class of worms? ; and â¢ What techniques, if any, can be developed to create defenses against swarm worms? 6.",
                "ACKNOWLEDGMENTS This work was conducted as part of a larger effort in the development of next generation Intrusion Detection & CounterMeasure Systems at WSSRL.",
                "The work is conducted under the auspices of Grant ACG-2004-06 by the Acumen Consulting Group, Inc., Marlboro, Massachusetts. 7.",
                "REFERENCES [1] C.C.",
                "Zou, L. Gao, W. G., and Towsley, D. Monitoring and early warning for internet worms.",
                "In 10th ACM Conference on Computer and Communications Security, Washington, DC (October 2003). [2] Liu, S., and Passino, K. Swarm intelligence: Literature overview.",
                "In Dept. of Electrical Engineering, The Ohio State University, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., and Weaver, N. The spread of the saphire/slammer worm.",
                "Tech. rep., A joint effort of CAIDA, ICSI, Silicon Defense, UC Berkeley EECS and UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S., and Cunningham, R. A taxonomy of computer worms.",
                "In Proceedings of the ACM Workshop on Rapid Malware (WORM) (2003). 329"
            ],
            "original_annotated_samples": [
                "Some of the most interesting and pressing problems to be consider are as follows: â¢ Is it possible to apply some of learning concepts developed over the last ten years in the areas of swarm intelligence, agent systems, and distributed control to the design of sophisticated swarm worms in such a way that true <br>emergent behavior</br> takes place? â¢ Are the current techniques being developed in the design of Intrusion Detection & CounterMeasure Systems and Survivable systems effective against this new class of worms? ; and â¢ What techniques, if any, can be developed to create defenses against swarm worms? 6."
            ],
            "translated_annotated_samples": [
                "Algunos de los problemas mÃ¡s interesantes y urgentes a considerar son los siguientes: â¢ Â¿Es posible aplicar algunos de los conceptos de aprendizaje desarrollados en los Ãºltimos diez aÃ±os en las Ã¡reas de inteligencia de enjambre, sistemas de agentes y control distribuido al diseÃ±o de gusanos de enjambre sofisticados de tal manera que se produzca un verdadero <br>comportamiento emergente</br>? â¢ Â¿Son efectivas las tÃ©cnicas actuales que se estÃ¡n desarrollando en el diseÃ±o de Sistemas de DetecciÃ³n y Contramedidas de IntrusiÃ³n y sistemas supervivientes contra esta nueva clase de gusanos?; y â¢ Â¿QuÃ© tÃ©cnicas, si las hay, se pueden desarrollar para crear defensas contra los gusanos de enjambre? 6."
            ],
            "translated_text": "Un AnÃ¡lisis Inicial y PresentaciÃ³n de Malware que Exhibe Comportamiento Similar a un Enjambre por Fernando C. ColÃ³n Osorio Laboratorio de InvestigaciÃ³n en Seguridad de Sistemas InalÃ¡mbricos (W.S.S.R.L.) El Slammer, que actualmente es el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada, se observÃ³ infectando el 90 por ciento de todos los hosts vulnerables de Internet en 10 minutos. Aunque la acciÃ³n principal que realiza el gusano Slammer es una replicaciÃ³n relativamente poco sofisticada de sÃ­ mismo, se propaga tan rÃ¡pidamente que la respuesta humana fue ineficaz. La mayorÃ­a de las estrategias de contramedidas propuestas se basan principalmente en la detecciÃ³n de tasas y algoritmos de limitaciÃ³n. Sin embargo, se estÃ¡n diseÃ±ando y desarrollando estrategias para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En nuestro trabajo, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n radicalmente diferentes, y posiblemente dichas tÃ©cnicas resultarÃ¡n ineficaces. EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. La Inteligencia Emergente es el comportamiento de sistemas, muy similar a sistemas biolÃ³gicos como hormigas o abejas, donde las interacciones locales simples de miembros autÃ³nomos, con acciones primitivas simples, dan lugar a un comportamiento global complejo e inteligente. En este manuscrito introduciremos los principios bÃ¡sicos detrÃ¡s de la idea de los Gusanos en Enjambre, asÃ­ como la estructura bÃ¡sica requerida para ser considerado un gusano en enjambre. AdemÃ¡s, presentaremos resultados preliminares sobre las velocidades de propagaciÃ³n de un gusano de enjambre llamado gusano ZachiK. Demostraremos que ZachiK es capaz de propagarse a una velocidad 2 Ã³rdenes de magnitud mÃ¡s rÃ¡pida que gusanos similares sin capacidades de enjambre. CategorÃ­as y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: DetecciÃ³n de Intrusiones; D.4.6 [Seguridad y ProtecciÃ³n]: Software Invasivo TÃ©rminos Generales ExperimentaciÃ³n, Seguridad 1. INTRODUCCIÃN Y TRABAJO PREVIO En las primeras horas de la maÃ±ana (05:30 GMT) del 25 de enero de 2003, el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada comenzÃ³ a propagarse por Internet. Dentro de los 10 minutos posteriores al primer huÃ©sped infectado (paciente cero), el 90 por ciento de todos los huÃ©spedes vulnerables habÃ­an sido comprometidos, creando una interrupciÃ³n significativa en la infraestructura de Internet a nivel global. Vern Paxson del Instituto Internacional de Ciencias de la ComputaciÃ³n y del Laboratorio Nacional Lawrence Berkeley comentÃ³ en su anÃ¡lisis de Slammer: El gusano Slammer se propagÃ³ tan rÃ¡pidamente que la respuesta humana fue ineficaz, ver [4]. La parte interesante, desde nuestro punto de vista, sobre la propagaciÃ³n de Slammer es que era un gusano relativamente poco sofisticado con un comportamiento benigno, es decir, la auto-reproducciÃ³n. Desde Slammer, los investigadores han explorado los comportamientos de los gusanos de propagaciÃ³n rÃ¡pida y han diseÃ±ado estrategias de contramedidas basadas principalmente en la detecciÃ³n de la velocidad y algoritmos de limitaciÃ³n. Por ejemplo, Zou, et al., [2], propusieron un esquema donde se utiliza un filtro de Kalman para detectar la propagaciÃ³n temprana de un gusano. Otros investigadores han propuesto el uso de detectores donde las tasas de mensajes de Destino Inalcanzable son monitoreadas por los firewalls, y un aumento significativo mÃ¡s allÃ¡ de lo normal alerta a la organizaciÃ³n sobre la posible presencia de un gusano. Sin embargo, tales estrategias sufren del sÃ­ndrome de luchar la Ãºltima guerra. Es decir, se estÃ¡n diseÃ±ando y desarrollando sistemas para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En el trabajo descrito aquÃ­, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n diferentes, y por lo tanto, dichas tÃ©cnicas pueden tener algunas limitaciones significativas. EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. El concepto de inteligencia emergente fue estudiado por primera vez en asociaciÃ³n con sistemas biolÃ³gicos. En tales estudios, los primeros investigadores descubrieron una variedad de comportamientos interesantes de insectos o animales en la naturaleza. Una bandada de pÃ¡jaros cruza el cielo. Un grupo de hormigas busca comida. Una escuela de peces nada, gira, huye juntos lejos de un depredador, y asÃ­ sucesivamente. En general, este tipo de movimiento agregado se ha llamado comportamiento de enjambre. Los biÃ³logos y cientÃ­ficos de la computaciÃ³n en el campo de la inteligencia artificial han estudiado tales enjambres biolÃ³gicos y han intentado crear modelos que expliquen cÃ³mo interactÃºan los elementos de un enjambre, logran objetivos y evolucionan. AdemÃ¡s, en los Ãºltimos aÃ±os el estudio de la inteligencia de enjambre ha cobrado cada vez mÃ¡s importancia en los campos de la robÃ³tica, el diseÃ±o de Redes MÃ³viles Ad-hoc (MANETS), el diseÃ±o de Sistemas de DetecciÃ³n de Intrusiones, el estudio de patrones de trÃ¡fico en sistemas de transporte, en aplicaciones militares y otras Ã¡reas, ver [3]. Los conceptos bÃ¡sicos que se han desarrollado en la Ãºltima dÃ©cada para explicar los enjambres y su comportamiento incluyen cuatro componentes bÃ¡sicos. Estos son: 1. Sencillez de la lÃ³gica y acciones: Un enjambre estÃ¡ compuesto por N agentes cuya inteligencia es limitada. Los agentes en el enjambre utilizan reglas locales simples para gobernar sus acciones. Algunos modelos llaman a estas acciones o comportamientos primitivos; 2. Mecanismos de comunicaciÃ³n local: Los agentes interactÃºan con otros miembros en el enjambre a travÃ©s de simples mecanismos de comunicaciÃ³n local. Por ejemplo, un pÃ¡jaro en una bandada percibe la posiciÃ³n del pÃ¡jaro adyacente y aplica una regla simple de evitaciÃ³n y seguimiento. 3. Control distribuido: Los agentes autÃ³nomos interactÃºan con su entorno, que probablemente consiste en otros agentes, pero actÃºan relativamente de forma independiente de todos los demÃ¡s agentes. No hay un mando central o lÃ­der, y ciertamente no hay un plan global. Inteligencia emergente: El comportamiento agregado de agentes autÃ³nomos resulta en comportamientos inteligentes complejos, incluyendo la autoorganizaciÃ³n. Para comprender completamente el comportamiento de tales enjambres, es necesario construir un modelo que explique el comportamiento de lo que llamaremos gusanos genÃ©ricos. Este modelo, que amplÃ­a el trabajo de Weaver [5], se presenta aquÃ­ en la secciÃ³n 2. AdemÃ¡s, tenemos la intenciÃ³n de ampliar dicho modelo de tal manera que explique claramente los comportamientos de esta nueva clase de gusanos potencialmente peligrosos llamados Gusanos en Enjambre. Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biolÃ³gicos y muestran un alto grado de aprendizaje, comunicaciÃ³n e inteligencia distribuida. Tales gusanos en enjambre son potencialmente mÃ¡s daÃ±inos que sus contrapartes genÃ©ricas similares. EspecÃ­ficamente, la primera instancia, segÃºn nuestro conocimiento, de un gusano de aprendizaje de este tipo fue creado, llamado ZachiK. ZachiK es un gusano enjambre de descifrado de contraseÃ±as simple que incorpora diferentes estrategias de aprendizaje y comparticiÃ³n de informaciÃ³n. Un gusano de enjambre similar fue desplegado tanto en una red de Ã¡rea local de treinta (30) hosts, como simulado en una topologÃ­a de 10,000 nodos. Los resultados preliminares mostraron que dichos gusanos son capaces de comprometer a los anfitriones a velocidades hasta dos Ã³rdenes de magnitud mÃ¡s rÃ¡pidas que su contraparte genÃ©rica. El resto de este manuscrito estÃ¡ estructurado de la siguiente manera. En la secciÃ³n 2 se presenta un modelo abstracto tanto de gusanos genÃ©ricos como de gusanos en enjambre. Este modelo se utiliza en la secciÃ³n 2.6 para describir la primera instancia de un gusano enjambre, ZachiK. En la secciÃ³n 4, se presentan resultados preliminares a travÃ©s de mediciones empÃ­ricas y simulaciones. Finalmente, en la secciÃ³n 5 se presentan nuestras conclusiones y perspectivas sobre trabajos futuros. MODELADO DE GUSANOS Para estudiar el comportamiento de los gusanos en enjambre en general, es necesario crear un modelo que refleje de manera realista la estructura de los gusanos y que no estÃ© necesariamente ligado a una instancia especÃ­fica. En esta secciÃ³n, describimos un modelo en el que un gusano general se describe como teniendo cuatro (4) componentes bÃ¡sicos o subfunciones. Por definiciÃ³n, un gusano es un programa autocontenido y auto propagante. Por lo tanto, en tÃ©rminos simples, tiene dos funciones principales: la que se propaga y la que realiza otras tareas. Proponemos que hay una tercera amplia funcionalidad de un gusano, la de autoconservaciÃ³n. TambiÃ©n proponemos que la otra funcionalidad de un gusano podrÃ­a ser categorizada de manera mÃ¡s apropiada como Acciones Basadas en Objetivos (ABO), ya que cualquier funcionalidad incluida en un gusano dependerÃ¡ naturalmente de los objetivos (y subobjetivos) que tenga el autor. El trabajo presentado por Weaver et al. en [5] nos proporciona principalmente una taxonomÃ­a de gusanos informÃ¡ticos basada en acciones y tÃ©cnicas, la cual utilizamos y ampliamos aquÃ­. 2.1 PropagaciÃ³n La funciÃ³n de propagaciÃ³n en sÃ­ misma puede desglosarse en tres acciones: adquirir objetivo, enviar escaneo e infectar objetivo. Adquirir el objetivo simplemente significa elegir un anfitriÃ³n para atacar a continuaciÃ³n. Enviar un escaneo implica verificar si ese host estÃ¡ receptivo a un intento de infecciÃ³n, ya que el espacio de direcciones IP estÃ¡ escasamente poblado. Esto puede implicar un simple ping para verificar si el host estÃ¡ activo o una evaluaciÃ³n completa de vulnerabilidades. Infectar al objetivo es el mÃ©todo real utilizado para enviar el cÃ³digo del gusano al nuevo hospedador. En forma de algoritmo: propagar() { host := adquirir_objetivo() Ã©xito := enviar_escaneo(host) si( Ã©xito ) entonces infectar(host) fin si } En el caso de un gusano simple que no verifica primero si el host estÃ¡ disponible o susceptible (como Slammer), se elimina el mÃ©todo de escaneo: propagar() { host := adquirir_objetivo() infectar(host) } Cada una de estas acciones puede tener un costo asociado a su inclusiÃ³n y ejecuciÃ³n, como un aumento en el tamaÃ±o del gusano y la carga de CPU o red. Dependiendo de las necesidades o requisitos de los autores, estos se convierten en factores limitantes en lo que puede incluirse en las acciones de los gusanos. Esto se discute mÃ¡s a fondo despuÃ©s de expandir sobre estas acciones a continuaciÃ³n. 2.2 AdquisiciÃ³n de Objetivos: La fase de AdquisiciÃ³n de Objetivos de nuestro algoritmo de gusano se construye directamente a partir de la secciÃ³n de Descubrimiento de Objetivos en [5]. Weaver et al. clasifican esta tarea en 5 categorÃ­as separadas. AquÃ­, ampliamos aÃºn mÃ¡s su trabajo a travÃ©s de la parametrizaciÃ³n. Escaneo: El escaneo puede considerarse un mÃ©todo basado en ecuaciones para elegir un anfitriÃ³n. Cualquier tipo de ecuaciÃ³n puede ser utilizada para llegar a una direcciÃ³n IP, pero hasta ahora se han visto tres tipos principales: secuencial, aleatorio y preferencia local. El escaneo secuencial es exactamente como suena: comenzar en una direcciÃ³n IP e incrementar a travÃ©s de todo el espacio de direcciones IP. Esto podrÃ­a llevar consigo las opciones de quÃ© IP empezar (valor elegido por el usuario, aleatorio o basado en la IP del host infectado) y cuÃ¡ntas veces incrementar (continuo, valor elegido o basado en subred). El escaneo aleatorio es completamente al azar (dependiendo del mÃ©todo PRNG elegido y su valor de semilla). El escaneo de preferencia local es una variante de Secuencial o Aleatorio, en la que tiene una mayor probabilidad de elegir una direcciÃ³n IP local en lugar de una remota (por ejemplo, la divisiÃ³n tradicional de 80/20). Listas de objetivos pregeneradas: Las listas de objetivos pregeneradas, o tambiÃ©n llamadas listas de objetivos, podrÃ­an incluir opciones para el porcentaje de la poblaciÃ³n total y el porcentaje de errores, o simplemente el nÃºmero de direcciones IP a incluir. ImplÃ­cito en este tipo es el hecho de que la lista se divide entre un padre y sus hijos, evitando el problema de que cada instancia golpee exactamente las mismas mÃ¡quinas. Listas de objetivos generadas externamente: Las listas de objetivos generadas externamente dependen de una o mÃ¡s fuentes externas que pueden ser consultadas para obtener datos del host. Esto implicarÃ¡ servidores que normalmente estÃ¡n pÃºblicamente disponibles, como los meta-servidores de juegos, o aquellos configurados explÃ­citamente por el gusano o el autor del gusano. Los meta-servidores normalmente disponibles podrÃ­an tener parÃ¡metros para tasas de cambio, como muchos apareciendo por la noche o desapareciendo por la maÃ±ana. Cada servidor tambiÃ©n podrÃ­a tener un mÃ¡ximo de consultas por segundo que serÃ­a capaz de manejar. El gusano tambiÃ©n necesitarÃ­a una forma de encontrar estos servidores, ya sea codificada en duro o a travÃ©s de escaneo. Listas de Objetivos Internos: Las Listas de Objetivos Internos dependen en gran medida del host infectado. Este mÃ©todo podrÃ­a parametrizar la elecciÃ³n de cuÃ¡nta informaciÃ³n hay en el host, como todas las mÃ¡quinas en la subred, todas las computadoras con Windows en la subred, servidores especÃ­ficos, nÃºmero de internos/externos, o alguna combinaciÃ³n. Los mÃ©todos pasivos son determinados por las interacciones normales entre los anfitriones. Los parÃ¡metros pueden incluir una tasa de interacciÃ³n con mÃ¡quinas particulares, una tasa de interacciÃ³n interna/externa, o una tasa de interacciÃ³n basada en subredes. Cualquiera de estos mÃ©todos tambiÃ©n puede combinarse para producir diferentes tipos de estrategias de adquisiciÃ³n de objetivos. Por ejemplo, un gusano puede comenzar con una lista inicial de 100 hosts o subredes diferentes. Una vez que haya agotado su bÃºsqueda utilizando la lista de Ã©xitos, puede proceder a realizar un escaneo aleatorio con un sesgo local del 50%. Es importante tener en cuenta, sin embargo, que el consumo de recursos de cada mÃ©todo no es el mismo. Diferentes mÃ©todos pueden requerir que el gusano sea grande, como los bytes adicionales necesarios para una lista de objetivos, o que tome mÃ¡s tiempo de procesamiento, como al buscar direcciones de otros hosts vulnerables en el host. Se deben realizar investigaciones y anÃ¡lisis adicionales en esta Ã¡rea para determinar los costos asociados de utilizar cada mÃ©todo. Los costos podrÃ­an ser utilizados para determinar los compromisos de diseÃ±o en los que los autores de gusanos participan. Por ejemplo, las listas de objetivos proporcionan una alta tasa de infecciÃ³n, pero a un alto costo en el tamaÃ±o de la carga Ãºtil del gusano. 2.2.1 EnvÃ­o de un Escaneo La funciÃ³n de envÃ­o de escaneo prueba si el host estÃ¡ disponible para la infecciÃ³n. Esto puede ser tan simple como verificar si el host estÃ¡ activo en la red o tan complejo como verificar si el host es vulnerable al exploit que se utilizarÃ¡. El envÃ­o de un escaneo antes de intentar una infecciÃ³n puede aumentar la tasa de escaneo si el costo por fallar en una infecciÃ³n es mayor que el costo de fallar en un escaneo o de enviar un escaneo mÃ¡s una infecciÃ³n; y las fallas son mÃ¡s frecuentes que los Ã©xitos. Un parÃ¡metro importante para esto serÃ­a la elecciÃ³n del protocolo de transporte (TCP/UDP) o simplemente el tiempo para un escaneo exitoso y el tiempo para un escaneo fallido. AdemÃ¡s, ya sea que se pruebe si el host estÃ¡ activo o si es una prueba completa de la vulnerabilidad (o de mÃºltiples vulnerabilidades). 2.2.2 Vector de InfecciÃ³n (VI) El vector de infecciÃ³n particular utilizado para acceder al host remoto depende principalmente de la vulnerabilidad especÃ­fica elegida para explotar. En un sentido no especÃ­fico, depende del protocolo de transporte elegido para usar y del tamaÃ±o del mensaje que se va a enviar. La SecciÃ³n 3 de [5] tambiÃ©n propone tres clases particulares de IV: Autotransportado, segundo canal e incrustado. 2.3 AutopreservaciÃ³n Las acciones de autopreservaciÃ³n de un gusano pueden tomar muchas formas. En la naturaleza, se ha observado que los gusanos desactivan el software antivirus o evitan enviarse a ciertas direcciones conocidas por los antivirus. TambiÃ©n se ha observado que intentan deshabilitar otros gusanos que podrÃ­an estar compitiendo por el mismo sistema. TambiÃ©n creemos que un escaneo con limitaciÃ³n de tiempo podrÃ­a ayudar al gusano a pasar desapercibido. TambiÃ©n proponemos un mÃ©todo de seÃ±uelo, mediante el cual un gusano liberarÃ¡ a unos pocos hijos que causen mucho ruido para que el progenitor no sea notado. TambiÃ©n se ha propuesto [5] que un gusano cause daÃ±o a su huÃ©sped si, y solo si, se ve perturbado de alguna manera. Este mÃ³dulo podrÃ­a contener parÃ¡metros para: probabilidad de Ã©xito en deshabilitar actualizaciones de antivirus u otro software, probabilidad de ser detectado y por ende eliminado, o fortalecimiento del anfitriÃ³n contra otros gusanos. 2.4 Acciones Basadas en Objetivos La funcionalidad de GBA de un gusano depende de la lista de objetivos del autor. La secciÃ³n de Cargas Ãºtiles de [5] proporciona algunas sugerencias Ãºtiles para dicho mÃ³dulo. La apertura de una puerta trasera puede hacer que el anfitriÃ³n sea susceptible a mÃ¡s ataques. Esto implicarÃ­a una probabilidad de que se utilice la puerta trasera y cualquier utilizaciÃ³n de trÃ¡fico asociada. TambiÃ©n podrÃ­a proporcionar una lista de otros gusanos a los que este hospedador es ahora susceptible o una lista de vulnerabilidades que este hospedador tiene ahora. Los retransmisores de spam y los servidores proxy HTTP, por supuesto, tienen un consumo de ancho de banda o un patrÃ³n de trÃ¡fico asociado. Los ataques de denegaciÃ³n de servicio en Internet tendrÃ­an un tiempo de activaciÃ³n establecido, un objetivo y un patrÃ³n de trÃ¡fico. El daÃ±o de los datos tendrÃ­a una probabilidad asociada de que el anfitriÃ³n muera debido al daÃ±o. En la Figura 1, se resume este modelo general de un gusano. Por favor, tenga en cuenta que en este modelo no hay aprendizaje, o muy poco, intercambio de informaciÃ³n entre las instancias de gusano, y ciertamente no hay coordinaciÃ³n de acciones. En la siguiente secciÃ³n ampliamos el modelo para incluir dichos mecanismos, y por lo tanto, llegamos al modelo general de un gusano en enjambre. 2.5 Enjambres - Modelo General Como se describe en la secciÃ³n 1, las caracterÃ­sticas bÃ¡sicas que distinguen el comportamiento en enjambre de lo que simplemente parece ser comportamientos colectivos coordinados son cuatro atributos bÃ¡sicos. Estos son: 1. Sencillez de lÃ³gica y acciones; 2. Mecanismos de ComunicaciÃ³n Local; 3. Control distribuido; y 4. Inteligencia emergente, incluyendo autoorganizaciÃ³n. 325 Estructura FunciÃ³n/Ejemplo InfecciÃ³n, Vector de InfecciÃ³n El ejecutable se ejecuta ProtecciÃ³n y sigilo Deshabilitar McAfee (Mantenerse vivo) PropagaciÃ³n Enviar correo electrÃ³nico a todos en la libreta de direcciones AcciÃ³n basada en objetivos (ABO) DDoS www.sco.com Todo lo demÃ¡s, a menudo llamado carga Ãºtil Figura 1: Modelo general de gusano En este trabajo agregamos todos estos atributos bajo el tÃ­tulo general de Aprendizaje, ComunicaciÃ³n y Control Distribuido. La presencia de estos atributos distingue a los gusanos de enjambre de los gusanos regulares, u otros tipos de malware como los Zombies. En la figura ? ?, el modelo genÃ©rico de un gusano se amplÃ­a para incluir este conjunto de acciones. Dentro de este contexto, un gusano como Slammer no puede ser categorizado como un gusano en enjambre debido a que las nuevas instancias del gusano no coordinan sus acciones ni comparten informaciÃ³n. Por otro lado, los zombies y muchas otras formas de DDoS, que a primera vista pueden considerarse gusanos enjambre, no lo son. Esto se debe simplemente al hecho de que en el caso de los zombies, el control no estÃ¡ distribuido sino centralizado, y no surgen comportamientos emergentes. Lo Ãºltimo, la posible apariciÃ³n de inteligencia o nuevos comportamientos es lo que hace que los gusanos en enjambre sean potencialmente peligrosos. Finalmente, cuando se considera la mayorÃ­a de las interrupciones recientes en la Infraestructura de Internet, y a la luz de nuestra descripciÃ³n de los ataques en enjambre, entonces dichas interrupciones pueden ser fÃ¡cilmente categorizadas como precursores de un comportamiento verdaderamente en enjambre. EspecÃ­ficamente, â¢ DDOS: Un gran nÃºmero de hosts comprometidos envÃ­an paquetes inÃºtiles que requieren procesamiento (Stacheldraht, http://www.cert.org/incidentnotes/IN-99-04.html). Los ataques DDoS son los precursores tempranos de los Ataques en Enjambre debido al gran nÃºmero de agentes involucrados. â¢ Code Red CrV1, Code Red II, Nimbda - Exhiben nociones tempranas de ataques en enjambre, incluyendo un canal de comunicaciÃ³n oculto. â¢ Staniford & Paxson en Â¿CÃ³mo Dominar Internet en Tu Tiempo Libre? exploran modificaciones a CrV1, Code Red I, II con un tipo de comportamiento similar a un enjambre. Por ejemplo, especulan sobre nuevos gusanos que emplean comunicaciÃ³n directa de gusano a gusano y utilizan actualizaciones programables. Por ejemplo, el gusano Warhol y los gusanos de Permutation-Scanning (autocoordinados). 2.6 Gusano Swarm: los detalles Al considerar la creaciÃ³n de lo que creÃ­amos que era el primer Gusano Swarm en existencia, querÃ­amos adherirnos lo mÃ¡s cercanamente posible al modelo general presentado en la secciÃ³n ? ? mientras facilitÃ¡bamos al mismo tiempo un anÃ¡lisis a gran escala, tanto empÃ­rico como a travÃ©s de simulaciones, del comportamiento del enjambre. Por esta razÃ³n, seleccionamos como primera instancia Estructura FunciÃ³n/Ejemplo InfecciÃ³n, InfecciÃ³n Vector Ejecutable se ejecuta ProtecciÃ³n y Sigilo Deshabilitar McAfee (ManteniÃ©ndose Vivo) PropagaciÃ³n Enviar correo electrÃ³nico a todos en la libreta de direcciones Aprendizaje, ComunicaciÃ³n, Feromonas/Banderas (Prueba y Control Distribuido si el Gusano ya estÃ¡ presente) Bombas de tiempo, Algoritmos de Aprendizaje, Canal IRC AcciÃ³n Basada en Objetivos (ABO) DDoS www.sco.com Todo lo demÃ¡s, a menudo llamado carga Ãºtil Figura 2: Modelo General de un Gusano de Enjambre del enjambre un gusano simple de craqueo de contraseÃ±as. El objetivo de este gusano simplemente es infectar a un anfitriÃ³n intentando secuencialmente iniciar sesiÃ³n en el anfitriÃ³n utilizando contraseÃ±as conocidas (ataque de diccionario), contraseÃ±as que han sido descubiertas previamente por cualquier miembro del enjambre, y contraseÃ±as aleatorias. Una vez que un huÃ©sped estÃ¡ infectado, el gusano crearÃ¡ canales de comunicaciÃ³n tanto con sus vecinos conocidos en ese momento, como con cualquier descendencia que genere con Ã©xito. En este contexto, una generaciÃ³n exitosa de una descendencia significa simplemente infectar a un nuevo huÃ©sped y replicar una copia exacta de sÃ­ misma en dicho huÃ©sped. Llamamos a este gusano enjambre el gusano ZachiK en honor a uno de sus creadores. Como se puede ver en esta descripciÃ³n, el gusano ZachiK exhibe todos los elementos descritos anteriormente. En las siguientes secciones, describimos detalladamente cada uno de los elementos del gusano ZachiK. 2.7 Vector de InfecciÃ³n El vector de infecciÃ³n utilizado por el gusano ZachiK es el protocolo de shell seguro SSH. Se escribiÃ³ un cliente modificado que es capaz de recibir contraseÃ±as desde la lÃ­nea de comandos, e integrado con un script que le suministra diversas contraseÃ±as: conocidas y aleatorias. Cuando se encuentra una contraseÃ±a para un objetivo adecuado, comienza el proceso de infecciÃ³n. DespuÃ©s de descubrir la contraseÃ±a de root de un host, el gusano infecta el host objetivo y se replica a sÃ­ mismo. El gusano crea un nuevo directorio en el host objetivo, copia el cliente ssh modificado, el script, los servidores de comunicaciones y las versiones actualizadas de los archivos de datos (lista de contraseÃ±as conocidas y una lista de vecinos actuales). Luego ejecuta el script modificado en los hosts reciÃ©n infectados, lo que genera el servidor de comunicaciones, notifica a los vecinos y comienza a buscar nuevos objetivos. Se podrÃ­a argumentar, de manera correcta, que el gusano ZachiK puede ser fÃ¡cilmente derrotado por las tÃ©cnicas de contramedidas actuales presentes en la mayorÃ­a de los sistemas hoy en dÃ­a, como la prohibiciÃ³n de accesos directos de root desde la red. Dentro de este contexto, ZachiK puede ser rÃ¡pidamente descartado como un gusano muy simple e inofensivo que no requiere un estudio adicional. Sin embargo, el lector deberÃ­a considerar lo siguiente: 1. ZachiK se puede modificar fÃ¡cilmente para incluir una variedad de vectores de infecciÃ³n. Por ejemplo, podrÃ­a programarse para adivinar nombres de usuario comunes y sus contraseÃ±as; obtener acceso al sistema, luego adivinar la contraseÃ±a de root o utilizar otras vulnerabilidades conocidas para obtener privilegios de root. ZachiK es un gusano de prueba de concepto. La importancia de ZachiK radica en que incorpora todos los comportamientos de un gusano en enjambre, incluyendo, pero no limitÃ¡ndose a, el control distribuido, la comunicaciÃ³n entre agentes y el aprendizaje; 3. ZachiK estÃ¡ compuesto por una gran colecciÃ³n de agentes que operan de forma independiente, lo que se presta naturalmente a algoritmos paralelos como la bÃºsqueda paralela del espacio de direcciones IPV4. Dentro de este contexto, SLAMMER incorpora una capacidad de bÃºsqueda paralela de direcciones potencialmente susceptibles. Sin embargo, a diferencia de ZachiK, el conocimiento descubierto por la bÃºsqueda nunca se comparte entre los agentes. Por estas razones, y muchas otras, no se debe descartar el potencial de esta nueva clase de gusanos, sino mÃ¡s bien abrazar su estudio. 2.8 AutopreservaciÃ³n En el caso del gusano ZachiK, las principales tÃ©cnicas de autopreservaciÃ³n utilizadas son simplemente mantener el tamaÃ±o de la carga Ãºtil pequeÃ±o. En este contexto, esto simplemente significa restringir la cantidad de contraseÃ±as que una descendencia hereda, enmascarar mensajes de gusano como solicitudes http comunes y limitar el nÃºmero de vecinos a un mÃ¡ximo de cinco-(5). 2.9 PropagaciÃ³n Elegir el(los) prÃ³ximo(s) objetivo(s) de manera eficiente requiere reflexiÃ³n. En el pasado, los gusanos conocidos y propuestos, ver [5], han aplicado tÃ©cnicas de propagaciÃ³n que variaban. Estos incluyen: selecciÃ³n estrictamente aleatoria de un posible anfitriÃ³n vulnerable; listas de objetivos de anfitriones vulnerables; selecciÃ³n aleatoria localmente sesgada (seleccionar un objetivo de anfitriÃ³n al azar de una subred local); y una combinaciÃ³n de algunas o todas las anteriores. En nuestros entornos de prueba y simulaciÃ³n, aplicaremos una combinaciÃ³n de selecciÃ³n localmente sesgada y totalmente aleatoria de posibles hosts vulnerables. Sin embargo, debido a que el gusano ZachiK es un gusano enjambre, la informaciÃ³n de descubrimiento de direcciones (es decir, cuando se descubren direcciones inexistentes) se compartirÃ¡ entre los miembros del enjambre. Los hilos de infecciÃ³n y propagaciÃ³n realizan el siguiente conjunto de actividades repetidamente: â¢ Elegir una direcciÃ³n â¢ Verificar la validez de la direcciÃ³n â¢ Elegir un conjunto de contraseÃ±as â¢ Intentar infectar al host seleccionado con este conjunto de contraseÃ±as. Como se describiÃ³ anteriormente, la elecciÃ³n de una direcciÃ³n hace uso de una combinaciÃ³n de selecciÃ³n aleatoria, sesgo local y listas de objetivos. EspecÃ­ficamente, para elegir una direcciÃ³n, la instancia puede: â¢ Generar una nueva direcciÃ³n aleatoria â¢ Generar una direcciÃ³n en la red local â¢ Elegir una direcciÃ³n de una lista de transferencia La elecciÃ³n se realiza de forma aleatoria entre estas opciones, y puede variarse para probar la dependencia de la propagaciÃ³n en elecciones particulares. Las contraseÃ±as son elegidas de una lista de contraseÃ±as conocidas o generadas recientemente. Cuando una infecciÃ³n de una direcciÃ³n vÃ¡lida falla, se agrega a una lista de entregas, que se envÃ­a a los vecinos para intentar solucionar el problema. 2.10 Aprendizaje, ComunicaciÃ³n y Control Distribuido 2.10.1 ComunicaciÃ³n El concepto de un enjambre se basa en la transferencia de informaciÃ³n entre vecinos, quienes retransmiten sus nuevos mensajes entrantes a sus vecinos, y asÃ­ sucesivamente hasta que cada instancia del gusano en el enjambre estÃ© al tanto de estos mensajes. Hay dos clases de mensajes: mensajes de datos o informaciÃ³n y comandos. Los mensajes de comando estÃ¡n destinados a un usuario externo (tambiÃ©n conocidos como hackers y/o crackers) para controlar las acciones de las instancias, y actualmente no estÃ¡n implementados. Los mensajes de informaciÃ³n actualmente son de tres tipos: nuevo miembro, contraseÃ±as y direcciones explotables (transferencias). Los mensajes de nuevo miembro son mensajes que una nueva instancia envÃ­a a los vecinos en su lista (corta) de vecinos iniciales. Los vecinos luego registran estas instancias en su lista de vecinos. Estos son mensajes que forman la multi-conectividad del enjambre, y sin ellos, la topologÃ­a serÃ­a una estructura en forma de Ã¡rbol, donde la eliminaciÃ³n de un solo nodo harÃ­a que las instancias debajo de Ã©l fueran inaccesibles. Los mensajes de contraseÃ±as informan instancias de contraseÃ±as reciÃ©n descubiertas, y al informar a todas las instancias, el enjambre en su totalidad recopila esta informaciÃ³n, lo que le permite infectar nuevas instancias de manera mÃ¡s efectiva. Los mensajes de entrega informan instancias de direcciones vÃ¡lidas que no pudieron ser comprometidas (fallaron al romper la contraseÃ±a de la cuenta root). Dado que el espacio de direcciones es bastante disperso, lleva un tiempo relativamente largo (es decir, muchos intentos) descubrir una direcciÃ³n vÃ¡lida. Por lo tanto, al entregar las direcciones vÃ¡lidas descubiertas, el enjambre estÃ¡ (a) conservando energÃ­a al no redescubrir las mismas direcciones (b) atacando de manera mÃ¡s efectiva. De cierta manera, esto es una simple instancia de actividad coordinada de un enjambre. 2.10.2 CoordinaciÃ³n Cuando nace una instancia de gusano, transmite su existencia a todos los vecinos en su lista. El hilo principal luego genera algunas hebras de infecciÃ³n y continÃºa manejando mensajes entrantes (registrando vecinos, agregando nuevas contraseÃ±as, recibiendo direcciones y transmitiendo estos mensajes). 2.10.3 Control Distribuido El control en el gusano ZachiK es distribuido en el sentido de que cada instancia del gusano realiza un conjunto de acciones de forma independiente de cada otra instancia, al mismo tiempo que se beneficia del aprendizaje logrado por sus vecinos inmediatos. 2.11 Acciones Basadas en Objetivos La primera instancia del gusano ZachiK tiene dos objetivos bÃ¡sicos. Estos son: (1) propagar, y (2) descubrir y compartir con los miembros de la colonia nuevas contraseÃ±as de root. 3. DISEÃO EXPERIMENTAL Para verificar nuestra hipÃ³tesis de que los Gusanos de Enjambre son mÃ¡s capaces y, por lo tanto, mÃ¡s peligrosos que otros 327 gusanos conocidos, se creÃ³ un banco de pruebas de red y se desarrollÃ³ un simulador capaz de simular topologÃ­as a gran escala similares a Internet (espacio IPV4). El banco de pruebas de red consistÃ­a en una red de Ã¡rea local de 30 computadoras basadas en Linux. El simulador fue escrito en C++. El gusano de enjambre simple descrito en la secciÃ³n 2.6 se utilizÃ³ para infectar al paciente cero, y luego se permitiÃ³ que el gusano de enjambre se propagara a travÃ©s de sus propios mecanismos de propagaciÃ³n, control distribuido y comportamientos de enjambre. En el caso de una red de Ã¡rea local simple de 30 computadoras, se seleccionaron seis (6) contraseÃ±as raÃ­z diferentes de un espacio de contraseÃ±as de 4 dÃ­gitos (10000 opciones). Al comienzo del experimento se conoce una Ãºnica contraseÃ±a, la del paciente cero. Todas las contraseÃ±as compartidas se distribuyen aleatoriamente en todos los nodos. De manera similar, en el caso de la simulaciÃ³n, se construyÃ³ una topologÃ­a de red de 10,000 hosts cuyas direcciones fueron seleccionadas al azar en el espacio IPV4. Dentro de ese espacio, se seleccionaron y distribuyeron un total de 200 contraseÃ±as compartidas ya sea de forma aleatoria y/o dirigida a subredes especÃ­ficas de topologÃ­as de red. Por ejemplo, en una de nuestras ejecuciones de simulaciÃ³n, la topologÃ­a de red consistÃ­a en 200 subredes, cada una conteniendo 50 hosts. En dicha topologÃ­a, las contraseÃ±as compartidas se distribuÃ­an en subredes donde un porcentaje variable de contraseÃ±as se compartÃ­an entre subredes. Los porcentajes de contraseÃ±as compartidas utilizadas reflejaban los primeros estudios empÃ­ricos, donde se descubriÃ³ que hasta el 39.7% de las contraseÃ±as comunes eran compartidas. RESULTADOS En la Figura 3 se presentan los resultados comparando el comportamiento del Ataque de Enjambre versus el de un Gusano Malformado tÃ­pico para una LAN de 30 nodos. En este conjunto de ejecuciones empÃ­ricas, seis (6) contraseÃ±as compartidas fueron distribuidas al azar en todos los nodos de un total de 10,000 contraseÃ±as desconocidas posibles. Los datos presentados reflejan los comportamientos de un total de tres (3) clases distintas de gusanos o enjambres de gusanos. La clase de gusanos presentada es la siguiente: â¢ I-NS-NL:= Gusano genÃ©rico, independiente (I), sin aprendizaje/sin memoria (NL), y sin compartir informaciÃ³n con vecinos o descendientes (NS); â¢ S-L-SP:= Gusano en enjambre (S), aprendizaje (L), mantiene una lista de contraseÃ±as aprendidas, y comparte contraseÃ±as (SP) con vecinos mÃ¡s cercanos y descendientes; y â¢ S-L-SP&A:= Gusano en enjambre (S), aprendizaje (L), mantiene una lista de contraseÃ±as aprendidas, y comparte contraseÃ±as y direcciones existentes (SP&A) con vecinos mÃ¡s cercanos y descendientes. Como se muestra en la Figura 3, los resultados validan nuestra hipÃ³tesis original de que los gusanos en enjambre son significativamente mÃ¡s eficientes y peligrosos que los gusanos genÃ©ricos. En este conjunto de experimentos, el compartir contraseÃ±as proporciona una mejora de un orden de magnitud sobre un gusano aleatorio sin memoria. De manera similar, un gusano en enjambre que comparte contraseÃ±as y direcciones es aproximadamente dos Ã³rdenes de magnitud mÃ¡s eficiente que su contraparte genÃ©rica. En la Figura 3, se pueden observar una serie de discontinuidades. Estas discontinuidades son un artefacto del pequeÃ±o espacio muestral utilizado para este experimento. BÃ¡sicamente, tan pronto como se rompe una contraseÃ±a, todos los nodos que comparten esa contraseÃ±a especÃ­fica se infectan en cuestiÃ³n de segundos. Ten en cuenta que es trivial para un gusano en enjambre escanear y descubrir un pequeÃ±o espacio de contraseÃ±as compartidas. En la Figura 4, se presentan los resultados de la simulaciÃ³n comparando el Comportamiento de Ataque de Enjambre con el de un Gusano Malformado GenÃ©rico. En este conjunto de ejecuciones de simulaciÃ³n, se construyÃ³ una topologÃ­a de red de 10,000 hosts, cuyas direcciones fueron seleccionadas aleatoriamente en el espacio IPV4. Dentro de ese espacio, se seleccionaron y distribuyeron un total de 200 contraseÃ±as compartidas ya sea de forma aleatoria y/o dirigida a subredes especÃ­ficas de topologÃ­as de red. Los datos presentados reflejan los comportamientos de tres (3) clases distintas de gusanos o gusanos en enjambre y dos (2) estrategias de exploraciÃ³n de selecciÃ³n de objetivo de host diferentes (exploraciÃ³n aleatoria y sesgo local). La cantidad de sesgo local variÃ³ en mÃºltiples ejecuciones de simulaciÃ³n. Los resultados presentados son comportamientos agregados. En general, se simularon las siguientes clases de Gusanos GenÃ©ricos y Gusanos en Enjambre. ExploraciÃ³n de direcciones: â¢ Aleatoria:= las direcciones se seleccionan al azar de un subconjunto del espacio IPV4, es decir, un espacio de 224 direcciones; y â¢ Sesgo local:= las direcciones se seleccionan al azar de una subred local (256 direcciones) o de un subconjunto del espacio IPV4, es decir, un espacio de 224 direcciones. El porcentaje de sesgo local varÃ­a en mÃºltiples ejecuciones. Aprendizaje, ComunicaciÃ³n y Control Distribuido â¢ I-NL-NS: Gusano genÃ©rico, independiente (I), sin aprendizaje/sin memoria (NL), y sin compartir informaciÃ³n con vecinos o descendientes (NS); â¢ I-L-OOS: Gusano genÃ©rico, independiente (I), con aprendizaje/sin memoria (L), y compartiendo informaciÃ³n una sola vez con descendientes solamente (OOS); â¢ S-L-SP:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte contraseÃ±as (SP) con vecinos mÃ¡s cercanos y descendientes; â¢ S-L-S&AOP:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte direcciones con vecinos y descendientes, comparte contraseÃ±as solo una vez (al crearse) con descendientes (SA&OP); â¢ S-L-SP&A:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte contraseÃ±as y direcciones existentes (SP&A) con vecinos mÃ¡s cercanos y descendientes. Como se muestra en la Figura 4, los resultados son consistentes con nuestro conjunto de resultados empÃ­ricos. AdemÃ¡s, se pueden hacer las siguientes observaciones. 1. La preferencia local es increÃ­blemente efectiva. Las transferencias cortas de direcciÃ³n son mÃ¡s efectivas que las largas. Variamos el tamaÃ±o de la lista permitida en el intercambio de direcciones; el sobrecosto asociado con una lista de direcciones larga es perjudicial para el rendimiento del gusano en enjambre, asÃ­ como para su sigilo; 3. Para el caso de sesgo local, compartir direcciones vÃ¡lidas de host susceptibles, el gusano S-L-S&AOP (recuerde, el enjambre S-L-S&AOP comparte contraseÃ±as, solo una vez, con descendientes 328 en el momento de la creaciÃ³n) es mÃ¡s efectivo que compartir contraseÃ±as en el caso del enjambre S-L-SP. En este caso, podemos pensar en el enjambre como lanzando un ataque de diccionario distribuido: diferentes segmentos del enjambre utilizan diferentes contraseÃ±as para intentar ingresar a hosts no infectados susceptibles. En el modo de sesgo local, al principio de la vida del enjambre, compartir direcciones es mÃ¡s efectivo que compartir contraseÃ±as, hasta que se descubran la mayorÃ­a de las subredes. Entonces, el apuntar a direcciones locales ayuda a descubrir los hosts susceptibles, mientras que los miembros del enjambre necesitan perder tiempo redescubriendo contraseÃ±as; y 4. Infectar el Ãºltimo 0.5% de los nodos lleva mucho tiempo en modo de sesgo no local. BÃ¡sicamente, la lista de contraseÃ±as compartidas entre subredes se ha agotado, y el enjambre vuelve a simplemente descubrir una contraseÃ±a al azar. Figura 3: Comportamiento del Ataque de Enjambre vs Gusano Malformado: Resultados EmpÃ­ricos, LAN de 30 nodos Figura 4: Comportamiento del Ataque de Enjambre vs Gusano Malformado: Resultados de SimulaciÃ³n 5. RESUMEN Y TRABAJO FUTURO En este manuscrito, hemos presentado un modelo abstracto, similar en algunos aspectos al de Weaver [5], que ayuda a explicar la naturaleza genÃ©rica de los gusanos. El modelo presentado en la secciÃ³n 2 se extendiÃ³ para incorporar una nueva clase de gusanos potencialmente peligrosos llamados Gusanos en Enjambre. Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biolÃ³gicos y muestran un alto grado de aprendizaje, comunicaciÃ³n e inteligencia distribuida. Tales gusanos en enjambre son potencialmente mÃ¡s daÃ±inos que sus contrapartes genÃ©ricas. AdemÃ¡s, se creÃ³ la primera instancia, que sepamos, de un gusano de aprendizaje, llamado ZachiK. ZachiK es un gusano enjambre de descifrado de contraseÃ±as simple que incorpora diferentes estrategias de aprendizaje y comparticiÃ³n de informaciÃ³n. Un gusano de enjambre similar fue desplegado tanto en una red de Ã¡rea local de treinta (30) hosts, como simulado en una topologÃ­a de 10,000 nodos. Los resultados preliminares mostraron que tales gusanos son capaces de comprometer a los anfitriones a tasas hasta 2 Ã³rdenes de magnitud mÃ¡s rÃ¡pido que su contraparte genÃ©rica, manteniendo al mismo tiempo sus capacidades de sigilo. Este trabajo abre una nueva Ã¡rea de problemas interesantes. Algunos de los problemas mÃ¡s interesantes y urgentes a considerar son los siguientes: â¢ Â¿Es posible aplicar algunos de los conceptos de aprendizaje desarrollados en los Ãºltimos diez aÃ±os en las Ã¡reas de inteligencia de enjambre, sistemas de agentes y control distribuido al diseÃ±o de gusanos de enjambre sofisticados de tal manera que se produzca un verdadero <br>comportamiento emergente</br>? â¢ Â¿Son efectivas las tÃ©cnicas actuales que se estÃ¡n desarrollando en el diseÃ±o de Sistemas de DetecciÃ³n y Contramedidas de IntrusiÃ³n y sistemas supervivientes contra esta nueva clase de gusanos?; y â¢ Â¿QuÃ© tÃ©cnicas, si las hay, se pueden desarrollar para crear defensas contra los gusanos de enjambre? 6. AGRADECIMIENTOS Este trabajo se realizÃ³ como parte de un esfuerzo mÃ¡s amplio en el desarrollo de sistemas de DetecciÃ³n de Intrusiones y Contramedidas de prÃ³xima generaciÃ³n en WSSRL. El trabajo se lleva a cabo bajo los auspicios de la subvenciÃ³n ACG-2004-06 otorgada por Acumen Consulting Group, Inc., Marlboro, Massachusetts. REFERENCIAS [1] C.C. Zou, L. Gao, W. G., y Towsley, D. Monitoreo y alerta temprana para gusanos de internet. En la 10Âª Conferencia ACM sobre Seguridad InformÃ¡tica y de Comunicaciones, Washington, DC (octubre de 2003). [2] Liu, S. y Passino, K. Inteligencia de enjambre: Resumen de la literatura. En el Departamento de IngenierÃ­a ElÃ©ctrica, Universidad Estatal de Ohio, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., y Weaver, N. La propagaciÃ³n del gusano saphire/slammer. Inf. tÃ©cnico, Un esfuerzo conjunto de CAIDA, ICSI, Silicon Defense, UC Berkeley EECS y UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S. y Cunningham, R. Una taxonomÃ­a de gusanos informÃ¡ticos. En Actas del Taller de ACM sobre Malware RÃ¡pido (WORM) (2003). 329 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "internet worm": {
            "translated_key": "gusanos de internet",
            "is_in_text": true,
            "original_annotated_sentences": [
                "An Initial Analysis and Presentation of Malware Exhibiting Swarm-Like Behavior Fernando C.ColÂ´on Osorio Wireless System Security Research Laboratory (W.S.S.R.L.)",
                "420 Lakeside Avneue Marlboro, Massachusetts 01752 fcco@cs.wpi.edu Zachi Klopman Wireless System Security Research Laboratory (W.S.S.R.L.) 420 Lakeside Avneue Marlboro, Massachusetts 01752 zachi@cs.wpi.edu ABSTRACT The Slammer, which is currently the fastest computer worm in recorded history, was observed to infect 90 percent of all vulnerable Internets hosts within 10 minutes.",
                "Although the main action that the Slammer worm takes is a relatively unsophisticated replication of itself, it still spreads so quickly that human response was ineffective.",
                "Most proposed countermeasures strategies are based primarily on rate detection and limiting algorithms.",
                "However, such strategies are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In our work, we put forth the hypothesis that next generation worms will be radically different, and potentially such techniques will prove ineffective.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
                "Emergent Intelligence is the behavior of systems, very much like biological systems such as ants or bees, where simple local interactions of autonomous members, with simple primitive actions, gives rise to complex and intelligent global behavior.",
                "In this manuscript we will introduce the basic principles behind the idea of Swarm Worms, as well as the basic structure required in order to be considered a swarm worm.",
                "In addition, we will present preliminary results on the propagation speeds of one such swarm worm, called the ZachiK worm.",
                "We will show that ZachiK is capable of propagating at a rate 2 orders of magnitude faster than similar worms without swarm capabilities.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Intrusion Detection; D.4.6 [Security and Protection]: Invasive software General Terms Experimentation, Security 1.",
                "INTRODUCTION AND PREVIOUSWORK In the early morning hours (05:30 GMT) of January 25, 2003 the fastest computer worm in recorded history began spreading throughout the Internet.",
                "Within 10 minutes after the first infected host (patient zero), 90 percent of all vulnerable hosts had been compromised creating significant disruption to the global Internet infrastructure.",
                "Vern Paxson of the International Computer Science Institute and Lawrence Berkeley National Laboratory in its analysis of Slammer commented: The Slammer worm spread so quickly that human response was ineffective, see [4] The interesting part, from our perspective, about the spread of Slammer is that it was a relatively unsophisticated worm with benign behavior, namely self-reproduction.",
                "Since Slammer, researchers have explored the behaviors of fast spreading worms, and have designed countermeasures strategies based primarily on rate detection and limiting algorithms.",
                "For example, Zou, et al., [2], proposed a scheme where a Kalman filter is used to detect the early propagation of a worm.",
                "Other researchers have proposed the use of detectors where rates of Destination Unreachable messages are monitored by firewalls, and a significant increase beyond normal, alerts the organization to the potential presence of a worm.",
                "However, such strategies suffer from the fighting the last War syndrome.",
                "That is, systems are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In the work described here, we put forth the hypothesis that next generation worms will be different, and therefore such techniques may have some significant limitations.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
                "The concept of emergent intelligence was first studied in association with biological systems.",
                "In such studies, early researchers discovered a variety of interesting insect or animal behaviors in the wild.",
                "A flock of birds sweeps across the sky.",
                "A group of ants forages for food.",
                "A school of fish swims, turns, flees together away from a predator, ands so forth.",
                "In general, this kind of aggregate motion has been called swarm behavior.",
                "Biologists, and computer scientists in the field of artificial intelligence have studied such biological swarms, and 323 attempted to create models that explain how the elements of a swarm interact, achieve goals, and evolve.",
                "Moreover, in recent years the study of swarm intelligence has become increasingly important in the fields of robotics, the design of Mobile ad-hoc Networks (MANETS), the design of Intrusion Detection Systems, the study of traffic patterns in transportation systems, in military applications, and other areas, see [3].",
                "The basic concepts that have been developed over the last decade to explain swarms, and swarm behavior include four basic components.",
                "These are: 1.",
                "Simplicity of logic & actions: A swarm is composed of N agents whose intelligence is limited.",
                "Agents in the swarm use simple local rules to govern their actions.",
                "Some models called this primitive actions or behaviors; 2.",
                "Local Communication Mechanisms: Agents interact with other members in the swarm via simple local communication mechanisms.",
                "For example, a bird in a flock senses the position of adjacent bird and applies a simple rule of avoidance and follow. 3.",
                "Distributed control: Autonomous agents interact with their environment, which probably consists of other agents, but act relatively independently from all other agents.",
                "There is no central command or leader, and certainly there is no global plan. 4.",
                "Emergent Intelligence: Aggregate behavior of autonomous agents results in complex intelligent behaviors; including self-organization.",
                "In order to understand fully the behavior of such swarms it is necessary to construct a model that explains the behavior of what we will call generic worms.",
                "This model, which extends the work by Weaver [5] is presented here in section 2.",
                "In addition, we intend to extend said model in such a way that it clearly explains the behaviors of this new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
                "Such Swarm Worms are potentially more harmful than their similar generic counterparts.",
                "Specifically, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
                "ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
                "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms are capable of compromising hosts at rates up to two orders of magnitude faster than their generic counterpart.",
                "The rest of this manuscript is structure as follows.",
                "In section 2 an abstract model of both generic worms as well as swarm worms is presented.",
                "This model is used in section 2.6 to described the first instance of a swarm worm, ZachiK.",
                "In section 4, preliminary results via both empirical measurements as well as simulation is presented.",
                "Finally, in section 5 our conclusions and insights into future work are presented. 2.",
                "WORM MODELING In order to study the behavior of swarm worms in general, it is necessary to create a model that realistically reflects the structure of worms and it is not necessarily tied to a specific instance.",
                "In this section, we described such a model where a general worm is describe as having four-(4) basic components or subfunctions.",
                "By definition, a worm is a selfcontained, self propagating program.",
                "Thus, in simple terms, it has two main functions: that which propagates and that which does other things.",
                "We propose that there is a third broad functionality of a worm, that of self-preservation.",
                "We also propose that the other functionality of a worm may be more appropriately categorized as Goal-Based Actions (GBA), as whatever functionality included in a worm will naturally be dependent on whatever goals (and subgoals) the author has.",
                "The work presented by Weaver et. al. in [5] provides us with mainly an action and technique based taxonomy of computer worms, which we utilize and further extend here. 2.1 Propagation The propagation function itself may be broken down into three actions: acquire target, send scan, and infect target.",
                "Acquiring the target simply means picking a host to attack next.",
                "Sending a scan involves checking to see if that host is receptive to an infection attempt, since IP-space is sparsely populated.",
                "This may involve a simple ping to check if the host is alive or a full out vulnerability assessment.",
                "Infecting the target is the actual method used to send the worm code to the new host.",
                "In algorithm form: propagate() { host := acquire_target() success := send_scan(host) if( success ) then infect(host) endif } In the case of a simple worm which does not first check to see if the host is available or susceptible (such as Slammer), the scan method is dropped: propagate() { host := acquire_target() infect(host) } Each of these actions may have an associated cost to its inclusion and execution, such as increased worm size and CPU or network load.",
                "Depending on the authors needs or requirements, these become limiting factors in what may be included in the worms actions.",
                "This is discussed further after expanding upon these actions below. 2.2 Target Acquisition: The Target Acquisition phase of our worm algorithm is built directly off of the Target Discovery section in [5].",
                "Weaver et. al. taxonomize this task into 5 separate categories.",
                "Here, we further extend their work through parameterization.",
                "Scanning: Scanning may be considered an equation-based method for choosing a host.",
                "Any type of equation may be used to arrive at an IP address, but there are three main types seen thus far: sequential, random, and local preference.",
                "Sequential scanning is exactly as it sounds: start at an IP address and increment through all the IP space.",
                "This could carry with it the options of which IP to start with (user chosen value, random, or based on IP of infected host) and 324 how many times to increment (continuous, chosen value, or subnet-based).",
                "Random scanning is completely at random (depending on the chosen PRNG method and its seed value).",
                "Local preference scanning is a variance of either Sequential or Random, whereby it has a greater probability of choosing a local IP address over a remote one (for example, the traditional 80/20 split).",
                "Pre-generated Target Lists: Pre-generated Target Lists, or so called hit-lists, could include the options for percentage of total population and percentage wrong, or just number of IPs to include.",
                "Implicit to this type is the fact that the list is divided among a parent and its children, avoiding the problem of every instance hitting the exact same machines.",
                "Externally Generated Target Lists: Externally generated target lists depend on one or more external sources that can be queried for host data.",
                "This will involve either servers that are normally publicly available, such as gaming meta-servers, or ones explicitly setup by the worm or worm author.",
                "The normally available meta-servers could have parameters for rates of change, such as many popping up at night or leaving in the morning.",
                "Each server could also have a maximum queries/second that it would be able to handle.",
                "The worm would also need a way of finding these servers, either hard-coded or through scanning.",
                "Internal Target Lists: Internal Target Lists are highly dependent on the infected host.",
                "This method could parameterize the choice of how much info is on the host, such as all machines in subnet, all windows boxes in subnet, particular servers, number of internal/external, or some combination.",
                "Passive: Passive methods are determined by normal interactions between hosts.",
                "Parameters may include a rate of interaction with particular machines, internal/external rate of interaction, or subnet-based rate of interaction.",
                "Any of these methods may also be combined to produce different types of target acquisition strategies.",
                "For example, the a worm may begin with an initial hit-list of 100 different hosts or subnets.",
                "Once it has exhausted its search using the hit-list, it may then proceed to perform random scanning with a 50% local bias.",
                "It is important to note, however, that the resource consumption of each method is not the same.",
                "Different methods may require the worm to be large, such as the extra bytes required by a hit-list, or to take more processing time, such as by searching the host for addresses of other vulnerable hosts.",
                "Further research and analysis should be performed in this area to determine associated costs for using each method.",
                "The costs could then be used in determining design tradeoffs that worm authors engage at.",
                "For example, hit lists provide a high rate of infection, but at a high cost of worm payload size. 2.2.1 Sending a Scan The send scan function tests to see if the host is available for infection.",
                "This can be as simple as checking if the host is up on the network or as complex as checking if the host is vulnerable to the exploit which will be used.",
                "The sending of a scan before attempted infection can increase the scanning rate if the cost for failing an infection is greater than the cost of failing a scan or sending a scan plus infection; and failures are more frequent than successes.",
                "One important parameter to this would be the choice of transport protocol (TCP/UDP) or just simply the time for one successful scan and time for one failed scan.",
                "Also, whether or not it tests for the host to be up or if it is a full test for the vulnerability (or for multiple vulnerabilities). 2.2.2 Infection Vector (IV) The particular infection vector used to access the remote host is mainly dependent on the particular vulnerability chosen to exploit.",
                "In a non-specific sense, it is dependent on the transport protocol chosen to use and the message size to be sent.",
                "Section 3 of [5] also proposes three particular classes of IV: Self-carried, second channel, and embedded. 2.3 Self Preservation The Self Preservation actions of a worm may take many forms.",
                "In the wild, worms have been observed to disable anti-virus software or prevent sending itself to certain antivirusknown addresses.",
                "They have also been seen to attempt disabling of other worms which may be contending for the same system.",
                "We also believe that a time-based throttled scanning may help the worm to slip under the radar.",
                "We also propose a decoy method, whereby a worm will release a few children that cause a lot of noise so that the parent is not noticed.",
                "It has also been proposed [5] that a worm cause damage to its host if, and only if, it is disturbed in some way.",
                "This module could contain parameters for: probability of success in disabling anti-virus or other software updates, probability of being noticed and thus removed, or hardening of the host against other worms. 2.4 Goal-Based Actions A worms GBA functionality depends on the authors goal list.",
                "The Payloads section of [5] provides some useful suggestions for such a module.",
                "The opening of a back-door can make the host susceptible to more attacks.",
                "This would involve a probability of the back-door being used and any associated traffic utilization.",
                "It could also provide a list of other worms this host is now susceptible to or a list of vulnerabilities this host now has.",
                "Spam relays and HTTP-Proxies of course have an associated bandwidth consumption or traffic pattern.",
                "Internet DoS attacks would have a set time of activation, a target, and a traffic pattern.",
                "Data damage would have an associated probability that the host dies because of the damage.",
                "In Figure 1, this general model of a worm is summarized.",
                "Please note that in this model there is no learning, no, or very little, sharing of information between worm instances, and certainly no coordination of actions.",
                "In the next section we expand the model to include such mechanisms, and hence, arrive at the general model of a swarm worm. 2.5 Swarms - General Model As described in section 1, the basic characteristics that distinguished swarm behavior from simply what appears to be collective coordinated behaviors are four basic attributes.",
                "These are: 1.",
                "Simplicity of logic & actions; 2.",
                "Local Communication Mechanisms; 3.",
                "Distributed control; and 4.",
                "Emergent Intelligence, including self-organization. 325 Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 1: General Worm Model In this work we aggregate all of these attributes under the general title of Learning, Communication, and Distributed Control.",
                "The presence of these attributes distinguishes swarm worms from otherwise regular worms, or other types of malware such as Zombies.",
                "In figure ? ?, the generic model of a worm is expanded to included these set of actions.",
                "Within this context then, a worm like Slammer cannot be categorized as a swarm worm due to the fact that new instances of the worm do not coordinate their actions or share information.",
                "On the other hand, Zombies and many other forms of DDoS, which at first glance may be consider swarm worms are not.",
                "This is simply due to fact that in the case of Zombies, control is not distributed but rather centralized, and no emergent behaviors arise.",
                "The latter, the potential emergence of intelligence or new behaviors is what makes swarm worms so potentially dangerous.",
                "Finally, when one considers the majority of recent disruptions to the Internet Infrastructure, and in light of our description of swarm attacks, then said disruptions can be easily categorized as precursors to truly swarm behavior.",
                "Specifically, â¢ DDOS - Large number of compromised hosts send useless packets requiring processing (Stacheldraht, http : //www.cert.org/ incidentnotes/IN â 99 â 04.html).",
                "DDoS attacks are the early precursors to Swarm Attacks due to the large number of agents involved. â¢ Code Red CrV1, Code Red II, Nimbda - Exhibit early notions of swarm attacks, including a backdoor communication channel. â¢ Staniford & Paxson in How to Own the Internet in Your Spare Time? explore modifications to CrV1, Code Red I, II with a swarm like type of behavior.",
                "For example, they speculate on new worms which employ direct worm-to-worm communication, and employ programmable updates.",
                "For example the Warhol worm, and Permutation-Scanning (self coordinating) worms. 2.6 Swarm Worm: the details In considering the creation of what we believed to be the first Swarm Worm in existence, we wanted to adhere as close as possible to the general model presented in section ? ? while at the same time facilitating large scale analysis, both empirical and through simulations, of the behavior of the swarm.",
                "For this reason, we selected as the first instance Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Learning, Communication, Pheromones/Flags (Test and Distributed Control if Worm is already present) Time bombs, Learning Algorithms, IRC channel Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 2: General Model of a Swarm Worm of the swarm a simple password cracking worm.",
                "The objective of this worm simply is to infect a host by sequentially attempting to login into the host using well known passwords (dictionary attack), passwords that have been discovered previously by any member of the swarm, and random passwords.",
                "Once, a host is infected, the worm will create communication channels with both its known neighbors at that time, as well as with any offsprings that it successfully generates.",
                "In this context a successful generation of an offspring means simply infecting a new host and replicating an exact copy of itself in such a host.",
                "We call this swarm worm the ZachiK worm in honor of one of its creators.",
                "As it can be seen from this description, the ZachiK worm exhibits all of the elements described before.",
                "In the following sections, we described in detail each one of the elements of the ZachiK worm. 2.7 Infection Vector The infection vector used for ZachiK worm is the secure shell protocol SSH.",
                "A modified client which is capable of receiving passwords from the command line was written, and integrated with a script that supplies it with various passwords: known and random.",
                "When a password is found for an appropriate target, the infection process begins.",
                "After the root password of a host is discovered, the worm infects the target host and replicates itself.",
                "The worm creates a new directory in the target host, copies the modified ssh client, the script, the communications servers, and the updated versions of data files (list of known passwords and a list of current neighbors).",
                "It then runs the modified script on the newly infected hosts, which spawns the communications server, notifies the neighbors and starts looking for new targets.",
                "It could be argued, correctly, that the ZachiK worm can be easily defeated by current countermeasure techniques present on most systems today, such as disallowing direct root logins from the network.",
                "Within this context ZachiK can quickly be discarded as very simple and harmless worm that does not require further study.",
                "However, the reader should consider the following: 1.",
                "ZachiK can be easily modified to include a variety of infection vectors.",
                "For example, it could be programmed to guess common user names and their passwords; gain 326 access to a system, then guess the root password or use other well know vulnerabilities to gain root privileges; 2.",
                "ZachiK is a proof of concept worm.",
                "The importance of ZachiK is that it incorporates all of the behaviors of a swarm worm including, but not restricted to, distributed control, communication amongst agents, and learning; 3.",
                "ZachiK is composed of a large collection of agents operating independently which lends itself naturally to parallel algorithms such as a parallel search of the IPV4 address space.",
                "Within this context, SLAMMER, does incorporate a parallel search capability of potentially susceptible addresses.",
                "However, unlike ZachiK, the knowledge discovered by the search is never shared amongst the agents.",
                "For this reasons, and many others, one should not discard the potential of this new class of worms but rather embrace its study. 2.8 Self-Preservation In the case of ZachiK worm, the main self-preservation techniques used are simply keeping the payload small.",
                "In this context, this simply means restricting the number of passwords that an offspring inherits, masquerading worm messages as common http requests, and restricting the number of neighbors to a maximum of five-(5). 2.9 Propagation Choosing the next target(s) in an efficient matter requires thought.",
                "In the past, known and proposed worms, see [5], have applied propagation techniques that varied.",
                "These include: strictly random selection of a potential vulnerable host; target lists of vulnerable hosts; locally biased random selection (select a host target at random from a local subnet); and a combination of some or all of the above.",
                "In our test and simulation environments, we will apply a combination of locally biased and totally random selection of potential vulnerable hosts.",
                "However, due to the fact that the ZachiK worm is a swarm worm, address discovery (that is when non-existent addresses are discovered) information will be shared amongst members of the swarm.",
                "The infection and propagation threads do the following set of activities repeatedly: â¢ Choose an address â¢ Check the validity of the address â¢ Choose a set of passwords â¢ Try infecting the selected host with this set of passwords As described earlier, choosing an address makes use of a combination of random selection, local bias, and target lists.",
                "Specifically, to choose an address, the instance may either: â¢ Generate a new random address â¢ Generate an address on the local network â¢ Pick an address from a handoff list The choice is made randomly among these options, and can be varied to test the dependency of propagation on particular choices.",
                "Password are either chosen from the list of known passwords or newly generated.",
                "When an infection of a valid address fails, it is added to a list of handoffs, which is sent to the neighbors to try to work on. 2.10 Learning, CommunicationandDistributed Control 2.10.1 Communication The concept of a swarm is based on transfer of information amongst neighbors, which relay their new incoming messages to their neighbors, and so on until every worm instance in the swarm is aware of these messages.",
                "There are two classes of messages: data or information messages and commands.",
                "The command messages are meant for an external user (a.k.a., hackers and/or crackers) to control the actions of the instances, and are currently not implemented.",
                "The information messages are currently of three kinds: new member, passwords and exploitable addresses (handoffs).",
                "The new member messages are messages that a new instance sends to the neighbors on its (short) list of initial neighbors.",
                "The neighbors then register these instances in their neighbor list.",
                "These are messages that form the multi-connectivity of the swarm, and without them, the topology will be a treelike structure, where eliminating a single node would cause the instances beneath it to be inaccessible.",
                "The passwords messages inform instances of newly discovered passwords, and by informing all instances, the swarm as whole collects this information, which allows it to infect new instances more effectively.",
                "The handoffs messages inform instances of valid addresses that could not be compromised (fail at breaking the password for the root account).",
                "Since the address space is rather sparse, it takes a relatively long time (i.e. many trials) to discover a valid address.",
                "Therefore, by handing off discovered valid addresses, the swarm is (a) conserving energy by not re-discovering the same addresses (b) attacking more effectively.",
                "In a way, this is a simple instance of coordinated activity of a swarm. 2.10.2 Coordination When a worm instance is born, it relays its existence to all neighbors on its list.",
                "The main thread then spawns a few infection threads, and continues to handle incoming messages (registering neighbors, adding new passwords, receiving addresses and relaying these messages). 2.10.3 Distributed Control Control in the ZachiK worm is distributed in the sense that each instance of the worm performs a set of actions independently of every other instance while at the same time benefiting from the learning achieve by its immediate neighbors. 2.11 Goal Based Actions The first instantiation of the ZachiK worm has two basic goals.",
                "These are: (1) propagate, and (2) discover and share with members of th swarm new root passwords. 3.",
                "EXPERIMENTAL DESIGN In order to verify our hypothesis that Swarm Worms are more capable, and therefore dangerous than other well known 327 worms, a network testbed was created, and a simulator, capable of simulating large scale Internet-like topologies (IPV4 space), was developed.",
                "The network testbed consisted of a local area network of 30 Linux based computers.",
                "The simulator was written in C++ .",
                "The simple swarm worm described in section 2.6 was used to infect patient-zero, and then the swarm worm was allowed to propagate via its own mechanisms of propagation, distributed control, and swarm behaviors.",
                "In the case of a simple local area network of 30 computers, six-(6) different root passwords out of a password space of 4 digits (10000 options) were selected.",
                "At the start of the experiment a single known password is known, that of patient-zero.",
                "All shared passwords are distributed randomly across all nodes.",
                "Similarly, in the case of the simulation, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "For example, in one of our simulation runs, the network topology consisted of 200 subnets each containing 50 hosts.",
                "In such a topology, shared passwords were distributed across subnets where a varying percentage of passwords were shared across subnets.",
                "The percentages of shared passwords used was reflective of early empirical studies, where up to 39.7% of common passwords were found to be shared. 4.",
                "RESULTS In Figure 3, the results comparing Swarm Attack behavior versus that of a typical Malform Worm for a 30 node LAN are presented.",
                "In this set of empirical runs, six-(6) shared passwords were distributed at random across all nodes from a possible of 10,000 unknown passwords.",
                "The data presented reflects the behaviors of a total of three-(3) distinct classes of worm or swarm worms.",
                "The class of worms presented are as follows: â¢ I-NS-NL:= Generic worm, independent (I), no learning/memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; and â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 3, the results validate our original hypothesis that swarm worms are significantly more efficient and dangerous than generic worms.",
                "In this set of experiments, the sharing of passwords provides an order of magnitude improvement over a memoryless random worm.",
                "Similarly, a swarm worm that shares passwords and addresses is approximately two orders of magnitude more efficient than its generic counterpart.",
                "In Figure 3, a series of discontinuities can be observed.",
                "These discontinuities are an artifact of the small sample space used for this experiment.",
                "Basically, as soon as a password is broken, all nodes sharing that specific password are infected within a few seconds.",
                "Note that it is trivial for a swarm worm to scan and discovered a small shared password space.",
                "In Figure 4, the simulation results comparing Swarm Attack Behavior versus that of a Generic Malform Worm are presented.",
                "In this set of simulation runs, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "The data presented reflects the behaviors of three-(3) distinct classes of worm or swarm worms and two(2) different target host selection scanning strategies (random scanning and local bias).",
                "The amount of local bias was varied across multiple simulation runs.",
                "The results presented are aggregate behaviors.",
                "In general the following class of Generic Worms and Swarm Worms were simulated.",
                "Address Scanning: â¢ Random:= addresses are selected at random from a subset of the IPV4 space, namely, a 224 address space; and â¢ Local Bias:= addresses are selected at random from either a local subnet (256 addresses) or from a subset of the IPV4 space, namely, a 224 address space.",
                "The percentage of local bias is varied across multiple runs.",
                "Learning, Communication & Distributed Control â¢ I-NL-NS: Generic worm, independent (I), no learning/ memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ I-L-OOS: Generic worm, independent (I), learning/ memoryless (L), and one time sharing of information with offsprings only (OOS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; â¢ S-L-S&AOP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of addresses with neighbors and offsprings, shares passwords one time only (at creation) with offsprings(SA&OP); â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 4, the results are consistent with our set of empirical results.",
                "In addition, the following observations can be made. 1.",
                "Local preference is incredibly effective. 2.",
                "Short address handoffs are more effective than long ones.",
                "We varied the size of the list allowed in the sharing of addresses; the overhead associated with a long address list is detrimental to the performance of the swarm worm, as well as to its stealthiness; 3.",
                "For the local bias case, sharing valid addresses of susceptible host, S-L-S&AOP worm (recall, the S-L-S&AOP swarm shares passwords, one time only, with offsprings 328 at creation time) is more effective than sharing passwords in the case of the S-L-SP swarm.",
                "In this case, we can think of the swarm as launching a distributeddictionary attack: different segments of the swarm use different passwords to try to break into susceptible uninfected host.",
                "In the local bias mode, early in the life of the swarm, address-sharing is more effective than password-sharing, until most subnets are discovered.",
                "Then the targeting of local addresses assists in discovering the susceptible hosts, while the swarm members need to waste time rediscovering passwords; and 4.",
                "Infecting the last 0.5% of nodes takes a very long time in non-local bias mode.",
                "Basically, the shared password list across subnets has been exhausted, and the swarm reverts to simply a random discovery of password algorithm.",
                "Figure 3: Swarm Attack Behavior vs. Malform Worm: Empirical Results, 30node LAN Figure 4: Swarm Attack Behavior vs. Malform Worm: Simulation Results 5.",
                "SUMMARY AND FUTURE WORK In this manuscript, we have presented an abstract model, similar in some aspects to that of Weaver [5], that helps explain the generic nature of worms.",
                "The model presented in section 2 was extended to incorporate a new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
                "Such Swarm Worms are potentially more harmful than their generic counterparts.",
                "In addition, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
                "ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
                "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms is capable of compromising hosts a rates up to 2 orders of magnitude faster than its generic counterpart while retaining stealth capabilities.",
                "This work opens up a new area of interesting problems.",
                "Some of the most interesting and pressing problems to be consider are as follows: â¢ Is it possible to apply some of learning concepts developed over the last ten years in the areas of swarm intelligence, agent systems, and distributed control to the design of sophisticated swarm worms in such a way that true emergent behavior takes place? â¢ Are the current techniques being developed in the design of Intrusion Detection & CounterMeasure Systems and Survivable systems effective against this new class of worms? ; and â¢ What techniques, if any, can be developed to create defenses against swarm worms? 6.",
                "ACKNOWLEDGMENTS This work was conducted as part of a larger effort in the development of next generation Intrusion Detection & CounterMeasure Systems at WSSRL.",
                "The work is conducted under the auspices of Grant ACG-2004-06 by the Acumen Consulting Group, Inc., Marlboro, Massachusetts. 7.",
                "REFERENCES [1] C.C.",
                "Zou, L. Gao, W. G., and Towsley, D. Monitoring and early warning for <br>internet worm</br>s.",
                "In 10th ACM Conference on Computer and Communications Security, Washington, DC (October 2003). [2] Liu, S., and Passino, K. Swarm intelligence: Literature overview.",
                "In Dept. of Electrical Engineering, The Ohio State University, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., and Weaver, N. The spread of the saphire/slammer worm.",
                "Tech. rep., A joint effort of CAIDA, ICSI, Silicon Defense, UC Berkeley EECS and UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S., and Cunningham, R. A taxonomy of computer worms.",
                "In Proceedings of the ACM Workshop on Rapid Malware (WORM) (2003). 329"
            ],
            "original_annotated_samples": [
                "Zou, L. Gao, W. G., and Towsley, D. Monitoring and early warning for <br>internet worm</br>s."
            ],
            "translated_annotated_samples": [
                "Zou, L. Gao, W. G., y Towsley, D. Monitoreo y alerta temprana para <br>gusanos de internet</br>."
            ],
            "translated_text": "Un AnÃ¡lisis Inicial y PresentaciÃ³n de Malware que Exhibe Comportamiento Similar a un Enjambre por Fernando C. ColÃ³n Osorio Laboratorio de InvestigaciÃ³n en Seguridad de Sistemas InalÃ¡mbricos (W.S.S.R.L.) El Slammer, que actualmente es el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada, se observÃ³ infectando el 90 por ciento de todos los hosts vulnerables de Internet en 10 minutos. Aunque la acciÃ³n principal que realiza el gusano Slammer es una replicaciÃ³n relativamente poco sofisticada de sÃ­ mismo, se propaga tan rÃ¡pidamente que la respuesta humana fue ineficaz. La mayorÃ­a de las estrategias de contramedidas propuestas se basan principalmente en la detecciÃ³n de tasas y algoritmos de limitaciÃ³n. Sin embargo, se estÃ¡n diseÃ±ando y desarrollando estrategias para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En nuestro trabajo, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n radicalmente diferentes, y posiblemente dichas tÃ©cnicas resultarÃ¡n ineficaces. EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. La Inteligencia Emergente es el comportamiento de sistemas, muy similar a sistemas biolÃ³gicos como hormigas o abejas, donde las interacciones locales simples de miembros autÃ³nomos, con acciones primitivas simples, dan lugar a un comportamiento global complejo e inteligente. En este manuscrito introduciremos los principios bÃ¡sicos detrÃ¡s de la idea de los Gusanos en Enjambre, asÃ­ como la estructura bÃ¡sica requerida para ser considerado un gusano en enjambre. AdemÃ¡s, presentaremos resultados preliminares sobre las velocidades de propagaciÃ³n de un gusano de enjambre llamado gusano ZachiK. Demostraremos que ZachiK es capaz de propagarse a una velocidad 2 Ã³rdenes de magnitud mÃ¡s rÃ¡pida que gusanos similares sin capacidades de enjambre. CategorÃ­as y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: DetecciÃ³n de Intrusiones; D.4.6 [Seguridad y ProtecciÃ³n]: Software Invasivo TÃ©rminos Generales ExperimentaciÃ³n, Seguridad 1. INTRODUCCIÃN Y TRABAJO PREVIO En las primeras horas de la maÃ±ana (05:30 GMT) del 25 de enero de 2003, el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada comenzÃ³ a propagarse por Internet. Dentro de los 10 minutos posteriores al primer huÃ©sped infectado (paciente cero), el 90 por ciento de todos los huÃ©spedes vulnerables habÃ­an sido comprometidos, creando una interrupciÃ³n significativa en la infraestructura de Internet a nivel global. Vern Paxson del Instituto Internacional de Ciencias de la ComputaciÃ³n y del Laboratorio Nacional Lawrence Berkeley comentÃ³ en su anÃ¡lisis de Slammer: El gusano Slammer se propagÃ³ tan rÃ¡pidamente que la respuesta humana fue ineficaz, ver [4]. La parte interesante, desde nuestro punto de vista, sobre la propagaciÃ³n de Slammer es que era un gusano relativamente poco sofisticado con un comportamiento benigno, es decir, la auto-reproducciÃ³n. Desde Slammer, los investigadores han explorado los comportamientos de los gusanos de propagaciÃ³n rÃ¡pida y han diseÃ±ado estrategias de contramedidas basadas principalmente en la detecciÃ³n de la velocidad y algoritmos de limitaciÃ³n. Por ejemplo, Zou, et al., [2], propusieron un esquema donde se utiliza un filtro de Kalman para detectar la propagaciÃ³n temprana de un gusano. Otros investigadores han propuesto el uso de detectores donde las tasas de mensajes de Destino Inalcanzable son monitoreadas por los firewalls, y un aumento significativo mÃ¡s allÃ¡ de lo normal alerta a la organizaciÃ³n sobre la posible presencia de un gusano. Sin embargo, tales estrategias sufren del sÃ­ndrome de luchar la Ãºltima guerra. Es decir, se estÃ¡n diseÃ±ando y desarrollando sistemas para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En el trabajo descrito aquÃ­, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n diferentes, y por lo tanto, dichas tÃ©cnicas pueden tener algunas limitaciones significativas. EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. El concepto de inteligencia emergente fue estudiado por primera vez en asociaciÃ³n con sistemas biolÃ³gicos. En tales estudios, los primeros investigadores descubrieron una variedad de comportamientos interesantes de insectos o animales en la naturaleza. Una bandada de pÃ¡jaros cruza el cielo. Un grupo de hormigas busca comida. Una escuela de peces nada, gira, huye juntos lejos de un depredador, y asÃ­ sucesivamente. En general, este tipo de movimiento agregado se ha llamado comportamiento de enjambre. Los biÃ³logos y cientÃ­ficos de la computaciÃ³n en el campo de la inteligencia artificial han estudiado tales enjambres biolÃ³gicos y han intentado crear modelos que expliquen cÃ³mo interactÃºan los elementos de un enjambre, logran objetivos y evolucionan. AdemÃ¡s, en los Ãºltimos aÃ±os el estudio de la inteligencia de enjambre ha cobrado cada vez mÃ¡s importancia en los campos de la robÃ³tica, el diseÃ±o de Redes MÃ³viles Ad-hoc (MANETS), el diseÃ±o de Sistemas de DetecciÃ³n de Intrusiones, el estudio de patrones de trÃ¡fico en sistemas de transporte, en aplicaciones militares y otras Ã¡reas, ver [3]. Los conceptos bÃ¡sicos que se han desarrollado en la Ãºltima dÃ©cada para explicar los enjambres y su comportamiento incluyen cuatro componentes bÃ¡sicos. Estos son: 1. Sencillez de la lÃ³gica y acciones: Un enjambre estÃ¡ compuesto por N agentes cuya inteligencia es limitada. Los agentes en el enjambre utilizan reglas locales simples para gobernar sus acciones. Algunos modelos llaman a estas acciones o comportamientos primitivos; 2. Mecanismos de comunicaciÃ³n local: Los agentes interactÃºan con otros miembros en el enjambre a travÃ©s de simples mecanismos de comunicaciÃ³n local. Por ejemplo, un pÃ¡jaro en una bandada percibe la posiciÃ³n del pÃ¡jaro adyacente y aplica una regla simple de evitaciÃ³n y seguimiento. 3. Control distribuido: Los agentes autÃ³nomos interactÃºan con su entorno, que probablemente consiste en otros agentes, pero actÃºan relativamente de forma independiente de todos los demÃ¡s agentes. No hay un mando central o lÃ­der, y ciertamente no hay un plan global. Inteligencia emergente: El comportamiento agregado de agentes autÃ³nomos resulta en comportamientos inteligentes complejos, incluyendo la autoorganizaciÃ³n. Para comprender completamente el comportamiento de tales enjambres, es necesario construir un modelo que explique el comportamiento de lo que llamaremos gusanos genÃ©ricos. Este modelo, que amplÃ­a el trabajo de Weaver [5], se presenta aquÃ­ en la secciÃ³n 2. AdemÃ¡s, tenemos la intenciÃ³n de ampliar dicho modelo de tal manera que explique claramente los comportamientos de esta nueva clase de gusanos potencialmente peligrosos llamados Gusanos en Enjambre. Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biolÃ³gicos y muestran un alto grado de aprendizaje, comunicaciÃ³n e inteligencia distribuida. Tales gusanos en enjambre son potencialmente mÃ¡s daÃ±inos que sus contrapartes genÃ©ricas similares. EspecÃ­ficamente, la primera instancia, segÃºn nuestro conocimiento, de un gusano de aprendizaje de este tipo fue creado, llamado ZachiK. ZachiK es un gusano enjambre de descifrado de contraseÃ±as simple que incorpora diferentes estrategias de aprendizaje y comparticiÃ³n de informaciÃ³n. Un gusano de enjambre similar fue desplegado tanto en una red de Ã¡rea local de treinta (30) hosts, como simulado en una topologÃ­a de 10,000 nodos. Los resultados preliminares mostraron que dichos gusanos son capaces de comprometer a los anfitriones a velocidades hasta dos Ã³rdenes de magnitud mÃ¡s rÃ¡pidas que su contraparte genÃ©rica. El resto de este manuscrito estÃ¡ estructurado de la siguiente manera. En la secciÃ³n 2 se presenta un modelo abstracto tanto de gusanos genÃ©ricos como de gusanos en enjambre. Este modelo se utiliza en la secciÃ³n 2.6 para describir la primera instancia de un gusano enjambre, ZachiK. En la secciÃ³n 4, se presentan resultados preliminares a travÃ©s de mediciones empÃ­ricas y simulaciones. Finalmente, en la secciÃ³n 5 se presentan nuestras conclusiones y perspectivas sobre trabajos futuros. MODELADO DE GUSANOS Para estudiar el comportamiento de los gusanos en enjambre en general, es necesario crear un modelo que refleje de manera realista la estructura de los gusanos y que no estÃ© necesariamente ligado a una instancia especÃ­fica. En esta secciÃ³n, describimos un modelo en el que un gusano general se describe como teniendo cuatro (4) componentes bÃ¡sicos o subfunciones. Por definiciÃ³n, un gusano es un programa autocontenido y auto propagante. Por lo tanto, en tÃ©rminos simples, tiene dos funciones principales: la que se propaga y la que realiza otras tareas. Proponemos que hay una tercera amplia funcionalidad de un gusano, la de autoconservaciÃ³n. TambiÃ©n proponemos que la otra funcionalidad de un gusano podrÃ­a ser categorizada de manera mÃ¡s apropiada como Acciones Basadas en Objetivos (ABO), ya que cualquier funcionalidad incluida en un gusano dependerÃ¡ naturalmente de los objetivos (y subobjetivos) que tenga el autor. El trabajo presentado por Weaver et al. en [5] nos proporciona principalmente una taxonomÃ­a de gusanos informÃ¡ticos basada en acciones y tÃ©cnicas, la cual utilizamos y ampliamos aquÃ­. 2.1 PropagaciÃ³n La funciÃ³n de propagaciÃ³n en sÃ­ misma puede desglosarse en tres acciones: adquirir objetivo, enviar escaneo e infectar objetivo. Adquirir el objetivo simplemente significa elegir un anfitriÃ³n para atacar a continuaciÃ³n. Enviar un escaneo implica verificar si ese host estÃ¡ receptivo a un intento de infecciÃ³n, ya que el espacio de direcciones IP estÃ¡ escasamente poblado. Esto puede implicar un simple ping para verificar si el host estÃ¡ activo o una evaluaciÃ³n completa de vulnerabilidades. Infectar al objetivo es el mÃ©todo real utilizado para enviar el cÃ³digo del gusano al nuevo hospedador. En forma de algoritmo: propagar() { host := adquirir_objetivo() Ã©xito := enviar_escaneo(host) si( Ã©xito ) entonces infectar(host) fin si } En el caso de un gusano simple que no verifica primero si el host estÃ¡ disponible o susceptible (como Slammer), se elimina el mÃ©todo de escaneo: propagar() { host := adquirir_objetivo() infectar(host) } Cada una de estas acciones puede tener un costo asociado a su inclusiÃ³n y ejecuciÃ³n, como un aumento en el tamaÃ±o del gusano y la carga de CPU o red. Dependiendo de las necesidades o requisitos de los autores, estos se convierten en factores limitantes en lo que puede incluirse en las acciones de los gusanos. Esto se discute mÃ¡s a fondo despuÃ©s de expandir sobre estas acciones a continuaciÃ³n. 2.2 AdquisiciÃ³n de Objetivos: La fase de AdquisiciÃ³n de Objetivos de nuestro algoritmo de gusano se construye directamente a partir de la secciÃ³n de Descubrimiento de Objetivos en [5]. Weaver et al. clasifican esta tarea en 5 categorÃ­as separadas. AquÃ­, ampliamos aÃºn mÃ¡s su trabajo a travÃ©s de la parametrizaciÃ³n. Escaneo: El escaneo puede considerarse un mÃ©todo basado en ecuaciones para elegir un anfitriÃ³n. Cualquier tipo de ecuaciÃ³n puede ser utilizada para llegar a una direcciÃ³n IP, pero hasta ahora se han visto tres tipos principales: secuencial, aleatorio y preferencia local. El escaneo secuencial es exactamente como suena: comenzar en una direcciÃ³n IP e incrementar a travÃ©s de todo el espacio de direcciones IP. Esto podrÃ­a llevar consigo las opciones de quÃ© IP empezar (valor elegido por el usuario, aleatorio o basado en la IP del host infectado) y cuÃ¡ntas veces incrementar (continuo, valor elegido o basado en subred). El escaneo aleatorio es completamente al azar (dependiendo del mÃ©todo PRNG elegido y su valor de semilla). El escaneo de preferencia local es una variante de Secuencial o Aleatorio, en la que tiene una mayor probabilidad de elegir una direcciÃ³n IP local en lugar de una remota (por ejemplo, la divisiÃ³n tradicional de 80/20). Listas de objetivos pregeneradas: Las listas de objetivos pregeneradas, o tambiÃ©n llamadas listas de objetivos, podrÃ­an incluir opciones para el porcentaje de la poblaciÃ³n total y el porcentaje de errores, o simplemente el nÃºmero de direcciones IP a incluir. ImplÃ­cito en este tipo es el hecho de que la lista se divide entre un padre y sus hijos, evitando el problema de que cada instancia golpee exactamente las mismas mÃ¡quinas. Listas de objetivos generadas externamente: Las listas de objetivos generadas externamente dependen de una o mÃ¡s fuentes externas que pueden ser consultadas para obtener datos del host. Esto implicarÃ¡ servidores que normalmente estÃ¡n pÃºblicamente disponibles, como los meta-servidores de juegos, o aquellos configurados explÃ­citamente por el gusano o el autor del gusano. Los meta-servidores normalmente disponibles podrÃ­an tener parÃ¡metros para tasas de cambio, como muchos apareciendo por la noche o desapareciendo por la maÃ±ana. Cada servidor tambiÃ©n podrÃ­a tener un mÃ¡ximo de consultas por segundo que serÃ­a capaz de manejar. El gusano tambiÃ©n necesitarÃ­a una forma de encontrar estos servidores, ya sea codificada en duro o a travÃ©s de escaneo. Listas de Objetivos Internos: Las Listas de Objetivos Internos dependen en gran medida del host infectado. Este mÃ©todo podrÃ­a parametrizar la elecciÃ³n de cuÃ¡nta informaciÃ³n hay en el host, como todas las mÃ¡quinas en la subred, todas las computadoras con Windows en la subred, servidores especÃ­ficos, nÃºmero de internos/externos, o alguna combinaciÃ³n. Los mÃ©todos pasivos son determinados por las interacciones normales entre los anfitriones. Los parÃ¡metros pueden incluir una tasa de interacciÃ³n con mÃ¡quinas particulares, una tasa de interacciÃ³n interna/externa, o una tasa de interacciÃ³n basada en subredes. Cualquiera de estos mÃ©todos tambiÃ©n puede combinarse para producir diferentes tipos de estrategias de adquisiciÃ³n de objetivos. Por ejemplo, un gusano puede comenzar con una lista inicial de 100 hosts o subredes diferentes. Una vez que haya agotado su bÃºsqueda utilizando la lista de Ã©xitos, puede proceder a realizar un escaneo aleatorio con un sesgo local del 50%. Es importante tener en cuenta, sin embargo, que el consumo de recursos de cada mÃ©todo no es el mismo. Diferentes mÃ©todos pueden requerir que el gusano sea grande, como los bytes adicionales necesarios para una lista de objetivos, o que tome mÃ¡s tiempo de procesamiento, como al buscar direcciones de otros hosts vulnerables en el host. Se deben realizar investigaciones y anÃ¡lisis adicionales en esta Ã¡rea para determinar los costos asociados de utilizar cada mÃ©todo. Los costos podrÃ­an ser utilizados para determinar los compromisos de diseÃ±o en los que los autores de gusanos participan. Por ejemplo, las listas de objetivos proporcionan una alta tasa de infecciÃ³n, pero a un alto costo en el tamaÃ±o de la carga Ãºtil del gusano. 2.2.1 EnvÃ­o de un Escaneo La funciÃ³n de envÃ­o de escaneo prueba si el host estÃ¡ disponible para la infecciÃ³n. Esto puede ser tan simple como verificar si el host estÃ¡ activo en la red o tan complejo como verificar si el host es vulnerable al exploit que se utilizarÃ¡. El envÃ­o de un escaneo antes de intentar una infecciÃ³n puede aumentar la tasa de escaneo si el costo por fallar en una infecciÃ³n es mayor que el costo de fallar en un escaneo o de enviar un escaneo mÃ¡s una infecciÃ³n; y las fallas son mÃ¡s frecuentes que los Ã©xitos. Un parÃ¡metro importante para esto serÃ­a la elecciÃ³n del protocolo de transporte (TCP/UDP) o simplemente el tiempo para un escaneo exitoso y el tiempo para un escaneo fallido. AdemÃ¡s, ya sea que se pruebe si el host estÃ¡ activo o si es una prueba completa de la vulnerabilidad (o de mÃºltiples vulnerabilidades). 2.2.2 Vector de InfecciÃ³n (VI) El vector de infecciÃ³n particular utilizado para acceder al host remoto depende principalmente de la vulnerabilidad especÃ­fica elegida para explotar. En un sentido no especÃ­fico, depende del protocolo de transporte elegido para usar y del tamaÃ±o del mensaje que se va a enviar. La SecciÃ³n 3 de [5] tambiÃ©n propone tres clases particulares de IV: Autotransportado, segundo canal e incrustado. 2.3 AutopreservaciÃ³n Las acciones de autopreservaciÃ³n de un gusano pueden tomar muchas formas. En la naturaleza, se ha observado que los gusanos desactivan el software antivirus o evitan enviarse a ciertas direcciones conocidas por los antivirus. TambiÃ©n se ha observado que intentan deshabilitar otros gusanos que podrÃ­an estar compitiendo por el mismo sistema. TambiÃ©n creemos que un escaneo con limitaciÃ³n de tiempo podrÃ­a ayudar al gusano a pasar desapercibido. TambiÃ©n proponemos un mÃ©todo de seÃ±uelo, mediante el cual un gusano liberarÃ¡ a unos pocos hijos que causen mucho ruido para que el progenitor no sea notado. TambiÃ©n se ha propuesto [5] que un gusano cause daÃ±o a su huÃ©sped si, y solo si, se ve perturbado de alguna manera. Este mÃ³dulo podrÃ­a contener parÃ¡metros para: probabilidad de Ã©xito en deshabilitar actualizaciones de antivirus u otro software, probabilidad de ser detectado y por ende eliminado, o fortalecimiento del anfitriÃ³n contra otros gusanos. 2.4 Acciones Basadas en Objetivos La funcionalidad de GBA de un gusano depende de la lista de objetivos del autor. La secciÃ³n de Cargas Ãºtiles de [5] proporciona algunas sugerencias Ãºtiles para dicho mÃ³dulo. La apertura de una puerta trasera puede hacer que el anfitriÃ³n sea susceptible a mÃ¡s ataques. Esto implicarÃ­a una probabilidad de que se utilice la puerta trasera y cualquier utilizaciÃ³n de trÃ¡fico asociada. TambiÃ©n podrÃ­a proporcionar una lista de otros gusanos a los que este hospedador es ahora susceptible o una lista de vulnerabilidades que este hospedador tiene ahora. Los retransmisores de spam y los servidores proxy HTTP, por supuesto, tienen un consumo de ancho de banda o un patrÃ³n de trÃ¡fico asociado. Los ataques de denegaciÃ³n de servicio en Internet tendrÃ­an un tiempo de activaciÃ³n establecido, un objetivo y un patrÃ³n de trÃ¡fico. El daÃ±o de los datos tendrÃ­a una probabilidad asociada de que el anfitriÃ³n muera debido al daÃ±o. En la Figura 1, se resume este modelo general de un gusano. Por favor, tenga en cuenta que en este modelo no hay aprendizaje, o muy poco, intercambio de informaciÃ³n entre las instancias de gusano, y ciertamente no hay coordinaciÃ³n de acciones. En la siguiente secciÃ³n ampliamos el modelo para incluir dichos mecanismos, y por lo tanto, llegamos al modelo general de un gusano en enjambre. 2.5 Enjambres - Modelo General Como se describe en la secciÃ³n 1, las caracterÃ­sticas bÃ¡sicas que distinguen el comportamiento en enjambre de lo que simplemente parece ser comportamientos colectivos coordinados son cuatro atributos bÃ¡sicos. Estos son: 1. Sencillez de lÃ³gica y acciones; 2. Mecanismos de ComunicaciÃ³n Local; 3. Control distribuido; y 4. Inteligencia emergente, incluyendo autoorganizaciÃ³n. 325 Estructura FunciÃ³n/Ejemplo InfecciÃ³n, Vector de InfecciÃ³n El ejecutable se ejecuta ProtecciÃ³n y sigilo Deshabilitar McAfee (Mantenerse vivo) PropagaciÃ³n Enviar correo electrÃ³nico a todos en la libreta de direcciones AcciÃ³n basada en objetivos (ABO) DDoS www.sco.com Todo lo demÃ¡s, a menudo llamado carga Ãºtil Figura 1: Modelo general de gusano En este trabajo agregamos todos estos atributos bajo el tÃ­tulo general de Aprendizaje, ComunicaciÃ³n y Control Distribuido. La presencia de estos atributos distingue a los gusanos de enjambre de los gusanos regulares, u otros tipos de malware como los Zombies. En la figura ? ?, el modelo genÃ©rico de un gusano se amplÃ­a para incluir este conjunto de acciones. Dentro de este contexto, un gusano como Slammer no puede ser categorizado como un gusano en enjambre debido a que las nuevas instancias del gusano no coordinan sus acciones ni comparten informaciÃ³n. Por otro lado, los zombies y muchas otras formas de DDoS, que a primera vista pueden considerarse gusanos enjambre, no lo son. Esto se debe simplemente al hecho de que en el caso de los zombies, el control no estÃ¡ distribuido sino centralizado, y no surgen comportamientos emergentes. Lo Ãºltimo, la posible apariciÃ³n de inteligencia o nuevos comportamientos es lo que hace que los gusanos en enjambre sean potencialmente peligrosos. Finalmente, cuando se considera la mayorÃ­a de las interrupciones recientes en la Infraestructura de Internet, y a la luz de nuestra descripciÃ³n de los ataques en enjambre, entonces dichas interrupciones pueden ser fÃ¡cilmente categorizadas como precursores de un comportamiento verdaderamente en enjambre. EspecÃ­ficamente, â¢ DDOS: Un gran nÃºmero de hosts comprometidos envÃ­an paquetes inÃºtiles que requieren procesamiento (Stacheldraht, http://www.cert.org/incidentnotes/IN-99-04.html). Los ataques DDoS son los precursores tempranos de los Ataques en Enjambre debido al gran nÃºmero de agentes involucrados. â¢ Code Red CrV1, Code Red II, Nimbda - Exhiben nociones tempranas de ataques en enjambre, incluyendo un canal de comunicaciÃ³n oculto. â¢ Staniford & Paxson en Â¿CÃ³mo Dominar Internet en Tu Tiempo Libre? exploran modificaciones a CrV1, Code Red I, II con un tipo de comportamiento similar a un enjambre. Por ejemplo, especulan sobre nuevos gusanos que emplean comunicaciÃ³n directa de gusano a gusano y utilizan actualizaciones programables. Por ejemplo, el gusano Warhol y los gusanos de Permutation-Scanning (autocoordinados). 2.6 Gusano Swarm: los detalles Al considerar la creaciÃ³n de lo que creÃ­amos que era el primer Gusano Swarm en existencia, querÃ­amos adherirnos lo mÃ¡s cercanamente posible al modelo general presentado en la secciÃ³n ? ? mientras facilitÃ¡bamos al mismo tiempo un anÃ¡lisis a gran escala, tanto empÃ­rico como a travÃ©s de simulaciones, del comportamiento del enjambre. Por esta razÃ³n, seleccionamos como primera instancia Estructura FunciÃ³n/Ejemplo InfecciÃ³n, InfecciÃ³n Vector Ejecutable se ejecuta ProtecciÃ³n y Sigilo Deshabilitar McAfee (ManteniÃ©ndose Vivo) PropagaciÃ³n Enviar correo electrÃ³nico a todos en la libreta de direcciones Aprendizaje, ComunicaciÃ³n, Feromonas/Banderas (Prueba y Control Distribuido si el Gusano ya estÃ¡ presente) Bombas de tiempo, Algoritmos de Aprendizaje, Canal IRC AcciÃ³n Basada en Objetivos (ABO) DDoS www.sco.com Todo lo demÃ¡s, a menudo llamado carga Ãºtil Figura 2: Modelo General de un Gusano de Enjambre del enjambre un gusano simple de craqueo de contraseÃ±as. El objetivo de este gusano simplemente es infectar a un anfitriÃ³n intentando secuencialmente iniciar sesiÃ³n en el anfitriÃ³n utilizando contraseÃ±as conocidas (ataque de diccionario), contraseÃ±as que han sido descubiertas previamente por cualquier miembro del enjambre, y contraseÃ±as aleatorias. Una vez que un huÃ©sped estÃ¡ infectado, el gusano crearÃ¡ canales de comunicaciÃ³n tanto con sus vecinos conocidos en ese momento, como con cualquier descendencia que genere con Ã©xito. En este contexto, una generaciÃ³n exitosa de una descendencia significa simplemente infectar a un nuevo huÃ©sped y replicar una copia exacta de sÃ­ misma en dicho huÃ©sped. Llamamos a este gusano enjambre el gusano ZachiK en honor a uno de sus creadores. Como se puede ver en esta descripciÃ³n, el gusano ZachiK exhibe todos los elementos descritos anteriormente. En las siguientes secciones, describimos detalladamente cada uno de los elementos del gusano ZachiK. 2.7 Vector de InfecciÃ³n El vector de infecciÃ³n utilizado por el gusano ZachiK es el protocolo de shell seguro SSH. Se escribiÃ³ un cliente modificado que es capaz de recibir contraseÃ±as desde la lÃ­nea de comandos, e integrado con un script que le suministra diversas contraseÃ±as: conocidas y aleatorias. Cuando se encuentra una contraseÃ±a para un objetivo adecuado, comienza el proceso de infecciÃ³n. DespuÃ©s de descubrir la contraseÃ±a de root de un host, el gusano infecta el host objetivo y se replica a sÃ­ mismo. El gusano crea un nuevo directorio en el host objetivo, copia el cliente ssh modificado, el script, los servidores de comunicaciones y las versiones actualizadas de los archivos de datos (lista de contraseÃ±as conocidas y una lista de vecinos actuales). Luego ejecuta el script modificado en los hosts reciÃ©n infectados, lo que genera el servidor de comunicaciones, notifica a los vecinos y comienza a buscar nuevos objetivos. Se podrÃ­a argumentar, de manera correcta, que el gusano ZachiK puede ser fÃ¡cilmente derrotado por las tÃ©cnicas de contramedidas actuales presentes en la mayorÃ­a de los sistemas hoy en dÃ­a, como la prohibiciÃ³n de accesos directos de root desde la red. Dentro de este contexto, ZachiK puede ser rÃ¡pidamente descartado como un gusano muy simple e inofensivo que no requiere un estudio adicional. Sin embargo, el lector deberÃ­a considerar lo siguiente: 1. ZachiK se puede modificar fÃ¡cilmente para incluir una variedad de vectores de infecciÃ³n. Por ejemplo, podrÃ­a programarse para adivinar nombres de usuario comunes y sus contraseÃ±as; obtener acceso al sistema, luego adivinar la contraseÃ±a de root o utilizar otras vulnerabilidades conocidas para obtener privilegios de root. ZachiK es un gusano de prueba de concepto. La importancia de ZachiK radica en que incorpora todos los comportamientos de un gusano en enjambre, incluyendo, pero no limitÃ¡ndose a, el control distribuido, la comunicaciÃ³n entre agentes y el aprendizaje; 3. ZachiK estÃ¡ compuesto por una gran colecciÃ³n de agentes que operan de forma independiente, lo que se presta naturalmente a algoritmos paralelos como la bÃºsqueda paralela del espacio de direcciones IPV4. Dentro de este contexto, SLAMMER incorpora una capacidad de bÃºsqueda paralela de direcciones potencialmente susceptibles. Sin embargo, a diferencia de ZachiK, el conocimiento descubierto por la bÃºsqueda nunca se comparte entre los agentes. Por estas razones, y muchas otras, no se debe descartar el potencial de esta nueva clase de gusanos, sino mÃ¡s bien abrazar su estudio. 2.8 AutopreservaciÃ³n En el caso del gusano ZachiK, las principales tÃ©cnicas de autopreservaciÃ³n utilizadas son simplemente mantener el tamaÃ±o de la carga Ãºtil pequeÃ±o. En este contexto, esto simplemente significa restringir la cantidad de contraseÃ±as que una descendencia hereda, enmascarar mensajes de gusano como solicitudes http comunes y limitar el nÃºmero de vecinos a un mÃ¡ximo de cinco-(5). 2.9 PropagaciÃ³n Elegir el(los) prÃ³ximo(s) objetivo(s) de manera eficiente requiere reflexiÃ³n. En el pasado, los gusanos conocidos y propuestos, ver [5], han aplicado tÃ©cnicas de propagaciÃ³n que variaban. Estos incluyen: selecciÃ³n estrictamente aleatoria de un posible anfitriÃ³n vulnerable; listas de objetivos de anfitriones vulnerables; selecciÃ³n aleatoria localmente sesgada (seleccionar un objetivo de anfitriÃ³n al azar de una subred local); y una combinaciÃ³n de algunas o todas las anteriores. En nuestros entornos de prueba y simulaciÃ³n, aplicaremos una combinaciÃ³n de selecciÃ³n localmente sesgada y totalmente aleatoria de posibles hosts vulnerables. Sin embargo, debido a que el gusano ZachiK es un gusano enjambre, la informaciÃ³n de descubrimiento de direcciones (es decir, cuando se descubren direcciones inexistentes) se compartirÃ¡ entre los miembros del enjambre. Los hilos de infecciÃ³n y propagaciÃ³n realizan el siguiente conjunto de actividades repetidamente: â¢ Elegir una direcciÃ³n â¢ Verificar la validez de la direcciÃ³n â¢ Elegir un conjunto de contraseÃ±as â¢ Intentar infectar al host seleccionado con este conjunto de contraseÃ±as. Como se describiÃ³ anteriormente, la elecciÃ³n de una direcciÃ³n hace uso de una combinaciÃ³n de selecciÃ³n aleatoria, sesgo local y listas de objetivos. EspecÃ­ficamente, para elegir una direcciÃ³n, la instancia puede: â¢ Generar una nueva direcciÃ³n aleatoria â¢ Generar una direcciÃ³n en la red local â¢ Elegir una direcciÃ³n de una lista de transferencia La elecciÃ³n se realiza de forma aleatoria entre estas opciones, y puede variarse para probar la dependencia de la propagaciÃ³n en elecciones particulares. Las contraseÃ±as son elegidas de una lista de contraseÃ±as conocidas o generadas recientemente. Cuando una infecciÃ³n de una direcciÃ³n vÃ¡lida falla, se agrega a una lista de entregas, que se envÃ­a a los vecinos para intentar solucionar el problema. 2.10 Aprendizaje, ComunicaciÃ³n y Control Distribuido 2.10.1 ComunicaciÃ³n El concepto de un enjambre se basa en la transferencia de informaciÃ³n entre vecinos, quienes retransmiten sus nuevos mensajes entrantes a sus vecinos, y asÃ­ sucesivamente hasta que cada instancia del gusano en el enjambre estÃ© al tanto de estos mensajes. Hay dos clases de mensajes: mensajes de datos o informaciÃ³n y comandos. Los mensajes de comando estÃ¡n destinados a un usuario externo (tambiÃ©n conocidos como hackers y/o crackers) para controlar las acciones de las instancias, y actualmente no estÃ¡n implementados. Los mensajes de informaciÃ³n actualmente son de tres tipos: nuevo miembro, contraseÃ±as y direcciones explotables (transferencias). Los mensajes de nuevo miembro son mensajes que una nueva instancia envÃ­a a los vecinos en su lista (corta) de vecinos iniciales. Los vecinos luego registran estas instancias en su lista de vecinos. Estos son mensajes que forman la multi-conectividad del enjambre, y sin ellos, la topologÃ­a serÃ­a una estructura en forma de Ã¡rbol, donde la eliminaciÃ³n de un solo nodo harÃ­a que las instancias debajo de Ã©l fueran inaccesibles. Los mensajes de contraseÃ±as informan instancias de contraseÃ±as reciÃ©n descubiertas, y al informar a todas las instancias, el enjambre en su totalidad recopila esta informaciÃ³n, lo que le permite infectar nuevas instancias de manera mÃ¡s efectiva. Los mensajes de entrega informan instancias de direcciones vÃ¡lidas que no pudieron ser comprometidas (fallaron al romper la contraseÃ±a de la cuenta root). Dado que el espacio de direcciones es bastante disperso, lleva un tiempo relativamente largo (es decir, muchos intentos) descubrir una direcciÃ³n vÃ¡lida. Por lo tanto, al entregar las direcciones vÃ¡lidas descubiertas, el enjambre estÃ¡ (a) conservando energÃ­a al no redescubrir las mismas direcciones (b) atacando de manera mÃ¡s efectiva. De cierta manera, esto es una simple instancia de actividad coordinada de un enjambre. 2.10.2 CoordinaciÃ³n Cuando nace una instancia de gusano, transmite su existencia a todos los vecinos en su lista. El hilo principal luego genera algunas hebras de infecciÃ³n y continÃºa manejando mensajes entrantes (registrando vecinos, agregando nuevas contraseÃ±as, recibiendo direcciones y transmitiendo estos mensajes). 2.10.3 Control Distribuido El control en el gusano ZachiK es distribuido en el sentido de que cada instancia del gusano realiza un conjunto de acciones de forma independiente de cada otra instancia, al mismo tiempo que se beneficia del aprendizaje logrado por sus vecinos inmediatos. 2.11 Acciones Basadas en Objetivos La primera instancia del gusano ZachiK tiene dos objetivos bÃ¡sicos. Estos son: (1) propagar, y (2) descubrir y compartir con los miembros de la colonia nuevas contraseÃ±as de root. 3. DISEÃO EXPERIMENTAL Para verificar nuestra hipÃ³tesis de que los Gusanos de Enjambre son mÃ¡s capaces y, por lo tanto, mÃ¡s peligrosos que otros 327 gusanos conocidos, se creÃ³ un banco de pruebas de red y se desarrollÃ³ un simulador capaz de simular topologÃ­as a gran escala similares a Internet (espacio IPV4). El banco de pruebas de red consistÃ­a en una red de Ã¡rea local de 30 computadoras basadas en Linux. El simulador fue escrito en C++. El gusano de enjambre simple descrito en la secciÃ³n 2.6 se utilizÃ³ para infectar al paciente cero, y luego se permitiÃ³ que el gusano de enjambre se propagara a travÃ©s de sus propios mecanismos de propagaciÃ³n, control distribuido y comportamientos de enjambre. En el caso de una red de Ã¡rea local simple de 30 computadoras, se seleccionaron seis (6) contraseÃ±as raÃ­z diferentes de un espacio de contraseÃ±as de 4 dÃ­gitos (10000 opciones). Al comienzo del experimento se conoce una Ãºnica contraseÃ±a, la del paciente cero. Todas las contraseÃ±as compartidas se distribuyen aleatoriamente en todos los nodos. De manera similar, en el caso de la simulaciÃ³n, se construyÃ³ una topologÃ­a de red de 10,000 hosts cuyas direcciones fueron seleccionadas al azar en el espacio IPV4. Dentro de ese espacio, se seleccionaron y distribuyeron un total de 200 contraseÃ±as compartidas ya sea de forma aleatoria y/o dirigida a subredes especÃ­ficas de topologÃ­as de red. Por ejemplo, en una de nuestras ejecuciones de simulaciÃ³n, la topologÃ­a de red consistÃ­a en 200 subredes, cada una conteniendo 50 hosts. En dicha topologÃ­a, las contraseÃ±as compartidas se distribuÃ­an en subredes donde un porcentaje variable de contraseÃ±as se compartÃ­an entre subredes. Los porcentajes de contraseÃ±as compartidas utilizadas reflejaban los primeros estudios empÃ­ricos, donde se descubriÃ³ que hasta el 39.7% de las contraseÃ±as comunes eran compartidas. RESULTADOS En la Figura 3 se presentan los resultados comparando el comportamiento del Ataque de Enjambre versus el de un Gusano Malformado tÃ­pico para una LAN de 30 nodos. En este conjunto de ejecuciones empÃ­ricas, seis (6) contraseÃ±as compartidas fueron distribuidas al azar en todos los nodos de un total de 10,000 contraseÃ±as desconocidas posibles. Los datos presentados reflejan los comportamientos de un total de tres (3) clases distintas de gusanos o enjambres de gusanos. La clase de gusanos presentada es la siguiente: â¢ I-NS-NL:= Gusano genÃ©rico, independiente (I), sin aprendizaje/sin memoria (NL), y sin compartir informaciÃ³n con vecinos o descendientes (NS); â¢ S-L-SP:= Gusano en enjambre (S), aprendizaje (L), mantiene una lista de contraseÃ±as aprendidas, y comparte contraseÃ±as (SP) con vecinos mÃ¡s cercanos y descendientes; y â¢ S-L-SP&A:= Gusano en enjambre (S), aprendizaje (L), mantiene una lista de contraseÃ±as aprendidas, y comparte contraseÃ±as y direcciones existentes (SP&A) con vecinos mÃ¡s cercanos y descendientes. Como se muestra en la Figura 3, los resultados validan nuestra hipÃ³tesis original de que los gusanos en enjambre son significativamente mÃ¡s eficientes y peligrosos que los gusanos genÃ©ricos. En este conjunto de experimentos, el compartir contraseÃ±as proporciona una mejora de un orden de magnitud sobre un gusano aleatorio sin memoria. De manera similar, un gusano en enjambre que comparte contraseÃ±as y direcciones es aproximadamente dos Ã³rdenes de magnitud mÃ¡s eficiente que su contraparte genÃ©rica. En la Figura 3, se pueden observar una serie de discontinuidades. Estas discontinuidades son un artefacto del pequeÃ±o espacio muestral utilizado para este experimento. BÃ¡sicamente, tan pronto como se rompe una contraseÃ±a, todos los nodos que comparten esa contraseÃ±a especÃ­fica se infectan en cuestiÃ³n de segundos. Ten en cuenta que es trivial para un gusano en enjambre escanear y descubrir un pequeÃ±o espacio de contraseÃ±as compartidas. En la Figura 4, se presentan los resultados de la simulaciÃ³n comparando el Comportamiento de Ataque de Enjambre con el de un Gusano Malformado GenÃ©rico. En este conjunto de ejecuciones de simulaciÃ³n, se construyÃ³ una topologÃ­a de red de 10,000 hosts, cuyas direcciones fueron seleccionadas aleatoriamente en el espacio IPV4. Dentro de ese espacio, se seleccionaron y distribuyeron un total de 200 contraseÃ±as compartidas ya sea de forma aleatoria y/o dirigida a subredes especÃ­ficas de topologÃ­as de red. Los datos presentados reflejan los comportamientos de tres (3) clases distintas de gusanos o gusanos en enjambre y dos (2) estrategias de exploraciÃ³n de selecciÃ³n de objetivo de host diferentes (exploraciÃ³n aleatoria y sesgo local). La cantidad de sesgo local variÃ³ en mÃºltiples ejecuciones de simulaciÃ³n. Los resultados presentados son comportamientos agregados. En general, se simularon las siguientes clases de Gusanos GenÃ©ricos y Gusanos en Enjambre. ExploraciÃ³n de direcciones: â¢ Aleatoria:= las direcciones se seleccionan al azar de un subconjunto del espacio IPV4, es decir, un espacio de 224 direcciones; y â¢ Sesgo local:= las direcciones se seleccionan al azar de una subred local (256 direcciones) o de un subconjunto del espacio IPV4, es decir, un espacio de 224 direcciones. El porcentaje de sesgo local varÃ­a en mÃºltiples ejecuciones. Aprendizaje, ComunicaciÃ³n y Control Distribuido â¢ I-NL-NS: Gusano genÃ©rico, independiente (I), sin aprendizaje/sin memoria (NL), y sin compartir informaciÃ³n con vecinos o descendientes (NS); â¢ I-L-OOS: Gusano genÃ©rico, independiente (I), con aprendizaje/sin memoria (L), y compartiendo informaciÃ³n una sola vez con descendientes solamente (OOS); â¢ S-L-SP:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte contraseÃ±as (SP) con vecinos mÃ¡s cercanos y descendientes; â¢ S-L-S&AOP:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte direcciones con vecinos y descendientes, comparte contraseÃ±as solo una vez (al crearse) con descendientes (SA&OP); â¢ S-L-SP&A:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte contraseÃ±as y direcciones existentes (SP&A) con vecinos mÃ¡s cercanos y descendientes. Como se muestra en la Figura 4, los resultados son consistentes con nuestro conjunto de resultados empÃ­ricos. AdemÃ¡s, se pueden hacer las siguientes observaciones. 1. La preferencia local es increÃ­blemente efectiva. Las transferencias cortas de direcciÃ³n son mÃ¡s efectivas que las largas. Variamos el tamaÃ±o de la lista permitida en el intercambio de direcciones; el sobrecosto asociado con una lista de direcciones larga es perjudicial para el rendimiento del gusano en enjambre, asÃ­ como para su sigilo; 3. Para el caso de sesgo local, compartir direcciones vÃ¡lidas de host susceptibles, el gusano S-L-S&AOP (recuerde, el enjambre S-L-S&AOP comparte contraseÃ±as, solo una vez, con descendientes 328 en el momento de la creaciÃ³n) es mÃ¡s efectivo que compartir contraseÃ±as en el caso del enjambre S-L-SP. En este caso, podemos pensar en el enjambre como lanzando un ataque de diccionario distribuido: diferentes segmentos del enjambre utilizan diferentes contraseÃ±as para intentar ingresar a hosts no infectados susceptibles. En el modo de sesgo local, al principio de la vida del enjambre, compartir direcciones es mÃ¡s efectivo que compartir contraseÃ±as, hasta que se descubran la mayorÃ­a de las subredes. Entonces, el apuntar a direcciones locales ayuda a descubrir los hosts susceptibles, mientras que los miembros del enjambre necesitan perder tiempo redescubriendo contraseÃ±as; y 4. Infectar el Ãºltimo 0.5% de los nodos lleva mucho tiempo en modo de sesgo no local. BÃ¡sicamente, la lista de contraseÃ±as compartidas entre subredes se ha agotado, y el enjambre vuelve a simplemente descubrir una contraseÃ±a al azar. Figura 3: Comportamiento del Ataque de Enjambre vs Gusano Malformado: Resultados EmpÃ­ricos, LAN de 30 nodos Figura 4: Comportamiento del Ataque de Enjambre vs Gusano Malformado: Resultados de SimulaciÃ³n 5. RESUMEN Y TRABAJO FUTURO En este manuscrito, hemos presentado un modelo abstracto, similar en algunos aspectos al de Weaver [5], que ayuda a explicar la naturaleza genÃ©rica de los gusanos. El modelo presentado en la secciÃ³n 2 se extendiÃ³ para incorporar una nueva clase de gusanos potencialmente peligrosos llamados Gusanos en Enjambre. Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biolÃ³gicos y muestran un alto grado de aprendizaje, comunicaciÃ³n e inteligencia distribuida. Tales gusanos en enjambre son potencialmente mÃ¡s daÃ±inos que sus contrapartes genÃ©ricas. AdemÃ¡s, se creÃ³ la primera instancia, que sepamos, de un gusano de aprendizaje, llamado ZachiK. ZachiK es un gusano enjambre de descifrado de contraseÃ±as simple que incorpora diferentes estrategias de aprendizaje y comparticiÃ³n de informaciÃ³n. Un gusano de enjambre similar fue desplegado tanto en una red de Ã¡rea local de treinta (30) hosts, como simulado en una topologÃ­a de 10,000 nodos. Los resultados preliminares mostraron que tales gusanos son capaces de comprometer a los anfitriones a tasas hasta 2 Ã³rdenes de magnitud mÃ¡s rÃ¡pido que su contraparte genÃ©rica, manteniendo al mismo tiempo sus capacidades de sigilo. Este trabajo abre una nueva Ã¡rea de problemas interesantes. Algunos de los problemas mÃ¡s interesantes y urgentes a considerar son los siguientes: â¢ Â¿Es posible aplicar algunos de los conceptos de aprendizaje desarrollados en los Ãºltimos diez aÃ±os en las Ã¡reas de inteligencia de enjambre, sistemas de agentes y control distribuido al diseÃ±o de gusanos de enjambre sofisticados de tal manera que se produzca un verdadero comportamiento emergente? â¢ Â¿Son efectivas las tÃ©cnicas actuales que se estÃ¡n desarrollando en el diseÃ±o de Sistemas de DetecciÃ³n y Contramedidas de IntrusiÃ³n y sistemas supervivientes contra esta nueva clase de gusanos?; y â¢ Â¿QuÃ© tÃ©cnicas, si las hay, se pueden desarrollar para crear defensas contra los gusanos de enjambre? 6. AGRADECIMIENTOS Este trabajo se realizÃ³ como parte de un esfuerzo mÃ¡s amplio en el desarrollo de sistemas de DetecciÃ³n de Intrusiones y Contramedidas de prÃ³xima generaciÃ³n en WSSRL. El trabajo se lleva a cabo bajo los auspicios de la subvenciÃ³n ACG-2004-06 otorgada por Acumen Consulting Group, Inc., Marlboro, Massachusetts. REFERENCIAS [1] C.C. Zou, L. Gao, W. G., y Towsley, D. Monitoreo y alerta temprana para <br>gusanos de internet</br>. En la 10Âª Conferencia ACM sobre Seguridad InformÃ¡tica y de Comunicaciones, Washington, DC (octubre de 2003). [2] Liu, S. y Passino, K. Inteligencia de enjambre: Resumen de la literatura. En el Departamento de IngenierÃ­a ElÃ©ctrica, Universidad Estatal de Ohio, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., y Weaver, N. La propagaciÃ³n del gusano saphire/slammer. Inf. tÃ©cnico, Un esfuerzo conjunto de CAIDA, ICSI, Silicon Defense, UC Berkeley EECS y UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S. y Cunningham, R. Una taxonomÃ­a de gusanos informÃ¡ticos. En Actas del Taller de ACM sobre Malware RÃ¡pido (WORM) (2003). 329 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "swarm intelligence": {
            "translated_key": "inteligencia de enjambre",
            "is_in_text": true,
            "original_annotated_sentences": [
                "An Initial Analysis and Presentation of Malware Exhibiting Swarm-Like Behavior Fernando C.ColÂ´on Osorio Wireless System Security Research Laboratory (W.S.S.R.L.)",
                "420 Lakeside Avneue Marlboro, Massachusetts 01752 fcco@cs.wpi.edu Zachi Klopman Wireless System Security Research Laboratory (W.S.S.R.L.) 420 Lakeside Avneue Marlboro, Massachusetts 01752 zachi@cs.wpi.edu ABSTRACT The Slammer, which is currently the fastest computer worm in recorded history, was observed to infect 90 percent of all vulnerable Internets hosts within 10 minutes.",
                "Although the main action that the Slammer worm takes is a relatively unsophisticated replication of itself, it still spreads so quickly that human response was ineffective.",
                "Most proposed countermeasures strategies are based primarily on rate detection and limiting algorithms.",
                "However, such strategies are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In our work, we put forth the hypothesis that next generation worms will be radically different, and potentially such techniques will prove ineffective.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
                "Emergent Intelligence is the behavior of systems, very much like biological systems such as ants or bees, where simple local interactions of autonomous members, with simple primitive actions, gives rise to complex and intelligent global behavior.",
                "In this manuscript we will introduce the basic principles behind the idea of Swarm Worms, as well as the basic structure required in order to be considered a swarm worm.",
                "In addition, we will present preliminary results on the propagation speeds of one such swarm worm, called the ZachiK worm.",
                "We will show that ZachiK is capable of propagating at a rate 2 orders of magnitude faster than similar worms without swarm capabilities.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Intrusion Detection; D.4.6 [Security and Protection]: Invasive software General Terms Experimentation, Security 1.",
                "INTRODUCTION AND PREVIOUSWORK In the early morning hours (05:30 GMT) of January 25, 2003 the fastest computer worm in recorded history began spreading throughout the Internet.",
                "Within 10 minutes after the first infected host (patient zero), 90 percent of all vulnerable hosts had been compromised creating significant disruption to the global Internet infrastructure.",
                "Vern Paxson of the International Computer Science Institute and Lawrence Berkeley National Laboratory in its analysis of Slammer commented: The Slammer worm spread so quickly that human response was ineffective, see [4] The interesting part, from our perspective, about the spread of Slammer is that it was a relatively unsophisticated worm with benign behavior, namely self-reproduction.",
                "Since Slammer, researchers have explored the behaviors of fast spreading worms, and have designed countermeasures strategies based primarily on rate detection and limiting algorithms.",
                "For example, Zou, et al., [2], proposed a scheme where a Kalman filter is used to detect the early propagation of a worm.",
                "Other researchers have proposed the use of detectors where rates of Destination Unreachable messages are monitored by firewalls, and a significant increase beyond normal, alerts the organization to the potential presence of a worm.",
                "However, such strategies suffer from the fighting the last War syndrome.",
                "That is, systems are being designed and developed to effectively contain worms whose behaviors are similar to that of Slammer.",
                "In the work described here, we put forth the hypothesis that next generation worms will be different, and therefore such techniques may have some significant limitations.",
                "Specifically, we propose to study a new generation of worms called Swarm Worms, whose behavior is predicated on the concept of emergent intelligence.",
                "The concept of emergent intelligence was first studied in association with biological systems.",
                "In such studies, early researchers discovered a variety of interesting insect or animal behaviors in the wild.",
                "A flock of birds sweeps across the sky.",
                "A group of ants forages for food.",
                "A school of fish swims, turns, flees together away from a predator, ands so forth.",
                "In general, this kind of aggregate motion has been called swarm behavior.",
                "Biologists, and computer scientists in the field of artificial intelligence have studied such biological swarms, and 323 attempted to create models that explain how the elements of a swarm interact, achieve goals, and evolve.",
                "Moreover, in recent years the study of <br>swarm intelligence</br> has become increasingly important in the fields of robotics, the design of Mobile ad-hoc Networks (MANETS), the design of Intrusion Detection Systems, the study of traffic patterns in transportation systems, in military applications, and other areas, see [3].",
                "The basic concepts that have been developed over the last decade to explain swarms, and swarm behavior include four basic components.",
                "These are: 1.",
                "Simplicity of logic & actions: A swarm is composed of N agents whose intelligence is limited.",
                "Agents in the swarm use simple local rules to govern their actions.",
                "Some models called this primitive actions or behaviors; 2.",
                "Local Communication Mechanisms: Agents interact with other members in the swarm via simple local communication mechanisms.",
                "For example, a bird in a flock senses the position of adjacent bird and applies a simple rule of avoidance and follow. 3.",
                "Distributed control: Autonomous agents interact with their environment, which probably consists of other agents, but act relatively independently from all other agents.",
                "There is no central command or leader, and certainly there is no global plan. 4.",
                "Emergent Intelligence: Aggregate behavior of autonomous agents results in complex intelligent behaviors; including self-organization.",
                "In order to understand fully the behavior of such swarms it is necessary to construct a model that explains the behavior of what we will call generic worms.",
                "This model, which extends the work by Weaver [5] is presented here in section 2.",
                "In addition, we intend to extend said model in such a way that it clearly explains the behaviors of this new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
                "Such Swarm Worms are potentially more harmful than their similar generic counterparts.",
                "Specifically, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
                "ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
                "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms are capable of compromising hosts at rates up to two orders of magnitude faster than their generic counterpart.",
                "The rest of this manuscript is structure as follows.",
                "In section 2 an abstract model of both generic worms as well as swarm worms is presented.",
                "This model is used in section 2.6 to described the first instance of a swarm worm, ZachiK.",
                "In section 4, preliminary results via both empirical measurements as well as simulation is presented.",
                "Finally, in section 5 our conclusions and insights into future work are presented. 2.",
                "WORM MODELING In order to study the behavior of swarm worms in general, it is necessary to create a model that realistically reflects the structure of worms and it is not necessarily tied to a specific instance.",
                "In this section, we described such a model where a general worm is describe as having four-(4) basic components or subfunctions.",
                "By definition, a worm is a selfcontained, self propagating program.",
                "Thus, in simple terms, it has two main functions: that which propagates and that which does other things.",
                "We propose that there is a third broad functionality of a worm, that of self-preservation.",
                "We also propose that the other functionality of a worm may be more appropriately categorized as Goal-Based Actions (GBA), as whatever functionality included in a worm will naturally be dependent on whatever goals (and subgoals) the author has.",
                "The work presented by Weaver et. al. in [5] provides us with mainly an action and technique based taxonomy of computer worms, which we utilize and further extend here. 2.1 Propagation The propagation function itself may be broken down into three actions: acquire target, send scan, and infect target.",
                "Acquiring the target simply means picking a host to attack next.",
                "Sending a scan involves checking to see if that host is receptive to an infection attempt, since IP-space is sparsely populated.",
                "This may involve a simple ping to check if the host is alive or a full out vulnerability assessment.",
                "Infecting the target is the actual method used to send the worm code to the new host.",
                "In algorithm form: propagate() { host := acquire_target() success := send_scan(host) if( success ) then infect(host) endif } In the case of a simple worm which does not first check to see if the host is available or susceptible (such as Slammer), the scan method is dropped: propagate() { host := acquire_target() infect(host) } Each of these actions may have an associated cost to its inclusion and execution, such as increased worm size and CPU or network load.",
                "Depending on the authors needs or requirements, these become limiting factors in what may be included in the worms actions.",
                "This is discussed further after expanding upon these actions below. 2.2 Target Acquisition: The Target Acquisition phase of our worm algorithm is built directly off of the Target Discovery section in [5].",
                "Weaver et. al. taxonomize this task into 5 separate categories.",
                "Here, we further extend their work through parameterization.",
                "Scanning: Scanning may be considered an equation-based method for choosing a host.",
                "Any type of equation may be used to arrive at an IP address, but there are three main types seen thus far: sequential, random, and local preference.",
                "Sequential scanning is exactly as it sounds: start at an IP address and increment through all the IP space.",
                "This could carry with it the options of which IP to start with (user chosen value, random, or based on IP of infected host) and 324 how many times to increment (continuous, chosen value, or subnet-based).",
                "Random scanning is completely at random (depending on the chosen PRNG method and its seed value).",
                "Local preference scanning is a variance of either Sequential or Random, whereby it has a greater probability of choosing a local IP address over a remote one (for example, the traditional 80/20 split).",
                "Pre-generated Target Lists: Pre-generated Target Lists, or so called hit-lists, could include the options for percentage of total population and percentage wrong, or just number of IPs to include.",
                "Implicit to this type is the fact that the list is divided among a parent and its children, avoiding the problem of every instance hitting the exact same machines.",
                "Externally Generated Target Lists: Externally generated target lists depend on one or more external sources that can be queried for host data.",
                "This will involve either servers that are normally publicly available, such as gaming meta-servers, or ones explicitly setup by the worm or worm author.",
                "The normally available meta-servers could have parameters for rates of change, such as many popping up at night or leaving in the morning.",
                "Each server could also have a maximum queries/second that it would be able to handle.",
                "The worm would also need a way of finding these servers, either hard-coded or through scanning.",
                "Internal Target Lists: Internal Target Lists are highly dependent on the infected host.",
                "This method could parameterize the choice of how much info is on the host, such as all machines in subnet, all windows boxes in subnet, particular servers, number of internal/external, or some combination.",
                "Passive: Passive methods are determined by normal interactions between hosts.",
                "Parameters may include a rate of interaction with particular machines, internal/external rate of interaction, or subnet-based rate of interaction.",
                "Any of these methods may also be combined to produce different types of target acquisition strategies.",
                "For example, the a worm may begin with an initial hit-list of 100 different hosts or subnets.",
                "Once it has exhausted its search using the hit-list, it may then proceed to perform random scanning with a 50% local bias.",
                "It is important to note, however, that the resource consumption of each method is not the same.",
                "Different methods may require the worm to be large, such as the extra bytes required by a hit-list, or to take more processing time, such as by searching the host for addresses of other vulnerable hosts.",
                "Further research and analysis should be performed in this area to determine associated costs for using each method.",
                "The costs could then be used in determining design tradeoffs that worm authors engage at.",
                "For example, hit lists provide a high rate of infection, but at a high cost of worm payload size. 2.2.1 Sending a Scan The send scan function tests to see if the host is available for infection.",
                "This can be as simple as checking if the host is up on the network or as complex as checking if the host is vulnerable to the exploit which will be used.",
                "The sending of a scan before attempted infection can increase the scanning rate if the cost for failing an infection is greater than the cost of failing a scan or sending a scan plus infection; and failures are more frequent than successes.",
                "One important parameter to this would be the choice of transport protocol (TCP/UDP) or just simply the time for one successful scan and time for one failed scan.",
                "Also, whether or not it tests for the host to be up or if it is a full test for the vulnerability (or for multiple vulnerabilities). 2.2.2 Infection Vector (IV) The particular infection vector used to access the remote host is mainly dependent on the particular vulnerability chosen to exploit.",
                "In a non-specific sense, it is dependent on the transport protocol chosen to use and the message size to be sent.",
                "Section 3 of [5] also proposes three particular classes of IV: Self-carried, second channel, and embedded. 2.3 Self Preservation The Self Preservation actions of a worm may take many forms.",
                "In the wild, worms have been observed to disable anti-virus software or prevent sending itself to certain antivirusknown addresses.",
                "They have also been seen to attempt disabling of other worms which may be contending for the same system.",
                "We also believe that a time-based throttled scanning may help the worm to slip under the radar.",
                "We also propose a decoy method, whereby a worm will release a few children that cause a lot of noise so that the parent is not noticed.",
                "It has also been proposed [5] that a worm cause damage to its host if, and only if, it is disturbed in some way.",
                "This module could contain parameters for: probability of success in disabling anti-virus or other software updates, probability of being noticed and thus removed, or hardening of the host against other worms. 2.4 Goal-Based Actions A worms GBA functionality depends on the authors goal list.",
                "The Payloads section of [5] provides some useful suggestions for such a module.",
                "The opening of a back-door can make the host susceptible to more attacks.",
                "This would involve a probability of the back-door being used and any associated traffic utilization.",
                "It could also provide a list of other worms this host is now susceptible to or a list of vulnerabilities this host now has.",
                "Spam relays and HTTP-Proxies of course have an associated bandwidth consumption or traffic pattern.",
                "Internet DoS attacks would have a set time of activation, a target, and a traffic pattern.",
                "Data damage would have an associated probability that the host dies because of the damage.",
                "In Figure 1, this general model of a worm is summarized.",
                "Please note that in this model there is no learning, no, or very little, sharing of information between worm instances, and certainly no coordination of actions.",
                "In the next section we expand the model to include such mechanisms, and hence, arrive at the general model of a swarm worm. 2.5 Swarms - General Model As described in section 1, the basic characteristics that distinguished swarm behavior from simply what appears to be collective coordinated behaviors are four basic attributes.",
                "These are: 1.",
                "Simplicity of logic & actions; 2.",
                "Local Communication Mechanisms; 3.",
                "Distributed control; and 4.",
                "Emergent Intelligence, including self-organization. 325 Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 1: General Worm Model In this work we aggregate all of these attributes under the general title of Learning, Communication, and Distributed Control.",
                "The presence of these attributes distinguishes swarm worms from otherwise regular worms, or other types of malware such as Zombies.",
                "In figure ? ?, the generic model of a worm is expanded to included these set of actions.",
                "Within this context then, a worm like Slammer cannot be categorized as a swarm worm due to the fact that new instances of the worm do not coordinate their actions or share information.",
                "On the other hand, Zombies and many other forms of DDoS, which at first glance may be consider swarm worms are not.",
                "This is simply due to fact that in the case of Zombies, control is not distributed but rather centralized, and no emergent behaviors arise.",
                "The latter, the potential emergence of intelligence or new behaviors is what makes swarm worms so potentially dangerous.",
                "Finally, when one considers the majority of recent disruptions to the Internet Infrastructure, and in light of our description of swarm attacks, then said disruptions can be easily categorized as precursors to truly swarm behavior.",
                "Specifically, â¢ DDOS - Large number of compromised hosts send useless packets requiring processing (Stacheldraht, http : //www.cert.org/ incidentnotes/IN â 99 â 04.html).",
                "DDoS attacks are the early precursors to Swarm Attacks due to the large number of agents involved. â¢ Code Red CrV1, Code Red II, Nimbda - Exhibit early notions of swarm attacks, including a backdoor communication channel. â¢ Staniford & Paxson in How to Own the Internet in Your Spare Time? explore modifications to CrV1, Code Red I, II with a swarm like type of behavior.",
                "For example, they speculate on new worms which employ direct worm-to-worm communication, and employ programmable updates.",
                "For example the Warhol worm, and Permutation-Scanning (self coordinating) worms. 2.6 Swarm Worm: the details In considering the creation of what we believed to be the first Swarm Worm in existence, we wanted to adhere as close as possible to the general model presented in section ? ? while at the same time facilitating large scale analysis, both empirical and through simulations, of the behavior of the swarm.",
                "For this reason, we selected as the first instance Structure Function/Example Infection, Infection Vector Executable is run Protection & Stealthiness Disable McAfee (Staying Alive) Propagation Send email to everyone in address book Learning, Communication, Pheromones/Flags (Test and Distributed Control if Worm is already present) Time bombs, Learning Algorithms, IRC channel Goal Based Action (GBA) DDoS www.sco.com Everything else, often called payload Figure 2: General Model of a Swarm Worm of the swarm a simple password cracking worm.",
                "The objective of this worm simply is to infect a host by sequentially attempting to login into the host using well known passwords (dictionary attack), passwords that have been discovered previously by any member of the swarm, and random passwords.",
                "Once, a host is infected, the worm will create communication channels with both its known neighbors at that time, as well as with any offsprings that it successfully generates.",
                "In this context a successful generation of an offspring means simply infecting a new host and replicating an exact copy of itself in such a host.",
                "We call this swarm worm the ZachiK worm in honor of one of its creators.",
                "As it can be seen from this description, the ZachiK worm exhibits all of the elements described before.",
                "In the following sections, we described in detail each one of the elements of the ZachiK worm. 2.7 Infection Vector The infection vector used for ZachiK worm is the secure shell protocol SSH.",
                "A modified client which is capable of receiving passwords from the command line was written, and integrated with a script that supplies it with various passwords: known and random.",
                "When a password is found for an appropriate target, the infection process begins.",
                "After the root password of a host is discovered, the worm infects the target host and replicates itself.",
                "The worm creates a new directory in the target host, copies the modified ssh client, the script, the communications servers, and the updated versions of data files (list of known passwords and a list of current neighbors).",
                "It then runs the modified script on the newly infected hosts, which spawns the communications server, notifies the neighbors and starts looking for new targets.",
                "It could be argued, correctly, that the ZachiK worm can be easily defeated by current countermeasure techniques present on most systems today, such as disallowing direct root logins from the network.",
                "Within this context ZachiK can quickly be discarded as very simple and harmless worm that does not require further study.",
                "However, the reader should consider the following: 1.",
                "ZachiK can be easily modified to include a variety of infection vectors.",
                "For example, it could be programmed to guess common user names and their passwords; gain 326 access to a system, then guess the root password or use other well know vulnerabilities to gain root privileges; 2.",
                "ZachiK is a proof of concept worm.",
                "The importance of ZachiK is that it incorporates all of the behaviors of a swarm worm including, but not restricted to, distributed control, communication amongst agents, and learning; 3.",
                "ZachiK is composed of a large collection of agents operating independently which lends itself naturally to parallel algorithms such as a parallel search of the IPV4 address space.",
                "Within this context, SLAMMER, does incorporate a parallel search capability of potentially susceptible addresses.",
                "However, unlike ZachiK, the knowledge discovered by the search is never shared amongst the agents.",
                "For this reasons, and many others, one should not discard the potential of this new class of worms but rather embrace its study. 2.8 Self-Preservation In the case of ZachiK worm, the main self-preservation techniques used are simply keeping the payload small.",
                "In this context, this simply means restricting the number of passwords that an offspring inherits, masquerading worm messages as common http requests, and restricting the number of neighbors to a maximum of five-(5). 2.9 Propagation Choosing the next target(s) in an efficient matter requires thought.",
                "In the past, known and proposed worms, see [5], have applied propagation techniques that varied.",
                "These include: strictly random selection of a potential vulnerable host; target lists of vulnerable hosts; locally biased random selection (select a host target at random from a local subnet); and a combination of some or all of the above.",
                "In our test and simulation environments, we will apply a combination of locally biased and totally random selection of potential vulnerable hosts.",
                "However, due to the fact that the ZachiK worm is a swarm worm, address discovery (that is when non-existent addresses are discovered) information will be shared amongst members of the swarm.",
                "The infection and propagation threads do the following set of activities repeatedly: â¢ Choose an address â¢ Check the validity of the address â¢ Choose a set of passwords â¢ Try infecting the selected host with this set of passwords As described earlier, choosing an address makes use of a combination of random selection, local bias, and target lists.",
                "Specifically, to choose an address, the instance may either: â¢ Generate a new random address â¢ Generate an address on the local network â¢ Pick an address from a handoff list The choice is made randomly among these options, and can be varied to test the dependency of propagation on particular choices.",
                "Password are either chosen from the list of known passwords or newly generated.",
                "When an infection of a valid address fails, it is added to a list of handoffs, which is sent to the neighbors to try to work on. 2.10 Learning, CommunicationandDistributed Control 2.10.1 Communication The concept of a swarm is based on transfer of information amongst neighbors, which relay their new incoming messages to their neighbors, and so on until every worm instance in the swarm is aware of these messages.",
                "There are two classes of messages: data or information messages and commands.",
                "The command messages are meant for an external user (a.k.a., hackers and/or crackers) to control the actions of the instances, and are currently not implemented.",
                "The information messages are currently of three kinds: new member, passwords and exploitable addresses (handoffs).",
                "The new member messages are messages that a new instance sends to the neighbors on its (short) list of initial neighbors.",
                "The neighbors then register these instances in their neighbor list.",
                "These are messages that form the multi-connectivity of the swarm, and without them, the topology will be a treelike structure, where eliminating a single node would cause the instances beneath it to be inaccessible.",
                "The passwords messages inform instances of newly discovered passwords, and by informing all instances, the swarm as whole collects this information, which allows it to infect new instances more effectively.",
                "The handoffs messages inform instances of valid addresses that could not be compromised (fail at breaking the password for the root account).",
                "Since the address space is rather sparse, it takes a relatively long time (i.e. many trials) to discover a valid address.",
                "Therefore, by handing off discovered valid addresses, the swarm is (a) conserving energy by not re-discovering the same addresses (b) attacking more effectively.",
                "In a way, this is a simple instance of coordinated activity of a swarm. 2.10.2 Coordination When a worm instance is born, it relays its existence to all neighbors on its list.",
                "The main thread then spawns a few infection threads, and continues to handle incoming messages (registering neighbors, adding new passwords, receiving addresses and relaying these messages). 2.10.3 Distributed Control Control in the ZachiK worm is distributed in the sense that each instance of the worm performs a set of actions independently of every other instance while at the same time benefiting from the learning achieve by its immediate neighbors. 2.11 Goal Based Actions The first instantiation of the ZachiK worm has two basic goals.",
                "These are: (1) propagate, and (2) discover and share with members of th swarm new root passwords. 3.",
                "EXPERIMENTAL DESIGN In order to verify our hypothesis that Swarm Worms are more capable, and therefore dangerous than other well known 327 worms, a network testbed was created, and a simulator, capable of simulating large scale Internet-like topologies (IPV4 space), was developed.",
                "The network testbed consisted of a local area network of 30 Linux based computers.",
                "The simulator was written in C++ .",
                "The simple swarm worm described in section 2.6 was used to infect patient-zero, and then the swarm worm was allowed to propagate via its own mechanisms of propagation, distributed control, and swarm behaviors.",
                "In the case of a simple local area network of 30 computers, six-(6) different root passwords out of a password space of 4 digits (10000 options) were selected.",
                "At the start of the experiment a single known password is known, that of patient-zero.",
                "All shared passwords are distributed randomly across all nodes.",
                "Similarly, in the case of the simulation, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "For example, in one of our simulation runs, the network topology consisted of 200 subnets each containing 50 hosts.",
                "In such a topology, shared passwords were distributed across subnets where a varying percentage of passwords were shared across subnets.",
                "The percentages of shared passwords used was reflective of early empirical studies, where up to 39.7% of common passwords were found to be shared. 4.",
                "RESULTS In Figure 3, the results comparing Swarm Attack behavior versus that of a typical Malform Worm for a 30 node LAN are presented.",
                "In this set of empirical runs, six-(6) shared passwords were distributed at random across all nodes from a possible of 10,000 unknown passwords.",
                "The data presented reflects the behaviors of a total of three-(3) distinct classes of worm or swarm worms.",
                "The class of worms presented are as follows: â¢ I-NS-NL:= Generic worm, independent (I), no learning/memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; and â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 3, the results validate our original hypothesis that swarm worms are significantly more efficient and dangerous than generic worms.",
                "In this set of experiments, the sharing of passwords provides an order of magnitude improvement over a memoryless random worm.",
                "Similarly, a swarm worm that shares passwords and addresses is approximately two orders of magnitude more efficient than its generic counterpart.",
                "In Figure 3, a series of discontinuities can be observed.",
                "These discontinuities are an artifact of the small sample space used for this experiment.",
                "Basically, as soon as a password is broken, all nodes sharing that specific password are infected within a few seconds.",
                "Note that it is trivial for a swarm worm to scan and discovered a small shared password space.",
                "In Figure 4, the simulation results comparing Swarm Attack Behavior versus that of a Generic Malform Worm are presented.",
                "In this set of simulation runs, a network topology of 10,000 hosts, whose addresses were selected randomly across the IPV4 space, was constructed.",
                "Within that space, a total of 200 shared passwords were selected and distributed either randomly and/or targeted to specific network topologies subnets.",
                "The data presented reflects the behaviors of three-(3) distinct classes of worm or swarm worms and two(2) different target host selection scanning strategies (random scanning and local bias).",
                "The amount of local bias was varied across multiple simulation runs.",
                "The results presented are aggregate behaviors.",
                "In general the following class of Generic Worms and Swarm Worms were simulated.",
                "Address Scanning: â¢ Random:= addresses are selected at random from a subset of the IPV4 space, namely, a 224 address space; and â¢ Local Bias:= addresses are selected at random from either a local subnet (256 addresses) or from a subset of the IPV4 space, namely, a 224 address space.",
                "The percentage of local bias is varied across multiple runs.",
                "Learning, Communication & Distributed Control â¢ I-NL-NS: Generic worm, independent (I), no learning/ memoryless (NL), and no sharing of information with neighbors or offsprings (NS); â¢ I-L-OOS: Generic worm, independent (I), learning/ memoryless (L), and one time sharing of information with offsprings only (OOS); â¢ S-L-SP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords (SP) across nearest neighbors and offsprings; â¢ S-L-S&AOP:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of addresses with neighbors and offsprings, shares passwords one time only (at creation) with offsprings(SA&OP); â¢ S-L-SP&A:= Swarm Worm (S), learning (L), keeps list of learned passwords, and sharing of passwords and existent addresses (SP&A) across nearest neighbors and offsprings.",
                "As it is shown in Figure 4, the results are consistent with our set of empirical results.",
                "In addition, the following observations can be made. 1.",
                "Local preference is incredibly effective. 2.",
                "Short address handoffs are more effective than long ones.",
                "We varied the size of the list allowed in the sharing of addresses; the overhead associated with a long address list is detrimental to the performance of the swarm worm, as well as to its stealthiness; 3.",
                "For the local bias case, sharing valid addresses of susceptible host, S-L-S&AOP worm (recall, the S-L-S&AOP swarm shares passwords, one time only, with offsprings 328 at creation time) is more effective than sharing passwords in the case of the S-L-SP swarm.",
                "In this case, we can think of the swarm as launching a distributeddictionary attack: different segments of the swarm use different passwords to try to break into susceptible uninfected host.",
                "In the local bias mode, early in the life of the swarm, address-sharing is more effective than password-sharing, until most subnets are discovered.",
                "Then the targeting of local addresses assists in discovering the susceptible hosts, while the swarm members need to waste time rediscovering passwords; and 4.",
                "Infecting the last 0.5% of nodes takes a very long time in non-local bias mode.",
                "Basically, the shared password list across subnets has been exhausted, and the swarm reverts to simply a random discovery of password algorithm.",
                "Figure 3: Swarm Attack Behavior vs. Malform Worm: Empirical Results, 30node LAN Figure 4: Swarm Attack Behavior vs. Malform Worm: Simulation Results 5.",
                "SUMMARY AND FUTURE WORK In this manuscript, we have presented an abstract model, similar in some aspects to that of Weaver [5], that helps explain the generic nature of worms.",
                "The model presented in section 2 was extended to incorporate a new class of potentially dangerous worms called Swarm Worms.",
                "Swarm Worms behave very much like biological swarms and exhibit a high degree of learning, communication, and distributed intelligence.",
                "Such Swarm Worms are potentially more harmful than their generic counterparts.",
                "In addition, the first instance, to our knowledge, of such a learning worm was created, called ZachiK.",
                "ZachiK is a simple password cracking swarm worm that incorporates different learning and information sharing strategies.",
                "Such a swarm worm was deployed in both a local area network of thirty-(30) hosts, as well as simulated in a 10,000 node topology.",
                "Preliminary results showed that such worms is capable of compromising hosts a rates up to 2 orders of magnitude faster than its generic counterpart while retaining stealth capabilities.",
                "This work opens up a new area of interesting problems.",
                "Some of the most interesting and pressing problems to be consider are as follows: â¢ Is it possible to apply some of learning concepts developed over the last ten years in the areas of <br>swarm intelligence</br>, agent systems, and distributed control to the design of sophisticated swarm worms in such a way that true emergent behavior takes place? â¢ Are the current techniques being developed in the design of Intrusion Detection & CounterMeasure Systems and Survivable systems effective against this new class of worms? ; and â¢ What techniques, if any, can be developed to create defenses against swarm worms? 6.",
                "ACKNOWLEDGMENTS This work was conducted as part of a larger effort in the development of next generation Intrusion Detection & CounterMeasure Systems at WSSRL.",
                "The work is conducted under the auspices of Grant ACG-2004-06 by the Acumen Consulting Group, Inc., Marlboro, Massachusetts. 7.",
                "REFERENCES [1] C.C.",
                "Zou, L. Gao, W. G., and Towsley, D. Monitoring and early warning for internet worms.",
                "In 10th ACM Conference on Computer and Communications Security, Washington, DC (October 2003). [2] Liu, S., and Passino, K. <br>swarm intelligence</br>: Literature overview.",
                "In Dept. of Electrical Engineering, The Ohio State University, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., and Weaver, N. The spread of the saphire/slammer worm.",
                "Tech. rep., A joint effort of CAIDA, ICSI, Silicon Defense, UC Berkeley EECS and UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S., and Cunningham, R. A taxonomy of computer worms.",
                "In Proceedings of the ACM Workshop on Rapid Malware (WORM) (2003). 329"
            ],
            "original_annotated_samples": [
                "Moreover, in recent years the study of <br>swarm intelligence</br> has become increasingly important in the fields of robotics, the design of Mobile ad-hoc Networks (MANETS), the design of Intrusion Detection Systems, the study of traffic patterns in transportation systems, in military applications, and other areas, see [3].",
                "Some of the most interesting and pressing problems to be consider are as follows: â¢ Is it possible to apply some of learning concepts developed over the last ten years in the areas of <br>swarm intelligence</br>, agent systems, and distributed control to the design of sophisticated swarm worms in such a way that true emergent behavior takes place? â¢ Are the current techniques being developed in the design of Intrusion Detection & CounterMeasure Systems and Survivable systems effective against this new class of worms? ; and â¢ What techniques, if any, can be developed to create defenses against swarm worms? 6.",
                "In 10th ACM Conference on Computer and Communications Security, Washington, DC (October 2003). [2] Liu, S., and Passino, K. <br>swarm intelligence</br>: Literature overview."
            ],
            "translated_annotated_samples": [
                "AdemÃ¡s, en los Ãºltimos aÃ±os el estudio de la <br>inteligencia de enjambre</br> ha cobrado cada vez mÃ¡s importancia en los campos de la robÃ³tica, el diseÃ±o de Redes MÃ³viles Ad-hoc (MANETS), el diseÃ±o de Sistemas de DetecciÃ³n de Intrusiones, el estudio de patrones de trÃ¡fico en sistemas de transporte, en aplicaciones militares y otras Ã¡reas, ver [3].",
                "Algunos de los problemas mÃ¡s interesantes y urgentes a considerar son los siguientes: â¢ Â¿Es posible aplicar algunos de los conceptos de aprendizaje desarrollados en los Ãºltimos diez aÃ±os en las Ã¡reas de <br>inteligencia de enjambre</br>, sistemas de agentes y control distribuido al diseÃ±o de gusanos de enjambre sofisticados de tal manera que se produzca un verdadero comportamiento emergente? â¢ Â¿Son efectivas las tÃ©cnicas actuales que se estÃ¡n desarrollando en el diseÃ±o de Sistemas de DetecciÃ³n y Contramedidas de IntrusiÃ³n y sistemas supervivientes contra esta nueva clase de gusanos?; y â¢ Â¿QuÃ© tÃ©cnicas, si las hay, se pueden desarrollar para crear defensas contra los gusanos de enjambre? 6.",
                "En la 10Âª Conferencia ACM sobre Seguridad InformÃ¡tica y de Comunicaciones, Washington, DC (octubre de 2003). [2] Liu, S. y Passino, K. Inteligencia de enjambre: Resumen de la literatura."
            ],
            "translated_text": "Un AnÃ¡lisis Inicial y PresentaciÃ³n de Malware que Exhibe Comportamiento Similar a un Enjambre por Fernando C. ColÃ³n Osorio Laboratorio de InvestigaciÃ³n en Seguridad de Sistemas InalÃ¡mbricos (W.S.S.R.L.) El Slammer, que actualmente es el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada, se observÃ³ infectando el 90 por ciento de todos los hosts vulnerables de Internet en 10 minutos. Aunque la acciÃ³n principal que realiza el gusano Slammer es una replicaciÃ³n relativamente poco sofisticada de sÃ­ mismo, se propaga tan rÃ¡pidamente que la respuesta humana fue ineficaz. La mayorÃ­a de las estrategias de contramedidas propuestas se basan principalmente en la detecciÃ³n de tasas y algoritmos de limitaciÃ³n. Sin embargo, se estÃ¡n diseÃ±ando y desarrollando estrategias para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En nuestro trabajo, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n radicalmente diferentes, y posiblemente dichas tÃ©cnicas resultarÃ¡n ineficaces. EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. La Inteligencia Emergente es el comportamiento de sistemas, muy similar a sistemas biolÃ³gicos como hormigas o abejas, donde las interacciones locales simples de miembros autÃ³nomos, con acciones primitivas simples, dan lugar a un comportamiento global complejo e inteligente. En este manuscrito introduciremos los principios bÃ¡sicos detrÃ¡s de la idea de los Gusanos en Enjambre, asÃ­ como la estructura bÃ¡sica requerida para ser considerado un gusano en enjambre. AdemÃ¡s, presentaremos resultados preliminares sobre las velocidades de propagaciÃ³n de un gusano de enjambre llamado gusano ZachiK. Demostraremos que ZachiK es capaz de propagarse a una velocidad 2 Ã³rdenes de magnitud mÃ¡s rÃ¡pida que gusanos similares sin capacidades de enjambre. CategorÃ­as y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: DetecciÃ³n de Intrusiones; D.4.6 [Seguridad y ProtecciÃ³n]: Software Invasivo TÃ©rminos Generales ExperimentaciÃ³n, Seguridad 1. INTRODUCCIÃN Y TRABAJO PREVIO En las primeras horas de la maÃ±ana (05:30 GMT) del 25 de enero de 2003, el gusano informÃ¡tico mÃ¡s rÃ¡pido en la historia registrada comenzÃ³ a propagarse por Internet. Dentro de los 10 minutos posteriores al primer huÃ©sped infectado (paciente cero), el 90 por ciento de todos los huÃ©spedes vulnerables habÃ­an sido comprometidos, creando una interrupciÃ³n significativa en la infraestructura de Internet a nivel global. Vern Paxson del Instituto Internacional de Ciencias de la ComputaciÃ³n y del Laboratorio Nacional Lawrence Berkeley comentÃ³ en su anÃ¡lisis de Slammer: El gusano Slammer se propagÃ³ tan rÃ¡pidamente que la respuesta humana fue ineficaz, ver [4]. La parte interesante, desde nuestro punto de vista, sobre la propagaciÃ³n de Slammer es que era un gusano relativamente poco sofisticado con un comportamiento benigno, es decir, la auto-reproducciÃ³n. Desde Slammer, los investigadores han explorado los comportamientos de los gusanos de propagaciÃ³n rÃ¡pida y han diseÃ±ado estrategias de contramedidas basadas principalmente en la detecciÃ³n de la velocidad y algoritmos de limitaciÃ³n. Por ejemplo, Zou, et al., [2], propusieron un esquema donde se utiliza un filtro de Kalman para detectar la propagaciÃ³n temprana de un gusano. Otros investigadores han propuesto el uso de detectores donde las tasas de mensajes de Destino Inalcanzable son monitoreadas por los firewalls, y un aumento significativo mÃ¡s allÃ¡ de lo normal alerta a la organizaciÃ³n sobre la posible presencia de un gusano. Sin embargo, tales estrategias sufren del sÃ­ndrome de luchar la Ãºltima guerra. Es decir, se estÃ¡n diseÃ±ando y desarrollando sistemas para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En el trabajo descrito aquÃ­, planteamos la hipÃ³tesis de que los gusanos de la prÃ³xima generaciÃ³n serÃ¡n diferentes, y por lo tanto, dichas tÃ©cnicas pueden tener algunas limitaciones significativas. EspecÃ­ficamente, proponemos estudiar una nueva generaciÃ³n de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. El concepto de inteligencia emergente fue estudiado por primera vez en asociaciÃ³n con sistemas biolÃ³gicos. En tales estudios, los primeros investigadores descubrieron una variedad de comportamientos interesantes de insectos o animales en la naturaleza. Una bandada de pÃ¡jaros cruza el cielo. Un grupo de hormigas busca comida. Una escuela de peces nada, gira, huye juntos lejos de un depredador, y asÃ­ sucesivamente. En general, este tipo de movimiento agregado se ha llamado comportamiento de enjambre. Los biÃ³logos y cientÃ­ficos de la computaciÃ³n en el campo de la inteligencia artificial han estudiado tales enjambres biolÃ³gicos y han intentado crear modelos que expliquen cÃ³mo interactÃºan los elementos de un enjambre, logran objetivos y evolucionan. AdemÃ¡s, en los Ãºltimos aÃ±os el estudio de la <br>inteligencia de enjambre</br> ha cobrado cada vez mÃ¡s importancia en los campos de la robÃ³tica, el diseÃ±o de Redes MÃ³viles Ad-hoc (MANETS), el diseÃ±o de Sistemas de DetecciÃ³n de Intrusiones, el estudio de patrones de trÃ¡fico en sistemas de transporte, en aplicaciones militares y otras Ã¡reas, ver [3]. Los conceptos bÃ¡sicos que se han desarrollado en la Ãºltima dÃ©cada para explicar los enjambres y su comportamiento incluyen cuatro componentes bÃ¡sicos. Estos son: 1. Sencillez de la lÃ³gica y acciones: Un enjambre estÃ¡ compuesto por N agentes cuya inteligencia es limitada. Los agentes en el enjambre utilizan reglas locales simples para gobernar sus acciones. Algunos modelos llaman a estas acciones o comportamientos primitivos; 2. Mecanismos de comunicaciÃ³n local: Los agentes interactÃºan con otros miembros en el enjambre a travÃ©s de simples mecanismos de comunicaciÃ³n local. Por ejemplo, un pÃ¡jaro en una bandada percibe la posiciÃ³n del pÃ¡jaro adyacente y aplica una regla simple de evitaciÃ³n y seguimiento. 3. Control distribuido: Los agentes autÃ³nomos interactÃºan con su entorno, que probablemente consiste en otros agentes, pero actÃºan relativamente de forma independiente de todos los demÃ¡s agentes. No hay un mando central o lÃ­der, y ciertamente no hay un plan global. Inteligencia emergente: El comportamiento agregado de agentes autÃ³nomos resulta en comportamientos inteligentes complejos, incluyendo la autoorganizaciÃ³n. Para comprender completamente el comportamiento de tales enjambres, es necesario construir un modelo que explique el comportamiento de lo que llamaremos gusanos genÃ©ricos. Este modelo, que amplÃ­a el trabajo de Weaver [5], se presenta aquÃ­ en la secciÃ³n 2. AdemÃ¡s, tenemos la intenciÃ³n de ampliar dicho modelo de tal manera que explique claramente los comportamientos de esta nueva clase de gusanos potencialmente peligrosos llamados Gusanos en Enjambre. Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biolÃ³gicos y muestran un alto grado de aprendizaje, comunicaciÃ³n e inteligencia distribuida. Tales gusanos en enjambre son potencialmente mÃ¡s daÃ±inos que sus contrapartes genÃ©ricas similares. EspecÃ­ficamente, la primera instancia, segÃºn nuestro conocimiento, de un gusano de aprendizaje de este tipo fue creado, llamado ZachiK. ZachiK es un gusano enjambre de descifrado de contraseÃ±as simple que incorpora diferentes estrategias de aprendizaje y comparticiÃ³n de informaciÃ³n. Un gusano de enjambre similar fue desplegado tanto en una red de Ã¡rea local de treinta (30) hosts, como simulado en una topologÃ­a de 10,000 nodos. Los resultados preliminares mostraron que dichos gusanos son capaces de comprometer a los anfitriones a velocidades hasta dos Ã³rdenes de magnitud mÃ¡s rÃ¡pidas que su contraparte genÃ©rica. El resto de este manuscrito estÃ¡ estructurado de la siguiente manera. En la secciÃ³n 2 se presenta un modelo abstracto tanto de gusanos genÃ©ricos como de gusanos en enjambre. Este modelo se utiliza en la secciÃ³n 2.6 para describir la primera instancia de un gusano enjambre, ZachiK. En la secciÃ³n 4, se presentan resultados preliminares a travÃ©s de mediciones empÃ­ricas y simulaciones. Finalmente, en la secciÃ³n 5 se presentan nuestras conclusiones y perspectivas sobre trabajos futuros. MODELADO DE GUSANOS Para estudiar el comportamiento de los gusanos en enjambre en general, es necesario crear un modelo que refleje de manera realista la estructura de los gusanos y que no estÃ© necesariamente ligado a una instancia especÃ­fica. En esta secciÃ³n, describimos un modelo en el que un gusano general se describe como teniendo cuatro (4) componentes bÃ¡sicos o subfunciones. Por definiciÃ³n, un gusano es un programa autocontenido y auto propagante. Por lo tanto, en tÃ©rminos simples, tiene dos funciones principales: la que se propaga y la que realiza otras tareas. Proponemos que hay una tercera amplia funcionalidad de un gusano, la de autoconservaciÃ³n. TambiÃ©n proponemos que la otra funcionalidad de un gusano podrÃ­a ser categorizada de manera mÃ¡s apropiada como Acciones Basadas en Objetivos (ABO), ya que cualquier funcionalidad incluida en un gusano dependerÃ¡ naturalmente de los objetivos (y subobjetivos) que tenga el autor. El trabajo presentado por Weaver et al. en [5] nos proporciona principalmente una taxonomÃ­a de gusanos informÃ¡ticos basada en acciones y tÃ©cnicas, la cual utilizamos y ampliamos aquÃ­. 2.1 PropagaciÃ³n La funciÃ³n de propagaciÃ³n en sÃ­ misma puede desglosarse en tres acciones: adquirir objetivo, enviar escaneo e infectar objetivo. Adquirir el objetivo simplemente significa elegir un anfitriÃ³n para atacar a continuaciÃ³n. Enviar un escaneo implica verificar si ese host estÃ¡ receptivo a un intento de infecciÃ³n, ya que el espacio de direcciones IP estÃ¡ escasamente poblado. Esto puede implicar un simple ping para verificar si el host estÃ¡ activo o una evaluaciÃ³n completa de vulnerabilidades. Infectar al objetivo es el mÃ©todo real utilizado para enviar el cÃ³digo del gusano al nuevo hospedador. En forma de algoritmo: propagar() { host := adquirir_objetivo() Ã©xito := enviar_escaneo(host) si( Ã©xito ) entonces infectar(host) fin si } En el caso de un gusano simple que no verifica primero si el host estÃ¡ disponible o susceptible (como Slammer), se elimina el mÃ©todo de escaneo: propagar() { host := adquirir_objetivo() infectar(host) } Cada una de estas acciones puede tener un costo asociado a su inclusiÃ³n y ejecuciÃ³n, como un aumento en el tamaÃ±o del gusano y la carga de CPU o red. Dependiendo de las necesidades o requisitos de los autores, estos se convierten en factores limitantes en lo que puede incluirse en las acciones de los gusanos. Esto se discute mÃ¡s a fondo despuÃ©s de expandir sobre estas acciones a continuaciÃ³n. 2.2 AdquisiciÃ³n de Objetivos: La fase de AdquisiciÃ³n de Objetivos de nuestro algoritmo de gusano se construye directamente a partir de la secciÃ³n de Descubrimiento de Objetivos en [5]. Weaver et al. clasifican esta tarea en 5 categorÃ­as separadas. AquÃ­, ampliamos aÃºn mÃ¡s su trabajo a travÃ©s de la parametrizaciÃ³n. Escaneo: El escaneo puede considerarse un mÃ©todo basado en ecuaciones para elegir un anfitriÃ³n. Cualquier tipo de ecuaciÃ³n puede ser utilizada para llegar a una direcciÃ³n IP, pero hasta ahora se han visto tres tipos principales: secuencial, aleatorio y preferencia local. El escaneo secuencial es exactamente como suena: comenzar en una direcciÃ³n IP e incrementar a travÃ©s de todo el espacio de direcciones IP. Esto podrÃ­a llevar consigo las opciones de quÃ© IP empezar (valor elegido por el usuario, aleatorio o basado en la IP del host infectado) y cuÃ¡ntas veces incrementar (continuo, valor elegido o basado en subred). El escaneo aleatorio es completamente al azar (dependiendo del mÃ©todo PRNG elegido y su valor de semilla). El escaneo de preferencia local es una variante de Secuencial o Aleatorio, en la que tiene una mayor probabilidad de elegir una direcciÃ³n IP local en lugar de una remota (por ejemplo, la divisiÃ³n tradicional de 80/20). Listas de objetivos pregeneradas: Las listas de objetivos pregeneradas, o tambiÃ©n llamadas listas de objetivos, podrÃ­an incluir opciones para el porcentaje de la poblaciÃ³n total y el porcentaje de errores, o simplemente el nÃºmero de direcciones IP a incluir. ImplÃ­cito en este tipo es el hecho de que la lista se divide entre un padre y sus hijos, evitando el problema de que cada instancia golpee exactamente las mismas mÃ¡quinas. Listas de objetivos generadas externamente: Las listas de objetivos generadas externamente dependen de una o mÃ¡s fuentes externas que pueden ser consultadas para obtener datos del host. Esto implicarÃ¡ servidores que normalmente estÃ¡n pÃºblicamente disponibles, como los meta-servidores de juegos, o aquellos configurados explÃ­citamente por el gusano o el autor del gusano. Los meta-servidores normalmente disponibles podrÃ­an tener parÃ¡metros para tasas de cambio, como muchos apareciendo por la noche o desapareciendo por la maÃ±ana. Cada servidor tambiÃ©n podrÃ­a tener un mÃ¡ximo de consultas por segundo que serÃ­a capaz de manejar. El gusano tambiÃ©n necesitarÃ­a una forma de encontrar estos servidores, ya sea codificada en duro o a travÃ©s de escaneo. Listas de Objetivos Internos: Las Listas de Objetivos Internos dependen en gran medida del host infectado. Este mÃ©todo podrÃ­a parametrizar la elecciÃ³n de cuÃ¡nta informaciÃ³n hay en el host, como todas las mÃ¡quinas en la subred, todas las computadoras con Windows en la subred, servidores especÃ­ficos, nÃºmero de internos/externos, o alguna combinaciÃ³n. Los mÃ©todos pasivos son determinados por las interacciones normales entre los anfitriones. Los parÃ¡metros pueden incluir una tasa de interacciÃ³n con mÃ¡quinas particulares, una tasa de interacciÃ³n interna/externa, o una tasa de interacciÃ³n basada en subredes. Cualquiera de estos mÃ©todos tambiÃ©n puede combinarse para producir diferentes tipos de estrategias de adquisiciÃ³n de objetivos. Por ejemplo, un gusano puede comenzar con una lista inicial de 100 hosts o subredes diferentes. Una vez que haya agotado su bÃºsqueda utilizando la lista de Ã©xitos, puede proceder a realizar un escaneo aleatorio con un sesgo local del 50%. Es importante tener en cuenta, sin embargo, que el consumo de recursos de cada mÃ©todo no es el mismo. Diferentes mÃ©todos pueden requerir que el gusano sea grande, como los bytes adicionales necesarios para una lista de objetivos, o que tome mÃ¡s tiempo de procesamiento, como al buscar direcciones de otros hosts vulnerables en el host. Se deben realizar investigaciones y anÃ¡lisis adicionales en esta Ã¡rea para determinar los costos asociados de utilizar cada mÃ©todo. Los costos podrÃ­an ser utilizados para determinar los compromisos de diseÃ±o en los que los autores de gusanos participan. Por ejemplo, las listas de objetivos proporcionan una alta tasa de infecciÃ³n, pero a un alto costo en el tamaÃ±o de la carga Ãºtil del gusano. 2.2.1 EnvÃ­o de un Escaneo La funciÃ³n de envÃ­o de escaneo prueba si el host estÃ¡ disponible para la infecciÃ³n. Esto puede ser tan simple como verificar si el host estÃ¡ activo en la red o tan complejo como verificar si el host es vulnerable al exploit que se utilizarÃ¡. El envÃ­o de un escaneo antes de intentar una infecciÃ³n puede aumentar la tasa de escaneo si el costo por fallar en una infecciÃ³n es mayor que el costo de fallar en un escaneo o de enviar un escaneo mÃ¡s una infecciÃ³n; y las fallas son mÃ¡s frecuentes que los Ã©xitos. Un parÃ¡metro importante para esto serÃ­a la elecciÃ³n del protocolo de transporte (TCP/UDP) o simplemente el tiempo para un escaneo exitoso y el tiempo para un escaneo fallido. AdemÃ¡s, ya sea que se pruebe si el host estÃ¡ activo o si es una prueba completa de la vulnerabilidad (o de mÃºltiples vulnerabilidades). 2.2.2 Vector de InfecciÃ³n (VI) El vector de infecciÃ³n particular utilizado para acceder al host remoto depende principalmente de la vulnerabilidad especÃ­fica elegida para explotar. En un sentido no especÃ­fico, depende del protocolo de transporte elegido para usar y del tamaÃ±o del mensaje que se va a enviar. La SecciÃ³n 3 de [5] tambiÃ©n propone tres clases particulares de IV: Autotransportado, segundo canal e incrustado. 2.3 AutopreservaciÃ³n Las acciones de autopreservaciÃ³n de un gusano pueden tomar muchas formas. En la naturaleza, se ha observado que los gusanos desactivan el software antivirus o evitan enviarse a ciertas direcciones conocidas por los antivirus. TambiÃ©n se ha observado que intentan deshabilitar otros gusanos que podrÃ­an estar compitiendo por el mismo sistema. TambiÃ©n creemos que un escaneo con limitaciÃ³n de tiempo podrÃ­a ayudar al gusano a pasar desapercibido. TambiÃ©n proponemos un mÃ©todo de seÃ±uelo, mediante el cual un gusano liberarÃ¡ a unos pocos hijos que causen mucho ruido para que el progenitor no sea notado. TambiÃ©n se ha propuesto [5] que un gusano cause daÃ±o a su huÃ©sped si, y solo si, se ve perturbado de alguna manera. Este mÃ³dulo podrÃ­a contener parÃ¡metros para: probabilidad de Ã©xito en deshabilitar actualizaciones de antivirus u otro software, probabilidad de ser detectado y por ende eliminado, o fortalecimiento del anfitriÃ³n contra otros gusanos. 2.4 Acciones Basadas en Objetivos La funcionalidad de GBA de un gusano depende de la lista de objetivos del autor. La secciÃ³n de Cargas Ãºtiles de [5] proporciona algunas sugerencias Ãºtiles para dicho mÃ³dulo. La apertura de una puerta trasera puede hacer que el anfitriÃ³n sea susceptible a mÃ¡s ataques. Esto implicarÃ­a una probabilidad de que se utilice la puerta trasera y cualquier utilizaciÃ³n de trÃ¡fico asociada. TambiÃ©n podrÃ­a proporcionar una lista de otros gusanos a los que este hospedador es ahora susceptible o una lista de vulnerabilidades que este hospedador tiene ahora. Los retransmisores de spam y los servidores proxy HTTP, por supuesto, tienen un consumo de ancho de banda o un patrÃ³n de trÃ¡fico asociado. Los ataques de denegaciÃ³n de servicio en Internet tendrÃ­an un tiempo de activaciÃ³n establecido, un objetivo y un patrÃ³n de trÃ¡fico. El daÃ±o de los datos tendrÃ­a una probabilidad asociada de que el anfitriÃ³n muera debido al daÃ±o. En la Figura 1, se resume este modelo general de un gusano. Por favor, tenga en cuenta que en este modelo no hay aprendizaje, o muy poco, intercambio de informaciÃ³n entre las instancias de gusano, y ciertamente no hay coordinaciÃ³n de acciones. En la siguiente secciÃ³n ampliamos el modelo para incluir dichos mecanismos, y por lo tanto, llegamos al modelo general de un gusano en enjambre. 2.5 Enjambres - Modelo General Como se describe en la secciÃ³n 1, las caracterÃ­sticas bÃ¡sicas que distinguen el comportamiento en enjambre de lo que simplemente parece ser comportamientos colectivos coordinados son cuatro atributos bÃ¡sicos. Estos son: 1. Sencillez de lÃ³gica y acciones; 2. Mecanismos de ComunicaciÃ³n Local; 3. Control distribuido; y 4. Inteligencia emergente, incluyendo autoorganizaciÃ³n. 325 Estructura FunciÃ³n/Ejemplo InfecciÃ³n, Vector de InfecciÃ³n El ejecutable se ejecuta ProtecciÃ³n y sigilo Deshabilitar McAfee (Mantenerse vivo) PropagaciÃ³n Enviar correo electrÃ³nico a todos en la libreta de direcciones AcciÃ³n basada en objetivos (ABO) DDoS www.sco.com Todo lo demÃ¡s, a menudo llamado carga Ãºtil Figura 1: Modelo general de gusano En este trabajo agregamos todos estos atributos bajo el tÃ­tulo general de Aprendizaje, ComunicaciÃ³n y Control Distribuido. La presencia de estos atributos distingue a los gusanos de enjambre de los gusanos regulares, u otros tipos de malware como los Zombies. En la figura ? ?, el modelo genÃ©rico de un gusano se amplÃ­a para incluir este conjunto de acciones. Dentro de este contexto, un gusano como Slammer no puede ser categorizado como un gusano en enjambre debido a que las nuevas instancias del gusano no coordinan sus acciones ni comparten informaciÃ³n. Por otro lado, los zombies y muchas otras formas de DDoS, que a primera vista pueden considerarse gusanos enjambre, no lo son. Esto se debe simplemente al hecho de que en el caso de los zombies, el control no estÃ¡ distribuido sino centralizado, y no surgen comportamientos emergentes. Lo Ãºltimo, la posible apariciÃ³n de inteligencia o nuevos comportamientos es lo que hace que los gusanos en enjambre sean potencialmente peligrosos. Finalmente, cuando se considera la mayorÃ­a de las interrupciones recientes en la Infraestructura de Internet, y a la luz de nuestra descripciÃ³n de los ataques en enjambre, entonces dichas interrupciones pueden ser fÃ¡cilmente categorizadas como precursores de un comportamiento verdaderamente en enjambre. EspecÃ­ficamente, â¢ DDOS: Un gran nÃºmero de hosts comprometidos envÃ­an paquetes inÃºtiles que requieren procesamiento (Stacheldraht, http://www.cert.org/incidentnotes/IN-99-04.html). Los ataques DDoS son los precursores tempranos de los Ataques en Enjambre debido al gran nÃºmero de agentes involucrados. â¢ Code Red CrV1, Code Red II, Nimbda - Exhiben nociones tempranas de ataques en enjambre, incluyendo un canal de comunicaciÃ³n oculto. â¢ Staniford & Paxson en Â¿CÃ³mo Dominar Internet en Tu Tiempo Libre? exploran modificaciones a CrV1, Code Red I, II con un tipo de comportamiento similar a un enjambre. Por ejemplo, especulan sobre nuevos gusanos que emplean comunicaciÃ³n directa de gusano a gusano y utilizan actualizaciones programables. Por ejemplo, el gusano Warhol y los gusanos de Permutation-Scanning (autocoordinados). 2.6 Gusano Swarm: los detalles Al considerar la creaciÃ³n de lo que creÃ­amos que era el primer Gusano Swarm en existencia, querÃ­amos adherirnos lo mÃ¡s cercanamente posible al modelo general presentado en la secciÃ³n ? ? mientras facilitÃ¡bamos al mismo tiempo un anÃ¡lisis a gran escala, tanto empÃ­rico como a travÃ©s de simulaciones, del comportamiento del enjambre. Por esta razÃ³n, seleccionamos como primera instancia Estructura FunciÃ³n/Ejemplo InfecciÃ³n, InfecciÃ³n Vector Ejecutable se ejecuta ProtecciÃ³n y Sigilo Deshabilitar McAfee (ManteniÃ©ndose Vivo) PropagaciÃ³n Enviar correo electrÃ³nico a todos en la libreta de direcciones Aprendizaje, ComunicaciÃ³n, Feromonas/Banderas (Prueba y Control Distribuido si el Gusano ya estÃ¡ presente) Bombas de tiempo, Algoritmos de Aprendizaje, Canal IRC AcciÃ³n Basada en Objetivos (ABO) DDoS www.sco.com Todo lo demÃ¡s, a menudo llamado carga Ãºtil Figura 2: Modelo General de un Gusano de Enjambre del enjambre un gusano simple de craqueo de contraseÃ±as. El objetivo de este gusano simplemente es infectar a un anfitriÃ³n intentando secuencialmente iniciar sesiÃ³n en el anfitriÃ³n utilizando contraseÃ±as conocidas (ataque de diccionario), contraseÃ±as que han sido descubiertas previamente por cualquier miembro del enjambre, y contraseÃ±as aleatorias. Una vez que un huÃ©sped estÃ¡ infectado, el gusano crearÃ¡ canales de comunicaciÃ³n tanto con sus vecinos conocidos en ese momento, como con cualquier descendencia que genere con Ã©xito. En este contexto, una generaciÃ³n exitosa de una descendencia significa simplemente infectar a un nuevo huÃ©sped y replicar una copia exacta de sÃ­ misma en dicho huÃ©sped. Llamamos a este gusano enjambre el gusano ZachiK en honor a uno de sus creadores. Como se puede ver en esta descripciÃ³n, el gusano ZachiK exhibe todos los elementos descritos anteriormente. En las siguientes secciones, describimos detalladamente cada uno de los elementos del gusano ZachiK. 2.7 Vector de InfecciÃ³n El vector de infecciÃ³n utilizado por el gusano ZachiK es el protocolo de shell seguro SSH. Se escribiÃ³ un cliente modificado que es capaz de recibir contraseÃ±as desde la lÃ­nea de comandos, e integrado con un script que le suministra diversas contraseÃ±as: conocidas y aleatorias. Cuando se encuentra una contraseÃ±a para un objetivo adecuado, comienza el proceso de infecciÃ³n. DespuÃ©s de descubrir la contraseÃ±a de root de un host, el gusano infecta el host objetivo y se replica a sÃ­ mismo. El gusano crea un nuevo directorio en el host objetivo, copia el cliente ssh modificado, el script, los servidores de comunicaciones y las versiones actualizadas de los archivos de datos (lista de contraseÃ±as conocidas y una lista de vecinos actuales). Luego ejecuta el script modificado en los hosts reciÃ©n infectados, lo que genera el servidor de comunicaciones, notifica a los vecinos y comienza a buscar nuevos objetivos. Se podrÃ­a argumentar, de manera correcta, que el gusano ZachiK puede ser fÃ¡cilmente derrotado por las tÃ©cnicas de contramedidas actuales presentes en la mayorÃ­a de los sistemas hoy en dÃ­a, como la prohibiciÃ³n de accesos directos de root desde la red. Dentro de este contexto, ZachiK puede ser rÃ¡pidamente descartado como un gusano muy simple e inofensivo que no requiere un estudio adicional. Sin embargo, el lector deberÃ­a considerar lo siguiente: 1. ZachiK se puede modificar fÃ¡cilmente para incluir una variedad de vectores de infecciÃ³n. Por ejemplo, podrÃ­a programarse para adivinar nombres de usuario comunes y sus contraseÃ±as; obtener acceso al sistema, luego adivinar la contraseÃ±a de root o utilizar otras vulnerabilidades conocidas para obtener privilegios de root. ZachiK es un gusano de prueba de concepto. La importancia de ZachiK radica en que incorpora todos los comportamientos de un gusano en enjambre, incluyendo, pero no limitÃ¡ndose a, el control distribuido, la comunicaciÃ³n entre agentes y el aprendizaje; 3. ZachiK estÃ¡ compuesto por una gran colecciÃ³n de agentes que operan de forma independiente, lo que se presta naturalmente a algoritmos paralelos como la bÃºsqueda paralela del espacio de direcciones IPV4. Dentro de este contexto, SLAMMER incorpora una capacidad de bÃºsqueda paralela de direcciones potencialmente susceptibles. Sin embargo, a diferencia de ZachiK, el conocimiento descubierto por la bÃºsqueda nunca se comparte entre los agentes. Por estas razones, y muchas otras, no se debe descartar el potencial de esta nueva clase de gusanos, sino mÃ¡s bien abrazar su estudio. 2.8 AutopreservaciÃ³n En el caso del gusano ZachiK, las principales tÃ©cnicas de autopreservaciÃ³n utilizadas son simplemente mantener el tamaÃ±o de la carga Ãºtil pequeÃ±o. En este contexto, esto simplemente significa restringir la cantidad de contraseÃ±as que una descendencia hereda, enmascarar mensajes de gusano como solicitudes http comunes y limitar el nÃºmero de vecinos a un mÃ¡ximo de cinco-(5). 2.9 PropagaciÃ³n Elegir el(los) prÃ³ximo(s) objetivo(s) de manera eficiente requiere reflexiÃ³n. En el pasado, los gusanos conocidos y propuestos, ver [5], han aplicado tÃ©cnicas de propagaciÃ³n que variaban. Estos incluyen: selecciÃ³n estrictamente aleatoria de un posible anfitriÃ³n vulnerable; listas de objetivos de anfitriones vulnerables; selecciÃ³n aleatoria localmente sesgada (seleccionar un objetivo de anfitriÃ³n al azar de una subred local); y una combinaciÃ³n de algunas o todas las anteriores. En nuestros entornos de prueba y simulaciÃ³n, aplicaremos una combinaciÃ³n de selecciÃ³n localmente sesgada y totalmente aleatoria de posibles hosts vulnerables. Sin embargo, debido a que el gusano ZachiK es un gusano enjambre, la informaciÃ³n de descubrimiento de direcciones (es decir, cuando se descubren direcciones inexistentes) se compartirÃ¡ entre los miembros del enjambre. Los hilos de infecciÃ³n y propagaciÃ³n realizan el siguiente conjunto de actividades repetidamente: â¢ Elegir una direcciÃ³n â¢ Verificar la validez de la direcciÃ³n â¢ Elegir un conjunto de contraseÃ±as â¢ Intentar infectar al host seleccionado con este conjunto de contraseÃ±as. Como se describiÃ³ anteriormente, la elecciÃ³n de una direcciÃ³n hace uso de una combinaciÃ³n de selecciÃ³n aleatoria, sesgo local y listas de objetivos. EspecÃ­ficamente, para elegir una direcciÃ³n, la instancia puede: â¢ Generar una nueva direcciÃ³n aleatoria â¢ Generar una direcciÃ³n en la red local â¢ Elegir una direcciÃ³n de una lista de transferencia La elecciÃ³n se realiza de forma aleatoria entre estas opciones, y puede variarse para probar la dependencia de la propagaciÃ³n en elecciones particulares. Las contraseÃ±as son elegidas de una lista de contraseÃ±as conocidas o generadas recientemente. Cuando una infecciÃ³n de una direcciÃ³n vÃ¡lida falla, se agrega a una lista de entregas, que se envÃ­a a los vecinos para intentar solucionar el problema. 2.10 Aprendizaje, ComunicaciÃ³n y Control Distribuido 2.10.1 ComunicaciÃ³n El concepto de un enjambre se basa en la transferencia de informaciÃ³n entre vecinos, quienes retransmiten sus nuevos mensajes entrantes a sus vecinos, y asÃ­ sucesivamente hasta que cada instancia del gusano en el enjambre estÃ© al tanto de estos mensajes. Hay dos clases de mensajes: mensajes de datos o informaciÃ³n y comandos. Los mensajes de comando estÃ¡n destinados a un usuario externo (tambiÃ©n conocidos como hackers y/o crackers) para controlar las acciones de las instancias, y actualmente no estÃ¡n implementados. Los mensajes de informaciÃ³n actualmente son de tres tipos: nuevo miembro, contraseÃ±as y direcciones explotables (transferencias). Los mensajes de nuevo miembro son mensajes que una nueva instancia envÃ­a a los vecinos en su lista (corta) de vecinos iniciales. Los vecinos luego registran estas instancias en su lista de vecinos. Estos son mensajes que forman la multi-conectividad del enjambre, y sin ellos, la topologÃ­a serÃ­a una estructura en forma de Ã¡rbol, donde la eliminaciÃ³n de un solo nodo harÃ­a que las instancias debajo de Ã©l fueran inaccesibles. Los mensajes de contraseÃ±as informan instancias de contraseÃ±as reciÃ©n descubiertas, y al informar a todas las instancias, el enjambre en su totalidad recopila esta informaciÃ³n, lo que le permite infectar nuevas instancias de manera mÃ¡s efectiva. Los mensajes de entrega informan instancias de direcciones vÃ¡lidas que no pudieron ser comprometidas (fallaron al romper la contraseÃ±a de la cuenta root). Dado que el espacio de direcciones es bastante disperso, lleva un tiempo relativamente largo (es decir, muchos intentos) descubrir una direcciÃ³n vÃ¡lida. Por lo tanto, al entregar las direcciones vÃ¡lidas descubiertas, el enjambre estÃ¡ (a) conservando energÃ­a al no redescubrir las mismas direcciones (b) atacando de manera mÃ¡s efectiva. De cierta manera, esto es una simple instancia de actividad coordinada de un enjambre. 2.10.2 CoordinaciÃ³n Cuando nace una instancia de gusano, transmite su existencia a todos los vecinos en su lista. El hilo principal luego genera algunas hebras de infecciÃ³n y continÃºa manejando mensajes entrantes (registrando vecinos, agregando nuevas contraseÃ±as, recibiendo direcciones y transmitiendo estos mensajes). 2.10.3 Control Distribuido El control en el gusano ZachiK es distribuido en el sentido de que cada instancia del gusano realiza un conjunto de acciones de forma independiente de cada otra instancia, al mismo tiempo que se beneficia del aprendizaje logrado por sus vecinos inmediatos. 2.11 Acciones Basadas en Objetivos La primera instancia del gusano ZachiK tiene dos objetivos bÃ¡sicos. Estos son: (1) propagar, y (2) descubrir y compartir con los miembros de la colonia nuevas contraseÃ±as de root. 3. DISEÃO EXPERIMENTAL Para verificar nuestra hipÃ³tesis de que los Gusanos de Enjambre son mÃ¡s capaces y, por lo tanto, mÃ¡s peligrosos que otros 327 gusanos conocidos, se creÃ³ un banco de pruebas de red y se desarrollÃ³ un simulador capaz de simular topologÃ­as a gran escala similares a Internet (espacio IPV4). El banco de pruebas de red consistÃ­a en una red de Ã¡rea local de 30 computadoras basadas en Linux. El simulador fue escrito en C++. El gusano de enjambre simple descrito en la secciÃ³n 2.6 se utilizÃ³ para infectar al paciente cero, y luego se permitiÃ³ que el gusano de enjambre se propagara a travÃ©s de sus propios mecanismos de propagaciÃ³n, control distribuido y comportamientos de enjambre. En el caso de una red de Ã¡rea local simple de 30 computadoras, se seleccionaron seis (6) contraseÃ±as raÃ­z diferentes de un espacio de contraseÃ±as de 4 dÃ­gitos (10000 opciones). Al comienzo del experimento se conoce una Ãºnica contraseÃ±a, la del paciente cero. Todas las contraseÃ±as compartidas se distribuyen aleatoriamente en todos los nodos. De manera similar, en el caso de la simulaciÃ³n, se construyÃ³ una topologÃ­a de red de 10,000 hosts cuyas direcciones fueron seleccionadas al azar en el espacio IPV4. Dentro de ese espacio, se seleccionaron y distribuyeron un total de 200 contraseÃ±as compartidas ya sea de forma aleatoria y/o dirigida a subredes especÃ­ficas de topologÃ­as de red. Por ejemplo, en una de nuestras ejecuciones de simulaciÃ³n, la topologÃ­a de red consistÃ­a en 200 subredes, cada una conteniendo 50 hosts. En dicha topologÃ­a, las contraseÃ±as compartidas se distribuÃ­an en subredes donde un porcentaje variable de contraseÃ±as se compartÃ­an entre subredes. Los porcentajes de contraseÃ±as compartidas utilizadas reflejaban los primeros estudios empÃ­ricos, donde se descubriÃ³ que hasta el 39.7% de las contraseÃ±as comunes eran compartidas. RESULTADOS En la Figura 3 se presentan los resultados comparando el comportamiento del Ataque de Enjambre versus el de un Gusano Malformado tÃ­pico para una LAN de 30 nodos. En este conjunto de ejecuciones empÃ­ricas, seis (6) contraseÃ±as compartidas fueron distribuidas al azar en todos los nodos de un total de 10,000 contraseÃ±as desconocidas posibles. Los datos presentados reflejan los comportamientos de un total de tres (3) clases distintas de gusanos o enjambres de gusanos. La clase de gusanos presentada es la siguiente: â¢ I-NS-NL:= Gusano genÃ©rico, independiente (I), sin aprendizaje/sin memoria (NL), y sin compartir informaciÃ³n con vecinos o descendientes (NS); â¢ S-L-SP:= Gusano en enjambre (S), aprendizaje (L), mantiene una lista de contraseÃ±as aprendidas, y comparte contraseÃ±as (SP) con vecinos mÃ¡s cercanos y descendientes; y â¢ S-L-SP&A:= Gusano en enjambre (S), aprendizaje (L), mantiene una lista de contraseÃ±as aprendidas, y comparte contraseÃ±as y direcciones existentes (SP&A) con vecinos mÃ¡s cercanos y descendientes. Como se muestra en la Figura 3, los resultados validan nuestra hipÃ³tesis original de que los gusanos en enjambre son significativamente mÃ¡s eficientes y peligrosos que los gusanos genÃ©ricos. En este conjunto de experimentos, el compartir contraseÃ±as proporciona una mejora de un orden de magnitud sobre un gusano aleatorio sin memoria. De manera similar, un gusano en enjambre que comparte contraseÃ±as y direcciones es aproximadamente dos Ã³rdenes de magnitud mÃ¡s eficiente que su contraparte genÃ©rica. En la Figura 3, se pueden observar una serie de discontinuidades. Estas discontinuidades son un artefacto del pequeÃ±o espacio muestral utilizado para este experimento. BÃ¡sicamente, tan pronto como se rompe una contraseÃ±a, todos los nodos que comparten esa contraseÃ±a especÃ­fica se infectan en cuestiÃ³n de segundos. Ten en cuenta que es trivial para un gusano en enjambre escanear y descubrir un pequeÃ±o espacio de contraseÃ±as compartidas. En la Figura 4, se presentan los resultados de la simulaciÃ³n comparando el Comportamiento de Ataque de Enjambre con el de un Gusano Malformado GenÃ©rico. En este conjunto de ejecuciones de simulaciÃ³n, se construyÃ³ una topologÃ­a de red de 10,000 hosts, cuyas direcciones fueron seleccionadas aleatoriamente en el espacio IPV4. Dentro de ese espacio, se seleccionaron y distribuyeron un total de 200 contraseÃ±as compartidas ya sea de forma aleatoria y/o dirigida a subredes especÃ­ficas de topologÃ­as de red. Los datos presentados reflejan los comportamientos de tres (3) clases distintas de gusanos o gusanos en enjambre y dos (2) estrategias de exploraciÃ³n de selecciÃ³n de objetivo de host diferentes (exploraciÃ³n aleatoria y sesgo local). La cantidad de sesgo local variÃ³ en mÃºltiples ejecuciones de simulaciÃ³n. Los resultados presentados son comportamientos agregados. En general, se simularon las siguientes clases de Gusanos GenÃ©ricos y Gusanos en Enjambre. ExploraciÃ³n de direcciones: â¢ Aleatoria:= las direcciones se seleccionan al azar de un subconjunto del espacio IPV4, es decir, un espacio de 224 direcciones; y â¢ Sesgo local:= las direcciones se seleccionan al azar de una subred local (256 direcciones) o de un subconjunto del espacio IPV4, es decir, un espacio de 224 direcciones. El porcentaje de sesgo local varÃ­a en mÃºltiples ejecuciones. Aprendizaje, ComunicaciÃ³n y Control Distribuido â¢ I-NL-NS: Gusano genÃ©rico, independiente (I), sin aprendizaje/sin memoria (NL), y sin compartir informaciÃ³n con vecinos o descendientes (NS); â¢ I-L-OOS: Gusano genÃ©rico, independiente (I), con aprendizaje/sin memoria (L), y compartiendo informaciÃ³n una sola vez con descendientes solamente (OOS); â¢ S-L-SP:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte contraseÃ±as (SP) con vecinos mÃ¡s cercanos y descendientes; â¢ S-L-S&AOP:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte direcciones con vecinos y descendientes, comparte contraseÃ±as solo una vez (al crearse) con descendientes (SA&OP); â¢ S-L-SP&A:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseÃ±as aprendidas, y comparte contraseÃ±as y direcciones existentes (SP&A) con vecinos mÃ¡s cercanos y descendientes. Como se muestra en la Figura 4, los resultados son consistentes con nuestro conjunto de resultados empÃ­ricos. AdemÃ¡s, se pueden hacer las siguientes observaciones. 1. La preferencia local es increÃ­blemente efectiva. Las transferencias cortas de direcciÃ³n son mÃ¡s efectivas que las largas. Variamos el tamaÃ±o de la lista permitida en el intercambio de direcciones; el sobrecosto asociado con una lista de direcciones larga es perjudicial para el rendimiento del gusano en enjambre, asÃ­ como para su sigilo; 3. Para el caso de sesgo local, compartir direcciones vÃ¡lidas de host susceptibles, el gusano S-L-S&AOP (recuerde, el enjambre S-L-S&AOP comparte contraseÃ±as, solo una vez, con descendientes 328 en el momento de la creaciÃ³n) es mÃ¡s efectivo que compartir contraseÃ±as en el caso del enjambre S-L-SP. En este caso, podemos pensar en el enjambre como lanzando un ataque de diccionario distribuido: diferentes segmentos del enjambre utilizan diferentes contraseÃ±as para intentar ingresar a hosts no infectados susceptibles. En el modo de sesgo local, al principio de la vida del enjambre, compartir direcciones es mÃ¡s efectivo que compartir contraseÃ±as, hasta que se descubran la mayorÃ­a de las subredes. Entonces, el apuntar a direcciones locales ayuda a descubrir los hosts susceptibles, mientras que los miembros del enjambre necesitan perder tiempo redescubriendo contraseÃ±as; y 4. Infectar el Ãºltimo 0.5% de los nodos lleva mucho tiempo en modo de sesgo no local. BÃ¡sicamente, la lista de contraseÃ±as compartidas entre subredes se ha agotado, y el enjambre vuelve a simplemente descubrir una contraseÃ±a al azar. Figura 3: Comportamiento del Ataque de Enjambre vs Gusano Malformado: Resultados EmpÃ­ricos, LAN de 30 nodos Figura 4: Comportamiento del Ataque de Enjambre vs Gusano Malformado: Resultados de SimulaciÃ³n 5. RESUMEN Y TRABAJO FUTURO En este manuscrito, hemos presentado un modelo abstracto, similar en algunos aspectos al de Weaver [5], que ayuda a explicar la naturaleza genÃ©rica de los gusanos. El modelo presentado en la secciÃ³n 2 se extendiÃ³ para incorporar una nueva clase de gusanos potencialmente peligrosos llamados Gusanos en Enjambre. Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biolÃ³gicos y muestran un alto grado de aprendizaje, comunicaciÃ³n e inteligencia distribuida. Tales gusanos en enjambre son potencialmente mÃ¡s daÃ±inos que sus contrapartes genÃ©ricas. AdemÃ¡s, se creÃ³ la primera instancia, que sepamos, de un gusano de aprendizaje, llamado ZachiK. ZachiK es un gusano enjambre de descifrado de contraseÃ±as simple que incorpora diferentes estrategias de aprendizaje y comparticiÃ³n de informaciÃ³n. Un gusano de enjambre similar fue desplegado tanto en una red de Ã¡rea local de treinta (30) hosts, como simulado en una topologÃ­a de 10,000 nodos. Los resultados preliminares mostraron que tales gusanos son capaces de comprometer a los anfitriones a tasas hasta 2 Ã³rdenes de magnitud mÃ¡s rÃ¡pido que su contraparte genÃ©rica, manteniendo al mismo tiempo sus capacidades de sigilo. Este trabajo abre una nueva Ã¡rea de problemas interesantes. Algunos de los problemas mÃ¡s interesantes y urgentes a considerar son los siguientes: â¢ Â¿Es posible aplicar algunos de los conceptos de aprendizaje desarrollados en los Ãºltimos diez aÃ±os en las Ã¡reas de <br>inteligencia de enjambre</br>, sistemas de agentes y control distribuido al diseÃ±o de gusanos de enjambre sofisticados de tal manera que se produzca un verdadero comportamiento emergente? â¢ Â¿Son efectivas las tÃ©cnicas actuales que se estÃ¡n desarrollando en el diseÃ±o de Sistemas de DetecciÃ³n y Contramedidas de IntrusiÃ³n y sistemas supervivientes contra esta nueva clase de gusanos?; y â¢ Â¿QuÃ© tÃ©cnicas, si las hay, se pueden desarrollar para crear defensas contra los gusanos de enjambre? 6. AGRADECIMIENTOS Este trabajo se realizÃ³ como parte de un esfuerzo mÃ¡s amplio en el desarrollo de sistemas de DetecciÃ³n de Intrusiones y Contramedidas de prÃ³xima generaciÃ³n en WSSRL. El trabajo se lleva a cabo bajo los auspicios de la subvenciÃ³n ACG-2004-06 otorgada por Acumen Consulting Group, Inc., Marlboro, Massachusetts. REFERENCIAS [1] C.C. Zou, L. Gao, W. G., y Towsley, D. Monitoreo y alerta temprana para gusanos de internet. En la 10Âª Conferencia ACM sobre Seguridad InformÃ¡tica y de Comunicaciones, Washington, DC (octubre de 2003). [2] Liu, S. y Passino, K. Inteligencia de enjambre: Resumen de la literatura. En el Departamento de IngenierÃ­a ElÃ©ctrica, Universidad Estatal de Ohio, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., y Weaver, N. La propagaciÃ³n del gusano saphire/slammer. Inf. tÃ©cnico, Un esfuerzo conjunto de CAIDA, ICSI, Silicon Defense, UC Berkeley EECS y UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S. y Cunningham, R. Una taxonomÃ­a de gusanos informÃ¡ticos. En Actas del Taller de ACM sobre Malware RÃ¡pido (WORM) (2003). 329 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        }
    }
}