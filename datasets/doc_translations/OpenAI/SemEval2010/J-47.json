{
    "id": "J-47",
    "original_text": "On the Computational Power of Iterative Auctions∗ [Extended Abstract] Liad Blumrosen School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel liad@cs.huji.ac.il Noam Nisan School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel noam@cs.huji.ac.il ABSTRACT We embark on a systematic analysis of the power and limitations of iterative combinatorial auctions. Most existing iterative combinatorial auctions are based on repeatedly suggesting prices for bundles of items, and querying the bidders for their demand under these prices. We prove a large number of results showing the boundaries of what can be achieved by auctions of this kind. We first focus on auctions that use a polynomial number of demand queries, and then we analyze the power of different kinds of ascending-price auctions. Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1. INTRODUCTION Combinatorial auctions have recently received a lot of attention. In a combinatorial auction, a set M of m nonidentical items are sold in a single auction to n competing bidders. The bidders have preferences regarding the bundles of items that they may receive. The preferences of bidder i are specified by a valuation function vi : 2M → R+ , where vi(S) denotes the value that bidder i attaches to winning the bundle of items S. We assume free disposal, i.e., that the vis are monotone non-decreasing. The usual goal of the auctioneer is to optimize the social welfare P i vi(Si), where the allocation S1...Sn must be a partition of the items. Applications include many complex resource allocation problems and, in fact, combinatorial auctions may be viewed as the common abstraction of many complex resource allocation problems. Combinatorial auctions face both economic and computational difficulties and are a central problem in the recently active border of economic theory and computer science. A forthcoming book [11] addresses many of the issues involved in the design and implementation of combinatorial auctions. The design of a combinatorial auction involves many considerations. In this paper we focus on just one central issue: the communication between bidders and the allocation mechanism - preference elicitation. Transferring all information about bidders preferences requires an infeasible (exponential in m) amount of communication. Thus, direct revelation auctions in which bidders simply declare their preferences to the mechanism are only practical for very small auction sizes or for very limited families of bidder preferences. We have therefore seen a multitude of suggested iterative auctions in which the auction protocol repeatedly interacts with the different bidders, aiming to adaptively elicit enough information about the bidders preferences as to be able to find a good (optimal or close to optimal) allocation. Most of the suggested iterative auctions proceed by maintaining temporary prices for the bundles of items and repeatedly querying the bidders as to their preferences between the bundles under the current set of prices, and then updating the set of bundle prices according to the replies received (e.g., [22, 12, 17, 37, 3]). Effectively, such an iterative auction accesses the bidders preferences by repeatedly making the following type of demand query to bidders: Query to bidder i: a vector of bundle prices p = {p(S)}S⊆M ; Answer: a bundle of items S ⊆ M that maximizes vi(S) − p(S).. These types of queries are very natural in an economic setting as they capture the revealed preferences of the bidders. Some auctions, called item-price or linear-price auctions, specify a price pi for each item, and the price of any given bundle S is always linear, p(S) = P i∈S pi. Other auctions, called bundle-price auctions, allow specifying arbitrary (non-linear) prices p(S) for bundles. Another important differentiation between models of iterative auctions is 29 based on whether they use anonymous or non-anonymous prices: In some auctions the prices that are presented to the bidders are always the same (anonymous prices). In other auctions (non-anonymous), different bidders may face different (discriminatory) vectors of prices. In ascending-price auctions, forcing prices to be anonymous may be a significant restriction. In this paper, we embark on a systematic analysis of the computational power of iterative auctions that are based on demand queries. We do not aim to present auctions for practical use but rather to understand the limitations and possibilities of these kinds of auctions. In the first part of this paper, our main question is what can be done using a polynomial number of these types of queries? That is, polynomial in the main parameters of the problem: n, m and the number of bits t needed for representing a single value vi(S). Note that from an algorithmic point of view we are talking about sub-linear time algorithms: the input size here is really n(2m − 1) numbers - the descriptions of the valuation functions of all bidders. There are two aspects to computational efficiency in these settings: the first is the communication with the bidders, i.e., the number of queries made, and the second is the usual computational tractability. Our lower bounds will depend only on the number of queriesand hold independently of any computational assumptions like P = NP. Our upper bounds will always be computationally efficient both in terms of the number of queries and in terms of regular computation. As mentioned, this paper concentrates on the single aspect of preference elicitation and on its computational consequences and does not address issues of incentives. This strengthens our lower bounds, but means that the upper bounds require evaluation from this perspective also before being used in any real combinatorial auction.1 The second part of this paper studies the power of ascending -price auctions. Ascending auctions are iterative auctions where the published prices cannot decrease in time. In this work, we try to systematically analyze what do the differences between various models of ascending auctions mean. We try to answer the following questions: (i) Which models of ascending auctions can find the optimal allocation, and for which classes of valuations? (ii) In cases where the optimal allocation cannot be determined by ascending auctions, how well can such auctions approximate the social welfare? (iii) How do the different models for ascending auctions compare? Are some models computationally stronger than others? Ascending auctions have been extensively studied in the literature (see the recent survey by Parkes [35]). Most of this work presented upper bounds, i.e., proposed mechanisms with ascending prices and analyzed their properties. A result which is closer in spirit to ours, is by Gul and Stacchetti [17], who showed that no item-price ascending auction can always determine the VCG prices, even for substitutes valuations.2 Our framework is more general than the traditional line of research that concentrates on the final allocation and 1 We do observe however that some weak incentive property comes for free in demand-query auctions since myopic players will answer all demand queries truthfully. We also note that in some cases (but not always!) the incentives issues can be handled orthogonally to the preference elicitation issues, e.g., by using Vickrey-Clarke-Groves (VCG) prices (e.g., [4, 34]). 2 We further discuss this result in Section 5.3. Iterative auctions Demand auctions Item-price auctions Anonymous price auctions Ascending auctions 1 2 3 4 5 6 97 8 10 Figure 1: The diagram classifies the following auctions according to their properties: (1) The adaptation [12] for Kelso & Crawfords [22] auction. (2) The Proxy Auction [3] by Ausubel & Milgrom. (3) iBundle(3) by Parkes & Ungar [34]. (4) iBundle(2) by Parkes & Ungar [37]. (5) Our descending adaptation for the 2-approximation for submodular valuations by [25] (see Subsection 5.4). (6) Ausubels [4] auction for substitutes valuations. (7) The adaptation by Nisan & Segal [32] of the O( √ m) approximation by [26]. (8) The duplicate-item auction by [5]. (9) Auction for Read-Once formulae by [43]. (10) The AkBA Auction by Wurman & Wellman [42]. payments and in particular, on reaching Walrasian equilibria or Competitive equilibria. A Walrasian equilibrium3 is known to exist in the case of Substitutes valuations, and is known to be impossible for any wider class of valuations [16]. This does not rule out other allocations by ascending auctions: in this paper we view the auctions as a computational process where the outcome - both the allocation and the payments - can be determined according to all the data elicited throughout the auction; This general framework strengthens our negative results.4 We find the study of ascending auctions appealing for various reasons. First, ascending auctions are widely used in many real-life settings from the FCC spectrum auctions [15] to almost any e-commerce website (e.g., [2, 1]). Actually, this is maybe the most straightforward way to sell items: ask the bidders what would they like to buy under certain prices, and increase the prices of over-demanded goods. Ascending auctions are also considered more intuitive for many bidders, and are believed to increase the trust of the bidders in the auctioneer, as they see the result gradually emerging from the bidders responses. Ascending auctions also have other desired economic properties, e.g., they incur smaller information revelation (consider, for example, English auctions vs. second-price sealed bid auctions). 1.1 Extant Work Many iterative combinatorial auction mechanisms rely on demand queries (see the survey in [35]). Figure 1 summa3 A Walrasian equilibrium is vector of item prices for which all the items are sold when each bidder receives a bundle in his demand set. 4 In few recent auction designs (e.g., [4, 28]) the payments are not necessarily the final prices of the auctions. 30 Valuation family Upper bound Reference Lower bound Reference General min(n, O( √ m)) [26], Section 4.2 min(n, m1/2− ) [32] Substitutes 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subadditive O(logm) [13] 2 [13] k-duplicates O(m1/k+1 ) [14] O(m1/k+1 ) [14] Procurement ln m [32] (log m)/2 [29, 32] Figure 2: The best approximation factors currently achievable by computationally-efficient combinatorial auctions, for several classes of valuations. All lower bounds in the table apply to all iterative auctions (except the one marked by *); all upper bounds in the table are achieved with item-price demand queries. rizes the basic classes of auctions implied by combinations of the above properties and classifies some of the auctions proposed in the literature according to this classification. For our purposes, two families of these auctions serve as the main motivating starting points: the first is the ascending item-price auctions of [22, 17] that with computational efficiency find an optimal allocation among (gross) substitutes valuations, and the second is the ascending bundleprice auctions of [37, 3] that find an optimal allocation among general valuations - but not necessarily with computational efficiency. The main lower bound in this area, due to [32], states that indeed, due to inherent communication requirements, it is not possible for any iterative auction to find the optimal allocation among general valuations with sub-exponentially many queries. A similar exponential lower bound was shown in [32] also for even approximating the optimal allocation to within a factor of m1/2− . Several lower bounds and upper bounds for approximation are known for some natural classes of valuations - these are summarized in Figure 2. In [32], the universal generality of demand queries is also shown: any non-deterministic communication protocol for finding an allocation that optimizes the social welfare can be converted into one that only uses demand queries (with bundle prices). In [41] this was generalized also to nondeterministic protocols for finding allocations that satisfy other natural types of economic requirements (e.g., approximate social efficiency, envy-freeness). However, in [33] it was demonstrated that this completeness of demand queries holds only in the nondeterministic setting, while in the usual deterministic setting, demand queries (even with bundle prices) may be exponentially weaker than general communication. Bundle-price auctions are a generalization of (the more natural and intuitive) item-price auctions. It is known that indeed item-price auctions may be exponentially weaker: a nice example is the case of valuations that are a XOR of k bundles5 , where k is small (say, polynomial). Lahaie and Parkes [24] show an economically-efficient bundle-price auction that uses a polynomial number of queries whenever k is polynomial. In contrast, [7] show that there exist valuations that are XORs of k = √ m bundles such that any item-price auction that finds an optimal allocation between them requires exponentially many queries. These results are part of a recent line of research ([7, 43, 24, 40]) that study the preference elicitation problem in combinatorial auctions and its relation to the full elicitation problem (i.e., learn5 These are valuations where bidders have values for k specific packages, and the value of each bundle is the maximal value of one of these packages that it contains. ing the exact valuations of the bidders). These papers adapt methods from machine-learning theory to the combinatorialauction setting. The preference elicitation problem and the full elicitation problem relate to a well studied problem in microeconomics known as the integrability problem (see, e.g., [27]). This problem studies if and when one can derive the utility function of a consumer from her demand function. Paper organization: Due to the relatively large number of results we present, we start with a survey of our new results in Section 2. After describing our formal model in Section 3, we present our results concerning the power of demand queries in Section 4. Then, we describe the power of item-price ascending auctions (Section 5) and bundle-price ascending auctions (Section 6). Readers who are mainly interested in the self-contained discussion of ascending auctions can skip Section 4. Missing proofs from Section 4 can be found in part I of the full paper ([8]). Missing proofs from Sections 5 and 6 can be found in part II of the full paper ([9]). 2. A SURVEY OF OUR RESULTS Our systematic analysis is composed of the combination of a rather large number of results characterizing the power and limitations of various classes of auctions. In this section, we will present an exposition describing our new results. We first discuss the power of demand-query iterative auctions, and then we turn our attention to ascending auctions. Figure 3 summarizes some of our main results. 2.1 Demand Queries Comparison of query types We first ask what other natural types of queries could we imagine iterative auctions using? Here is a list of such queries that are either natural, have been used in the literature, or that we found useful. 1. Value query: The auctioneer presents a bundle S, the bidder reports his value v(S) for this bundle. 2. Marginal-value query: The auctioneer presents a bundle A and an item j, the bidder reports how much he is willing to pay for j, given that he already owns A, i.e., v(j|A) = v(A ∪ {j}) − v(A). 3. Demand query (with item prices): The auctioneer presents a vector of item prices p1...pm; the bidder reports his demand under these prices, i.e., some set S that maximizes v(S) − P i∈S pi.6 6 A tie breaking rule should be specified. All of our results 31 Communication Constraint Can find an optimal allocation? Upper bound for welfare approx. Lower bound for welfare approx. Item-Price Demand Queries Yes 1 1 Poly. Communication No [32] min(n, O(m1/2 )) [26] min(n, m1/2− ) [32] Poly. Item-Price Demand Queries No [32] min(n, O(m1/2 )) min(n, m1/2− ) [32] Poly. Value Queries No [32] O( m√ log m ) [19] O( m log m ) Anonymous Item-Price AA No - min(O(n), O(m1/2− )) Non-anonymous Item-Price AA No -Anonymous Bundle-Price AA No - min(O(n), O(m1/2− )) Non-anonymous Bundle-Price AA Yes [37] 1 1 Poly Number of Item-Price AA No min(n, O(m1/2 ))Figure 3: This paper studies the economic efficiency of auctions that follow certain communication constraints. For each class of auctions, the table shows whether the optimal allocation can be achieved, or else, how well can it be approximated (both upper bounds and lower bounds). New results are highlighted. Abbreviations: Poly. (Polynomial number/size), AA (ascending auctions). - means that nothing is currently known except trivial solutions. 4. Indirect-utility query: The auctioneer presents a set of item prices p1...pm, and the bidder responds with his indirect-utility under these prices, that is, the highest utility he can achieve from a bundle under these prices: maxS⊆M (v(S) − P i∈S pi).7 5. Relative-demand query: the auctioneer presents a set of non-zero prices p1...pm, and the bidder reports the bundle that maximizes his value per unit of money, i.e., some set that maximizes v(S)P i∈S pi .8 Theorem: Each of these queries can be efficiently (i.e., in time polynomial in n, m, and the number of bits of precision t needed to represent a single value vi(S)) simulated by a sequence of demand queries with item prices. In particular this shows that demand queries can elicit all information about a valuation by simulating all 2m −1 value queries. We also observe that value queries and marginalvalue queries can simulate each other in polynomial time and that demand queries and indirect-utility queries can also simulate each other in polynomial time. We prove that exponentially many value queries may be needed in order to simulate a single demand query. It is interesting to note that for the restricted class of substitutes valuations, demand queries may be simulated by polynomial number of value queries [6]. Welfare approximation The next question that we ask is how well can a computationally-efficient auction that uses only demand queries approximate the optimal allocation? Two separate obstacles are known: In [32], a lower bound of min(n, m1/2− ), for any fixed > 0, was shown for the approximation factor apply for any fixed tie breaking rule. 7 This is exactly the utility achieved by the bundle which would be returned in a demand query with the same prices. This notion relates to the Indirect-utility function studied in the Microeconomic literature (see, e.g., [27]). 8 Note that when all the prices are 1, the bidder actually reports the bundle with the highest per-item price. We found this type of query useful, for example, in the design of the approximation algorithm described in Figure 5 in Section 4.2. obtained using any polynomial amount of communication. A computational bound with the same value applies even for the case of single-minded bidders, but under the assumption of NP = ZPP [39]. As noted in [32], the computationallyefficient greedy algorithm of [26] can be adapted to become a polynomial-time iterative auction that achieves a nearly matching approximation factor of min(n, O( √ m)). This iterative auction may be implemented with bundle-price demand queries but, as far as we see, not as one with item prices. Since in a single bundle-price demand query an exponential number of prices can be presented, this algorithm can have an exponential communication cost. In Section 4.2, we describe a different item-price auction that achieves the same approximation factor with a polynomial number of queries (and thus with a polynomial communication). Theorem: There exists a computationally-efficient iterative auction with item-price demand queries that finds an allocation that approximates the optimal welfare between arbitrary valuations to within a factor of min(n, O( √ m)). One may then attempt obtaining such an approximation factor using iterative auctions that use only the weaker value queries. However, we show that this is impossible: Theorem: Any iterative auction that uses a polynomial (in n and m) number of value queries can not achieve an approximation factor that is better than O( m log m ).9 Note however that auctions with only value queries are not completely trivial in power: the bundling auctions of Holzman et al. [19] can easily be implemented by a polynomial number of value queries and can achieve an approximation factor of O( m√ log m ) by using O(log m) equi-sized bundles. We do not know how to close the (tiny) gap between this upper bound and our lower bound. Representing bundle-prices We then deal with a critical issue with bundle-price auctions that was side-stepped by our model, as well as by all previous works that used bundle-price auctions: how are 9 This was also proven independently by Shahar Dobzinski and Michael Schapira. 32 the bundle prices represented? For item-price auctions this is not an issue since a query needs only to specify a small number, m, of prices. In bundle-price auctions that situation is more difficult since there are exponentially many bundles that require pricing. Our basic model (like all previous work that used bundle prices, e.g., [37, 34, 3]), ignores this issue, and only requires that the prices be determined, somehow, by the protocol. A finer model would fix a specific language for denoting bundle prices, force the protocol to represent the bundle-prices in this language, and require that the representations of the bundle-prices also be polynomial. What could such a language for denoting prices for all bundles look like? First note that specifying a price for each bundle is equivalent to specifying a valuation. Second, as noted in [31], most of the proposed bidding languages are really just languages for representing valuations, i.e., a syntactic representation of valuations - thus we could use any of them. This point of view opens up the general issue of which language should be used in bundle-price auctions and what are the implications of this choice. Here we initiate this line of investigation. We consider bundle-price auctions where the prices must be given as a XOR-bid, i.e., the protocol must explicitly indicate the price of every bundle whose value is different than that of all of its proper subsets. Note that all bundle-price auctions that do not explicitly specify a bidding language must implicitly use this language or a weaker one, since without a specific language one would need to list prices for all bundles, perhaps except for trivial ones (those with value 0, or more generally, those with a value that is determined by one of their proper subsets.) We show that once the representation length of bundle prices is taken into account (using the XOR-language), bundle-price auctions are no more strictly stronger than item-price auctions. Define the cost of an iterative auction as the total length of the queries and answers used throughout the auction (in the worst case). Theorem: For some class of valuations, bundle price auctions that use the XOR-language require an exponential cost for finding the optimal allocation. In contrast, item-price auctions can find the optimal allocation for this class within polynomial cost.10 This put doubts on the applicability of bundle-price auctions like [3, 37], and it may justify the use of hybrid pricing methods such as Ausubel, Cramton and Milgroms Clock-Proxy auction ([10]). Demand queries and linear programs The winner determination problem in combinatorial auctions may be formulated as an integer program. In many cases solving the linear-program relaxation of this integer program is useful: for some restricted classes of valuations it finds the optimum of the integer program (e.g., substitute valuations [22, 17]) or helps approximating the optimum (e.g., by randomized rounding [13, 14]). However, the linear program has an exponential number of variables. Nisan and Segal [32] observed the surprising fact that despite the ex10 Our proof relies on the sophisticated known lower bounds for constant depth circuits. We were not able to find an elementary proof. ponential number of variables, this linear program may be solved within polynomial communication. The basic idea is to solve the dual program using the Ellipsoid method (see, e.g., [20]). The dual program has a polynomial number of variables, but an exponential number of constraints. The Ellipsoid algorithm runs in polynomial time even on such programs, provided that a separation oracle is given for the set of constraints. Surprisingly, such a separation oracle can be implemented using a single demand query (with item prices) to each of the bidders. The treatment of [32] was somewhat ad-hoc to the problem at hand (the case of substitute valuations). Here we give a somewhat more general form of this important observation. Let us call the following class of linear programs generalized-winner-determination-relaxation (GWDR) LPs: Maximize X i∈N,S⊆M wi xi,S vi(S) s.t. X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M The case where wi = 1, di = 1, qj = 1 (for every i, j) is the usual linear relaxation of the winner determination problem. More generally, wi may be viewed as the weight given to bidder is welfare, qj may be viewed as the quantity of units of good j, and di may be viewed as duplicity of the number of bidders of type i. Theorem: Any GWDR linear program may be solved in polynomial time (in n, m, and the number of bits of precision t) using only demand queries with item prices.11 2.2 Ascending Auctions Ascending item-price auctions: It is well known that the item-price ascending auctions of Kelso and Crawford [22] and its variants [12, 16] find the optimal allocation as long as all players valuations have the substitutes property. The obvious question is whether the optimal allocation can be found for a larger class of valuations. Our main result here is a strong negative result: Theorem: There is a 2-item 2-player problem where no ascending item-price auction can find the optimal allocation. This is in contrast to both the power of bundle-price ascending auctions and to the power of general item-price demand queries (see above), both of which can always find the optimal allocation and in fact even provide full preference elicitation. The same proof proves a similar impossibility result for other types of auctions (e.g., descending auctions, non-anonymous auctions). More extension of this result: • Eliciting some classes of valuations requires an exponential number of ascending item-price trajectories. 11 The produced optimal solution will have polynomial support and thus can be listed fully. 33 • At least k − 1 ascending item-price trajectories are needed to elicit XOR formulae with k terms. This result is in some sense tight, since we show that any k-term XOR formula can be fully elicited by k−1 nondeterministic (i.e., when some exogenous teacher instructs the auctioneer on how to increase the prices) ascending auctions.12 We also show that item-price ascending auctions and iterative auctions that are limited to a polynomial number of queries (of any kind, not necessarily ascending) are incomparable in their power: ascending auctions, with small enough increments, can elicit the preferences in cases where any polynomial number of queries cannot. Motivated by several recent papers that studied the relation between eliciting and fully-eliciting the preferences in combinatorial auctions (e.g., [7, 24]), we explore the difference between these problems in the context of ascending auctions. We show that although a single ascending auction can determine the optimal allocation among any number of bidders with substitutes valuations, it cannot fully-elicit such a valuation even for a single bidder. While it was shown in [25] that the set of substitutes valuations has measure zero in the space of general valuations, its dimension is not known, and in particular it is still open whether a polynomial amount of information suffices to describe a substitutes valuation. While our result may be a small step in that direction (a polynomial full elicitation may still be possible with other communication protocols), we note that our impossibility result also holds for valuations in the class OXS defined by [25], valuations that we are able to show have a compact representation. We also give several results separating the power of different models for ascending combinatorial auctions that use item-prices: we prove, not surprisingly, that adaptive ascending auctions are more powerful than oblivious ascending auctions and that non-deterministic ascending auctions are more powerful than deterministic ascending auctions. We also compare different kinds of non-anonymous auctions (e.g., simultaneous or sequential), and observe that anonymous bundle-price auctions and non-anonymous item-price auctions are incomparable in their power. Finally, motivated by Dutch auctions, we consider descending auctions, and how they compare to ascending ones; we show classes of valuations that can be elicited by ascending item-price auctions but not by descending item-price auctions, and vice versa. Ascending bundle-price auctions: All known ascending bundle-price auctions that are able to find the optimal allocation between general valuations (with free disposal) use non-anonymous prices. Anonymous ascending-price auctions (e.g., [42, 21, 37]) are only known to be able to find the optimal allocation among superadditive valuations or few other simple classes ([36]). We show that this is no mistake: Theorem: No ascending auction with anonymous prices can find the optimal allocation between general valuations. 12 Non-deterministic computation is widely used in CS and also in economics (e.g, a Walrasian equilibrium or [38]). In some settings, deterministic and non-deterministic models have equal power (e.g., computation with finite automata). This bound is regardless of the running time, and it also holds for descending auctions and non-deterministic auctions. We strengthen this result significantly by showing that anonymous ascending auctions cannot produce a better than O( √ m) approximation - the approximation ratio that can be achieved with a polynomial number of queries ([26, 32]) and, as mentioned, with a polynomial number of item-price demand queries. The same lower bound clearly holds for anonymous item-price ascending auctions since such auctions can be simulated by anonymous bundle-price ascending auctions. We currently do not have any lower bound on the approximation achievable by non-anonymous item-price ascending auctions. Finally, we study the performance of the existing computationally-efficient ascending auctions. These protocols ([37, 3]) require exponential time in the worst case, and this is unavoidable as shown by [32]. However, we also observe that these auctions, as well as the whole class of similar ascending bundle-price auctions, require an exponential time even for simple additive valuations. This is avoidable and indeed the ascending item-price auctions of [22] can find the optimal allocation for these simple valuations with polynomial communication. 3. THE MODEL 3.1 Discrete Auctions for Continuous Values Our model aims to capture iterative auctions that operate on real-valued valuations. There is a slight technical difficulty here in bridging the gap between the discrete nature of an iterative auction, and the continuous nature of the valuations. This is exactly the same problem as in modeling a simple English auction. There are three standard formal ways to model it: 1. Model the auction as a continuous process and study its trajectory in time. For example, the so-called Japanese auction is basically a continuous model of an English model.13 2. Model the auction as discrete and the valuations as continuously valued. In this case we introduce a parameter and usually require the auction to produce results that are -close to optimal. 3. Model the valuations as discrete. In this case we will assume that all valuations are integer multiples of some small fixed quantity δ, e.g., 1 penny. All communication in this case is then naturally finite. In this paper we use the latter formulation and assume that all values are multiples of some δ. Thus, in some parts of the paper we assume without loss of generality that δ = 1, hence all valuations are integral. Almost all (if not all) of our results can be translated to the other two models with little effort. 3.2 Valuations A single auctioneer is selling m indivisible non-homogeneous items in a single auction, and let M be the set of these 13 Another similar model is the moving knives model in the cake-cutting literature. 34 items and N be the set of bidders. Each one of the n bidders in the auction has a valuation function vi : 2m → {0, δ, 2δ, ..., L}, where for every bundle of items S ⊆ M, vi(S) denotes the value of bidder i for the bundle S and is a multiple of δ in the range 0...L. We will sometimes denote the number of bits needed to represent such values in the range 0...L by t = log L. We assume free disposal, i.e., S ⊆ T implies vi(S) ≤ vi(T) and that vi(∅) = 0 for all bidders. We will mention the following classes of valuations: • A valuation is called sub-modular if for all sets of items A and B we have that v(A ∪ B) + v(A ∩ B) ≤ v(A) + v(B). • A valuation is called super-additive if for all disjoint sets of items A and B we have that v(A∪B) ≥ v(A)+ v(B). • A valuation is called a k-bundle XOR if it can be represented as a XOR combination of at most k atomic bids [30], i.e., if there are at most k bundles Si and prices pi such that for all S, v(S) = maxi|S⊇Si pi. Such valuations will be denoted by v = (S1 : p1) ⊕ (S2 : p2) ⊕ . . . ⊕ (Sk : pk).14 3.3 Iterative Auctions The auctioneer sets up a protocol (equivalently an algorithm), where at each stage of the protocol some information q - termed the query - is sent to some bidder i, and then bidder i replies with some reply that depends on the query as well as on his own valuation. In this paper, we assume that we have complete control over the bidders behavior, and thus the protocol also defines a reply function ri(q, vi) that specifies bidder is reply to query q. The protocol may be adaptive: the query value as well as the queried bidder may depend on the replies received for past queries. At the end of the protocol, an allocation S1...Sn must be declared, where Si ∩ Sj = ∅ for i = j. We say that the auction finds an optimal allocation if it finds the allocation that maximizes the social welfareP i vi(Si). We say that it finds a c-approximation if P i vi(Si) ≥ P i vi(Ti)/c where T1...Tn is an optimal allocation. The running time of the auction on a given instance of the bidders valuations is the total number of queries made on this instance. The running time of a protocol is the worst case cost over all instances. Note that we impose no computational limitations on the protocol or on the players.15 This of course only strengthens our hardness results. Yet, our positive results will not use this power and will be efficient also in the usual computational sense. Our goal will be to design computationally-efficient protocols. We will deem a protocol computationally-efficient if its cost is polynomial in the relevant parameters: the number of bidders n, the number of items m, and t = log L, where L is the largest possible value of a bundle. However, when we discuss ascending-price auctions and their variants, a computationally-efficient protocol will be required to be 14 For example, v = (abcd : 5) ⊕ (ab : 3) ⊕ (c : 4) denotes the XOR valuation with the terms abcd, ab, c and prices 5, 3, 4 respectively. For this valuation, v(abcd) = 5, v(abd) = 3, v(abc) = 4. 15 The running time really measures communication costs and not computational running time. pseudo-polynomial, i.e., it should ask a number of queries which is polynomial in m, n and L δ . This is because that ascending auctions can usually not achieve such running times (consider even the English auction on a single item).16 Note that all of our results give concrete bounds, where the dependence on the parameters is given explicitly; we use the standard big-Oh notation just as a shorthand. We say than an auction elicits some class V of valuations, if it determines the optimal allocation for any profile of valuations drawn from V ; We say that an auction fully elicits some class of valuations V , if it can fully learn any single valuation v ∈ V (i.e., learn v(S) for every S). 3.4 Demand Queries and Ascending Auctions Most of the paper will be concerned with a common special case of iterative auctions that we term demand auctions. In such auctions, the queries that are sent to bidders are demand queries: the query specifies a price p(S) ∈ + for each bundle S. The reply of bidder i is simply the set most desired - demanded - under these prices. Formally, a set S that maximizes vi(S) − p(S). It may happen that more than one set S maximizes this value. In which case, ties are broken according to some fixed tie-breaking rule, e.g., the lexicographically first such set is returned. All of our results hold for any fixed tie-breaking rule. Ascending auctions are iterative auctions with non-decreasing prices: Definition 1. In an ascending auction, the prices in the queries to the same bidder can only increase in time. Formally, let p be a query made for bidder i, and q be a query made for bidder i at a later stage in the protocol. Then for all sets S, q(S) ≥ p(S). A similar variant, which we also study and that is also common in real life, is descending auctions, in which prices can only decrease in time. Note that the term ascending auction refers to an auction with a single ascending trajectory of prices. It may be useful to define multi-trajectory ascending auctions, in which the prices maybe reset to zero a number of times (see, e.g., [4]). We consider two main restrictions on the types of allowed demand queries: Definition 2. Item Prices: The prices in each query are given by prices pj for each item j. The price of a set S is additive: p(S) = P j∈S pj. Definition 3. Anonymous prices: The prices seen by the bidders at any stage in the auction are the same, i.e. whenever a query is made to some bidder, the same query is also made to all other bidders (with the prices unchanged). In auctions with non-anonymous (discriminatory) prices, each bidder i has personalized prices denoted by pi (S).17 In this paper, all auctions are anonymous unless otherwise specified. Note that even though in our model valuations are integral (or multiples of some δ), we allow the demand query to 16 Most of the auctions we present may be adapted to run in time polynomial in log L, using a binary-search-like procedure, losing their ascending nature. 17 Note that a non-anonymous auction can clearly be simulated by n parallel anonymous auctions. 35 use arbitrary real numbers in +. That is, we assume that the increment we use in the ascending auctions may be significantly smaller than δ. All our hardness results hold for any , even for continuous price increments. A practical issue here is how will the query be specified: in the general case, an exponential number of prices needs to be sent in a single query. Formally, this is not a problem as the model does not limit the length of queries in any way - the protocol must simply define what the prices are in terms of the replies received for previous queries. We look into this issue further in Section 4.3. 4. THE POWER OF DEMAND QUERIES In this section, we study the power of iterative auctions that use demand queries (not necessarily ascending). We start by comapring demand queries to other types of queries. Then, we discuss how well can one approximate the optimal welfare using a polynomial number of demand queries. We also initiate the study of the representation of bundle-price demand queries, and finally, we show how demand queries help solving the linear-programming relaxation of combinatorial auctions in polynomial time. 4.1 The Power of Different Types of Queries In this section we compare the power of the various types of queries defined in Section 2. We will present computationally -efficient simulations of these query types using item-price demand queries. In Section 5.1 we show that these simulations can also be done using item-price ascending auctions. Lemma 4.1. A value query can be simulated by m marginalvalue queries. A marginal-value query can be simulated by two value queries. Lemma 4.2. A value query can be simulated by mt demand queries (where t = log L is the number of bits needed to represent a single bundle value).18 As a direct corollary we get that demand auctions can always fully elicit the bidders valuations by simulating all possible 2m − 1 queries and thus elicit enough information for determining the optimal allocation. Note, however, that this elicitation may be computationally inefficient. The next lemma shows that demand queries can be exponentially more powerful than value queries. Lemma 4.3. An exponential number of value queries may be required for simulating a single demand query. Indirect utility queries are, however, equivalent in power to demand queries: Lemma 4.4. An indirect-utility query can be simulated by mt + 1 demand queries. A demand query can be simulated by m + 1 indirect-utility queries. Demand queries can also simulate relative-demand queries:19 18 Note that t bundle-price demand queries can easily simulate a value query by setting the prices of all the bundles except S (the bundle with the unknown value) to be L, and performing a binary search on the price of S. 19 Note: although in our model values are integral (our multiples of δ), we allow the query prices to be arbitrary real numV MV D IU RD V 1 2 exp exp exp MV m 1 exp exp exp D mt poly 1 mt+1 poly IU 1 2 m+1 1 poly RD - - - - 1 Figure 4: Each entry in the table specifies how many queries of this row are needed to simulate a query from the relevant column. Abbreviations: V (value query), MV (marginal-value query), D (demand query), IU (Indirect-utility query), RD (relative demand query). Lemma 4.5. Relative-demand queries can be simulated by a polynomial number of demand queries. According to our definition of relative-demand queries, they clearly cannot simulate even value queries. Figure 4 summarizes the relations between these query types. 4.2 Approximating the Social Welfare with Value and Demand Queries We know from [32] that iterative combinatorial auctions that only use a polynomial number of queries can not find an optimal allocation among general valuations and in fact can not even approximate it to within a factor better than min{n, m1/2− }. In this section we ask how well can this approximation be done using demand queries with item prices, or using the weaker value queries. We show that, using demand queries, the lower bound can be matched, while value queries can only do much worse. Figure 5 describes a polynomial-time algorithm that achieves a min(n, O( √ m)) approximation ratio. This algorithm greedily picks the bundles that maximize the bidders per-item value (using relative-demand queries, see Section 4.1). As a final step, it allocates all the items to a single bidder if it improves the social welfare (this can be checked using value queries). Since both value queries and relative-demand queries can be simulated by a polynomial number of demand queries with item prices (Lemmas 4.2 and 4.5), this algorithm can be implemented by a polynomial number of demand queries with item prices.20 Theorem 4.6. The auction described in Figure 5 can be implemented by a polynomial number of demand queries and achieves a min{n, 4 √ m}-approximation for the social welfare. We now ask how well can the optimal welfare be approximated by a polynomial number of value queries. First we note that value queries are not completely powerless: In [19] it is shown that if the m items are split into k fixed bundles of size m/k each, and these fixed bundles are auctioned as though each was indivisible, then the social welfare bers, thus we may have bundles with arbitrarily close relative demands. In this sense the simulation above is only up to any given (and the number of queries is O(log L+log 1 )). When the relative-demand query prices are given as rational numbers, exact simulation is implied when log is linear in the input length. 20 In the full paper [8], we observe that this algorithm can be implemented by two descending item-price auctions (where we allow removing items along the auction). 36 generated by such an auction is at least m√ k -approximation of that possible in the original auction. Notice that such an auction can be implemented by 2k − 1 value queries to each bidder - querying the value of each bundle of the fixed bundles. Thus, if we choose k = log m bundles we get an m√ log m -approximation while still using a polynomial number of queries. The following lemma shows that not much more is possible using value queries: Lemma 4.7. Any iterative auction that uses only value queries and distinguishes between k-tuples of 0/1 valuations where the optimal allocation has value 1, and those where the optimal allocation has value k requires at least 2 m k queries. Proof. Consider the following family of valuations: for every S, such that |S| > m/2, v(S) = 1, and there exists a single set T, such that for |S| ≤ m/2, v(S) = 1 iff T ⊆ S and v(S) = 0 otherwise. Now look at the behavior of the protocol when all valuations vi have T = {1...m}. Clearly in this case the value of the best allocation is 1 since no set of size m 2 or lower has non-zero value for any player. Fix the sequence of queries and answers received on this k-tuple of valuations. Now consider the k-tuple of valuations chosen at random as follows: a partition of the m items into k sets T1...Tk each of size m k each is chosen uniformly at random among all such partitions. Now consider the k-tuple of valuations from our family that correspond to this partition - clearly Ti can be allocated to i, for each i, getting a total value of k. Now look at the protocol when running on these valuations and compare its behavior to the original case. Note that the answer to a query S to player i differs between the case of Ti and the original case of T = {1...m} only if |S| ≤ m 2 and Ti ⊆ S. Since Ti is distributed uniformly among all sets of size exactly m k , we have that for any fixed query S to player i, where |S| ≤ m 2 , Pr[Ti ⊆ S] ≤ „ |S| m «|Ti| ≤ 2− m k Using the union-bound, if the original sequence of queries was of length less than 2 m k , then with positive probability none of the queries in the sequence would receive a different answer than for the original input tuple. This is forbidden since the protocol must distinguish between this case and the original case - which cannot happen if all queries receive the same answer. Hence there must have been at least 2 m k queries for the original tuple of valuations. We conclude that a polynomial time protocol that uses only value queries cannot obtain a better than O( m log m ) approximation of the welfare: Theorem 4.8. An iterative auction that uses a polynomial number of value queries cannot achieve better than O( m log m )-approximation for the social welfare. Proof. Immediate from Lemma 4.7: achieving any approximation ratio k which is asymptotically greater than m log m needs an exponential number of value queries. An Approximation Algorithm: Initialization: Let T ← M be the current items for sale. Let K ← N be the currently participating bidders. Let S∗ 1 ← ∅, ..., S∗ n ← ∅ be the provisional allocation. Repeat until T = ∅ or K = ∅: Ask each bidder i in K for the bundle Si that maximizes her per-item value, i.e., Si ∈ argmaxS⊆T vi(S) |S| . Let i be the bidder with the maximal per-item value, i.e., i ∈ argmaxi∈K vi(Si) |Si| . Set: s∗ i = si, K = K \\ i, M = M \\ Si Finally: Ask the bidders for their values vi(M) for the grand bundle. If allocating all the items to some bidder i improves the social welfare achieved so far (i.e., ∃i ∈ N such that vi(M) > P i∈N vi(S∗ i )), then allocate all items to this bidder i. Figure 5: This algorithm achieves a min{n, 4 √ m}approximation for the social welfare, which is asymptotically the best worst-case approximation possible with polynomial communication. This algorithm can be implemented with a polynomial number of demand queries. 4.3 The Representation of Bundle Prices In this section we explicitly fix the language in which bundle prices are presented to the bidders in bundle-price auctions. This language requires the algorithm to explicitly list the price of every bundle with a non-trivial price. Trivial in this context is a price that is equal to that of one of its proper subsets (which was listed explicitly). This representation is equivalent to the XOR-language for expressing valuations. Formally, each query q is given by an expression: q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl). In this representation, the price demanded for every set S is simply p(S) = max{k=1...l|Sk⊆S}pk. Definition 4. The length of the query q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl) is l. The cost of an algorithm is the sum of the lengths of the queries asked during the operation of the algorithm on the worst case input. Note that under this definition, bundle-price auctions are not necessarily stronger than item-price auctions. An itemprice query that prices each item for 1, is translated to an exponentially long bundle-price query that needs to specify the price |S| for each bundle S. But perhaps bundle-price auctions can still find optimal allocations whenever itemprice auction can, without directly simulating such queries? We show that this is not the case: indeed, when the representation length is taken into account, bundle price auctions are sometimes seriously inferior to item price auctions. Consider the following family of valuations: Each item is valued at 3, except that for some single set S, its value is a bit more: 3|S| + b, where b ∈ {0, 1, 2}. Note that an item price auction can easily find the optimal allocation between any two such valuations: Set the prices of each item to 3+ ; if the demand sets of the two players are both empty, then b = 0 for both valuations, and an arbitrary allocation is fine. If one of them is empty and the other non-empty, allocate the non-empty demand set to its bidder, and the rest to the other. If both demand sets are non-empty then, unless they form an exact partition, we need to see which b is larger, which we can do by increasing the price of a single item in each demand set. 37 We will show that any bundle-price auction that uses only the XOR-language to describe bundle prices requires an exponential cost (which includes the sum of all description lengths of prices) to find an optimal allocation between any two such valuations. Lemma 4.9. Every bundle-price auction that uses XORexpressions to denote bundle prices requires 2Ω( √ m) cost in order to find the optimal allocation among two valuations from the above family. The complication in the proof stems from the fact that using XOR-expressions, the length of the price description depends on the number of bundles whose price is strictly larger than each of their subsets - this may be significantly smaller than the number of bundles that have a non-zero price. (The proof becomes easy if we require the protocol to explicitly name every bundle with non-zero price.) We do not know of any elementary proof for this lemma (although we believe that one can be found). Instead we reduce the problem to a well known lower bound in boolean circuit complexity [18] stating that boolean circuits of depth 3 that compute the majority function on m variables require 2Ω( √ m) size. 4.4 Demand Queries and Linear Programming Consider the following linear-programming relaxation for the generalized winner-determination problem in combinatorial auctions (the primal program): Maximize X i∈N,S⊆M wi xi,S vi(S) s.t. X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M Note that the primal program has an exponential number of variables. Yet, we will be able to solve it in polynomial time using demand queries to the bidders. The solution will have a polynomial size support (non-zero values for xi,S), and thus we will be able to describe it in polynomial time. Here is its dual: Minimize X j∈M qjpj + X i∈N diui s.t. ui + X j∈S pj ≥ wivi(S) ∀i ∈ N, S ⊆ M pi ≥ 0, uj ≥ 0 ∀i ∈ M, j ∈ N Notice that the dual problem has exactly n + m variables but an exponential number of constraints. Thus, the dual can be solved using the Ellipsoid method in polynomial time - if a separation oracle can be implemented in polynomial time. Recall that a separation oracle, when given a possible solution, either confirms that it is a feasible solution, or responds with a constraint that is violated by the possible solution. We construct a separation oracle for solving the dual program, using a single demand query to each of the bidders. Consider a possible solution (u, p) for the dual program. We can re-write the constraints of the dual program as: ui/wi ≥ vi(S) − X j∈S pj/wi Now a demand query to bidder i with prices pj/wi reveals exactly the set S that maximizes the RHS of the previous inequality. Thus, in order to check whether (u, p) is feasible it suffices to (1) query each bidder i for his demand Di under the prices pj/wi; (2) check only the n constraints ui + P j∈Di pj ≥ wivi(Di) (where vi(Di) can be simulated using a polynomial sequence of demand queries as shown in Lemma 4.2). If none of these is violated then we are assured that (u, p) is feasible; otherwise we get a violated constraint. What is left to be shown is how the primal program can be solved. (Recall that the primal program has an exponential number of variables.) Since the Ellipsoid algorithm runs in polynomial time, it encounters only a polynomial number of constraints during its operation. Clearly, if all other constraints were removed from the dual program, it would still have the same solution (adding constraints can only decrease the space of feasible solutions). Now take the reduced dual where only the constraints encountered exist, and look at its dual. It will have the same solution as the original dual and hence of the original primal. However, look at the form of this dual of the reduced dual. It is just a version of the primal program with a polynomial number of variables - those corresponding to constraints that remained in the reduced dual. Thus, it can be solved in polynomial time, and this solution clearly solves the original primal program, setting all other variables to zero. 5. ITEM-PRICE ASCENDING AUCTIONS In this section we characterize the power of ascending item-price auctions. We first show that this power is not trivial: such auctions can in general elicit an exponential amount of information. On the other hand, we show that the optimal allocation cannot always be determined by a single ascending auction, and in some cases, nor by an exponential number of ascending-price trajectories. Finally, we separate the power of different models of ascending auctions. 5.1 The Power of Item-Price Ascending Auctions We first show that if small enough increments are allowed, a single ascending trajectory of item-prices can elicit preferences that cannot be elicited with polynomial communication. As mentioned, all our hardness results hold for any increment, even infinitesimal. Theorem 5.1. Some classes of valuations can be elicited by item-price ascending auctions, but cannot be elicited by a polynomial number of queries of any kind. Proof. (sketch) Consider two bidders with v(S) = 1 if |S| > n 2 , v(S) = 0 if |S| < n 2 and every S such that |S| = n 2 has an unknown value from {0, 1}. Due to [32], determining the optimal allocation here requires exponential communication in the worst case. Nevertheless, we show (see [9]) that an item-price ascending auction can do it, as long as it can use exponentially small increments. We now describe another positive result for the power of item-price ascending auctions. In section 4.1, we showed 38 v(ab) v(a) v(b) Bidder 1 2 α ∈ (0, 1) β ∈ (0, 1) Bidder 2 2 2 2 Figure 6: No item-price ascending auctions can determine the optimal allocation for this class of valuations. that a value query can be simulated with a (truly) polynomial number of item-price demand queries. Here, we show that every value query can be simulated by a (pseudo) polynomial number of ascending item-price demand queries. (In the next subsection, we show that we cannot always simulate even a pair of value queries using a single item-price ascending auction.) In the full paper (part II,[9]), we show that we can simulate other types of queries using item-price ascending auctions. Proposition 5.2. A value query can be simulated by an item-price ascending auction. This simulation requires a polynomial number of queries. Actually, the proof for Proposition 5.2 proves a stronger useful result regarding the information elicited by iterative auctions. It says that in any iterative auction in which the changes of prices are small enough in each stage (pseudocontinuous auctions), the value of all bundles demanded during the auction can be computed. The basic idea is that when the bidder moves from demanding some bundle Ti to demanding another bundle Ti+1, there is a point in which she is indifferent between these two bundles. Thus, knowing the value of some demanded bundle (e.g., the empty set) enables computing the values of all other demanded bundles. We say that an auction is pseudo-continuous, if it only uses demand queries, and in each step, the price of at most one item is changed by (for some ∈ (0, δ]) with respect to the previous query. Proposition 5.3. Consider any pseudo-continuous auction (not necessarily ascending), in which bidder i demands the empty set at least once along the auction. Then, the value of every bundle demanded by bidder i throughout the auction can be calculated at the end of the auction. 5.2 Limitations of Item-Price Ascending Auctions Although we observed that demand queries can solve any combinatorial auction problem, when the queries are restricted to be ascending, some classes of valuations cannot be elicited nor fully-elicited. An example for such class of valuations is given in Figure 6. Theorem 5.4. There are classes of valuations that cannot be elicited nor fully elicited by any item-price ascending auction. Proof. Let bidder 1 have the valuation described in the first row of Figure 6, where α and β are unknown values in (0, 1). First, we prove that this class cannot be fully elicited by a single ascending auction. Specifically, an ascending auction cannot reveal the values of both α and β. As long as pa and pb are both below 1, the bidder will always demand the whole bundle ab: her utility from ab is strictly greater than the utility from either a or b separately. For example, we show that u1(ab) > u1(a): u1(ab) = 2 − (pa + pb) = 1 − pa + 1 − pb > vA(a) − pa + 1 − pb > u1(a) Thus, in order to gain any information about α or β, the price of one of the items should become at least 1, w.l.o.g. pa ≥ 1. But then, the bundle a will not be demanded by bidder 1 throughout the auction, thus no information at all will be gained about α. Now, assume that bidder 2 is known to have the valuation described in the second row of Figure 6. The optimal allocation depends on whether α is greater than β (in bidder 1s valuation), and we proved that an ascending auction cannot determine this. The proof of the theorem above shows that for an unknown value to be revealed, the price of one item should be greater than 1, and the other price should be smaller than 1. Therefore, in a price-monotonic trajectory of prices, only one of these values can be revealed. An immediate conclusion is that this impossibility result also holds for item-price descending auctions. Since no such trajectory exists, then the same conclusion even holds for non-deterministic itemprice auctions (in which exogenous data tells us how to increase the prices). Also note that since the hardness stems from the impossibility to fully-elicit a valuation of a single bidder, this result also holds for non-anonymous ascending item-price auctions. 5.3 Limitations of Multi-Trajectory Ascending Auctions According to Theorem 5.4, no ascending item-price auction can always elicit the preferences (we prove a similar result for bundle prices in section 6). But can two ascending trajectories do the job? Or a polynomial number of ascending trajectories? We give negative answers for such suggestions. We define a k-trajectory ascending auction as a demandquery iterative auction in which the demand queries can be partitioned to k sets of queries, where the prices published in each set only increase in time. Note that we use a general definition; It allows the trajectories to run in parallel or sequentially, and to use information elicited in some trajectories for determining the future queries in other trajectories. The power of multiple-trajectory auctions can be demonstrated by the negative result of Gul and Stacchetti [17] who showed that even for an auction among substitutes valuations, an anonymous ascending item-price auction cannot compute VCG prices for all players.21 Ausubel [4] overcame this impossibility result and designed auctions that do compute VCG prices by organizing the auction as a sequence of n + 1 ascending auctions. Here, we prove that one cannot elicit XOR valuations with k terms by less than k − 1 ascending trajectories. On the other hand, we show that an XOR formula can be fully elicited by k−1 non-deterministic ascending auctions (or by k−1 deterministic ascending auctions if the auctioneer knows the atomic bundles).22 21 A recent unpublished paper by Mishra and Parkes extends this result, and shows that non-anonymous prices with bundle-prices are necessary in order that an ascending auction will end up with a universal-competitive-equilibrium (that leads to VCG payments). 22 This result actually separates the power of deterministic 39 Proposition 5.5. XOR valuations with k terms cannot be elicited (or fully elicited) by any (k-2)-trajectory itemprice ascending auction, even when the atomic bundles are known to the elicitor. However, these valuations can be elicited (and fully elicited) by (k-1)-trajectory non-deterministic non-anonymous item-price ascending auctions. Moreover, an exponential number of trajectories is required for eliciting some classes of valuations: Proposition 5.6. Elicitation and full-elicitation of some classes of valuations cannot be done by any k-trajectory itemprice ascending auction, where k = o(2m ). Proof. (sketch) Consider the following class of valuations: For |S| < m 2 , v(S) = 0 and for |S| > m 2 , v(S) = 2; every bundle S of size m 2 has some unknown value in (0, 1). We show ([9]) that a single item-price ascending auction can reveal the value of at most one bundle of size n 2 , and therefore an exponential number of ascending trajectories is needed in order to elicit such valuations. We observe that the algorithm we presented in Section 4.2 can be implemented by a polynomial number of ascending auctions (each item-price demand query can be considered as a separate ascending auction), and therefore a min(n, 4 √ m)-approximation can be achieved by a polynomial number of ascending auctions. We do not currently have a better upper bound or any lower bound. 5.4 Separating the Various Models of Ascending Auctions Various models for ascending auctions have been suggested in the literature. In this section, we compare the power of the different models. As mentioned, all auctions are considered anonymous and deterministic, unless specified otherwise. Ascending vs. Descending Auctions: We begin the discussion of the relation between ascending auctions and descending auctions with an example. The algorithm by Lehmann, Lehmann and Nisan [25] can be implemented by a simple item-price descending auction (see the full paper for details [9]). This algorithm guarantees at least half of the optimal efficiency for submodular valuations. However, we are not familiar with any ascending auction that guarantees a similar fraction of the efficiency. This raises a more general question: can ascending auctions solve any combinatorialauction problem that is solvable using a descending auction (and vice versa)? We give negative answers to these questions. The idea behind the proofs is that the information that the auctioneer can get for free at the beginning of each type of auction is different.23 and non-deterministic iterative auctions: our proof shows that a non-deterministic iterative auction can elicit the kterm XOR valuations with a polynomial number of demand queries, and [7] show that this elicitation must take an exponential number of demand queries. 23 In ascending auctions, the auctioneer can reveal the most valuable bundle (besides M) before she starts raising the prices, thus she can use this information for adaptively choose the subsequent queries. In descending auctions, one can easily find the bundle with the highest average per-item price, keeping all other bundles with non-positive utilities, and use this information in the adaptive price change. Proposition 5.7. There are classes that cannot be elicited (fully elicited) by ascending item-price auctions, but can be elicited (resp. fully elicited) with a descending item-price auction. Proposition 5.8. There are classes that cannot be elicited (fully elicited) by item-price descending auctions, but can be elicited (resp. fully elicited) by item-price ascending auctions. Deterministic vs. Non-Deterministic Auctions: Nondeterministic ascending auctions can be viewed as auctions where some benevolent teacher that has complete information guides the auctioneer on how she should raise the prices. That is, preference elicitation can be done by a non-deterministic ascending auction, if there is some ascending trajectory that elicits enough information for determining the optimal allocation (and verifying that it is indeed optimal). We show that non-deterministic ascending auctions are more powerful than deterministic ascending auctions: Proposition 5.9. Some classes can be elicited (fully elicited) by an item-price non-deterministic ascending auction, but cannot be elicited (resp. fully elicited) by item-price deterministic ascending auctions. Anonymous vs. Non-Anonymous Auctions: As will be shown in Section 6, the power of anonymous and nonanonymous bundle-price ascending auctions differs significantly. Here, we show that a difference also exists for itemprice ascending auctions. Proposition 5.10. Some classes cannot be elicited by anonymous item-price ascending auctions, but can be elicited by a non-anonymous item-price ascending auction. Sequential vs. Simultaneous Auctions: A non-anonymous auction is called simultaneous if at each stage, the price of some item is raised by for every bidder. The auctioneer can use the information gathered until each stage, in all the personalized trajectories, to determine the next queries. A non-anonymous auction is called sequential if the auctioneer performs an auction for each bidder separately, in sequential order. The auctioneer can determine the next query based on the information gathered in the trajectories completed so far and on the history of the current trajectory. Proposition 5.11. There are classes that cannot be elicited by simultaneous non-anonymous item-price ascending auctions, but can be elicited by a sequential non-anonymous item-price ascending auction. Adaptive vs. Oblivious Auctions: If the auctioneer determines the queries regardless of the bidders responses (i.e., the queries are predefined) we say that the auction is oblivious. Otherwise, the auction is adaptive. We prove that an adaptive behaviour of the auctioneer may be beneficial. Proposition 5.12. There are classes that cannot be elicited (fully elicited) using oblivious item-price ascending auctions, but can be elicited (resp. fully elicited) by an adaptive item-price ascending auction. 40 5.5 Preference Elicitation vs. Full Elicitation Preference elicitation and full elicitation are closely related problems. If full elicitation is easy (e.g., in polynomial time) then clearly elicitation is also easy (by a nonanonymous auction, simply by learning all the valuations separately24 ). On the other hand, there are examples where preference elicitation is considered easy but learning is hard (typically, elicitation requires smaller amount of information; some examples can be found in [7]). The tatonnement algorithms by [22, 12, 16] end up with the optimal allocation for substitutes valuations.25 We prove that we cannot fully elicit substitutes valuations (or even their sub-class of OXS valuations defined in [25]), even for a single bidder, by an item-price ascending auction (although the optimal allocation can be found by an ascending auction for any number of bidders!). Theorem 5.13. Substitute valuations cannot be fully elicited by ascending item-price auctions. Moreover, they cannot be fully elicited by any m 2 ascending trajectories (m > 3). Whether substitutes valuations have a compact representation (i.e., polynomial in the number of goods) is an important open question. As a step in this direction, we show that its sub-class of OXS valuations does have a compact representation: every OXS valuation can be represented by at most m2 values.26 Lemma 5.14. Any OXS valuation can be represented by no more than m2 values. 6. BUNDLE-PRICE ASCENDING AUCTIONS All the ascending auctions in the literature that are proved to find the optimal allocation for unrestricted valuations are non-anonymous bundle-price auctions (iBundle(3) by Parkes and Ungar [37] and the Proxy Auction by Ausubel and Milgrom [3]). Yet, several anonymous ascending auctions have been suggested (e.g., AkBA [42], [21] and iBundle(2) [37]). In this section, we prove that anonymous bundle-price ascending auctions achieve poor results in the worst-case. We also show that the family of non-anonymous bundleprice ascending auctions can run exponentially slower than simple item-price ascending auctions. 6.1 Limitations of Anonymous Bundle-Price Ascending Auctions We present a class of valuations that cannot be elicited by anonymous bundle-price ascending auctions. These valuations are described in Figure 7. The basic idea: for determining some unknown value of one bidder we must raise 24 Note that an anonymous ascending auction cannot necessarily elicit a class that can be fully elicited by an ascending auction. 25 Substitute valuations are defined, e.g., in [16]. Roughly speaking, a bidder with a substitute valuation will continue demand a certain item after the price of some other items was increased. For completeness, we present in the full paper [9] a proof for the efficiency of such auctions for substitutes valuations. 26 A unit-demand valuation is an XOR valuation in which all the atomic bundles are singletons. OXS valuations can be interpreted as an aggregation (OR) of any number of unit-demand bidders. Bid. 1 v1(ac) = 2 v1(bd) = 2 v1(cd) = α ∈ (0, 1) Bid. 2 v2(ab) = 2 v2(cd) = 2 v2(bd) = β ∈ (0, 1) Figure 7: Anonymous ascending bundle-price auctions cannot determine the optimal allocation for this class of valuations. a price of a bundle that should be demanded by the other bidder in the future. Theorem 6.1. Some classes of valuations cannot be elicited by anonymous bundle-price ascending auctions. Proof. Consider a pair of XOR valuations as described in Figure 7. For finding the optimal allocation we must know which value is greater between α and β.27 However, we cannot learn the value of both α and β by a single ascending trajectory: assume w.l.o.g. that bidder 1 demands cd before bidder 2 demands bd (no information will be elicited if none of these happens). In this case, the price for bd must be greater than 1 (otherwise, bidder 1 prefers bd to cd). Thus, bidder 2 will never demand the bundle bd, and no information will be elicited about β. The valuations described in the proof of Theorem 6.1 can be easily elicited by a non-anonymous item-price ascending auction. On the other hand, the valuations in Figure 6 can be easily elicited by an anonymous bundle-price ascending auction. We conclude that the power of these two families of ascending auctions is incomparable. We strengthen the impossibility result above by showing that anonymous bundle-price auctions cannot even achieve better than a min{O(n), O( √ m)}-approximation for the social welfare. This approximation ratio can be achieved with polynomial communication, and specifically with a polynomial number of item-price demand queries.28 Theorem 6.2. An anonymous bundle-price ascending auction cannot guarantee better than a min{ n 2 , √ m 2 } approximation for the optimal welfare. Proof. (Sketch) Assume we have n bidders and n2 items for sale, and that n is prime. We construct n2 distinct bundles with the following properties: for each bidder, we define a partition Si = (Si 1, ..., Si n) of the n2 items to n bundles, such that any two bundles from different partitions intersect. In the full paper, part II [9] we show an explicit construction using the properties of linear functions over finite fields. The rest of the proof is independent of the specific construction. Using these n2 bundles we construct a hard-to-elicit class. Every bidder has an atomic bid, in his XOR valuation, for each of these n2 bundles. A bidder i has a value of 2 for any bundle Si j in his partition. For all bundles in the other partitions, he has a value of either 0 or of 1 − δ, and these values are unknown to the auctioneer. Since every pair of bundles from different partitions intersect, only one bidder can receive a bundle with a value of 2. 27 If α > β, the optimal allocation will allocate cd to bidder 1 and ab to bidder 2. Otherwise, we give bd to bidder 2 and ac to bidder 1. Note that both bidders cannot gain a value of 2 in the same allocation, due to the intersections of the high-valued bundles. 28 Note that bundle-price queries may use exponential communication, thus the lower bound of [32] does not hold. 41 Non-anonymous Bundle-Price Economically-Efficient Ascending Auctions: Initialization: All prices are initialized to zero (non-anonymous bundle prices). Repeat: - Each bidder submits a bundle that maximizes his utility under his current personalized prices. - The auctioneer calculates a provisional allocation that maximizes his revenue under the current prices. - The prices of bundles that were demanded by losing bidders are increased by . Finally: Terminate when the provisional allocation assigns to each bidder the bundle he demanded. Figure 8: Auctions from this family (denoted by NBEA auctions) are known to achieve the optimal welfare. No bidder will demand a low-valued bundle, as long as the price of one of his high-valued bundles is below 1 (and thus gain him a utility greater than 1). Therefore, for eliciting any information about the low-valued bundles, the auctioneer should first arbitrarily choose a bidder (w.l.o.g bidder 1) and raise the prices of all the bundles (S1 1 , ..., S1 n) to be greater than 1. Since the prices cannot decrease, the other bidders will clearly never demand these bundles in future stages. An adversary may choose the values such that the low values of all the bidders for the bundles not in bidder 1s partition are zero (i.e., vi(S1 j ) = 0 for every i = 1 and every j), however, allocating each bidder a different bundle from bidder 1s partition, might achieve a welfare of n+1−(n−1)δ (bidder 1s valuation is 2, and 1 − δ for all other bidders); If these bundles were wrongly allocated, only a welfare of 2 might be achieved (2 for bidder 1s high-valued bundle, 0 for all other bidders). At this point, the auctioneer cannot have any information about the identity of the bundles with the non-zero values. Therefore, an adversary can choose the values of the bundles received by bidders 2, ..., n in the final allocation to be zero. We conclude that anonymous bundleprice auctions cannot guarantee a welfare greater than 2 for this class, where the optimal welfare can be arbitrarily close to n + 1. 6.2 Bundle Prices vs. Item Prices The core of the auctions in [37, 3] is the scheme described in Figure 8 (in the spirit of [35]) for auctions with nonanonymous bundle prices. Auctions from this scheme end up with the optimal allocation for any class of valuations. We denote this family of ascending auctions as NBEA auctions29 . NBEA auctions can elicit k-term XOR valuations by a polynomial (in k) number of steps , although the elicitation of such valuations may require an exponential number of item-price queries ([7]), and item-price ascending auctions cannot do it at all (Theorem 5.4). Nevertheless, we show that NBEA auctions (and in particular, iBundle(3) and the proxy auction) are sometimes inferior to simple item-price demand auctions. This may justify the use of hybrid auctions that use both linear and non-linear prices (e.g., the clock-proxy auction [10]). We show that auctions from this 29 Non-anonymous Bundle-price economically Efficient Ascending auctions. For completeness, we give in the full paper [9] a simple proof for the efficiency (up to an ) of auctions of this scheme . family may use an exponential number of queries even for determining the optimal allocation among two bidders with additive valuations30 , where such valuations can be elicited by a simple item-price ascending auction. We actually prove this property for a wider class of auctions we call conservative auctions. We also observe that in conservative auctions, allowing the bidders to submit all the bundles in their demand sets ensures that the auction runs a polynomial number of steps - if L is not too high (but with exponential communication, of course). An ascending auction is called conservative if it is nonanonymous, uses bundle prices initialized to zero and at every stage the auctioneer can only raise prices of bundles demanded by the bidders until this stage. In addition, each bidder can only receive bundles he demanded during the auction. Note that NBEA auctions are by definition conservative. Proposition 6.3. If every bidder demands a single bundle in each step of the auction, conservative auctions may run for an exponential number of steps even for additive valuations. If the bidders are allowed to submit all the bundles in their demand sets in each step, then conservative auctions can run in a polynomial number of steps for any profile of valuations, as long as the maximal valuation L is polynomial in m, n and 1 δ . Acknowledgments: The authors thank Moshe Babaioff, Shahar Dobzinski, Ron Lavi, Daniel Lehmann, Ahuva Mualem, David Parkes, Michael Schapira and Ilya Segal for helpful discussions. Supported by grants from the Israeli Academy of Sciences and the USAIsrael Binational Science Foundation. 7. REFERENCES [1] amazon. Web Page: http://www.amazon.com. [2] ebay. Web Page: http://www.ebay.com. [3] L. M. Ausubel and P. R. Milgrom. Ascending auctions with package bidding. Frontiers of Theoretical Economics, 1:1-42, 2002. [4] Lawrence Ausubel. An efficient dynamic auction for heterogeneous commodities, 2000. Working paper, University of Maryland. [5] Yair Bartal, Rica Gonen, and Noam Nisan. Incentive compatible multi unit combinatorial auctions. In TARK 03, 2003. [6] Alejandro Bertelsen. Substitutes valuations and m -concavity. M.Sc. Thesis, The Hebrew University of Jerusalem, 2005. [7] Avrim Blum, Jeffrey C. Jackson, Tuomas Sandholm, and Martin A. Zinkevich. Preference elicitation and query learning. Journal of Machine Learning Research, 5:649-667, 2004. [8] Liad Blumrosen and Noam Nisan. On the computational power of iterative auctions I: demand queries. Working paper, The Hebrew University of 30 Valuations are called additive if for any disjoint bundles A and B, v(A ∪ B) = v(A) + v(B). Additive valuations are both sub-additive and super-additive and are determined by the m values assigned for the singletons. 42 Jerusalem. Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [9] Liad Blumrosen and Noam Nisan. On the computational power of iterative auctions II: ascending auctions. Working paper, The Hebrew University of Jerusalem. Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [10] P. Cramton, L.M. Ausubel, and P.R. Milgrom. In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions. Chapter 5. The Clock-Proxy Auction: A Practical Combinatorial Auction Design. MIT Press. Forthcoming, 2005. [11] P. Cramton, Y. Shoham, and R. Steinberg (Editors). Combinatorial Auctions. MIT Press. Forthcoming, 2005. [12] G. Demange, D. Gale, and M. Sotomayor. Multi-item auctions. Journal of Political Economy, 94:863-872, 1986. [13] Shahar Dobzinski, Noam Nisan, and Michael Schapira. Approximation algorithms for cas with complement-free bidders. In The 37th ACM symposium on theory of computing (STOC)., 2005. [14] Shahar Dobzinski and Michael Schapira. Optimal upper and lower approximation bounds for k-duplicates combinatorial auctions. Working paper, the Hebrew University. [15] Combinatorial bidding conference. Web Page: http://wireless.fcc.gov/auctions/conferences/combin2003. [16] Faruk Gul and Ennio Stacchetti. Walrasian equilibrium with gross substitutes. Journal of Economic Theory, 87:95 - 124, 1999. [17] Faruk Gul and Ennio Stacchetti. The english auction with differentiated commodities. Journal of Economic Theory, 92(3):66 - 95, 2000. [18] J. Hastad. Almost optimal lower bounds for small depth circuits. In 18th STOC, pages 6-20, 1986. [19] Ron Holzman, Noa Kfir-Dahav, Dov Monderer, and Moshe Tennenholtz. Bundling equilibrium in combinatrial auctions. Games and Economic Behavior, 47:104-123, 2004. [20] H. Karloff. Linear Programming. Birkh¨auser Verlag, 1991. [21] Frank Kelly and Richard Steinberg. A combinatorial auction with multiple winners for universal service. Management Science, 46:586-596, 2000. [22] A.S. Kelso and V.P. Crawford. Job matching, coalition formation, and gross substitute. Econometrica, 50:1483-1504, 1982. [23] Subhash Khot, Richard J. Lipton, Evangelos Markakis, and Aranyak Mehta. Inapproximability results for combinatorial auctions with submodular utility functions. In Working paper., 2004. [24] Sebastien Lahaie and David C. Parkes. Applying learning algorithms to preference elicitation. In EC 04. [25] Benny Lehmann, Daniel Lehmann, and Noam Nisan. Combinatorial auctions with decreasing marginal utilities. In ACM conference on electronic commerce. To appear, Games and Economic Behaviour., 2001. [26] D. Lehmann, L. OCallaghan, and Y. Shoham. Truth revelation in approximately efficient combinatorial auctions. JACM, 49(5):577-602, Sept. 2002. [27] A. Mas-Collel, W. Whinston, and J. Green. Microeconomic Theory. Oxford university press, 1995. [28] Debasis Mishra and David Parkes. Ascending price vickrey auctions using primal-dual algorithms., 2004. Working paper, Harvard University. [29] Noam Nisan. The communication complexity of approximate set packing and covering. In ICALP 2002. [30] Noam Nisan. Bidding and allocation in combinatorial auctions. In ACM Conference on Electronic Commerce, 2000. [31] Noam Nisan. In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions. Chapter 1. Bidding Languages. MIT Press. Forthcoming, 2005. [32] Noam Nisan and Ilya Segal. The communication requirements of efficient allocations and supporting prices, 2003. Working paper. Available from http://www.cs.huji.ac.il/˜noam/mkts.html Forthcoming in the Journal of Economic Theory. [33] Noam Nisan and Ilya Segal. Exponential communication inefficiency of demand queries, 2004. Working paper. Available from http://www.stanford.edu/ isegal/queries1.pdf. [34] D. C. Parkes and L. H. Ungar. An ascending-price generalized vickrey auction. Tech. Rep., Harvard University, 2002. [35] David Parkes. In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions. Chapter 3. Iterative Combinatorial Auctions. MIT Press. Forthcoming, 2005. [36] David C. Parkes. Iterative combinatorial auctions: Achieving economic and computational efficiency. Ph.D. Thesis, Department of Computer and Information Science, University of Pennsylvania., 2001. [37] David C. Parkes and Lyle H. Ungar. Iterative combinatorial auctions: Theory and practice. In AAAI/IAAI, pages 74-81, 2000. [38] Ariel Rubinstein. Why are certain properties of binary relations relatively more common in natural languages. Econometrica, 64:343-356, 1996. [39] Tuomas Sandholm. Algorithm for optimal winner determination in combinatorial auctions. In Artificial Intelligence, volume 135, pages 1-54, 2002. [40] P. Santi, V. Conitzer, and T. Sandholm. Towards a characterization of polynomial preference elicitation with value queries in combinatorial auctions. In The 17th Annual Conference on Learning Theory, 2004. [41] Ilya Segal. The communication requirements of social choice rules and supporting budget sets, 2004. Working paper. Available from http://www.stanford.edu/ isegal/rules.pdf. [42] P.R. Wurman and M.P. Wellman. Akba: A progressive, anonymous-price combinatorial auction. In Second ACM Conference on Electronic Commerce, 2000. [43] Martin A. Zinkevich, Avrim Blum, and Tuomas Sandholm. On polynomial-time preference elicitation with value queries. In ACM Conference on Electronic Commerce, 2003. 43",
    "original_translation": "En el Poder Computacional de Subastas Iterativas∗ [Resumen Extendido] Liad Blumrosen Escuela de Ingeniería e Informática Universidad Hebrea de Jerusalén Jerusalén, Israel liad@cs.huji.ac.il Noam Nisan Escuela de Ingeniería e Informática Universidad Hebrea de Jerusalén Jerusalén, Israel noam@cs.huji.ac.il RESUMEN Nos embarcamos en un análisis sistemático del poder y limitaciones de las subastas combinatorias iterativas. La mayoría de las subastas combinatorias iterativas existentes se basan en sugerir precios repetidamente para paquetes de artículos y consultar a los postores sobre su demanda bajo estos precios. Demostramos un gran número de resultados que muestran los límites de lo que se puede lograr mediante subastas de este tipo. Primero nos enfocamos en subastas que utilizan un número polinomial de consultas de demanda, y luego analizamos el poder de diferentes tipos de subastas de precio ascendente. Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía Términos Generales Algoritmos, Economía, Teoría 1. Las subastas combinatorias han recibido recientemente mucha atención. En una subasta combinatoria, un conjunto M de m artículos no idénticos se venden en una sola subasta a n postores competidores. Los postores tienen preferencias con respecto a los lotes de artículos que pueden recibir. Las preferencias del postor i están especificadas por una función de valoración vi: 2M → R+, donde vi(S) denota el valor que el postor i asigna a ganar el conjunto de artículos S. Suponemos disposición libre, es decir, que los vi son monótonos no decrecientes. El objetivo habitual del subastador es optimizar el bienestar social P i vi(Si), donde la asignación S1...Sn debe ser una partición de los artículos. Las aplicaciones incluyen muchos problemas complejos de asignación de recursos y, de hecho, las subastas combinatorias pueden ser vistas como la abstracción común de muchos problemas complejos de asignación de recursos. Las subastas combinatorias enfrentan dificultades económicas y computacionales y son un problema central en la frontera recientemente activa de la teoría económica y la informática. Un libro próximo [11] aborda muchos de los problemas involucrados en el diseño e implementación de subastas combinatorias. El diseño de una subasta combinatoria implica muchas consideraciones. En este artículo nos enfocamos en un solo tema central: la comunicación entre los oferentes y el mecanismo de asignación - la obtención de preferencias. Transferir toda la información sobre las preferencias de los licitadores requiere una cantidad de comunicación inasumible (exponencial en m). Por lo tanto, las subastas de revelación directa en las que los postores simplemente declaran sus preferencias al mecanismo solo son prácticas para tamaños de subasta muy pequeños o para familias muy limitadas de preferencias de postores. Por lo tanto, hemos visto una multitud de subastas iterativas sugeridas en las que el protocolo de subasta interactúa repetidamente con los diferentes postores, con el objetivo de obtener de manera adaptativa suficiente información sobre las preferencias de los postores para poder encontrar una asignación buena (óptima o cercana a óptima). La mayoría de las subastas iterativas sugeridas proceden manteniendo precios temporales para los lotes de artículos y consultando repetidamente a los postores sobre sus preferencias entre los lotes bajo el conjunto actual de precios, y luego actualizando el conjunto de precios de los lotes según las respuestas recibidas (por ejemplo, [22, 12, 17, 37, 3]). Efectivamente, una subasta iterativa de este tipo accede a las preferencias de los postores haciendo repetidamente el siguiente tipo de consulta de demanda a los postores: Consulta al postor i: un vector de precios de paquetes p = {p(S)}S⊆M; Respuesta: un paquete de artículos S ⊆ M que maximiza vi(S) − p(S). Estos tipos de consultas son muy naturales en un entorno económico, ya que capturan las preferencias reveladas de los postores. Algunas subastas, llamadas subastas de precio por artículo o de precio lineal, especifican un precio pi para cada artículo, y el precio de cualquier conjunto dado S siempre es lineal, p(S) = Σ i∈S pi. Otras subastas, llamadas subastas de precio por paquete, permiten especificar precios arbitrarios (no lineales) p(S) para los paquetes. Otra diferenciación importante entre los modelos de subastas iterativas se basa en si utilizan precios anónimos o no anónimos: En algunas subastas, los precios que se presentan a los postores son siempre los mismos (precios anónimos). En otras subastas (no anónimas), diferentes postores pueden enfrentar diferentes vectores de precios (discriminatorios). En las subastas de precio ascendente, obligar a que los precios sean anónimos puede ser una restricción significativa. En este artículo, nos embarcamos en un análisis sistemático del poder computacional de las subastas iterativas basadas en consultas de demanda. No buscamos presentar subastas para uso práctico, sino más bien entender las limitaciones y posibilidades de este tipo de subastas. En la primera parte de este documento, nuestra pregunta principal es ¿qué se puede hacer utilizando un número polinómico de este tipo de consultas? Es decir, polinomial en los parámetros principales del problema: n, m y el número de bits t necesarios para representar un único valor vi(S). Ten en cuenta que desde un punto de vista algorítmico estamos hablando de algoritmos de tiempo sublineal: el tamaño de la entrada aquí es realmente n(2m − 1) números, las descripciones de las funciones de valoración de todos los postores. Hay dos aspectos de eficiencia computacional en estos contextos: el primero es la comunicación con los postores, es decir, la cantidad de consultas realizadas, y el segundo es la usual tratabilidad computacional. Nuestros límites inferiores dependerán solo del número de consultas y se mantendrán independientemente de cualquier suposición computacional como P = NP. Nuestros límites superiores siempre serán computacionalmente eficientes tanto en términos del número de consultas como en términos de computación regular. Como se mencionó, este artículo se centra en el único aspecto de la obtención de preferencias y en sus consecuencias computacionales, sin abordar cuestiones de incentivos. Esto refuerza nuestros límites inferiores, pero significa que los límites superiores también requieren evaluación desde esta perspectiva antes de ser utilizados en cualquier subasta combinatoria real. La segunda parte de este documento estudia el poder de las subastas de precio ascendente. Las subastas ascendentes son subastas iterativas donde los precios publicados no pueden disminuir con el tiempo. En este trabajo, intentamos analizar sistemáticamente qué significan las diferencias entre varios modelos de subastas ascendentes. Intentamos responder a las siguientes preguntas: (i) ¿Qué modelos de subastas ascendentes pueden encontrar la asignación óptima, y para qué clases de valoraciones? (ii) En casos donde la asignación óptima no puede ser determinada por subastas ascendentes, ¿qué tan bien pueden estas subastas aproximar el bienestar social? (iii) ¿Cómo se comparan los diferentes modelos de subastas ascendentes? ¿Son algunos modelos computacionalmente más fuertes que otros? Las subastas ascendentes han sido ampliamente estudiadas en la literatura (ver la encuesta reciente de Parkes [35]). La mayor parte de este trabajo presentó límites superiores, es decir, mecanismos propuestos con precios ascendentes y analizó sus propiedades. Un resultado que se acerca más al nuestro es el de Gul y Stacchetti [17], quienes demostraron que ninguna subasta de precio ascendente de artículo puede siempre determinar los precios VCG, incluso para valoraciones de sustitutos. Nuestro marco es más general que la línea tradicional de investigación que se concentra en la asignación final y observamos, sin embargo, que alguna propiedad de incentivo débil viene de forma gratuita en las subastas de consulta de demanda, ya que los jugadores miopes responderán todas las consultas de demanda de manera veraz. También observamos que en algunos casos (¡pero no siempre!) los problemas de incentivos pueden ser manejados de forma ortogonal a los problemas de obtención de preferencias, por ejemplo, utilizando precios de Vickrey-Clarke-Groves (VCG) (por ejemplo, [4, 34]). Además, discutimos este resultado en la Sección 5.3. Subastas iterativas Subastas de demanda Subastas de precio de artículo Subastas de precio anónimo Subastas ascendentes 1 2 3 4 5 6 97 8 10 Figura 1: El diagrama clasifica las siguientes subastas según sus propiedades: (1) La adaptación [12] para la subasta de Kelso & Crawford [22]. (2) La Subasta de Proxy [3] de Ausubel & Milgrom. (3) iBundle(3) de Parkes & Ungar [34]. (4) iBundle(2) de Parkes & Ungar [37]. (5) Nuestra adaptación descendente para la aproximación de 2 para valoraciones submodulares por [25] (ver Subsección 5.4). (6) La subasta de Ausubel [4] para valoraciones de sustitutos. (7) La adaptación de Nisan & Segal [32] de la aproximación O( √ m) por [26]. (8) La subasta de artículo duplicado por [5]. (9) Subasta para fórmulas de Leer-Una-Vez por [43]. (10) La Subasta AkBA por Wurman & Wellman [42]. pagos y en particular, en alcanzar equilibrios walrasianos o equilibrios competitivos. Se sabe que existe un equilibrio walrasiano en el caso de las valoraciones de sustitutos, y se sabe que es imposible para cualquier clase más amplia de valoraciones [16]. Esto no descarta otras asignaciones mediante subastas ascendentes: en este documento consideramos las subastas como un proceso computacional donde el resultado, tanto la asignación como los pagos, pueden determinarse según todos los datos recopilados a lo largo de la subasta; Este marco general refuerza nuestros resultados negativos. Encontramos el estudio de las subastas ascendentes atractivo por diversas razones. Primero, las subastas ascendentes son ampliamente utilizadas en muchos contextos de la vida real, desde las subastas de espectro de la FCC hasta casi cualquier sitio web de comercio electrónico (por ejemplo, [2, 1]). De hecho, esta es quizás la forma más directa de vender artículos: preguntar a los postores qué les gustaría comprar a ciertos precios, y aumentar los precios de los productos con alta demanda. Las subastas ascendentes también se consideran más intuitivas para muchos postores, y se cree que aumentan la confianza de los postores en el subastador, ya que ven el resultado que emerge gradualmente de las respuestas de los postores. Las subastas ascendentes también tienen otras propiedades económicas deseadas, por ejemplo, implican una revelación de información menor (considere, por ejemplo, las subastas inglesas frente a las subastas de segundo precio sellado). 1.1 Trabajo Existente Muchos mecanismos de subasta combinatoria iterativos dependen de consultas de demanda (ver la encuesta en [35]). La Figura 1 muestra un equilibrio walrasiano como un vector de precios de los artículos para los cuales todos los artículos se venden cuando cada postor recibe un conjunto en su conjunto de demanda. En algunos diseños de subasta recientes (por ejemplo, [4, 28]), los pagos no son necesariamente los precios finales de las subastas. Familia de valoración Límite superior Referencia Límite inferior Referencia General min(n, O( √ m)) [26], Sección 4.2 min(n, m1/2− ) [32] Sustitutos 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subaditiva O(logm) [13] 2 [13] k-duplicados O(m1/k+1 ) [14] O(m1/k+1 ) [14] Adquisiciones ln m [32] (log m)/2 [29, 32] Figura 2: Los mejores factores de aproximación actualmente alcanzables por subastas combinatorias computacionalmente eficientes, para varias clases de valoraciones. Todos los límites inferiores en la tabla se aplican a todas las subastas iterativas (excepto la marcada con *); todos los límites superiores en la tabla se logran con consultas de demanda de precio de artículo. Categoriza las clases básicas de subastas implicadas por combinaciones de las propiedades anteriores y clasifica algunas de las subastas propuestas en la literatura de acuerdo con esta clasificación. Para nuestros propósitos, dos familias de estas subastas sirven como los principales puntos de partida motivadores: la primera son las subastas de precio de artículo ascendente de [22, 17] que con eficiencia computacional encuentran una asignación óptima entre valoraciones de sustitutos (brutos), y la segunda son las subastas de precio de paquete ascendente de [37, 3] que encuentran una asignación óptima entre valoraciones generales, pero no necesariamente con eficiencia computacional. El límite inferior principal en esta área, debido a [32], establece que, de hecho, debido a los requisitos de comunicación inherentes, no es posible que ninguna subasta iterativa encuentre la asignación óptima entre valoraciones generales con un número subexponencial de consultas. Un límite inferior exponencial similar fue demostrado en [32] también para aproximar de manera óptima la asignación dentro de un factor de m1/2−. Se conocen varios límites inferiores y superiores para la aproximación de algunas clases naturales de valoraciones, los cuales se resumen en la Figura 2. En [32], también se muestra la universalidad de las consultas de demanda: cualquier protocolo de comunicación no determinista para encontrar una asignación que optimice el bienestar social puede convertirse en uno que solo utilice consultas de demanda (con precios de paquetes). En [41] esto también se generalizó a protocolos no deterministas para encontrar asignaciones que satisfacen otros tipos naturales de requisitos económicos (por ejemplo, eficiencia social aproximada, ausencia de envidia). Sin embargo, en [33] se demostró que esta completitud de las consultas de demanda solo se cumple en el entorno no determinista, mientras que en el entorno determinista habitual, las consultas de demanda (incluso con precios de paquetes) pueden ser exponencialmente más débiles que la comunicación general. Las subastas de precio por paquete son una generalización de las subastas de precio por artículo (más naturales e intuitivas). Se sabe que las subastas de precio de artículo pueden ser exponencialmente más débiles: un buen ejemplo es el caso de valoraciones que son un XOR de k paquetes, donde k es pequeño (digamos, polinómico). Lahaie y Parkes [24] muestran una subasta de precio de paquete económicamente eficiente que utiliza un número polinómico de consultas siempre que k sea polinómico. Por el contrario, [7] muestra que existen valoraciones que son XORs de k = √ m paquetes, de tal manera que cualquier subasta de precio de artículo que encuentre una asignación óptima entre ellos requiere un número exponencial de consultas. Estos resultados forman parte de una línea reciente de investigación ([7, 43, 24, 40]) que estudia el problema de la obtención de preferencias en subastas combinatorias y su relación con el problema de obtención completo (es decir, aprender las valoraciones exactas de los postores). Estas son valoraciones donde los postores tienen valores para k paquetes específicos, y el valor de cada conjunto es el valor máximo de uno de estos paquetes que contiene. Estos documentos adaptan métodos de la teoría del aprendizaje automático al entorno de subastas combinatorias. El problema de la obtención de preferencias y el problema de la obtención completa se relacionan con un problema bien estudiado en microeconomía conocido como el problema de integrabilidad (ver, por ejemplo, [27]). Este problema estudia si y cuándo se puede derivar la función de utilidad de un consumidor a partir de su función de demanda. Organización del documento: Debido al relativamente gran número de resultados que presentamos, comenzamos con una revisión de nuestros nuevos resultados en la Sección 2. Después de describir nuestro modelo formal en la Sección 3, presentamos nuestros resultados sobre el poder de las consultas de demanda en la Sección 4. Luego, describimos el poder de las subastas ascendentes de precio de artículo (Sección 5) y las subastas ascendentes de precio de paquete (Sección 6). Los lectores que estén principalmente interesados en la discusión autocontenida de las subastas ascendentes pueden omitir la Sección 4. Las pruebas faltantes de la Sección 4 se pueden encontrar en la parte I del artículo completo ([8]). Las pruebas faltantes de las Secciones 5 y 6 se pueden encontrar en la parte II del artículo completo ([9]). 2. Una encuesta de nuestros resultados Nuestro análisis sistemático está compuesto por la combinación de un número bastante grande de resultados que caracterizan el poder y las limitaciones de varias clases de subastas. En esta sección, presentaremos una exposición describiendo nuestros nuevos resultados. Primero discutimos el poder de las subastas iterativas de demanda-consulta, y luego dirigimos nuestra atención a las subastas ascendentes. La Figura 3 resume algunos de nuestros principales resultados. 2.1 Comparación de consultas de demanda de tipos de consultas Preguntamos primero qué otros tipos naturales de consultas podríamos imaginar que las subastas iterativas utilicen. Aquí hay una lista de tales consultas que son naturales, han sido utilizadas en la literatura, o que encontramos útiles. 1. Consulta de valor: El subastador presenta un paquete S, el postor informa su valor v(S) para este paquete. 2. Consulta de valor marginal: El subastador presenta un paquete A y un artículo j, el postor informa cuánto está dispuesto a pagar por j, dado que ya posee A, es decir, v(j|A) = v(A ∪ {j}) − v(A). 3. Consulta de demanda (con precios de los artículos): El subastador presenta un vector de precios de los artículos p1...pm; el postor informa su demanda bajo estos precios, es decir, algún conjunto S que maximiza v(S) − Σ i∈S pi. Se debe especificar una regla de desempate. ¿Todos nuestros resultados 31 Restricción de Comunicación pueden encontrar una asignación óptima? Límite superior para el bienestar aprox. Límite inferior para el bienestar aproximado. Consultas de demanda de precio de artículo Sí 1 1 Poli. Comunicación No [32] min(n, O(m1/2 )) [26] min(n, m1/2− ) [32] Poli. Consultas de demanda de precio de artículo No [32] min(n, O(m1/2 )) min(n, m1/2− ) [32] Poli. Este documento estudia la eficiencia económica de subastas que siguen ciertas restricciones de comunicación. Para cada clase de subastas, la tabla muestra si se puede lograr la asignación óptima, o en su defecto, qué tan bien se puede aproximar (tanto los límites superiores como los límites inferiores). Los nuevos resultados están resaltados. Abreviaturas: Poly. (número/tamaño polinomial), AA (subastas ascendentes). - significa que actualmente no se conoce nada excepto soluciones triviales. 4. Consulta de utilidad indirecta: El subastador presenta un conjunto de precios de los artículos p1...pm, y el postor responde con su utilidad indirecta bajo estos precios, es decir, la utilidad más alta que puede lograr de un conjunto bajo estos precios: maxS⊆M (v(S) − P i∈S pi). Consulta de demanda relativa: el subastador presenta un conjunto de precios no nulos p1...pm, y el postor informa el conjunto que maximiza su valor por unidad de dinero, es decir, algún conjunto que maximiza v(S)P i∈S pi. Teorema: Cada una de estas consultas puede ser simulada eficientemente (es decir, en tiempo polinómico en n, m y el número de bits de precisión t necesarios para representar un único valor vi(S)) por una secuencia de consultas de demanda con precios de artículos. En particular, esto muestra que las consultas de demanda pueden obtener toda la información sobre una valoración al simular todas las consultas de valor de 2m −1. También observamos que las consultas de valor y las consultas de valor marginal pueden simularse mutuamente en tiempo polinómico y que las consultas de demanda y las consultas de utilidad indirecta también pueden simularse mutuamente en tiempo polinómico. Demostramos que puede ser necesario realizar exponencialmente muchas consultas de valor para simular una sola consulta de demanda. Es interesante notar que para la clase restringida de valoraciones sustitutivas, las consultas de demanda pueden ser simuladas por un número polinomial de consultas de valor [6]. Aproximación del bienestar La siguiente pregunta que nos hacemos es ¿qué tan bien puede aproximar una subasta computacionalmente eficiente que solo utiliza consultas de demanda la asignación óptima? Se conocen dos obstáculos separados: En [32], se demostró una cota inferior de min(n, m1/2− ), para cualquier fijo > 0, para el factor de aproximación aplicable para cualquier regla de desempate fija. Esto es exactamente la utilidad lograda por el paquete que se devolvería en una consulta de demanda con los mismos precios. Esta noción se relaciona con la función de utilidad indirecta estudiada en la literatura microeconómica (ver, por ejemplo, [27]). Nota que cuando todos los precios son 1, el postor en realidad informa el paquete con el precio por artículo más alto. Encontramos este tipo de consulta útil, por ejemplo, en el diseño del algoritmo de aproximación descrito en la Figura 5 de la Sección 4.2, obtenido utilizando cualquier cantidad polinómica de comunicación. Un límite computacional con el mismo valor se aplica incluso para el caso de postores de mente única, pero bajo la suposición de NP = ZPP [39]. Como se señala en [32], el algoritmo voraz computacionalmente eficiente de [26] puede adaptarse para convertirse en una subasta iterativa de tiempo polinómico que logra un factor de aproximación casi coincidente de min(n, O( √ m)). Esta subasta iterativa puede implementarse con consultas de demanda de precios por paquete, pero, hasta donde vemos, no como una con precios por artículo. Dado que en una consulta de demanda de precio de paquete único se pueden presentar un número exponencial de precios, este algoritmo puede tener un costo de comunicación exponencial. En la Sección 4.2, describimos una subasta de precio de artículo diferente que logra el mismo factor de aproximación con un número polinomial de consultas (y por lo tanto con una comunicación polinomial). Teorema: Existe una subasta iterativa computacionalmente eficiente con consultas de demanda de precios de artículos que encuentra una asignación que aproxima el bienestar óptimo entre valoraciones arbitrarias dentro de un factor de min(n, O( √ m)). Uno puede intentar obtener un factor de aproximación utilizando subastas iterativas que solo utilicen las consultas de valor más débiles. Sin embargo, demostramos que esto es imposible: Teorema: Cualquier subasta iterativa que utilice un número polinómico (en n y m) de consultas de valor no puede lograr un factor de aproximación mejor que O( m log m ). Sin embargo, cabe destacar que las subastas con solo consultas de valor no son completamente triviales en poder: las subastas de agrupación de Holzman et al. [19] pueden implementarse fácilmente mediante un número polinómico de consultas de valor y pueden lograr un factor de aproximación de O( m√ log m ) utilizando O(log m) paquetes de tamaño equitativo. No sabemos cómo cerrar la brecha (pequeña) entre este límite superior y nuestro límite inferior. Representando precios de paquetes. Luego abordamos un problema crítico con las subastas de precios de paquetes que fue evitado por nuestro modelo, así como por todos los trabajos anteriores que utilizaron subastas de precios de paquetes: ¿cómo se representan los precios de los paquetes? Para subastas de precio de artículo, esto no es un problema ya que una consulta solo necesita especificar un pequeño número, m, de precios. En las subastas de precios por paquetes, esa situación es más difícil ya que hay exponencialmente muchos paquetes que requieren fijar precios. Nuestro modelo básico (como todos los trabajos anteriores que utilizaron precios de paquete, por ejemplo, [37, 34, 3]), ignora este problema y solo requiere que los precios sean determinados, de alguna manera, por el protocolo. Un modelo más refinado fijaría un idioma específico para denotar los precios de los paquetes, obligaría al protocolo a representar los precios de los paquetes en este idioma y requeriría que las representaciones de los precios de los paquetes también fueran polinomiales. ¿Cómo podría ser un lenguaje para denotar precios de todos los paquetes? Primero, hay que tener en cuenta que especificar un precio para cada paquete es equivalente a especificar una valoración. Segundo, como se señala en [31], la mayoría de los lenguajes de oferta propuestos son en realidad solo lenguajes para representar valoraciones, es decir, una representación sintáctica de valoraciones, por lo tanto podríamos usar cualquiera de ellos. Este punto de vista abre el tema general de qué idioma se debe utilizar en las subastas de precios en paquete y cuáles son las implicaciones de esta elección. Aquí iniciamos esta línea de investigación. Consideramos subastas de precios de paquetes donde los precios deben ser dados como una oferta XOR, es decir, el protocolo debe indicar explícitamente el precio de cada paquete cuyo valor sea diferente al de todos sus subconjuntos adecuados. Es importante tener en cuenta que todas las subastas de precios por paquetes que no especifiquen explícitamente un idioma de oferta deben usar implícitamente este idioma o uno menos restrictivo, ya que sin un idioma específico se necesitaría listar los precios de todos los paquetes, quizás excepto los triviales (aquellos con valor 0, o más generalmente, aquellos cuyo valor está determinado por uno de sus subconjuntos propios). Mostramos que una vez que se tiene en cuenta la longitud de la representación de los precios de los paquetes (utilizando el lenguaje XOR), las subastas de precios de paquetes ya no son estrictamente más fuertes que las subastas de precios de artículos. Define el costo de una subasta iterativa como la longitud total de las consultas y respuestas utilizadas a lo largo de la subasta (en el peor de los casos). Teorema: Para alguna clase de valoraciones, las subastas de precios de paquetes que utilizan el lenguaje XOR requieren un costo exponencial para encontrar la asignación óptima. Por el contrario, las subastas de precio por artículo pueden encontrar la asignación óptima para esta clase dentro de un costo polinómico. Esto pone en duda la aplicabilidad de las subastas de precio por paquete como [3, 37], y puede justificar el uso de métodos de fijación de precios híbridos como la subasta de reloj-proxy de Ausubel, Cramton y Milgrom ([10]). Las consultas de demanda y los programas lineales. El problema de determinación del ganador en subastas combinatorias puede formularse como un programa entero. En muchos casos, resolver la relajación del programa lineal de este programa entero es útil: para algunas clases restringidas de valoraciones, encuentra el óptimo del programa entero (por ejemplo, valoraciones de sustitución [22, 17]) o ayuda a aproximar el óptimo (por ejemplo, mediante redondeo aleatorio [13, 14]). Sin embargo, el programa lineal tiene un número exponencial de variables. Nisan y Segal [32] observaron el sorprendente hecho de que, a pesar de ello, nuestra prueba se basa en los sofisticados límites inferiores conocidos para circuitos de profundidad constante. No pudimos encontrar una prueba elemental. Dado el número exponencial de variables, este programa lineal puede resolverse con comunicación polinómica. La idea básica es resolver el programa dual utilizando el método del Elipsoide (ver, por ejemplo, [20]). El programa dual tiene un número polinomial de variables, pero un número exponencial de restricciones. El algoritmo de Elipsoide se ejecuta en tiempo polinómico incluso en tales programas, siempre que se proporcione un oráculo de separación para el conjunto de restricciones. Sorprendentemente, dicho oráculo de separación puede implementarse utilizando una sola consulta de demanda (con precios de los artículos) a cada uno de los postores. El tratamiento de [32] fue algo improvisado para el problema en cuestión (el caso de las valoraciones de sustitución). Aquí presentamos una forma algo más general de esta importante observación. Llamemos a la siguiente clase de programas lineales relajación de determinación de ganadores generalizada (GWDR) LPs: Maximizar X i∈N,S⊆M wi xi,S vi(S) sujeto a. El caso donde wi = 1, di = 1, qj = 1 (para cada i, j) es la relajación lineal habitual del problema de determinación del ganador. Más generalmente, wi puede ser visto como el peso dado al bienestar del postor, qj puede ser visto como la cantidad de unidades del bien j, y di puede ser visto como la duplicidad del número de postores del tipo i. Teorema: Cualquier programa lineal de GWDR puede ser resuelto en tiempo polinómico (en n, m y el número de bits de precisión t) usando solo consultas de demanda con precios de los artículos. Subastas ascendentes de precios de artículos: Es bien sabido que las subastas ascendentes de precios de artículos de Kelso y Crawford [22] y sus variantes [12, 16] encuentran la asignación óptima siempre y cuando las valoraciones de todos los jugadores tengan la propiedad de sustitutos. La pregunta obvia es si se puede encontrar la asignación óptima para una clase más amplia de valoraciones. Nuestro resultado principal aquí es un resultado negativo fuerte: Teorema: Existe un problema de 2 elementos y 2 jugadores donde ninguna subasta de precio ascendente puede encontrar la asignación óptima. Esto contrasta tanto con el poder de las subastas ascendentes de precios de paquetes como con el poder de las consultas generales de demanda de precios de artículos (ver arriba), ambos de los cuales siempre pueden encontrar la asignación óptima e incluso proporcionar una completa obtención de preferencias. La misma prueba demuestra un resultado de imposibilidad similar para otros tipos de subastas (por ejemplo, subastas descendentes, subastas no anónimas). Más extensión de este resultado: • Obtener algunas clases de valoraciones requiere un número exponencial de trayectorias ascendentes de precios de artículos. La solución óptima producida tendrá un soporte polinómico y, por lo tanto, puede ser listada completamente. • Se necesitan al menos k − 1 trayectorias ascendentes de precios de artículos para obtener fórmulas XOR con k términos. Este resultado es en cierto sentido ajustado, ya que demostramos que cualquier fórmula XOR de k términos puede ser completamente revelada por k−1 subastas ascendentes no determinísticas (es decir, cuando algún profesor externo instruye al subastador sobre cómo aumentar los precios). También demostramos que las subastas ascendentes de precio de artículo y las subastas iterativas limitadas a un número polinómico de consultas (de cualquier tipo, no necesariamente ascendentes) son incomparables en su poder: las subastas ascendentes, con incrementos lo suficientemente pequeños, pueden revelar las preferencias en casos donde cualquier número polinómico de consultas no puede. Motivados por varios artículos recientes que estudiaron la relación entre la obtención y la obtención completa de las preferencias en subastas combinatorias (por ejemplo, [7, 24]), exploramos la diferencia entre estos problemas en el contexto de subastas ascendentes. Mostramos que aunque una subasta ascendente única puede determinar la asignación óptima entre cualquier número de postores con valoraciones sustitutivas, no puede obtener completamente dicha valoración ni siquiera para un único postor. Aunque se demostró en [25] que el conjunto de valoraciones de sustitutos tiene medida cero en el espacio de valoraciones generales, no se conoce su dimensión, y en particular aún está abierto si una cantidad polinómica de información es suficiente para describir una valoración de sustitutos. Si bien nuestro resultado puede ser un pequeño paso en esa dirección (una elicitación completa de polinomios aún puede ser posible con otros protocolos de comunicación), señalamos que nuestro resultado de imposibilidad también se aplica a valoraciones en la clase OXS definida por [25], valoraciones que podemos demostrar tienen una representación compacta. También presentamos varios resultados que separan el poder de diferentes modelos para subastas combinatorias ascendentes que utilizan precios de artículos: demostramos, como era de esperar, que las subastas ascendentes adaptativas son más poderosas que las subastas ascendentes obvias y que las subastas ascendentes no deterministas son más poderosas que las subastas ascendentes deterministas. También comparamos diferentes tipos de subastas no anónimas (por ejemplo, simultáneas o secuenciales), y observamos que las subastas anónimas de precio por lote y las subastas no anónimas de precio por artículo son incomparables en su poder. Finalmente, motivados por las subastas holandesas, consideramos las subastas descendentes y cómo se comparan con las ascendentes; mostramos clases de valoraciones que pueden ser obtenidas mediante subastas ascendentes de precio de artículo pero no mediante subastas descendentes de precio de artículo, y viceversa. Subastas ascendentes de precio por paquetes: Todas las subastas ascendentes de precio por paquetes conocidas que son capaces de encontrar la asignación óptima entre valoraciones generales (con disposición libre) utilizan precios no anónimos. Las subastas anónimas de precio ascendente (por ejemplo, [42, 21, 37]) solo se sabe que pueden encontrar la asignación óptima entre valoraciones superaditivas o algunas otras clases simples ([36]). Demostramos que esto no es un error: Teorema: Ninguna subasta ascendente con precios anónimos puede encontrar la asignación óptima entre valoraciones generales. La computación no determinista se utiliza ampliamente en informática y también en economía (por ejemplo, un equilibrio walrasiano o [38]). En algunos contextos, los modelos deterministas y no deterministas tienen igual poder (por ejemplo, en la computación con autómatas finitos). Este límite es independiente del tiempo de ejecución, y también se aplica a subastas descendentes y subastas no determinísticas. Fortalecemos significativamente este resultado al demostrar que las subastas ascendentes anónimas no pueden producir una aproximación mejor que O( √ m) - la proporción de aproximación que se puede lograr con un número polinomial de consultas ([26, 32]) y, como se mencionó, con un número polinomial de consultas de demanda de precio de artículo. El mismo límite inferior claramente se aplica a las subastas anónimas de artículos y precios ascendentes, ya que dichas subastas pueden ser simuladas por subastas anónimas de paquetes y precios ascendentes. Actualmente no tenemos ningún límite inferior en la aproximación alcanzable por subastas ascendentes de artículos y precios no anónimas. Finalmente, estudiamos el rendimiento de las subastas ascendentes existentes computacionalmente eficientes. Estos protocolos ([37, 3]) requieren tiempo exponencial en el peor de los casos, y esto es inevitable como se muestra en [32]. Sin embargo, también observamos que estas subastas, al igual que toda la clase de subastas de precios de paquetes ascendentes similares, requieren un tiempo exponencial incluso para valoraciones aditivas simples. Esto es evitable y de hecho, las subastas ascendentes de precio de artículo de [22] pueden encontrar la asignación óptima para estas valoraciones simples con comunicación polinómica. 3. El MODELO 3.1 Subastas Discretas para Valores Continuos Nuestro modelo tiene como objetivo capturar subastas iterativas que operan en valuaciones de valores reales. Existe una ligera dificultad técnica aquí al tratar de superar la brecha entre la naturaleza discreta de una subasta iterativa y la naturaleza continua de las valoraciones. Este es exactamente el mismo problema que al modelar una subasta inglesa simple. Hay tres formas estándar formales de modelarlo: 1. Modelar la subasta como un proceso continuo y estudiar su trayectoria en el tiempo. Por ejemplo, la subasta japonesa, también conocida como subasta holandesa, es básicamente un modelo continuo de un modelo inglés. Modelar la subasta como discreta y las valoraciones como continuas. En este caso introducimos un parámetro y generalmente requerimos que la subasta produzca resultados que estén cerca de lo óptimo. 3. Modelar las valoraciones como discretas. En este caso asumiremos que todas las valoraciones son múltiplos enteros de alguna cantidad fija pequeña δ, por ejemplo, 1 centavo. Toda comunicación en este caso es naturalmente finita. En este documento utilizamos la última formulación y asumimos que todos los valores son múltiplos de algún δ. Por lo tanto, en algunas partes del documento asumimos sin pérdida de generalidad que δ = 1, por lo tanto todas las valoraciones son enteras. Casi todos (si no todos) nuestros resultados se pueden traducir a los otros dos modelos con poco esfuerzo. 3.2 Valoraciones Un único subastador está vendiendo m artículos indivisibles no homogéneos en una sola subasta, y sea M el conjunto de estos 13 Otro modelo similar es el modelo de cuchillos móviles en la literatura de corte de pasteles. 34 artículos y sea N el conjunto de postores. Cada uno de los n postores en la subasta tiene una función de valoración vi : 2m → {0, δ, 2δ, ..., L}, donde para cada conjunto de artículos S ⊆ M, vi(S) denota el valor del postor i por el conjunto S y es un múltiplo de δ en el rango 0...L. A veces denotaremos el número de bits necesarios para representar tales valores en el rango 0...L por t = log L. Suponemos disposición libre, es decir, S ⊆ T implica vi(S) ≤ vi(T) y que vi(∅) = 0 para todos los postores. Mencionaremos las siguientes clases de valoraciones: • Una valoración se llama submodular si para todos los conjuntos de elementos A y B tenemos que v(A ∪ B) + v(A ∩ B) ≤ v(A) + v(B). • Una valoración se llama superaditiva si para todos los conjuntos disjuntos de elementos A y B tenemos que v(A∪B) ≥ v(A)+ v(B). • Una valoración se llama un XOR de k-bundles si puede representarse como una combinación XOR de a lo sumo k ofertas atómicas [30], es decir, si hay a lo sumo k bundles Si y precios pi tales que para todo S, v(S) = maxi|S⊇Si pi. Tales valoraciones serán denotadas por v = (S1 : p1) ⊕ (S2 : p2) ⊕ . . . ⊕ (Sk : pk).14 3.3 Subastas Iterativas El subastador establece un protocolo (equivalentemente un algoritmo), donde en cada etapa del protocolo se envía cierta información q - denominada la consulta - a algún postor i, y luego el postor i responde con una respuesta que depende de la consulta así como de su propia valoración. En este documento, asumimos que tenemos control total sobre el comportamiento de los postores, por lo que el protocolo también define una función de respuesta ri(q, vi) que especifica la respuesta del postor a la consulta q. El protocolo puede ser adaptativo: el valor de la consulta, así como el postor consultado, pueden depender de las respuestas recibidas para consultas anteriores. Al final del protocolo, se debe declarar una asignación S1...Sn, donde Si ∩ Sj = ∅ para i = j. Decimos que la subasta encuentra una asignación óptima si encuentra la asignación que maximiza el bienestar social Σ vi(Si). Decimos que se encuentra una c-aproximación si P i vi(Si) ≥ P i vi(Ti)/c donde T1...Tn es una asignación óptima. El tiempo de ejecución de la subasta en una instancia dada de las valoraciones de los postores es el número total de consultas realizadas en esta instancia. El tiempo de ejecución de un protocolo es el costo en el peor caso sobre todas las instancias. Cabe destacar que no imponemos limitaciones computacionales en el protocolo ni en los jugadores. Esto, por supuesto, solo refuerza nuestros resultados de dificultad. Sin embargo, nuestros resultados positivos no utilizarán este poder y serán eficientes también en el sentido computacional habitual. Nuestro objetivo será diseñar protocolos computacionalmente eficientes. Consideraremos un protocolo eficiente computacionalmente si su costo es polinómico en los parámetros relevantes: el número de postores n, el número de artículos m y t = log L, donde L es el valor máximo posible de un paquete. Sin embargo, cuando discutimos subastas de precio ascendente y sus variantes, se requerirá un protocolo computacionalmente eficiente. Por ejemplo, v = (abcd : 5) ⊕ (ab : 3) ⊕ (c : 4) denota la valoración XOR con los términos abcd, ab, c y precios 5, 3, 4 respectivamente. Para esta valoración, v(abcd) = 5, v(abd) = 3, v(abc) = 4. El tiempo de ejecución realmente mide los costos de comunicación y no el tiempo de ejecución computacional. Pseudo-polinómico, es decir, debería requerir un número de consultas que sea polinómico en m, n y L δ. Esto se debe a que las subastas ascendentes generalmente no pueden lograr esos tiempos de ejecución (considera incluso la subasta inglesa de un solo artículo). Cabe destacar que todos nuestros resultados proporcionan límites concretos, donde la dependencia de los parámetros se expresa explícitamente; utilizamos la notación estándar de big-Oh solo como una abreviatura. Decimos que una subasta obtiene algunas clases V de valoraciones, si determina la asignación óptima para cualquier perfil de valoraciones extraídas de V; Decimos que una subasta obtiene completamente alguna clase de valoraciones V, si puede aprender completamente cualquier valoración única v ∈ V (es decir, aprender v(S) para cada S). 3.4 Consultas de demanda y subastas ascendentes La mayor parte del documento se ocupará de un caso especial común de subastas iterativas que denominamos subastas de demanda. En tales subastas, las consultas que se envían a los postores son consultas de demanda: la consulta especifica un precio p(S) ∈ + para cada conjunto S. La respuesta del postor i es simplemente el conjunto más deseado - demandado - bajo estos precios. Formalmente, un conjunto S que maximiza vi(S) − p(S). Puede suceder que más de un conjunto S maximice este valor. En caso de empate, se resuelven de acuerdo con una regla fija de desempate, por ejemplo, se devuelve el conjunto que sea el primero en orden lexicográfico. Todos nuestros resultados son válidos para cualquier regla de desempate fija. Las subastas ascendentes son subastas iterativas con precios no decrecientes: Definición 1. En una subasta ascendente, los precios en las ofertas al mismo postor solo pueden aumentar con el tiempo. Formalmente, sea p una consulta realizada por el postor i, y q una consulta realizada por el postor i en una etapa posterior del protocolo. Entonces, para todos los conjuntos S, q(S) ≥ p(S). Una variante similar, que también estudiamos y que también es común en la vida real, son las subastas descendentes, en las que los precios solo pueden disminuir con el tiempo. Cabe destacar que el término subasta ascendente se refiere a una subasta con una única trayectoria ascendente de precios. Puede ser útil definir subastas ascendentes de múltiples trayectorias, en las que los precios pueden reiniciarse a cero varias veces (ver, por ejemplo, [4]). Consideramos dos restricciones principales en los tipos de consultas de demanda permitidas: Definición 2. Precios de los artículos: Los precios en cada consulta son dados por los precios pj para cada artículo j. El precio de un conjunto S es aditivo: p(S) = Σ j∈S pj. Definición 3. Precios anónimos: Los precios vistos por los postores en cualquier etapa de la subasta son los mismos, es decir, cada vez que se realiza una consulta a un postor, la misma consulta también se realiza a todos los demás postores (con los precios sin cambios). En subastas con precios no anónimos (discriminatorios), cada postor i tiene precios personalizados denotados por pi (S). En este documento, todas las subastas son anónimas a menos que se especifique lo contrario. Ten en cuenta que aunque en nuestro modelo las valoraciones son integrales (o múltiplos de algún δ), permitimos la consulta de demanda a 16 La mayoría de las subastas que presentamos pueden adaptarse para ejecutarse en tiempo polinómico en log L, utilizando un procedimiento similar a una búsqueda binaria, perdiendo su naturaleza ascendente. 17 Ten en cuenta que una subasta no anónima claramente puede ser simulada por n subastas anónimas en paralelo. 35 utiliza números reales arbitrarios en +. Es decir, asumimos que el incremento que utilizamos en las subastas ascendentes puede ser significativamente menor que δ. Todos nuestros resultados de dureza se mantienen para cualquier , incluso para incrementos de precios continuos. Un problema práctico aquí es cómo se especificará la consulta: en el caso general, se necesita enviar un número exponencial de precios en una sola consulta. Formalmente, esto no es un problema ya que el modelo no limita la longitud de las consultas de ninguna manera; el protocolo simplemente debe definir cuáles son los precios en función de las respuestas recibidas a consultas anteriores. Investigaremos este problema más a fondo en la Sección 4.3. 4. En esta sección, estudiamos el poder de las subastas iterativas que utilizan consultas de demanda (no necesariamente ascendentes). Empezamos comparando las consultas de demanda con otros tipos de consultas. Luego, discutimos qué tan bien se puede aproximar el bienestar óptimo utilizando un número polinomial de consultas de demanda. También iniciamos el estudio de la representación de consultas de demanda de precios de paquetes, y finalmente, mostramos cómo las consultas de demanda ayudan a resolver la relajación de programación lineal de subastas combinatorias en tiempo polinómico. 4.1 El poder de los diferentes tipos de consultas En esta sección comparamos el poder de los diversos tipos de consultas definidos en la Sección 2. Presentaremos simulaciones computacionalmente eficientes de estos tipos de consultas utilizando consultas de demanda de precio de artículo. En la Sección 5.1 mostramos que estas simulaciones también se pueden realizar utilizando subastas ascendentes de precio de artículo. Lema 4.1. Una consulta de valor puede ser simulada por m consultas de valor marginal. Una consulta de valor marginal puede ser simulada por dos consultas de valor. Lema 4.2. Una consulta de valor puede ser simulada por consultas de demanda (donde t = log L es el número de bits necesarios para representar un valor de paquete único). Como corolario directo, obtenemos que las subastas de demanda siempre pueden obtener completamente las valoraciones de los postores al simular todas las posibles 2m − 1 consultas y, por lo tanto, obtener suficiente información para determinar la asignación óptima. Sin embargo, cabe destacar que esta inducción puede ser computacionalmente ineficiente. El siguiente lema muestra que las consultas de demanda pueden ser exponencialmente más poderosas que las consultas de valor. Lema 4.3. Puede ser necesario un número exponencial de consultas de valor para simular una sola consulta de demanda. Las consultas de utilidad indirecta son, sin embargo, equivalentes en poder a las consultas de demanda: Lema 4.4. Una consulta de utilidad indirecta puede ser simulada por mt + 1 consultas de demanda. Una consulta de demanda puede ser simulada por m + 1 consultas de utilidad indirecta. Las consultas de demanda también pueden simular consultas de demanda relativa: 19 18 Tenga en cuenta que las consultas de demanda de precios de paquetes pueden simular fácilmente una consulta de valor configurando los precios de todos los paquetes excepto S (el paquete con el valor desconocido) en L, y realizando una búsqueda binaria en el precio de S. 19 Nota: aunque en nuestro modelo los valores son enteros (múltiplos de δ), permitimos que los precios de las consultas sean números reales arbitrarios. Abreviaturas: V (consulta de valor), MV (consulta de valor marginal), D (consulta de demanda), IU (consulta de utilidad indirecta), RD (consulta de demanda relativa). Lema 4.5. Las consultas de demanda relativa pueden ser simuladas por un número polinomial de consultas de demanda. Según nuestra definición de consultas de demanda relativa, claramente no pueden simular consultas de valor par. La Figura 4 resume las relaciones entre estos tipos de consultas. 4.2 Aproximando el Bienestar Social con Consultas de Valor y Demanda Sabemos por [32] que las subastas combinatorias iterativas que solo utilizan un número polinómico de consultas no pueden encontrar una asignación óptima entre valoraciones generales y de hecho ni siquiera pueden aproximarla a un factor mejor que min{n, m1/2− }. En esta sección preguntamos qué tan bien se puede hacer esta aproximación utilizando consultas de demanda con precios de los artículos, o utilizando las consultas de valor más débiles. Mostramos que, utilizando consultas de demanda, se puede igualar el límite inferior, mientras que las consultas de valor solo pueden hacer mucho peor. La Figura 5 describe un algoritmo de tiempo polinómico que logra una proporción de aproximación de min(n, O( √ m)). Este algoritmo elige de forma codiciosa los paquetes que maximizan el valor por ítem de los postores (utilizando consultas de demanda relativa, ver Sección 4.1). Como paso final, asigna todos los artículos a un único postor si mejora el bienestar social (esto se puede verificar utilizando consultas de valor). Dado que tanto las consultas de valor como las consultas de demanda relativa pueden ser simuladas por un número polinomial de consultas de demanda con precios de los artículos (Lemas 4.2 y 4.5), este algoritmo puede ser implementado por un número polinomial de consultas de demanda con precios de los artículos. Teorema 4.6. La subasta descrita en la Figura 5 puede ser implementada mediante un número polinomial de consultas de demanda y logra una aproximación de min{n, 4 √ m} para el bienestar social. Ahora nos preguntamos qué tan bien se puede aproximar el bienestar óptimo mediante un número polinómico de consultas de valor. Primero notamos que las consultas de valor no son completamente inútiles: En [19] se muestra que si los m elementos se dividen en k paquetes fijos de tamaño m/k cada uno, y estos paquetes fijos se subastan como si cada uno fuera indivisible, entonces el bienestar social bers, por lo tanto, podemos tener paquetes con demandas relativas arbitrariamente cercanas. En este sentido, la simulación anterior es solo hasta un cierto límite (y el número de consultas es O(log L + log 1)). Cuando los precios de la consulta de demanda relativa se dan como números racionales, se implica una simulación exacta cuando el logaritmo es lineal en la longitud de la entrada. En el artículo completo [8], observamos que este algoritmo puede implementarse mediante dos subastas descendentes de precio de artículo (donde permitimos quitar artículos a lo largo de la subasta). El valor generado por tal subasta es al menos una aproximación de m√ k de lo posible en la subasta original. Ten en cuenta que tal subasta puede ser implementada mediante 2k − 1 consultas de valor a cada postor, consultando el valor de cada paquete de los paquetes fijos. Por lo tanto, si elegimos k = log m paquetes, obtenemos una aproximación de m√ log m mientras seguimos utilizando un número polinomial de consultas. El siguiente lema muestra que no es posible hacer mucho más utilizando consultas de valor: Lema 4.7. Cualquier subasta iterativa que utilice solo consultas de valor y distinga entre k-tuplas de valuaciones de 0/1 donde la asignación óptima tiene valor 1, y aquellas donde la asignación óptima tiene valor k, requiere al menos 2 m k consultas. Prueba. Considera la siguiente familia de valoraciones: para cada S, tal que |S| > m/2, v(S) = 1, y existe un único conjunto T, tal que para |S| ≤ m/2, v(S) = 1 si y solo si T ⊆ S y v(S) = 0 en caso contrario. Ahora observa el comportamiento del protocolo cuando todas las valoraciones vi tienen T = {1...m}. Claramente, en este caso el valor de la mejor asignación es 1, ya que ningún conjunto de tamaño m 2 o menor tiene un valor distinto de cero para ningún jugador. Corrija la secuencia de consultas y respuestas recibidas en este k-tupla de valuaciones. Ahora considera el k-tuplo de valoraciones elegido al azar de la siguiente manera: una partición de los m elementos en k conjuntos T1...Tk cada uno de tamaño m/k es elegido de forma uniforme al azar entre todas las particiones posibles. Ahora considera el k-tuplo de valoraciones de nuestra familia que corresponden a esta partición: claramente Ti puede asignarse a i, para cada i, obteniendo un valor total de k. Ahora observa el protocolo al ejecutarse con estas valoraciones y compara su comportamiento con el caso original. Ten en cuenta que la respuesta a una consulta S al jugador i difiere entre el caso de Ti y el caso original de T = {1...m} solo si |S| ≤ m 2 y Ti ⊆ S. Dado que Ti se distribuye uniformemente entre todos los conjuntos de tamaño exactamente m k , tenemos que para cualquier consulta fija S al jugador i, donde |S| ≤ m 2 , Pr[Ti ⊆ S] ≤ „ |S| m «|Ti| ≤ 2− m k Utilizando el límite de unión, si la secuencia original de consultas tenía una longitud menor que 2 m k , entonces con probabilidad positiva ninguna de las consultas en la secuencia recibiría una respuesta diferente a la tupla de entrada original. Esto está prohibido ya que el protocolo debe distinguir entre este caso y el caso original, lo cual no puede ocurrir si todas las consultas reciben la misma respuesta. Por lo tanto, debe haber habido al menos 2 consultas de m k para la tupla original de valoraciones. Concluimos que un protocolo de tiempo polinómico que utiliza solo consultas de valor no puede obtener una aproximación mejor que O( m log m ) del bienestar: Teorema 4.8. Una subasta iterativa que utiliza un número polinómico de consultas de valor no puede lograr una aproximación mejor que O( m log m ) para el bienestar social. Prueba. Inmediatamente del Lema 4.7: lograr cualquier ratio de aproximación k que sea asintóticamente mayor que m log m requiere un número exponencial de consultas de valor. Un algoritmo de aproximación: Inicialización: Sea T ← M los artículos actuales en venta. Que K ← N sean los postores actualmente participantes. Que S∗ 1 ← ∅, ..., S∗ n ← ∅ sea la asignación provisional. Repetir hasta que T = ∅ o K = ∅: Preguntar a cada postor i en K por el conjunto Si que maximice su valor por artículo, es decir, Si ∈ argmaxS⊆T vi(S) |S|. Sea i el postor con el valor máximo por artículo, es decir, i ∈ argmaxi∈K vi(Si) |Si| . Conjunto: s∗ i = si, K = K \\ i, M = M \\ Si Finalmente: Pregunte a los postores por sus valores vi(M) para el paquete completo. Si asignar todos los artículos a algún postor i mejora el bienestar social alcanzado hasta ahora (es decir, ∃i ∈ N tal que vi(M) > Σ i∈N vi(S∗ i )), entonces asigna todos los artículos a este postor i. Figura 5: Este algoritmo logra una aproximación de min{n, 4 √ m} para el bienestar social, que es asintóticamente la mejor aproximación en el peor de los casos posible con comunicación polinómica. Este algoritmo puede implementarse con un número polinomial de consultas de demanda. 4.3 La Representación de los Precios de los Paquetes En esta sección fijamos explícitamente el idioma en el que se presentan los precios de los paquetes a los postores en subastas de precios de paquetes. Este lenguaje requiere que el algoritmo liste explícitamente el precio de cada paquete con un precio no trivial. Trivial en este contexto es un precio que es igual al de uno de sus subconjuntos adecuados (que fue enumerado explícitamente). Esta representación es equivalente al lenguaje XOR para expresar valuaciones. Formalmente, cada consulta q se da por una expresión: q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl). En esta representación, el precio demandado para cada conjunto S es simplemente p(S) = max{k=1...l|Sk⊆S}pk. Definición 4. La longitud de la consulta q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl) es l. El costo de un algoritmo es la suma de las longitudes de las consultas realizadas durante la operación del algoritmo en el peor caso de entrada. Ten en cuenta que bajo esta definición, las subastas de precio por paquete no son necesariamente más fuertes que las subastas de precio por artículo. ¿Una consulta de precio de artículo que fija el precio de cada artículo en 1 se traduce en una consulta de precio de paquete exponencialmente larga que necesita especificar el precio |S| para cada paquete S. ¿Pero quizás las subastas de precio de paquete aún pueden encontrar asignaciones óptimas siempre que las subastas de precio de artículo puedan, sin simular directamente tales consultas? Mostramos que este no es el caso: de hecho, cuando se tiene en cuenta la longitud de la representación, las subastas de precios de paquetes a veces son seriamente inferiores a las subastas de precios de artículos. Considera la siguiente familia de valoraciones: Cada artículo tiene un valor de 3, excepto que para algún conjunto único S, su valor es un poco mayor: 3|S| + b, donde b ∈ {0, 1, 2}. Ten en cuenta que una subasta de precio de artículo puede encontrar fácilmente la asignación óptima entre dos valoraciones de este tipo: establece los precios de cada artículo en 3+; si los conjuntos de demanda de los dos jugadores están vacíos, entonces b = 0 para ambas valoraciones, y cualquier asignación arbitraria está bien. Si uno de ellos está vacío y el otro no, asigna el conjunto de demanda no vacío a su postor y el resto al otro. Si ambos conjuntos de demanda no están vacíos, entonces, a menos que formen una partición exacta, necesitamos ver cuál es mayor, lo cual podemos hacer aumentando el precio de un solo artículo en cada conjunto de demanda. Mostraremos que cualquier subasta de precio de paquete que utilice solo el lenguaje XOR para describir los precios de los paquetes requiere un costo exponencial (que incluye la suma de todas las longitudes de descripción de los precios) para encontrar una asignación óptima entre dos valoraciones de este tipo. Lema 4.9. Cada subasta de precio de paquete que utiliza expresiones XOR para denotar precios de paquete requiere un costo de 2Ω( √ m) para encontrar la asignación óptima entre dos valoraciones de la familia anterior. La complicación en la prueba se debe al hecho de que al usar expresiones XOR, la longitud de la descripción del precio depende del número de paquetes cuyo precio es estrictamente mayor que cada uno de sus subconjuntos, lo cual puede ser significativamente menor que el número de paquetes que tienen un precio distinto de cero. (La prueba se vuelve fácil si requerimos que el protocolo nombre explícitamente cada paquete con precio distinto de cero). No conocemos ninguna demostración elemental para este lema (aunque creemos que se puede encontrar una). En cambio, reducimos el problema a un límite inferior bien conocido en la complejidad de circuitos booleanos [18] que establece que los circuitos booleanos de profundidad 3 que calculan la función de mayoría en m variables requieren un tamaño de 2Ω( √ m). Consultas de demanda y programación lineal Considere la siguiente relajación de programación lineal para el problema generalizado de determinación de ganadores en subastas combinatorias (el programa primal): Maximizar X i∈N,S⊆M wi xi,S vi(S) sujeto a Para todo i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M. Nótese que el programa primal tiene un número exponencial de variables. Sin embargo, podremos resolverlo en tiempo polinómico utilizando consultas de demanda a los postores. La solución tendrá un soporte de tamaño polinómico (valores no nulos para xi,S), y por lo tanto podremos describirla en tiempo polinómico. Aquí está su dual: Minimizar X j∈M qjpj + X i∈N diui sujeto a ui + X j∈S pj ≥ wivi(S) ∀i ∈ N, S ⊆ M pi ≥ 0, uj ≥ 0 ∀i ∈ M, j ∈ N. Nótese que el problema dual tiene exactamente n + m variables pero un número exponencial de restricciones. Por lo tanto, el problema dual puede resolverse utilizando el método del Elipsoide en tiempo polinómico, si un oráculo de separación puede ser implementado en tiempo polinómico. Recuerda que un oráculo de separación, al recibir una posible solución, confirma si es una solución factible o responde con una restricción que es violada por la posible solución. Construimos un oráculo de separación para resolver el programa dual, utilizando una única consulta de demanda a cada uno de los postores. Considera una posible solución (u, p) para el programa dual. Podemos reescribir las restricciones del programa dual como: ui/wi ≥ vi(S) − X j∈S pj/wi. Ahora, una consulta de demanda al postor i con precios pj/wi revela exactamente el conjunto S que maximiza el RHS de la desigualdad anterior. Por lo tanto, para verificar si (u, p) es factible, basta con (1) consultar a cada postor i por su demanda Di bajo los precios pj/wi; (2) verificar solo las n restricciones ui + P j∈Di pj ≥ wivi(Di) (donde vi(Di) puede ser simulado utilizando una secuencia polinómica de consultas de demanda como se muestra en el Lema 4.2). Si ninguna de estas condiciones se viola, entonces estamos seguros de que (u, p) es factible; de lo contrario, obtenemos una restricción violada. Lo que queda por mostrar es cómo se puede resolver el programa primal. (Recuerde que el programa primal tiene un número exponencial de variables). Dado que el algoritmo de Elipsoide se ejecuta en tiempo polinómico, solo encuentra un número polinómico de restricciones durante su operación. Claramente, si se eliminaran todas las demás restricciones del programa dual, seguiría teniendo la misma solución (añadir restricciones solo puede disminuir el espacio de soluciones factibles). Ahora tome el dual reducido donde solo existan las restricciones encontradas, y observe su dual. Tendrá la misma solución que el dual original y, por lo tanto, del primal original. Sin embargo, observa la forma de este dual del dual reducido. Es solo una versión del programa primal con un número polinomial de variables, aquellas que corresponden a las restricciones que permanecieron en el dual reducido. Por lo tanto, se puede resolver en tiempo polinómico, y esta solución resuelve claramente el programa primal original, estableciendo todas las demás variables en cero. 5. En esta sección caracterizamos el poder de las subastas ascendentes por precio de artículo. Primero demostramos que este poder no es trivial: tales subastas pueden en general obtener una cantidad exponencial de información. Por otro lado, demostramos que la asignación óptima no siempre puede ser determinada por una sola subasta ascendente, y en algunos casos, tampoco por un número exponencial de trayectorias de precios ascendentes. Finalmente, separamos el poder de diferentes modelos de subastas ascendentes. 5.1 El Poder de las Subastas Ascendentes de Precio de Artículo Primero mostramos que si se permiten incrementos lo suficientemente pequeños, una única trayectoria ascendente de precios de artículos puede obtener preferencias que no pueden ser obtenidas con comunicación polinómica. Como se mencionó, todos nuestros resultados de dureza se mantienen para cualquier incremento, incluso infinitesimal. Teorema 5.1. Algunas clases de valoraciones pueden ser obtenidas mediante subastas ascendentes de precio de artículo, pero no pueden ser obtenidas mediante un número polinómico de consultas de ningún tipo. Prueba. (bosquejo) Considera dos postores con v(S) = 1 si |S| > n 2 , v(S) = 0 si |S| < n 2 y cada S tal que |S| = n 2 tiene un valor desconocido de {0, 1}. Debido a [32], determinar la asignación óptima aquí requiere comunicación exponencial en el peor de los casos. Sin embargo, demostramos (ver [9]) que una subasta ascendente de precio de artículo puede lograrlo, siempre y cuando pueda utilizar incrementos exponencialmente pequeños. Ahora describimos otro resultado positivo sobre el poder de las subastas ascendentes de precio de los artículos. En la sección 4.1, mostramos que en la subasta ascendente de precio de los artículos no se puede determinar la asignación óptima para esta clase de valoraciones, que una consulta de valor puede ser simulada con un número (verdaderamente) polinomial de consultas de demanda de precio de los artículos. Aquí mostramos que cada consulta de valor puede ser simulada por un número (pseudo) polinomial de consultas ascendentes de demanda de precio de artículo. (En la siguiente subsección, mostramos que no siempre podemos simular ni siquiera un par de consultas de valor utilizando una subasta ascendente de precio de artículo). En el artículo completo (parte II, [9]), demostramos que podemos simular otros tipos de consultas utilizando subastas ascendentes de precio de artículo. Proposición 5.2. Una consulta de valor puede ser simulada por una subasta ascendente de precio de artículo. Esta simulación requiere un número polinómico de consultas. De hecho, la prueba para la Proposición 5.2 demuestra un resultado útil más fuerte sobre la información obtenida por subastas iterativas. Se dice que en cualquier subasta iterativa en la que los cambios de precios sean lo suficientemente pequeños en cada etapa (subastas pseudocontinuas), se puede calcular el valor de todos los paquetes demandados durante la subasta. La idea básica es que cuando el oferente pasa de demandar un paquete Ti a demandar otro paquete Ti+1, hay un punto en el que ella es indiferente entre estos dos paquetes. Por lo tanto, conocer el valor de un conjunto demandado (por ejemplo, el conjunto vacío) permite calcular los valores de todos los demás conjuntos demandados. Decimos que una subasta es seudo-continua si solo utiliza consultas de demanda, y en cada paso, el precio de como máximo un artículo se modifica en (para algún ∈ (0, δ]) con respecto a la consulta anterior. Proposición 5.3. Considera cualquier subasta pseudo-continua (no necesariamente ascendente), en la que el postor i demande el conjunto vacío al menos una vez a lo largo de la subasta. Entonces, el valor de cada paquete demandado por el postor i a lo largo de la subasta puede calcularse al final de la subasta. 5.2 Limitaciones de las Subastas Ascendentes de Precio de Artículo Aunque observamos que las consultas de demanda pueden resolver cualquier problema de subasta combinatoria, cuando las consultas están restringidas a ser ascendentes, algunas clases de valoraciones no pueden ser obtenidas ni completamente obtenidas. Un ejemplo para tal clase de valoraciones se muestra en la Figura 6. Teorema 5.4. Existen clases de valoraciones que no pueden ser obtenidas ni completamente obtenidas por ninguna subasta ascendente de precio de artículos. Prueba. Que el postor 1 tenga la valoración descrita en la primera fila de la Figura 6, donde α y β son valores desconocidos en (0, 1). Primero, demostramos que esta clase no puede ser completamente revelada por una sola subasta ascendente. Específicamente, una subasta ascendente no puede revelar los valores de ambos α y β. Si tanto pa como pb son inferiores a 1, el oferente siempre exigirá el paquete completo ab: su utilidad de ab es estrictamente mayor que la utilidad de a o b por separado. Por ejemplo, demostramos que u1(ab) > u1(a): u1(ab) = 2 − (pa + pb) = 1 − pa + 1 − pb > vA(a) − pa + 1 − pb > u1(a) Por lo tanto, para obtener información sobre α o β, el precio de uno de los artículos debe ser al menos 1, sin pérdida de generalidad, pa ≥ 1. Pero entonces, el paquete a no será demandado por el postor 1 durante la subasta, por lo tanto, no se obtendrá ninguna información sobre α. Ahora, suponga que se sabe que el postor 2 tiene la valoración descrita en la segunda fila de la Figura 6. La asignación óptima depende de si α es mayor que β (en la valoración del postor 1), y demostramos que una subasta ascendente no puede determinar esto. La prueba del teorema anterior muestra que para que se revele un valor desconocido, el precio de un artículo debe ser mayor que 1 y el otro precio debe ser menor que 1. Por lo tanto, en una trayectoria de precios monótona de precios, solo uno de estos valores puede ser revelado. Una conclusión inmediata es que este resultado de imposibilidad también se aplica a las subastas descendentes de precio de los artículos. Dado que no existe tal trayectoria, entonces la misma conclusión se aplica incluso a las subastas de precios de artículos no deterministas (en las cuales los datos exógenos nos dicen cómo aumentar los precios). También hay que tener en cuenta que dado que la dificultad proviene de la imposibilidad de obtener completamente una valoración de un único postor, este resultado también se aplica a subastas ascendentes de precio de artículo no anónimas. 5.3 Limitaciones de las Subastas Ascendentes de Múltiples Trayectorias Según el Teorema 5.4, ninguna subasta ascendente de precio de artículo puede siempre obtener las preferencias (demostramos un resultado similar para precios de paquetes en la sección 6). ¿Pero pueden dos trayectorias ascendentes hacer el trabajo? ¿O un número polinómico de trayectorias ascendentes? Damos respuestas negativas a tales sugerencias. Definimos una subasta ascendente de trayectoria k como una subasta iterativa de consultas de demanda en la que las consultas de demanda pueden ser divididas en k conjuntos de consultas, donde los precios publicados en cada conjunto solo aumentan con el tiempo. Ten en cuenta que utilizamos una definición general; permite que las trayectorias se ejecuten en paralelo o secuencialmente, y utilizar la información obtenida en algunas trayectorias para determinar las consultas futuras en otras trayectorias. El poder de las subastas de múltiples trayectorias puede ser demostrado por el resultado negativo de Gul y Stacchetti [17], quienes mostraron que incluso para una subasta entre valoraciones de sustitutos, una subasta anónima ascendente de precio de artículo no puede calcular los precios VCG para todos los jugadores. Ausubel [4] superó este resultado imposible y diseñó subastas que sí calculan los precios VCG al organizar la subasta como una secuencia de n + 1 subastas ascendentes. Aquí demostramos que no se pueden obtener valoraciones XOR con k términos con menos de k − 1 trayectorias ascendentes. Por otro lado, demostramos que una fórmula XOR puede ser completamente revelada por k−1 subastas ascendentes no determinísticas (o por k−1 subastas ascendentes determinísticas si el subastador conoce los paquetes atómicos). Un reciente artículo no publicado de Mishra y Parkes extiende este resultado, y muestra que los precios no anónimos con precios de paquetes son necesarios para que una subasta ascendente termine con un equilibrio competitivo universal (que conduce a pagos VCG). Este resultado separa en realidad el poder de determinista 39 Proposición 5.5. Las valoraciones XOR con k términos no pueden ser obtenidas (o completamente obtenidas) por ninguna subasta ascendente de precio de artículo con trayectoria (k-2), incluso cuando los paquetes atómicos son conocidos por el que obtiene la información. Sin embargo, estas valoraciones pueden ser obtenidas (y completamente obtenidas) mediante subastas ascendentes de precios de artículos no deterministas y no anónimos de (k-1) trayectorias. Además, se requiere un número exponencial de trayectorias para obtener algunas clases de valoraciones: Proposición 5.6. La obtención y la obtención completa de algunas clases de valoraciones no pueden ser realizadas por ninguna subasta ascendente de precio de artículo de trayectoria k, donde k = o(2m). Prueba. (bosquejo) Considera la siguiente clase de valoraciones: Para |S| < m 2 , v(S) = 0 y para |S| > m 2 , v(S) = 2; cada conjunto S de tamaño m 2 tiene algún valor desconocido en (0, 1). Mostramos ([9]) que una subasta ascendente de un solo artículo y precio puede revelar el valor de como máximo un paquete de tamaño n 2, y por lo tanto se necesitaría un número exponencial de trayectorias ascendentes para obtener tales valoraciones. Observamos que el algoritmo que presentamos en la Sección 4.2 puede ser implementado por un número polinomial de subastas ascendentes (cada consulta de demanda de precio de artículo puede considerarse como una subasta ascendente separada), y por lo tanto, una aproximación de min(n, 4 √ m) puede lograrse mediante un número polinomial de subastas ascendentes. Actualmente no tenemos un límite superior mejor ni ningún límite inferior. 5.4 Separando los Diversos Modelos de Subastas Ascendentes Se han sugerido varios modelos para subastas ascendentes en la literatura. En esta sección, comparamos la potencia de los diferentes modelos. Como se mencionó, todas las subastas se consideran anónimas y determinísticas, a menos que se especifique lo contrario. Ascendente vs. Subastas descendentes: Comenzamos la discusión sobre la relación entre las subastas ascendentes y las subastas descendentes con un ejemplo. El algoritmo de Lehmann, Lehmann y Nisan [25] se puede implementar mediante una subasta simple de precio descendente por artículo (consultar el artículo completo para más detalles [9]). Este algoritmo garantiza al menos la mitad de la eficiencia óptima para valoraciones submodulares. Sin embargo, no estamos familiarizados con ninguna subasta ascendente que garantice una fracción similar de eficiencia. ¿Esto plantea una pregunta más general: ¿pueden las subastas ascendentes resolver cualquier problema de subasta combinatoria que sea resoluble utilizando una subasta descendente (y viceversa)? Damos respuestas negativas a estas preguntas. La idea detrás de las pruebas es que la información que el subastador puede obtener de forma gratuita al comienzo de cada tipo de subasta es diferente. En subastas iterativas no determinísticas: nuestra prueba muestra que una subasta iterativa no determinística puede obtener las valoraciones XOR de k términos con un número polinómico de consultas de demanda, y [7] muestra que esta obtención debe requerir un número exponencial de consultas de demanda. En subastas ascendentes, el subastador puede revelar el paquete más valioso (además de M) antes de comenzar a aumentar los precios, por lo tanto, puede utilizar esta información para elegir de forma adaptativa las consultas posteriores. En subastas descendentes, uno puede encontrar fácilmente el paquete con el precio promedio por artículo más alto, manteniendo todos los demás paquetes con utilidades no positivas, y utilizar esta información en el cambio de precio adaptativo. Proposición 5.7. Hay clases que no pueden ser obtenidas (totalmente obtenidas) mediante subastas de precio ascendente de artículos, pero pueden ser obtenidas (respectivamente, totalmente obtenidas) con una subasta de precio descendente de artículos. Proposición 5.8. Hay clases que no pueden ser obtenidas (totalmente obtenidas) mediante subastas descendentes de precio de artículo, pero pueden ser obtenidas (respectivamente, totalmente obtenidas) mediante subastas ascendentes de precio de artículo. Subastas Determinísticas vs. No Determinísticas: Las subastas ascendentes no determinísticas pueden ser vistas como subastas donde algún profesor benevolente que tiene información completa guía al subastador sobre cómo debería aumentar los precios. Es decir, la obtención de preferencias puede realizarse mediante una subasta ascendente no determinística, si existe una trayectoria ascendente que obtiene suficiente información para determinar la asignación óptima (y verificar que efectivamente lo sea). Mostramos que las subastas ascendentes no determinísticas son más poderosas que las subastas ascendentes determinísticas: Proposición 5.9. Algunas clases pueden ser obtenidas (totalmente obtenidas) mediante una subasta ascendente no determinista de precio de artículo, pero no pueden ser obtenidas (respectivamente, totalmente obtenidas) mediante subastas ascendentes deterministas de precio de artículo. Subastas Anónimas vs. No Anónimas: Como se mostrará en la Sección 6, el poder de las subastas ascendentes de precios de paquetes anónimas y no anónimas difiere significativamente. Aquí mostramos que también existe una diferencia para las subastas ascendentes de precio de artículo. Proposición 5.10. Algunas clases no pueden ser obtenidas mediante subastas anónimas ascendentes de precio de artículos, pero pueden ser obtenidas mediante una subasta ascendente de precio de artículos no anónima. Secuencial vs. Subastas Simultáneas: Una subasta no anónima se llama simultánea si en cada etapa, el precio de algún artículo se incrementa por para cada postor. El subastador puede utilizar la información recopilada hasta cada etapa, en todas las trayectorias personalizadas, para determinar las próximas consultas. Una subasta no anónima se llama secuencial si el subastador realiza una subasta para cada postor por separado, en orden secuencial. El subastador puede determinar la próxima consulta basándose en la información recopilada en las trayectorias completadas hasta el momento y en la historia de la trayectoria actual. Proposición 5.11. Hay clases que no pueden ser obtenidas mediante subastas simultáneas no anónimas de precio ascendente de artículos, pero que pueden ser obtenidas mediante una subasta secuencial no anónima de precio ascendente de artículos. Adaptativo vs. Subastas ajenas: Si el subastador determina las consultas independientemente de las respuestas de los postores (es decir, las consultas están predefinidas), decimos que la subasta es ajena. De lo contrario, la subasta es adaptativa. Demostramos que un comportamiento adaptativo del subastador puede ser beneficioso. Proposición 5.12. Hay clases que no pueden ser completamente elicitadas utilizando subastas ascendentes de precio de artículo sin conocimiento, pero pueden ser elicitadas (respectivamente, completamente elicitadas) por una subasta ascendente de precio de artículo adaptativa. La elicitación de preferencias frente a la elicitación completa de preferencias son problemas estrechamente relacionados. Si la elicitación completa es fácil (por ejemplo, en tiempo polinómico), entonces claramente la elicitación también es fácil (mediante una subasta no anónima, simplemente aprendiendo todas las valoraciones por separado). Por otro lado, hay ejemplos donde la obtención de preferencias se considera fácil pero el aprendizaje es difícil (típicamente, la obtención de preferencias requiere una menor cantidad de información; algunos ejemplos se pueden encontrar en [7]). Los algoritmos de tatonnement por [22, 12, 16] terminan con la asignación óptima para las valoraciones de sustitutos. Demostramos que no podemos obtener completamente las valoraciones de sustitutos (o incluso su subclase de valoraciones OXS definidas en [25]), incluso para un único postor, mediante una subasta ascendente de precio de artículo (¡aunque la asignación óptima puede encontrarse mediante una subasta ascendente para cualquier número de postores!). Teorema 5.13. Las valoraciones de sustitución no pueden ser completamente obtenidas mediante subastas ascendentes de precio por artículo. Además, no pueden ser completamente inducidos por ninguna trayectoria ascendente m 2 (m > 3). Si las valoraciones de los sustitutos tienen una representación compacta (es decir, polinomial en el número de bienes) es una pregunta abierta importante. Como un paso en esta dirección, mostramos que su subclase de valoraciones OXS tiene una representación compacta: cada valoración OXS puede ser representada por un máximo de m2 valores. Lema 5.14. Cualquier valoración de OXS puede ser representada por no más de m2 valores. 6. Subastas ascendentes de precio de paquete. Todas las subastas ascendentes en la literatura que se ha demostrado que encuentran la asignación óptima para valoraciones no restringidas son subastas de precio de paquete no anónimas (iBundle(3) de Parkes y Ungar [37] y la Subasta de Proxy de Ausubel y Milgrom [3]). Sin embargo, se han sugerido varias subastas ascendentes anónimas (por ejemplo, AkBA [42], [21] e iBundle(2) [37]). En esta sección, demostramos que las subastas ascendentes de precios de paquetes anónimos logran resultados pobres en el peor de los casos. También demostramos que la familia de subastas de precio ascendente de paquetes no anónimos puede funcionar exponencialmente más lento que las simples subastas de precio ascendente por artículo. 6.1 Limitaciones de las Subastas Anónimas de Precio Ascendente por Paquete Presentamos una clase de valoraciones que no pueden ser obtenidas por subastas anónimas de precio ascendente por paquete. Estas valoraciones están descritas en la Figura 7. La idea básica: para determinar el valor desconocido de un postor debemos aumentar 24. Tenga en cuenta que una subasta ascendente anónima no necesariamente puede obtener una clase que pueda ser completamente obtenida por una subasta ascendente. Las valoraciones sustitutivas están definidas, por ejemplo, en [16]. Hablando en términos generales, un postor con una valoración de sustitución seguirá demandando un cierto artículo después de que el precio de algunos otros artículos haya aumentado. Para completitud, presentamos en el artículo completo [9] una prueba de la eficiencia de tales subastas para valoraciones de sustitutos. Una valoración de demanda unitaria es una valoración XOR en la que todos los paquetes atómicos son elementos únicos. Las valoraciones de OXS pueden interpretarse como una agregación (O) de cualquier número de postores de demanda unitaria. La subasta anónima ascendente de precios de paquetes no puede determinar la asignación óptima para esta clase de valoraciones. un precio de un paquete que debería ser demandado por el otro postor en el futuro. Teorema 6.1. Algunas clases de valoraciones no pueden ser obtenidas mediante subastas anónimas de precios ascendentes por paquetes. Prueba. Considera un par de valoraciones XOR como se describe en la Figura 7. Para encontrar la asignación óptima debemos saber cuál valor es mayor entre α y β. Sin embargo, no podemos conocer el valor de ambos α y β con una sola trayectoria ascendente: asumimos sin pérdida de generalidad que el postor 1 demanda cd antes de que el postor 2 demande bd (no se obtendrá información si ninguno de estos eventos ocurre). En este caso, el precio de bd debe ser mayor que 1 (de lo contrario, el postor 1 prefiere bd a cd). Por lo tanto, el postor 2 nunca exigirá el paquete bd, y no se obtendrá información sobre β. Las valoraciones descritas en la prueba del Teorema 6.1 pueden ser fácilmente obtenidas mediante una subasta ascendente de precio de un artículo no anónima. Por otro lado, las valoraciones en la Figura 6 pueden ser fácilmente obtenidas mediante una subasta anónima ascendente de precios por paquetes. Concluimos que el poder de estas dos familias de subastas ascendentes es incomparable. Fortalecemos el resultado de imposibilidad anterior al demostrar que las subastas de precios de paquetes anónimos no pueden lograr ni siquiera una aproximación mejor que min{O(n), O( √ m)} para el bienestar social. Este ratio de aproximación se puede lograr con comunicación polinómica, y específicamente con un número polinómico de consultas de demanda de precio de artículo. Teorema 6.2. Una subasta anónima de precios ascendentes en paquetes no puede garantizar una aproximación mejor que min{ n 2 , √ m 2 } para el bienestar óptimo. Prueba. (Bosquejo) Supongamos que tenemos n postores y n2 artículos en venta, y que n es primo. Construimos n2 paquetes distintos con las siguientes propiedades: para cada postor, definimos una partición Si = (Si 1, ..., Si n) de los n2 artículos en n paquetes, de manera que cualquier par de paquetes de particiones diferentes se intersectan. En el artículo completo, en la parte II [9] mostramos una construcción explícita utilizando las propiedades de las funciones lineales sobre campos finitos. El resto de la prueba es independiente de la construcción específica. Usando estos n2 paquetes construimos una clase difícil de obtener. Cada postor tiene una oferta atómica, en su valoración XOR, para cada uno de estos n2 paquetes. Un postor i tiene un valor de 2 para cualquier conjunto Si j en su partición. Para todos los paquetes en las otras particiones, él tiene un valor de 0 o de 1 − δ, y estos valores son desconocidos para el subastador. Dado que cada par de paquetes de diferentes particiones se intersectan, solo un postor puede recibir un paquete con un valor de 2. 27 Si α > β, la asignación óptima asignará cd al postor 1 y ab al postor 2. De lo contrario, le damos bd al postor 2 y ac al postor 1. Ten en cuenta que ambos postores no pueden obtener un valor de 2 en la misma asignación, debido a las intersecciones de los paquetes de alto valor. Ten en cuenta que las consultas de precios de paquetes pueden requerir comunicación exponencial, por lo tanto, el límite inferior de [32] no se cumple. Subastas ascendentes económicamente eficientes de precios de paquetes no anónimos: Inicialización: Todos los precios se inicializan en cero (precios de paquetes no anónimos). Cada postor presenta un paquete que maximiza su utilidad bajo sus precios personalizados actuales. El subastador calcula una asignación provisional que maximiza sus ingresos bajo los precios actuales. Los precios de los paquetes que fueron demandados por postores perdedores se incrementan en . Finalmente: Terminar cuando la asignación provisional asigna a cada postor el paquete que solicitó. Figura 8: Las subastas de esta familia (denominadas subastas NBEA) se sabe que logran el bienestar óptimo. Ningún postor exigirá un paquete de bajo valor, siempre y cuando el precio de uno de sus paquetes de alto valor sea inferior a 1 (y así le genere una utilidad mayor a 1). Por lo tanto, para obtener información sobre los paquetes de bajo valor, el subastador debería elegir arbitrariamente a un postor (sin pérdida de generalidad, postor 1) y aumentar los precios de todos los paquetes (S1 1, ..., S1 n) para que sean mayores que 1. Dado que los precios no pueden disminuir, los otros postores claramente nunca demandarán estos paquetes en etapas futuras. Un adversario puede elegir los valores de manera que los valores bajos de todos los postores para los paquetes que no están en la partición del postor 1 sean cero (es decir, vi(S1 j) = 0 para cada i = 1 y cada j), sin embargo, asignar a cada postor un paquete diferente de la partición del postor 1, podría lograr un bienestar de n+1−(n−1)δ (la valoración del postor 1 es 2, y 1 − δ para todos los demás postores); Si estos paquetes se asignaran incorrectamente, solo se podría lograr un bienestar de 2 (2 para el paquete de alto valor del postor 1, 0 para todos los demás postores). En este punto, el subastador no puede tener ninguna información sobre la identidad de los paquetes con valores no nulos. Por lo tanto, un adversario puede elegir que los valores de los paquetes recibidos por los postores 2, ..., n en la asignación final sean cero. Concluimos que las subastas de precios de paquetes anónimos no pueden garantizar un bienestar mayor que 2 para esta clase, donde el bienestar óptimo puede estar arbitrariamente cerca de n + 1. 6.2 Precios de Paquetes vs. Los precios de los artículos El núcleo de las subastas en [37, 3] es el esquema descrito en la Figura 8 (en el espíritu de [35]) para subastas con precios de paquetes no anónimos. Las subastas de este esquema terminan con la asignación óptima para cualquier clase de valoraciones. Denominamos a esta familia de subastas ascendentes como subastas NBEA29. Las subastas NBEA pueden obtener valoraciones XOR de k términos en un número polinómico (en k) de pasos, aunque la obtención de dichas valoraciones puede requerir un número exponencial de consultas de precios de artículos ([7]), y las subastas ascendentes de precios de artículos no pueden hacerlo en absoluto (Teorema 5.4). Sin embargo, demostramos que las subastas de NBEA (y en particular, iBundle(3) y la subasta de proxy) a veces son inferiores a las simples subastas de demanda de precio de artículo. Esto puede justificar el uso de subastas híbridas que utilizan tanto precios lineales como no lineales (por ejemplo, la subasta de reloj-proxi [10]). Demostramos que las subastas de este tipo son 29 subastas ascendentes de precio de paquete no anónimas económicamente eficientes. Para completitud, en el artículo completo [9] presentamos una prueba sencilla de la eficiencia (hasta un ) de las subastas de este esquema . familia puede utilizar un número exponencial de consultas incluso para determinar la asignación óptima entre dos postores con valoraciones aditivas30 , donde dichas valoraciones pueden ser obtenidas mediante una subasta ascendente de precio de artículo simple. En realidad demostramos esta propiedad para una clase más amplia de subastas que llamamos subastas conservadoras. También observamos que en subastas conservadoras, permitir a los postores enviar todos los paquetes en sus conjuntos de demanda garantiza que la subasta se desarrolle en un número polinómico de pasos, si L no es demasiado alto (pero con comunicación exponencial, por supuesto). Una subasta ascendente se llama conservadora si no es anónima, utiliza precios de paquetes inicializados en cero y en cada etapa el subastador solo puede aumentar los precios de los paquetes demandados por los postores hasta esa etapa. Además, cada postor solo puede recibir los paquetes que solicitó durante la subasta. Ten en cuenta que las subastas de NBEA son, por definición, conservadoras. Proposición 6.3. Si cada postor exige un solo paquete en cada paso de la subasta, las subastas conservadoras pueden durar un número exponencial de pasos incluso para valoraciones aditivas. Si a los postores se les permite presentar todos los paquetes en sus conjuntos de demanda en cada paso, entonces las subastas conservadoras pueden ejecutarse en un número polinómico de pasos para cualquier perfil de valoraciones, siempre y cuando la valoración máxima L sea polinómica en m, n y δ. Agradecimientos: Los autores agradecen a Moshe Babaioff, Shahar Dobzinski, Ron Lavi, Daniel Lehmann, Ahuva Mualem, David Parkes, Michael Schapira e Ilya Segal por las útiles discusiones. Apoyado por subvenciones de la Academia de Ciencias de Israel y la Fundación de Ciencia Binacional Estados Unidos-Israel. 7. REFERENCIAS [1] Amazon. Página web: http://www.amazon.com. [2] ebay. Página web: http://www.ebay.com. [3] L. M. Ausubel y P. R. Milgrom. Subastas ascendentes con ofertas de paquetes. Fronteras de la Economía Teórica, 1:1-42, 2002. [4] Lawrence Ausubel. Una subasta dinámica eficiente para mercancías heterogéneas, 2000. Documento de trabajo, Universidad de Maryland. [5] Yair Bartal, Rica Gonen y Noam Nisan. Subastas combinatorias multiunidad compatibles con incentivos. En TARK 03, 2003. [6] Alejandro Bertelsen. Sustitutos de valoraciones y m-concavidad. M.Sc. Tesis, Universidad Hebrea de Jerusalén, 2005. [7] Avrim Blum, Jeffrey C. Jackson, Tuomas Sandholm y Martin A. Zinkevich. Elicitación de preferencias y aprendizaje por consulta. Revista de Investigación en Aprendizaje Automático, 5:649-667, 2004. [8] Liad Blumrosen y Noam Nisan. Sobre el poder computacional de las subastas iterativas I: consultas de demanda. Documento de trabajo, La Universidad Hebrea de 30 valoraciones se llaman aditivas si para cualquier conjunto de paquetes disjuntos A y B, v(A ∪ B) = v(A) + v(B). Las valoraciones aditivas son tanto subaditivas como superaditivas y están determinadas por los valores m asignados a los elementos individuales. 42 Jerusalén. Disponible en http://www.cs.huji.ac.il/˜noam/mkts.html. [9] Liad Blumrosen y Noam Nisan. Sobre el poder computacional de las subastas iterativas II: subastas ascendentes. Documento de trabajo, Universidad Hebrea de Jerusalén. Disponible en http://www.cs.huji.ac.il/˜noam/mkts.html. [10] P. Cramton, L.M. Ausubel y P.R. I'm sorry, but \"Milgrom\" is a proper noun and does not have a direct translation in Spanish. En P. Cramton, Y. Shoham y R. Steinberg (Editores), Subastas Combinatorias. Capítulo 5. La subasta de reloj-proxi: Un diseño práctico de subasta combinatoria. MIT Press. Próximamente, 2005. [11] P. Cramton, Y. Shoham y R. Steinberg (Editores). Subastas combinatorias. MIT Press. Próximamente, 2005. [12] G. Demange, D. Gale y M. Sotomayor. Subastas de varios artículos. Revista de Economía Política, 94:863-872, 1986. [13] Shahar Dobzinski, Noam Nisan y Michael Schapira. Algoritmos de aproximación para CAS con postores sin complemento. En el 37º simposio de ACM sobre teoría de la computación (STOC)., 2005. [14] Shahar Dobzinski y Michael Schapira. Límites óptimos de aproximación superior e inferior para subastas combinatorias de k-duplicados. Documento de trabajo, Universidad Hebrea. [15] Conferencia de licitación combinatoria. Página web: http://wireless.fcc.gov/auctions/conferences/combin2003. [16] Faruk Gul y Ennio Stacchetti. Equilibrio walrasiano con sustitutos brutos. Revista de Teoría Económica, 87:95 - 124, 1999. [17] Faruk Gul y Ennio Stacchetti. La subasta inglesa con productos diferenciados. Revista de Teoría Económica, 92(3):66 - 95, 2000. [18] J. Hastad. Límites inferiores casi óptimos para circuitos de poca profundidad. En el 18º STOC, páginas 6-20, 1986. [19] Ron Holzman, Noa Kfir-Dahav, Dov Monderer y Moshe Tennenholtz. Equilibrio de empaquetamiento en subastas combinatorias. Juegos y Comportamiento Económico, 47:104-123, 2004. [20] H. Karloff. Programación Lineal. Birkhäuser Verlag, 1991. [21] Frank Kelly y Richard Steinberg. Una subasta combinatoria con múltiples ganadores para el servicio universal. Ciencia de la Gestión, 46:586-596, 2000. [22] A.S. Kelso y V.P. Crawford. Emparejamiento laboral, formación de coaliciones y sustitución bruta. Econometrica, 50:1483-1504, 1982. [23] Subhash Khot, Richard J. Lipton, Evangelos Markakis y Aranyak Mehta. Resultados de inaproximabilidad para subastas combinatorias con funciones de utilidad submodulares. En Working paper., 2004. [24] Sebastien Lahaie y David C. Parkes. Aplicando algoritmos de aprendizaje a la obtención de preferencias. En EC 04. [25] Benny Lehmann, Daniel Lehmann y Noam Nisan. Subastas combinatorias con utilidades marginales decrecientes. En la conferencia de ACM sobre comercio electrónico. Para aparecer, Juegos y Comportamiento Económico., 2001. [26] D. Lehmann, L. OCallaghan, y Y. Shoham. Revelación de la verdad en subastas combinatorias aproximadamente eficientes. JACM, 49(5):577-602, septiembre de 2002. [27] A. Mas-Collel, W. Whinston y J. Verde. Teoría microeconómica. Oxford University Press, 1995. [28] Debasis Mishra y David Parkes. Subastas de Vickrey de precio ascendente utilizando algoritmos primal-dual., 2004. Documento de trabajo, Universidad de Harvard. [29] Noam Nisan. La complejidad de comunicación del empaquetamiento y cobertura de conjuntos aproximados. En ICALP 2002. [30] Noam Nisan. Subasta y asignación en subastas combinatorias. En la Conferencia ACM sobre Comercio Electrónico, 2000. [31] Noam Nisan. En P. Cramton, Y. Shoham y R. Steinberg (Editores), Subastas Combinatorias. Capítulo 1. Lenguajes de subasta. MIT Press. Próximamente, 2005. [32] Noam Nisan e Ilya Segal. Los requisitos de comunicación de asignaciones eficientes y precios de apoyo, 2003. Documento de trabajo. Disponible en http://www.cs.huji.ac.il/˜noam/mkts.html Próximamente en la Revista de Teoría Económica. [33] Noam Nisan e Ilya Segal. Ineficiencia exponencial de la comunicación de consultas de demanda, 2004. Documento de trabajo. Disponible en http://www.stanford.edu/ isegal/queries1.pdf. [34] D. C. Parkes y L. H. Ungar. Una subasta de Vickrey generalizada de precio ascendente. Tecnología. Rep., Universidad de Harvard, 2002. [35] David Parkes. En P. Cramton, Y. Shoham y R. Steinberg (Editores), Subastas Combinatorias. Capítulo 3. Subastas combinatorias iterativas. MIT Press. Próximamente, 2005. [36] David C. Parkes. Subastas combinatorias iterativas: Logrando eficiencia económica y computacional. Tesis de doctorado, Departamento de Ciencias de la Computación e Informática, Universidad de Pensilvania, 2001. [37] David C. Parkes y Lyle H. Ungar. Subastas combinatorias iterativas: Teoría y práctica. En AAAI/IAAI, páginas 74-81, 2000. [38] Ariel Rubinstein. ¿Por qué ciertas propiedades de las relaciones binarias son relativamente más comunes en los lenguajes naturales? Econometrica, 64:343-356, 1996. [39] Tuomas Sandholm. \n\nEconometrica, 64:343-356, 1996. [39] Tuomas Sandholm. Algoritmo para la determinación óptima del ganador en subastas combinatorias. En Inteligencia Artificial, volumen 135, páginas 1-54, 2002. [40] P. Santi, V. Conitzer y T. Sandholm. Hacia una caracterización de la obtención de preferencias polinomiales con consultas de valor en subastas combinatorias. En la 17ª Conferencia Anual sobre Teoría del Aprendizaje, 2004. [41] Ilya Segal. Los requisitos de comunicación de las reglas de elección social y los conjuntos de presupuesto de apoyo, 2004. Documento de trabajo. Disponible en http://www.stanford.edu/ isegal/rules.pdf. [42] P.R. Wurman y M.P. Wellman. Akba: Una subasta combinatoria progresiva y de precio anónimo. En la Segunda Conferencia ACM sobre Comercio Electrónico, 2000. [43] Martin A. Zinkevich, Avrim Blum y Tuomas Sandholm. En la obtención de preferencias en tiempo polinómico con consultas de valor. En la Conferencia ACM sobre Comercio Electrónico, 2003. 43",
    "original_sentences": [
        "On the Computational Power of Iterative Auctions∗ [Extended Abstract] Liad Blumrosen School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel liad@cs.huji.ac.il Noam Nisan School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel noam@cs.huji.ac.il ABSTRACT We embark on a systematic analysis of the power and limitations of iterative combinatorial auctions.",
        "Most existing iterative combinatorial auctions are based on repeatedly suggesting prices for bundles of items, and querying the bidders for their demand under these prices.",
        "We prove a large number of results showing the boundaries of what can be achieved by auctions of this kind.",
        "We first focus on auctions that use a polynomial number of demand queries, and then we analyze the power of different kinds of ascending-price auctions.",
        "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
        "INTRODUCTION Combinatorial auctions have recently received a lot of attention.",
        "In a combinatorial auction, a set M of m nonidentical items are sold in a single auction to n competing bidders.",
        "The bidders have preferences regarding the bundles of items that they may receive.",
        "The preferences of bidder i are specified by a valuation function vi : 2M → R+ , where vi(S) denotes the value that bidder i attaches to winning the bundle of items S. We assume free disposal, i.e., that the vis are monotone non-decreasing.",
        "The usual goal of the auctioneer is to optimize the social welfare P i vi(Si), where the allocation S1...Sn must be a partition of the items.",
        "Applications include many complex resource allocation problems and, in fact, combinatorial auctions may be viewed as the common abstraction of many complex resource allocation problems.",
        "Combinatorial auctions face both economic and computational difficulties and are a central problem in the recently active border of economic theory and computer science.",
        "A forthcoming book [11] addresses many of the issues involved in the design and implementation of combinatorial auctions.",
        "The design of a combinatorial auction involves many considerations.",
        "In this paper we focus on just one central issue: the communication between bidders and the allocation mechanism - preference elicitation.",
        "Transferring all information about bidders preferences requires an infeasible (exponential in m) amount of communication.",
        "Thus, direct revelation auctions in which bidders simply declare their preferences to the mechanism are only practical for very small auction sizes or for very limited families of bidder preferences.",
        "We have therefore seen a multitude of suggested iterative auctions in which the auction protocol repeatedly interacts with the different bidders, aiming to adaptively elicit enough information about the bidders preferences as to be able to find a good (optimal or close to optimal) allocation.",
        "Most of the suggested iterative auctions proceed by maintaining temporary prices for the bundles of items and repeatedly querying the bidders as to their preferences between the bundles under the current set of prices, and then updating the set of bundle prices according to the replies received (e.g., [22, 12, 17, 37, 3]).",
        "Effectively, such an iterative auction accesses the bidders preferences by repeatedly making the following type of demand query to bidders: Query to bidder i: a vector of bundle prices p = {p(S)}S⊆M ; Answer: a bundle of items S ⊆ M that maximizes vi(S) − p(S)..",
        "These types of queries are very natural in an economic setting as they capture the revealed preferences of the bidders.",
        "Some auctions, called item-price or linear-price auctions, specify a price pi for each item, and the price of any given bundle S is always linear, p(S) = P i∈S pi.",
        "Other auctions, called bundle-price auctions, allow specifying arbitrary (non-linear) prices p(S) for bundles.",
        "Another important differentiation between models of iterative auctions is 29 based on whether they use anonymous or non-anonymous prices: In some auctions the prices that are presented to the bidders are always the same (anonymous prices).",
        "In other auctions (non-anonymous), different bidders may face different (discriminatory) vectors of prices.",
        "In ascending-price auctions, forcing prices to be anonymous may be a significant restriction.",
        "In this paper, we embark on a systematic analysis of the computational power of iterative auctions that are based on demand queries.",
        "We do not aim to present auctions for practical use but rather to understand the limitations and possibilities of these kinds of auctions.",
        "In the first part of this paper, our main question is what can be done using a polynomial number of these types of queries?",
        "That is, polynomial in the main parameters of the problem: n, m and the number of bits t needed for representing a single value vi(S).",
        "Note that from an algorithmic point of view we are talking about sub-linear time algorithms: the input size here is really n(2m − 1) numbers - the descriptions of the valuation functions of all bidders.",
        "There are two aspects to computational efficiency in these settings: the first is the communication with the bidders, i.e., the number of queries made, and the second is the usual computational tractability.",
        "Our lower bounds will depend only on the number of queriesand hold independently of any computational assumptions like P = NP.",
        "Our upper bounds will always be computationally efficient both in terms of the number of queries and in terms of regular computation.",
        "As mentioned, this paper concentrates on the single aspect of preference elicitation and on its computational consequences and does not address issues of incentives.",
        "This strengthens our lower bounds, but means that the upper bounds require evaluation from this perspective also before being used in any real combinatorial auction.1 The second part of this paper studies the power of ascending -price auctions.",
        "Ascending auctions are iterative auctions where the published prices cannot decrease in time.",
        "In this work, we try to systematically analyze what do the differences between various models of ascending auctions mean.",
        "We try to answer the following questions: (i) Which models of ascending auctions can find the optimal allocation, and for which classes of valuations? (ii) In cases where the optimal allocation cannot be determined by ascending auctions, how well can such auctions approximate the social welfare? (iii) How do the different models for ascending auctions compare?",
        "Are some models computationally stronger than others?",
        "Ascending auctions have been extensively studied in the literature (see the recent survey by Parkes [35]).",
        "Most of this work presented upper bounds, i.e., proposed mechanisms with ascending prices and analyzed their properties.",
        "A result which is closer in spirit to ours, is by Gul and Stacchetti [17], who showed that no item-price ascending auction can always determine the VCG prices, even for substitutes valuations.2 Our framework is more general than the traditional line of research that concentrates on the final allocation and 1 We do observe however that some weak incentive property comes for free in demand-query auctions since myopic players will answer all demand queries truthfully.",
        "We also note that in some cases (but not always!) the incentives issues can be handled orthogonally to the preference elicitation issues, e.g., by using Vickrey-Clarke-Groves (VCG) prices (e.g., [4, 34]). 2 We further discuss this result in Section 5.3.",
        "Iterative auctions Demand auctions Item-price auctions Anonymous price auctions Ascending auctions 1 2 3 4 5 6 97 8 10 Figure 1: The diagram classifies the following auctions according to their properties: (1) The adaptation [12] for Kelso & Crawfords [22] auction. (2) The Proxy Auction [3] by Ausubel & Milgrom. (3) iBundle(3) by Parkes & Ungar [34]. (4) iBundle(2) by Parkes & Ungar [37]. (5) Our descending adaptation for the 2-approximation for submodular valuations by [25] (see Subsection 5.4). (6) Ausubels [4] auction for substitutes valuations. (7) The adaptation by Nisan & Segal [32] of the O( √ m) approximation by [26]. (8) The duplicate-item auction by [5]. (9) Auction for Read-Once formulae by [43]. (10) The AkBA Auction by Wurman & Wellman [42]. payments and in particular, on reaching Walrasian equilibria or Competitive equilibria.",
        "A Walrasian equilibrium3 is known to exist in the case of Substitutes valuations, and is known to be impossible for any wider class of valuations [16].",
        "This does not rule out other allocations by ascending auctions: in this paper we view the auctions as a computational process where the outcome - both the allocation and the payments - can be determined according to all the data elicited throughout the auction; This general framework strengthens our negative results.4 We find the study of ascending auctions appealing for various reasons.",
        "First, ascending auctions are widely used in many real-life settings from the FCC spectrum auctions [15] to almost any e-commerce website (e.g., [2, 1]).",
        "Actually, this is maybe the most straightforward way to sell items: ask the bidders what would they like to buy under certain prices, and increase the prices of over-demanded goods.",
        "Ascending auctions are also considered more intuitive for many bidders, and are believed to increase the trust of the bidders in the auctioneer, as they see the result gradually emerging from the bidders responses.",
        "Ascending auctions also have other desired economic properties, e.g., they incur smaller information revelation (consider, for example, English auctions vs. second-price sealed bid auctions). 1.1 Extant Work Many iterative combinatorial auction mechanisms rely on demand queries (see the survey in [35]).",
        "Figure 1 summa3 A Walrasian equilibrium is vector of item prices for which all the items are sold when each bidder receives a bundle in his demand set. 4 In few recent auction designs (e.g., [4, 28]) the payments are not necessarily the final prices of the auctions. 30 Valuation family Upper bound Reference Lower bound Reference General min(n, O( √ m)) [26], Section 4.2 min(n, m1/2− ) [32] Substitutes 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subadditive O(logm) [13] 2 [13] k-duplicates O(m1/k+1 ) [14] O(m1/k+1 ) [14] Procurement ln m [32] (log m)/2 [29, 32] Figure 2: The best approximation factors currently achievable by computationally-efficient combinatorial auctions, for several classes of valuations.",
        "All lower bounds in the table apply to all iterative auctions (except the one marked by *); all upper bounds in the table are achieved with item-price demand queries. rizes the basic classes of auctions implied by combinations of the above properties and classifies some of the auctions proposed in the literature according to this classification.",
        "For our purposes, two families of these auctions serve as the main motivating starting points: the first is the ascending item-price auctions of [22, 17] that with computational efficiency find an optimal allocation among (gross) substitutes valuations, and the second is the ascending bundleprice auctions of [37, 3] that find an optimal allocation among general valuations - but not necessarily with computational efficiency.",
        "The main lower bound in this area, due to [32], states that indeed, due to inherent communication requirements, it is not possible for any iterative auction to find the optimal allocation among general valuations with sub-exponentially many queries.",
        "A similar exponential lower bound was shown in [32] also for even approximating the optimal allocation to within a factor of m1/2− .",
        "Several lower bounds and upper bounds for approximation are known for some natural classes of valuations - these are summarized in Figure 2.",
        "In [32], the universal generality of demand queries is also shown: any non-deterministic communication protocol for finding an allocation that optimizes the social welfare can be converted into one that only uses demand queries (with bundle prices).",
        "In [41] this was generalized also to nondeterministic protocols for finding allocations that satisfy other natural types of economic requirements (e.g., approximate social efficiency, envy-freeness).",
        "However, in [33] it was demonstrated that this completeness of demand queries holds only in the nondeterministic setting, while in the usual deterministic setting, demand queries (even with bundle prices) may be exponentially weaker than general communication.",
        "Bundle-price auctions are a generalization of (the more natural and intuitive) item-price auctions.",
        "It is known that indeed item-price auctions may be exponentially weaker: a nice example is the case of valuations that are a XOR of k bundles5 , where k is small (say, polynomial).",
        "Lahaie and Parkes [24] show an economically-efficient bundle-price auction that uses a polynomial number of queries whenever k is polynomial.",
        "In contrast, [7] show that there exist valuations that are XORs of k = √ m bundles such that any item-price auction that finds an optimal allocation between them requires exponentially many queries.",
        "These results are part of a recent line of research ([7, 43, 24, 40]) that study the preference elicitation problem in combinatorial auctions and its relation to the full elicitation problem (i.e., learn5 These are valuations where bidders have values for k specific packages, and the value of each bundle is the maximal value of one of these packages that it contains. ing the exact valuations of the bidders).",
        "These papers adapt methods from machine-learning theory to the combinatorialauction setting.",
        "The preference elicitation problem and the full elicitation problem relate to a well studied problem in microeconomics known as the integrability problem (see, e.g., [27]).",
        "This problem studies if and when one can derive the utility function of a consumer from her demand function.",
        "Paper organization: Due to the relatively large number of results we present, we start with a survey of our new results in Section 2.",
        "After describing our formal model in Section 3, we present our results concerning the power of demand queries in Section 4.",
        "Then, we describe the power of item-price ascending auctions (Section 5) and bundle-price ascending auctions (Section 6).",
        "Readers who are mainly interested in the self-contained discussion of ascending auctions can skip Section 4.",
        "Missing proofs from Section 4 can be found in part I of the full paper ([8]).",
        "Missing proofs from Sections 5 and 6 can be found in part II of the full paper ([9]). 2.",
        "A SURVEY OF OUR RESULTS Our systematic analysis is composed of the combination of a rather large number of results characterizing the power and limitations of various classes of auctions.",
        "In this section, we will present an exposition describing our new results.",
        "We first discuss the power of demand-query iterative auctions, and then we turn our attention to ascending auctions.",
        "Figure 3 summarizes some of our main results. 2.1 Demand Queries Comparison of query types We first ask what other natural types of queries could we imagine iterative auctions using?",
        "Here is a list of such queries that are either natural, have been used in the literature, or that we found useful. 1.",
        "Value query: The auctioneer presents a bundle S, the bidder reports his value v(S) for this bundle. 2.",
        "Marginal-value query: The auctioneer presents a bundle A and an item j, the bidder reports how much he is willing to pay for j, given that he already owns A, i.e., v(j|A) = v(A ∪ {j}) − v(A). 3.",
        "Demand query (with item prices): The auctioneer presents a vector of item prices p1...pm; the bidder reports his demand under these prices, i.e., some set S that maximizes v(S) − P i∈S pi.6 6 A tie breaking rule should be specified.",
        "All of our results 31 Communication Constraint Can find an optimal allocation?",
        "Upper bound for welfare approx.",
        "Lower bound for welfare approx.",
        "Item-Price Demand Queries Yes 1 1 Poly.",
        "Communication No [32] min(n, O(m1/2 )) [26] min(n, m1/2− ) [32] Poly.",
        "Item-Price Demand Queries No [32] min(n, O(m1/2 )) min(n, m1/2− ) [32] Poly.",
        "Value Queries No [32] O( m√ log m ) [19] O( m log m ) Anonymous Item-Price AA No - min(O(n), O(m1/2− )) Non-anonymous Item-Price AA No -Anonymous Bundle-Price AA No - min(O(n), O(m1/2− )) Non-anonymous Bundle-Price AA Yes [37] 1 1 Poly Number of Item-Price AA No min(n, O(m1/2 ))Figure 3: This paper studies the economic efficiency of auctions that follow certain communication constraints.",
        "For each class of auctions, the table shows whether the optimal allocation can be achieved, or else, how well can it be approximated (both upper bounds and lower bounds).",
        "New results are highlighted.",
        "Abbreviations: Poly. (Polynomial number/size), AA (ascending auctions). - means that nothing is currently known except trivial solutions. 4.",
        "Indirect-utility query: The auctioneer presents a set of item prices p1...pm, and the bidder responds with his indirect-utility under these prices, that is, the highest utility he can achieve from a bundle under these prices: maxS⊆M (v(S) − P i∈S pi).7 5.",
        "Relative-demand query: the auctioneer presents a set of non-zero prices p1...pm, and the bidder reports the bundle that maximizes his value per unit of money, i.e., some set that maximizes v(S)P i∈S pi .8 Theorem: Each of these queries can be efficiently (i.e., in time polynomial in n, m, and the number of bits of precision t needed to represent a single value vi(S)) simulated by a sequence of demand queries with item prices.",
        "In particular this shows that demand queries can elicit all information about a valuation by simulating all 2m −1 value queries.",
        "We also observe that value queries and marginalvalue queries can simulate each other in polynomial time and that demand queries and indirect-utility queries can also simulate each other in polynomial time.",
        "We prove that exponentially many value queries may be needed in order to simulate a single demand query.",
        "It is interesting to note that for the restricted class of substitutes valuations, demand queries may be simulated by polynomial number of value queries [6].",
        "Welfare approximation The next question that we ask is how well can a computationally-efficient auction that uses only demand queries approximate the optimal allocation?",
        "Two separate obstacles are known: In [32], a lower bound of min(n, m1/2− ), for any fixed > 0, was shown for the approximation factor apply for any fixed tie breaking rule. 7 This is exactly the utility achieved by the bundle which would be returned in a demand query with the same prices.",
        "This notion relates to the Indirect-utility function studied in the Microeconomic literature (see, e.g., [27]). 8 Note that when all the prices are 1, the bidder actually reports the bundle with the highest per-item price.",
        "We found this type of query useful, for example, in the design of the approximation algorithm described in Figure 5 in Section 4.2. obtained using any polynomial amount of communication.",
        "A computational bound with the same value applies even for the case of single-minded bidders, but under the assumption of NP = ZPP [39].",
        "As noted in [32], the computationallyefficient greedy algorithm of [26] can be adapted to become a polynomial-time iterative auction that achieves a nearly matching approximation factor of min(n, O( √ m)).",
        "This iterative auction may be implemented with bundle-price demand queries but, as far as we see, not as one with item prices.",
        "Since in a single bundle-price demand query an exponential number of prices can be presented, this algorithm can have an exponential communication cost.",
        "In Section 4.2, we describe a different item-price auction that achieves the same approximation factor with a polynomial number of queries (and thus with a polynomial communication).",
        "Theorem: There exists a computationally-efficient iterative auction with item-price demand queries that finds an allocation that approximates the optimal welfare between arbitrary valuations to within a factor of min(n, O( √ m)).",
        "One may then attempt obtaining such an approximation factor using iterative auctions that use only the weaker value queries.",
        "However, we show that this is impossible: Theorem: Any iterative auction that uses a polynomial (in n and m) number of value queries can not achieve an approximation factor that is better than O( m log m ).9 Note however that auctions with only value queries are not completely trivial in power: the bundling auctions of Holzman et al. [19] can easily be implemented by a polynomial number of value queries and can achieve an approximation factor of O( m√ log m ) by using O(log m) equi-sized bundles.",
        "We do not know how to close the (tiny) gap between this upper bound and our lower bound.",
        "Representing bundle-prices We then deal with a critical issue with bundle-price auctions that was side-stepped by our model, as well as by all previous works that used bundle-price auctions: how are 9 This was also proven independently by Shahar Dobzinski and Michael Schapira. 32 the bundle prices represented?",
        "For item-price auctions this is not an issue since a query needs only to specify a small number, m, of prices.",
        "In bundle-price auctions that situation is more difficult since there are exponentially many bundles that require pricing.",
        "Our basic model (like all previous work that used bundle prices, e.g., [37, 34, 3]), ignores this issue, and only requires that the prices be determined, somehow, by the protocol.",
        "A finer model would fix a specific language for denoting bundle prices, force the protocol to represent the bundle-prices in this language, and require that the representations of the bundle-prices also be polynomial.",
        "What could such a language for denoting prices for all bundles look like?",
        "First note that specifying a price for each bundle is equivalent to specifying a valuation.",
        "Second, as noted in [31], most of the proposed bidding languages are really just languages for representing valuations, i.e., a syntactic representation of valuations - thus we could use any of them.",
        "This point of view opens up the general issue of which language should be used in bundle-price auctions and what are the implications of this choice.",
        "Here we initiate this line of investigation.",
        "We consider bundle-price auctions where the prices must be given as a XOR-bid, i.e., the protocol must explicitly indicate the price of every bundle whose value is different than that of all of its proper subsets.",
        "Note that all bundle-price auctions that do not explicitly specify a bidding language must implicitly use this language or a weaker one, since without a specific language one would need to list prices for all bundles, perhaps except for trivial ones (those with value 0, or more generally, those with a value that is determined by one of their proper subsets.)",
        "We show that once the representation length of bundle prices is taken into account (using the XOR-language), bundle-price auctions are no more strictly stronger than item-price auctions.",
        "Define the cost of an iterative auction as the total length of the queries and answers used throughout the auction (in the worst case).",
        "Theorem: For some class of valuations, bundle price auctions that use the XOR-language require an exponential cost for finding the optimal allocation.",
        "In contrast, item-price auctions can find the optimal allocation for this class within polynomial cost.10 This put doubts on the applicability of bundle-price auctions like [3, 37], and it may justify the use of hybrid pricing methods such as Ausubel, Cramton and Milgroms Clock-Proxy auction ([10]).",
        "Demand queries and linear programs The winner determination problem in combinatorial auctions may be formulated as an integer program.",
        "In many cases solving the linear-program relaxation of this integer program is useful: for some restricted classes of valuations it finds the optimum of the integer program (e.g., substitute valuations [22, 17]) or helps approximating the optimum (e.g., by randomized rounding [13, 14]).",
        "However, the linear program has an exponential number of variables.",
        "Nisan and Segal [32] observed the surprising fact that despite the ex10 Our proof relies on the sophisticated known lower bounds for constant depth circuits.",
        "We were not able to find an elementary proof. ponential number of variables, this linear program may be solved within polynomial communication.",
        "The basic idea is to solve the dual program using the Ellipsoid method (see, e.g., [20]).",
        "The dual program has a polynomial number of variables, but an exponential number of constraints.",
        "The Ellipsoid algorithm runs in polynomial time even on such programs, provided that a separation oracle is given for the set of constraints.",
        "Surprisingly, such a separation oracle can be implemented using a single demand query (with item prices) to each of the bidders.",
        "The treatment of [32] was somewhat ad-hoc to the problem at hand (the case of substitute valuations).",
        "Here we give a somewhat more general form of this important observation.",
        "Let us call the following class of linear programs generalized-winner-determination-relaxation (GWDR) LPs: Maximize X i∈N,S⊆M wi xi,S vi(S) s.t.",
        "X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M The case where wi = 1, di = 1, qj = 1 (for every i, j) is the usual linear relaxation of the winner determination problem.",
        "More generally, wi may be viewed as the weight given to bidder is welfare, qj may be viewed as the quantity of units of good j, and di may be viewed as duplicity of the number of bidders of type i. Theorem: Any GWDR linear program may be solved in polynomial time (in n, m, and the number of bits of precision t) using only demand queries with item prices.11 2.2 Ascending Auctions Ascending item-price auctions: It is well known that the item-price ascending auctions of Kelso and Crawford [22] and its variants [12, 16] find the optimal allocation as long as all players valuations have the substitutes property.",
        "The obvious question is whether the optimal allocation can be found for a larger class of valuations.",
        "Our main result here is a strong negative result: Theorem: There is a 2-item 2-player problem where no ascending item-price auction can find the optimal allocation.",
        "This is in contrast to both the power of bundle-price ascending auctions and to the power of general item-price demand queries (see above), both of which can always find the optimal allocation and in fact even provide full preference elicitation.",
        "The same proof proves a similar impossibility result for other types of auctions (e.g., descending auctions, non-anonymous auctions).",
        "More extension of this result: • Eliciting some classes of valuations requires an exponential number of ascending item-price trajectories. 11 The produced optimal solution will have polynomial support and thus can be listed fully. 33 • At least k − 1 ascending item-price trajectories are needed to elicit XOR formulae with k terms.",
        "This result is in some sense tight, since we show that any k-term XOR formula can be fully elicited by k−1 nondeterministic (i.e., when some exogenous teacher instructs the auctioneer on how to increase the prices) ascending auctions.12 We also show that item-price ascending auctions and iterative auctions that are limited to a polynomial number of queries (of any kind, not necessarily ascending) are incomparable in their power: ascending auctions, with small enough increments, can elicit the preferences in cases where any polynomial number of queries cannot.",
        "Motivated by several recent papers that studied the relation between eliciting and fully-eliciting the preferences in combinatorial auctions (e.g., [7, 24]), we explore the difference between these problems in the context of ascending auctions.",
        "We show that although a single ascending auction can determine the optimal allocation among any number of bidders with substitutes valuations, it cannot fully-elicit such a valuation even for a single bidder.",
        "While it was shown in [25] that the set of substitutes valuations has measure zero in the space of general valuations, its dimension is not known, and in particular it is still open whether a polynomial amount of information suffices to describe a substitutes valuation.",
        "While our result may be a small step in that direction (a polynomial full elicitation may still be possible with other communication protocols), we note that our impossibility result also holds for valuations in the class OXS defined by [25], valuations that we are able to show have a compact representation.",
        "We also give several results separating the power of different models for ascending combinatorial auctions that use item-prices: we prove, not surprisingly, that adaptive ascending auctions are more powerful than oblivious ascending auctions and that non-deterministic ascending auctions are more powerful than deterministic ascending auctions.",
        "We also compare different kinds of non-anonymous auctions (e.g., simultaneous or sequential), and observe that anonymous bundle-price auctions and non-anonymous item-price auctions are incomparable in their power.",
        "Finally, motivated by Dutch auctions, we consider descending auctions, and how they compare to ascending ones; we show classes of valuations that can be elicited by ascending item-price auctions but not by descending item-price auctions, and vice versa.",
        "Ascending bundle-price auctions: All known ascending bundle-price auctions that are able to find the optimal allocation between general valuations (with free disposal) use non-anonymous prices.",
        "Anonymous ascending-price auctions (e.g., [42, 21, 37]) are only known to be able to find the optimal allocation among superadditive valuations or few other simple classes ([36]).",
        "We show that this is no mistake: Theorem: No ascending auction with anonymous prices can find the optimal allocation between general valuations. 12 Non-deterministic computation is widely used in CS and also in economics (e.g, a Walrasian equilibrium or [38]).",
        "In some settings, deterministic and non-deterministic models have equal power (e.g., computation with finite automata).",
        "This bound is regardless of the running time, and it also holds for descending auctions and non-deterministic auctions.",
        "We strengthen this result significantly by showing that anonymous ascending auctions cannot produce a better than O( √ m) approximation - the approximation ratio that can be achieved with a polynomial number of queries ([26, 32]) and, as mentioned, with a polynomial number of item-price demand queries.",
        "The same lower bound clearly holds for anonymous item-price ascending auctions since such auctions can be simulated by anonymous bundle-price ascending auctions.",
        "We currently do not have any lower bound on the approximation achievable by non-anonymous item-price ascending auctions.",
        "Finally, we study the performance of the existing computationally-efficient ascending auctions.",
        "These protocols ([37, 3]) require exponential time in the worst case, and this is unavoidable as shown by [32].",
        "However, we also observe that these auctions, as well as the whole class of similar ascending bundle-price auctions, require an exponential time even for simple additive valuations.",
        "This is avoidable and indeed the ascending item-price auctions of [22] can find the optimal allocation for these simple valuations with polynomial communication. 3.",
        "THE MODEL 3.1 Discrete Auctions for Continuous Values Our model aims to capture iterative auctions that operate on real-valued valuations.",
        "There is a slight technical difficulty here in bridging the gap between the discrete nature of an iterative auction, and the continuous nature of the valuations.",
        "This is exactly the same problem as in modeling a simple English auction.",
        "There are three standard formal ways to model it: 1.",
        "Model the auction as a continuous process and study its trajectory in time.",
        "For example, the so-called Japanese auction is basically a continuous model of an English model.13 2.",
        "Model the auction as discrete and the valuations as continuously valued.",
        "In this case we introduce a parameter and usually require the auction to produce results that are -close to optimal. 3.",
        "Model the valuations as discrete.",
        "In this case we will assume that all valuations are integer multiples of some small fixed quantity δ, e.g., 1 penny.",
        "All communication in this case is then naturally finite.",
        "In this paper we use the latter formulation and assume that all values are multiples of some δ.",
        "Thus, in some parts of the paper we assume without loss of generality that δ = 1, hence all valuations are integral.",
        "Almost all (if not all) of our results can be translated to the other two models with little effort. 3.2 Valuations A single auctioneer is selling m indivisible non-homogeneous items in a single auction, and let M be the set of these 13 Another similar model is the moving knives model in the cake-cutting literature. 34 items and N be the set of bidders.",
        "Each one of the n bidders in the auction has a valuation function vi : 2m → {0, δ, 2δ, ..., L}, where for every bundle of items S ⊆ M, vi(S) denotes the value of bidder i for the bundle S and is a multiple of δ in the range 0...L. We will sometimes denote the number of bits needed to represent such values in the range 0...L by t = log L. We assume free disposal, i.e., S ⊆ T implies vi(S) ≤ vi(T) and that vi(∅) = 0 for all bidders.",
        "We will mention the following classes of valuations: • A valuation is called sub-modular if for all sets of items A and B we have that v(A ∪ B) + v(A ∩ B) ≤ v(A) + v(B). • A valuation is called super-additive if for all disjoint sets of items A and B we have that v(A∪B) ≥ v(A)+ v(B). • A valuation is called a k-bundle XOR if it can be represented as a XOR combination of at most k atomic bids [30], i.e., if there are at most k bundles Si and prices pi such that for all S, v(S) = maxi|S⊇Si pi.",
        "Such valuations will be denoted by v = (S1 : p1) ⊕ (S2 : p2) ⊕ . . . ⊕ (Sk : pk).14 3.3 Iterative Auctions The auctioneer sets up a protocol (equivalently an algorithm), where at each stage of the protocol some information q - termed the query - is sent to some bidder i, and then bidder i replies with some reply that depends on the query as well as on his own valuation.",
        "In this paper, we assume that we have complete control over the bidders behavior, and thus the protocol also defines a reply function ri(q, vi) that specifies bidder is reply to query q.",
        "The protocol may be adaptive: the query value as well as the queried bidder may depend on the replies received for past queries.",
        "At the end of the protocol, an allocation S1...Sn must be declared, where Si ∩ Sj = ∅ for i = j.",
        "We say that the auction finds an optimal allocation if it finds the allocation that maximizes the social welfareP i vi(Si).",
        "We say that it finds a c-approximation if P i vi(Si) ≥ P i vi(Ti)/c where T1...Tn is an optimal allocation.",
        "The running time of the auction on a given instance of the bidders valuations is the total number of queries made on this instance.",
        "The running time of a protocol is the worst case cost over all instances.",
        "Note that we impose no computational limitations on the protocol or on the players.15 This of course only strengthens our hardness results.",
        "Yet, our positive results will not use this power and will be efficient also in the usual computational sense.",
        "Our goal will be to design computationally-efficient protocols.",
        "We will deem a protocol computationally-efficient if its cost is polynomial in the relevant parameters: the number of bidders n, the number of items m, and t = log L, where L is the largest possible value of a bundle.",
        "However, when we discuss ascending-price auctions and their variants, a computationally-efficient protocol will be required to be 14 For example, v = (abcd : 5) ⊕ (ab : 3) ⊕ (c : 4) denotes the XOR valuation with the terms abcd, ab, c and prices 5, 3, 4 respectively.",
        "For this valuation, v(abcd) = 5, v(abd) = 3, v(abc) = 4. 15 The running time really measures communication costs and not computational running time. pseudo-polynomial, i.e., it should ask a number of queries which is polynomial in m, n and L δ .",
        "This is because that ascending auctions can usually not achieve such running times (consider even the English auction on a single item).16 Note that all of our results give concrete bounds, where the dependence on the parameters is given explicitly; we use the standard big-Oh notation just as a shorthand.",
        "We say than an auction elicits some class V of valuations, if it determines the optimal allocation for any profile of valuations drawn from V ; We say that an auction fully elicits some class of valuations V , if it can fully learn any single valuation v ∈ V (i.e., learn v(S) for every S). 3.4 Demand Queries and Ascending Auctions Most of the paper will be concerned with a common special case of iterative auctions that we term demand auctions.",
        "In such auctions, the queries that are sent to bidders are demand queries: the query specifies a price p(S) ∈ + for each bundle S. The reply of bidder i is simply the set most desired - demanded - under these prices.",
        "Formally, a set S that maximizes vi(S) − p(S).",
        "It may happen that more than one set S maximizes this value.",
        "In which case, ties are broken according to some fixed tie-breaking rule, e.g., the lexicographically first such set is returned.",
        "All of our results hold for any fixed tie-breaking rule.",
        "Ascending auctions are iterative auctions with non-decreasing prices: Definition 1.",
        "In an ascending auction, the prices in the queries to the same bidder can only increase in time.",
        "Formally, let p be a query made for bidder i, and q be a query made for bidder i at a later stage in the protocol.",
        "Then for all sets S, q(S) ≥ p(S).",
        "A similar variant, which we also study and that is also common in real life, is descending auctions, in which prices can only decrease in time.",
        "Note that the term ascending auction refers to an auction with a single ascending trajectory of prices.",
        "It may be useful to define multi-trajectory ascending auctions, in which the prices maybe reset to zero a number of times (see, e.g., [4]).",
        "We consider two main restrictions on the types of allowed demand queries: Definition 2.",
        "Item Prices: The prices in each query are given by prices pj for each item j.",
        "The price of a set S is additive: p(S) = P j∈S pj.",
        "Definition 3.",
        "Anonymous prices: The prices seen by the bidders at any stage in the auction are the same, i.e. whenever a query is made to some bidder, the same query is also made to all other bidders (with the prices unchanged).",
        "In auctions with non-anonymous (discriminatory) prices, each bidder i has personalized prices denoted by pi (S).17 In this paper, all auctions are anonymous unless otherwise specified.",
        "Note that even though in our model valuations are integral (or multiples of some δ), we allow the demand query to 16 Most of the auctions we present may be adapted to run in time polynomial in log L, using a binary-search-like procedure, losing their ascending nature. 17 Note that a non-anonymous auction can clearly be simulated by n parallel anonymous auctions. 35 use arbitrary real numbers in +.",
        "That is, we assume that the increment we use in the ascending auctions may be significantly smaller than δ.",
        "All our hardness results hold for any , even for continuous price increments.",
        "A practical issue here is how will the query be specified: in the general case, an exponential number of prices needs to be sent in a single query.",
        "Formally, this is not a problem as the model does not limit the length of queries in any way - the protocol must simply define what the prices are in terms of the replies received for previous queries.",
        "We look into this issue further in Section 4.3. 4.",
        "THE POWER OF DEMAND QUERIES In this section, we study the power of iterative auctions that use demand queries (not necessarily ascending).",
        "We start by comapring demand queries to other types of queries.",
        "Then, we discuss how well can one approximate the optimal welfare using a polynomial number of demand queries.",
        "We also initiate the study of the representation of bundle-price demand queries, and finally, we show how demand queries help solving the linear-programming relaxation of combinatorial auctions in polynomial time. 4.1 The Power of Different Types of Queries In this section we compare the power of the various types of queries defined in Section 2.",
        "We will present computationally -efficient simulations of these query types using item-price demand queries.",
        "In Section 5.1 we show that these simulations can also be done using item-price ascending auctions.",
        "Lemma 4.1.",
        "A value query can be simulated by m marginalvalue queries.",
        "A marginal-value query can be simulated by two value queries.",
        "Lemma 4.2.",
        "A value query can be simulated by mt demand queries (where t = log L is the number of bits needed to represent a single bundle value).18 As a direct corollary we get that demand auctions can always fully elicit the bidders valuations by simulating all possible 2m − 1 queries and thus elicit enough information for determining the optimal allocation.",
        "Note, however, that this elicitation may be computationally inefficient.",
        "The next lemma shows that demand queries can be exponentially more powerful than value queries.",
        "Lemma 4.3.",
        "An exponential number of value queries may be required for simulating a single demand query.",
        "Indirect utility queries are, however, equivalent in power to demand queries: Lemma 4.4.",
        "An indirect-utility query can be simulated by mt + 1 demand queries.",
        "A demand query can be simulated by m + 1 indirect-utility queries.",
        "Demand queries can also simulate relative-demand queries:19 18 Note that t bundle-price demand queries can easily simulate a value query by setting the prices of all the bundles except S (the bundle with the unknown value) to be L, and performing a binary search on the price of S. 19 Note: although in our model values are integral (our multiples of δ), we allow the query prices to be arbitrary real numV MV D IU RD V 1 2 exp exp exp MV m 1 exp exp exp D mt poly 1 mt+1 poly IU 1 2 m+1 1 poly RD - - - - 1 Figure 4: Each entry in the table specifies how many queries of this row are needed to simulate a query from the relevant column.",
        "Abbreviations: V (value query), MV (marginal-value query), D (demand query), IU (Indirect-utility query), RD (relative demand query).",
        "Lemma 4.5.",
        "Relative-demand queries can be simulated by a polynomial number of demand queries.",
        "According to our definition of relative-demand queries, they clearly cannot simulate even value queries.",
        "Figure 4 summarizes the relations between these query types. 4.2 Approximating the Social Welfare with Value and Demand Queries We know from [32] that iterative combinatorial auctions that only use a polynomial number of queries can not find an optimal allocation among general valuations and in fact can not even approximate it to within a factor better than min{n, m1/2− }.",
        "In this section we ask how well can this approximation be done using demand queries with item prices, or using the weaker value queries.",
        "We show that, using demand queries, the lower bound can be matched, while value queries can only do much worse.",
        "Figure 5 describes a polynomial-time algorithm that achieves a min(n, O( √ m)) approximation ratio.",
        "This algorithm greedily picks the bundles that maximize the bidders per-item value (using relative-demand queries, see Section 4.1).",
        "As a final step, it allocates all the items to a single bidder if it improves the social welfare (this can be checked using value queries).",
        "Since both value queries and relative-demand queries can be simulated by a polynomial number of demand queries with item prices (Lemmas 4.2 and 4.5), this algorithm can be implemented by a polynomial number of demand queries with item prices.20 Theorem 4.6.",
        "The auction described in Figure 5 can be implemented by a polynomial number of demand queries and achieves a min{n, 4 √ m}-approximation for the social welfare.",
        "We now ask how well can the optimal welfare be approximated by a polynomial number of value queries.",
        "First we note that value queries are not completely powerless: In [19] it is shown that if the m items are split into k fixed bundles of size m/k each, and these fixed bundles are auctioned as though each was indivisible, then the social welfare bers, thus we may have bundles with arbitrarily close relative demands.",
        "In this sense the simulation above is only up to any given (and the number of queries is O(log L+log 1 )).",
        "When the relative-demand query prices are given as rational numbers, exact simulation is implied when log is linear in the input length. 20 In the full paper [8], we observe that this algorithm can be implemented by two descending item-price auctions (where we allow removing items along the auction). 36 generated by such an auction is at least m√ k -approximation of that possible in the original auction.",
        "Notice that such an auction can be implemented by 2k − 1 value queries to each bidder - querying the value of each bundle of the fixed bundles.",
        "Thus, if we choose k = log m bundles we get an m√ log m -approximation while still using a polynomial number of queries.",
        "The following lemma shows that not much more is possible using value queries: Lemma 4.7.",
        "Any iterative auction that uses only value queries and distinguishes between k-tuples of 0/1 valuations where the optimal allocation has value 1, and those where the optimal allocation has value k requires at least 2 m k queries.",
        "Proof.",
        "Consider the following family of valuations: for every S, such that |S| > m/2, v(S) = 1, and there exists a single set T, such that for |S| ≤ m/2, v(S) = 1 iff T ⊆ S and v(S) = 0 otherwise.",
        "Now look at the behavior of the protocol when all valuations vi have T = {1...m}.",
        "Clearly in this case the value of the best allocation is 1 since no set of size m 2 or lower has non-zero value for any player.",
        "Fix the sequence of queries and answers received on this k-tuple of valuations.",
        "Now consider the k-tuple of valuations chosen at random as follows: a partition of the m items into k sets T1...Tk each of size m k each is chosen uniformly at random among all such partitions.",
        "Now consider the k-tuple of valuations from our family that correspond to this partition - clearly Ti can be allocated to i, for each i, getting a total value of k. Now look at the protocol when running on these valuations and compare its behavior to the original case.",
        "Note that the answer to a query S to player i differs between the case of Ti and the original case of T = {1...m} only if |S| ≤ m 2 and Ti ⊆ S. Since Ti is distributed uniformly among all sets of size exactly m k , we have that for any fixed query S to player i, where |S| ≤ m 2 , Pr[Ti ⊆ S] ≤ „ |S| m «|Ti| ≤ 2− m k Using the union-bound, if the original sequence of queries was of length less than 2 m k , then with positive probability none of the queries in the sequence would receive a different answer than for the original input tuple.",
        "This is forbidden since the protocol must distinguish between this case and the original case - which cannot happen if all queries receive the same answer.",
        "Hence there must have been at least 2 m k queries for the original tuple of valuations.",
        "We conclude that a polynomial time protocol that uses only value queries cannot obtain a better than O( m log m ) approximation of the welfare: Theorem 4.8.",
        "An iterative auction that uses a polynomial number of value queries cannot achieve better than O( m log m )-approximation for the social welfare.",
        "Proof.",
        "Immediate from Lemma 4.7: achieving any approximation ratio k which is asymptotically greater than m log m needs an exponential number of value queries.",
        "An Approximation Algorithm: Initialization: Let T ← M be the current items for sale.",
        "Let K ← N be the currently participating bidders.",
        "Let S∗ 1 ← ∅, ..., S∗ n ← ∅ be the provisional allocation.",
        "Repeat until T = ∅ or K = ∅: Ask each bidder i in K for the bundle Si that maximizes her per-item value, i.e., Si ∈ argmaxS⊆T vi(S) |S| .",
        "Let i be the bidder with the maximal per-item value, i.e., i ∈ argmaxi∈K vi(Si) |Si| .",
        "Set: s∗ i = si, K = K \\ i, M = M \\ Si Finally: Ask the bidders for their values vi(M) for the grand bundle.",
        "If allocating all the items to some bidder i improves the social welfare achieved so far (i.e., ∃i ∈ N such that vi(M) > P i∈N vi(S∗ i )), then allocate all items to this bidder i.",
        "Figure 5: This algorithm achieves a min{n, 4 √ m}approximation for the social welfare, which is asymptotically the best worst-case approximation possible with polynomial communication.",
        "This algorithm can be implemented with a polynomial number of demand queries. 4.3 The Representation of Bundle Prices In this section we explicitly fix the language in which bundle prices are presented to the bidders in bundle-price auctions.",
        "This language requires the algorithm to explicitly list the price of every bundle with a non-trivial price.",
        "Trivial in this context is a price that is equal to that of one of its proper subsets (which was listed explicitly).",
        "This representation is equivalent to the XOR-language for expressing valuations.",
        "Formally, each query q is given by an expression: q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl).",
        "In this representation, the price demanded for every set S is simply p(S) = max{k=1...l|Sk⊆S}pk.",
        "Definition 4.",
        "The length of the query q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl) is l. The cost of an algorithm is the sum of the lengths of the queries asked during the operation of the algorithm on the worst case input.",
        "Note that under this definition, bundle-price auctions are not necessarily stronger than item-price auctions.",
        "An itemprice query that prices each item for 1, is translated to an exponentially long bundle-price query that needs to specify the price |S| for each bundle S. But perhaps bundle-price auctions can still find optimal allocations whenever itemprice auction can, without directly simulating such queries?",
        "We show that this is not the case: indeed, when the representation length is taken into account, bundle price auctions are sometimes seriously inferior to item price auctions.",
        "Consider the following family of valuations: Each item is valued at 3, except that for some single set S, its value is a bit more: 3|S| + b, where b ∈ {0, 1, 2}.",
        "Note that an item price auction can easily find the optimal allocation between any two such valuations: Set the prices of each item to 3+ ; if the demand sets of the two players are both empty, then b = 0 for both valuations, and an arbitrary allocation is fine.",
        "If one of them is empty and the other non-empty, allocate the non-empty demand set to its bidder, and the rest to the other.",
        "If both demand sets are non-empty then, unless they form an exact partition, we need to see which b is larger, which we can do by increasing the price of a single item in each demand set. 37 We will show that any bundle-price auction that uses only the XOR-language to describe bundle prices requires an exponential cost (which includes the sum of all description lengths of prices) to find an optimal allocation between any two such valuations.",
        "Lemma 4.9.",
        "Every bundle-price auction that uses XORexpressions to denote bundle prices requires 2Ω( √ m) cost in order to find the optimal allocation among two valuations from the above family.",
        "The complication in the proof stems from the fact that using XOR-expressions, the length of the price description depends on the number of bundles whose price is strictly larger than each of their subsets - this may be significantly smaller than the number of bundles that have a non-zero price. (The proof becomes easy if we require the protocol to explicitly name every bundle with non-zero price.)",
        "We do not know of any elementary proof for this lemma (although we believe that one can be found).",
        "Instead we reduce the problem to a well known lower bound in boolean circuit complexity [18] stating that boolean circuits of depth 3 that compute the majority function on m variables require 2Ω( √ m) size. 4.4 Demand Queries and Linear Programming Consider the following linear-programming relaxation for the generalized winner-determination problem in combinatorial auctions (the primal program): Maximize X i∈N,S⊆M wi xi,S vi(S) s.t.",
        "X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M Note that the primal program has an exponential number of variables.",
        "Yet, we will be able to solve it in polynomial time using demand queries to the bidders.",
        "The solution will have a polynomial size support (non-zero values for xi,S), and thus we will be able to describe it in polynomial time.",
        "Here is its dual: Minimize X j∈M qjpj + X i∈N diui s.t. ui + X j∈S pj ≥ wivi(S) ∀i ∈ N, S ⊆ M pi ≥ 0, uj ≥ 0 ∀i ∈ M, j ∈ N Notice that the dual problem has exactly n + m variables but an exponential number of constraints.",
        "Thus, the dual can be solved using the Ellipsoid method in polynomial time - if a separation oracle can be implemented in polynomial time.",
        "Recall that a separation oracle, when given a possible solution, either confirms that it is a feasible solution, or responds with a constraint that is violated by the possible solution.",
        "We construct a separation oracle for solving the dual program, using a single demand query to each of the bidders.",
        "Consider a possible solution (u, p) for the dual program.",
        "We can re-write the constraints of the dual program as: ui/wi ≥ vi(S) − X j∈S pj/wi Now a demand query to bidder i with prices pj/wi reveals exactly the set S that maximizes the RHS of the previous inequality.",
        "Thus, in order to check whether (u, p) is feasible it suffices to (1) query each bidder i for his demand Di under the prices pj/wi; (2) check only the n constraints ui + P j∈Di pj ≥ wivi(Di) (where vi(Di) can be simulated using a polynomial sequence of demand queries as shown in Lemma 4.2).",
        "If none of these is violated then we are assured that (u, p) is feasible; otherwise we get a violated constraint.",
        "What is left to be shown is how the primal program can be solved. (Recall that the primal program has an exponential number of variables.)",
        "Since the Ellipsoid algorithm runs in polynomial time, it encounters only a polynomial number of constraints during its operation.",
        "Clearly, if all other constraints were removed from the dual program, it would still have the same solution (adding constraints can only decrease the space of feasible solutions).",
        "Now take the reduced dual where only the constraints encountered exist, and look at its dual.",
        "It will have the same solution as the original dual and hence of the original primal.",
        "However, look at the form of this dual of the reduced dual.",
        "It is just a version of the primal program with a polynomial number of variables - those corresponding to constraints that remained in the reduced dual.",
        "Thus, it can be solved in polynomial time, and this solution clearly solves the original primal program, setting all other variables to zero. 5.",
        "ITEM-PRICE ASCENDING AUCTIONS In this section we characterize the power of ascending item-price auctions.",
        "We first show that this power is not trivial: such auctions can in general elicit an exponential amount of information.",
        "On the other hand, we show that the optimal allocation cannot always be determined by a single ascending auction, and in some cases, nor by an exponential number of ascending-price trajectories.",
        "Finally, we separate the power of different models of ascending auctions. 5.1 The Power of Item-Price Ascending Auctions We first show that if small enough increments are allowed, a single ascending trajectory of item-prices can elicit preferences that cannot be elicited with polynomial communication.",
        "As mentioned, all our hardness results hold for any increment, even infinitesimal.",
        "Theorem 5.1.",
        "Some classes of valuations can be elicited by item-price ascending auctions, but cannot be elicited by a polynomial number of queries of any kind.",
        "Proof. (sketch) Consider two bidders with v(S) = 1 if |S| > n 2 , v(S) = 0 if |S| < n 2 and every S such that |S| = n 2 has an unknown value from {0, 1}.",
        "Due to [32], determining the optimal allocation here requires exponential communication in the worst case.",
        "Nevertheless, we show (see [9]) that an item-price ascending auction can do it, as long as it can use exponentially small increments.",
        "We now describe another positive result for the power of item-price ascending auctions.",
        "In section 4.1, we showed 38 v(ab) v(a) v(b) Bidder 1 2 α ∈ (0, 1) β ∈ (0, 1) Bidder 2 2 2 2 Figure 6: No item-price ascending auctions can determine the optimal allocation for this class of valuations. that a value query can be simulated with a (truly) polynomial number of item-price demand queries.",
        "Here, we show that every value query can be simulated by a (pseudo) polynomial number of ascending item-price demand queries. (In the next subsection, we show that we cannot always simulate even a pair of value queries using a single item-price ascending auction.)",
        "In the full paper (part II,[9]), we show that we can simulate other types of queries using item-price ascending auctions.",
        "Proposition 5.2.",
        "A value query can be simulated by an item-price ascending auction.",
        "This simulation requires a polynomial number of queries.",
        "Actually, the proof for Proposition 5.2 proves a stronger useful result regarding the information elicited by iterative auctions.",
        "It says that in any iterative auction in which the changes of prices are small enough in each stage (pseudocontinuous auctions), the value of all bundles demanded during the auction can be computed.",
        "The basic idea is that when the bidder moves from demanding some bundle Ti to demanding another bundle Ti+1, there is a point in which she is indifferent between these two bundles.",
        "Thus, knowing the value of some demanded bundle (e.g., the empty set) enables computing the values of all other demanded bundles.",
        "We say that an auction is pseudo-continuous, if it only uses demand queries, and in each step, the price of at most one item is changed by (for some ∈ (0, δ]) with respect to the previous query.",
        "Proposition 5.3.",
        "Consider any pseudo-continuous auction (not necessarily ascending), in which bidder i demands the empty set at least once along the auction.",
        "Then, the value of every bundle demanded by bidder i throughout the auction can be calculated at the end of the auction. 5.2 Limitations of Item-Price Ascending Auctions Although we observed that demand queries can solve any combinatorial auction problem, when the queries are restricted to be ascending, some classes of valuations cannot be elicited nor fully-elicited.",
        "An example for such class of valuations is given in Figure 6.",
        "Theorem 5.4.",
        "There are classes of valuations that cannot be elicited nor fully elicited by any item-price ascending auction.",
        "Proof.",
        "Let bidder 1 have the valuation described in the first row of Figure 6, where α and β are unknown values in (0, 1).",
        "First, we prove that this class cannot be fully elicited by a single ascending auction.",
        "Specifically, an ascending auction cannot reveal the values of both α and β.",
        "As long as pa and pb are both below 1, the bidder will always demand the whole bundle ab: her utility from ab is strictly greater than the utility from either a or b separately.",
        "For example, we show that u1(ab) > u1(a): u1(ab) = 2 − (pa + pb) = 1 − pa + 1 − pb > vA(a) − pa + 1 − pb > u1(a) Thus, in order to gain any information about α or β, the price of one of the items should become at least 1, w.l.o.g. pa ≥ 1.",
        "But then, the bundle a will not be demanded by bidder 1 throughout the auction, thus no information at all will be gained about α.",
        "Now, assume that bidder 2 is known to have the valuation described in the second row of Figure 6.",
        "The optimal allocation depends on whether α is greater than β (in bidder 1s valuation), and we proved that an ascending auction cannot determine this.",
        "The proof of the theorem above shows that for an unknown value to be revealed, the price of one item should be greater than 1, and the other price should be smaller than 1.",
        "Therefore, in a price-monotonic trajectory of prices, only one of these values can be revealed.",
        "An immediate conclusion is that this impossibility result also holds for item-price descending auctions.",
        "Since no such trajectory exists, then the same conclusion even holds for non-deterministic itemprice auctions (in which exogenous data tells us how to increase the prices).",
        "Also note that since the hardness stems from the impossibility to fully-elicit a valuation of a single bidder, this result also holds for non-anonymous ascending item-price auctions. 5.3 Limitations of Multi-Trajectory Ascending Auctions According to Theorem 5.4, no ascending item-price auction can always elicit the preferences (we prove a similar result for bundle prices in section 6).",
        "But can two ascending trajectories do the job?",
        "Or a polynomial number of ascending trajectories?",
        "We give negative answers for such suggestions.",
        "We define a k-trajectory ascending auction as a demandquery iterative auction in which the demand queries can be partitioned to k sets of queries, where the prices published in each set only increase in time.",
        "Note that we use a general definition; It allows the trajectories to run in parallel or sequentially, and to use information elicited in some trajectories for determining the future queries in other trajectories.",
        "The power of multiple-trajectory auctions can be demonstrated by the negative result of Gul and Stacchetti [17] who showed that even for an auction among substitutes valuations, an anonymous ascending item-price auction cannot compute VCG prices for all players.21 Ausubel [4] overcame this impossibility result and designed auctions that do compute VCG prices by organizing the auction as a sequence of n + 1 ascending auctions.",
        "Here, we prove that one cannot elicit XOR valuations with k terms by less than k − 1 ascending trajectories.",
        "On the other hand, we show that an XOR formula can be fully elicited by k−1 non-deterministic ascending auctions (or by k−1 deterministic ascending auctions if the auctioneer knows the atomic bundles).22 21 A recent unpublished paper by Mishra and Parkes extends this result, and shows that non-anonymous prices with bundle-prices are necessary in order that an ascending auction will end up with a universal-competitive-equilibrium (that leads to VCG payments). 22 This result actually separates the power of deterministic 39 Proposition 5.5.",
        "XOR valuations with k terms cannot be elicited (or fully elicited) by any (k-2)-trajectory itemprice ascending auction, even when the atomic bundles are known to the elicitor.",
        "However, these valuations can be elicited (and fully elicited) by (k-1)-trajectory non-deterministic non-anonymous item-price ascending auctions.",
        "Moreover, an exponential number of trajectories is required for eliciting some classes of valuations: Proposition 5.6.",
        "Elicitation and full-elicitation of some classes of valuations cannot be done by any k-trajectory itemprice ascending auction, where k = o(2m ).",
        "Proof. (sketch) Consider the following class of valuations: For |S| < m 2 , v(S) = 0 and for |S| > m 2 , v(S) = 2; every bundle S of size m 2 has some unknown value in (0, 1).",
        "We show ([9]) that a single item-price ascending auction can reveal the value of at most one bundle of size n 2 , and therefore an exponential number of ascending trajectories is needed in order to elicit such valuations.",
        "We observe that the algorithm we presented in Section 4.2 can be implemented by a polynomial number of ascending auctions (each item-price demand query can be considered as a separate ascending auction), and therefore a min(n, 4 √ m)-approximation can be achieved by a polynomial number of ascending auctions.",
        "We do not currently have a better upper bound or any lower bound. 5.4 Separating the Various Models of Ascending Auctions Various models for ascending auctions have been suggested in the literature.",
        "In this section, we compare the power of the different models.",
        "As mentioned, all auctions are considered anonymous and deterministic, unless specified otherwise.",
        "Ascending vs.",
        "Descending Auctions: We begin the discussion of the relation between ascending auctions and descending auctions with an example.",
        "The algorithm by Lehmann, Lehmann and Nisan [25] can be implemented by a simple item-price descending auction (see the full paper for details [9]).",
        "This algorithm guarantees at least half of the optimal efficiency for submodular valuations.",
        "However, we are not familiar with any ascending auction that guarantees a similar fraction of the efficiency.",
        "This raises a more general question: can ascending auctions solve any combinatorialauction problem that is solvable using a descending auction (and vice versa)?",
        "We give negative answers to these questions.",
        "The idea behind the proofs is that the information that the auctioneer can get for free at the beginning of each type of auction is different.23 and non-deterministic iterative auctions: our proof shows that a non-deterministic iterative auction can elicit the kterm XOR valuations with a polynomial number of demand queries, and [7] show that this elicitation must take an exponential number of demand queries. 23 In ascending auctions, the auctioneer can reveal the most valuable bundle (besides M) before she starts raising the prices, thus she can use this information for adaptively choose the subsequent queries.",
        "In descending auctions, one can easily find the bundle with the highest average per-item price, keeping all other bundles with non-positive utilities, and use this information in the adaptive price change.",
        "Proposition 5.7.",
        "There are classes that cannot be elicited (fully elicited) by ascending item-price auctions, but can be elicited (resp. fully elicited) with a descending item-price auction.",
        "Proposition 5.8.",
        "There are classes that cannot be elicited (fully elicited) by item-price descending auctions, but can be elicited (resp. fully elicited) by item-price ascending auctions.",
        "Deterministic vs. Non-Deterministic Auctions: Nondeterministic ascending auctions can be viewed as auctions where some benevolent teacher that has complete information guides the auctioneer on how she should raise the prices.",
        "That is, preference elicitation can be done by a non-deterministic ascending auction, if there is some ascending trajectory that elicits enough information for determining the optimal allocation (and verifying that it is indeed optimal).",
        "We show that non-deterministic ascending auctions are more powerful than deterministic ascending auctions: Proposition 5.9.",
        "Some classes can be elicited (fully elicited) by an item-price non-deterministic ascending auction, but cannot be elicited (resp. fully elicited) by item-price deterministic ascending auctions.",
        "Anonymous vs. Non-Anonymous Auctions: As will be shown in Section 6, the power of anonymous and nonanonymous bundle-price ascending auctions differs significantly.",
        "Here, we show that a difference also exists for itemprice ascending auctions.",
        "Proposition 5.10.",
        "Some classes cannot be elicited by anonymous item-price ascending auctions, but can be elicited by a non-anonymous item-price ascending auction.",
        "Sequential vs.",
        "Simultaneous Auctions: A non-anonymous auction is called simultaneous if at each stage, the price of some item is raised by for every bidder.",
        "The auctioneer can use the information gathered until each stage, in all the personalized trajectories, to determine the next queries.",
        "A non-anonymous auction is called sequential if the auctioneer performs an auction for each bidder separately, in sequential order.",
        "The auctioneer can determine the next query based on the information gathered in the trajectories completed so far and on the history of the current trajectory.",
        "Proposition 5.11.",
        "There are classes that cannot be elicited by simultaneous non-anonymous item-price ascending auctions, but can be elicited by a sequential non-anonymous item-price ascending auction.",
        "Adaptive vs.",
        "Oblivious Auctions: If the auctioneer determines the queries regardless of the bidders responses (i.e., the queries are predefined) we say that the auction is oblivious.",
        "Otherwise, the auction is adaptive.",
        "We prove that an adaptive behaviour of the auctioneer may be beneficial.",
        "Proposition 5.12.",
        "There are classes that cannot be elicited (fully elicited) using oblivious item-price ascending auctions, but can be elicited (resp. fully elicited) by an adaptive item-price ascending auction. 40 5.5 Preference Elicitation vs. Full Elicitation Preference elicitation and full elicitation are closely related problems.",
        "If full elicitation is easy (e.g., in polynomial time) then clearly elicitation is also easy (by a nonanonymous auction, simply by learning all the valuations separately24 ).",
        "On the other hand, there are examples where preference elicitation is considered easy but learning is hard (typically, elicitation requires smaller amount of information; some examples can be found in [7]).",
        "The tatonnement algorithms by [22, 12, 16] end up with the optimal allocation for substitutes valuations.25 We prove that we cannot fully elicit substitutes valuations (or even their sub-class of OXS valuations defined in [25]), even for a single bidder, by an item-price ascending auction (although the optimal allocation can be found by an ascending auction for any number of bidders!).",
        "Theorem 5.13.",
        "Substitute valuations cannot be fully elicited by ascending item-price auctions.",
        "Moreover, they cannot be fully elicited by any m 2 ascending trajectories (m > 3).",
        "Whether substitutes valuations have a compact representation (i.e., polynomial in the number of goods) is an important open question.",
        "As a step in this direction, we show that its sub-class of OXS valuations does have a compact representation: every OXS valuation can be represented by at most m2 values.26 Lemma 5.14.",
        "Any OXS valuation can be represented by no more than m2 values. 6.",
        "BUNDLE-PRICE ASCENDING AUCTIONS All the ascending auctions in the literature that are proved to find the optimal allocation for unrestricted valuations are non-anonymous bundle-price auctions (iBundle(3) by Parkes and Ungar [37] and the Proxy Auction by Ausubel and Milgrom [3]).",
        "Yet, several anonymous ascending auctions have been suggested (e.g., AkBA [42], [21] and iBundle(2) [37]).",
        "In this section, we prove that anonymous bundle-price ascending auctions achieve poor results in the worst-case.",
        "We also show that the family of non-anonymous bundleprice ascending auctions can run exponentially slower than simple item-price ascending auctions. 6.1 Limitations of Anonymous Bundle-Price Ascending Auctions We present a class of valuations that cannot be elicited by anonymous bundle-price ascending auctions.",
        "These valuations are described in Figure 7.",
        "The basic idea: for determining some unknown value of one bidder we must raise 24 Note that an anonymous ascending auction cannot necessarily elicit a class that can be fully elicited by an ascending auction. 25 Substitute valuations are defined, e.g., in [16].",
        "Roughly speaking, a bidder with a substitute valuation will continue demand a certain item after the price of some other items was increased.",
        "For completeness, we present in the full paper [9] a proof for the efficiency of such auctions for substitutes valuations. 26 A unit-demand valuation is an XOR valuation in which all the atomic bundles are singletons.",
        "OXS valuations can be interpreted as an aggregation (OR) of any number of unit-demand bidders.",
        "Bid. 1 v1(ac) = 2 v1(bd) = 2 v1(cd) = α ∈ (0, 1) Bid. 2 v2(ab) = 2 v2(cd) = 2 v2(bd) = β ∈ (0, 1) Figure 7: Anonymous ascending bundle-price auctions cannot determine the optimal allocation for this class of valuations. a price of a bundle that should be demanded by the other bidder in the future.",
        "Theorem 6.1.",
        "Some classes of valuations cannot be elicited by anonymous bundle-price ascending auctions.",
        "Proof.",
        "Consider a pair of XOR valuations as described in Figure 7.",
        "For finding the optimal allocation we must know which value is greater between α and β.27 However, we cannot learn the value of both α and β by a single ascending trajectory: assume w.l.o.g. that bidder 1 demands cd before bidder 2 demands bd (no information will be elicited if none of these happens).",
        "In this case, the price for bd must be greater than 1 (otherwise, bidder 1 prefers bd to cd).",
        "Thus, bidder 2 will never demand the bundle bd, and no information will be elicited about β.",
        "The valuations described in the proof of Theorem 6.1 can be easily elicited by a non-anonymous item-price ascending auction.",
        "On the other hand, the valuations in Figure 6 can be easily elicited by an anonymous bundle-price ascending auction.",
        "We conclude that the power of these two families of ascending auctions is incomparable.",
        "We strengthen the impossibility result above by showing that anonymous bundle-price auctions cannot even achieve better than a min{O(n), O( √ m)}-approximation for the social welfare.",
        "This approximation ratio can be achieved with polynomial communication, and specifically with a polynomial number of item-price demand queries.28 Theorem 6.2.",
        "An anonymous bundle-price ascending auction cannot guarantee better than a min{ n 2 , √ m 2 } approximation for the optimal welfare.",
        "Proof. (Sketch) Assume we have n bidders and n2 items for sale, and that n is prime.",
        "We construct n2 distinct bundles with the following properties: for each bidder, we define a partition Si = (Si 1, ..., Si n) of the n2 items to n bundles, such that any two bundles from different partitions intersect.",
        "In the full paper, part II [9] we show an explicit construction using the properties of linear functions over finite fields.",
        "The rest of the proof is independent of the specific construction.",
        "Using these n2 bundles we construct a hard-to-elicit class.",
        "Every bidder has an atomic bid, in his XOR valuation, for each of these n2 bundles.",
        "A bidder i has a value of 2 for any bundle Si j in his partition.",
        "For all bundles in the other partitions, he has a value of either 0 or of 1 − δ, and these values are unknown to the auctioneer.",
        "Since every pair of bundles from different partitions intersect, only one bidder can receive a bundle with a value of 2. 27 If α > β, the optimal allocation will allocate cd to bidder 1 and ab to bidder 2.",
        "Otherwise, we give bd to bidder 2 and ac to bidder 1.",
        "Note that both bidders cannot gain a value of 2 in the same allocation, due to the intersections of the high-valued bundles. 28 Note that bundle-price queries may use exponential communication, thus the lower bound of [32] does not hold. 41 Non-anonymous Bundle-Price Economically-Efficient Ascending Auctions: Initialization: All prices are initialized to zero (non-anonymous bundle prices).",
        "Repeat: - Each bidder submits a bundle that maximizes his utility under his current personalized prices. - The auctioneer calculates a provisional allocation that maximizes his revenue under the current prices. - The prices of bundles that were demanded by losing bidders are increased by .",
        "Finally: Terminate when the provisional allocation assigns to each bidder the bundle he demanded.",
        "Figure 8: Auctions from this family (denoted by NBEA auctions) are known to achieve the optimal welfare.",
        "No bidder will demand a low-valued bundle, as long as the price of one of his high-valued bundles is below 1 (and thus gain him a utility greater than 1).",
        "Therefore, for eliciting any information about the low-valued bundles, the auctioneer should first arbitrarily choose a bidder (w.l.o.g bidder 1) and raise the prices of all the bundles (S1 1 , ..., S1 n) to be greater than 1.",
        "Since the prices cannot decrease, the other bidders will clearly never demand these bundles in future stages.",
        "An adversary may choose the values such that the low values of all the bidders for the bundles not in bidder 1s partition are zero (i.e., vi(S1 j ) = 0 for every i = 1 and every j), however, allocating each bidder a different bundle from bidder 1s partition, might achieve a welfare of n+1−(n−1)δ (bidder 1s valuation is 2, and 1 − δ for all other bidders); If these bundles were wrongly allocated, only a welfare of 2 might be achieved (2 for bidder 1s high-valued bundle, 0 for all other bidders).",
        "At this point, the auctioneer cannot have any information about the identity of the bundles with the non-zero values.",
        "Therefore, an adversary can choose the values of the bundles received by bidders 2, ..., n in the final allocation to be zero.",
        "We conclude that anonymous bundleprice auctions cannot guarantee a welfare greater than 2 for this class, where the optimal welfare can be arbitrarily close to n + 1. 6.2 Bundle Prices vs.",
        "Item Prices The core of the auctions in [37, 3] is the scheme described in Figure 8 (in the spirit of [35]) for auctions with nonanonymous bundle prices.",
        "Auctions from this scheme end up with the optimal allocation for any class of valuations.",
        "We denote this family of ascending auctions as NBEA auctions29 .",
        "NBEA auctions can elicit k-term XOR valuations by a polynomial (in k) number of steps , although the elicitation of such valuations may require an exponential number of item-price queries ([7]), and item-price ascending auctions cannot do it at all (Theorem 5.4).",
        "Nevertheless, we show that NBEA auctions (and in particular, iBundle(3) and the proxy auction) are sometimes inferior to simple item-price demand auctions.",
        "This may justify the use of hybrid auctions that use both linear and non-linear prices (e.g., the clock-proxy auction [10]).",
        "We show that auctions from this 29 Non-anonymous Bundle-price economically Efficient Ascending auctions.",
        "For completeness, we give in the full paper [9] a simple proof for the efficiency (up to an ) of auctions of this scheme . family may use an exponential number of queries even for determining the optimal allocation among two bidders with additive valuations30 , where such valuations can be elicited by a simple item-price ascending auction.",
        "We actually prove this property for a wider class of auctions we call conservative auctions.",
        "We also observe that in conservative auctions, allowing the bidders to submit all the bundles in their demand sets ensures that the auction runs a polynomial number of steps - if L is not too high (but with exponential communication, of course).",
        "An ascending auction is called conservative if it is nonanonymous, uses bundle prices initialized to zero and at every stage the auctioneer can only raise prices of bundles demanded by the bidders until this stage.",
        "In addition, each bidder can only receive bundles he demanded during the auction.",
        "Note that NBEA auctions are by definition conservative.",
        "Proposition 6.3.",
        "If every bidder demands a single bundle in each step of the auction, conservative auctions may run for an exponential number of steps even for additive valuations.",
        "If the bidders are allowed to submit all the bundles in their demand sets in each step, then conservative auctions can run in a polynomial number of steps for any profile of valuations, as long as the maximal valuation L is polynomial in m, n and 1 δ .",
        "Acknowledgments: The authors thank Moshe Babaioff, Shahar Dobzinski, Ron Lavi, Daniel Lehmann, Ahuva Mualem, David Parkes, Michael Schapira and Ilya Segal for helpful discussions.",
        "Supported by grants from the Israeli Academy of Sciences and the USAIsrael Binational Science Foundation. 7.",
        "REFERENCES [1] amazon.",
        "Web Page: http://www.amazon.com. [2] ebay.",
        "Web Page: http://www.ebay.com. [3] L. M. Ausubel and P. R. Milgrom.",
        "Ascending auctions with package bidding.",
        "Frontiers of Theoretical Economics, 1:1-42, 2002. [4] Lawrence Ausubel.",
        "An efficient dynamic auction for heterogeneous commodities, 2000.",
        "Working paper, University of Maryland. [5] Yair Bartal, Rica Gonen, and Noam Nisan.",
        "Incentive compatible multi unit combinatorial auctions.",
        "In TARK 03, 2003. [6] Alejandro Bertelsen.",
        "Substitutes valuations and m -concavity.",
        "M.Sc.",
        "Thesis, The Hebrew University of Jerusalem, 2005. [7] Avrim Blum, Jeffrey C. Jackson, Tuomas Sandholm, and Martin A. Zinkevich.",
        "Preference elicitation and query learning.",
        "Journal of Machine Learning Research, 5:649-667, 2004. [8] Liad Blumrosen and Noam Nisan.",
        "On the computational power of iterative auctions I: demand queries.",
        "Working paper, The Hebrew University of 30 Valuations are called additive if for any disjoint bundles A and B, v(A ∪ B) = v(A) + v(B).",
        "Additive valuations are both sub-additive and super-additive and are determined by the m values assigned for the singletons. 42 Jerusalem.",
        "Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [9] Liad Blumrosen and Noam Nisan.",
        "On the computational power of iterative auctions II: ascending auctions.",
        "Working paper, The Hebrew University of Jerusalem.",
        "Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [10] P. Cramton, L.M.",
        "Ausubel, and P.R.",
        "Milgrom.",
        "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
        "Chapter 5.",
        "The Clock-Proxy Auction: A Practical Combinatorial Auction Design.",
        "MIT Press.",
        "Forthcoming, 2005. [11] P. Cramton, Y. Shoham, and R. Steinberg (Editors).",
        "Combinatorial Auctions.",
        "MIT Press.",
        "Forthcoming, 2005. [12] G. Demange, D. Gale, and M. Sotomayor.",
        "Multi-item auctions.",
        "Journal of Political Economy, 94:863-872, 1986. [13] Shahar Dobzinski, Noam Nisan, and Michael Schapira.",
        "Approximation algorithms for cas with complement-free bidders.",
        "In The 37th ACM symposium on theory of computing (STOC)., 2005. [14] Shahar Dobzinski and Michael Schapira.",
        "Optimal upper and lower approximation bounds for k-duplicates combinatorial auctions.",
        "Working paper, the Hebrew University. [15] Combinatorial bidding conference.",
        "Web Page: http://wireless.fcc.gov/auctions/conferences/combin2003. [16] Faruk Gul and Ennio Stacchetti.",
        "Walrasian equilibrium with gross substitutes.",
        "Journal of Economic Theory, 87:95 - 124, 1999. [17] Faruk Gul and Ennio Stacchetti.",
        "The english auction with differentiated commodities.",
        "Journal of Economic Theory, 92(3):66 - 95, 2000. [18] J. Hastad.",
        "Almost optimal lower bounds for small depth circuits.",
        "In 18th STOC, pages 6-20, 1986. [19] Ron Holzman, Noa Kfir-Dahav, Dov Monderer, and Moshe Tennenholtz.",
        "Bundling equilibrium in combinatrial auctions.",
        "Games and Economic Behavior, 47:104-123, 2004. [20] H. Karloff.",
        "Linear Programming.",
        "Birkh¨auser Verlag, 1991. [21] Frank Kelly and Richard Steinberg.",
        "A combinatorial auction with multiple winners for universal service.",
        "Management Science, 46:586-596, 2000. [22] A.S. Kelso and V.P.",
        "Crawford.",
        "Job matching, coalition formation, and gross substitute.",
        "Econometrica, 50:1483-1504, 1982. [23] Subhash Khot, Richard J. Lipton, Evangelos Markakis, and Aranyak Mehta.",
        "Inapproximability results for combinatorial auctions with submodular utility functions.",
        "In Working paper., 2004. [24] Sebastien Lahaie and David C. Parkes.",
        "Applying learning algorithms to preference elicitation.",
        "In EC 04. [25] Benny Lehmann, Daniel Lehmann, and Noam Nisan.",
        "Combinatorial auctions with decreasing marginal utilities.",
        "In ACM conference on electronic commerce.",
        "To appear, Games and Economic Behaviour., 2001. [26] D. Lehmann, L. OCallaghan, and Y. Shoham.",
        "Truth revelation in approximately efficient combinatorial auctions.",
        "JACM, 49(5):577-602, Sept. 2002. [27] A. Mas-Collel, W. Whinston, and J.",
        "Green.",
        "Microeconomic Theory.",
        "Oxford university press, 1995. [28] Debasis Mishra and David Parkes.",
        "Ascending price vickrey auctions using primal-dual algorithms., 2004.",
        "Working paper, Harvard University. [29] Noam Nisan.",
        "The communication complexity of approximate set packing and covering.",
        "In ICALP 2002. [30] Noam Nisan.",
        "Bidding and allocation in combinatorial auctions.",
        "In ACM Conference on Electronic Commerce, 2000. [31] Noam Nisan.",
        "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
        "Chapter 1.",
        "Bidding Languages.",
        "MIT Press.",
        "Forthcoming, 2005. [32] Noam Nisan and Ilya Segal.",
        "The communication requirements of efficient allocations and supporting prices, 2003.",
        "Working paper.",
        "Available from http://www.cs.huji.ac.il/˜noam/mkts.html Forthcoming in the Journal of Economic Theory. [33] Noam Nisan and Ilya Segal.",
        "Exponential communication inefficiency of demand queries, 2004.",
        "Working paper.",
        "Available from http://www.stanford.edu/ isegal/queries1.pdf. [34] D. C. Parkes and L. H. Ungar.",
        "An ascending-price generalized vickrey auction.",
        "Tech.",
        "Rep., Harvard University, 2002. [35] David Parkes.",
        "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
        "Chapter 3.",
        "Iterative Combinatorial Auctions.",
        "MIT Press.",
        "Forthcoming, 2005. [36] David C. Parkes.",
        "Iterative combinatorial auctions: Achieving economic and computational efficiency.",
        "Ph.D. Thesis, Department of Computer and Information Science, University of Pennsylvania., 2001. [37] David C. Parkes and Lyle H. Ungar.",
        "Iterative combinatorial auctions: Theory and practice.",
        "In AAAI/IAAI, pages 74-81, 2000. [38] Ariel Rubinstein.",
        "Why are certain properties of binary relations relatively more common in natural languages.",
        "Econometrica, 64:343-356, 1996. [39] Tuomas Sandholm.",
        "Algorithm for optimal winner determination in combinatorial auctions.",
        "In Artificial Intelligence, volume 135, pages 1-54, 2002. [40] P. Santi, V. Conitzer, and T. Sandholm.",
        "Towards a characterization of polynomial preference elicitation with value queries in combinatorial auctions.",
        "In The 17th Annual Conference on Learning Theory, 2004. [41] Ilya Segal.",
        "The communication requirements of social choice rules and supporting budget sets, 2004.",
        "Working paper.",
        "Available from http://www.stanford.edu/ isegal/rules.pdf. [42] P.R.",
        "Wurman and M.P.",
        "Wellman.",
        "Akba: A progressive, anonymous-price combinatorial auction.",
        "In Second ACM Conference on Electronic Commerce, 2000. [43] Martin A. Zinkevich, Avrim Blum, and Tuomas Sandholm.",
        "On polynomial-time preference elicitation with value queries.",
        "In ACM Conference on Electronic Commerce, 2003. 43"
    ],
    "translated_text_sentences": [
        "En el Poder Computacional de Subastas Iterativas∗ [Resumen Extendido] Liad Blumrosen Escuela de Ingeniería e Informática Universidad Hebrea de Jerusalén Jerusalén, Israel liad@cs.huji.ac.il Noam Nisan Escuela de Ingeniería e Informática Universidad Hebrea de Jerusalén Jerusalén, Israel noam@cs.huji.ac.il RESUMEN Nos embarcamos en un análisis sistemático del poder y limitaciones de las subastas combinatorias iterativas.",
        "La mayoría de las subastas combinatorias iterativas existentes se basan en sugerir precios repetidamente para paquetes de artículos y consultar a los postores sobre su demanda bajo estos precios.",
        "Demostramos un gran número de resultados que muestran los límites de lo que se puede lograr mediante subastas de este tipo.",
        "Primero nos enfocamos en subastas que utilizan un número polinomial de consultas de demanda, y luego analizamos el poder de diferentes tipos de subastas de precio ascendente.",
        "Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía Términos Generales Algoritmos, Economía, Teoría 1.",
        "Las subastas combinatorias han recibido recientemente mucha atención.",
        "En una subasta combinatoria, un conjunto M de m artículos no idénticos se venden en una sola subasta a n postores competidores.",
        "Los postores tienen preferencias con respecto a los lotes de artículos que pueden recibir.",
        "Las preferencias del postor i están especificadas por una función de valoración vi: 2M → R+, donde vi(S) denota el valor que el postor i asigna a ganar el conjunto de artículos S. Suponemos disposición libre, es decir, que los vi son monótonos no decrecientes.",
        "El objetivo habitual del subastador es optimizar el bienestar social P i vi(Si), donde la asignación S1...Sn debe ser una partición de los artículos.",
        "Las aplicaciones incluyen muchos problemas complejos de asignación de recursos y, de hecho, las subastas combinatorias pueden ser vistas como la abstracción común de muchos problemas complejos de asignación de recursos.",
        "Las subastas combinatorias enfrentan dificultades económicas y computacionales y son un problema central en la frontera recientemente activa de la teoría económica y la informática.",
        "Un libro próximo [11] aborda muchos de los problemas involucrados en el diseño e implementación de subastas combinatorias.",
        "El diseño de una subasta combinatoria implica muchas consideraciones.",
        "En este artículo nos enfocamos en un solo tema central: la comunicación entre los oferentes y el mecanismo de asignación - la obtención de preferencias.",
        "Transferir toda la información sobre las preferencias de los licitadores requiere una cantidad de comunicación inasumible (exponencial en m).",
        "Por lo tanto, las subastas de revelación directa en las que los postores simplemente declaran sus preferencias al mecanismo solo son prácticas para tamaños de subasta muy pequeños o para familias muy limitadas de preferencias de postores.",
        "Por lo tanto, hemos visto una multitud de subastas iterativas sugeridas en las que el protocolo de subasta interactúa repetidamente con los diferentes postores, con el objetivo de obtener de manera adaptativa suficiente información sobre las preferencias de los postores para poder encontrar una asignación buena (óptima o cercana a óptima).",
        "La mayoría de las subastas iterativas sugeridas proceden manteniendo precios temporales para los lotes de artículos y consultando repetidamente a los postores sobre sus preferencias entre los lotes bajo el conjunto actual de precios, y luego actualizando el conjunto de precios de los lotes según las respuestas recibidas (por ejemplo, [22, 12, 17, 37, 3]).",
        "Efectivamente, una subasta iterativa de este tipo accede a las preferencias de los postores haciendo repetidamente el siguiente tipo de consulta de demanda a los postores: Consulta al postor i: un vector de precios de paquetes p = {p(S)}S⊆M; Respuesta: un paquete de artículos S ⊆ M que maximiza vi(S) − p(S).",
        "Estos tipos de consultas son muy naturales en un entorno económico, ya que capturan las preferencias reveladas de los postores.",
        "Algunas subastas, llamadas subastas de precio por artículo o de precio lineal, especifican un precio pi para cada artículo, y el precio de cualquier conjunto dado S siempre es lineal, p(S) = Σ i∈S pi.",
        "Otras subastas, llamadas subastas de precio por paquete, permiten especificar precios arbitrarios (no lineales) p(S) para los paquetes.",
        "Otra diferenciación importante entre los modelos de subastas iterativas se basa en si utilizan precios anónimos o no anónimos: En algunas subastas, los precios que se presentan a los postores son siempre los mismos (precios anónimos).",
        "En otras subastas (no anónimas), diferentes postores pueden enfrentar diferentes vectores de precios (discriminatorios).",
        "En las subastas de precio ascendente, obligar a que los precios sean anónimos puede ser una restricción significativa.",
        "En este artículo, nos embarcamos en un análisis sistemático del poder computacional de las subastas iterativas basadas en consultas de demanda.",
        "No buscamos presentar subastas para uso práctico, sino más bien entender las limitaciones y posibilidades de este tipo de subastas.",
        "En la primera parte de este documento, nuestra pregunta principal es ¿qué se puede hacer utilizando un número polinómico de este tipo de consultas?",
        "Es decir, polinomial en los parámetros principales del problema: n, m y el número de bits t necesarios para representar un único valor vi(S).",
        "Ten en cuenta que desde un punto de vista algorítmico estamos hablando de algoritmos de tiempo sublineal: el tamaño de la entrada aquí es realmente n(2m − 1) números, las descripciones de las funciones de valoración de todos los postores.",
        "Hay dos aspectos de eficiencia computacional en estos contextos: el primero es la comunicación con los postores, es decir, la cantidad de consultas realizadas, y el segundo es la usual tratabilidad computacional.",
        "Nuestros límites inferiores dependerán solo del número de consultas y se mantendrán independientemente de cualquier suposición computacional como P = NP.",
        "Nuestros límites superiores siempre serán computacionalmente eficientes tanto en términos del número de consultas como en términos de computación regular.",
        "Como se mencionó, este artículo se centra en el único aspecto de la obtención de preferencias y en sus consecuencias computacionales, sin abordar cuestiones de incentivos.",
        "Esto refuerza nuestros límites inferiores, pero significa que los límites superiores también requieren evaluación desde esta perspectiva antes de ser utilizados en cualquier subasta combinatoria real. La segunda parte de este documento estudia el poder de las subastas de precio ascendente.",
        "Las subastas ascendentes son subastas iterativas donde los precios publicados no pueden disminuir con el tiempo.",
        "En este trabajo, intentamos analizar sistemáticamente qué significan las diferencias entre varios modelos de subastas ascendentes.",
        "Intentamos responder a las siguientes preguntas: (i) ¿Qué modelos de subastas ascendentes pueden encontrar la asignación óptima, y para qué clases de valoraciones? (ii) En casos donde la asignación óptima no puede ser determinada por subastas ascendentes, ¿qué tan bien pueden estas subastas aproximar el bienestar social? (iii) ¿Cómo se comparan los diferentes modelos de subastas ascendentes?",
        "¿Son algunos modelos computacionalmente más fuertes que otros?",
        "Las subastas ascendentes han sido ampliamente estudiadas en la literatura (ver la encuesta reciente de Parkes [35]).",
        "La mayor parte de este trabajo presentó límites superiores, es decir, mecanismos propuestos con precios ascendentes y analizó sus propiedades.",
        "Un resultado que se acerca más al nuestro es el de Gul y Stacchetti [17], quienes demostraron que ninguna subasta de precio ascendente de artículo puede siempre determinar los precios VCG, incluso para valoraciones de sustitutos. Nuestro marco es más general que la línea tradicional de investigación que se concentra en la asignación final y observamos, sin embargo, que alguna propiedad de incentivo débil viene de forma gratuita en las subastas de consulta de demanda, ya que los jugadores miopes responderán todas las consultas de demanda de manera veraz.",
        "También observamos que en algunos casos (¡pero no siempre!) los problemas de incentivos pueden ser manejados de forma ortogonal a los problemas de obtención de preferencias, por ejemplo, utilizando precios de Vickrey-Clarke-Groves (VCG) (por ejemplo, [4, 34]). Además, discutimos este resultado en la Sección 5.3.",
        "Subastas iterativas Subastas de demanda Subastas de precio de artículo Subastas de precio anónimo Subastas ascendentes 1 2 3 4 5 6 97 8 10 Figura 1: El diagrama clasifica las siguientes subastas según sus propiedades: (1) La adaptación [12] para la subasta de Kelso & Crawford [22]. (2) La Subasta de Proxy [3] de Ausubel & Milgrom. (3) iBundle(3) de Parkes & Ungar [34]. (4) iBundle(2) de Parkes & Ungar [37]. (5) Nuestra adaptación descendente para la aproximación de 2 para valoraciones submodulares por [25] (ver Subsección 5.4). (6) La subasta de Ausubel [4] para valoraciones de sustitutos. (7) La adaptación de Nisan & Segal [32] de la aproximación O( √ m) por [26]. (8) La subasta de artículo duplicado por [5]. (9) Subasta para fórmulas de Leer-Una-Vez por [43]. (10) La Subasta AkBA por Wurman & Wellman [42]. pagos y en particular, en alcanzar equilibrios walrasianos o equilibrios competitivos.",
        "Se sabe que existe un equilibrio walrasiano en el caso de las valoraciones de sustitutos, y se sabe que es imposible para cualquier clase más amplia de valoraciones [16].",
        "Esto no descarta otras asignaciones mediante subastas ascendentes: en este documento consideramos las subastas como un proceso computacional donde el resultado, tanto la asignación como los pagos, pueden determinarse según todos los datos recopilados a lo largo de la subasta; Este marco general refuerza nuestros resultados negativos. Encontramos el estudio de las subastas ascendentes atractivo por diversas razones.",
        "Primero, las subastas ascendentes son ampliamente utilizadas en muchos contextos de la vida real, desde las subastas de espectro de la FCC hasta casi cualquier sitio web de comercio electrónico (por ejemplo, [2, 1]).",
        "De hecho, esta es quizás la forma más directa de vender artículos: preguntar a los postores qué les gustaría comprar a ciertos precios, y aumentar los precios de los productos con alta demanda.",
        "Las subastas ascendentes también se consideran más intuitivas para muchos postores, y se cree que aumentan la confianza de los postores en el subastador, ya que ven el resultado que emerge gradualmente de las respuestas de los postores.",
        "Las subastas ascendentes también tienen otras propiedades económicas deseadas, por ejemplo, implican una revelación de información menor (considere, por ejemplo, las subastas inglesas frente a las subastas de segundo precio sellado). 1.1 Trabajo Existente Muchos mecanismos de subasta combinatoria iterativos dependen de consultas de demanda (ver la encuesta en [35]).",
        "La Figura 1 muestra un equilibrio walrasiano como un vector de precios de los artículos para los cuales todos los artículos se venden cuando cada postor recibe un conjunto en su conjunto de demanda. En algunos diseños de subasta recientes (por ejemplo, [4, 28]), los pagos no son necesariamente los precios finales de las subastas. Familia de valoración Límite superior Referencia Límite inferior Referencia General min(n, O( √ m)) [26], Sección 4.2 min(n, m1/2− ) [32] Sustitutos 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subaditiva O(logm) [13] 2 [13] k-duplicados O(m1/k+1 ) [14] O(m1/k+1 ) [14] Adquisiciones ln m [32] (log m)/2 [29, 32] Figura 2: Los mejores factores de aproximación actualmente alcanzables por subastas combinatorias computacionalmente eficientes, para varias clases de valoraciones.",
        "Todos los límites inferiores en la tabla se aplican a todas las subastas iterativas (excepto la marcada con *); todos los límites superiores en la tabla se logran con consultas de demanda de precio de artículo. Categoriza las clases básicas de subastas implicadas por combinaciones de las propiedades anteriores y clasifica algunas de las subastas propuestas en la literatura de acuerdo con esta clasificación.",
        "Para nuestros propósitos, dos familias de estas subastas sirven como los principales puntos de partida motivadores: la primera son las subastas de precio de artículo ascendente de [22, 17] que con eficiencia computacional encuentran una asignación óptima entre valoraciones de sustitutos (brutos), y la segunda son las subastas de precio de paquete ascendente de [37, 3] que encuentran una asignación óptima entre valoraciones generales, pero no necesariamente con eficiencia computacional.",
        "El límite inferior principal en esta área, debido a [32], establece que, de hecho, debido a los requisitos de comunicación inherentes, no es posible que ninguna subasta iterativa encuentre la asignación óptima entre valoraciones generales con un número subexponencial de consultas.",
        "Un límite inferior exponencial similar fue demostrado en [32] también para aproximar de manera óptima la asignación dentro de un factor de m1/2−.",
        "Se conocen varios límites inferiores y superiores para la aproximación de algunas clases naturales de valoraciones, los cuales se resumen en la Figura 2.",
        "En [32], también se muestra la universalidad de las consultas de demanda: cualquier protocolo de comunicación no determinista para encontrar una asignación que optimice el bienestar social puede convertirse en uno que solo utilice consultas de demanda (con precios de paquetes).",
        "En [41] esto también se generalizó a protocolos no deterministas para encontrar asignaciones que satisfacen otros tipos naturales de requisitos económicos (por ejemplo, eficiencia social aproximada, ausencia de envidia).",
        "Sin embargo, en [33] se demostró que esta completitud de las consultas de demanda solo se cumple en el entorno no determinista, mientras que en el entorno determinista habitual, las consultas de demanda (incluso con precios de paquetes) pueden ser exponencialmente más débiles que la comunicación general.",
        "Las subastas de precio por paquete son una generalización de las subastas de precio por artículo (más naturales e intuitivas).",
        "Se sabe que las subastas de precio de artículo pueden ser exponencialmente más débiles: un buen ejemplo es el caso de valoraciones que son un XOR de k paquetes, donde k es pequeño (digamos, polinómico).",
        "Lahaie y Parkes [24] muestran una subasta de precio de paquete económicamente eficiente que utiliza un número polinómico de consultas siempre que k sea polinómico.",
        "Por el contrario, [7] muestra que existen valoraciones que son XORs de k = √ m paquetes, de tal manera que cualquier subasta de precio de artículo que encuentre una asignación óptima entre ellos requiere un número exponencial de consultas.",
        "Estos resultados forman parte de una línea reciente de investigación ([7, 43, 24, 40]) que estudia el problema de la obtención de preferencias en subastas combinatorias y su relación con el problema de obtención completo (es decir, aprender las valoraciones exactas de los postores). Estas son valoraciones donde los postores tienen valores para k paquetes específicos, y el valor de cada conjunto es el valor máximo de uno de estos paquetes que contiene.",
        "Estos documentos adaptan métodos de la teoría del aprendizaje automático al entorno de subastas combinatorias.",
        "El problema de la obtención de preferencias y el problema de la obtención completa se relacionan con un problema bien estudiado en microeconomía conocido como el problema de integrabilidad (ver, por ejemplo, [27]).",
        "Este problema estudia si y cuándo se puede derivar la función de utilidad de un consumidor a partir de su función de demanda.",
        "Organización del documento: Debido al relativamente gran número de resultados que presentamos, comenzamos con una revisión de nuestros nuevos resultados en la Sección 2.",
        "Después de describir nuestro modelo formal en la Sección 3, presentamos nuestros resultados sobre el poder de las consultas de demanda en la Sección 4.",
        "Luego, describimos el poder de las subastas ascendentes de precio de artículo (Sección 5) y las subastas ascendentes de precio de paquete (Sección 6).",
        "Los lectores que estén principalmente interesados en la discusión autocontenida de las subastas ascendentes pueden omitir la Sección 4.",
        "Las pruebas faltantes de la Sección 4 se pueden encontrar en la parte I del artículo completo ([8]).",
        "Las pruebas faltantes de las Secciones 5 y 6 se pueden encontrar en la parte II del artículo completo ([9]). 2.",
        "Una encuesta de nuestros resultados Nuestro análisis sistemático está compuesto por la combinación de un número bastante grande de resultados que caracterizan el poder y las limitaciones de varias clases de subastas.",
        "En esta sección, presentaremos una exposición describiendo nuestros nuevos resultados.",
        "Primero discutimos el poder de las subastas iterativas de demanda-consulta, y luego dirigimos nuestra atención a las subastas ascendentes.",
        "La Figura 3 resume algunos de nuestros principales resultados. 2.1 Comparación de consultas de demanda de tipos de consultas Preguntamos primero qué otros tipos naturales de consultas podríamos imaginar que las subastas iterativas utilicen.",
        "Aquí hay una lista de tales consultas que son naturales, han sido utilizadas en la literatura, o que encontramos útiles. 1.",
        "Consulta de valor: El subastador presenta un paquete S, el postor informa su valor v(S) para este paquete. 2.",
        "Consulta de valor marginal: El subastador presenta un paquete A y un artículo j, el postor informa cuánto está dispuesto a pagar por j, dado que ya posee A, es decir, v(j|A) = v(A ∪ {j}) − v(A). 3.",
        "Consulta de demanda (con precios de los artículos): El subastador presenta un vector de precios de los artículos p1...pm; el postor informa su demanda bajo estos precios, es decir, algún conjunto S que maximiza v(S) − Σ i∈S pi. Se debe especificar una regla de desempate.",
        "¿Todos nuestros resultados 31 Restricción de Comunicación pueden encontrar una asignación óptima?",
        "Límite superior para el bienestar aprox.",
        "Límite inferior para el bienestar aproximado.",
        "Consultas de demanda de precio de artículo Sí 1 1 Poli.",
        "Comunicación No [32] min(n, O(m1/2 )) [26] min(n, m1/2− ) [32] Poli.",
        "Consultas de demanda de precio de artículo No [32] min(n, O(m1/2 )) min(n, m1/2− ) [32] Poli.",
        "Este documento estudia la eficiencia económica de subastas que siguen ciertas restricciones de comunicación.",
        "Para cada clase de subastas, la tabla muestra si se puede lograr la asignación óptima, o en su defecto, qué tan bien se puede aproximar (tanto los límites superiores como los límites inferiores).",
        "Los nuevos resultados están resaltados.",
        "Abreviaturas: Poly. (número/tamaño polinomial), AA (subastas ascendentes). - significa que actualmente no se conoce nada excepto soluciones triviales. 4.",
        "Consulta de utilidad indirecta: El subastador presenta un conjunto de precios de los artículos p1...pm, y el postor responde con su utilidad indirecta bajo estos precios, es decir, la utilidad más alta que puede lograr de un conjunto bajo estos precios: maxS⊆M (v(S) − P i∈S pi).",
        "Consulta de demanda relativa: el subastador presenta un conjunto de precios no nulos p1...pm, y el postor informa el conjunto que maximiza su valor por unidad de dinero, es decir, algún conjunto que maximiza v(S)P i∈S pi. Teorema: Cada una de estas consultas puede ser simulada eficientemente (es decir, en tiempo polinómico en n, m y el número de bits de precisión t necesarios para representar un único valor vi(S)) por una secuencia de consultas de demanda con precios de artículos.",
        "En particular, esto muestra que las consultas de demanda pueden obtener toda la información sobre una valoración al simular todas las consultas de valor de 2m −1.",
        "También observamos que las consultas de valor y las consultas de valor marginal pueden simularse mutuamente en tiempo polinómico y que las consultas de demanda y las consultas de utilidad indirecta también pueden simularse mutuamente en tiempo polinómico.",
        "Demostramos que puede ser necesario realizar exponencialmente muchas consultas de valor para simular una sola consulta de demanda.",
        "Es interesante notar que para la clase restringida de valoraciones sustitutivas, las consultas de demanda pueden ser simuladas por un número polinomial de consultas de valor [6].",
        "Aproximación del bienestar La siguiente pregunta que nos hacemos es ¿qué tan bien puede aproximar una subasta computacionalmente eficiente que solo utiliza consultas de demanda la asignación óptima?",
        "Se conocen dos obstáculos separados: En [32], se demostró una cota inferior de min(n, m1/2− ), para cualquier fijo > 0, para el factor de aproximación aplicable para cualquier regla de desempate fija. Esto es exactamente la utilidad lograda por el paquete que se devolvería en una consulta de demanda con los mismos precios.",
        "Esta noción se relaciona con la función de utilidad indirecta estudiada en la literatura microeconómica (ver, por ejemplo, [27]). Nota que cuando todos los precios son 1, el postor en realidad informa el paquete con el precio por artículo más alto.",
        "Encontramos este tipo de consulta útil, por ejemplo, en el diseño del algoritmo de aproximación descrito en la Figura 5 de la Sección 4.2, obtenido utilizando cualquier cantidad polinómica de comunicación.",
        "Un límite computacional con el mismo valor se aplica incluso para el caso de postores de mente única, pero bajo la suposición de NP = ZPP [39].",
        "Como se señala en [32], el algoritmo voraz computacionalmente eficiente de [26] puede adaptarse para convertirse en una subasta iterativa de tiempo polinómico que logra un factor de aproximación casi coincidente de min(n, O( √ m)).",
        "Esta subasta iterativa puede implementarse con consultas de demanda de precios por paquete, pero, hasta donde vemos, no como una con precios por artículo.",
        "Dado que en una consulta de demanda de precio de paquete único se pueden presentar un número exponencial de precios, este algoritmo puede tener un costo de comunicación exponencial.",
        "En la Sección 4.2, describimos una subasta de precio de artículo diferente que logra el mismo factor de aproximación con un número polinomial de consultas (y por lo tanto con una comunicación polinomial).",
        "Teorema: Existe una subasta iterativa computacionalmente eficiente con consultas de demanda de precios de artículos que encuentra una asignación que aproxima el bienestar óptimo entre valoraciones arbitrarias dentro de un factor de min(n, O( √ m)).",
        "Uno puede intentar obtener un factor de aproximación utilizando subastas iterativas que solo utilicen las consultas de valor más débiles.",
        "Sin embargo, demostramos que esto es imposible: Teorema: Cualquier subasta iterativa que utilice un número polinómico (en n y m) de consultas de valor no puede lograr un factor de aproximación mejor que O( m log m ). Sin embargo, cabe destacar que las subastas con solo consultas de valor no son completamente triviales en poder: las subastas de agrupación de Holzman et al. [19] pueden implementarse fácilmente mediante un número polinómico de consultas de valor y pueden lograr un factor de aproximación de O( m√ log m ) utilizando O(log m) paquetes de tamaño equitativo.",
        "No sabemos cómo cerrar la brecha (pequeña) entre este límite superior y nuestro límite inferior.",
        "Representando precios de paquetes. Luego abordamos un problema crítico con las subastas de precios de paquetes que fue evitado por nuestro modelo, así como por todos los trabajos anteriores que utilizaron subastas de precios de paquetes: ¿cómo se representan los precios de los paquetes?",
        "Para subastas de precio de artículo, esto no es un problema ya que una consulta solo necesita especificar un pequeño número, m, de precios.",
        "En las subastas de precios por paquetes, esa situación es más difícil ya que hay exponencialmente muchos paquetes que requieren fijar precios.",
        "Nuestro modelo básico (como todos los trabajos anteriores que utilizaron precios de paquete, por ejemplo, [37, 34, 3]), ignora este problema y solo requiere que los precios sean determinados, de alguna manera, por el protocolo.",
        "Un modelo más refinado fijaría un idioma específico para denotar los precios de los paquetes, obligaría al protocolo a representar los precios de los paquetes en este idioma y requeriría que las representaciones de los precios de los paquetes también fueran polinomiales.",
        "¿Cómo podría ser un lenguaje para denotar precios de todos los paquetes?",
        "Primero, hay que tener en cuenta que especificar un precio para cada paquete es equivalente a especificar una valoración.",
        "Segundo, como se señala en [31], la mayoría de los lenguajes de oferta propuestos son en realidad solo lenguajes para representar valoraciones, es decir, una representación sintáctica de valoraciones, por lo tanto podríamos usar cualquiera de ellos.",
        "Este punto de vista abre el tema general de qué idioma se debe utilizar en las subastas de precios en paquete y cuáles son las implicaciones de esta elección.",
        "Aquí iniciamos esta línea de investigación.",
        "Consideramos subastas de precios de paquetes donde los precios deben ser dados como una oferta XOR, es decir, el protocolo debe indicar explícitamente el precio de cada paquete cuyo valor sea diferente al de todos sus subconjuntos adecuados.",
        "Es importante tener en cuenta que todas las subastas de precios por paquetes que no especifiquen explícitamente un idioma de oferta deben usar implícitamente este idioma o uno menos restrictivo, ya que sin un idioma específico se necesitaría listar los precios de todos los paquetes, quizás excepto los triviales (aquellos con valor 0, o más generalmente, aquellos cuyo valor está determinado por uno de sus subconjuntos propios).",
        "Mostramos que una vez que se tiene en cuenta la longitud de la representación de los precios de los paquetes (utilizando el lenguaje XOR), las subastas de precios de paquetes ya no son estrictamente más fuertes que las subastas de precios de artículos.",
        "Define el costo de una subasta iterativa como la longitud total de las consultas y respuestas utilizadas a lo largo de la subasta (en el peor de los casos).",
        "Teorema: Para alguna clase de valoraciones, las subastas de precios de paquetes que utilizan el lenguaje XOR requieren un costo exponencial para encontrar la asignación óptima.",
        "Por el contrario, las subastas de precio por artículo pueden encontrar la asignación óptima para esta clase dentro de un costo polinómico. Esto pone en duda la aplicabilidad de las subastas de precio por paquete como [3, 37], y puede justificar el uso de métodos de fijación de precios híbridos como la subasta de reloj-proxy de Ausubel, Cramton y Milgrom ([10]).",
        "Las consultas de demanda y los programas lineales. El problema de determinación del ganador en subastas combinatorias puede formularse como un programa entero.",
        "En muchos casos, resolver la relajación del programa lineal de este programa entero es útil: para algunas clases restringidas de valoraciones, encuentra el óptimo del programa entero (por ejemplo, valoraciones de sustitución [22, 17]) o ayuda a aproximar el óptimo (por ejemplo, mediante redondeo aleatorio [13, 14]).",
        "Sin embargo, el programa lineal tiene un número exponencial de variables.",
        "Nisan y Segal [32] observaron el sorprendente hecho de que, a pesar de ello, nuestra prueba se basa en los sofisticados límites inferiores conocidos para circuitos de profundidad constante.",
        "No pudimos encontrar una prueba elemental. Dado el número exponencial de variables, este programa lineal puede resolverse con comunicación polinómica.",
        "La idea básica es resolver el programa dual utilizando el método del Elipsoide (ver, por ejemplo, [20]).",
        "El programa dual tiene un número polinomial de variables, pero un número exponencial de restricciones.",
        "El algoritmo de Elipsoide se ejecuta en tiempo polinómico incluso en tales programas, siempre que se proporcione un oráculo de separación para el conjunto de restricciones.",
        "Sorprendentemente, dicho oráculo de separación puede implementarse utilizando una sola consulta de demanda (con precios de los artículos) a cada uno de los postores.",
        "El tratamiento de [32] fue algo improvisado para el problema en cuestión (el caso de las valoraciones de sustitución).",
        "Aquí presentamos una forma algo más general de esta importante observación.",
        "Llamemos a la siguiente clase de programas lineales relajación de determinación de ganadores generalizada (GWDR) LPs: Maximizar X i∈N,S⊆M wi xi,S vi(S) sujeto a.",
        "El caso donde wi = 1, di = 1, qj = 1 (para cada i, j) es la relajación lineal habitual del problema de determinación del ganador.",
        "Más generalmente, wi puede ser visto como el peso dado al bienestar del postor, qj puede ser visto como la cantidad de unidades del bien j, y di puede ser visto como la duplicidad del número de postores del tipo i. Teorema: Cualquier programa lineal de GWDR puede ser resuelto en tiempo polinómico (en n, m y el número de bits de precisión t) usando solo consultas de demanda con precios de los artículos. Subastas ascendentes de precios de artículos: Es bien sabido que las subastas ascendentes de precios de artículos de Kelso y Crawford [22] y sus variantes [12, 16] encuentran la asignación óptima siempre y cuando las valoraciones de todos los jugadores tengan la propiedad de sustitutos.",
        "La pregunta obvia es si se puede encontrar la asignación óptima para una clase más amplia de valoraciones.",
        "Nuestro resultado principal aquí es un resultado negativo fuerte: Teorema: Existe un problema de 2 elementos y 2 jugadores donde ninguna subasta de precio ascendente puede encontrar la asignación óptima.",
        "Esto contrasta tanto con el poder de las subastas ascendentes de precios de paquetes como con el poder de las consultas generales de demanda de precios de artículos (ver arriba), ambos de los cuales siempre pueden encontrar la asignación óptima e incluso proporcionar una completa obtención de preferencias.",
        "La misma prueba demuestra un resultado de imposibilidad similar para otros tipos de subastas (por ejemplo, subastas descendentes, subastas no anónimas).",
        "Más extensión de este resultado: • Obtener algunas clases de valoraciones requiere un número exponencial de trayectorias ascendentes de precios de artículos. La solución óptima producida tendrá un soporte polinómico y, por lo tanto, puede ser listada completamente. • Se necesitan al menos k − 1 trayectorias ascendentes de precios de artículos para obtener fórmulas XOR con k términos.",
        "Este resultado es en cierto sentido ajustado, ya que demostramos que cualquier fórmula XOR de k términos puede ser completamente revelada por k−1 subastas ascendentes no determinísticas (es decir, cuando algún profesor externo instruye al subastador sobre cómo aumentar los precios). También demostramos que las subastas ascendentes de precio de artículo y las subastas iterativas limitadas a un número polinómico de consultas (de cualquier tipo, no necesariamente ascendentes) son incomparables en su poder: las subastas ascendentes, con incrementos lo suficientemente pequeños, pueden revelar las preferencias en casos donde cualquier número polinómico de consultas no puede.",
        "Motivados por varios artículos recientes que estudiaron la relación entre la obtención y la obtención completa de las preferencias en subastas combinatorias (por ejemplo, [7, 24]), exploramos la diferencia entre estos problemas en el contexto de subastas ascendentes.",
        "Mostramos que aunque una subasta ascendente única puede determinar la asignación óptima entre cualquier número de postores con valoraciones sustitutivas, no puede obtener completamente dicha valoración ni siquiera para un único postor.",
        "Aunque se demostró en [25] que el conjunto de valoraciones de sustitutos tiene medida cero en el espacio de valoraciones generales, no se conoce su dimensión, y en particular aún está abierto si una cantidad polinómica de información es suficiente para describir una valoración de sustitutos.",
        "Si bien nuestro resultado puede ser un pequeño paso en esa dirección (una elicitación completa de polinomios aún puede ser posible con otros protocolos de comunicación), señalamos que nuestro resultado de imposibilidad también se aplica a valoraciones en la clase OXS definida por [25], valoraciones que podemos demostrar tienen una representación compacta.",
        "También presentamos varios resultados que separan el poder de diferentes modelos para subastas combinatorias ascendentes que utilizan precios de artículos: demostramos, como era de esperar, que las subastas ascendentes adaptativas son más poderosas que las subastas ascendentes obvias y que las subastas ascendentes no deterministas son más poderosas que las subastas ascendentes deterministas.",
        "También comparamos diferentes tipos de subastas no anónimas (por ejemplo, simultáneas o secuenciales), y observamos que las subastas anónimas de precio por lote y las subastas no anónimas de precio por artículo son incomparables en su poder.",
        "Finalmente, motivados por las subastas holandesas, consideramos las subastas descendentes y cómo se comparan con las ascendentes; mostramos clases de valoraciones que pueden ser obtenidas mediante subastas ascendentes de precio de artículo pero no mediante subastas descendentes de precio de artículo, y viceversa.",
        "Subastas ascendentes de precio por paquetes: Todas las subastas ascendentes de precio por paquetes conocidas que son capaces de encontrar la asignación óptima entre valoraciones generales (con disposición libre) utilizan precios no anónimos.",
        "Las subastas anónimas de precio ascendente (por ejemplo, [42, 21, 37]) solo se sabe que pueden encontrar la asignación óptima entre valoraciones superaditivas o algunas otras clases simples ([36]).",
        "Demostramos que esto no es un error: Teorema: Ninguna subasta ascendente con precios anónimos puede encontrar la asignación óptima entre valoraciones generales. La computación no determinista se utiliza ampliamente en informática y también en economía (por ejemplo, un equilibrio walrasiano o [38]).",
        "En algunos contextos, los modelos deterministas y no deterministas tienen igual poder (por ejemplo, en la computación con autómatas finitos).",
        "Este límite es independiente del tiempo de ejecución, y también se aplica a subastas descendentes y subastas no determinísticas.",
        "Fortalecemos significativamente este resultado al demostrar que las subastas ascendentes anónimas no pueden producir una aproximación mejor que O( √ m) - la proporción de aproximación que se puede lograr con un número polinomial de consultas ([26, 32]) y, como se mencionó, con un número polinomial de consultas de demanda de precio de artículo.",
        "El mismo límite inferior claramente se aplica a las subastas anónimas de artículos y precios ascendentes, ya que dichas subastas pueden ser simuladas por subastas anónimas de paquetes y precios ascendentes.",
        "Actualmente no tenemos ningún límite inferior en la aproximación alcanzable por subastas ascendentes de artículos y precios no anónimas.",
        "Finalmente, estudiamos el rendimiento de las subastas ascendentes existentes computacionalmente eficientes.",
        "Estos protocolos ([37, 3]) requieren tiempo exponencial en el peor de los casos, y esto es inevitable como se muestra en [32].",
        "Sin embargo, también observamos que estas subastas, al igual que toda la clase de subastas de precios de paquetes ascendentes similares, requieren un tiempo exponencial incluso para valoraciones aditivas simples.",
        "Esto es evitable y de hecho, las subastas ascendentes de precio de artículo de [22] pueden encontrar la asignación óptima para estas valoraciones simples con comunicación polinómica. 3.",
        "El MODELO 3.1 Subastas Discretas para Valores Continuos Nuestro modelo tiene como objetivo capturar subastas iterativas que operan en valuaciones de valores reales.",
        "Existe una ligera dificultad técnica aquí al tratar de superar la brecha entre la naturaleza discreta de una subasta iterativa y la naturaleza continua de las valoraciones.",
        "Este es exactamente el mismo problema que al modelar una subasta inglesa simple.",
        "Hay tres formas estándar formales de modelarlo: 1.",
        "Modelar la subasta como un proceso continuo y estudiar su trayectoria en el tiempo.",
        "Por ejemplo, la subasta japonesa, también conocida como subasta holandesa, es básicamente un modelo continuo de un modelo inglés.",
        "Modelar la subasta como discreta y las valoraciones como continuas.",
        "En este caso introducimos un parámetro y generalmente requerimos que la subasta produzca resultados que estén cerca de lo óptimo. 3.",
        "Modelar las valoraciones como discretas.",
        "En este caso asumiremos que todas las valoraciones son múltiplos enteros de alguna cantidad fija pequeña δ, por ejemplo, 1 centavo.",
        "Toda comunicación en este caso es naturalmente finita.",
        "En este documento utilizamos la última formulación y asumimos que todos los valores son múltiplos de algún δ.",
        "Por lo tanto, en algunas partes del documento asumimos sin pérdida de generalidad que δ = 1, por lo tanto todas las valoraciones son enteras.",
        "Casi todos (si no todos) nuestros resultados se pueden traducir a los otros dos modelos con poco esfuerzo. 3.2 Valoraciones Un único subastador está vendiendo m artículos indivisibles no homogéneos en una sola subasta, y sea M el conjunto de estos 13 Otro modelo similar es el modelo de cuchillos móviles en la literatura de corte de pasteles. 34 artículos y sea N el conjunto de postores.",
        "Cada uno de los n postores en la subasta tiene una función de valoración vi : 2m → {0, δ, 2δ, ..., L}, donde para cada conjunto de artículos S ⊆ M, vi(S) denota el valor del postor i por el conjunto S y es un múltiplo de δ en el rango 0...L. A veces denotaremos el número de bits necesarios para representar tales valores en el rango 0...L por t = log L. Suponemos disposición libre, es decir, S ⊆ T implica vi(S) ≤ vi(T) y que vi(∅) = 0 para todos los postores.",
        "Mencionaremos las siguientes clases de valoraciones: • Una valoración se llama submodular si para todos los conjuntos de elementos A y B tenemos que v(A ∪ B) + v(A ∩ B) ≤ v(A) + v(B). • Una valoración se llama superaditiva si para todos los conjuntos disjuntos de elementos A y B tenemos que v(A∪B) ≥ v(A)+ v(B). • Una valoración se llama un XOR de k-bundles si puede representarse como una combinación XOR de a lo sumo k ofertas atómicas [30], es decir, si hay a lo sumo k bundles Si y precios pi tales que para todo S, v(S) = maxi|S⊇Si pi.",
        "Tales valoraciones serán denotadas por v = (S1 : p1) ⊕ (S2 : p2) ⊕ . . . ⊕ (Sk : pk).14 3.3 Subastas Iterativas El subastador establece un protocolo (equivalentemente un algoritmo), donde en cada etapa del protocolo se envía cierta información q - denominada la consulta - a algún postor i, y luego el postor i responde con una respuesta que depende de la consulta así como de su propia valoración.",
        "En este documento, asumimos que tenemos control total sobre el comportamiento de los postores, por lo que el protocolo también define una función de respuesta ri(q, vi) que especifica la respuesta del postor a la consulta q.",
        "El protocolo puede ser adaptativo: el valor de la consulta, así como el postor consultado, pueden depender de las respuestas recibidas para consultas anteriores.",
        "Al final del protocolo, se debe declarar una asignación S1...Sn, donde Si ∩ Sj = ∅ para i = j.",
        "Decimos que la subasta encuentra una asignación óptima si encuentra la asignación que maximiza el bienestar social Σ vi(Si).",
        "Decimos que se encuentra una c-aproximación si P i vi(Si) ≥ P i vi(Ti)/c donde T1...Tn es una asignación óptima.",
        "El tiempo de ejecución de la subasta en una instancia dada de las valoraciones de los postores es el número total de consultas realizadas en esta instancia.",
        "El tiempo de ejecución de un protocolo es el costo en el peor caso sobre todas las instancias.",
        "Cabe destacar que no imponemos limitaciones computacionales en el protocolo ni en los jugadores. Esto, por supuesto, solo refuerza nuestros resultados de dificultad.",
        "Sin embargo, nuestros resultados positivos no utilizarán este poder y serán eficientes también en el sentido computacional habitual.",
        "Nuestro objetivo será diseñar protocolos computacionalmente eficientes.",
        "Consideraremos un protocolo eficiente computacionalmente si su costo es polinómico en los parámetros relevantes: el número de postores n, el número de artículos m y t = log L, donde L es el valor máximo posible de un paquete.",
        "Sin embargo, cuando discutimos subastas de precio ascendente y sus variantes, se requerirá un protocolo computacionalmente eficiente. Por ejemplo, v = (abcd : 5) ⊕ (ab : 3) ⊕ (c : 4) denota la valoración XOR con los términos abcd, ab, c y precios 5, 3, 4 respectivamente.",
        "Para esta valoración, v(abcd) = 5, v(abd) = 3, v(abc) = 4. El tiempo de ejecución realmente mide los costos de comunicación y no el tiempo de ejecución computacional. Pseudo-polinómico, es decir, debería requerir un número de consultas que sea polinómico en m, n y L δ.",
        "Esto se debe a que las subastas ascendentes generalmente no pueden lograr esos tiempos de ejecución (considera incluso la subasta inglesa de un solo artículo). Cabe destacar que todos nuestros resultados proporcionan límites concretos, donde la dependencia de los parámetros se expresa explícitamente; utilizamos la notación estándar de big-Oh solo como una abreviatura.",
        "Decimos que una subasta obtiene algunas clases V de valoraciones, si determina la asignación óptima para cualquier perfil de valoraciones extraídas de V; Decimos que una subasta obtiene completamente alguna clase de valoraciones V, si puede aprender completamente cualquier valoración única v ∈ V (es decir, aprender v(S) para cada S). 3.4 Consultas de demanda y subastas ascendentes La mayor parte del documento se ocupará de un caso especial común de subastas iterativas que denominamos subastas de demanda.",
        "En tales subastas, las consultas que se envían a los postores son consultas de demanda: la consulta especifica un precio p(S) ∈ + para cada conjunto S. La respuesta del postor i es simplemente el conjunto más deseado - demandado - bajo estos precios.",
        "Formalmente, un conjunto S que maximiza vi(S) − p(S).",
        "Puede suceder que más de un conjunto S maximice este valor.",
        "En caso de empate, se resuelven de acuerdo con una regla fija de desempate, por ejemplo, se devuelve el conjunto que sea el primero en orden lexicográfico.",
        "Todos nuestros resultados son válidos para cualquier regla de desempate fija.",
        "Las subastas ascendentes son subastas iterativas con precios no decrecientes: Definición 1.",
        "En una subasta ascendente, los precios en las ofertas al mismo postor solo pueden aumentar con el tiempo.",
        "Formalmente, sea p una consulta realizada por el postor i, y q una consulta realizada por el postor i en una etapa posterior del protocolo.",
        "Entonces, para todos los conjuntos S, q(S) ≥ p(S).",
        "Una variante similar, que también estudiamos y que también es común en la vida real, son las subastas descendentes, en las que los precios solo pueden disminuir con el tiempo.",
        "Cabe destacar que el término subasta ascendente se refiere a una subasta con una única trayectoria ascendente de precios.",
        "Puede ser útil definir subastas ascendentes de múltiples trayectorias, en las que los precios pueden reiniciarse a cero varias veces (ver, por ejemplo, [4]).",
        "Consideramos dos restricciones principales en los tipos de consultas de demanda permitidas: Definición 2.",
        "Precios de los artículos: Los precios en cada consulta son dados por los precios pj para cada artículo j.",
        "El precio de un conjunto S es aditivo: p(S) = Σ j∈S pj.",
        "Definición 3.",
        "Precios anónimos: Los precios vistos por los postores en cualquier etapa de la subasta son los mismos, es decir, cada vez que se realiza una consulta a un postor, la misma consulta también se realiza a todos los demás postores (con los precios sin cambios).",
        "En subastas con precios no anónimos (discriminatorios), cada postor i tiene precios personalizados denotados por pi (S). En este documento, todas las subastas son anónimas a menos que se especifique lo contrario.",
        "Ten en cuenta que aunque en nuestro modelo las valoraciones son integrales (o múltiplos de algún δ), permitimos la consulta de demanda a 16 La mayoría de las subastas que presentamos pueden adaptarse para ejecutarse en tiempo polinómico en log L, utilizando un procedimiento similar a una búsqueda binaria, perdiendo su naturaleza ascendente. 17 Ten en cuenta que una subasta no anónima claramente puede ser simulada por n subastas anónimas en paralelo. 35 utiliza números reales arbitrarios en +.",
        "Es decir, asumimos que el incremento que utilizamos en las subastas ascendentes puede ser significativamente menor que δ.",
        "Todos nuestros resultados de dureza se mantienen para cualquier , incluso para incrementos de precios continuos.",
        "Un problema práctico aquí es cómo se especificará la consulta: en el caso general, se necesita enviar un número exponencial de precios en una sola consulta.",
        "Formalmente, esto no es un problema ya que el modelo no limita la longitud de las consultas de ninguna manera; el protocolo simplemente debe definir cuáles son los precios en función de las respuestas recibidas a consultas anteriores.",
        "Investigaremos este problema más a fondo en la Sección 4.3. 4.",
        "En esta sección, estudiamos el poder de las subastas iterativas que utilizan consultas de demanda (no necesariamente ascendentes).",
        "Empezamos comparando las consultas de demanda con otros tipos de consultas.",
        "Luego, discutimos qué tan bien se puede aproximar el bienestar óptimo utilizando un número polinomial de consultas de demanda.",
        "También iniciamos el estudio de la representación de consultas de demanda de precios de paquetes, y finalmente, mostramos cómo las consultas de demanda ayudan a resolver la relajación de programación lineal de subastas combinatorias en tiempo polinómico. 4.1 El poder de los diferentes tipos de consultas En esta sección comparamos el poder de los diversos tipos de consultas definidos en la Sección 2.",
        "Presentaremos simulaciones computacionalmente eficientes de estos tipos de consultas utilizando consultas de demanda de precio de artículo.",
        "En la Sección 5.1 mostramos que estas simulaciones también se pueden realizar utilizando subastas ascendentes de precio de artículo.",
        "Lema 4.1.",
        "Una consulta de valor puede ser simulada por m consultas de valor marginal.",
        "Una consulta de valor marginal puede ser simulada por dos consultas de valor.",
        "Lema 4.2.",
        "Una consulta de valor puede ser simulada por consultas de demanda (donde t = log L es el número de bits necesarios para representar un valor de paquete único). Como corolario directo, obtenemos que las subastas de demanda siempre pueden obtener completamente las valoraciones de los postores al simular todas las posibles 2m − 1 consultas y, por lo tanto, obtener suficiente información para determinar la asignación óptima.",
        "Sin embargo, cabe destacar que esta inducción puede ser computacionalmente ineficiente.",
        "El siguiente lema muestra que las consultas de demanda pueden ser exponencialmente más poderosas que las consultas de valor.",
        "Lema 4.3.",
        "Puede ser necesario un número exponencial de consultas de valor para simular una sola consulta de demanda.",
        "Las consultas de utilidad indirecta son, sin embargo, equivalentes en poder a las consultas de demanda: Lema 4.4.",
        "Una consulta de utilidad indirecta puede ser simulada por mt + 1 consultas de demanda.",
        "Una consulta de demanda puede ser simulada por m + 1 consultas de utilidad indirecta.",
        "Las consultas de demanda también pueden simular consultas de demanda relativa: 19 18 Tenga en cuenta que las consultas de demanda de precios de paquetes pueden simular fácilmente una consulta de valor configurando los precios de todos los paquetes excepto S (el paquete con el valor desconocido) en L, y realizando una búsqueda binaria en el precio de S. 19 Nota: aunque en nuestro modelo los valores son enteros (múltiplos de δ), permitimos que los precios de las consultas sean números reales arbitrarios.",
        "Abreviaturas: V (consulta de valor), MV (consulta de valor marginal), D (consulta de demanda), IU (consulta de utilidad indirecta), RD (consulta de demanda relativa).",
        "Lema 4.5.",
        "Las consultas de demanda relativa pueden ser simuladas por un número polinomial de consultas de demanda.",
        "Según nuestra definición de consultas de demanda relativa, claramente no pueden simular consultas de valor par.",
        "La Figura 4 resume las relaciones entre estos tipos de consultas. 4.2 Aproximando el Bienestar Social con Consultas de Valor y Demanda Sabemos por [32] que las subastas combinatorias iterativas que solo utilizan un número polinómico de consultas no pueden encontrar una asignación óptima entre valoraciones generales y de hecho ni siquiera pueden aproximarla a un factor mejor que min{n, m1/2− }.",
        "En esta sección preguntamos qué tan bien se puede hacer esta aproximación utilizando consultas de demanda con precios de los artículos, o utilizando las consultas de valor más débiles.",
        "Mostramos que, utilizando consultas de demanda, se puede igualar el límite inferior, mientras que las consultas de valor solo pueden hacer mucho peor.",
        "La Figura 5 describe un algoritmo de tiempo polinómico que logra una proporción de aproximación de min(n, O( √ m)).",
        "Este algoritmo elige de forma codiciosa los paquetes que maximizan el valor por ítem de los postores (utilizando consultas de demanda relativa, ver Sección 4.1).",
        "Como paso final, asigna todos los artículos a un único postor si mejora el bienestar social (esto se puede verificar utilizando consultas de valor).",
        "Dado que tanto las consultas de valor como las consultas de demanda relativa pueden ser simuladas por un número polinomial de consultas de demanda con precios de los artículos (Lemas 4.2 y 4.5), este algoritmo puede ser implementado por un número polinomial de consultas de demanda con precios de los artículos. Teorema 4.6.",
        "La subasta descrita en la Figura 5 puede ser implementada mediante un número polinomial de consultas de demanda y logra una aproximación de min{n, 4 √ m} para el bienestar social.",
        "Ahora nos preguntamos qué tan bien se puede aproximar el bienestar óptimo mediante un número polinómico de consultas de valor.",
        "Primero notamos que las consultas de valor no son completamente inútiles: En [19] se muestra que si los m elementos se dividen en k paquetes fijos de tamaño m/k cada uno, y estos paquetes fijos se subastan como si cada uno fuera indivisible, entonces el bienestar social bers, por lo tanto, podemos tener paquetes con demandas relativas arbitrariamente cercanas.",
        "En este sentido, la simulación anterior es solo hasta un cierto límite (y el número de consultas es O(log L + log 1)).",
        "Cuando los precios de la consulta de demanda relativa se dan como números racionales, se implica una simulación exacta cuando el logaritmo es lineal en la longitud de la entrada. En el artículo completo [8], observamos que este algoritmo puede implementarse mediante dos subastas descendentes de precio de artículo (donde permitimos quitar artículos a lo largo de la subasta). El valor generado por tal subasta es al menos una aproximación de m√ k de lo posible en la subasta original.",
        "Ten en cuenta que tal subasta puede ser implementada mediante 2k − 1 consultas de valor a cada postor, consultando el valor de cada paquete de los paquetes fijos.",
        "Por lo tanto, si elegimos k = log m paquetes, obtenemos una aproximación de m√ log m mientras seguimos utilizando un número polinomial de consultas.",
        "El siguiente lema muestra que no es posible hacer mucho más utilizando consultas de valor: Lema 4.7.",
        "Cualquier subasta iterativa que utilice solo consultas de valor y distinga entre k-tuplas de valuaciones de 0/1 donde la asignación óptima tiene valor 1, y aquellas donde la asignación óptima tiene valor k, requiere al menos 2 m k consultas.",
        "Prueba.",
        "Considera la siguiente familia de valoraciones: para cada S, tal que |S| > m/2, v(S) = 1, y existe un único conjunto T, tal que para |S| ≤ m/2, v(S) = 1 si y solo si T ⊆ S y v(S) = 0 en caso contrario.",
        "Ahora observa el comportamiento del protocolo cuando todas las valoraciones vi tienen T = {1...m}.",
        "Claramente, en este caso el valor de la mejor asignación es 1, ya que ningún conjunto de tamaño m 2 o menor tiene un valor distinto de cero para ningún jugador.",
        "Corrija la secuencia de consultas y respuestas recibidas en este k-tupla de valuaciones.",
        "Ahora considera el k-tuplo de valoraciones elegido al azar de la siguiente manera: una partición de los m elementos en k conjuntos T1...Tk cada uno de tamaño m/k es elegido de forma uniforme al azar entre todas las particiones posibles.",
        "Ahora considera el k-tuplo de valoraciones de nuestra familia que corresponden a esta partición: claramente Ti puede asignarse a i, para cada i, obteniendo un valor total de k. Ahora observa el protocolo al ejecutarse con estas valoraciones y compara su comportamiento con el caso original.",
        "Ten en cuenta que la respuesta a una consulta S al jugador i difiere entre el caso de Ti y el caso original de T = {1...m} solo si |S| ≤ m 2 y Ti ⊆ S. Dado que Ti se distribuye uniformemente entre todos los conjuntos de tamaño exactamente m k , tenemos que para cualquier consulta fija S al jugador i, donde |S| ≤ m 2 , Pr[Ti ⊆ S] ≤ „ |S| m «|Ti| ≤ 2− m k Utilizando el límite de unión, si la secuencia original de consultas tenía una longitud menor que 2 m k , entonces con probabilidad positiva ninguna de las consultas en la secuencia recibiría una respuesta diferente a la tupla de entrada original.",
        "Esto está prohibido ya que el protocolo debe distinguir entre este caso y el caso original, lo cual no puede ocurrir si todas las consultas reciben la misma respuesta.",
        "Por lo tanto, debe haber habido al menos 2 consultas de m k para la tupla original de valoraciones.",
        "Concluimos que un protocolo de tiempo polinómico que utiliza solo consultas de valor no puede obtener una aproximación mejor que O( m log m ) del bienestar: Teorema 4.8.",
        "Una subasta iterativa que utiliza un número polinómico de consultas de valor no puede lograr una aproximación mejor que O( m log m ) para el bienestar social.",
        "Prueba.",
        "Inmediatamente del Lema 4.7: lograr cualquier ratio de aproximación k que sea asintóticamente mayor que m log m requiere un número exponencial de consultas de valor.",
        "Un algoritmo de aproximación: Inicialización: Sea T ← M los artículos actuales en venta.",
        "Que K ← N sean los postores actualmente participantes.",
        "Que S∗ 1 ← ∅, ..., S∗ n ← ∅ sea la asignación provisional.",
        "Repetir hasta que T = ∅ o K = ∅: Preguntar a cada postor i en K por el conjunto Si que maximice su valor por artículo, es decir, Si ∈ argmaxS⊆T vi(S) |S|.",
        "Sea i el postor con el valor máximo por artículo, es decir, i ∈ argmaxi∈K vi(Si) |Si| .",
        "Conjunto: s∗ i = si, K = K \\ i, M = M \\ Si Finalmente: Pregunte a los postores por sus valores vi(M) para el paquete completo.",
        "Si asignar todos los artículos a algún postor i mejora el bienestar social alcanzado hasta ahora (es decir, ∃i ∈ N tal que vi(M) > Σ i∈N vi(S∗ i )), entonces asigna todos los artículos a este postor i.",
        "Figura 5: Este algoritmo logra una aproximación de min{n, 4 √ m} para el bienestar social, que es asintóticamente la mejor aproximación en el peor de los casos posible con comunicación polinómica.",
        "Este algoritmo puede implementarse con un número polinomial de consultas de demanda. 4.3 La Representación de los Precios de los Paquetes En esta sección fijamos explícitamente el idioma en el que se presentan los precios de los paquetes a los postores en subastas de precios de paquetes.",
        "Este lenguaje requiere que el algoritmo liste explícitamente el precio de cada paquete con un precio no trivial.",
        "Trivial en este contexto es un precio que es igual al de uno de sus subconjuntos adecuados (que fue enumerado explícitamente).",
        "Esta representación es equivalente al lenguaje XOR para expresar valuaciones.",
        "Formalmente, cada consulta q se da por una expresión: q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl).",
        "En esta representación, el precio demandado para cada conjunto S es simplemente p(S) = max{k=1...l|Sk⊆S}pk.",
        "Definición 4.",
        "La longitud de la consulta q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl) es l. El costo de un algoritmo es la suma de las longitudes de las consultas realizadas durante la operación del algoritmo en el peor caso de entrada.",
        "Ten en cuenta que bajo esta definición, las subastas de precio por paquete no son necesariamente más fuertes que las subastas de precio por artículo.",
        "¿Una consulta de precio de artículo que fija el precio de cada artículo en 1 se traduce en una consulta de precio de paquete exponencialmente larga que necesita especificar el precio |S| para cada paquete S. ¿Pero quizás las subastas de precio de paquete aún pueden encontrar asignaciones óptimas siempre que las subastas de precio de artículo puedan, sin simular directamente tales consultas?",
        "Mostramos que este no es el caso: de hecho, cuando se tiene en cuenta la longitud de la representación, las subastas de precios de paquetes a veces son seriamente inferiores a las subastas de precios de artículos.",
        "Considera la siguiente familia de valoraciones: Cada artículo tiene un valor de 3, excepto que para algún conjunto único S, su valor es un poco mayor: 3|S| + b, donde b ∈ {0, 1, 2}.",
        "Ten en cuenta que una subasta de precio de artículo puede encontrar fácilmente la asignación óptima entre dos valoraciones de este tipo: establece los precios de cada artículo en 3+; si los conjuntos de demanda de los dos jugadores están vacíos, entonces b = 0 para ambas valoraciones, y cualquier asignación arbitraria está bien.",
        "Si uno de ellos está vacío y el otro no, asigna el conjunto de demanda no vacío a su postor y el resto al otro.",
        "Si ambos conjuntos de demanda no están vacíos, entonces, a menos que formen una partición exacta, necesitamos ver cuál es mayor, lo cual podemos hacer aumentando el precio de un solo artículo en cada conjunto de demanda. Mostraremos que cualquier subasta de precio de paquete que utilice solo el lenguaje XOR para describir los precios de los paquetes requiere un costo exponencial (que incluye la suma de todas las longitudes de descripción de los precios) para encontrar una asignación óptima entre dos valoraciones de este tipo.",
        "Lema 4.9.",
        "Cada subasta de precio de paquete que utiliza expresiones XOR para denotar precios de paquete requiere un costo de 2Ω( √ m) para encontrar la asignación óptima entre dos valoraciones de la familia anterior.",
        "La complicación en la prueba se debe al hecho de que al usar expresiones XOR, la longitud de la descripción del precio depende del número de paquetes cuyo precio es estrictamente mayor que cada uno de sus subconjuntos, lo cual puede ser significativamente menor que el número de paquetes que tienen un precio distinto de cero. (La prueba se vuelve fácil si requerimos que el protocolo nombre explícitamente cada paquete con precio distinto de cero).",
        "No conocemos ninguna demostración elemental para este lema (aunque creemos que se puede encontrar una).",
        "En cambio, reducimos el problema a un límite inferior bien conocido en la complejidad de circuitos booleanos [18] que establece que los circuitos booleanos de profundidad 3 que calculan la función de mayoría en m variables requieren un tamaño de 2Ω( √ m). Consultas de demanda y programación lineal Considere la siguiente relajación de programación lineal para el problema generalizado de determinación de ganadores en subastas combinatorias (el programa primal): Maximizar X i∈N,S⊆M wi xi,S vi(S) sujeto a",
        "Para todo i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M. Nótese que el programa primal tiene un número exponencial de variables.",
        "Sin embargo, podremos resolverlo en tiempo polinómico utilizando consultas de demanda a los postores.",
        "La solución tendrá un soporte de tamaño polinómico (valores no nulos para xi,S), y por lo tanto podremos describirla en tiempo polinómico.",
        "Aquí está su dual: Minimizar X j∈M qjpj + X i∈N diui sujeto a ui + X j∈S pj ≥ wivi(S) ∀i ∈ N, S ⊆ M pi ≥ 0, uj ≥ 0 ∀i ∈ M, j ∈ N. Nótese que el problema dual tiene exactamente n + m variables pero un número exponencial de restricciones.",
        "Por lo tanto, el problema dual puede resolverse utilizando el método del Elipsoide en tiempo polinómico, si un oráculo de separación puede ser implementado en tiempo polinómico.",
        "Recuerda que un oráculo de separación, al recibir una posible solución, confirma si es una solución factible o responde con una restricción que es violada por la posible solución.",
        "Construimos un oráculo de separación para resolver el programa dual, utilizando una única consulta de demanda a cada uno de los postores.",
        "Considera una posible solución (u, p) para el programa dual.",
        "Podemos reescribir las restricciones del programa dual como: ui/wi ≥ vi(S) − X j∈S pj/wi. Ahora, una consulta de demanda al postor i con precios pj/wi revela exactamente el conjunto S que maximiza el RHS de la desigualdad anterior.",
        "Por lo tanto, para verificar si (u, p) es factible, basta con (1) consultar a cada postor i por su demanda Di bajo los precios pj/wi; (2) verificar solo las n restricciones ui + P j∈Di pj ≥ wivi(Di) (donde vi(Di) puede ser simulado utilizando una secuencia polinómica de consultas de demanda como se muestra en el Lema 4.2).",
        "Si ninguna de estas condiciones se viola, entonces estamos seguros de que (u, p) es factible; de lo contrario, obtenemos una restricción violada.",
        "Lo que queda por mostrar es cómo se puede resolver el programa primal. (Recuerde que el programa primal tiene un número exponencial de variables).",
        "Dado que el algoritmo de Elipsoide se ejecuta en tiempo polinómico, solo encuentra un número polinómico de restricciones durante su operación.",
        "Claramente, si se eliminaran todas las demás restricciones del programa dual, seguiría teniendo la misma solución (añadir restricciones solo puede disminuir el espacio de soluciones factibles).",
        "Ahora tome el dual reducido donde solo existan las restricciones encontradas, y observe su dual.",
        "Tendrá la misma solución que el dual original y, por lo tanto, del primal original.",
        "Sin embargo, observa la forma de este dual del dual reducido.",
        "Es solo una versión del programa primal con un número polinomial de variables, aquellas que corresponden a las restricciones que permanecieron en el dual reducido.",
        "Por lo tanto, se puede resolver en tiempo polinómico, y esta solución resuelve claramente el programa primal original, estableciendo todas las demás variables en cero. 5.",
        "En esta sección caracterizamos el poder de las subastas ascendentes por precio de artículo.",
        "Primero demostramos que este poder no es trivial: tales subastas pueden en general obtener una cantidad exponencial de información.",
        "Por otro lado, demostramos que la asignación óptima no siempre puede ser determinada por una sola subasta ascendente, y en algunos casos, tampoco por un número exponencial de trayectorias de precios ascendentes.",
        "Finalmente, separamos el poder de diferentes modelos de subastas ascendentes. 5.1 El Poder de las Subastas Ascendentes de Precio de Artículo Primero mostramos que si se permiten incrementos lo suficientemente pequeños, una única trayectoria ascendente de precios de artículos puede obtener preferencias que no pueden ser obtenidas con comunicación polinómica.",
        "Como se mencionó, todos nuestros resultados de dureza se mantienen para cualquier incremento, incluso infinitesimal.",
        "Teorema 5.1.",
        "Algunas clases de valoraciones pueden ser obtenidas mediante subastas ascendentes de precio de artículo, pero no pueden ser obtenidas mediante un número polinómico de consultas de ningún tipo.",
        "Prueba. (bosquejo) Considera dos postores con v(S) = 1 si |S| > n 2 , v(S) = 0 si |S| < n 2 y cada S tal que |S| = n 2 tiene un valor desconocido de {0, 1}.",
        "Debido a [32], determinar la asignación óptima aquí requiere comunicación exponencial en el peor de los casos.",
        "Sin embargo, demostramos (ver [9]) que una subasta ascendente de precio de artículo puede lograrlo, siempre y cuando pueda utilizar incrementos exponencialmente pequeños.",
        "Ahora describimos otro resultado positivo sobre el poder de las subastas ascendentes de precio de los artículos.",
        "En la sección 4.1, mostramos que en la subasta ascendente de precio de los artículos no se puede determinar la asignación óptima para esta clase de valoraciones, que una consulta de valor puede ser simulada con un número (verdaderamente) polinomial de consultas de demanda de precio de los artículos.",
        "Aquí mostramos que cada consulta de valor puede ser simulada por un número (pseudo) polinomial de consultas ascendentes de demanda de precio de artículo. (En la siguiente subsección, mostramos que no siempre podemos simular ni siquiera un par de consultas de valor utilizando una subasta ascendente de precio de artículo).",
        "En el artículo completo (parte II, [9]), demostramos que podemos simular otros tipos de consultas utilizando subastas ascendentes de precio de artículo.",
        "Proposición 5.2.",
        "Una consulta de valor puede ser simulada por una subasta ascendente de precio de artículo.",
        "Esta simulación requiere un número polinómico de consultas.",
        "De hecho, la prueba para la Proposición 5.2 demuestra un resultado útil más fuerte sobre la información obtenida por subastas iterativas.",
        "Se dice que en cualquier subasta iterativa en la que los cambios de precios sean lo suficientemente pequeños en cada etapa (subastas pseudocontinuas), se puede calcular el valor de todos los paquetes demandados durante la subasta.",
        "La idea básica es que cuando el oferente pasa de demandar un paquete Ti a demandar otro paquete Ti+1, hay un punto en el que ella es indiferente entre estos dos paquetes.",
        "Por lo tanto, conocer el valor de un conjunto demandado (por ejemplo, el conjunto vacío) permite calcular los valores de todos los demás conjuntos demandados.",
        "Decimos que una subasta es seudo-continua si solo utiliza consultas de demanda, y en cada paso, el precio de como máximo un artículo se modifica en (para algún ∈ (0, δ]) con respecto a la consulta anterior.",
        "Proposición 5.3.",
        "Considera cualquier subasta pseudo-continua (no necesariamente ascendente), en la que el postor i demande el conjunto vacío al menos una vez a lo largo de la subasta.",
        "Entonces, el valor de cada paquete demandado por el postor i a lo largo de la subasta puede calcularse al final de la subasta. 5.2 Limitaciones de las Subastas Ascendentes de Precio de Artículo Aunque observamos que las consultas de demanda pueden resolver cualquier problema de subasta combinatoria, cuando las consultas están restringidas a ser ascendentes, algunas clases de valoraciones no pueden ser obtenidas ni completamente obtenidas.",
        "Un ejemplo para tal clase de valoraciones se muestra en la Figura 6.",
        "Teorema 5.4.",
        "Existen clases de valoraciones que no pueden ser obtenidas ni completamente obtenidas por ninguna subasta ascendente de precio de artículos.",
        "Prueba.",
        "Que el postor 1 tenga la valoración descrita en la primera fila de la Figura 6, donde α y β son valores desconocidos en (0, 1).",
        "Primero, demostramos que esta clase no puede ser completamente revelada por una sola subasta ascendente.",
        "Específicamente, una subasta ascendente no puede revelar los valores de ambos α y β.",
        "Si tanto pa como pb son inferiores a 1, el oferente siempre exigirá el paquete completo ab: su utilidad de ab es estrictamente mayor que la utilidad de a o b por separado.",
        "Por ejemplo, demostramos que u1(ab) > u1(a): u1(ab) = 2 − (pa + pb) = 1 − pa + 1 − pb > vA(a) − pa + 1 − pb > u1(a) Por lo tanto, para obtener información sobre α o β, el precio de uno de los artículos debe ser al menos 1, sin pérdida de generalidad, pa ≥ 1.",
        "Pero entonces, el paquete a no será demandado por el postor 1 durante la subasta, por lo tanto, no se obtendrá ninguna información sobre α.",
        "Ahora, suponga que se sabe que el postor 2 tiene la valoración descrita en la segunda fila de la Figura 6.",
        "La asignación óptima depende de si α es mayor que β (en la valoración del postor 1), y demostramos que una subasta ascendente no puede determinar esto.",
        "La prueba del teorema anterior muestra que para que se revele un valor desconocido, el precio de un artículo debe ser mayor que 1 y el otro precio debe ser menor que 1.",
        "Por lo tanto, en una trayectoria de precios monótona de precios, solo uno de estos valores puede ser revelado.",
        "Una conclusión inmediata es que este resultado de imposibilidad también se aplica a las subastas descendentes de precio de los artículos.",
        "Dado que no existe tal trayectoria, entonces la misma conclusión se aplica incluso a las subastas de precios de artículos no deterministas (en las cuales los datos exógenos nos dicen cómo aumentar los precios).",
        "También hay que tener en cuenta que dado que la dificultad proviene de la imposibilidad de obtener completamente una valoración de un único postor, este resultado también se aplica a subastas ascendentes de precio de artículo no anónimas. 5.3 Limitaciones de las Subastas Ascendentes de Múltiples Trayectorias Según el Teorema 5.4, ninguna subasta ascendente de precio de artículo puede siempre obtener las preferencias (demostramos un resultado similar para precios de paquetes en la sección 6).",
        "¿Pero pueden dos trayectorias ascendentes hacer el trabajo?",
        "¿O un número polinómico de trayectorias ascendentes?",
        "Damos respuestas negativas a tales sugerencias.",
        "Definimos una subasta ascendente de trayectoria k como una subasta iterativa de consultas de demanda en la que las consultas de demanda pueden ser divididas en k conjuntos de consultas, donde los precios publicados en cada conjunto solo aumentan con el tiempo.",
        "Ten en cuenta que utilizamos una definición general; permite que las trayectorias se ejecuten en paralelo o secuencialmente, y utilizar la información obtenida en algunas trayectorias para determinar las consultas futuras en otras trayectorias.",
        "El poder de las subastas de múltiples trayectorias puede ser demostrado por el resultado negativo de Gul y Stacchetti [17], quienes mostraron que incluso para una subasta entre valoraciones de sustitutos, una subasta anónima ascendente de precio de artículo no puede calcular los precios VCG para todos los jugadores. Ausubel [4] superó este resultado imposible y diseñó subastas que sí calculan los precios VCG al organizar la subasta como una secuencia de n + 1 subastas ascendentes.",
        "Aquí demostramos que no se pueden obtener valoraciones XOR con k términos con menos de k − 1 trayectorias ascendentes.",
        "Por otro lado, demostramos que una fórmula XOR puede ser completamente revelada por k−1 subastas ascendentes no determinísticas (o por k−1 subastas ascendentes determinísticas si el subastador conoce los paquetes atómicos). Un reciente artículo no publicado de Mishra y Parkes extiende este resultado, y muestra que los precios no anónimos con precios de paquetes son necesarios para que una subasta ascendente termine con un equilibrio competitivo universal (que conduce a pagos VCG). Este resultado separa en realidad el poder de determinista 39 Proposición 5.5.",
        "Las valoraciones XOR con k términos no pueden ser obtenidas (o completamente obtenidas) por ninguna subasta ascendente de precio de artículo con trayectoria (k-2), incluso cuando los paquetes atómicos son conocidos por el que obtiene la información.",
        "Sin embargo, estas valoraciones pueden ser obtenidas (y completamente obtenidas) mediante subastas ascendentes de precios de artículos no deterministas y no anónimos de (k-1) trayectorias.",
        "Además, se requiere un número exponencial de trayectorias para obtener algunas clases de valoraciones: Proposición 5.6.",
        "La obtención y la obtención completa de algunas clases de valoraciones no pueden ser realizadas por ninguna subasta ascendente de precio de artículo de trayectoria k, donde k = o(2m).",
        "Prueba. (bosquejo) Considera la siguiente clase de valoraciones: Para |S| < m 2 , v(S) = 0 y para |S| > m 2 , v(S) = 2; cada conjunto S de tamaño m 2 tiene algún valor desconocido en (0, 1).",
        "Mostramos ([9]) que una subasta ascendente de un solo artículo y precio puede revelar el valor de como máximo un paquete de tamaño n 2, y por lo tanto se necesitaría un número exponencial de trayectorias ascendentes para obtener tales valoraciones.",
        "Observamos que el algoritmo que presentamos en la Sección 4.2 puede ser implementado por un número polinomial de subastas ascendentes (cada consulta de demanda de precio de artículo puede considerarse como una subasta ascendente separada), y por lo tanto, una aproximación de min(n, 4 √ m) puede lograrse mediante un número polinomial de subastas ascendentes.",
        "Actualmente no tenemos un límite superior mejor ni ningún límite inferior. 5.4 Separando los Diversos Modelos de Subastas Ascendentes Se han sugerido varios modelos para subastas ascendentes en la literatura.",
        "En esta sección, comparamos la potencia de los diferentes modelos.",
        "Como se mencionó, todas las subastas se consideran anónimas y determinísticas, a menos que se especifique lo contrario.",
        "Ascendente vs.",
        "Subastas descendentes: Comenzamos la discusión sobre la relación entre las subastas ascendentes y las subastas descendentes con un ejemplo.",
        "El algoritmo de Lehmann, Lehmann y Nisan [25] se puede implementar mediante una subasta simple de precio descendente por artículo (consultar el artículo completo para más detalles [9]).",
        "Este algoritmo garantiza al menos la mitad de la eficiencia óptima para valoraciones submodulares.",
        "Sin embargo, no estamos familiarizados con ninguna subasta ascendente que garantice una fracción similar de eficiencia.",
        "¿Esto plantea una pregunta más general: ¿pueden las subastas ascendentes resolver cualquier problema de subasta combinatoria que sea resoluble utilizando una subasta descendente (y viceversa)?",
        "Damos respuestas negativas a estas preguntas.",
        "La idea detrás de las pruebas es que la información que el subastador puede obtener de forma gratuita al comienzo de cada tipo de subasta es diferente. En subastas iterativas no determinísticas: nuestra prueba muestra que una subasta iterativa no determinística puede obtener las valoraciones XOR de k términos con un número polinómico de consultas de demanda, y [7] muestra que esta obtención debe requerir un número exponencial de consultas de demanda. En subastas ascendentes, el subastador puede revelar el paquete más valioso (además de M) antes de comenzar a aumentar los precios, por lo tanto, puede utilizar esta información para elegir de forma adaptativa las consultas posteriores.",
        "En subastas descendentes, uno puede encontrar fácilmente el paquete con el precio promedio por artículo más alto, manteniendo todos los demás paquetes con utilidades no positivas, y utilizar esta información en el cambio de precio adaptativo.",
        "Proposición 5.7.",
        "Hay clases que no pueden ser obtenidas (totalmente obtenidas) mediante subastas de precio ascendente de artículos, pero pueden ser obtenidas (respectivamente, totalmente obtenidas) con una subasta de precio descendente de artículos.",
        "Proposición 5.8.",
        "Hay clases que no pueden ser obtenidas (totalmente obtenidas) mediante subastas descendentes de precio de artículo, pero pueden ser obtenidas (respectivamente, totalmente obtenidas) mediante subastas ascendentes de precio de artículo.",
        "Subastas Determinísticas vs. No Determinísticas: Las subastas ascendentes no determinísticas pueden ser vistas como subastas donde algún profesor benevolente que tiene información completa guía al subastador sobre cómo debería aumentar los precios.",
        "Es decir, la obtención de preferencias puede realizarse mediante una subasta ascendente no determinística, si existe una trayectoria ascendente que obtiene suficiente información para determinar la asignación óptima (y verificar que efectivamente lo sea).",
        "Mostramos que las subastas ascendentes no determinísticas son más poderosas que las subastas ascendentes determinísticas: Proposición 5.9.",
        "Algunas clases pueden ser obtenidas (totalmente obtenidas) mediante una subasta ascendente no determinista de precio de artículo, pero no pueden ser obtenidas (respectivamente, totalmente obtenidas) mediante subastas ascendentes deterministas de precio de artículo.",
        "Subastas Anónimas vs. No Anónimas: Como se mostrará en la Sección 6, el poder de las subastas ascendentes de precios de paquetes anónimas y no anónimas difiere significativamente.",
        "Aquí mostramos que también existe una diferencia para las subastas ascendentes de precio de artículo.",
        "Proposición 5.10.",
        "Algunas clases no pueden ser obtenidas mediante subastas anónimas ascendentes de precio de artículos, pero pueden ser obtenidas mediante una subasta ascendente de precio de artículos no anónima.",
        "Secuencial vs.",
        "Subastas Simultáneas: Una subasta no anónima se llama simultánea si en cada etapa, el precio de algún artículo se incrementa por para cada postor.",
        "El subastador puede utilizar la información recopilada hasta cada etapa, en todas las trayectorias personalizadas, para determinar las próximas consultas.",
        "Una subasta no anónima se llama secuencial si el subastador realiza una subasta para cada postor por separado, en orden secuencial.",
        "El subastador puede determinar la próxima consulta basándose en la información recopilada en las trayectorias completadas hasta el momento y en la historia de la trayectoria actual.",
        "Proposición 5.11.",
        "Hay clases que no pueden ser obtenidas mediante subastas simultáneas no anónimas de precio ascendente de artículos, pero que pueden ser obtenidas mediante una subasta secuencial no anónima de precio ascendente de artículos.",
        "Adaptativo vs.",
        "Subastas ajenas: Si el subastador determina las consultas independientemente de las respuestas de los postores (es decir, las consultas están predefinidas), decimos que la subasta es ajena.",
        "De lo contrario, la subasta es adaptativa.",
        "Demostramos que un comportamiento adaptativo del subastador puede ser beneficioso.",
        "Proposición 5.12.",
        "Hay clases que no pueden ser completamente elicitadas utilizando subastas ascendentes de precio de artículo sin conocimiento, pero pueden ser elicitadas (respectivamente, completamente elicitadas) por una subasta ascendente de precio de artículo adaptativa. La elicitación de preferencias frente a la elicitación completa de preferencias son problemas estrechamente relacionados.",
        "Si la elicitación completa es fácil (por ejemplo, en tiempo polinómico), entonces claramente la elicitación también es fácil (mediante una subasta no anónima, simplemente aprendiendo todas las valoraciones por separado).",
        "Por otro lado, hay ejemplos donde la obtención de preferencias se considera fácil pero el aprendizaje es difícil (típicamente, la obtención de preferencias requiere una menor cantidad de información; algunos ejemplos se pueden encontrar en [7]).",
        "Los algoritmos de tatonnement por [22, 12, 16] terminan con la asignación óptima para las valoraciones de sustitutos. Demostramos que no podemos obtener completamente las valoraciones de sustitutos (o incluso su subclase de valoraciones OXS definidas en [25]), incluso para un único postor, mediante una subasta ascendente de precio de artículo (¡aunque la asignación óptima puede encontrarse mediante una subasta ascendente para cualquier número de postores!).",
        "Teorema 5.13.",
        "Las valoraciones de sustitución no pueden ser completamente obtenidas mediante subastas ascendentes de precio por artículo.",
        "Además, no pueden ser completamente inducidos por ninguna trayectoria ascendente m 2 (m > 3).",
        "Si las valoraciones de los sustitutos tienen una representación compacta (es decir, polinomial en el número de bienes) es una pregunta abierta importante.",
        "Como un paso en esta dirección, mostramos que su subclase de valoraciones OXS tiene una representación compacta: cada valoración OXS puede ser representada por un máximo de m2 valores. Lema 5.14.",
        "Cualquier valoración de OXS puede ser representada por no más de m2 valores. 6.",
        "Subastas ascendentes de precio de paquete. Todas las subastas ascendentes en la literatura que se ha demostrado que encuentran la asignación óptima para valoraciones no restringidas son subastas de precio de paquete no anónimas (iBundle(3) de Parkes y Ungar [37] y la Subasta de Proxy de Ausubel y Milgrom [3]).",
        "Sin embargo, se han sugerido varias subastas ascendentes anónimas (por ejemplo, AkBA [42], [21] e iBundle(2) [37]).",
        "En esta sección, demostramos que las subastas ascendentes de precios de paquetes anónimos logran resultados pobres en el peor de los casos.",
        "También demostramos que la familia de subastas de precio ascendente de paquetes no anónimos puede funcionar exponencialmente más lento que las simples subastas de precio ascendente por artículo. 6.1 Limitaciones de las Subastas Anónimas de Precio Ascendente por Paquete Presentamos una clase de valoraciones que no pueden ser obtenidas por subastas anónimas de precio ascendente por paquete.",
        "Estas valoraciones están descritas en la Figura 7.",
        "La idea básica: para determinar el valor desconocido de un postor debemos aumentar 24. Tenga en cuenta que una subasta ascendente anónima no necesariamente puede obtener una clase que pueda ser completamente obtenida por una subasta ascendente. Las valoraciones sustitutivas están definidas, por ejemplo, en [16].",
        "Hablando en términos generales, un postor con una valoración de sustitución seguirá demandando un cierto artículo después de que el precio de algunos otros artículos haya aumentado.",
        "Para completitud, presentamos en el artículo completo [9] una prueba de la eficiencia de tales subastas para valoraciones de sustitutos. Una valoración de demanda unitaria es una valoración XOR en la que todos los paquetes atómicos son elementos únicos.",
        "Las valoraciones de OXS pueden interpretarse como una agregación (O) de cualquier número de postores de demanda unitaria.",
        "La subasta anónima ascendente de precios de paquetes no puede determinar la asignación óptima para esta clase de valoraciones. un precio de un paquete que debería ser demandado por el otro postor en el futuro.",
        "Teorema 6.1.",
        "Algunas clases de valoraciones no pueden ser obtenidas mediante subastas anónimas de precios ascendentes por paquetes.",
        "Prueba.",
        "Considera un par de valoraciones XOR como se describe en la Figura 7.",
        "Para encontrar la asignación óptima debemos saber cuál valor es mayor entre α y β. Sin embargo, no podemos conocer el valor de ambos α y β con una sola trayectoria ascendente: asumimos sin pérdida de generalidad que el postor 1 demanda cd antes de que el postor 2 demande bd (no se obtendrá información si ninguno de estos eventos ocurre).",
        "En este caso, el precio de bd debe ser mayor que 1 (de lo contrario, el postor 1 prefiere bd a cd).",
        "Por lo tanto, el postor 2 nunca exigirá el paquete bd, y no se obtendrá información sobre β.",
        "Las valoraciones descritas en la prueba del Teorema 6.1 pueden ser fácilmente obtenidas mediante una subasta ascendente de precio de un artículo no anónima.",
        "Por otro lado, las valoraciones en la Figura 6 pueden ser fácilmente obtenidas mediante una subasta anónima ascendente de precios por paquetes.",
        "Concluimos que el poder de estas dos familias de subastas ascendentes es incomparable.",
        "Fortalecemos el resultado de imposibilidad anterior al demostrar que las subastas de precios de paquetes anónimos no pueden lograr ni siquiera una aproximación mejor que min{O(n), O( √ m)} para el bienestar social.",
        "Este ratio de aproximación se puede lograr con comunicación polinómica, y específicamente con un número polinómico de consultas de demanda de precio de artículo. Teorema 6.2.",
        "Una subasta anónima de precios ascendentes en paquetes no puede garantizar una aproximación mejor que min{ n 2 , √ m 2 } para el bienestar óptimo.",
        "Prueba. (Bosquejo) Supongamos que tenemos n postores y n2 artículos en venta, y que n es primo.",
        "Construimos n2 paquetes distintos con las siguientes propiedades: para cada postor, definimos una partición Si = (Si 1, ..., Si n) de los n2 artículos en n paquetes, de manera que cualquier par de paquetes de particiones diferentes se intersectan.",
        "En el artículo completo, en la parte II [9] mostramos una construcción explícita utilizando las propiedades de las funciones lineales sobre campos finitos.",
        "El resto de la prueba es independiente de la construcción específica.",
        "Usando estos n2 paquetes construimos una clase difícil de obtener.",
        "Cada postor tiene una oferta atómica, en su valoración XOR, para cada uno de estos n2 paquetes.",
        "Un postor i tiene un valor de 2 para cualquier conjunto Si j en su partición.",
        "Para todos los paquetes en las otras particiones, él tiene un valor de 0 o de 1 − δ, y estos valores son desconocidos para el subastador.",
        "Dado que cada par de paquetes de diferentes particiones se intersectan, solo un postor puede recibir un paquete con un valor de 2. 27 Si α > β, la asignación óptima asignará cd al postor 1 y ab al postor 2.",
        "De lo contrario, le damos bd al postor 2 y ac al postor 1.",
        "Ten en cuenta que ambos postores no pueden obtener un valor de 2 en la misma asignación, debido a las intersecciones de los paquetes de alto valor. Ten en cuenta que las consultas de precios de paquetes pueden requerir comunicación exponencial, por lo tanto, el límite inferior de [32] no se cumple. Subastas ascendentes económicamente eficientes de precios de paquetes no anónimos: Inicialización: Todos los precios se inicializan en cero (precios de paquetes no anónimos).",
        "Cada postor presenta un paquete que maximiza su utilidad bajo sus precios personalizados actuales. El subastador calcula una asignación provisional que maximiza sus ingresos bajo los precios actuales. Los precios de los paquetes que fueron demandados por postores perdedores se incrementan en .",
        "Finalmente: Terminar cuando la asignación provisional asigna a cada postor el paquete que solicitó.",
        "Figura 8: Las subastas de esta familia (denominadas subastas NBEA) se sabe que logran el bienestar óptimo.",
        "Ningún postor exigirá un paquete de bajo valor, siempre y cuando el precio de uno de sus paquetes de alto valor sea inferior a 1 (y así le genere una utilidad mayor a 1).",
        "Por lo tanto, para obtener información sobre los paquetes de bajo valor, el subastador debería elegir arbitrariamente a un postor (sin pérdida de generalidad, postor 1) y aumentar los precios de todos los paquetes (S1 1, ..., S1 n) para que sean mayores que 1.",
        "Dado que los precios no pueden disminuir, los otros postores claramente nunca demandarán estos paquetes en etapas futuras.",
        "Un adversario puede elegir los valores de manera que los valores bajos de todos los postores para los paquetes que no están en la partición del postor 1 sean cero (es decir, vi(S1 j) = 0 para cada i = 1 y cada j), sin embargo, asignar a cada postor un paquete diferente de la partición del postor 1, podría lograr un bienestar de n+1−(n−1)δ (la valoración del postor 1 es 2, y 1 − δ para todos los demás postores); Si estos paquetes se asignaran incorrectamente, solo se podría lograr un bienestar de 2 (2 para el paquete de alto valor del postor 1, 0 para todos los demás postores).",
        "En este punto, el subastador no puede tener ninguna información sobre la identidad de los paquetes con valores no nulos.",
        "Por lo tanto, un adversario puede elegir que los valores de los paquetes recibidos por los postores 2, ..., n en la asignación final sean cero.",
        "Concluimos que las subastas de precios de paquetes anónimos no pueden garantizar un bienestar mayor que 2 para esta clase, donde el bienestar óptimo puede estar arbitrariamente cerca de n + 1. 6.2 Precios de Paquetes vs.",
        "Los precios de los artículos El núcleo de las subastas en [37, 3] es el esquema descrito en la Figura 8 (en el espíritu de [35]) para subastas con precios de paquetes no anónimos.",
        "Las subastas de este esquema terminan con la asignación óptima para cualquier clase de valoraciones.",
        "Denominamos a esta familia de subastas ascendentes como subastas NBEA29.",
        "Las subastas NBEA pueden obtener valoraciones XOR de k términos en un número polinómico (en k) de pasos, aunque la obtención de dichas valoraciones puede requerir un número exponencial de consultas de precios de artículos ([7]), y las subastas ascendentes de precios de artículos no pueden hacerlo en absoluto (Teorema 5.4).",
        "Sin embargo, demostramos que las subastas de NBEA (y en particular, iBundle(3) y la subasta de proxy) a veces son inferiores a las simples subastas de demanda de precio de artículo.",
        "Esto puede justificar el uso de subastas híbridas que utilizan tanto precios lineales como no lineales (por ejemplo, la subasta de reloj-proxi [10]).",
        "Demostramos que las subastas de este tipo son 29 subastas ascendentes de precio de paquete no anónimas económicamente eficientes.",
        "Para completitud, en el artículo completo [9] presentamos una prueba sencilla de la eficiencia (hasta un ) de las subastas de este esquema . familia puede utilizar un número exponencial de consultas incluso para determinar la asignación óptima entre dos postores con valoraciones aditivas30 , donde dichas valoraciones pueden ser obtenidas mediante una subasta ascendente de precio de artículo simple.",
        "En realidad demostramos esta propiedad para una clase más amplia de subastas que llamamos subastas conservadoras.",
        "También observamos que en subastas conservadoras, permitir a los postores enviar todos los paquetes en sus conjuntos de demanda garantiza que la subasta se desarrolle en un número polinómico de pasos, si L no es demasiado alto (pero con comunicación exponencial, por supuesto).",
        "Una subasta ascendente se llama conservadora si no es anónima, utiliza precios de paquetes inicializados en cero y en cada etapa el subastador solo puede aumentar los precios de los paquetes demandados por los postores hasta esa etapa.",
        "Además, cada postor solo puede recibir los paquetes que solicitó durante la subasta.",
        "Ten en cuenta que las subastas de NBEA son, por definición, conservadoras.",
        "Proposición 6.3.",
        "Si cada postor exige un solo paquete en cada paso de la subasta, las subastas conservadoras pueden durar un número exponencial de pasos incluso para valoraciones aditivas.",
        "Si a los postores se les permite presentar todos los paquetes en sus conjuntos de demanda en cada paso, entonces las subastas conservadoras pueden ejecutarse en un número polinómico de pasos para cualquier perfil de valoraciones, siempre y cuando la valoración máxima L sea polinómica en m, n y δ.",
        "Agradecimientos: Los autores agradecen a Moshe Babaioff, Shahar Dobzinski, Ron Lavi, Daniel Lehmann, Ahuva Mualem, David Parkes, Michael Schapira e Ilya Segal por las útiles discusiones.",
        "Apoyado por subvenciones de la Academia de Ciencias de Israel y la Fundación de Ciencia Binacional Estados Unidos-Israel. 7.",
        "REFERENCIAS [1] Amazon.",
        "Página web: http://www.amazon.com. [2] ebay.",
        "Página web: http://www.ebay.com. [3] L. M. Ausubel y P. R. Milgrom.",
        "Subastas ascendentes con ofertas de paquetes.",
        "Fronteras de la Economía Teórica, 1:1-42, 2002. [4] Lawrence Ausubel.",
        "Una subasta dinámica eficiente para mercancías heterogéneas, 2000.",
        "Documento de trabajo, Universidad de Maryland. [5] Yair Bartal, Rica Gonen y Noam Nisan.",
        "Subastas combinatorias multiunidad compatibles con incentivos.",
        "En TARK 03, 2003. [6] Alejandro Bertelsen.",
        "Sustitutos de valoraciones y m-concavidad.",
        "M.Sc.",
        "Tesis, Universidad Hebrea de Jerusalén, 2005. [7] Avrim Blum, Jeffrey C. Jackson, Tuomas Sandholm y Martin A. Zinkevich.",
        "Elicitación de preferencias y aprendizaje por consulta.",
        "Revista de Investigación en Aprendizaje Automático, 5:649-667, 2004. [8] Liad Blumrosen y Noam Nisan.",
        "Sobre el poder computacional de las subastas iterativas I: consultas de demanda.",
        "Documento de trabajo, La Universidad Hebrea de 30 valoraciones se llaman aditivas si para cualquier conjunto de paquetes disjuntos A y B, v(A ∪ B) = v(A) + v(B).",
        "Las valoraciones aditivas son tanto subaditivas como superaditivas y están determinadas por los valores m asignados a los elementos individuales. 42 Jerusalén.",
        "Disponible en http://www.cs.huji.ac.il/˜noam/mkts.html. [9] Liad Blumrosen y Noam Nisan.",
        "Sobre el poder computacional de las subastas iterativas II: subastas ascendentes.",
        "Documento de trabajo, Universidad Hebrea de Jerusalén.",
        "Disponible en http://www.cs.huji.ac.il/˜noam/mkts.html. [10] P. Cramton, L.M.",
        "Ausubel y P.R.",
        "I'm sorry, but \"Milgrom\" is a proper noun and does not have a direct translation in Spanish.",
        "En P. Cramton, Y. Shoham y R. Steinberg (Editores), Subastas Combinatorias.",
        "Capítulo 5.",
        "La subasta de reloj-proxi: Un diseño práctico de subasta combinatoria.",
        "MIT Press.",
        "Próximamente, 2005. [11] P. Cramton, Y. Shoham y R. Steinberg (Editores).",
        "Subastas combinatorias.",
        "MIT Press.",
        "Próximamente, 2005. [12] G. Demange, D. Gale y M. Sotomayor.",
        "Subastas de varios artículos.",
        "Revista de Economía Política, 94:863-872, 1986. [13] Shahar Dobzinski, Noam Nisan y Michael Schapira.",
        "Algoritmos de aproximación para CAS con postores sin complemento.",
        "En el 37º simposio de ACM sobre teoría de la computación (STOC)., 2005. [14] Shahar Dobzinski y Michael Schapira.",
        "Límites óptimos de aproximación superior e inferior para subastas combinatorias de k-duplicados.",
        "Documento de trabajo, Universidad Hebrea. [15] Conferencia de licitación combinatoria.",
        "Página web: http://wireless.fcc.gov/auctions/conferences/combin2003. [16] Faruk Gul y Ennio Stacchetti.",
        "Equilibrio walrasiano con sustitutos brutos.",
        "Revista de Teoría Económica, 87:95 - 124, 1999. [17] Faruk Gul y Ennio Stacchetti.",
        "La subasta inglesa con productos diferenciados.",
        "Revista de Teoría Económica, 92(3):66 - 95, 2000. [18] J. Hastad.",
        "Límites inferiores casi óptimos para circuitos de poca profundidad.",
        "En el 18º STOC, páginas 6-20, 1986. [19] Ron Holzman, Noa Kfir-Dahav, Dov Monderer y Moshe Tennenholtz.",
        "Equilibrio de empaquetamiento en subastas combinatorias.",
        "Juegos y Comportamiento Económico, 47:104-123, 2004. [20] H. Karloff.",
        "Programación Lineal.",
        "Birkhäuser Verlag, 1991. [21] Frank Kelly y Richard Steinberg.",
        "Una subasta combinatoria con múltiples ganadores para el servicio universal.",
        "Ciencia de la Gestión, 46:586-596, 2000. [22] A.S. Kelso y V.P.",
        "Crawford.",
        "Emparejamiento laboral, formación de coaliciones y sustitución bruta.",
        "Econometrica, 50:1483-1504, 1982. [23] Subhash Khot, Richard J. Lipton, Evangelos Markakis y Aranyak Mehta.",
        "Resultados de inaproximabilidad para subastas combinatorias con funciones de utilidad submodulares.",
        "En Working paper., 2004. [24] Sebastien Lahaie y David C. Parkes.",
        "Aplicando algoritmos de aprendizaje a la obtención de preferencias.",
        "En EC 04. [25] Benny Lehmann, Daniel Lehmann y Noam Nisan.",
        "Subastas combinatorias con utilidades marginales decrecientes.",
        "En la conferencia de ACM sobre comercio electrónico.",
        "Para aparecer, Juegos y Comportamiento Económico., 2001. [26] D. Lehmann, L. OCallaghan, y Y. Shoham.",
        "Revelación de la verdad en subastas combinatorias aproximadamente eficientes.",
        "JACM, 49(5):577-602, septiembre de 2002. [27] A. Mas-Collel, W. Whinston y J.",
        "Verde.",
        "Teoría microeconómica.",
        "Oxford University Press, 1995. [28] Debasis Mishra y David Parkes.",
        "Subastas de Vickrey de precio ascendente utilizando algoritmos primal-dual., 2004.",
        "Documento de trabajo, Universidad de Harvard. [29] Noam Nisan.",
        "La complejidad de comunicación del empaquetamiento y cobertura de conjuntos aproximados.",
        "En ICALP 2002. [30] Noam Nisan.",
        "Subasta y asignación en subastas combinatorias.",
        "En la Conferencia ACM sobre Comercio Electrónico, 2000. [31] Noam Nisan.",
        "En P. Cramton, Y. Shoham y R. Steinberg (Editores), Subastas Combinatorias.",
        "Capítulo 1.",
        "Lenguajes de subasta.",
        "MIT Press.",
        "Próximamente, 2005. [32] Noam Nisan e Ilya Segal.",
        "Los requisitos de comunicación de asignaciones eficientes y precios de apoyo, 2003.",
        "Documento de trabajo.",
        "Disponible en http://www.cs.huji.ac.il/˜noam/mkts.html Próximamente en la Revista de Teoría Económica. [33] Noam Nisan e Ilya Segal.",
        "Ineficiencia exponencial de la comunicación de consultas de demanda, 2004.",
        "Documento de trabajo.",
        "Disponible en http://www.stanford.edu/ isegal/queries1.pdf. [34] D. C. Parkes y L. H. Ungar.",
        "Una subasta de Vickrey generalizada de precio ascendente.",
        "Tecnología.",
        "Rep., Universidad de Harvard, 2002. [35] David Parkes.",
        "En P. Cramton, Y. Shoham y R. Steinberg (Editores), Subastas Combinatorias.",
        "Capítulo 3.",
        "Subastas combinatorias iterativas.",
        "MIT Press.",
        "Próximamente, 2005. [36] David C. Parkes.",
        "Subastas combinatorias iterativas: Logrando eficiencia económica y computacional.",
        "Tesis de doctorado, Departamento de Ciencias de la Computación e Informática, Universidad de Pensilvania, 2001. [37] David C. Parkes y Lyle H. Ungar.",
        "Subastas combinatorias iterativas: Teoría y práctica.",
        "En AAAI/IAAI, páginas 74-81, 2000. [38] Ariel Rubinstein.",
        "¿Por qué ciertas propiedades de las relaciones binarias son relativamente más comunes en los lenguajes naturales?",
        "Econometrica, 64:343-356, 1996. [39] Tuomas Sandholm. \n\nEconometrica, 64:343-356, 1996. [39] Tuomas Sandholm.",
        "Algoritmo para la determinación óptima del ganador en subastas combinatorias.",
        "En Inteligencia Artificial, volumen 135, páginas 1-54, 2002. [40] P. Santi, V. Conitzer y T. Sandholm.",
        "Hacia una caracterización de la obtención de preferencias polinomiales con consultas de valor en subastas combinatorias.",
        "En la 17ª Conferencia Anual sobre Teoría del Aprendizaje, 2004. [41] Ilya Segal.",
        "Los requisitos de comunicación de las reglas de elección social y los conjuntos de presupuesto de apoyo, 2004.",
        "Documento de trabajo.",
        "Disponible en http://www.stanford.edu/ isegal/rules.pdf. [42] P.R.",
        "Wurman y M.P.",
        "Wellman.",
        "Akba: Una subasta combinatoria progresiva y de precio anónimo.",
        "En la Segunda Conferencia ACM sobre Comercio Electrónico, 2000. [43] Martin A. Zinkevich, Avrim Blum y Tuomas Sandholm.",
        "En la obtención de preferencias en tiempo polinómico con consultas de valor.",
        "En la Conferencia ACM sobre Comercio Electrónico, 2003. 43"
    ],
    "error_count": 5,
    "keys": {
        "combinatorial auction": {
            "translated_key": "subasta combinatoria",
            "is_in_text": true,
            "original_annotated_sentences": [
                "On the Computational Power of Iterative Auctions∗ [Extended Abstract] Liad Blumrosen School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel liad@cs.huji.ac.il Noam Nisan School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel noam@cs.huji.ac.il ABSTRACT We embark on a systematic analysis of the power and limitations of iterative combinatorial auctions.",
                "Most existing iterative combinatorial auctions are based on repeatedly suggesting prices for bundles of items, and querying the bidders for their demand under these prices.",
                "We prove a large number of results showing the boundaries of what can be achieved by auctions of this kind.",
                "We first focus on auctions that use a polynomial number of demand queries, and then we analyze the power of different kinds of ascending-price auctions.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION Combinatorial auctions have recently received a lot of attention.",
                "In a <br>combinatorial auction</br>, a set M of m nonidentical items are sold in a single auction to n competing bidders.",
                "The bidders have preferences regarding the bundles of items that they may receive.",
                "The preferences of bidder i are specified by a valuation function vi : 2M → R+ , where vi(S) denotes the value that bidder i attaches to winning the bundle of items S. We assume free disposal, i.e., that the vis are monotone non-decreasing.",
                "The usual goal of the auctioneer is to optimize the social welfare P i vi(Si), where the allocation S1...Sn must be a partition of the items.",
                "Applications include many complex resource allocation problems and, in fact, combinatorial auctions may be viewed as the common abstraction of many complex resource allocation problems.",
                "Combinatorial auctions face both economic and computational difficulties and are a central problem in the recently active border of economic theory and computer science.",
                "A forthcoming book [11] addresses many of the issues involved in the design and implementation of combinatorial auctions.",
                "The design of a <br>combinatorial auction</br> involves many considerations.",
                "In this paper we focus on just one central issue: the communication between bidders and the allocation mechanism - preference elicitation.",
                "Transferring all information about bidders preferences requires an infeasible (exponential in m) amount of communication.",
                "Thus, direct revelation auctions in which bidders simply declare their preferences to the mechanism are only practical for very small auction sizes or for very limited families of bidder preferences.",
                "We have therefore seen a multitude of suggested iterative auctions in which the auction protocol repeatedly interacts with the different bidders, aiming to adaptively elicit enough information about the bidders preferences as to be able to find a good (optimal or close to optimal) allocation.",
                "Most of the suggested iterative auctions proceed by maintaining temporary prices for the bundles of items and repeatedly querying the bidders as to their preferences between the bundles under the current set of prices, and then updating the set of bundle prices according to the replies received (e.g., [22, 12, 17, 37, 3]).",
                "Effectively, such an iterative auction accesses the bidders preferences by repeatedly making the following type of demand query to bidders: Query to bidder i: a vector of bundle prices p = {p(S)}S⊆M ; Answer: a bundle of items S ⊆ M that maximizes vi(S) − p(S)..",
                "These types of queries are very natural in an economic setting as they capture the revealed preferences of the bidders.",
                "Some auctions, called item-price or linear-price auctions, specify a price pi for each item, and the price of any given bundle S is always linear, p(S) = P i∈S pi.",
                "Other auctions, called bundle-price auctions, allow specifying arbitrary (non-linear) prices p(S) for bundles.",
                "Another important differentiation between models of iterative auctions is 29 based on whether they use anonymous or non-anonymous prices: In some auctions the prices that are presented to the bidders are always the same (anonymous prices).",
                "In other auctions (non-anonymous), different bidders may face different (discriminatory) vectors of prices.",
                "In ascending-price auctions, forcing prices to be anonymous may be a significant restriction.",
                "In this paper, we embark on a systematic analysis of the computational power of iterative auctions that are based on demand queries.",
                "We do not aim to present auctions for practical use but rather to understand the limitations and possibilities of these kinds of auctions.",
                "In the first part of this paper, our main question is what can be done using a polynomial number of these types of queries?",
                "That is, polynomial in the main parameters of the problem: n, m and the number of bits t needed for representing a single value vi(S).",
                "Note that from an algorithmic point of view we are talking about sub-linear time algorithms: the input size here is really n(2m − 1) numbers - the descriptions of the valuation functions of all bidders.",
                "There are two aspects to computational efficiency in these settings: the first is the communication with the bidders, i.e., the number of queries made, and the second is the usual computational tractability.",
                "Our lower bounds will depend only on the number of queriesand hold independently of any computational assumptions like P = NP.",
                "Our upper bounds will always be computationally efficient both in terms of the number of queries and in terms of regular computation.",
                "As mentioned, this paper concentrates on the single aspect of preference elicitation and on its computational consequences and does not address issues of incentives.",
                "This strengthens our lower bounds, but means that the upper bounds require evaluation from this perspective also before being used in any real <br>combinatorial auction</br>1 The second part of this paper studies the power of ascending -price auctions.",
                "Ascending auctions are iterative auctions where the published prices cannot decrease in time.",
                "In this work, we try to systematically analyze what do the differences between various models of ascending auctions mean.",
                "We try to answer the following questions: (i) Which models of ascending auctions can find the optimal allocation, and for which classes of valuations? (ii) In cases where the optimal allocation cannot be determined by ascending auctions, how well can such auctions approximate the social welfare? (iii) How do the different models for ascending auctions compare?",
                "Are some models computationally stronger than others?",
                "Ascending auctions have been extensively studied in the literature (see the recent survey by Parkes [35]).",
                "Most of this work presented upper bounds, i.e., proposed mechanisms with ascending prices and analyzed their properties.",
                "A result which is closer in spirit to ours, is by Gul and Stacchetti [17], who showed that no item-price ascending auction can always determine the VCG prices, even for substitutes valuations.2 Our framework is more general than the traditional line of research that concentrates on the final allocation and 1 We do observe however that some weak incentive property comes for free in demand-query auctions since myopic players will answer all demand queries truthfully.",
                "We also note that in some cases (but not always!) the incentives issues can be handled orthogonally to the preference elicitation issues, e.g., by using Vickrey-Clarke-Groves (VCG) prices (e.g., [4, 34]). 2 We further discuss this result in Section 5.3.",
                "Iterative auctions Demand auctions Item-price auctions Anonymous price auctions Ascending auctions 1 2 3 4 5 6 97 8 10 Figure 1: The diagram classifies the following auctions according to their properties: (1) The adaptation [12] for Kelso & Crawfords [22] auction. (2) The Proxy Auction [3] by Ausubel & Milgrom. (3) iBundle(3) by Parkes & Ungar [34]. (4) iBundle(2) by Parkes & Ungar [37]. (5) Our descending adaptation for the 2-approximation for submodular valuations by [25] (see Subsection 5.4). (6) Ausubels [4] auction for substitutes valuations. (7) The adaptation by Nisan & Segal [32] of the O( √ m) approximation by [26]. (8) The duplicate-item auction by [5]. (9) Auction for Read-Once formulae by [43]. (10) The AkBA Auction by Wurman & Wellman [42]. payments and in particular, on reaching Walrasian equilibria or Competitive equilibria.",
                "A Walrasian equilibrium3 is known to exist in the case of Substitutes valuations, and is known to be impossible for any wider class of valuations [16].",
                "This does not rule out other allocations by ascending auctions: in this paper we view the auctions as a computational process where the outcome - both the allocation and the payments - can be determined according to all the data elicited throughout the auction; This general framework strengthens our negative results.4 We find the study of ascending auctions appealing for various reasons.",
                "First, ascending auctions are widely used in many real-life settings from the FCC spectrum auctions [15] to almost any e-commerce website (e.g., [2, 1]).",
                "Actually, this is maybe the most straightforward way to sell items: ask the bidders what would they like to buy under certain prices, and increase the prices of over-demanded goods.",
                "Ascending auctions are also considered more intuitive for many bidders, and are believed to increase the trust of the bidders in the auctioneer, as they see the result gradually emerging from the bidders responses.",
                "Ascending auctions also have other desired economic properties, e.g., they incur smaller information revelation (consider, for example, English auctions vs. second-price sealed bid auctions). 1.1 Extant Work Many iterative <br>combinatorial auction</br> mechanisms rely on demand queries (see the survey in [35]).",
                "Figure 1 summa3 A Walrasian equilibrium is vector of item prices for which all the items are sold when each bidder receives a bundle in his demand set. 4 In few recent auction designs (e.g., [4, 28]) the payments are not necessarily the final prices of the auctions. 30 Valuation family Upper bound Reference Lower bound Reference General min(n, O( √ m)) [26], Section 4.2 min(n, m1/2− ) [32] Substitutes 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subadditive O(logm) [13] 2 [13] k-duplicates O(m1/k+1 ) [14] O(m1/k+1 ) [14] Procurement ln m [32] (log m)/2 [29, 32] Figure 2: The best approximation factors currently achievable by computationally-efficient combinatorial auctions, for several classes of valuations.",
                "All lower bounds in the table apply to all iterative auctions (except the one marked by *); all upper bounds in the table are achieved with item-price demand queries. rizes the basic classes of auctions implied by combinations of the above properties and classifies some of the auctions proposed in the literature according to this classification.",
                "For our purposes, two families of these auctions serve as the main motivating starting points: the first is the ascending item-price auctions of [22, 17] that with computational efficiency find an optimal allocation among (gross) substitutes valuations, and the second is the ascending bundleprice auctions of [37, 3] that find an optimal allocation among general valuations - but not necessarily with computational efficiency.",
                "The main lower bound in this area, due to [32], states that indeed, due to inherent communication requirements, it is not possible for any iterative auction to find the optimal allocation among general valuations with sub-exponentially many queries.",
                "A similar exponential lower bound was shown in [32] also for even approximating the optimal allocation to within a factor of m1/2− .",
                "Several lower bounds and upper bounds for approximation are known for some natural classes of valuations - these are summarized in Figure 2.",
                "In [32], the universal generality of demand queries is also shown: any non-deterministic communication protocol for finding an allocation that optimizes the social welfare can be converted into one that only uses demand queries (with bundle prices).",
                "In [41] this was generalized also to nondeterministic protocols for finding allocations that satisfy other natural types of economic requirements (e.g., approximate social efficiency, envy-freeness).",
                "However, in [33] it was demonstrated that this completeness of demand queries holds only in the nondeterministic setting, while in the usual deterministic setting, demand queries (even with bundle prices) may be exponentially weaker than general communication.",
                "Bundle-price auctions are a generalization of (the more natural and intuitive) item-price auctions.",
                "It is known that indeed item-price auctions may be exponentially weaker: a nice example is the case of valuations that are a XOR of k bundles5 , where k is small (say, polynomial).",
                "Lahaie and Parkes [24] show an economically-efficient bundle-price auction that uses a polynomial number of queries whenever k is polynomial.",
                "In contrast, [7] show that there exist valuations that are XORs of k = √ m bundles such that any item-price auction that finds an optimal allocation between them requires exponentially many queries.",
                "These results are part of a recent line of research ([7, 43, 24, 40]) that study the preference elicitation problem in combinatorial auctions and its relation to the full elicitation problem (i.e., learn5 These are valuations where bidders have values for k specific packages, and the value of each bundle is the maximal value of one of these packages that it contains. ing the exact valuations of the bidders).",
                "These papers adapt methods from machine-learning theory to the combinatorialauction setting.",
                "The preference elicitation problem and the full elicitation problem relate to a well studied problem in microeconomics known as the integrability problem (see, e.g., [27]).",
                "This problem studies if and when one can derive the utility function of a consumer from her demand function.",
                "Paper organization: Due to the relatively large number of results we present, we start with a survey of our new results in Section 2.",
                "After describing our formal model in Section 3, we present our results concerning the power of demand queries in Section 4.",
                "Then, we describe the power of item-price ascending auctions (Section 5) and bundle-price ascending auctions (Section 6).",
                "Readers who are mainly interested in the self-contained discussion of ascending auctions can skip Section 4.",
                "Missing proofs from Section 4 can be found in part I of the full paper ([8]).",
                "Missing proofs from Sections 5 and 6 can be found in part II of the full paper ([9]). 2.",
                "A SURVEY OF OUR RESULTS Our systematic analysis is composed of the combination of a rather large number of results characterizing the power and limitations of various classes of auctions.",
                "In this section, we will present an exposition describing our new results.",
                "We first discuss the power of demand-query iterative auctions, and then we turn our attention to ascending auctions.",
                "Figure 3 summarizes some of our main results. 2.1 Demand Queries Comparison of query types We first ask what other natural types of queries could we imagine iterative auctions using?",
                "Here is a list of such queries that are either natural, have been used in the literature, or that we found useful. 1.",
                "Value query: The auctioneer presents a bundle S, the bidder reports his value v(S) for this bundle. 2.",
                "Marginal-value query: The auctioneer presents a bundle A and an item j, the bidder reports how much he is willing to pay for j, given that he already owns A, i.e., v(j|A) = v(A ∪ {j}) − v(A). 3.",
                "Demand query (with item prices): The auctioneer presents a vector of item prices p1...pm; the bidder reports his demand under these prices, i.e., some set S that maximizes v(S) − P i∈S pi.6 6 A tie breaking rule should be specified.",
                "All of our results 31 Communication Constraint Can find an optimal allocation?",
                "Upper bound for welfare approx.",
                "Lower bound for welfare approx.",
                "Item-Price Demand Queries Yes 1 1 Poly.",
                "Communication No [32] min(n, O(m1/2 )) [26] min(n, m1/2− ) [32] Poly.",
                "Item-Price Demand Queries No [32] min(n, O(m1/2 )) min(n, m1/2− ) [32] Poly.",
                "Value Queries No [32] O( m√ log m ) [19] O( m log m ) Anonymous Item-Price AA No - min(O(n), O(m1/2− )) Non-anonymous Item-Price AA No -Anonymous Bundle-Price AA No - min(O(n), O(m1/2− )) Non-anonymous Bundle-Price AA Yes [37] 1 1 Poly Number of Item-Price AA No min(n, O(m1/2 ))Figure 3: This paper studies the economic efficiency of auctions that follow certain communication constraints.",
                "For each class of auctions, the table shows whether the optimal allocation can be achieved, or else, how well can it be approximated (both upper bounds and lower bounds).",
                "New results are highlighted.",
                "Abbreviations: Poly. (Polynomial number/size), AA (ascending auctions). - means that nothing is currently known except trivial solutions. 4.",
                "Indirect-utility query: The auctioneer presents a set of item prices p1...pm, and the bidder responds with his indirect-utility under these prices, that is, the highest utility he can achieve from a bundle under these prices: maxS⊆M (v(S) − P i∈S pi).7 5.",
                "Relative-demand query: the auctioneer presents a set of non-zero prices p1...pm, and the bidder reports the bundle that maximizes his value per unit of money, i.e., some set that maximizes v(S)P i∈S pi .8 Theorem: Each of these queries can be efficiently (i.e., in time polynomial in n, m, and the number of bits of precision t needed to represent a single value vi(S)) simulated by a sequence of demand queries with item prices.",
                "In particular this shows that demand queries can elicit all information about a valuation by simulating all 2m −1 value queries.",
                "We also observe that value queries and marginalvalue queries can simulate each other in polynomial time and that demand queries and indirect-utility queries can also simulate each other in polynomial time.",
                "We prove that exponentially many value queries may be needed in order to simulate a single demand query.",
                "It is interesting to note that for the restricted class of substitutes valuations, demand queries may be simulated by polynomial number of value queries [6].",
                "Welfare approximation The next question that we ask is how well can a computationally-efficient auction that uses only demand queries approximate the optimal allocation?",
                "Two separate obstacles are known: In [32], a lower bound of min(n, m1/2− ), for any fixed > 0, was shown for the approximation factor apply for any fixed tie breaking rule. 7 This is exactly the utility achieved by the bundle which would be returned in a demand query with the same prices.",
                "This notion relates to the Indirect-utility function studied in the Microeconomic literature (see, e.g., [27]). 8 Note that when all the prices are 1, the bidder actually reports the bundle with the highest per-item price.",
                "We found this type of query useful, for example, in the design of the approximation algorithm described in Figure 5 in Section 4.2. obtained using any polynomial amount of communication.",
                "A computational bound with the same value applies even for the case of single-minded bidders, but under the assumption of NP = ZPP [39].",
                "As noted in [32], the computationallyefficient greedy algorithm of [26] can be adapted to become a polynomial-time iterative auction that achieves a nearly matching approximation factor of min(n, O( √ m)).",
                "This iterative auction may be implemented with bundle-price demand queries but, as far as we see, not as one with item prices.",
                "Since in a single bundle-price demand query an exponential number of prices can be presented, this algorithm can have an exponential communication cost.",
                "In Section 4.2, we describe a different item-price auction that achieves the same approximation factor with a polynomial number of queries (and thus with a polynomial communication).",
                "Theorem: There exists a computationally-efficient iterative auction with item-price demand queries that finds an allocation that approximates the optimal welfare between arbitrary valuations to within a factor of min(n, O( √ m)).",
                "One may then attempt obtaining such an approximation factor using iterative auctions that use only the weaker value queries.",
                "However, we show that this is impossible: Theorem: Any iterative auction that uses a polynomial (in n and m) number of value queries can not achieve an approximation factor that is better than O( m log m ).9 Note however that auctions with only value queries are not completely trivial in power: the bundling auctions of Holzman et al. [19] can easily be implemented by a polynomial number of value queries and can achieve an approximation factor of O( m√ log m ) by using O(log m) equi-sized bundles.",
                "We do not know how to close the (tiny) gap between this upper bound and our lower bound.",
                "Representing bundle-prices We then deal with a critical issue with bundle-price auctions that was side-stepped by our model, as well as by all previous works that used bundle-price auctions: how are 9 This was also proven independently by Shahar Dobzinski and Michael Schapira. 32 the bundle prices represented?",
                "For item-price auctions this is not an issue since a query needs only to specify a small number, m, of prices.",
                "In bundle-price auctions that situation is more difficult since there are exponentially many bundles that require pricing.",
                "Our basic model (like all previous work that used bundle prices, e.g., [37, 34, 3]), ignores this issue, and only requires that the prices be determined, somehow, by the protocol.",
                "A finer model would fix a specific language for denoting bundle prices, force the protocol to represent the bundle-prices in this language, and require that the representations of the bundle-prices also be polynomial.",
                "What could such a language for denoting prices for all bundles look like?",
                "First note that specifying a price for each bundle is equivalent to specifying a valuation.",
                "Second, as noted in [31], most of the proposed bidding languages are really just languages for representing valuations, i.e., a syntactic representation of valuations - thus we could use any of them.",
                "This point of view opens up the general issue of which language should be used in bundle-price auctions and what are the implications of this choice.",
                "Here we initiate this line of investigation.",
                "We consider bundle-price auctions where the prices must be given as a XOR-bid, i.e., the protocol must explicitly indicate the price of every bundle whose value is different than that of all of its proper subsets.",
                "Note that all bundle-price auctions that do not explicitly specify a bidding language must implicitly use this language or a weaker one, since without a specific language one would need to list prices for all bundles, perhaps except for trivial ones (those with value 0, or more generally, those with a value that is determined by one of their proper subsets.)",
                "We show that once the representation length of bundle prices is taken into account (using the XOR-language), bundle-price auctions are no more strictly stronger than item-price auctions.",
                "Define the cost of an iterative auction as the total length of the queries and answers used throughout the auction (in the worst case).",
                "Theorem: For some class of valuations, bundle price auctions that use the XOR-language require an exponential cost for finding the optimal allocation.",
                "In contrast, item-price auctions can find the optimal allocation for this class within polynomial cost.10 This put doubts on the applicability of bundle-price auctions like [3, 37], and it may justify the use of hybrid pricing methods such as Ausubel, Cramton and Milgroms Clock-Proxy auction ([10]).",
                "Demand queries and linear programs The winner determination problem in combinatorial auctions may be formulated as an integer program.",
                "In many cases solving the linear-program relaxation of this integer program is useful: for some restricted classes of valuations it finds the optimum of the integer program (e.g., substitute valuations [22, 17]) or helps approximating the optimum (e.g., by randomized rounding [13, 14]).",
                "However, the linear program has an exponential number of variables.",
                "Nisan and Segal [32] observed the surprising fact that despite the ex10 Our proof relies on the sophisticated known lower bounds for constant depth circuits.",
                "We were not able to find an elementary proof. ponential number of variables, this linear program may be solved within polynomial communication.",
                "The basic idea is to solve the dual program using the Ellipsoid method (see, e.g., [20]).",
                "The dual program has a polynomial number of variables, but an exponential number of constraints.",
                "The Ellipsoid algorithm runs in polynomial time even on such programs, provided that a separation oracle is given for the set of constraints.",
                "Surprisingly, such a separation oracle can be implemented using a single demand query (with item prices) to each of the bidders.",
                "The treatment of [32] was somewhat ad-hoc to the problem at hand (the case of substitute valuations).",
                "Here we give a somewhat more general form of this important observation.",
                "Let us call the following class of linear programs generalized-winner-determination-relaxation (GWDR) LPs: Maximize X i∈N,S⊆M wi xi,S vi(S) s.t.",
                "X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M The case where wi = 1, di = 1, qj = 1 (for every i, j) is the usual linear relaxation of the winner determination problem.",
                "More generally, wi may be viewed as the weight given to bidder is welfare, qj may be viewed as the quantity of units of good j, and di may be viewed as duplicity of the number of bidders of type i. Theorem: Any GWDR linear program may be solved in polynomial time (in n, m, and the number of bits of precision t) using only demand queries with item prices.11 2.2 Ascending Auctions Ascending item-price auctions: It is well known that the item-price ascending auctions of Kelso and Crawford [22] and its variants [12, 16] find the optimal allocation as long as all players valuations have the substitutes property.",
                "The obvious question is whether the optimal allocation can be found for a larger class of valuations.",
                "Our main result here is a strong negative result: Theorem: There is a 2-item 2-player problem where no ascending item-price auction can find the optimal allocation.",
                "This is in contrast to both the power of bundle-price ascending auctions and to the power of general item-price demand queries (see above), both of which can always find the optimal allocation and in fact even provide full preference elicitation.",
                "The same proof proves a similar impossibility result for other types of auctions (e.g., descending auctions, non-anonymous auctions).",
                "More extension of this result: • Eliciting some classes of valuations requires an exponential number of ascending item-price trajectories. 11 The produced optimal solution will have polynomial support and thus can be listed fully. 33 • At least k − 1 ascending item-price trajectories are needed to elicit XOR formulae with k terms.",
                "This result is in some sense tight, since we show that any k-term XOR formula can be fully elicited by k−1 nondeterministic (i.e., when some exogenous teacher instructs the auctioneer on how to increase the prices) ascending auctions.12 We also show that item-price ascending auctions and iterative auctions that are limited to a polynomial number of queries (of any kind, not necessarily ascending) are incomparable in their power: ascending auctions, with small enough increments, can elicit the preferences in cases where any polynomial number of queries cannot.",
                "Motivated by several recent papers that studied the relation between eliciting and fully-eliciting the preferences in combinatorial auctions (e.g., [7, 24]), we explore the difference between these problems in the context of ascending auctions.",
                "We show that although a single ascending auction can determine the optimal allocation among any number of bidders with substitutes valuations, it cannot fully-elicit such a valuation even for a single bidder.",
                "While it was shown in [25] that the set of substitutes valuations has measure zero in the space of general valuations, its dimension is not known, and in particular it is still open whether a polynomial amount of information suffices to describe a substitutes valuation.",
                "While our result may be a small step in that direction (a polynomial full elicitation may still be possible with other communication protocols), we note that our impossibility result also holds for valuations in the class OXS defined by [25], valuations that we are able to show have a compact representation.",
                "We also give several results separating the power of different models for ascending combinatorial auctions that use item-prices: we prove, not surprisingly, that adaptive ascending auctions are more powerful than oblivious ascending auctions and that non-deterministic ascending auctions are more powerful than deterministic ascending auctions.",
                "We also compare different kinds of non-anonymous auctions (e.g., simultaneous or sequential), and observe that anonymous bundle-price auctions and non-anonymous item-price auctions are incomparable in their power.",
                "Finally, motivated by Dutch auctions, we consider descending auctions, and how they compare to ascending ones; we show classes of valuations that can be elicited by ascending item-price auctions but not by descending item-price auctions, and vice versa.",
                "Ascending bundle-price auctions: All known ascending bundle-price auctions that are able to find the optimal allocation between general valuations (with free disposal) use non-anonymous prices.",
                "Anonymous ascending-price auctions (e.g., [42, 21, 37]) are only known to be able to find the optimal allocation among superadditive valuations or few other simple classes ([36]).",
                "We show that this is no mistake: Theorem: No ascending auction with anonymous prices can find the optimal allocation between general valuations. 12 Non-deterministic computation is widely used in CS and also in economics (e.g, a Walrasian equilibrium or [38]).",
                "In some settings, deterministic and non-deterministic models have equal power (e.g., computation with finite automata).",
                "This bound is regardless of the running time, and it also holds for descending auctions and non-deterministic auctions.",
                "We strengthen this result significantly by showing that anonymous ascending auctions cannot produce a better than O( √ m) approximation - the approximation ratio that can be achieved with a polynomial number of queries ([26, 32]) and, as mentioned, with a polynomial number of item-price demand queries.",
                "The same lower bound clearly holds for anonymous item-price ascending auctions since such auctions can be simulated by anonymous bundle-price ascending auctions.",
                "We currently do not have any lower bound on the approximation achievable by non-anonymous item-price ascending auctions.",
                "Finally, we study the performance of the existing computationally-efficient ascending auctions.",
                "These protocols ([37, 3]) require exponential time in the worst case, and this is unavoidable as shown by [32].",
                "However, we also observe that these auctions, as well as the whole class of similar ascending bundle-price auctions, require an exponential time even for simple additive valuations.",
                "This is avoidable and indeed the ascending item-price auctions of [22] can find the optimal allocation for these simple valuations with polynomial communication. 3.",
                "THE MODEL 3.1 Discrete Auctions for Continuous Values Our model aims to capture iterative auctions that operate on real-valued valuations.",
                "There is a slight technical difficulty here in bridging the gap between the discrete nature of an iterative auction, and the continuous nature of the valuations.",
                "This is exactly the same problem as in modeling a simple English auction.",
                "There are three standard formal ways to model it: 1.",
                "Model the auction as a continuous process and study its trajectory in time.",
                "For example, the so-called Japanese auction is basically a continuous model of an English model.13 2.",
                "Model the auction as discrete and the valuations as continuously valued.",
                "In this case we introduce a parameter and usually require the auction to produce results that are -close to optimal. 3.",
                "Model the valuations as discrete.",
                "In this case we will assume that all valuations are integer multiples of some small fixed quantity δ, e.g., 1 penny.",
                "All communication in this case is then naturally finite.",
                "In this paper we use the latter formulation and assume that all values are multiples of some δ.",
                "Thus, in some parts of the paper we assume without loss of generality that δ = 1, hence all valuations are integral.",
                "Almost all (if not all) of our results can be translated to the other two models with little effort. 3.2 Valuations A single auctioneer is selling m indivisible non-homogeneous items in a single auction, and let M be the set of these 13 Another similar model is the moving knives model in the cake-cutting literature. 34 items and N be the set of bidders.",
                "Each one of the n bidders in the auction has a valuation function vi : 2m → {0, δ, 2δ, ..., L}, where for every bundle of items S ⊆ M, vi(S) denotes the value of bidder i for the bundle S and is a multiple of δ in the range 0...L. We will sometimes denote the number of bits needed to represent such values in the range 0...L by t = log L. We assume free disposal, i.e., S ⊆ T implies vi(S) ≤ vi(T) and that vi(∅) = 0 for all bidders.",
                "We will mention the following classes of valuations: • A valuation is called sub-modular if for all sets of items A and B we have that v(A ∪ B) + v(A ∩ B) ≤ v(A) + v(B). • A valuation is called super-additive if for all disjoint sets of items A and B we have that v(A∪B) ≥ v(A)+ v(B). • A valuation is called a k-bundle XOR if it can be represented as a XOR combination of at most k atomic bids [30], i.e., if there are at most k bundles Si and prices pi such that for all S, v(S) = maxi|S⊇Si pi.",
                "Such valuations will be denoted by v = (S1 : p1) ⊕ (S2 : p2) ⊕ . . . ⊕ (Sk : pk).14 3.3 Iterative Auctions The auctioneer sets up a protocol (equivalently an algorithm), where at each stage of the protocol some information q - termed the query - is sent to some bidder i, and then bidder i replies with some reply that depends on the query as well as on his own valuation.",
                "In this paper, we assume that we have complete control over the bidders behavior, and thus the protocol also defines a reply function ri(q, vi) that specifies bidder is reply to query q.",
                "The protocol may be adaptive: the query value as well as the queried bidder may depend on the replies received for past queries.",
                "At the end of the protocol, an allocation S1...Sn must be declared, where Si ∩ Sj = ∅ for i = j.",
                "We say that the auction finds an optimal allocation if it finds the allocation that maximizes the social welfareP i vi(Si).",
                "We say that it finds a c-approximation if P i vi(Si) ≥ P i vi(Ti)/c where T1...Tn is an optimal allocation.",
                "The running time of the auction on a given instance of the bidders valuations is the total number of queries made on this instance.",
                "The running time of a protocol is the worst case cost over all instances.",
                "Note that we impose no computational limitations on the protocol or on the players.15 This of course only strengthens our hardness results.",
                "Yet, our positive results will not use this power and will be efficient also in the usual computational sense.",
                "Our goal will be to design computationally-efficient protocols.",
                "We will deem a protocol computationally-efficient if its cost is polynomial in the relevant parameters: the number of bidders n, the number of items m, and t = log L, where L is the largest possible value of a bundle.",
                "However, when we discuss ascending-price auctions and their variants, a computationally-efficient protocol will be required to be 14 For example, v = (abcd : 5) ⊕ (ab : 3) ⊕ (c : 4) denotes the XOR valuation with the terms abcd, ab, c and prices 5, 3, 4 respectively.",
                "For this valuation, v(abcd) = 5, v(abd) = 3, v(abc) = 4. 15 The running time really measures communication costs and not computational running time. pseudo-polynomial, i.e., it should ask a number of queries which is polynomial in m, n and L δ .",
                "This is because that ascending auctions can usually not achieve such running times (consider even the English auction on a single item).16 Note that all of our results give concrete bounds, where the dependence on the parameters is given explicitly; we use the standard big-Oh notation just as a shorthand.",
                "We say than an auction elicits some class V of valuations, if it determines the optimal allocation for any profile of valuations drawn from V ; We say that an auction fully elicits some class of valuations V , if it can fully learn any single valuation v ∈ V (i.e., learn v(S) for every S). 3.4 Demand Queries and Ascending Auctions Most of the paper will be concerned with a common special case of iterative auctions that we term demand auctions.",
                "In such auctions, the queries that are sent to bidders are demand queries: the query specifies a price p(S) ∈ + for each bundle S. The reply of bidder i is simply the set most desired - demanded - under these prices.",
                "Formally, a set S that maximizes vi(S) − p(S).",
                "It may happen that more than one set S maximizes this value.",
                "In which case, ties are broken according to some fixed tie-breaking rule, e.g., the lexicographically first such set is returned.",
                "All of our results hold for any fixed tie-breaking rule.",
                "Ascending auctions are iterative auctions with non-decreasing prices: Definition 1.",
                "In an ascending auction, the prices in the queries to the same bidder can only increase in time.",
                "Formally, let p be a query made for bidder i, and q be a query made for bidder i at a later stage in the protocol.",
                "Then for all sets S, q(S) ≥ p(S).",
                "A similar variant, which we also study and that is also common in real life, is descending auctions, in which prices can only decrease in time.",
                "Note that the term ascending auction refers to an auction with a single ascending trajectory of prices.",
                "It may be useful to define multi-trajectory ascending auctions, in which the prices maybe reset to zero a number of times (see, e.g., [4]).",
                "We consider two main restrictions on the types of allowed demand queries: Definition 2.",
                "Item Prices: The prices in each query are given by prices pj for each item j.",
                "The price of a set S is additive: p(S) = P j∈S pj.",
                "Definition 3.",
                "Anonymous prices: The prices seen by the bidders at any stage in the auction are the same, i.e. whenever a query is made to some bidder, the same query is also made to all other bidders (with the prices unchanged).",
                "In auctions with non-anonymous (discriminatory) prices, each bidder i has personalized prices denoted by pi (S).17 In this paper, all auctions are anonymous unless otherwise specified.",
                "Note that even though in our model valuations are integral (or multiples of some δ), we allow the demand query to 16 Most of the auctions we present may be adapted to run in time polynomial in log L, using a binary-search-like procedure, losing their ascending nature. 17 Note that a non-anonymous auction can clearly be simulated by n parallel anonymous auctions. 35 use arbitrary real numbers in +.",
                "That is, we assume that the increment we use in the ascending auctions may be significantly smaller than δ.",
                "All our hardness results hold for any , even for continuous price increments.",
                "A practical issue here is how will the query be specified: in the general case, an exponential number of prices needs to be sent in a single query.",
                "Formally, this is not a problem as the model does not limit the length of queries in any way - the protocol must simply define what the prices are in terms of the replies received for previous queries.",
                "We look into this issue further in Section 4.3. 4.",
                "THE POWER OF DEMAND QUERIES In this section, we study the power of iterative auctions that use demand queries (not necessarily ascending).",
                "We start by comapring demand queries to other types of queries.",
                "Then, we discuss how well can one approximate the optimal welfare using a polynomial number of demand queries.",
                "We also initiate the study of the representation of bundle-price demand queries, and finally, we show how demand queries help solving the linear-programming relaxation of combinatorial auctions in polynomial time. 4.1 The Power of Different Types of Queries In this section we compare the power of the various types of queries defined in Section 2.",
                "We will present computationally -efficient simulations of these query types using item-price demand queries.",
                "In Section 5.1 we show that these simulations can also be done using item-price ascending auctions.",
                "Lemma 4.1.",
                "A value query can be simulated by m marginalvalue queries.",
                "A marginal-value query can be simulated by two value queries.",
                "Lemma 4.2.",
                "A value query can be simulated by mt demand queries (where t = log L is the number of bits needed to represent a single bundle value).18 As a direct corollary we get that demand auctions can always fully elicit the bidders valuations by simulating all possible 2m − 1 queries and thus elicit enough information for determining the optimal allocation.",
                "Note, however, that this elicitation may be computationally inefficient.",
                "The next lemma shows that demand queries can be exponentially more powerful than value queries.",
                "Lemma 4.3.",
                "An exponential number of value queries may be required for simulating a single demand query.",
                "Indirect utility queries are, however, equivalent in power to demand queries: Lemma 4.4.",
                "An indirect-utility query can be simulated by mt + 1 demand queries.",
                "A demand query can be simulated by m + 1 indirect-utility queries.",
                "Demand queries can also simulate relative-demand queries:19 18 Note that t bundle-price demand queries can easily simulate a value query by setting the prices of all the bundles except S (the bundle with the unknown value) to be L, and performing a binary search on the price of S. 19 Note: although in our model values are integral (our multiples of δ), we allow the query prices to be arbitrary real numV MV D IU RD V 1 2 exp exp exp MV m 1 exp exp exp D mt poly 1 mt+1 poly IU 1 2 m+1 1 poly RD - - - - 1 Figure 4: Each entry in the table specifies how many queries of this row are needed to simulate a query from the relevant column.",
                "Abbreviations: V (value query), MV (marginal-value query), D (demand query), IU (Indirect-utility query), RD (relative demand query).",
                "Lemma 4.5.",
                "Relative-demand queries can be simulated by a polynomial number of demand queries.",
                "According to our definition of relative-demand queries, they clearly cannot simulate even value queries.",
                "Figure 4 summarizes the relations between these query types. 4.2 Approximating the Social Welfare with Value and Demand Queries We know from [32] that iterative combinatorial auctions that only use a polynomial number of queries can not find an optimal allocation among general valuations and in fact can not even approximate it to within a factor better than min{n, m1/2− }.",
                "In this section we ask how well can this approximation be done using demand queries with item prices, or using the weaker value queries.",
                "We show that, using demand queries, the lower bound can be matched, while value queries can only do much worse.",
                "Figure 5 describes a polynomial-time algorithm that achieves a min(n, O( √ m)) approximation ratio.",
                "This algorithm greedily picks the bundles that maximize the bidders per-item value (using relative-demand queries, see Section 4.1).",
                "As a final step, it allocates all the items to a single bidder if it improves the social welfare (this can be checked using value queries).",
                "Since both value queries and relative-demand queries can be simulated by a polynomial number of demand queries with item prices (Lemmas 4.2 and 4.5), this algorithm can be implemented by a polynomial number of demand queries with item prices.20 Theorem 4.6.",
                "The auction described in Figure 5 can be implemented by a polynomial number of demand queries and achieves a min{n, 4 √ m}-approximation for the social welfare.",
                "We now ask how well can the optimal welfare be approximated by a polynomial number of value queries.",
                "First we note that value queries are not completely powerless: In [19] it is shown that if the m items are split into k fixed bundles of size m/k each, and these fixed bundles are auctioned as though each was indivisible, then the social welfare bers, thus we may have bundles with arbitrarily close relative demands.",
                "In this sense the simulation above is only up to any given (and the number of queries is O(log L+log 1 )).",
                "When the relative-demand query prices are given as rational numbers, exact simulation is implied when log is linear in the input length. 20 In the full paper [8], we observe that this algorithm can be implemented by two descending item-price auctions (where we allow removing items along the auction). 36 generated by such an auction is at least m√ k -approximation of that possible in the original auction.",
                "Notice that such an auction can be implemented by 2k − 1 value queries to each bidder - querying the value of each bundle of the fixed bundles.",
                "Thus, if we choose k = log m bundles we get an m√ log m -approximation while still using a polynomial number of queries.",
                "The following lemma shows that not much more is possible using value queries: Lemma 4.7.",
                "Any iterative auction that uses only value queries and distinguishes between k-tuples of 0/1 valuations where the optimal allocation has value 1, and those where the optimal allocation has value k requires at least 2 m k queries.",
                "Proof.",
                "Consider the following family of valuations: for every S, such that |S| > m/2, v(S) = 1, and there exists a single set T, such that for |S| ≤ m/2, v(S) = 1 iff T ⊆ S and v(S) = 0 otherwise.",
                "Now look at the behavior of the protocol when all valuations vi have T = {1...m}.",
                "Clearly in this case the value of the best allocation is 1 since no set of size m 2 or lower has non-zero value for any player.",
                "Fix the sequence of queries and answers received on this k-tuple of valuations.",
                "Now consider the k-tuple of valuations chosen at random as follows: a partition of the m items into k sets T1...Tk each of size m k each is chosen uniformly at random among all such partitions.",
                "Now consider the k-tuple of valuations from our family that correspond to this partition - clearly Ti can be allocated to i, for each i, getting a total value of k. Now look at the protocol when running on these valuations and compare its behavior to the original case.",
                "Note that the answer to a query S to player i differs between the case of Ti and the original case of T = {1...m} only if |S| ≤ m 2 and Ti ⊆ S. Since Ti is distributed uniformly among all sets of size exactly m k , we have that for any fixed query S to player i, where |S| ≤ m 2 , Pr[Ti ⊆ S] ≤ „ |S| m «|Ti| ≤ 2− m k Using the union-bound, if the original sequence of queries was of length less than 2 m k , then with positive probability none of the queries in the sequence would receive a different answer than for the original input tuple.",
                "This is forbidden since the protocol must distinguish between this case and the original case - which cannot happen if all queries receive the same answer.",
                "Hence there must have been at least 2 m k queries for the original tuple of valuations.",
                "We conclude that a polynomial time protocol that uses only value queries cannot obtain a better than O( m log m ) approximation of the welfare: Theorem 4.8.",
                "An iterative auction that uses a polynomial number of value queries cannot achieve better than O( m log m )-approximation for the social welfare.",
                "Proof.",
                "Immediate from Lemma 4.7: achieving any approximation ratio k which is asymptotically greater than m log m needs an exponential number of value queries.",
                "An Approximation Algorithm: Initialization: Let T ← M be the current items for sale.",
                "Let K ← N be the currently participating bidders.",
                "Let S∗ 1 ← ∅, ..., S∗ n ← ∅ be the provisional allocation.",
                "Repeat until T = ∅ or K = ∅: Ask each bidder i in K for the bundle Si that maximizes her per-item value, i.e., Si ∈ argmaxS⊆T vi(S) |S| .",
                "Let i be the bidder with the maximal per-item value, i.e., i ∈ argmaxi∈K vi(Si) |Si| .",
                "Set: s∗ i = si, K = K \\ i, M = M \\ Si Finally: Ask the bidders for their values vi(M) for the grand bundle.",
                "If allocating all the items to some bidder i improves the social welfare achieved so far (i.e., ∃i ∈ N such that vi(M) > P i∈N vi(S∗ i )), then allocate all items to this bidder i.",
                "Figure 5: This algorithm achieves a min{n, 4 √ m}approximation for the social welfare, which is asymptotically the best worst-case approximation possible with polynomial communication.",
                "This algorithm can be implemented with a polynomial number of demand queries. 4.3 The Representation of Bundle Prices In this section we explicitly fix the language in which bundle prices are presented to the bidders in bundle-price auctions.",
                "This language requires the algorithm to explicitly list the price of every bundle with a non-trivial price.",
                "Trivial in this context is a price that is equal to that of one of its proper subsets (which was listed explicitly).",
                "This representation is equivalent to the XOR-language for expressing valuations.",
                "Formally, each query q is given by an expression: q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl).",
                "In this representation, the price demanded for every set S is simply p(S) = max{k=1...l|Sk⊆S}pk.",
                "Definition 4.",
                "The length of the query q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl) is l. The cost of an algorithm is the sum of the lengths of the queries asked during the operation of the algorithm on the worst case input.",
                "Note that under this definition, bundle-price auctions are not necessarily stronger than item-price auctions.",
                "An itemprice query that prices each item for 1, is translated to an exponentially long bundle-price query that needs to specify the price |S| for each bundle S. But perhaps bundle-price auctions can still find optimal allocations whenever itemprice auction can, without directly simulating such queries?",
                "We show that this is not the case: indeed, when the representation length is taken into account, bundle price auctions are sometimes seriously inferior to item price auctions.",
                "Consider the following family of valuations: Each item is valued at 3, except that for some single set S, its value is a bit more: 3|S| + b, where b ∈ {0, 1, 2}.",
                "Note that an item price auction can easily find the optimal allocation between any two such valuations: Set the prices of each item to 3+ ; if the demand sets of the two players are both empty, then b = 0 for both valuations, and an arbitrary allocation is fine.",
                "If one of them is empty and the other non-empty, allocate the non-empty demand set to its bidder, and the rest to the other.",
                "If both demand sets are non-empty then, unless they form an exact partition, we need to see which b is larger, which we can do by increasing the price of a single item in each demand set. 37 We will show that any bundle-price auction that uses only the XOR-language to describe bundle prices requires an exponential cost (which includes the sum of all description lengths of prices) to find an optimal allocation between any two such valuations.",
                "Lemma 4.9.",
                "Every bundle-price auction that uses XORexpressions to denote bundle prices requires 2Ω( √ m) cost in order to find the optimal allocation among two valuations from the above family.",
                "The complication in the proof stems from the fact that using XOR-expressions, the length of the price description depends on the number of bundles whose price is strictly larger than each of their subsets - this may be significantly smaller than the number of bundles that have a non-zero price. (The proof becomes easy if we require the protocol to explicitly name every bundle with non-zero price.)",
                "We do not know of any elementary proof for this lemma (although we believe that one can be found).",
                "Instead we reduce the problem to a well known lower bound in boolean circuit complexity [18] stating that boolean circuits of depth 3 that compute the majority function on m variables require 2Ω( √ m) size. 4.4 Demand Queries and Linear Programming Consider the following linear-programming relaxation for the generalized winner-determination problem in combinatorial auctions (the primal program): Maximize X i∈N,S⊆M wi xi,S vi(S) s.t.",
                "X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M Note that the primal program has an exponential number of variables.",
                "Yet, we will be able to solve it in polynomial time using demand queries to the bidders.",
                "The solution will have a polynomial size support (non-zero values for xi,S), and thus we will be able to describe it in polynomial time.",
                "Here is its dual: Minimize X j∈M qjpj + X i∈N diui s.t. ui + X j∈S pj ≥ wivi(S) ∀i ∈ N, S ⊆ M pi ≥ 0, uj ≥ 0 ∀i ∈ M, j ∈ N Notice that the dual problem has exactly n + m variables but an exponential number of constraints.",
                "Thus, the dual can be solved using the Ellipsoid method in polynomial time - if a separation oracle can be implemented in polynomial time.",
                "Recall that a separation oracle, when given a possible solution, either confirms that it is a feasible solution, or responds with a constraint that is violated by the possible solution.",
                "We construct a separation oracle for solving the dual program, using a single demand query to each of the bidders.",
                "Consider a possible solution (u, p) for the dual program.",
                "We can re-write the constraints of the dual program as: ui/wi ≥ vi(S) − X j∈S pj/wi Now a demand query to bidder i with prices pj/wi reveals exactly the set S that maximizes the RHS of the previous inequality.",
                "Thus, in order to check whether (u, p) is feasible it suffices to (1) query each bidder i for his demand Di under the prices pj/wi; (2) check only the n constraints ui + P j∈Di pj ≥ wivi(Di) (where vi(Di) can be simulated using a polynomial sequence of demand queries as shown in Lemma 4.2).",
                "If none of these is violated then we are assured that (u, p) is feasible; otherwise we get a violated constraint.",
                "What is left to be shown is how the primal program can be solved. (Recall that the primal program has an exponential number of variables.)",
                "Since the Ellipsoid algorithm runs in polynomial time, it encounters only a polynomial number of constraints during its operation.",
                "Clearly, if all other constraints were removed from the dual program, it would still have the same solution (adding constraints can only decrease the space of feasible solutions).",
                "Now take the reduced dual where only the constraints encountered exist, and look at its dual.",
                "It will have the same solution as the original dual and hence of the original primal.",
                "However, look at the form of this dual of the reduced dual.",
                "It is just a version of the primal program with a polynomial number of variables - those corresponding to constraints that remained in the reduced dual.",
                "Thus, it can be solved in polynomial time, and this solution clearly solves the original primal program, setting all other variables to zero. 5.",
                "ITEM-PRICE ASCENDING AUCTIONS In this section we characterize the power of ascending item-price auctions.",
                "We first show that this power is not trivial: such auctions can in general elicit an exponential amount of information.",
                "On the other hand, we show that the optimal allocation cannot always be determined by a single ascending auction, and in some cases, nor by an exponential number of ascending-price trajectories.",
                "Finally, we separate the power of different models of ascending auctions. 5.1 The Power of Item-Price Ascending Auctions We first show that if small enough increments are allowed, a single ascending trajectory of item-prices can elicit preferences that cannot be elicited with polynomial communication.",
                "As mentioned, all our hardness results hold for any increment, even infinitesimal.",
                "Theorem 5.1.",
                "Some classes of valuations can be elicited by item-price ascending auctions, but cannot be elicited by a polynomial number of queries of any kind.",
                "Proof. (sketch) Consider two bidders with v(S) = 1 if |S| > n 2 , v(S) = 0 if |S| < n 2 and every S such that |S| = n 2 has an unknown value from {0, 1}.",
                "Due to [32], determining the optimal allocation here requires exponential communication in the worst case.",
                "Nevertheless, we show (see [9]) that an item-price ascending auction can do it, as long as it can use exponentially small increments.",
                "We now describe another positive result for the power of item-price ascending auctions.",
                "In section 4.1, we showed 38 v(ab) v(a) v(b) Bidder 1 2 α ∈ (0, 1) β ∈ (0, 1) Bidder 2 2 2 2 Figure 6: No item-price ascending auctions can determine the optimal allocation for this class of valuations. that a value query can be simulated with a (truly) polynomial number of item-price demand queries.",
                "Here, we show that every value query can be simulated by a (pseudo) polynomial number of ascending item-price demand queries. (In the next subsection, we show that we cannot always simulate even a pair of value queries using a single item-price ascending auction.)",
                "In the full paper (part II,[9]), we show that we can simulate other types of queries using item-price ascending auctions.",
                "Proposition 5.2.",
                "A value query can be simulated by an item-price ascending auction.",
                "This simulation requires a polynomial number of queries.",
                "Actually, the proof for Proposition 5.2 proves a stronger useful result regarding the information elicited by iterative auctions.",
                "It says that in any iterative auction in which the changes of prices are small enough in each stage (pseudocontinuous auctions), the value of all bundles demanded during the auction can be computed.",
                "The basic idea is that when the bidder moves from demanding some bundle Ti to demanding another bundle Ti+1, there is a point in which she is indifferent between these two bundles.",
                "Thus, knowing the value of some demanded bundle (e.g., the empty set) enables computing the values of all other demanded bundles.",
                "We say that an auction is pseudo-continuous, if it only uses demand queries, and in each step, the price of at most one item is changed by (for some ∈ (0, δ]) with respect to the previous query.",
                "Proposition 5.3.",
                "Consider any pseudo-continuous auction (not necessarily ascending), in which bidder i demands the empty set at least once along the auction.",
                "Then, the value of every bundle demanded by bidder i throughout the auction can be calculated at the end of the auction. 5.2 Limitations of Item-Price Ascending Auctions Although we observed that demand queries can solve any <br>combinatorial auction</br> problem, when the queries are restricted to be ascending, some classes of valuations cannot be elicited nor fully-elicited.",
                "An example for such class of valuations is given in Figure 6.",
                "Theorem 5.4.",
                "There are classes of valuations that cannot be elicited nor fully elicited by any item-price ascending auction.",
                "Proof.",
                "Let bidder 1 have the valuation described in the first row of Figure 6, where α and β are unknown values in (0, 1).",
                "First, we prove that this class cannot be fully elicited by a single ascending auction.",
                "Specifically, an ascending auction cannot reveal the values of both α and β.",
                "As long as pa and pb are both below 1, the bidder will always demand the whole bundle ab: her utility from ab is strictly greater than the utility from either a or b separately.",
                "For example, we show that u1(ab) > u1(a): u1(ab) = 2 − (pa + pb) = 1 − pa + 1 − pb > vA(a) − pa + 1 − pb > u1(a) Thus, in order to gain any information about α or β, the price of one of the items should become at least 1, w.l.o.g. pa ≥ 1.",
                "But then, the bundle a will not be demanded by bidder 1 throughout the auction, thus no information at all will be gained about α.",
                "Now, assume that bidder 2 is known to have the valuation described in the second row of Figure 6.",
                "The optimal allocation depends on whether α is greater than β (in bidder 1s valuation), and we proved that an ascending auction cannot determine this.",
                "The proof of the theorem above shows that for an unknown value to be revealed, the price of one item should be greater than 1, and the other price should be smaller than 1.",
                "Therefore, in a price-monotonic trajectory of prices, only one of these values can be revealed.",
                "An immediate conclusion is that this impossibility result also holds for item-price descending auctions.",
                "Since no such trajectory exists, then the same conclusion even holds for non-deterministic itemprice auctions (in which exogenous data tells us how to increase the prices).",
                "Also note that since the hardness stems from the impossibility to fully-elicit a valuation of a single bidder, this result also holds for non-anonymous ascending item-price auctions. 5.3 Limitations of Multi-Trajectory Ascending Auctions According to Theorem 5.4, no ascending item-price auction can always elicit the preferences (we prove a similar result for bundle prices in section 6).",
                "But can two ascending trajectories do the job?",
                "Or a polynomial number of ascending trajectories?",
                "We give negative answers for such suggestions.",
                "We define a k-trajectory ascending auction as a demandquery iterative auction in which the demand queries can be partitioned to k sets of queries, where the prices published in each set only increase in time.",
                "Note that we use a general definition; It allows the trajectories to run in parallel or sequentially, and to use information elicited in some trajectories for determining the future queries in other trajectories.",
                "The power of multiple-trajectory auctions can be demonstrated by the negative result of Gul and Stacchetti [17] who showed that even for an auction among substitutes valuations, an anonymous ascending item-price auction cannot compute VCG prices for all players.21 Ausubel [4] overcame this impossibility result and designed auctions that do compute VCG prices by organizing the auction as a sequence of n + 1 ascending auctions.",
                "Here, we prove that one cannot elicit XOR valuations with k terms by less than k − 1 ascending trajectories.",
                "On the other hand, we show that an XOR formula can be fully elicited by k−1 non-deterministic ascending auctions (or by k−1 deterministic ascending auctions if the auctioneer knows the atomic bundles).22 21 A recent unpublished paper by Mishra and Parkes extends this result, and shows that non-anonymous prices with bundle-prices are necessary in order that an ascending auction will end up with a universal-competitive-equilibrium (that leads to VCG payments). 22 This result actually separates the power of deterministic 39 Proposition 5.5.",
                "XOR valuations with k terms cannot be elicited (or fully elicited) by any (k-2)-trajectory itemprice ascending auction, even when the atomic bundles are known to the elicitor.",
                "However, these valuations can be elicited (and fully elicited) by (k-1)-trajectory non-deterministic non-anonymous item-price ascending auctions.",
                "Moreover, an exponential number of trajectories is required for eliciting some classes of valuations: Proposition 5.6.",
                "Elicitation and full-elicitation of some classes of valuations cannot be done by any k-trajectory itemprice ascending auction, where k = o(2m ).",
                "Proof. (sketch) Consider the following class of valuations: For |S| < m 2 , v(S) = 0 and for |S| > m 2 , v(S) = 2; every bundle S of size m 2 has some unknown value in (0, 1).",
                "We show ([9]) that a single item-price ascending auction can reveal the value of at most one bundle of size n 2 , and therefore an exponential number of ascending trajectories is needed in order to elicit such valuations.",
                "We observe that the algorithm we presented in Section 4.2 can be implemented by a polynomial number of ascending auctions (each item-price demand query can be considered as a separate ascending auction), and therefore a min(n, 4 √ m)-approximation can be achieved by a polynomial number of ascending auctions.",
                "We do not currently have a better upper bound or any lower bound. 5.4 Separating the Various Models of Ascending Auctions Various models for ascending auctions have been suggested in the literature.",
                "In this section, we compare the power of the different models.",
                "As mentioned, all auctions are considered anonymous and deterministic, unless specified otherwise.",
                "Ascending vs.",
                "Descending Auctions: We begin the discussion of the relation between ascending auctions and descending auctions with an example.",
                "The algorithm by Lehmann, Lehmann and Nisan [25] can be implemented by a simple item-price descending auction (see the full paper for details [9]).",
                "This algorithm guarantees at least half of the optimal efficiency for submodular valuations.",
                "However, we are not familiar with any ascending auction that guarantees a similar fraction of the efficiency.",
                "This raises a more general question: can ascending auctions solve any combinatorialauction problem that is solvable using a descending auction (and vice versa)?",
                "We give negative answers to these questions.",
                "The idea behind the proofs is that the information that the auctioneer can get for free at the beginning of each type of auction is different.23 and non-deterministic iterative auctions: our proof shows that a non-deterministic iterative auction can elicit the kterm XOR valuations with a polynomial number of demand queries, and [7] show that this elicitation must take an exponential number of demand queries. 23 In ascending auctions, the auctioneer can reveal the most valuable bundle (besides M) before she starts raising the prices, thus she can use this information for adaptively choose the subsequent queries.",
                "In descending auctions, one can easily find the bundle with the highest average per-item price, keeping all other bundles with non-positive utilities, and use this information in the adaptive price change.",
                "Proposition 5.7.",
                "There are classes that cannot be elicited (fully elicited) by ascending item-price auctions, but can be elicited (resp. fully elicited) with a descending item-price auction.",
                "Proposition 5.8.",
                "There are classes that cannot be elicited (fully elicited) by item-price descending auctions, but can be elicited (resp. fully elicited) by item-price ascending auctions.",
                "Deterministic vs. Non-Deterministic Auctions: Nondeterministic ascending auctions can be viewed as auctions where some benevolent teacher that has complete information guides the auctioneer on how she should raise the prices.",
                "That is, preference elicitation can be done by a non-deterministic ascending auction, if there is some ascending trajectory that elicits enough information for determining the optimal allocation (and verifying that it is indeed optimal).",
                "We show that non-deterministic ascending auctions are more powerful than deterministic ascending auctions: Proposition 5.9.",
                "Some classes can be elicited (fully elicited) by an item-price non-deterministic ascending auction, but cannot be elicited (resp. fully elicited) by item-price deterministic ascending auctions.",
                "Anonymous vs. Non-Anonymous Auctions: As will be shown in Section 6, the power of anonymous and nonanonymous bundle-price ascending auctions differs significantly.",
                "Here, we show that a difference also exists for itemprice ascending auctions.",
                "Proposition 5.10.",
                "Some classes cannot be elicited by anonymous item-price ascending auctions, but can be elicited by a non-anonymous item-price ascending auction.",
                "Sequential vs.",
                "Simultaneous Auctions: A non-anonymous auction is called simultaneous if at each stage, the price of some item is raised by for every bidder.",
                "The auctioneer can use the information gathered until each stage, in all the personalized trajectories, to determine the next queries.",
                "A non-anonymous auction is called sequential if the auctioneer performs an auction for each bidder separately, in sequential order.",
                "The auctioneer can determine the next query based on the information gathered in the trajectories completed so far and on the history of the current trajectory.",
                "Proposition 5.11.",
                "There are classes that cannot be elicited by simultaneous non-anonymous item-price ascending auctions, but can be elicited by a sequential non-anonymous item-price ascending auction.",
                "Adaptive vs.",
                "Oblivious Auctions: If the auctioneer determines the queries regardless of the bidders responses (i.e., the queries are predefined) we say that the auction is oblivious.",
                "Otherwise, the auction is adaptive.",
                "We prove that an adaptive behaviour of the auctioneer may be beneficial.",
                "Proposition 5.12.",
                "There are classes that cannot be elicited (fully elicited) using oblivious item-price ascending auctions, but can be elicited (resp. fully elicited) by an adaptive item-price ascending auction. 40 5.5 Preference Elicitation vs. Full Elicitation Preference elicitation and full elicitation are closely related problems.",
                "If full elicitation is easy (e.g., in polynomial time) then clearly elicitation is also easy (by a nonanonymous auction, simply by learning all the valuations separately24 ).",
                "On the other hand, there are examples where preference elicitation is considered easy but learning is hard (typically, elicitation requires smaller amount of information; some examples can be found in [7]).",
                "The tatonnement algorithms by [22, 12, 16] end up with the optimal allocation for substitutes valuations.25 We prove that we cannot fully elicit substitutes valuations (or even their sub-class of OXS valuations defined in [25]), even for a single bidder, by an item-price ascending auction (although the optimal allocation can be found by an ascending auction for any number of bidders!).",
                "Theorem 5.13.",
                "Substitute valuations cannot be fully elicited by ascending item-price auctions.",
                "Moreover, they cannot be fully elicited by any m 2 ascending trajectories (m > 3).",
                "Whether substitutes valuations have a compact representation (i.e., polynomial in the number of goods) is an important open question.",
                "As a step in this direction, we show that its sub-class of OXS valuations does have a compact representation: every OXS valuation can be represented by at most m2 values.26 Lemma 5.14.",
                "Any OXS valuation can be represented by no more than m2 values. 6.",
                "BUNDLE-PRICE ASCENDING AUCTIONS All the ascending auctions in the literature that are proved to find the optimal allocation for unrestricted valuations are non-anonymous bundle-price auctions (iBundle(3) by Parkes and Ungar [37] and the Proxy Auction by Ausubel and Milgrom [3]).",
                "Yet, several anonymous ascending auctions have been suggested (e.g., AkBA [42], [21] and iBundle(2) [37]).",
                "In this section, we prove that anonymous bundle-price ascending auctions achieve poor results in the worst-case.",
                "We also show that the family of non-anonymous bundleprice ascending auctions can run exponentially slower than simple item-price ascending auctions. 6.1 Limitations of Anonymous Bundle-Price Ascending Auctions We present a class of valuations that cannot be elicited by anonymous bundle-price ascending auctions.",
                "These valuations are described in Figure 7.",
                "The basic idea: for determining some unknown value of one bidder we must raise 24 Note that an anonymous ascending auction cannot necessarily elicit a class that can be fully elicited by an ascending auction. 25 Substitute valuations are defined, e.g., in [16].",
                "Roughly speaking, a bidder with a substitute valuation will continue demand a certain item after the price of some other items was increased.",
                "For completeness, we present in the full paper [9] a proof for the efficiency of such auctions for substitutes valuations. 26 A unit-demand valuation is an XOR valuation in which all the atomic bundles are singletons.",
                "OXS valuations can be interpreted as an aggregation (OR) of any number of unit-demand bidders.",
                "Bid. 1 v1(ac) = 2 v1(bd) = 2 v1(cd) = α ∈ (0, 1) Bid. 2 v2(ab) = 2 v2(cd) = 2 v2(bd) = β ∈ (0, 1) Figure 7: Anonymous ascending bundle-price auctions cannot determine the optimal allocation for this class of valuations. a price of a bundle that should be demanded by the other bidder in the future.",
                "Theorem 6.1.",
                "Some classes of valuations cannot be elicited by anonymous bundle-price ascending auctions.",
                "Proof.",
                "Consider a pair of XOR valuations as described in Figure 7.",
                "For finding the optimal allocation we must know which value is greater between α and β.27 However, we cannot learn the value of both α and β by a single ascending trajectory: assume w.l.o.g. that bidder 1 demands cd before bidder 2 demands bd (no information will be elicited if none of these happens).",
                "In this case, the price for bd must be greater than 1 (otherwise, bidder 1 prefers bd to cd).",
                "Thus, bidder 2 will never demand the bundle bd, and no information will be elicited about β.",
                "The valuations described in the proof of Theorem 6.1 can be easily elicited by a non-anonymous item-price ascending auction.",
                "On the other hand, the valuations in Figure 6 can be easily elicited by an anonymous bundle-price ascending auction.",
                "We conclude that the power of these two families of ascending auctions is incomparable.",
                "We strengthen the impossibility result above by showing that anonymous bundle-price auctions cannot even achieve better than a min{O(n), O( √ m)}-approximation for the social welfare.",
                "This approximation ratio can be achieved with polynomial communication, and specifically with a polynomial number of item-price demand queries.28 Theorem 6.2.",
                "An anonymous bundle-price ascending auction cannot guarantee better than a min{ n 2 , √ m 2 } approximation for the optimal welfare.",
                "Proof. (Sketch) Assume we have n bidders and n2 items for sale, and that n is prime.",
                "We construct n2 distinct bundles with the following properties: for each bidder, we define a partition Si = (Si 1, ..., Si n) of the n2 items to n bundles, such that any two bundles from different partitions intersect.",
                "In the full paper, part II [9] we show an explicit construction using the properties of linear functions over finite fields.",
                "The rest of the proof is independent of the specific construction.",
                "Using these n2 bundles we construct a hard-to-elicit class.",
                "Every bidder has an atomic bid, in his XOR valuation, for each of these n2 bundles.",
                "A bidder i has a value of 2 for any bundle Si j in his partition.",
                "For all bundles in the other partitions, he has a value of either 0 or of 1 − δ, and these values are unknown to the auctioneer.",
                "Since every pair of bundles from different partitions intersect, only one bidder can receive a bundle with a value of 2. 27 If α > β, the optimal allocation will allocate cd to bidder 1 and ab to bidder 2.",
                "Otherwise, we give bd to bidder 2 and ac to bidder 1.",
                "Note that both bidders cannot gain a value of 2 in the same allocation, due to the intersections of the high-valued bundles. 28 Note that bundle-price queries may use exponential communication, thus the lower bound of [32] does not hold. 41 Non-anonymous Bundle-Price Economically-Efficient Ascending Auctions: Initialization: All prices are initialized to zero (non-anonymous bundle prices).",
                "Repeat: - Each bidder submits a bundle that maximizes his utility under his current personalized prices. - The auctioneer calculates a provisional allocation that maximizes his revenue under the current prices. - The prices of bundles that were demanded by losing bidders are increased by .",
                "Finally: Terminate when the provisional allocation assigns to each bidder the bundle he demanded.",
                "Figure 8: Auctions from this family (denoted by NBEA auctions) are known to achieve the optimal welfare.",
                "No bidder will demand a low-valued bundle, as long as the price of one of his high-valued bundles is below 1 (and thus gain him a utility greater than 1).",
                "Therefore, for eliciting any information about the low-valued bundles, the auctioneer should first arbitrarily choose a bidder (w.l.o.g bidder 1) and raise the prices of all the bundles (S1 1 , ..., S1 n) to be greater than 1.",
                "Since the prices cannot decrease, the other bidders will clearly never demand these bundles in future stages.",
                "An adversary may choose the values such that the low values of all the bidders for the bundles not in bidder 1s partition are zero (i.e., vi(S1 j ) = 0 for every i = 1 and every j), however, allocating each bidder a different bundle from bidder 1s partition, might achieve a welfare of n+1−(n−1)δ (bidder 1s valuation is 2, and 1 − δ for all other bidders); If these bundles were wrongly allocated, only a welfare of 2 might be achieved (2 for bidder 1s high-valued bundle, 0 for all other bidders).",
                "At this point, the auctioneer cannot have any information about the identity of the bundles with the non-zero values.",
                "Therefore, an adversary can choose the values of the bundles received by bidders 2, ..., n in the final allocation to be zero.",
                "We conclude that anonymous bundleprice auctions cannot guarantee a welfare greater than 2 for this class, where the optimal welfare can be arbitrarily close to n + 1. 6.2 Bundle Prices vs.",
                "Item Prices The core of the auctions in [37, 3] is the scheme described in Figure 8 (in the spirit of [35]) for auctions with nonanonymous bundle prices.",
                "Auctions from this scheme end up with the optimal allocation for any class of valuations.",
                "We denote this family of ascending auctions as NBEA auctions29 .",
                "NBEA auctions can elicit k-term XOR valuations by a polynomial (in k) number of steps , although the elicitation of such valuations may require an exponential number of item-price queries ([7]), and item-price ascending auctions cannot do it at all (Theorem 5.4).",
                "Nevertheless, we show that NBEA auctions (and in particular, iBundle(3) and the proxy auction) are sometimes inferior to simple item-price demand auctions.",
                "This may justify the use of hybrid auctions that use both linear and non-linear prices (e.g., the clock-proxy auction [10]).",
                "We show that auctions from this 29 Non-anonymous Bundle-price economically Efficient Ascending auctions.",
                "For completeness, we give in the full paper [9] a simple proof for the efficiency (up to an ) of auctions of this scheme . family may use an exponential number of queries even for determining the optimal allocation among two bidders with additive valuations30 , where such valuations can be elicited by a simple item-price ascending auction.",
                "We actually prove this property for a wider class of auctions we call conservative auctions.",
                "We also observe that in conservative auctions, allowing the bidders to submit all the bundles in their demand sets ensures that the auction runs a polynomial number of steps - if L is not too high (but with exponential communication, of course).",
                "An ascending auction is called conservative if it is nonanonymous, uses bundle prices initialized to zero and at every stage the auctioneer can only raise prices of bundles demanded by the bidders until this stage.",
                "In addition, each bidder can only receive bundles he demanded during the auction.",
                "Note that NBEA auctions are by definition conservative.",
                "Proposition 6.3.",
                "If every bidder demands a single bundle in each step of the auction, conservative auctions may run for an exponential number of steps even for additive valuations.",
                "If the bidders are allowed to submit all the bundles in their demand sets in each step, then conservative auctions can run in a polynomial number of steps for any profile of valuations, as long as the maximal valuation L is polynomial in m, n and 1 δ .",
                "Acknowledgments: The authors thank Moshe Babaioff, Shahar Dobzinski, Ron Lavi, Daniel Lehmann, Ahuva Mualem, David Parkes, Michael Schapira and Ilya Segal for helpful discussions.",
                "Supported by grants from the Israeli Academy of Sciences and the USAIsrael Binational Science Foundation. 7.",
                "REFERENCES [1] amazon.",
                "Web Page: http://www.amazon.com. [2] ebay.",
                "Web Page: http://www.ebay.com. [3] L. M. Ausubel and P. R. Milgrom.",
                "Ascending auctions with package bidding.",
                "Frontiers of Theoretical Economics, 1:1-42, 2002. [4] Lawrence Ausubel.",
                "An efficient dynamic auction for heterogeneous commodities, 2000.",
                "Working paper, University of Maryland. [5] Yair Bartal, Rica Gonen, and Noam Nisan.",
                "Incentive compatible multi unit combinatorial auctions.",
                "In TARK 03, 2003. [6] Alejandro Bertelsen.",
                "Substitutes valuations and m -concavity.",
                "M.Sc.",
                "Thesis, The Hebrew University of Jerusalem, 2005. [7] Avrim Blum, Jeffrey C. Jackson, Tuomas Sandholm, and Martin A. Zinkevich.",
                "Preference elicitation and query learning.",
                "Journal of Machine Learning Research, 5:649-667, 2004. [8] Liad Blumrosen and Noam Nisan.",
                "On the computational power of iterative auctions I: demand queries.",
                "Working paper, The Hebrew University of 30 Valuations are called additive if for any disjoint bundles A and B, v(A ∪ B) = v(A) + v(B).",
                "Additive valuations are both sub-additive and super-additive and are determined by the m values assigned for the singletons. 42 Jerusalem.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [9] Liad Blumrosen and Noam Nisan.",
                "On the computational power of iterative auctions II: ascending auctions.",
                "Working paper, The Hebrew University of Jerusalem.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [10] P. Cramton, L.M.",
                "Ausubel, and P.R.",
                "Milgrom.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 5.",
                "The Clock-Proxy Auction: A Practical <br>combinatorial auction</br> Design.",
                "MIT Press.",
                "Forthcoming, 2005. [11] P. Cramton, Y. Shoham, and R. Steinberg (Editors).",
                "Combinatorial Auctions.",
                "MIT Press.",
                "Forthcoming, 2005. [12] G. Demange, D. Gale, and M. Sotomayor.",
                "Multi-item auctions.",
                "Journal of Political Economy, 94:863-872, 1986. [13] Shahar Dobzinski, Noam Nisan, and Michael Schapira.",
                "Approximation algorithms for cas with complement-free bidders.",
                "In The 37th ACM symposium on theory of computing (STOC)., 2005. [14] Shahar Dobzinski and Michael Schapira.",
                "Optimal upper and lower approximation bounds for k-duplicates combinatorial auctions.",
                "Working paper, the Hebrew University. [15] Combinatorial bidding conference.",
                "Web Page: http://wireless.fcc.gov/auctions/conferences/combin2003. [16] Faruk Gul and Ennio Stacchetti.",
                "Walrasian equilibrium with gross substitutes.",
                "Journal of Economic Theory, 87:95 - 124, 1999. [17] Faruk Gul and Ennio Stacchetti.",
                "The english auction with differentiated commodities.",
                "Journal of Economic Theory, 92(3):66 - 95, 2000. [18] J. Hastad.",
                "Almost optimal lower bounds for small depth circuits.",
                "In 18th STOC, pages 6-20, 1986. [19] Ron Holzman, Noa Kfir-Dahav, Dov Monderer, and Moshe Tennenholtz.",
                "Bundling equilibrium in combinatrial auctions.",
                "Games and Economic Behavior, 47:104-123, 2004. [20] H. Karloff.",
                "Linear Programming.",
                "Birkh¨auser Verlag, 1991. [21] Frank Kelly and Richard Steinberg.",
                "A <br>combinatorial auction</br> with multiple winners for universal service.",
                "Management Science, 46:586-596, 2000. [22] A.S. Kelso and V.P.",
                "Crawford.",
                "Job matching, coalition formation, and gross substitute.",
                "Econometrica, 50:1483-1504, 1982. [23] Subhash Khot, Richard J. Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Inapproximability results for combinatorial auctions with submodular utility functions.",
                "In Working paper., 2004. [24] Sebastien Lahaie and David C. Parkes.",
                "Applying learning algorithms to preference elicitation.",
                "In EC 04. [25] Benny Lehmann, Daniel Lehmann, and Noam Nisan.",
                "Combinatorial auctions with decreasing marginal utilities.",
                "In ACM conference on electronic commerce.",
                "To appear, Games and Economic Behaviour., 2001. [26] D. Lehmann, L. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "JACM, 49(5):577-602, Sept. 2002. [27] A. Mas-Collel, W. Whinston, and J.",
                "Green.",
                "Microeconomic Theory.",
                "Oxford university press, 1995. [28] Debasis Mishra and David Parkes.",
                "Ascending price vickrey auctions using primal-dual algorithms., 2004.",
                "Working paper, Harvard University. [29] Noam Nisan.",
                "The communication complexity of approximate set packing and covering.",
                "In ICALP 2002. [30] Noam Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In ACM Conference on Electronic Commerce, 2000. [31] Noam Nisan.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 1.",
                "Bidding Languages.",
                "MIT Press.",
                "Forthcoming, 2005. [32] Noam Nisan and Ilya Segal.",
                "The communication requirements of efficient allocations and supporting prices, 2003.",
                "Working paper.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html Forthcoming in the Journal of Economic Theory. [33] Noam Nisan and Ilya Segal.",
                "Exponential communication inefficiency of demand queries, 2004.",
                "Working paper.",
                "Available from http://www.stanford.edu/ isegal/queries1.pdf. [34] D. C. Parkes and L. H. Ungar.",
                "An ascending-price generalized vickrey auction.",
                "Tech.",
                "Rep., Harvard University, 2002. [35] David Parkes.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 3.",
                "Iterative Combinatorial Auctions.",
                "MIT Press.",
                "Forthcoming, 2005. [36] David C. Parkes.",
                "Iterative combinatorial auctions: Achieving economic and computational efficiency.",
                "Ph.D. Thesis, Department of Computer and Information Science, University of Pennsylvania., 2001. [37] David C. Parkes and Lyle H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In AAAI/IAAI, pages 74-81, 2000. [38] Ariel Rubinstein.",
                "Why are certain properties of binary relations relatively more common in natural languages.",
                "Econometrica, 64:343-356, 1996. [39] Tuomas Sandholm.",
                "Algorithm for optimal winner determination in combinatorial auctions.",
                "In Artificial Intelligence, volume 135, pages 1-54, 2002. [40] P. Santi, V. Conitzer, and T. Sandholm.",
                "Towards a characterization of polynomial preference elicitation with value queries in combinatorial auctions.",
                "In The 17th Annual Conference on Learning Theory, 2004. [41] Ilya Segal.",
                "The communication requirements of social choice rules and supporting budget sets, 2004.",
                "Working paper.",
                "Available from http://www.stanford.edu/ isegal/rules.pdf. [42] P.R.",
                "Wurman and M.P.",
                "Wellman.",
                "Akba: A progressive, anonymous-price <br>combinatorial auction</br>.",
                "In Second ACM Conference on Electronic Commerce, 2000. [43] Martin A. Zinkevich, Avrim Blum, and Tuomas Sandholm.",
                "On polynomial-time preference elicitation with value queries.",
                "In ACM Conference on Electronic Commerce, 2003. 43"
            ],
            "original_annotated_samples": [
                "In a <br>combinatorial auction</br>, a set M of m nonidentical items are sold in a single auction to n competing bidders.",
                "The design of a <br>combinatorial auction</br> involves many considerations.",
                "This strengthens our lower bounds, but means that the upper bounds require evaluation from this perspective also before being used in any real <br>combinatorial auction</br>1 The second part of this paper studies the power of ascending -price auctions.",
                "Ascending auctions also have other desired economic properties, e.g., they incur smaller information revelation (consider, for example, English auctions vs. second-price sealed bid auctions). 1.1 Extant Work Many iterative <br>combinatorial auction</br> mechanisms rely on demand queries (see the survey in [35]).",
                "Then, the value of every bundle demanded by bidder i throughout the auction can be calculated at the end of the auction. 5.2 Limitations of Item-Price Ascending Auctions Although we observed that demand queries can solve any <br>combinatorial auction</br> problem, when the queries are restricted to be ascending, some classes of valuations cannot be elicited nor fully-elicited."
            ],
            "translated_annotated_samples": [
                "En una <br>subasta combinatoria</br>, un conjunto M de m artículos no idénticos se venden en una sola subasta a n postores competidores.",
                "El diseño de una <br>subasta combinatoria</br> implica muchas consideraciones.",
                "Esto refuerza nuestros límites inferiores, pero significa que los límites superiores también requieren evaluación desde esta perspectiva antes de ser utilizados en cualquier <br>subasta combinatoria</br> real. La segunda parte de este documento estudia el poder de las subastas de precio ascendente.",
                "Las subastas ascendentes también tienen otras propiedades económicas deseadas, por ejemplo, implican una revelación de información menor (considere, por ejemplo, las subastas inglesas frente a las subastas de segundo precio sellado). 1.1 Trabajo Existente Muchos mecanismos de <br>subasta combinatoria</br> iterativos dependen de consultas de demanda (ver la encuesta en [35]).",
                "Entonces, el valor de cada paquete demandado por el postor i a lo largo de la subasta puede calcularse al final de la subasta. 5.2 Limitaciones de las Subastas Ascendentes de Precio de Artículo Aunque observamos que las consultas de demanda pueden resolver cualquier problema de <br>subasta combinatoria</br>, cuando las consultas están restringidas a ser ascendentes, algunas clases de valoraciones no pueden ser obtenidas ni completamente obtenidas."
            ],
            "translated_text": "En el Poder Computacional de Subastas Iterativas∗ [Resumen Extendido] Liad Blumrosen Escuela de Ingeniería e Informática Universidad Hebrea de Jerusalén Jerusalén, Israel liad@cs.huji.ac.il Noam Nisan Escuela de Ingeniería e Informática Universidad Hebrea de Jerusalén Jerusalén, Israel noam@cs.huji.ac.il RESUMEN Nos embarcamos en un análisis sistemático del poder y limitaciones de las subastas combinatorias iterativas. La mayoría de las subastas combinatorias iterativas existentes se basan en sugerir precios repetidamente para paquetes de artículos y consultar a los postores sobre su demanda bajo estos precios. Demostramos un gran número de resultados que muestran los límites de lo que se puede lograr mediante subastas de este tipo. Primero nos enfocamos en subastas que utilizan un número polinomial de consultas de demanda, y luego analizamos el poder de diferentes tipos de subastas de precio ascendente. Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía Términos Generales Algoritmos, Economía, Teoría 1. Las subastas combinatorias han recibido recientemente mucha atención. En una <br>subasta combinatoria</br>, un conjunto M de m artículos no idénticos se venden en una sola subasta a n postores competidores. Los postores tienen preferencias con respecto a los lotes de artículos que pueden recibir. Las preferencias del postor i están especificadas por una función de valoración vi: 2M → R+, donde vi(S) denota el valor que el postor i asigna a ganar el conjunto de artículos S. Suponemos disposición libre, es decir, que los vi son monótonos no decrecientes. El objetivo habitual del subastador es optimizar el bienestar social P i vi(Si), donde la asignación S1...Sn debe ser una partición de los artículos. Las aplicaciones incluyen muchos problemas complejos de asignación de recursos y, de hecho, las subastas combinatorias pueden ser vistas como la abstracción común de muchos problemas complejos de asignación de recursos. Las subastas combinatorias enfrentan dificultades económicas y computacionales y son un problema central en la frontera recientemente activa de la teoría económica y la informática. Un libro próximo [11] aborda muchos de los problemas involucrados en el diseño e implementación de subastas combinatorias. El diseño de una <br>subasta combinatoria</br> implica muchas consideraciones. En este artículo nos enfocamos en un solo tema central: la comunicación entre los oferentes y el mecanismo de asignación - la obtención de preferencias. Transferir toda la información sobre las preferencias de los licitadores requiere una cantidad de comunicación inasumible (exponencial en m). Por lo tanto, las subastas de revelación directa en las que los postores simplemente declaran sus preferencias al mecanismo solo son prácticas para tamaños de subasta muy pequeños o para familias muy limitadas de preferencias de postores. Por lo tanto, hemos visto una multitud de subastas iterativas sugeridas en las que el protocolo de subasta interactúa repetidamente con los diferentes postores, con el objetivo de obtener de manera adaptativa suficiente información sobre las preferencias de los postores para poder encontrar una asignación buena (óptima o cercana a óptima). La mayoría de las subastas iterativas sugeridas proceden manteniendo precios temporales para los lotes de artículos y consultando repetidamente a los postores sobre sus preferencias entre los lotes bajo el conjunto actual de precios, y luego actualizando el conjunto de precios de los lotes según las respuestas recibidas (por ejemplo, [22, 12, 17, 37, 3]). Efectivamente, una subasta iterativa de este tipo accede a las preferencias de los postores haciendo repetidamente el siguiente tipo de consulta de demanda a los postores: Consulta al postor i: un vector de precios de paquetes p = {p(S)}S⊆M; Respuesta: un paquete de artículos S ⊆ M que maximiza vi(S) − p(S). Estos tipos de consultas son muy naturales en un entorno económico, ya que capturan las preferencias reveladas de los postores. Algunas subastas, llamadas subastas de precio por artículo o de precio lineal, especifican un precio pi para cada artículo, y el precio de cualquier conjunto dado S siempre es lineal, p(S) = Σ i∈S pi. Otras subastas, llamadas subastas de precio por paquete, permiten especificar precios arbitrarios (no lineales) p(S) para los paquetes. Otra diferenciación importante entre los modelos de subastas iterativas se basa en si utilizan precios anónimos o no anónimos: En algunas subastas, los precios que se presentan a los postores son siempre los mismos (precios anónimos). En otras subastas (no anónimas), diferentes postores pueden enfrentar diferentes vectores de precios (discriminatorios). En las subastas de precio ascendente, obligar a que los precios sean anónimos puede ser una restricción significativa. En este artículo, nos embarcamos en un análisis sistemático del poder computacional de las subastas iterativas basadas en consultas de demanda. No buscamos presentar subastas para uso práctico, sino más bien entender las limitaciones y posibilidades de este tipo de subastas. En la primera parte de este documento, nuestra pregunta principal es ¿qué se puede hacer utilizando un número polinómico de este tipo de consultas? Es decir, polinomial en los parámetros principales del problema: n, m y el número de bits t necesarios para representar un único valor vi(S). Ten en cuenta que desde un punto de vista algorítmico estamos hablando de algoritmos de tiempo sublineal: el tamaño de la entrada aquí es realmente n(2m − 1) números, las descripciones de las funciones de valoración de todos los postores. Hay dos aspectos de eficiencia computacional en estos contextos: el primero es la comunicación con los postores, es decir, la cantidad de consultas realizadas, y el segundo es la usual tratabilidad computacional. Nuestros límites inferiores dependerán solo del número de consultas y se mantendrán independientemente de cualquier suposición computacional como P = NP. Nuestros límites superiores siempre serán computacionalmente eficientes tanto en términos del número de consultas como en términos de computación regular. Como se mencionó, este artículo se centra en el único aspecto de la obtención de preferencias y en sus consecuencias computacionales, sin abordar cuestiones de incentivos. Esto refuerza nuestros límites inferiores, pero significa que los límites superiores también requieren evaluación desde esta perspectiva antes de ser utilizados en cualquier <br>subasta combinatoria</br> real. La segunda parte de este documento estudia el poder de las subastas de precio ascendente. Las subastas ascendentes son subastas iterativas donde los precios publicados no pueden disminuir con el tiempo. En este trabajo, intentamos analizar sistemáticamente qué significan las diferencias entre varios modelos de subastas ascendentes. Intentamos responder a las siguientes preguntas: (i) ¿Qué modelos de subastas ascendentes pueden encontrar la asignación óptima, y para qué clases de valoraciones? (ii) En casos donde la asignación óptima no puede ser determinada por subastas ascendentes, ¿qué tan bien pueden estas subastas aproximar el bienestar social? (iii) ¿Cómo se comparan los diferentes modelos de subastas ascendentes? ¿Son algunos modelos computacionalmente más fuertes que otros? Las subastas ascendentes han sido ampliamente estudiadas en la literatura (ver la encuesta reciente de Parkes [35]). La mayor parte de este trabajo presentó límites superiores, es decir, mecanismos propuestos con precios ascendentes y analizó sus propiedades. Un resultado que se acerca más al nuestro es el de Gul y Stacchetti [17], quienes demostraron que ninguna subasta de precio ascendente de artículo puede siempre determinar los precios VCG, incluso para valoraciones de sustitutos. Nuestro marco es más general que la línea tradicional de investigación que se concentra en la asignación final y observamos, sin embargo, que alguna propiedad de incentivo débil viene de forma gratuita en las subastas de consulta de demanda, ya que los jugadores miopes responderán todas las consultas de demanda de manera veraz. También observamos que en algunos casos (¡pero no siempre!) los problemas de incentivos pueden ser manejados de forma ortogonal a los problemas de obtención de preferencias, por ejemplo, utilizando precios de Vickrey-Clarke-Groves (VCG) (por ejemplo, [4, 34]). Además, discutimos este resultado en la Sección 5.3. Subastas iterativas Subastas de demanda Subastas de precio de artículo Subastas de precio anónimo Subastas ascendentes 1 2 3 4 5 6 97 8 10 Figura 1: El diagrama clasifica las siguientes subastas según sus propiedades: (1) La adaptación [12] para la subasta de Kelso & Crawford [22]. (2) La Subasta de Proxy [3] de Ausubel & Milgrom. (3) iBundle(3) de Parkes & Ungar [34]. (4) iBundle(2) de Parkes & Ungar [37]. (5) Nuestra adaptación descendente para la aproximación de 2 para valoraciones submodulares por [25] (ver Subsección 5.4). (6) La subasta de Ausubel [4] para valoraciones de sustitutos. (7) La adaptación de Nisan & Segal [32] de la aproximación O( √ m) por [26]. (8) La subasta de artículo duplicado por [5]. (9) Subasta para fórmulas de Leer-Una-Vez por [43]. (10) La Subasta AkBA por Wurman & Wellman [42]. pagos y en particular, en alcanzar equilibrios walrasianos o equilibrios competitivos. Se sabe que existe un equilibrio walrasiano en el caso de las valoraciones de sustitutos, y se sabe que es imposible para cualquier clase más amplia de valoraciones [16]. Esto no descarta otras asignaciones mediante subastas ascendentes: en este documento consideramos las subastas como un proceso computacional donde el resultado, tanto la asignación como los pagos, pueden determinarse según todos los datos recopilados a lo largo de la subasta; Este marco general refuerza nuestros resultados negativos. Encontramos el estudio de las subastas ascendentes atractivo por diversas razones. Primero, las subastas ascendentes son ampliamente utilizadas en muchos contextos de la vida real, desde las subastas de espectro de la FCC hasta casi cualquier sitio web de comercio electrónico (por ejemplo, [2, 1]). De hecho, esta es quizás la forma más directa de vender artículos: preguntar a los postores qué les gustaría comprar a ciertos precios, y aumentar los precios de los productos con alta demanda. Las subastas ascendentes también se consideran más intuitivas para muchos postores, y se cree que aumentan la confianza de los postores en el subastador, ya que ven el resultado que emerge gradualmente de las respuestas de los postores. Las subastas ascendentes también tienen otras propiedades económicas deseadas, por ejemplo, implican una revelación de información menor (considere, por ejemplo, las subastas inglesas frente a las subastas de segundo precio sellado). 1.1 Trabajo Existente Muchos mecanismos de <br>subasta combinatoria</br> iterativos dependen de consultas de demanda (ver la encuesta en [35]). La Figura 1 muestra un equilibrio walrasiano como un vector de precios de los artículos para los cuales todos los artículos se venden cuando cada postor recibe un conjunto en su conjunto de demanda. En algunos diseños de subasta recientes (por ejemplo, [4, 28]), los pagos no son necesariamente los precios finales de las subastas. Familia de valoración Límite superior Referencia Límite inferior Referencia General min(n, O( √ m)) [26], Sección 4.2 min(n, m1/2− ) [32] Sustitutos 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subaditiva O(logm) [13] 2 [13] k-duplicados O(m1/k+1 ) [14] O(m1/k+1 ) [14] Adquisiciones ln m [32] (log m)/2 [29, 32] Figura 2: Los mejores factores de aproximación actualmente alcanzables por subastas combinatorias computacionalmente eficientes, para varias clases de valoraciones. Todos los límites inferiores en la tabla se aplican a todas las subastas iterativas (excepto la marcada con *); todos los límites superiores en la tabla se logran con consultas de demanda de precio de artículo. Categoriza las clases básicas de subastas implicadas por combinaciones de las propiedades anteriores y clasifica algunas de las subastas propuestas en la literatura de acuerdo con esta clasificación. Para nuestros propósitos, dos familias de estas subastas sirven como los principales puntos de partida motivadores: la primera son las subastas de precio de artículo ascendente de [22, 17] que con eficiencia computacional encuentran una asignación óptima entre valoraciones de sustitutos (brutos), y la segunda son las subastas de precio de paquete ascendente de [37, 3] que encuentran una asignación óptima entre valoraciones generales, pero no necesariamente con eficiencia computacional. El límite inferior principal en esta área, debido a [32], establece que, de hecho, debido a los requisitos de comunicación inherentes, no es posible que ninguna subasta iterativa encuentre la asignación óptima entre valoraciones generales con un número subexponencial de consultas. Un límite inferior exponencial similar fue demostrado en [32] también para aproximar de manera óptima la asignación dentro de un factor de m1/2−. Se conocen varios límites inferiores y superiores para la aproximación de algunas clases naturales de valoraciones, los cuales se resumen en la Figura 2. En [32], también se muestra la universalidad de las consultas de demanda: cualquier protocolo de comunicación no determinista para encontrar una asignación que optimice el bienestar social puede convertirse en uno que solo utilice consultas de demanda (con precios de paquetes). En [41] esto también se generalizó a protocolos no deterministas para encontrar asignaciones que satisfacen otros tipos naturales de requisitos económicos (por ejemplo, eficiencia social aproximada, ausencia de envidia). Sin embargo, en [33] se demostró que esta completitud de las consultas de demanda solo se cumple en el entorno no determinista, mientras que en el entorno determinista habitual, las consultas de demanda (incluso con precios de paquetes) pueden ser exponencialmente más débiles que la comunicación general. Las subastas de precio por paquete son una generalización de las subastas de precio por artículo (más naturales e intuitivas). Se sabe que las subastas de precio de artículo pueden ser exponencialmente más débiles: un buen ejemplo es el caso de valoraciones que son un XOR de k paquetes, donde k es pequeño (digamos, polinómico). Lahaie y Parkes [24] muestran una subasta de precio de paquete económicamente eficiente que utiliza un número polinómico de consultas siempre que k sea polinómico. Por el contrario, [7] muestra que existen valoraciones que son XORs de k = √ m paquetes, de tal manera que cualquier subasta de precio de artículo que encuentre una asignación óptima entre ellos requiere un número exponencial de consultas. Estos resultados forman parte de una línea reciente de investigación ([7, 43, 24, 40]) que estudia el problema de la obtención de preferencias en subastas combinatorias y su relación con el problema de obtención completo (es decir, aprender las valoraciones exactas de los postores). Estas son valoraciones donde los postores tienen valores para k paquetes específicos, y el valor de cada conjunto es el valor máximo de uno de estos paquetes que contiene. Estos documentos adaptan métodos de la teoría del aprendizaje automático al entorno de subastas combinatorias. El problema de la obtención de preferencias y el problema de la obtención completa se relacionan con un problema bien estudiado en microeconomía conocido como el problema de integrabilidad (ver, por ejemplo, [27]). Este problema estudia si y cuándo se puede derivar la función de utilidad de un consumidor a partir de su función de demanda. Organización del documento: Debido al relativamente gran número de resultados que presentamos, comenzamos con una revisión de nuestros nuevos resultados en la Sección 2. Después de describir nuestro modelo formal en la Sección 3, presentamos nuestros resultados sobre el poder de las consultas de demanda en la Sección 4. Luego, describimos el poder de las subastas ascendentes de precio de artículo (Sección 5) y las subastas ascendentes de precio de paquete (Sección 6). Los lectores que estén principalmente interesados en la discusión autocontenida de las subastas ascendentes pueden omitir la Sección 4. Las pruebas faltantes de la Sección 4 se pueden encontrar en la parte I del artículo completo ([8]). Las pruebas faltantes de las Secciones 5 y 6 se pueden encontrar en la parte II del artículo completo ([9]). 2. Una encuesta de nuestros resultados Nuestro análisis sistemático está compuesto por la combinación de un número bastante grande de resultados que caracterizan el poder y las limitaciones de varias clases de subastas. En esta sección, presentaremos una exposición describiendo nuestros nuevos resultados. Primero discutimos el poder de las subastas iterativas de demanda-consulta, y luego dirigimos nuestra atención a las subastas ascendentes. La Figura 3 resume algunos de nuestros principales resultados. 2.1 Comparación de consultas de demanda de tipos de consultas Preguntamos primero qué otros tipos naturales de consultas podríamos imaginar que las subastas iterativas utilicen. Aquí hay una lista de tales consultas que son naturales, han sido utilizadas en la literatura, o que encontramos útiles. 1. Consulta de valor: El subastador presenta un paquete S, el postor informa su valor v(S) para este paquete. 2. Consulta de valor marginal: El subastador presenta un paquete A y un artículo j, el postor informa cuánto está dispuesto a pagar por j, dado que ya posee A, es decir, v(j|A) = v(A ∪ {j}) − v(A). 3. Consulta de demanda (con precios de los artículos): El subastador presenta un vector de precios de los artículos p1...pm; el postor informa su demanda bajo estos precios, es decir, algún conjunto S que maximiza v(S) − Σ i∈S pi. Se debe especificar una regla de desempate. ¿Todos nuestros resultados 31 Restricción de Comunicación pueden encontrar una asignación óptima? Límite superior para el bienestar aprox. Límite inferior para el bienestar aproximado. Consultas de demanda de precio de artículo Sí 1 1 Poli. Comunicación No [32] min(n, O(m1/2 )) [26] min(n, m1/2− ) [32] Poli. Consultas de demanda de precio de artículo No [32] min(n, O(m1/2 )) min(n, m1/2− ) [32] Poli. Este documento estudia la eficiencia económica de subastas que siguen ciertas restricciones de comunicación. Para cada clase de subastas, la tabla muestra si se puede lograr la asignación óptima, o en su defecto, qué tan bien se puede aproximar (tanto los límites superiores como los límites inferiores). Los nuevos resultados están resaltados. Abreviaturas: Poly. (número/tamaño polinomial), AA (subastas ascendentes). - significa que actualmente no se conoce nada excepto soluciones triviales. 4. Consulta de utilidad indirecta: El subastador presenta un conjunto de precios de los artículos p1...pm, y el postor responde con su utilidad indirecta bajo estos precios, es decir, la utilidad más alta que puede lograr de un conjunto bajo estos precios: maxS⊆M (v(S) − P i∈S pi). Consulta de demanda relativa: el subastador presenta un conjunto de precios no nulos p1...pm, y el postor informa el conjunto que maximiza su valor por unidad de dinero, es decir, algún conjunto que maximiza v(S)P i∈S pi. Teorema: Cada una de estas consultas puede ser simulada eficientemente (es decir, en tiempo polinómico en n, m y el número de bits de precisión t necesarios para representar un único valor vi(S)) por una secuencia de consultas de demanda con precios de artículos. En particular, esto muestra que las consultas de demanda pueden obtener toda la información sobre una valoración al simular todas las consultas de valor de 2m −1. También observamos que las consultas de valor y las consultas de valor marginal pueden simularse mutuamente en tiempo polinómico y que las consultas de demanda y las consultas de utilidad indirecta también pueden simularse mutuamente en tiempo polinómico. Demostramos que puede ser necesario realizar exponencialmente muchas consultas de valor para simular una sola consulta de demanda. Es interesante notar que para la clase restringida de valoraciones sustitutivas, las consultas de demanda pueden ser simuladas por un número polinomial de consultas de valor [6]. Aproximación del bienestar La siguiente pregunta que nos hacemos es ¿qué tan bien puede aproximar una subasta computacionalmente eficiente que solo utiliza consultas de demanda la asignación óptima? Se conocen dos obstáculos separados: En [32], se demostró una cota inferior de min(n, m1/2− ), para cualquier fijo > 0, para el factor de aproximación aplicable para cualquier regla de desempate fija. Esto es exactamente la utilidad lograda por el paquete que se devolvería en una consulta de demanda con los mismos precios. Esta noción se relaciona con la función de utilidad indirecta estudiada en la literatura microeconómica (ver, por ejemplo, [27]). Nota que cuando todos los precios son 1, el postor en realidad informa el paquete con el precio por artículo más alto. Encontramos este tipo de consulta útil, por ejemplo, en el diseño del algoritmo de aproximación descrito en la Figura 5 de la Sección 4.2, obtenido utilizando cualquier cantidad polinómica de comunicación. Un límite computacional con el mismo valor se aplica incluso para el caso de postores de mente única, pero bajo la suposición de NP = ZPP [39]. Como se señala en [32], el algoritmo voraz computacionalmente eficiente de [26] puede adaptarse para convertirse en una subasta iterativa de tiempo polinómico que logra un factor de aproximación casi coincidente de min(n, O( √ m)). Esta subasta iterativa puede implementarse con consultas de demanda de precios por paquete, pero, hasta donde vemos, no como una con precios por artículo. Dado que en una consulta de demanda de precio de paquete único se pueden presentar un número exponencial de precios, este algoritmo puede tener un costo de comunicación exponencial. En la Sección 4.2, describimos una subasta de precio de artículo diferente que logra el mismo factor de aproximación con un número polinomial de consultas (y por lo tanto con una comunicación polinomial). Teorema: Existe una subasta iterativa computacionalmente eficiente con consultas de demanda de precios de artículos que encuentra una asignación que aproxima el bienestar óptimo entre valoraciones arbitrarias dentro de un factor de min(n, O( √ m)). Uno puede intentar obtener un factor de aproximación utilizando subastas iterativas que solo utilicen las consultas de valor más débiles. Sin embargo, demostramos que esto es imposible: Teorema: Cualquier subasta iterativa que utilice un número polinómico (en n y m) de consultas de valor no puede lograr un factor de aproximación mejor que O( m log m ). Sin embargo, cabe destacar que las subastas con solo consultas de valor no son completamente triviales en poder: las subastas de agrupación de Holzman et al. [19] pueden implementarse fácilmente mediante un número polinómico de consultas de valor y pueden lograr un factor de aproximación de O( m√ log m ) utilizando O(log m) paquetes de tamaño equitativo. No sabemos cómo cerrar la brecha (pequeña) entre este límite superior y nuestro límite inferior. Representando precios de paquetes. Luego abordamos un problema crítico con las subastas de precios de paquetes que fue evitado por nuestro modelo, así como por todos los trabajos anteriores que utilizaron subastas de precios de paquetes: ¿cómo se representan los precios de los paquetes? Para subastas de precio de artículo, esto no es un problema ya que una consulta solo necesita especificar un pequeño número, m, de precios. En las subastas de precios por paquetes, esa situación es más difícil ya que hay exponencialmente muchos paquetes que requieren fijar precios. Nuestro modelo básico (como todos los trabajos anteriores que utilizaron precios de paquete, por ejemplo, [37, 34, 3]), ignora este problema y solo requiere que los precios sean determinados, de alguna manera, por el protocolo. Un modelo más refinado fijaría un idioma específico para denotar los precios de los paquetes, obligaría al protocolo a representar los precios de los paquetes en este idioma y requeriría que las representaciones de los precios de los paquetes también fueran polinomiales. ¿Cómo podría ser un lenguaje para denotar precios de todos los paquetes? Primero, hay que tener en cuenta que especificar un precio para cada paquete es equivalente a especificar una valoración. Segundo, como se señala en [31], la mayoría de los lenguajes de oferta propuestos son en realidad solo lenguajes para representar valoraciones, es decir, una representación sintáctica de valoraciones, por lo tanto podríamos usar cualquiera de ellos. Este punto de vista abre el tema general de qué idioma se debe utilizar en las subastas de precios en paquete y cuáles son las implicaciones de esta elección. Aquí iniciamos esta línea de investigación. Consideramos subastas de precios de paquetes donde los precios deben ser dados como una oferta XOR, es decir, el protocolo debe indicar explícitamente el precio de cada paquete cuyo valor sea diferente al de todos sus subconjuntos adecuados. Es importante tener en cuenta que todas las subastas de precios por paquetes que no especifiquen explícitamente un idioma de oferta deben usar implícitamente este idioma o uno menos restrictivo, ya que sin un idioma específico se necesitaría listar los precios de todos los paquetes, quizás excepto los triviales (aquellos con valor 0, o más generalmente, aquellos cuyo valor está determinado por uno de sus subconjuntos propios). Mostramos que una vez que se tiene en cuenta la longitud de la representación de los precios de los paquetes (utilizando el lenguaje XOR), las subastas de precios de paquetes ya no son estrictamente más fuertes que las subastas de precios de artículos. Define el costo de una subasta iterativa como la longitud total de las consultas y respuestas utilizadas a lo largo de la subasta (en el peor de los casos). Teorema: Para alguna clase de valoraciones, las subastas de precios de paquetes que utilizan el lenguaje XOR requieren un costo exponencial para encontrar la asignación óptima. Por el contrario, las subastas de precio por artículo pueden encontrar la asignación óptima para esta clase dentro de un costo polinómico. Esto pone en duda la aplicabilidad de las subastas de precio por paquete como [3, 37], y puede justificar el uso de métodos de fijación de precios híbridos como la subasta de reloj-proxy de Ausubel, Cramton y Milgrom ([10]). Las consultas de demanda y los programas lineales. El problema de determinación del ganador en subastas combinatorias puede formularse como un programa entero. En muchos casos, resolver la relajación del programa lineal de este programa entero es útil: para algunas clases restringidas de valoraciones, encuentra el óptimo del programa entero (por ejemplo, valoraciones de sustitución [22, 17]) o ayuda a aproximar el óptimo (por ejemplo, mediante redondeo aleatorio [13, 14]). Sin embargo, el programa lineal tiene un número exponencial de variables. Nisan y Segal [32] observaron el sorprendente hecho de que, a pesar de ello, nuestra prueba se basa en los sofisticados límites inferiores conocidos para circuitos de profundidad constante. No pudimos encontrar una prueba elemental. Dado el número exponencial de variables, este programa lineal puede resolverse con comunicación polinómica. La idea básica es resolver el programa dual utilizando el método del Elipsoide (ver, por ejemplo, [20]). El programa dual tiene un número polinomial de variables, pero un número exponencial de restricciones. El algoritmo de Elipsoide se ejecuta en tiempo polinómico incluso en tales programas, siempre que se proporcione un oráculo de separación para el conjunto de restricciones. Sorprendentemente, dicho oráculo de separación puede implementarse utilizando una sola consulta de demanda (con precios de los artículos) a cada uno de los postores. El tratamiento de [32] fue algo improvisado para el problema en cuestión (el caso de las valoraciones de sustitución). Aquí presentamos una forma algo más general de esta importante observación. Llamemos a la siguiente clase de programas lineales relajación de determinación de ganadores generalizada (GWDR) LPs: Maximizar X i∈N,S⊆M wi xi,S vi(S) sujeto a. El caso donde wi = 1, di = 1, qj = 1 (para cada i, j) es la relajación lineal habitual del problema de determinación del ganador. Más generalmente, wi puede ser visto como el peso dado al bienestar del postor, qj puede ser visto como la cantidad de unidades del bien j, y di puede ser visto como la duplicidad del número de postores del tipo i. Teorema: Cualquier programa lineal de GWDR puede ser resuelto en tiempo polinómico (en n, m y el número de bits de precisión t) usando solo consultas de demanda con precios de los artículos. Subastas ascendentes de precios de artículos: Es bien sabido que las subastas ascendentes de precios de artículos de Kelso y Crawford [22] y sus variantes [12, 16] encuentran la asignación óptima siempre y cuando las valoraciones de todos los jugadores tengan la propiedad de sustitutos. La pregunta obvia es si se puede encontrar la asignación óptima para una clase más amplia de valoraciones. Nuestro resultado principal aquí es un resultado negativo fuerte: Teorema: Existe un problema de 2 elementos y 2 jugadores donde ninguna subasta de precio ascendente puede encontrar la asignación óptima. Esto contrasta tanto con el poder de las subastas ascendentes de precios de paquetes como con el poder de las consultas generales de demanda de precios de artículos (ver arriba), ambos de los cuales siempre pueden encontrar la asignación óptima e incluso proporcionar una completa obtención de preferencias. La misma prueba demuestra un resultado de imposibilidad similar para otros tipos de subastas (por ejemplo, subastas descendentes, subastas no anónimas). Más extensión de este resultado: • Obtener algunas clases de valoraciones requiere un número exponencial de trayectorias ascendentes de precios de artículos. La solución óptima producida tendrá un soporte polinómico y, por lo tanto, puede ser listada completamente. • Se necesitan al menos k − 1 trayectorias ascendentes de precios de artículos para obtener fórmulas XOR con k términos. Este resultado es en cierto sentido ajustado, ya que demostramos que cualquier fórmula XOR de k términos puede ser completamente revelada por k−1 subastas ascendentes no determinísticas (es decir, cuando algún profesor externo instruye al subastador sobre cómo aumentar los precios). También demostramos que las subastas ascendentes de precio de artículo y las subastas iterativas limitadas a un número polinómico de consultas (de cualquier tipo, no necesariamente ascendentes) son incomparables en su poder: las subastas ascendentes, con incrementos lo suficientemente pequeños, pueden revelar las preferencias en casos donde cualquier número polinómico de consultas no puede. Motivados por varios artículos recientes que estudiaron la relación entre la obtención y la obtención completa de las preferencias en subastas combinatorias (por ejemplo, [7, 24]), exploramos la diferencia entre estos problemas en el contexto de subastas ascendentes. Mostramos que aunque una subasta ascendente única puede determinar la asignación óptima entre cualquier número de postores con valoraciones sustitutivas, no puede obtener completamente dicha valoración ni siquiera para un único postor. Aunque se demostró en [25] que el conjunto de valoraciones de sustitutos tiene medida cero en el espacio de valoraciones generales, no se conoce su dimensión, y en particular aún está abierto si una cantidad polinómica de información es suficiente para describir una valoración de sustitutos. Si bien nuestro resultado puede ser un pequeño paso en esa dirección (una elicitación completa de polinomios aún puede ser posible con otros protocolos de comunicación), señalamos que nuestro resultado de imposibilidad también se aplica a valoraciones en la clase OXS definida por [25], valoraciones que podemos demostrar tienen una representación compacta. También presentamos varios resultados que separan el poder de diferentes modelos para subastas combinatorias ascendentes que utilizan precios de artículos: demostramos, como era de esperar, que las subastas ascendentes adaptativas son más poderosas que las subastas ascendentes obvias y que las subastas ascendentes no deterministas son más poderosas que las subastas ascendentes deterministas. También comparamos diferentes tipos de subastas no anónimas (por ejemplo, simultáneas o secuenciales), y observamos que las subastas anónimas de precio por lote y las subastas no anónimas de precio por artículo son incomparables en su poder. Finalmente, motivados por las subastas holandesas, consideramos las subastas descendentes y cómo se comparan con las ascendentes; mostramos clases de valoraciones que pueden ser obtenidas mediante subastas ascendentes de precio de artículo pero no mediante subastas descendentes de precio de artículo, y viceversa. Subastas ascendentes de precio por paquetes: Todas las subastas ascendentes de precio por paquetes conocidas que son capaces de encontrar la asignación óptima entre valoraciones generales (con disposición libre) utilizan precios no anónimos. Las subastas anónimas de precio ascendente (por ejemplo, [42, 21, 37]) solo se sabe que pueden encontrar la asignación óptima entre valoraciones superaditivas o algunas otras clases simples ([36]). Demostramos que esto no es un error: Teorema: Ninguna subasta ascendente con precios anónimos puede encontrar la asignación óptima entre valoraciones generales. La computación no determinista se utiliza ampliamente en informática y también en economía (por ejemplo, un equilibrio walrasiano o [38]). En algunos contextos, los modelos deterministas y no deterministas tienen igual poder (por ejemplo, en la computación con autómatas finitos). Este límite es independiente del tiempo de ejecución, y también se aplica a subastas descendentes y subastas no determinísticas. Fortalecemos significativamente este resultado al demostrar que las subastas ascendentes anónimas no pueden producir una aproximación mejor que O( √ m) - la proporción de aproximación que se puede lograr con un número polinomial de consultas ([26, 32]) y, como se mencionó, con un número polinomial de consultas de demanda de precio de artículo. El mismo límite inferior claramente se aplica a las subastas anónimas de artículos y precios ascendentes, ya que dichas subastas pueden ser simuladas por subastas anónimas de paquetes y precios ascendentes. Actualmente no tenemos ningún límite inferior en la aproximación alcanzable por subastas ascendentes de artículos y precios no anónimas. Finalmente, estudiamos el rendimiento de las subastas ascendentes existentes computacionalmente eficientes. Estos protocolos ([37, 3]) requieren tiempo exponencial en el peor de los casos, y esto es inevitable como se muestra en [32]. Sin embargo, también observamos que estas subastas, al igual que toda la clase de subastas de precios de paquetes ascendentes similares, requieren un tiempo exponencial incluso para valoraciones aditivas simples. Esto es evitable y de hecho, las subastas ascendentes de precio de artículo de [22] pueden encontrar la asignación óptima para estas valoraciones simples con comunicación polinómica. 3. El MODELO 3.1 Subastas Discretas para Valores Continuos Nuestro modelo tiene como objetivo capturar subastas iterativas que operan en valuaciones de valores reales. Existe una ligera dificultad técnica aquí al tratar de superar la brecha entre la naturaleza discreta de una subasta iterativa y la naturaleza continua de las valoraciones. Este es exactamente el mismo problema que al modelar una subasta inglesa simple. Hay tres formas estándar formales de modelarlo: 1. Modelar la subasta como un proceso continuo y estudiar su trayectoria en el tiempo. Por ejemplo, la subasta japonesa, también conocida como subasta holandesa, es básicamente un modelo continuo de un modelo inglés. Modelar la subasta como discreta y las valoraciones como continuas. En este caso introducimos un parámetro y generalmente requerimos que la subasta produzca resultados que estén cerca de lo óptimo. 3. Modelar las valoraciones como discretas. En este caso asumiremos que todas las valoraciones son múltiplos enteros de alguna cantidad fija pequeña δ, por ejemplo, 1 centavo. Toda comunicación en este caso es naturalmente finita. En este documento utilizamos la última formulación y asumimos que todos los valores son múltiplos de algún δ. Por lo tanto, en algunas partes del documento asumimos sin pérdida de generalidad que δ = 1, por lo tanto todas las valoraciones son enteras. Casi todos (si no todos) nuestros resultados se pueden traducir a los otros dos modelos con poco esfuerzo. 3.2 Valoraciones Un único subastador está vendiendo m artículos indivisibles no homogéneos en una sola subasta, y sea M el conjunto de estos 13 Otro modelo similar es el modelo de cuchillos móviles en la literatura de corte de pasteles. 34 artículos y sea N el conjunto de postores. Cada uno de los n postores en la subasta tiene una función de valoración vi : 2m → {0, δ, 2δ, ..., L}, donde para cada conjunto de artículos S ⊆ M, vi(S) denota el valor del postor i por el conjunto S y es un múltiplo de δ en el rango 0...L. A veces denotaremos el número de bits necesarios para representar tales valores en el rango 0...L por t = log L. Suponemos disposición libre, es decir, S ⊆ T implica vi(S) ≤ vi(T) y que vi(∅) = 0 para todos los postores. Mencionaremos las siguientes clases de valoraciones: • Una valoración se llama submodular si para todos los conjuntos de elementos A y B tenemos que v(A ∪ B) + v(A ∩ B) ≤ v(A) + v(B). • Una valoración se llama superaditiva si para todos los conjuntos disjuntos de elementos A y B tenemos que v(A∪B) ≥ v(A)+ v(B). • Una valoración se llama un XOR de k-bundles si puede representarse como una combinación XOR de a lo sumo k ofertas atómicas [30], es decir, si hay a lo sumo k bundles Si y precios pi tales que para todo S, v(S) = maxi|S⊇Si pi. Tales valoraciones serán denotadas por v = (S1 : p1) ⊕ (S2 : p2) ⊕ . . . ⊕ (Sk : pk).14 3.3 Subastas Iterativas El subastador establece un protocolo (equivalentemente un algoritmo), donde en cada etapa del protocolo se envía cierta información q - denominada la consulta - a algún postor i, y luego el postor i responde con una respuesta que depende de la consulta así como de su propia valoración. En este documento, asumimos que tenemos control total sobre el comportamiento de los postores, por lo que el protocolo también define una función de respuesta ri(q, vi) que especifica la respuesta del postor a la consulta q. El protocolo puede ser adaptativo: el valor de la consulta, así como el postor consultado, pueden depender de las respuestas recibidas para consultas anteriores. Al final del protocolo, se debe declarar una asignación S1...Sn, donde Si ∩ Sj = ∅ para i = j. Decimos que la subasta encuentra una asignación óptima si encuentra la asignación que maximiza el bienestar social Σ vi(Si). Decimos que se encuentra una c-aproximación si P i vi(Si) ≥ P i vi(Ti)/c donde T1...Tn es una asignación óptima. El tiempo de ejecución de la subasta en una instancia dada de las valoraciones de los postores es el número total de consultas realizadas en esta instancia. El tiempo de ejecución de un protocolo es el costo en el peor caso sobre todas las instancias. Cabe destacar que no imponemos limitaciones computacionales en el protocolo ni en los jugadores. Esto, por supuesto, solo refuerza nuestros resultados de dificultad. Sin embargo, nuestros resultados positivos no utilizarán este poder y serán eficientes también en el sentido computacional habitual. Nuestro objetivo será diseñar protocolos computacionalmente eficientes. Consideraremos un protocolo eficiente computacionalmente si su costo es polinómico en los parámetros relevantes: el número de postores n, el número de artículos m y t = log L, donde L es el valor máximo posible de un paquete. Sin embargo, cuando discutimos subastas de precio ascendente y sus variantes, se requerirá un protocolo computacionalmente eficiente. Por ejemplo, v = (abcd : 5) ⊕ (ab : 3) ⊕ (c : 4) denota la valoración XOR con los términos abcd, ab, c y precios 5, 3, 4 respectivamente. Para esta valoración, v(abcd) = 5, v(abd) = 3, v(abc) = 4. El tiempo de ejecución realmente mide los costos de comunicación y no el tiempo de ejecución computacional. Pseudo-polinómico, es decir, debería requerir un número de consultas que sea polinómico en m, n y L δ. Esto se debe a que las subastas ascendentes generalmente no pueden lograr esos tiempos de ejecución (considera incluso la subasta inglesa de un solo artículo). Cabe destacar que todos nuestros resultados proporcionan límites concretos, donde la dependencia de los parámetros se expresa explícitamente; utilizamos la notación estándar de big-Oh solo como una abreviatura. Decimos que una subasta obtiene algunas clases V de valoraciones, si determina la asignación óptima para cualquier perfil de valoraciones extraídas de V; Decimos que una subasta obtiene completamente alguna clase de valoraciones V, si puede aprender completamente cualquier valoración única v ∈ V (es decir, aprender v(S) para cada S). 3.4 Consultas de demanda y subastas ascendentes La mayor parte del documento se ocupará de un caso especial común de subastas iterativas que denominamos subastas de demanda. En tales subastas, las consultas que se envían a los postores son consultas de demanda: la consulta especifica un precio p(S) ∈ + para cada conjunto S. La respuesta del postor i es simplemente el conjunto más deseado - demandado - bajo estos precios. Formalmente, un conjunto S que maximiza vi(S) − p(S). Puede suceder que más de un conjunto S maximice este valor. En caso de empate, se resuelven de acuerdo con una regla fija de desempate, por ejemplo, se devuelve el conjunto que sea el primero en orden lexicográfico. Todos nuestros resultados son válidos para cualquier regla de desempate fija. Las subastas ascendentes son subastas iterativas con precios no decrecientes: Definición 1. En una subasta ascendente, los precios en las ofertas al mismo postor solo pueden aumentar con el tiempo. Formalmente, sea p una consulta realizada por el postor i, y q una consulta realizada por el postor i en una etapa posterior del protocolo. Entonces, para todos los conjuntos S, q(S) ≥ p(S). Una variante similar, que también estudiamos y que también es común en la vida real, son las subastas descendentes, en las que los precios solo pueden disminuir con el tiempo. Cabe destacar que el término subasta ascendente se refiere a una subasta con una única trayectoria ascendente de precios. Puede ser útil definir subastas ascendentes de múltiples trayectorias, en las que los precios pueden reiniciarse a cero varias veces (ver, por ejemplo, [4]). Consideramos dos restricciones principales en los tipos de consultas de demanda permitidas: Definición 2. Precios de los artículos: Los precios en cada consulta son dados por los precios pj para cada artículo j. El precio de un conjunto S es aditivo: p(S) = Σ j∈S pj. Definición 3. Precios anónimos: Los precios vistos por los postores en cualquier etapa de la subasta son los mismos, es decir, cada vez que se realiza una consulta a un postor, la misma consulta también se realiza a todos los demás postores (con los precios sin cambios). En subastas con precios no anónimos (discriminatorios), cada postor i tiene precios personalizados denotados por pi (S). En este documento, todas las subastas son anónimas a menos que se especifique lo contrario. Ten en cuenta que aunque en nuestro modelo las valoraciones son integrales (o múltiplos de algún δ), permitimos la consulta de demanda a 16 La mayoría de las subastas que presentamos pueden adaptarse para ejecutarse en tiempo polinómico en log L, utilizando un procedimiento similar a una búsqueda binaria, perdiendo su naturaleza ascendente. 17 Ten en cuenta que una subasta no anónima claramente puede ser simulada por n subastas anónimas en paralelo. 35 utiliza números reales arbitrarios en +. Es decir, asumimos que el incremento que utilizamos en las subastas ascendentes puede ser significativamente menor que δ. Todos nuestros resultados de dureza se mantienen para cualquier , incluso para incrementos de precios continuos. Un problema práctico aquí es cómo se especificará la consulta: en el caso general, se necesita enviar un número exponencial de precios en una sola consulta. Formalmente, esto no es un problema ya que el modelo no limita la longitud de las consultas de ninguna manera; el protocolo simplemente debe definir cuáles son los precios en función de las respuestas recibidas a consultas anteriores. Investigaremos este problema más a fondo en la Sección 4.3. 4. En esta sección, estudiamos el poder de las subastas iterativas que utilizan consultas de demanda (no necesariamente ascendentes). Empezamos comparando las consultas de demanda con otros tipos de consultas. Luego, discutimos qué tan bien se puede aproximar el bienestar óptimo utilizando un número polinomial de consultas de demanda. También iniciamos el estudio de la representación de consultas de demanda de precios de paquetes, y finalmente, mostramos cómo las consultas de demanda ayudan a resolver la relajación de programación lineal de subastas combinatorias en tiempo polinómico. 4.1 El poder de los diferentes tipos de consultas En esta sección comparamos el poder de los diversos tipos de consultas definidos en la Sección 2. Presentaremos simulaciones computacionalmente eficientes de estos tipos de consultas utilizando consultas de demanda de precio de artículo. En la Sección 5.1 mostramos que estas simulaciones también se pueden realizar utilizando subastas ascendentes de precio de artículo. Lema 4.1. Una consulta de valor puede ser simulada por m consultas de valor marginal. Una consulta de valor marginal puede ser simulada por dos consultas de valor. Lema 4.2. Una consulta de valor puede ser simulada por consultas de demanda (donde t = log L es el número de bits necesarios para representar un valor de paquete único). Como corolario directo, obtenemos que las subastas de demanda siempre pueden obtener completamente las valoraciones de los postores al simular todas las posibles 2m − 1 consultas y, por lo tanto, obtener suficiente información para determinar la asignación óptima. Sin embargo, cabe destacar que esta inducción puede ser computacionalmente ineficiente. El siguiente lema muestra que las consultas de demanda pueden ser exponencialmente más poderosas que las consultas de valor. Lema 4.3. Puede ser necesario un número exponencial de consultas de valor para simular una sola consulta de demanda. Las consultas de utilidad indirecta son, sin embargo, equivalentes en poder a las consultas de demanda: Lema 4.4. Una consulta de utilidad indirecta puede ser simulada por mt + 1 consultas de demanda. Una consulta de demanda puede ser simulada por m + 1 consultas de utilidad indirecta. Las consultas de demanda también pueden simular consultas de demanda relativa: 19 18 Tenga en cuenta que las consultas de demanda de precios de paquetes pueden simular fácilmente una consulta de valor configurando los precios de todos los paquetes excepto S (el paquete con el valor desconocido) en L, y realizando una búsqueda binaria en el precio de S. 19 Nota: aunque en nuestro modelo los valores son enteros (múltiplos de δ), permitimos que los precios de las consultas sean números reales arbitrarios. Abreviaturas: V (consulta de valor), MV (consulta de valor marginal), D (consulta de demanda), IU (consulta de utilidad indirecta), RD (consulta de demanda relativa). Lema 4.5. Las consultas de demanda relativa pueden ser simuladas por un número polinomial de consultas de demanda. Según nuestra definición de consultas de demanda relativa, claramente no pueden simular consultas de valor par. La Figura 4 resume las relaciones entre estos tipos de consultas. 4.2 Aproximando el Bienestar Social con Consultas de Valor y Demanda Sabemos por [32] que las subastas combinatorias iterativas que solo utilizan un número polinómico de consultas no pueden encontrar una asignación óptima entre valoraciones generales y de hecho ni siquiera pueden aproximarla a un factor mejor que min{n, m1/2− }. En esta sección preguntamos qué tan bien se puede hacer esta aproximación utilizando consultas de demanda con precios de los artículos, o utilizando las consultas de valor más débiles. Mostramos que, utilizando consultas de demanda, se puede igualar el límite inferior, mientras que las consultas de valor solo pueden hacer mucho peor. La Figura 5 describe un algoritmo de tiempo polinómico que logra una proporción de aproximación de min(n, O( √ m)). Este algoritmo elige de forma codiciosa los paquetes que maximizan el valor por ítem de los postores (utilizando consultas de demanda relativa, ver Sección 4.1). Como paso final, asigna todos los artículos a un único postor si mejora el bienestar social (esto se puede verificar utilizando consultas de valor). Dado que tanto las consultas de valor como las consultas de demanda relativa pueden ser simuladas por un número polinomial de consultas de demanda con precios de los artículos (Lemas 4.2 y 4.5), este algoritmo puede ser implementado por un número polinomial de consultas de demanda con precios de los artículos. Teorema 4.6. La subasta descrita en la Figura 5 puede ser implementada mediante un número polinomial de consultas de demanda y logra una aproximación de min{n, 4 √ m} para el bienestar social. Ahora nos preguntamos qué tan bien se puede aproximar el bienestar óptimo mediante un número polinómico de consultas de valor. Primero notamos que las consultas de valor no son completamente inútiles: En [19] se muestra que si los m elementos se dividen en k paquetes fijos de tamaño m/k cada uno, y estos paquetes fijos se subastan como si cada uno fuera indivisible, entonces el bienestar social bers, por lo tanto, podemos tener paquetes con demandas relativas arbitrariamente cercanas. En este sentido, la simulación anterior es solo hasta un cierto límite (y el número de consultas es O(log L + log 1)). Cuando los precios de la consulta de demanda relativa se dan como números racionales, se implica una simulación exacta cuando el logaritmo es lineal en la longitud de la entrada. En el artículo completo [8], observamos que este algoritmo puede implementarse mediante dos subastas descendentes de precio de artículo (donde permitimos quitar artículos a lo largo de la subasta). El valor generado por tal subasta es al menos una aproximación de m√ k de lo posible en la subasta original. Ten en cuenta que tal subasta puede ser implementada mediante 2k − 1 consultas de valor a cada postor, consultando el valor de cada paquete de los paquetes fijos. Por lo tanto, si elegimos k = log m paquetes, obtenemos una aproximación de m√ log m mientras seguimos utilizando un número polinomial de consultas. El siguiente lema muestra que no es posible hacer mucho más utilizando consultas de valor: Lema 4.7. Cualquier subasta iterativa que utilice solo consultas de valor y distinga entre k-tuplas de valuaciones de 0/1 donde la asignación óptima tiene valor 1, y aquellas donde la asignación óptima tiene valor k, requiere al menos 2 m k consultas. Prueba. Considera la siguiente familia de valoraciones: para cada S, tal que |S| > m/2, v(S) = 1, y existe un único conjunto T, tal que para |S| ≤ m/2, v(S) = 1 si y solo si T ⊆ S y v(S) = 0 en caso contrario. Ahora observa el comportamiento del protocolo cuando todas las valoraciones vi tienen T = {1...m}. Claramente, en este caso el valor de la mejor asignación es 1, ya que ningún conjunto de tamaño m 2 o menor tiene un valor distinto de cero para ningún jugador. Corrija la secuencia de consultas y respuestas recibidas en este k-tupla de valuaciones. Ahora considera el k-tuplo de valoraciones elegido al azar de la siguiente manera: una partición de los m elementos en k conjuntos T1...Tk cada uno de tamaño m/k es elegido de forma uniforme al azar entre todas las particiones posibles. Ahora considera el k-tuplo de valoraciones de nuestra familia que corresponden a esta partición: claramente Ti puede asignarse a i, para cada i, obteniendo un valor total de k. Ahora observa el protocolo al ejecutarse con estas valoraciones y compara su comportamiento con el caso original. Ten en cuenta que la respuesta a una consulta S al jugador i difiere entre el caso de Ti y el caso original de T = {1...m} solo si |S| ≤ m 2 y Ti ⊆ S. Dado que Ti se distribuye uniformemente entre todos los conjuntos de tamaño exactamente m k , tenemos que para cualquier consulta fija S al jugador i, donde |S| ≤ m 2 , Pr[Ti ⊆ S] ≤ „ |S| m «|Ti| ≤ 2− m k Utilizando el límite de unión, si la secuencia original de consultas tenía una longitud menor que 2 m k , entonces con probabilidad positiva ninguna de las consultas en la secuencia recibiría una respuesta diferente a la tupla de entrada original. Esto está prohibido ya que el protocolo debe distinguir entre este caso y el caso original, lo cual no puede ocurrir si todas las consultas reciben la misma respuesta. Por lo tanto, debe haber habido al menos 2 consultas de m k para la tupla original de valoraciones. Concluimos que un protocolo de tiempo polinómico que utiliza solo consultas de valor no puede obtener una aproximación mejor que O( m log m ) del bienestar: Teorema 4.8. Una subasta iterativa que utiliza un número polinómico de consultas de valor no puede lograr una aproximación mejor que O( m log m ) para el bienestar social. Prueba. Inmediatamente del Lema 4.7: lograr cualquier ratio de aproximación k que sea asintóticamente mayor que m log m requiere un número exponencial de consultas de valor. Un algoritmo de aproximación: Inicialización: Sea T ← M los artículos actuales en venta. Que K ← N sean los postores actualmente participantes. Que S∗ 1 ← ∅, ..., S∗ n ← ∅ sea la asignación provisional. Repetir hasta que T = ∅ o K = ∅: Preguntar a cada postor i en K por el conjunto Si que maximice su valor por artículo, es decir, Si ∈ argmaxS⊆T vi(S) |S|. Sea i el postor con el valor máximo por artículo, es decir, i ∈ argmaxi∈K vi(Si) |Si| . Conjunto: s∗ i = si, K = K \\ i, M = M \\ Si Finalmente: Pregunte a los postores por sus valores vi(M) para el paquete completo. Si asignar todos los artículos a algún postor i mejora el bienestar social alcanzado hasta ahora (es decir, ∃i ∈ N tal que vi(M) > Σ i∈N vi(S∗ i )), entonces asigna todos los artículos a este postor i. Figura 5: Este algoritmo logra una aproximación de min{n, 4 √ m} para el bienestar social, que es asintóticamente la mejor aproximación en el peor de los casos posible con comunicación polinómica. Este algoritmo puede implementarse con un número polinomial de consultas de demanda. 4.3 La Representación de los Precios de los Paquetes En esta sección fijamos explícitamente el idioma en el que se presentan los precios de los paquetes a los postores en subastas de precios de paquetes. Este lenguaje requiere que el algoritmo liste explícitamente el precio de cada paquete con un precio no trivial. Trivial en este contexto es un precio que es igual al de uno de sus subconjuntos adecuados (que fue enumerado explícitamente). Esta representación es equivalente al lenguaje XOR para expresar valuaciones. Formalmente, cada consulta q se da por una expresión: q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl). En esta representación, el precio demandado para cada conjunto S es simplemente p(S) = max{k=1...l|Sk⊆S}pk. Definición 4. La longitud de la consulta q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl) es l. El costo de un algoritmo es la suma de las longitudes de las consultas realizadas durante la operación del algoritmo en el peor caso de entrada. Ten en cuenta que bajo esta definición, las subastas de precio por paquete no son necesariamente más fuertes que las subastas de precio por artículo. ¿Una consulta de precio de artículo que fija el precio de cada artículo en 1 se traduce en una consulta de precio de paquete exponencialmente larga que necesita especificar el precio |S| para cada paquete S. ¿Pero quizás las subastas de precio de paquete aún pueden encontrar asignaciones óptimas siempre que las subastas de precio de artículo puedan, sin simular directamente tales consultas? Mostramos que este no es el caso: de hecho, cuando se tiene en cuenta la longitud de la representación, las subastas de precios de paquetes a veces son seriamente inferiores a las subastas de precios de artículos. Considera la siguiente familia de valoraciones: Cada artículo tiene un valor de 3, excepto que para algún conjunto único S, su valor es un poco mayor: 3|S| + b, donde b ∈ {0, 1, 2}. Ten en cuenta que una subasta de precio de artículo puede encontrar fácilmente la asignación óptima entre dos valoraciones de este tipo: establece los precios de cada artículo en 3+; si los conjuntos de demanda de los dos jugadores están vacíos, entonces b = 0 para ambas valoraciones, y cualquier asignación arbitraria está bien. Si uno de ellos está vacío y el otro no, asigna el conjunto de demanda no vacío a su postor y el resto al otro. Si ambos conjuntos de demanda no están vacíos, entonces, a menos que formen una partición exacta, necesitamos ver cuál es mayor, lo cual podemos hacer aumentando el precio de un solo artículo en cada conjunto de demanda. Mostraremos que cualquier subasta de precio de paquete que utilice solo el lenguaje XOR para describir los precios de los paquetes requiere un costo exponencial (que incluye la suma de todas las longitudes de descripción de los precios) para encontrar una asignación óptima entre dos valoraciones de este tipo. Lema 4.9. Cada subasta de precio de paquete que utiliza expresiones XOR para denotar precios de paquete requiere un costo de 2Ω( √ m) para encontrar la asignación óptima entre dos valoraciones de la familia anterior. La complicación en la prueba se debe al hecho de que al usar expresiones XOR, la longitud de la descripción del precio depende del número de paquetes cuyo precio es estrictamente mayor que cada uno de sus subconjuntos, lo cual puede ser significativamente menor que el número de paquetes que tienen un precio distinto de cero. (La prueba se vuelve fácil si requerimos que el protocolo nombre explícitamente cada paquete con precio distinto de cero). No conocemos ninguna demostración elemental para este lema (aunque creemos que se puede encontrar una). En cambio, reducimos el problema a un límite inferior bien conocido en la complejidad de circuitos booleanos [18] que establece que los circuitos booleanos de profundidad 3 que calculan la función de mayoría en m variables requieren un tamaño de 2Ω( √ m). Consultas de demanda y programación lineal Considere la siguiente relajación de programación lineal para el problema generalizado de determinación de ganadores en subastas combinatorias (el programa primal): Maximizar X i∈N,S⊆M wi xi,S vi(S) sujeto a Para todo i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M. Nótese que el programa primal tiene un número exponencial de variables. Sin embargo, podremos resolverlo en tiempo polinómico utilizando consultas de demanda a los postores. La solución tendrá un soporte de tamaño polinómico (valores no nulos para xi,S), y por lo tanto podremos describirla en tiempo polinómico. Aquí está su dual: Minimizar X j∈M qjpj + X i∈N diui sujeto a ui + X j∈S pj ≥ wivi(S) ∀i ∈ N, S ⊆ M pi ≥ 0, uj ≥ 0 ∀i ∈ M, j ∈ N. Nótese que el problema dual tiene exactamente n + m variables pero un número exponencial de restricciones. Por lo tanto, el problema dual puede resolverse utilizando el método del Elipsoide en tiempo polinómico, si un oráculo de separación puede ser implementado en tiempo polinómico. Recuerda que un oráculo de separación, al recibir una posible solución, confirma si es una solución factible o responde con una restricción que es violada por la posible solución. Construimos un oráculo de separación para resolver el programa dual, utilizando una única consulta de demanda a cada uno de los postores. Considera una posible solución (u, p) para el programa dual. Podemos reescribir las restricciones del programa dual como: ui/wi ≥ vi(S) − X j∈S pj/wi. Ahora, una consulta de demanda al postor i con precios pj/wi revela exactamente el conjunto S que maximiza el RHS de la desigualdad anterior. Por lo tanto, para verificar si (u, p) es factible, basta con (1) consultar a cada postor i por su demanda Di bajo los precios pj/wi; (2) verificar solo las n restricciones ui + P j∈Di pj ≥ wivi(Di) (donde vi(Di) puede ser simulado utilizando una secuencia polinómica de consultas de demanda como se muestra en el Lema 4.2). Si ninguna de estas condiciones se viola, entonces estamos seguros de que (u, p) es factible; de lo contrario, obtenemos una restricción violada. Lo que queda por mostrar es cómo se puede resolver el programa primal. (Recuerde que el programa primal tiene un número exponencial de variables). Dado que el algoritmo de Elipsoide se ejecuta en tiempo polinómico, solo encuentra un número polinómico de restricciones durante su operación. Claramente, si se eliminaran todas las demás restricciones del programa dual, seguiría teniendo la misma solución (añadir restricciones solo puede disminuir el espacio de soluciones factibles). Ahora tome el dual reducido donde solo existan las restricciones encontradas, y observe su dual. Tendrá la misma solución que el dual original y, por lo tanto, del primal original. Sin embargo, observa la forma de este dual del dual reducido. Es solo una versión del programa primal con un número polinomial de variables, aquellas que corresponden a las restricciones que permanecieron en el dual reducido. Por lo tanto, se puede resolver en tiempo polinómico, y esta solución resuelve claramente el programa primal original, estableciendo todas las demás variables en cero. 5. En esta sección caracterizamos el poder de las subastas ascendentes por precio de artículo. Primero demostramos que este poder no es trivial: tales subastas pueden en general obtener una cantidad exponencial de información. Por otro lado, demostramos que la asignación óptima no siempre puede ser determinada por una sola subasta ascendente, y en algunos casos, tampoco por un número exponencial de trayectorias de precios ascendentes. Finalmente, separamos el poder de diferentes modelos de subastas ascendentes. 5.1 El Poder de las Subastas Ascendentes de Precio de Artículo Primero mostramos que si se permiten incrementos lo suficientemente pequeños, una única trayectoria ascendente de precios de artículos puede obtener preferencias que no pueden ser obtenidas con comunicación polinómica. Como se mencionó, todos nuestros resultados de dureza se mantienen para cualquier incremento, incluso infinitesimal. Teorema 5.1. Algunas clases de valoraciones pueden ser obtenidas mediante subastas ascendentes de precio de artículo, pero no pueden ser obtenidas mediante un número polinómico de consultas de ningún tipo. Prueba. (bosquejo) Considera dos postores con v(S) = 1 si |S| > n 2 , v(S) = 0 si |S| < n 2 y cada S tal que |S| = n 2 tiene un valor desconocido de {0, 1}. Debido a [32], determinar la asignación óptima aquí requiere comunicación exponencial en el peor de los casos. Sin embargo, demostramos (ver [9]) que una subasta ascendente de precio de artículo puede lograrlo, siempre y cuando pueda utilizar incrementos exponencialmente pequeños. Ahora describimos otro resultado positivo sobre el poder de las subastas ascendentes de precio de los artículos. En la sección 4.1, mostramos que en la subasta ascendente de precio de los artículos no se puede determinar la asignación óptima para esta clase de valoraciones, que una consulta de valor puede ser simulada con un número (verdaderamente) polinomial de consultas de demanda de precio de los artículos. Aquí mostramos que cada consulta de valor puede ser simulada por un número (pseudo) polinomial de consultas ascendentes de demanda de precio de artículo. (En la siguiente subsección, mostramos que no siempre podemos simular ni siquiera un par de consultas de valor utilizando una subasta ascendente de precio de artículo). En el artículo completo (parte II, [9]), demostramos que podemos simular otros tipos de consultas utilizando subastas ascendentes de precio de artículo. Proposición 5.2. Una consulta de valor puede ser simulada por una subasta ascendente de precio de artículo. Esta simulación requiere un número polinómico de consultas. De hecho, la prueba para la Proposición 5.2 demuestra un resultado útil más fuerte sobre la información obtenida por subastas iterativas. Se dice que en cualquier subasta iterativa en la que los cambios de precios sean lo suficientemente pequeños en cada etapa (subastas pseudocontinuas), se puede calcular el valor de todos los paquetes demandados durante la subasta. La idea básica es que cuando el oferente pasa de demandar un paquete Ti a demandar otro paquete Ti+1, hay un punto en el que ella es indiferente entre estos dos paquetes. Por lo tanto, conocer el valor de un conjunto demandado (por ejemplo, el conjunto vacío) permite calcular los valores de todos los demás conjuntos demandados. Decimos que una subasta es seudo-continua si solo utiliza consultas de demanda, y en cada paso, el precio de como máximo un artículo se modifica en (para algún ∈ (0, δ]) con respecto a la consulta anterior. Proposición 5.3. Considera cualquier subasta pseudo-continua (no necesariamente ascendente), en la que el postor i demande el conjunto vacío al menos una vez a lo largo de la subasta. Entonces, el valor de cada paquete demandado por el postor i a lo largo de la subasta puede calcularse al final de la subasta. 5.2 Limitaciones de las Subastas Ascendentes de Precio de Artículo Aunque observamos que las consultas de demanda pueden resolver cualquier problema de <br>subasta combinatoria</br>, cuando las consultas están restringidas a ser ascendentes, algunas clases de valoraciones no pueden ser obtenidas ni completamente obtenidas. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "price": {
            "translated_key": "precio",
            "is_in_text": true,
            "original_annotated_sentences": [
                "On the Computational Power of Iterative Auctions∗ [Extended Abstract] Liad Blumrosen School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel liad@cs.huji.ac.il Noam Nisan School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel noam@cs.huji.ac.il ABSTRACT We embark on a systematic analysis of the power and limitations of iterative combinatorial auctions.",
                "Most existing iterative combinatorial auctions are based on repeatedly suggesting prices for bundles of items, and querying the bidders for their demand under these prices.",
                "We prove a large number of results showing the boundaries of what can be achieved by auctions of this kind.",
                "We first focus on auctions that use a polynomial number of demand queries, and then we analyze the power of different kinds of ascending-<br>price</br> auctions.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION Combinatorial auctions have recently received a lot of attention.",
                "In a combinatorial auction, a set M of m nonidentical items are sold in a single auction to n competing bidders.",
                "The bidders have preferences regarding the bundles of items that they may receive.",
                "The preferences of bidder i are specified by a valuation function vi : 2M → R+ , where vi(S) denotes the value that bidder i attaches to winning the bundle of items S. We assume free disposal, i.e., that the vis are monotone non-decreasing.",
                "The usual goal of the auctioneer is to optimize the social welfare P i vi(Si), where the allocation S1...Sn must be a partition of the items.",
                "Applications include many complex resource allocation problems and, in fact, combinatorial auctions may be viewed as the common abstraction of many complex resource allocation problems.",
                "Combinatorial auctions face both economic and computational difficulties and are a central problem in the recently active border of economic theory and computer science.",
                "A forthcoming book [11] addresses many of the issues involved in the design and implementation of combinatorial auctions.",
                "The design of a combinatorial auction involves many considerations.",
                "In this paper we focus on just one central issue: the communication between bidders and the allocation mechanism - preference elicitation.",
                "Transferring all information about bidders preferences requires an infeasible (exponential in m) amount of communication.",
                "Thus, direct revelation auctions in which bidders simply declare their preferences to the mechanism are only practical for very small auction sizes or for very limited families of bidder preferences.",
                "We have therefore seen a multitude of suggested iterative auctions in which the auction protocol repeatedly interacts with the different bidders, aiming to adaptively elicit enough information about the bidders preferences as to be able to find a good (optimal or close to optimal) allocation.",
                "Most of the suggested iterative auctions proceed by maintaining temporary prices for the bundles of items and repeatedly querying the bidders as to their preferences between the bundles under the current set of prices, and then updating the set of bundle prices according to the replies received (e.g., [22, 12, 17, 37, 3]).",
                "Effectively, such an iterative auction accesses the bidders preferences by repeatedly making the following type of demand query to bidders: Query to bidder i: a vector of bundle prices p = {p(S)}S⊆M ; Answer: a bundle of items S ⊆ M that maximizes vi(S) − p(S)..",
                "These types of queries are very natural in an economic setting as they capture the revealed preferences of the bidders.",
                "Some auctions, called item-<br>price</br> or linear-<br>price</br> auctions, specify a price pi for each item, and the price of any given bundle S is always linear, p(S) = P i∈S pi.",
                "Other auctions, called bundle-<br>price</br> auctions, allow specifying arbitrary (non-linear) prices p(S) for bundles.",
                "Another important differentiation between models of iterative auctions is 29 based on whether they use anonymous or non-anonymous prices: In some auctions the prices that are presented to the bidders are always the same (anonymous prices).",
                "In other auctions (non-anonymous), different bidders may face different (discriminatory) vectors of prices.",
                "In ascending-<br>price</br> auctions, forcing prices to be anonymous may be a significant restriction.",
                "In this paper, we embark on a systematic analysis of the computational power of iterative auctions that are based on demand queries.",
                "We do not aim to present auctions for practical use but rather to understand the limitations and possibilities of these kinds of auctions.",
                "In the first part of this paper, our main question is what can be done using a polynomial number of these types of queries?",
                "That is, polynomial in the main parameters of the problem: n, m and the number of bits t needed for representing a single value vi(S).",
                "Note that from an algorithmic point of view we are talking about sub-linear time algorithms: the input size here is really n(2m − 1) numbers - the descriptions of the valuation functions of all bidders.",
                "There are two aspects to computational efficiency in these settings: the first is the communication with the bidders, i.e., the number of queries made, and the second is the usual computational tractability.",
                "Our lower bounds will depend only on the number of queriesand hold independently of any computational assumptions like P = NP.",
                "Our upper bounds will always be computationally efficient both in terms of the number of queries and in terms of regular computation.",
                "As mentioned, this paper concentrates on the single aspect of preference elicitation and on its computational consequences and does not address issues of incentives.",
                "This strengthens our lower bounds, but means that the upper bounds require evaluation from this perspective also before being used in any real combinatorial auction.1 The second part of this paper studies the power of ascending -<br>price</br> auctions.",
                "Ascending auctions are iterative auctions where the published prices cannot decrease in time.",
                "In this work, we try to systematically analyze what do the differences between various models of ascending auctions mean.",
                "We try to answer the following questions: (i) Which models of ascending auctions can find the optimal allocation, and for which classes of valuations? (ii) In cases where the optimal allocation cannot be determined by ascending auctions, how well can such auctions approximate the social welfare? (iii) How do the different models for ascending auctions compare?",
                "Are some models computationally stronger than others?",
                "Ascending auctions have been extensively studied in the literature (see the recent survey by Parkes [35]).",
                "Most of this work presented upper bounds, i.e., proposed mechanisms with ascending prices and analyzed their properties.",
                "A result which is closer in spirit to ours, is by Gul and Stacchetti [17], who showed that no item-<br>price</br> ascending auction can always determine the VCG prices, even for substitutes valuations.2 Our framework is more general than the traditional line of research that concentrates on the final allocation and 1 We do observe however that some weak incentive property comes for free in demand-query auctions since myopic players will answer all demand queries truthfully.",
                "We also note that in some cases (but not always!) the incentives issues can be handled orthogonally to the preference elicitation issues, e.g., by using Vickrey-Clarke-Groves (VCG) prices (e.g., [4, 34]). 2 We further discuss this result in Section 5.3.",
                "Iterative auctions Demand auctions Item-<br>price</br> auctions Anonymous <br>price</br> auctions Ascending auctions 1 2 3 4 5 6 97 8 10 Figure 1: The diagram classifies the following auctions according to their properties: (1) The adaptation [12] for Kelso & Crawfords [22] auction. (2) The Proxy Auction [3] by Ausubel & Milgrom. (3) iBundle(3) by Parkes & Ungar [34]. (4) iBundle(2) by Parkes & Ungar [37]. (5) Our descending adaptation for the 2-approximation for submodular valuations by [25] (see Subsection 5.4). (6) Ausubels [4] auction for substitutes valuations. (7) The adaptation by Nisan & Segal [32] of the O( √ m) approximation by [26]. (8) The duplicate-item auction by [5]. (9) Auction for Read-Once formulae by [43]. (10) The AkBA Auction by Wurman & Wellman [42]. payments and in particular, on reaching Walrasian equilibria or Competitive equilibria.",
                "A Walrasian equilibrium3 is known to exist in the case of Substitutes valuations, and is known to be impossible for any wider class of valuations [16].",
                "This does not rule out other allocations by ascending auctions: in this paper we view the auctions as a computational process where the outcome - both the allocation and the payments - can be determined according to all the data elicited throughout the auction; This general framework strengthens our negative results.4 We find the study of ascending auctions appealing for various reasons.",
                "First, ascending auctions are widely used in many real-life settings from the FCC spectrum auctions [15] to almost any e-commerce website (e.g., [2, 1]).",
                "Actually, this is maybe the most straightforward way to sell items: ask the bidders what would they like to buy under certain prices, and increase the prices of over-demanded goods.",
                "Ascending auctions are also considered more intuitive for many bidders, and are believed to increase the trust of the bidders in the auctioneer, as they see the result gradually emerging from the bidders responses.",
                "Ascending auctions also have other desired economic properties, e.g., they incur smaller information revelation (consider, for example, English auctions vs. second-<br>price</br> sealed bid auctions). 1.1 Extant Work Many iterative combinatorial auction mechanisms rely on demand queries (see the survey in [35]).",
                "Figure 1 summa3 A Walrasian equilibrium is vector of item prices for which all the items are sold when each bidder receives a bundle in his demand set. 4 In few recent auction designs (e.g., [4, 28]) the payments are not necessarily the final prices of the auctions. 30 Valuation family Upper bound Reference Lower bound Reference General min(n, O( √ m)) [26], Section 4.2 min(n, m1/2− ) [32] Substitutes 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subadditive O(logm) [13] 2 [13] k-duplicates O(m1/k+1 ) [14] O(m1/k+1 ) [14] Procurement ln m [32] (log m)/2 [29, 32] Figure 2: The best approximation factors currently achievable by computationally-efficient combinatorial auctions, for several classes of valuations.",
                "All lower bounds in the table apply to all iterative auctions (except the one marked by *); all upper bounds in the table are achieved with item-<br>price</br> demand queries. rizes the basic classes of auctions implied by combinations of the above properties and classifies some of the auctions proposed in the literature according to this classification.",
                "For our purposes, two families of these auctions serve as the main motivating starting points: the first is the ascending item-<br>price</br> auctions of [22, 17] that with computational efficiency find an optimal allocation among (gross) substitutes valuations, and the second is the ascending bundleprice auctions of [37, 3] that find an optimal allocation among general valuations - but not necessarily with computational efficiency.",
                "The main lower bound in this area, due to [32], states that indeed, due to inherent communication requirements, it is not possible for any iterative auction to find the optimal allocation among general valuations with sub-exponentially many queries.",
                "A similar exponential lower bound was shown in [32] also for even approximating the optimal allocation to within a factor of m1/2− .",
                "Several lower bounds and upper bounds for approximation are known for some natural classes of valuations - these are summarized in Figure 2.",
                "In [32], the universal generality of demand queries is also shown: any non-deterministic communication protocol for finding an allocation that optimizes the social welfare can be converted into one that only uses demand queries (with bundle prices).",
                "In [41] this was generalized also to nondeterministic protocols for finding allocations that satisfy other natural types of economic requirements (e.g., approximate social efficiency, envy-freeness).",
                "However, in [33] it was demonstrated that this completeness of demand queries holds only in the nondeterministic setting, while in the usual deterministic setting, demand queries (even with bundle prices) may be exponentially weaker than general communication.",
                "Bundle-<br>price</br> auctions are a generalization of (the more natural and intuitive) item-<br>price</br> auctions.",
                "It is known that indeed item-<br>price</br> auctions may be exponentially weaker: a nice example is the case of valuations that are a XOR of k bundles5 , where k is small (say, polynomial).",
                "Lahaie and Parkes [24] show an economically-efficient bundle-<br>price</br> auction that uses a polynomial number of queries whenever k is polynomial.",
                "In contrast, [7] show that there exist valuations that are XORs of k = √ m bundles such that any item-<br>price</br> auction that finds an optimal allocation between them requires exponentially many queries.",
                "These results are part of a recent line of research ([7, 43, 24, 40]) that study the preference elicitation problem in combinatorial auctions and its relation to the full elicitation problem (i.e., learn5 These are valuations where bidders have values for k specific packages, and the value of each bundle is the maximal value of one of these packages that it contains. ing the exact valuations of the bidders).",
                "These papers adapt methods from machine-learning theory to the combinatorialauction setting.",
                "The preference elicitation problem and the full elicitation problem relate to a well studied problem in microeconomics known as the integrability problem (see, e.g., [27]).",
                "This problem studies if and when one can derive the utility function of a consumer from her demand function.",
                "Paper organization: Due to the relatively large number of results we present, we start with a survey of our new results in Section 2.",
                "After describing our formal model in Section 3, we present our results concerning the power of demand queries in Section 4.",
                "Then, we describe the power of item-<br>price</br> ascending auctions (Section 5) and bundle-<br>price</br> ascending auctions (Section 6).",
                "Readers who are mainly interested in the self-contained discussion of ascending auctions can skip Section 4.",
                "Missing proofs from Section 4 can be found in part I of the full paper ([8]).",
                "Missing proofs from Sections 5 and 6 can be found in part II of the full paper ([9]). 2.",
                "A SURVEY OF OUR RESULTS Our systematic analysis is composed of the combination of a rather large number of results characterizing the power and limitations of various classes of auctions.",
                "In this section, we will present an exposition describing our new results.",
                "We first discuss the power of demand-query iterative auctions, and then we turn our attention to ascending auctions.",
                "Figure 3 summarizes some of our main results. 2.1 Demand Queries Comparison of query types We first ask what other natural types of queries could we imagine iterative auctions using?",
                "Here is a list of such queries that are either natural, have been used in the literature, or that we found useful. 1.",
                "Value query: The auctioneer presents a bundle S, the bidder reports his value v(S) for this bundle. 2.",
                "Marginal-value query: The auctioneer presents a bundle A and an item j, the bidder reports how much he is willing to pay for j, given that he already owns A, i.e., v(j|A) = v(A ∪ {j}) − v(A). 3.",
                "Demand query (with item prices): The auctioneer presents a vector of item prices p1...pm; the bidder reports his demand under these prices, i.e., some set S that maximizes v(S) − P i∈S pi.6 6 A tie breaking rule should be specified.",
                "All of our results 31 Communication Constraint Can find an optimal allocation?",
                "Upper bound for welfare approx.",
                "Lower bound for welfare approx.",
                "Item-<br>price</br> Demand Queries Yes 1 1 Poly.",
                "Communication No [32] min(n, O(m1/2 )) [26] min(n, m1/2− ) [32] Poly.",
                "Item-<br>price</br> Demand Queries No [32] min(n, O(m1/2 )) min(n, m1/2− ) [32] Poly.",
                "Value Queries No [32] O( m√ log m ) [19] O( m log m ) Anonymous Item-<br>price</br> AA No - min(O(n), O(m1/2− )) Non-anonymous Item-<br>price</br> AA No -Anonymous Bundle-Price AA No - min(O(n), O(m1/2− )) Non-anonymous Bundle-Price AA Yes [37] 1 1 Poly Number of Item-Price AA No min(n, O(m1/2 ))Figure 3: This paper studies the economic efficiency of auctions that follow certain communication constraints.",
                "For each class of auctions, the table shows whether the optimal allocation can be achieved, or else, how well can it be approximated (both upper bounds and lower bounds).",
                "New results are highlighted.",
                "Abbreviations: Poly. (Polynomial number/size), AA (ascending auctions). - means that nothing is currently known except trivial solutions. 4.",
                "Indirect-utility query: The auctioneer presents a set of item prices p1...pm, and the bidder responds with his indirect-utility under these prices, that is, the highest utility he can achieve from a bundle under these prices: maxS⊆M (v(S) − P i∈S pi).7 5.",
                "Relative-demand query: the auctioneer presents a set of non-zero prices p1...pm, and the bidder reports the bundle that maximizes his value per unit of money, i.e., some set that maximizes v(S)P i∈S pi .8 Theorem: Each of these queries can be efficiently (i.e., in time polynomial in n, m, and the number of bits of precision t needed to represent a single value vi(S)) simulated by a sequence of demand queries with item prices.",
                "In particular this shows that demand queries can elicit all information about a valuation by simulating all 2m −1 value queries.",
                "We also observe that value queries and marginalvalue queries can simulate each other in polynomial time and that demand queries and indirect-utility queries can also simulate each other in polynomial time.",
                "We prove that exponentially many value queries may be needed in order to simulate a single demand query.",
                "It is interesting to note that for the restricted class of substitutes valuations, demand queries may be simulated by polynomial number of value queries [6].",
                "Welfare approximation The next question that we ask is how well can a computationally-efficient auction that uses only demand queries approximate the optimal allocation?",
                "Two separate obstacles are known: In [32], a lower bound of min(n, m1/2− ), for any fixed > 0, was shown for the approximation factor apply for any fixed tie breaking rule. 7 This is exactly the utility achieved by the bundle which would be returned in a demand query with the same prices.",
                "This notion relates to the Indirect-utility function studied in the Microeconomic literature (see, e.g., [27]). 8 Note that when all the prices are 1, the bidder actually reports the bundle with the highest per-item <br>price</br>.",
                "We found this type of query useful, for example, in the design of the approximation algorithm described in Figure 5 in Section 4.2. obtained using any polynomial amount of communication.",
                "A computational bound with the same value applies even for the case of single-minded bidders, but under the assumption of NP = ZPP [39].",
                "As noted in [32], the computationallyefficient greedy algorithm of [26] can be adapted to become a polynomial-time iterative auction that achieves a nearly matching approximation factor of min(n, O( √ m)).",
                "This iterative auction may be implemented with bundle-<br>price</br> demand queries but, as far as we see, not as one with item prices.",
                "Since in a single bundle-<br>price</br> demand query an exponential number of prices can be presented, this algorithm can have an exponential communication cost.",
                "In Section 4.2, we describe a different item-<br>price</br> auction that achieves the same approximation factor with a polynomial number of queries (and thus with a polynomial communication).",
                "Theorem: There exists a computationally-efficient iterative auction with item-<br>price</br> demand queries that finds an allocation that approximates the optimal welfare between arbitrary valuations to within a factor of min(n, O( √ m)).",
                "One may then attempt obtaining such an approximation factor using iterative auctions that use only the weaker value queries.",
                "However, we show that this is impossible: Theorem: Any iterative auction that uses a polynomial (in n and m) number of value queries can not achieve an approximation factor that is better than O( m log m ).9 Note however that auctions with only value queries are not completely trivial in power: the bundling auctions of Holzman et al. [19] can easily be implemented by a polynomial number of value queries and can achieve an approximation factor of O( m√ log m ) by using O(log m) equi-sized bundles.",
                "We do not know how to close the (tiny) gap between this upper bound and our lower bound.",
                "Representing bundle-prices We then deal with a critical issue with bundle-<br>price</br> auctions that was side-stepped by our model, as well as by all previous works that used bundle-<br>price</br> auctions: how are 9 This was also proven independently by Shahar Dobzinski and Michael Schapira. 32 the bundle prices represented?",
                "For item-<br>price</br> auctions this is not an issue since a query needs only to specify a small number, m, of prices.",
                "In bundle-<br>price</br> auctions that situation is more difficult since there are exponentially many bundles that require pricing.",
                "Our basic model (like all previous work that used bundle prices, e.g., [37, 34, 3]), ignores this issue, and only requires that the prices be determined, somehow, by the protocol.",
                "A finer model would fix a specific language for denoting bundle prices, force the protocol to represent the bundle-prices in this language, and require that the representations of the bundle-prices also be polynomial.",
                "What could such a language for denoting prices for all bundles look like?",
                "First note that specifying a <br>price</br> for each bundle is equivalent to specifying a valuation.",
                "Second, as noted in [31], most of the proposed bidding languages are really just languages for representing valuations, i.e., a syntactic representation of valuations - thus we could use any of them.",
                "This point of view opens up the general issue of which language should be used in bundle-<br>price</br> auctions and what are the implications of this choice.",
                "Here we initiate this line of investigation.",
                "We consider bundle-<br>price</br> auctions where the prices must be given as a XOR-bid, i.e., the protocol must explicitly indicate the <br>price</br> of every bundle whose value is different than that of all of its proper subsets.",
                "Note that all bundle-<br>price</br> auctions that do not explicitly specify a bidding language must implicitly use this language or a weaker one, since without a specific language one would need to list prices for all bundles, perhaps except for trivial ones (those with value 0, or more generally, those with a value that is determined by one of their proper subsets.)",
                "We show that once the representation length of bundle prices is taken into account (using the XOR-language), bundle-<br>price</br> auctions are no more strictly stronger than item-<br>price</br> auctions.",
                "Define the cost of an iterative auction as the total length of the queries and answers used throughout the auction (in the worst case).",
                "Theorem: For some class of valuations, bundle <br>price</br> auctions that use the XOR-language require an exponential cost for finding the optimal allocation.",
                "In contrast, item-<br>price</br> auctions can find the optimal allocation for this class within polynomial cost.10 This put doubts on the applicability of bundle-<br>price</br> auctions like [3, 37], and it may justify the use of hybrid pricing methods such as Ausubel, Cramton and Milgroms Clock-Proxy auction ([10]).",
                "Demand queries and linear programs The winner determination problem in combinatorial auctions may be formulated as an integer program.",
                "In many cases solving the linear-program relaxation of this integer program is useful: for some restricted classes of valuations it finds the optimum of the integer program (e.g., substitute valuations [22, 17]) or helps approximating the optimum (e.g., by randomized rounding [13, 14]).",
                "However, the linear program has an exponential number of variables.",
                "Nisan and Segal [32] observed the surprising fact that despite the ex10 Our proof relies on the sophisticated known lower bounds for constant depth circuits.",
                "We were not able to find an elementary proof. ponential number of variables, this linear program may be solved within polynomial communication.",
                "The basic idea is to solve the dual program using the Ellipsoid method (see, e.g., [20]).",
                "The dual program has a polynomial number of variables, but an exponential number of constraints.",
                "The Ellipsoid algorithm runs in polynomial time even on such programs, provided that a separation oracle is given for the set of constraints.",
                "Surprisingly, such a separation oracle can be implemented using a single demand query (with item prices) to each of the bidders.",
                "The treatment of [32] was somewhat ad-hoc to the problem at hand (the case of substitute valuations).",
                "Here we give a somewhat more general form of this important observation.",
                "Let us call the following class of linear programs generalized-winner-determination-relaxation (GWDR) LPs: Maximize X i∈N,S⊆M wi xi,S vi(S) s.t.",
                "X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M The case where wi = 1, di = 1, qj = 1 (for every i, j) is the usual linear relaxation of the winner determination problem.",
                "More generally, wi may be viewed as the weight given to bidder is welfare, qj may be viewed as the quantity of units of good j, and di may be viewed as duplicity of the number of bidders of type i. Theorem: Any GWDR linear program may be solved in polynomial time (in n, m, and the number of bits of precision t) using only demand queries with item prices.11 2.2 Ascending Auctions Ascending item-<br>price</br> auctions: It is well known that the item-<br>price</br> ascending auctions of Kelso and Crawford [22] and its variants [12, 16] find the optimal allocation as long as all players valuations have the substitutes property.",
                "The obvious question is whether the optimal allocation can be found for a larger class of valuations.",
                "Our main result here is a strong negative result: Theorem: There is a 2-item 2-player problem where no ascending item-<br>price</br> auction can find the optimal allocation.",
                "This is in contrast to both the power of bundle-<br>price</br> ascending auctions and to the power of general item-<br>price</br> demand queries (see above), both of which can always find the optimal allocation and in fact even provide full preference elicitation.",
                "The same proof proves a similar impossibility result for other types of auctions (e.g., descending auctions, non-anonymous auctions).",
                "More extension of this result: • Eliciting some classes of valuations requires an exponential number of ascending item-<br>price</br> trajectories. 11 The produced optimal solution will have polynomial support and thus can be listed fully. 33 • At least k − 1 ascending item-<br>price</br> trajectories are needed to elicit XOR formulae with k terms.",
                "This result is in some sense tight, since we show that any k-term XOR formula can be fully elicited by k−1 nondeterministic (i.e., when some exogenous teacher instructs the auctioneer on how to increase the prices) ascending auctions.12 We also show that item-<br>price</br> ascending auctions and iterative auctions that are limited to a polynomial number of queries (of any kind, not necessarily ascending) are incomparable in their power: ascending auctions, with small enough increments, can elicit the preferences in cases where any polynomial number of queries cannot.",
                "Motivated by several recent papers that studied the relation between eliciting and fully-eliciting the preferences in combinatorial auctions (e.g., [7, 24]), we explore the difference between these problems in the context of ascending auctions.",
                "We show that although a single ascending auction can determine the optimal allocation among any number of bidders with substitutes valuations, it cannot fully-elicit such a valuation even for a single bidder.",
                "While it was shown in [25] that the set of substitutes valuations has measure zero in the space of general valuations, its dimension is not known, and in particular it is still open whether a polynomial amount of information suffices to describe a substitutes valuation.",
                "While our result may be a small step in that direction (a polynomial full elicitation may still be possible with other communication protocols), we note that our impossibility result also holds for valuations in the class OXS defined by [25], valuations that we are able to show have a compact representation.",
                "We also give several results separating the power of different models for ascending combinatorial auctions that use item-prices: we prove, not surprisingly, that adaptive ascending auctions are more powerful than oblivious ascending auctions and that non-deterministic ascending auctions are more powerful than deterministic ascending auctions.",
                "We also compare different kinds of non-anonymous auctions (e.g., simultaneous or sequential), and observe that anonymous bundle-<br>price</br> auctions and non-anonymous item-<br>price</br> auctions are incomparable in their power.",
                "Finally, motivated by Dutch auctions, we consider descending auctions, and how they compare to ascending ones; we show classes of valuations that can be elicited by ascending item-<br>price</br> auctions but not by descending item-<br>price</br> auctions, and vice versa.",
                "Ascending bundle-<br>price</br> auctions: All known ascending bundle-<br>price</br> auctions that are able to find the optimal allocation between general valuations (with free disposal) use non-anonymous prices.",
                "Anonymous ascending-<br>price</br> auctions (e.g., [42, 21, 37]) are only known to be able to find the optimal allocation among superadditive valuations or few other simple classes ([36]).",
                "We show that this is no mistake: Theorem: No ascending auction with anonymous prices can find the optimal allocation between general valuations. 12 Non-deterministic computation is widely used in CS and also in economics (e.g, a Walrasian equilibrium or [38]).",
                "In some settings, deterministic and non-deterministic models have equal power (e.g., computation with finite automata).",
                "This bound is regardless of the running time, and it also holds for descending auctions and non-deterministic auctions.",
                "We strengthen this result significantly by showing that anonymous ascending auctions cannot produce a better than O( √ m) approximation - the approximation ratio that can be achieved with a polynomial number of queries ([26, 32]) and, as mentioned, with a polynomial number of item-<br>price</br> demand queries.",
                "The same lower bound clearly holds for anonymous item-<br>price</br> ascending auctions since such auctions can be simulated by anonymous bundle-<br>price</br> ascending auctions.",
                "We currently do not have any lower bound on the approximation achievable by non-anonymous item-<br>price</br> ascending auctions.",
                "Finally, we study the performance of the existing computationally-efficient ascending auctions.",
                "These protocols ([37, 3]) require exponential time in the worst case, and this is unavoidable as shown by [32].",
                "However, we also observe that these auctions, as well as the whole class of similar ascending bundle-<br>price</br> auctions, require an exponential time even for simple additive valuations.",
                "This is avoidable and indeed the ascending item-<br>price</br> auctions of [22] can find the optimal allocation for these simple valuations with polynomial communication. 3.",
                "THE MODEL 3.1 Discrete Auctions for Continuous Values Our model aims to capture iterative auctions that operate on real-valued valuations.",
                "There is a slight technical difficulty here in bridging the gap between the discrete nature of an iterative auction, and the continuous nature of the valuations.",
                "This is exactly the same problem as in modeling a simple English auction.",
                "There are three standard formal ways to model it: 1.",
                "Model the auction as a continuous process and study its trajectory in time.",
                "For example, the so-called Japanese auction is basically a continuous model of an English model.13 2.",
                "Model the auction as discrete and the valuations as continuously valued.",
                "In this case we introduce a parameter and usually require the auction to produce results that are -close to optimal. 3.",
                "Model the valuations as discrete.",
                "In this case we will assume that all valuations are integer multiples of some small fixed quantity δ, e.g., 1 penny.",
                "All communication in this case is then naturally finite.",
                "In this paper we use the latter formulation and assume that all values are multiples of some δ.",
                "Thus, in some parts of the paper we assume without loss of generality that δ = 1, hence all valuations are integral.",
                "Almost all (if not all) of our results can be translated to the other two models with little effort. 3.2 Valuations A single auctioneer is selling m indivisible non-homogeneous items in a single auction, and let M be the set of these 13 Another similar model is the moving knives model in the cake-cutting literature. 34 items and N be the set of bidders.",
                "Each one of the n bidders in the auction has a valuation function vi : 2m → {0, δ, 2δ, ..., L}, where for every bundle of items S ⊆ M, vi(S) denotes the value of bidder i for the bundle S and is a multiple of δ in the range 0...L. We will sometimes denote the number of bits needed to represent such values in the range 0...L by t = log L. We assume free disposal, i.e., S ⊆ T implies vi(S) ≤ vi(T) and that vi(∅) = 0 for all bidders.",
                "We will mention the following classes of valuations: • A valuation is called sub-modular if for all sets of items A and B we have that v(A ∪ B) + v(A ∩ B) ≤ v(A) + v(B). • A valuation is called super-additive if for all disjoint sets of items A and B we have that v(A∪B) ≥ v(A)+ v(B). • A valuation is called a k-bundle XOR if it can be represented as a XOR combination of at most k atomic bids [30], i.e., if there are at most k bundles Si and prices pi such that for all S, v(S) = maxi|S⊇Si pi.",
                "Such valuations will be denoted by v = (S1 : p1) ⊕ (S2 : p2) ⊕ . . . ⊕ (Sk : pk).14 3.3 Iterative Auctions The auctioneer sets up a protocol (equivalently an algorithm), where at each stage of the protocol some information q - termed the query - is sent to some bidder i, and then bidder i replies with some reply that depends on the query as well as on his own valuation.",
                "In this paper, we assume that we have complete control over the bidders behavior, and thus the protocol also defines a reply function ri(q, vi) that specifies bidder is reply to query q.",
                "The protocol may be adaptive: the query value as well as the queried bidder may depend on the replies received for past queries.",
                "At the end of the protocol, an allocation S1...Sn must be declared, where Si ∩ Sj = ∅ for i = j.",
                "We say that the auction finds an optimal allocation if it finds the allocation that maximizes the social welfareP i vi(Si).",
                "We say that it finds a c-approximation if P i vi(Si) ≥ P i vi(Ti)/c where T1...Tn is an optimal allocation.",
                "The running time of the auction on a given instance of the bidders valuations is the total number of queries made on this instance.",
                "The running time of a protocol is the worst case cost over all instances.",
                "Note that we impose no computational limitations on the protocol or on the players.15 This of course only strengthens our hardness results.",
                "Yet, our positive results will not use this power and will be efficient also in the usual computational sense.",
                "Our goal will be to design computationally-efficient protocols.",
                "We will deem a protocol computationally-efficient if its cost is polynomial in the relevant parameters: the number of bidders n, the number of items m, and t = log L, where L is the largest possible value of a bundle.",
                "However, when we discuss ascending-<br>price</br> auctions and their variants, a computationally-efficient protocol will be required to be 14 For example, v = (abcd : 5) ⊕ (ab : 3) ⊕ (c : 4) denotes the XOR valuation with the terms abcd, ab, c and prices 5, 3, 4 respectively.",
                "For this valuation, v(abcd) = 5, v(abd) = 3, v(abc) = 4. 15 The running time really measures communication costs and not computational running time. pseudo-polynomial, i.e., it should ask a number of queries which is polynomial in m, n and L δ .",
                "This is because that ascending auctions can usually not achieve such running times (consider even the English auction on a single item).16 Note that all of our results give concrete bounds, where the dependence on the parameters is given explicitly; we use the standard big-Oh notation just as a shorthand.",
                "We say than an auction elicits some class V of valuations, if it determines the optimal allocation for any profile of valuations drawn from V ; We say that an auction fully elicits some class of valuations V , if it can fully learn any single valuation v ∈ V (i.e., learn v(S) for every S). 3.4 Demand Queries and Ascending Auctions Most of the paper will be concerned with a common special case of iterative auctions that we term demand auctions.",
                "In such auctions, the queries that are sent to bidders are demand queries: the query specifies a <br>price</br> p(S) ∈ + for each bundle S. The reply of bidder i is simply the set most desired - demanded - under these prices.",
                "Formally, a set S that maximizes vi(S) − p(S).",
                "It may happen that more than one set S maximizes this value.",
                "In which case, ties are broken according to some fixed tie-breaking rule, e.g., the lexicographically first such set is returned.",
                "All of our results hold for any fixed tie-breaking rule.",
                "Ascending auctions are iterative auctions with non-decreasing prices: Definition 1.",
                "In an ascending auction, the prices in the queries to the same bidder can only increase in time.",
                "Formally, let p be a query made for bidder i, and q be a query made for bidder i at a later stage in the protocol.",
                "Then for all sets S, q(S) ≥ p(S).",
                "A similar variant, which we also study and that is also common in real life, is descending auctions, in which prices can only decrease in time.",
                "Note that the term ascending auction refers to an auction with a single ascending trajectory of prices.",
                "It may be useful to define multi-trajectory ascending auctions, in which the prices maybe reset to zero a number of times (see, e.g., [4]).",
                "We consider two main restrictions on the types of allowed demand queries: Definition 2.",
                "Item Prices: The prices in each query are given by prices pj for each item j.",
                "The <br>price</br> of a set S is additive: p(S) = P j∈S pj.",
                "Definition 3.",
                "Anonymous prices: The prices seen by the bidders at any stage in the auction are the same, i.e. whenever a query is made to some bidder, the same query is also made to all other bidders (with the prices unchanged).",
                "In auctions with non-anonymous (discriminatory) prices, each bidder i has personalized prices denoted by pi (S).17 In this paper, all auctions are anonymous unless otherwise specified.",
                "Note that even though in our model valuations are integral (or multiples of some δ), we allow the demand query to 16 Most of the auctions we present may be adapted to run in time polynomial in log L, using a binary-search-like procedure, losing their ascending nature. 17 Note that a non-anonymous auction can clearly be simulated by n parallel anonymous auctions. 35 use arbitrary real numbers in +.",
                "That is, we assume that the increment we use in the ascending auctions may be significantly smaller than δ.",
                "All our hardness results hold for any , even for continuous <br>price</br> increments.",
                "A practical issue here is how will the query be specified: in the general case, an exponential number of prices needs to be sent in a single query.",
                "Formally, this is not a problem as the model does not limit the length of queries in any way - the protocol must simply define what the prices are in terms of the replies received for previous queries.",
                "We look into this issue further in Section 4.3. 4.",
                "THE POWER OF DEMAND QUERIES In this section, we study the power of iterative auctions that use demand queries (not necessarily ascending).",
                "We start by comapring demand queries to other types of queries.",
                "Then, we discuss how well can one approximate the optimal welfare using a polynomial number of demand queries.",
                "We also initiate the study of the representation of bundle-<br>price</br> demand queries, and finally, we show how demand queries help solving the linear-programming relaxation of combinatorial auctions in polynomial time. 4.1 The Power of Different Types of Queries In this section we compare the power of the various types of queries defined in Section 2.",
                "We will present computationally -efficient simulations of these query types using item-<br>price</br> demand queries.",
                "In Section 5.1 we show that these simulations can also be done using item-<br>price</br> ascending auctions.",
                "Lemma 4.1.",
                "A value query can be simulated by m marginalvalue queries.",
                "A marginal-value query can be simulated by two value queries.",
                "Lemma 4.2.",
                "A value query can be simulated by mt demand queries (where t = log L is the number of bits needed to represent a single bundle value).18 As a direct corollary we get that demand auctions can always fully elicit the bidders valuations by simulating all possible 2m − 1 queries and thus elicit enough information for determining the optimal allocation.",
                "Note, however, that this elicitation may be computationally inefficient.",
                "The next lemma shows that demand queries can be exponentially more powerful than value queries.",
                "Lemma 4.3.",
                "An exponential number of value queries may be required for simulating a single demand query.",
                "Indirect utility queries are, however, equivalent in power to demand queries: Lemma 4.4.",
                "An indirect-utility query can be simulated by mt + 1 demand queries.",
                "A demand query can be simulated by m + 1 indirect-utility queries.",
                "Demand queries can also simulate relative-demand queries:19 18 Note that t bundle-<br>price</br> demand queries can easily simulate a value query by setting the prices of all the bundles except S (the bundle with the unknown value) to be L, and performing a binary search on the <br>price</br> of S. 19 Note: although in our model values are integral (our multiples of δ), we allow the query prices to be arbitrary real numV MV D IU RD V 1 2 exp exp exp MV m 1 exp exp exp D mt poly 1 mt+1 poly IU 1 2 m+1 1 poly RD - - - - 1 Figure 4: Each entry in the table specifies how many queries of this row are needed to simulate a query from the relevant column.",
                "Abbreviations: V (value query), MV (marginal-value query), D (demand query), IU (Indirect-utility query), RD (relative demand query).",
                "Lemma 4.5.",
                "Relative-demand queries can be simulated by a polynomial number of demand queries.",
                "According to our definition of relative-demand queries, they clearly cannot simulate even value queries.",
                "Figure 4 summarizes the relations between these query types. 4.2 Approximating the Social Welfare with Value and Demand Queries We know from [32] that iterative combinatorial auctions that only use a polynomial number of queries can not find an optimal allocation among general valuations and in fact can not even approximate it to within a factor better than min{n, m1/2− }.",
                "In this section we ask how well can this approximation be done using demand queries with item prices, or using the weaker value queries.",
                "We show that, using demand queries, the lower bound can be matched, while value queries can only do much worse.",
                "Figure 5 describes a polynomial-time algorithm that achieves a min(n, O( √ m)) approximation ratio.",
                "This algorithm greedily picks the bundles that maximize the bidders per-item value (using relative-demand queries, see Section 4.1).",
                "As a final step, it allocates all the items to a single bidder if it improves the social welfare (this can be checked using value queries).",
                "Since both value queries and relative-demand queries can be simulated by a polynomial number of demand queries with item prices (Lemmas 4.2 and 4.5), this algorithm can be implemented by a polynomial number of demand queries with item prices.20 Theorem 4.6.",
                "The auction described in Figure 5 can be implemented by a polynomial number of demand queries and achieves a min{n, 4 √ m}-approximation for the social welfare.",
                "We now ask how well can the optimal welfare be approximated by a polynomial number of value queries.",
                "First we note that value queries are not completely powerless: In [19] it is shown that if the m items are split into k fixed bundles of size m/k each, and these fixed bundles are auctioned as though each was indivisible, then the social welfare bers, thus we may have bundles with arbitrarily close relative demands.",
                "In this sense the simulation above is only up to any given (and the number of queries is O(log L+log 1 )).",
                "When the relative-demand query prices are given as rational numbers, exact simulation is implied when log is linear in the input length. 20 In the full paper [8], we observe that this algorithm can be implemented by two descending item-<br>price</br> auctions (where we allow removing items along the auction). 36 generated by such an auction is at least m√ k -approximation of that possible in the original auction.",
                "Notice that such an auction can be implemented by 2k − 1 value queries to each bidder - querying the value of each bundle of the fixed bundles.",
                "Thus, if we choose k = log m bundles we get an m√ log m -approximation while still using a polynomial number of queries.",
                "The following lemma shows that not much more is possible using value queries: Lemma 4.7.",
                "Any iterative auction that uses only value queries and distinguishes between k-tuples of 0/1 valuations where the optimal allocation has value 1, and those where the optimal allocation has value k requires at least 2 m k queries.",
                "Proof.",
                "Consider the following family of valuations: for every S, such that |S| > m/2, v(S) = 1, and there exists a single set T, such that for |S| ≤ m/2, v(S) = 1 iff T ⊆ S and v(S) = 0 otherwise.",
                "Now look at the behavior of the protocol when all valuations vi have T = {1...m}.",
                "Clearly in this case the value of the best allocation is 1 since no set of size m 2 or lower has non-zero value for any player.",
                "Fix the sequence of queries and answers received on this k-tuple of valuations.",
                "Now consider the k-tuple of valuations chosen at random as follows: a partition of the m items into k sets T1...Tk each of size m k each is chosen uniformly at random among all such partitions.",
                "Now consider the k-tuple of valuations from our family that correspond to this partition - clearly Ti can be allocated to i, for each i, getting a total value of k. Now look at the protocol when running on these valuations and compare its behavior to the original case.",
                "Note that the answer to a query S to player i differs between the case of Ti and the original case of T = {1...m} only if |S| ≤ m 2 and Ti ⊆ S. Since Ti is distributed uniformly among all sets of size exactly m k , we have that for any fixed query S to player i, where |S| ≤ m 2 , Pr[Ti ⊆ S] ≤ „ |S| m «|Ti| ≤ 2− m k Using the union-bound, if the original sequence of queries was of length less than 2 m k , then with positive probability none of the queries in the sequence would receive a different answer than for the original input tuple.",
                "This is forbidden since the protocol must distinguish between this case and the original case - which cannot happen if all queries receive the same answer.",
                "Hence there must have been at least 2 m k queries for the original tuple of valuations.",
                "We conclude that a polynomial time protocol that uses only value queries cannot obtain a better than O( m log m ) approximation of the welfare: Theorem 4.8.",
                "An iterative auction that uses a polynomial number of value queries cannot achieve better than O( m log m )-approximation for the social welfare.",
                "Proof.",
                "Immediate from Lemma 4.7: achieving any approximation ratio k which is asymptotically greater than m log m needs an exponential number of value queries.",
                "An Approximation Algorithm: Initialization: Let T ← M be the current items for sale.",
                "Let K ← N be the currently participating bidders.",
                "Let S∗ 1 ← ∅, ..., S∗ n ← ∅ be the provisional allocation.",
                "Repeat until T = ∅ or K = ∅: Ask each bidder i in K for the bundle Si that maximizes her per-item value, i.e., Si ∈ argmaxS⊆T vi(S) |S| .",
                "Let i be the bidder with the maximal per-item value, i.e., i ∈ argmaxi∈K vi(Si) |Si| .",
                "Set: s∗ i = si, K = K \\ i, M = M \\ Si Finally: Ask the bidders for their values vi(M) for the grand bundle.",
                "If allocating all the items to some bidder i improves the social welfare achieved so far (i.e., ∃i ∈ N such that vi(M) > P i∈N vi(S∗ i )), then allocate all items to this bidder i.",
                "Figure 5: This algorithm achieves a min{n, 4 √ m}approximation for the social welfare, which is asymptotically the best worst-case approximation possible with polynomial communication.",
                "This algorithm can be implemented with a polynomial number of demand queries. 4.3 The Representation of Bundle Prices In this section we explicitly fix the language in which bundle prices are presented to the bidders in bundle-<br>price</br> auctions.",
                "This language requires the algorithm to explicitly list the <br>price</br> of every bundle with a non-trivial <br>price</br>.",
                "Trivial in this context is a <br>price</br> that is equal to that of one of its proper subsets (which was listed explicitly).",
                "This representation is equivalent to the XOR-language for expressing valuations.",
                "Formally, each query q is given by an expression: q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl).",
                "In this representation, the <br>price</br> demanded for every set S is simply p(S) = max{k=1...l|Sk⊆S}pk.",
                "Definition 4.",
                "The length of the query q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl) is l. The cost of an algorithm is the sum of the lengths of the queries asked during the operation of the algorithm on the worst case input.",
                "Note that under this definition, bundle-<br>price</br> auctions are not necessarily stronger than item-<br>price</br> auctions.",
                "An itemprice query that prices each item for 1, is translated to an exponentially long bundle-<br>price</br> query that needs to specify the <br>price</br> |S| for each bundle S. But perhaps bundle-price auctions can still find optimal allocations whenever itemprice auction can, without directly simulating such queries?",
                "We show that this is not the case: indeed, when the representation length is taken into account, bundle <br>price</br> auctions are sometimes seriously inferior to item <br>price</br> auctions.",
                "Consider the following family of valuations: Each item is valued at 3, except that for some single set S, its value is a bit more: 3|S| + b, where b ∈ {0, 1, 2}.",
                "Note that an item <br>price</br> auction can easily find the optimal allocation between any two such valuations: Set the prices of each item to 3+ ; if the demand sets of the two players are both empty, then b = 0 for both valuations, and an arbitrary allocation is fine.",
                "If one of them is empty and the other non-empty, allocate the non-empty demand set to its bidder, and the rest to the other.",
                "If both demand sets are non-empty then, unless they form an exact partition, we need to see which b is larger, which we can do by increasing the <br>price</br> of a single item in each demand set. 37 We will show that any bundle-<br>price</br> auction that uses only the XOR-language to describe bundle prices requires an exponential cost (which includes the sum of all description lengths of prices) to find an optimal allocation between any two such valuations.",
                "Lemma 4.9.",
                "Every bundle-<br>price</br> auction that uses XORexpressions to denote bundle prices requires 2Ω( √ m) cost in order to find the optimal allocation among two valuations from the above family.",
                "The complication in the proof stems from the fact that using XOR-expressions, the length of the <br>price</br> description depends on the number of bundles whose <br>price</br> is strictly larger than each of their subsets - this may be significantly smaller than the number of bundles that have a non-zero price. (The proof becomes easy if we require the protocol to explicitly name every bundle with non-zero price.)",
                "We do not know of any elementary proof for this lemma (although we believe that one can be found).",
                "Instead we reduce the problem to a well known lower bound in boolean circuit complexity [18] stating that boolean circuits of depth 3 that compute the majority function on m variables require 2Ω( √ m) size. 4.4 Demand Queries and Linear Programming Consider the following linear-programming relaxation for the generalized winner-determination problem in combinatorial auctions (the primal program): Maximize X i∈N,S⊆M wi xi,S vi(S) s.t.",
                "X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M Note that the primal program has an exponential number of variables.",
                "Yet, we will be able to solve it in polynomial time using demand queries to the bidders.",
                "The solution will have a polynomial size support (non-zero values for xi,S), and thus we will be able to describe it in polynomial time.",
                "Here is its dual: Minimize X j∈M qjpj + X i∈N diui s.t. ui + X j∈S pj ≥ wivi(S) ∀i ∈ N, S ⊆ M pi ≥ 0, uj ≥ 0 ∀i ∈ M, j ∈ N Notice that the dual problem has exactly n + m variables but an exponential number of constraints.",
                "Thus, the dual can be solved using the Ellipsoid method in polynomial time - if a separation oracle can be implemented in polynomial time.",
                "Recall that a separation oracle, when given a possible solution, either confirms that it is a feasible solution, or responds with a constraint that is violated by the possible solution.",
                "We construct a separation oracle for solving the dual program, using a single demand query to each of the bidders.",
                "Consider a possible solution (u, p) for the dual program.",
                "We can re-write the constraints of the dual program as: ui/wi ≥ vi(S) − X j∈S pj/wi Now a demand query to bidder i with prices pj/wi reveals exactly the set S that maximizes the RHS of the previous inequality.",
                "Thus, in order to check whether (u, p) is feasible it suffices to (1) query each bidder i for his demand Di under the prices pj/wi; (2) check only the n constraints ui + P j∈Di pj ≥ wivi(Di) (where vi(Di) can be simulated using a polynomial sequence of demand queries as shown in Lemma 4.2).",
                "If none of these is violated then we are assured that (u, p) is feasible; otherwise we get a violated constraint.",
                "What is left to be shown is how the primal program can be solved. (Recall that the primal program has an exponential number of variables.)",
                "Since the Ellipsoid algorithm runs in polynomial time, it encounters only a polynomial number of constraints during its operation.",
                "Clearly, if all other constraints were removed from the dual program, it would still have the same solution (adding constraints can only decrease the space of feasible solutions).",
                "Now take the reduced dual where only the constraints encountered exist, and look at its dual.",
                "It will have the same solution as the original dual and hence of the original primal.",
                "However, look at the form of this dual of the reduced dual.",
                "It is just a version of the primal program with a polynomial number of variables - those corresponding to constraints that remained in the reduced dual.",
                "Thus, it can be solved in polynomial time, and this solution clearly solves the original primal program, setting all other variables to zero. 5.",
                "ITEM-<br>price</br> ASCENDING AUCTIONS In this section we characterize the power of ascending item-<br>price</br> auctions.",
                "We first show that this power is not trivial: such auctions can in general elicit an exponential amount of information.",
                "On the other hand, we show that the optimal allocation cannot always be determined by a single ascending auction, and in some cases, nor by an exponential number of ascending-<br>price</br> trajectories.",
                "Finally, we separate the power of different models of ascending auctions. 5.1 The Power of Item-<br>price</br> Ascending Auctions We first show that if small enough increments are allowed, a single ascending trajectory of item-prices can elicit preferences that cannot be elicited with polynomial communication.",
                "As mentioned, all our hardness results hold for any increment, even infinitesimal.",
                "Theorem 5.1.",
                "Some classes of valuations can be elicited by item-<br>price</br> ascending auctions, but cannot be elicited by a polynomial number of queries of any kind.",
                "Proof. (sketch) Consider two bidders with v(S) = 1 if |S| > n 2 , v(S) = 0 if |S| < n 2 and every S such that |S| = n 2 has an unknown value from {0, 1}.",
                "Due to [32], determining the optimal allocation here requires exponential communication in the worst case.",
                "Nevertheless, we show (see [9]) that an item-<br>price</br> ascending auction can do it, as long as it can use exponentially small increments.",
                "We now describe another positive result for the power of item-<br>price</br> ascending auctions.",
                "In section 4.1, we showed 38 v(ab) v(a) v(b) Bidder 1 2 α ∈ (0, 1) β ∈ (0, 1) Bidder 2 2 2 2 Figure 6: No item-<br>price</br> ascending auctions can determine the optimal allocation for this class of valuations. that a value query can be simulated with a (truly) polynomial number of item-<br>price</br> demand queries.",
                "Here, we show that every value query can be simulated by a (pseudo) polynomial number of ascending item-<br>price</br> demand queries. (In the next subsection, we show that we cannot always simulate even a pair of value queries using a single item-<br>price</br> ascending auction.)",
                "In the full paper (part II,[9]), we show that we can simulate other types of queries using item-<br>price</br> ascending auctions.",
                "Proposition 5.2.",
                "A value query can be simulated by an item-<br>price</br> ascending auction.",
                "This simulation requires a polynomial number of queries.",
                "Actually, the proof for Proposition 5.2 proves a stronger useful result regarding the information elicited by iterative auctions.",
                "It says that in any iterative auction in which the changes of prices are small enough in each stage (pseudocontinuous auctions), the value of all bundles demanded during the auction can be computed.",
                "The basic idea is that when the bidder moves from demanding some bundle Ti to demanding another bundle Ti+1, there is a point in which she is indifferent between these two bundles.",
                "Thus, knowing the value of some demanded bundle (e.g., the empty set) enables computing the values of all other demanded bundles.",
                "We say that an auction is pseudo-continuous, if it only uses demand queries, and in each step, the <br>price</br> of at most one item is changed by (for some ∈ (0, δ]) with respect to the previous query.",
                "Proposition 5.3.",
                "Consider any pseudo-continuous auction (not necessarily ascending), in which bidder i demands the empty set at least once along the auction.",
                "Then, the value of every bundle demanded by bidder i throughout the auction can be calculated at the end of the auction. 5.2 Limitations of Item-<br>price</br> Ascending Auctions Although we observed that demand queries can solve any combinatorial auction problem, when the queries are restricted to be ascending, some classes of valuations cannot be elicited nor fully-elicited.",
                "An example for such class of valuations is given in Figure 6.",
                "Theorem 5.4.",
                "There are classes of valuations that cannot be elicited nor fully elicited by any item-<br>price</br> ascending auction.",
                "Proof.",
                "Let bidder 1 have the valuation described in the first row of Figure 6, where α and β are unknown values in (0, 1).",
                "First, we prove that this class cannot be fully elicited by a single ascending auction.",
                "Specifically, an ascending auction cannot reveal the values of both α and β.",
                "As long as pa and pb are both below 1, the bidder will always demand the whole bundle ab: her utility from ab is strictly greater than the utility from either a or b separately.",
                "For example, we show that u1(ab) > u1(a): u1(ab) = 2 − (pa + pb) = 1 − pa + 1 − pb > vA(a) − pa + 1 − pb > u1(a) Thus, in order to gain any information about α or β, the <br>price</br> of one of the items should become at least 1, w.l.o.g. pa ≥ 1.",
                "But then, the bundle a will not be demanded by bidder 1 throughout the auction, thus no information at all will be gained about α.",
                "Now, assume that bidder 2 is known to have the valuation described in the second row of Figure 6.",
                "The optimal allocation depends on whether α is greater than β (in bidder 1s valuation), and we proved that an ascending auction cannot determine this.",
                "The proof of the theorem above shows that for an unknown value to be revealed, the <br>price</br> of one item should be greater than 1, and the other <br>price</br> should be smaller than 1.",
                "Therefore, in a <br>price</br>-monotonic trajectory of prices, only one of these values can be revealed.",
                "An immediate conclusion is that this impossibility result also holds for item-<br>price</br> descending auctions.",
                "Since no such trajectory exists, then the same conclusion even holds for non-deterministic itemprice auctions (in which exogenous data tells us how to increase the prices).",
                "Also note that since the hardness stems from the impossibility to fully-elicit a valuation of a single bidder, this result also holds for non-anonymous ascending item-<br>price</br> auctions. 5.3 Limitations of Multi-Trajectory Ascending Auctions According to Theorem 5.4, no ascending item-<br>price</br> auction can always elicit the preferences (we prove a similar result for bundle prices in section 6).",
                "But can two ascending trajectories do the job?",
                "Or a polynomial number of ascending trajectories?",
                "We give negative answers for such suggestions.",
                "We define a k-trajectory ascending auction as a demandquery iterative auction in which the demand queries can be partitioned to k sets of queries, where the prices published in each set only increase in time.",
                "Note that we use a general definition; It allows the trajectories to run in parallel or sequentially, and to use information elicited in some trajectories for determining the future queries in other trajectories.",
                "The power of multiple-trajectory auctions can be demonstrated by the negative result of Gul and Stacchetti [17] who showed that even for an auction among substitutes valuations, an anonymous ascending item-<br>price</br> auction cannot compute VCG prices for all players.21 Ausubel [4] overcame this impossibility result and designed auctions that do compute VCG prices by organizing the auction as a sequence of n + 1 ascending auctions.",
                "Here, we prove that one cannot elicit XOR valuations with k terms by less than k − 1 ascending trajectories.",
                "On the other hand, we show that an XOR formula can be fully elicited by k−1 non-deterministic ascending auctions (or by k−1 deterministic ascending auctions if the auctioneer knows the atomic bundles).22 21 A recent unpublished paper by Mishra and Parkes extends this result, and shows that non-anonymous prices with bundle-prices are necessary in order that an ascending auction will end up with a universal-competitive-equilibrium (that leads to VCG payments). 22 This result actually separates the power of deterministic 39 Proposition 5.5.",
                "XOR valuations with k terms cannot be elicited (or fully elicited) by any (k-2)-trajectory itemprice ascending auction, even when the atomic bundles are known to the elicitor.",
                "However, these valuations can be elicited (and fully elicited) by (k-1)-trajectory non-deterministic non-anonymous item-<br>price</br> ascending auctions.",
                "Moreover, an exponential number of trajectories is required for eliciting some classes of valuations: Proposition 5.6.",
                "Elicitation and full-elicitation of some classes of valuations cannot be done by any k-trajectory itemprice ascending auction, where k = o(2m ).",
                "Proof. (sketch) Consider the following class of valuations: For |S| < m 2 , v(S) = 0 and for |S| > m 2 , v(S) = 2; every bundle S of size m 2 has some unknown value in (0, 1).",
                "We show ([9]) that a single item-<br>price</br> ascending auction can reveal the value of at most one bundle of size n 2 , and therefore an exponential number of ascending trajectories is needed in order to elicit such valuations.",
                "We observe that the algorithm we presented in Section 4.2 can be implemented by a polynomial number of ascending auctions (each item-<br>price</br> demand query can be considered as a separate ascending auction), and therefore a min(n, 4 √ m)-approximation can be achieved by a polynomial number of ascending auctions.",
                "We do not currently have a better upper bound or any lower bound. 5.4 Separating the Various Models of Ascending Auctions Various models for ascending auctions have been suggested in the literature.",
                "In this section, we compare the power of the different models.",
                "As mentioned, all auctions are considered anonymous and deterministic, unless specified otherwise.",
                "Ascending vs.",
                "Descending Auctions: We begin the discussion of the relation between ascending auctions and descending auctions with an example.",
                "The algorithm by Lehmann, Lehmann and Nisan [25] can be implemented by a simple item-<br>price</br> descending auction (see the full paper for details [9]).",
                "This algorithm guarantees at least half of the optimal efficiency for submodular valuations.",
                "However, we are not familiar with any ascending auction that guarantees a similar fraction of the efficiency.",
                "This raises a more general question: can ascending auctions solve any combinatorialauction problem that is solvable using a descending auction (and vice versa)?",
                "We give negative answers to these questions.",
                "The idea behind the proofs is that the information that the auctioneer can get for free at the beginning of each type of auction is different.23 and non-deterministic iterative auctions: our proof shows that a non-deterministic iterative auction can elicit the kterm XOR valuations with a polynomial number of demand queries, and [7] show that this elicitation must take an exponential number of demand queries. 23 In ascending auctions, the auctioneer can reveal the most valuable bundle (besides M) before she starts raising the prices, thus she can use this information for adaptively choose the subsequent queries.",
                "In descending auctions, one can easily find the bundle with the highest average per-item <br>price</br>, keeping all other bundles with non-positive utilities, and use this information in the adaptive <br>price</br> change.",
                "Proposition 5.7.",
                "There are classes that cannot be elicited (fully elicited) by ascending item-<br>price</br> auctions, but can be elicited (resp. fully elicited) with a descending item-<br>price</br> auction.",
                "Proposition 5.8.",
                "There are classes that cannot be elicited (fully elicited) by item-<br>price</br> descending auctions, but can be elicited (resp. fully elicited) by item-<br>price</br> ascending auctions.",
                "Deterministic vs. Non-Deterministic Auctions: Nondeterministic ascending auctions can be viewed as auctions where some benevolent teacher that has complete information guides the auctioneer on how she should raise the prices.",
                "That is, preference elicitation can be done by a non-deterministic ascending auction, if there is some ascending trajectory that elicits enough information for determining the optimal allocation (and verifying that it is indeed optimal).",
                "We show that non-deterministic ascending auctions are more powerful than deterministic ascending auctions: Proposition 5.9.",
                "Some classes can be elicited (fully elicited) by an item-<br>price</br> non-deterministic ascending auction, but cannot be elicited (resp. fully elicited) by item-<br>price</br> deterministic ascending auctions.",
                "Anonymous vs. Non-Anonymous Auctions: As will be shown in Section 6, the power of anonymous and nonanonymous bundle-<br>price</br> ascending auctions differs significantly.",
                "Here, we show that a difference also exists for itemprice ascending auctions.",
                "Proposition 5.10.",
                "Some classes cannot be elicited by anonymous item-<br>price</br> ascending auctions, but can be elicited by a non-anonymous item-<br>price</br> ascending auction.",
                "Sequential vs.",
                "Simultaneous Auctions: A non-anonymous auction is called simultaneous if at each stage, the <br>price</br> of some item is raised by for every bidder.",
                "The auctioneer can use the information gathered until each stage, in all the personalized trajectories, to determine the next queries.",
                "A non-anonymous auction is called sequential if the auctioneer performs an auction for each bidder separately, in sequential order.",
                "The auctioneer can determine the next query based on the information gathered in the trajectories completed so far and on the history of the current trajectory.",
                "Proposition 5.11.",
                "There are classes that cannot be elicited by simultaneous non-anonymous item-<br>price</br> ascending auctions, but can be elicited by a sequential non-anonymous item-<br>price</br> ascending auction.",
                "Adaptive vs.",
                "Oblivious Auctions: If the auctioneer determines the queries regardless of the bidders responses (i.e., the queries are predefined) we say that the auction is oblivious.",
                "Otherwise, the auction is adaptive.",
                "We prove that an adaptive behaviour of the auctioneer may be beneficial.",
                "Proposition 5.12.",
                "There are classes that cannot be elicited (fully elicited) using oblivious item-<br>price</br> ascending auctions, but can be elicited (resp. fully elicited) by an adaptive item-<br>price</br> ascending auction. 40 5.5 Preference Elicitation vs. Full Elicitation Preference elicitation and full elicitation are closely related problems.",
                "If full elicitation is easy (e.g., in polynomial time) then clearly elicitation is also easy (by a nonanonymous auction, simply by learning all the valuations separately24 ).",
                "On the other hand, there are examples where preference elicitation is considered easy but learning is hard (typically, elicitation requires smaller amount of information; some examples can be found in [7]).",
                "The tatonnement algorithms by [22, 12, 16] end up with the optimal allocation for substitutes valuations.25 We prove that we cannot fully elicit substitutes valuations (or even their sub-class of OXS valuations defined in [25]), even for a single bidder, by an item-<br>price</br> ascending auction (although the optimal allocation can be found by an ascending auction for any number of bidders!).",
                "Theorem 5.13.",
                "Substitute valuations cannot be fully elicited by ascending item-<br>price</br> auctions.",
                "Moreover, they cannot be fully elicited by any m 2 ascending trajectories (m > 3).",
                "Whether substitutes valuations have a compact representation (i.e., polynomial in the number of goods) is an important open question.",
                "As a step in this direction, we show that its sub-class of OXS valuations does have a compact representation: every OXS valuation can be represented by at most m2 values.26 Lemma 5.14.",
                "Any OXS valuation can be represented by no more than m2 values. 6.",
                "BUNDLE-<br>price</br> ASCENDING AUCTIONS All the ascending auctions in the literature that are proved to find the optimal allocation for unrestricted valuations are non-anonymous bundle-<br>price</br> auctions (iBundle(3) by Parkes and Ungar [37] and the Proxy Auction by Ausubel and Milgrom [3]).",
                "Yet, several anonymous ascending auctions have been suggested (e.g., AkBA [42], [21] and iBundle(2) [37]).",
                "In this section, we prove that anonymous bundle-<br>price</br> ascending auctions achieve poor results in the worst-case.",
                "We also show that the family of non-anonymous bundleprice ascending auctions can run exponentially slower than simple item-<br>price</br> ascending auctions. 6.1 Limitations of Anonymous Bundle-<br>price</br> Ascending Auctions We present a class of valuations that cannot be elicited by anonymous bundle-price ascending auctions.",
                "These valuations are described in Figure 7.",
                "The basic idea: for determining some unknown value of one bidder we must raise 24 Note that an anonymous ascending auction cannot necessarily elicit a class that can be fully elicited by an ascending auction. 25 Substitute valuations are defined, e.g., in [16].",
                "Roughly speaking, a bidder with a substitute valuation will continue demand a certain item after the <br>price</br> of some other items was increased.",
                "For completeness, we present in the full paper [9] a proof for the efficiency of such auctions for substitutes valuations. 26 A unit-demand valuation is an XOR valuation in which all the atomic bundles are singletons.",
                "OXS valuations can be interpreted as an aggregation (OR) of any number of unit-demand bidders.",
                "Bid. 1 v1(ac) = 2 v1(bd) = 2 v1(cd) = α ∈ (0, 1) Bid. 2 v2(ab) = 2 v2(cd) = 2 v2(bd) = β ∈ (0, 1) Figure 7: Anonymous ascending bundle-<br>price</br> auctions cannot determine the optimal allocation for this class of valuations. a <br>price</br> of a bundle that should be demanded by the other bidder in the future.",
                "Theorem 6.1.",
                "Some classes of valuations cannot be elicited by anonymous bundle-<br>price</br> ascending auctions.",
                "Proof.",
                "Consider a pair of XOR valuations as described in Figure 7.",
                "For finding the optimal allocation we must know which value is greater between α and β.27 However, we cannot learn the value of both α and β by a single ascending trajectory: assume w.l.o.g. that bidder 1 demands cd before bidder 2 demands bd (no information will be elicited if none of these happens).",
                "In this case, the <br>price</br> for bd must be greater than 1 (otherwise, bidder 1 prefers bd to cd).",
                "Thus, bidder 2 will never demand the bundle bd, and no information will be elicited about β.",
                "The valuations described in the proof of Theorem 6.1 can be easily elicited by a non-anonymous item-<br>price</br> ascending auction.",
                "On the other hand, the valuations in Figure 6 can be easily elicited by an anonymous bundle-<br>price</br> ascending auction.",
                "We conclude that the power of these two families of ascending auctions is incomparable.",
                "We strengthen the impossibility result above by showing that anonymous bundle-<br>price</br> auctions cannot even achieve better than a min{O(n), O( √ m)}-approximation for the social welfare.",
                "This approximation ratio can be achieved with polynomial communication, and specifically with a polynomial number of item-<br>price</br> demand queries.28 Theorem 6.2.",
                "An anonymous bundle-<br>price</br> ascending auction cannot guarantee better than a min{ n 2 , √ m 2 } approximation for the optimal welfare.",
                "Proof. (Sketch) Assume we have n bidders and n2 items for sale, and that n is prime.",
                "We construct n2 distinct bundles with the following properties: for each bidder, we define a partition Si = (Si 1, ..., Si n) of the n2 items to n bundles, such that any two bundles from different partitions intersect.",
                "In the full paper, part II [9] we show an explicit construction using the properties of linear functions over finite fields.",
                "The rest of the proof is independent of the specific construction.",
                "Using these n2 bundles we construct a hard-to-elicit class.",
                "Every bidder has an atomic bid, in his XOR valuation, for each of these n2 bundles.",
                "A bidder i has a value of 2 for any bundle Si j in his partition.",
                "For all bundles in the other partitions, he has a value of either 0 or of 1 − δ, and these values are unknown to the auctioneer.",
                "Since every pair of bundles from different partitions intersect, only one bidder can receive a bundle with a value of 2. 27 If α > β, the optimal allocation will allocate cd to bidder 1 and ab to bidder 2.",
                "Otherwise, we give bd to bidder 2 and ac to bidder 1.",
                "Note that both bidders cannot gain a value of 2 in the same allocation, due to the intersections of the high-valued bundles. 28 Note that bundle-<br>price</br> queries may use exponential communication, thus the lower bound of [32] does not hold. 41 Non-anonymous Bundle-<br>price</br> Economically-Efficient Ascending Auctions: Initialization: All prices are initialized to zero (non-anonymous bundle prices).",
                "Repeat: - Each bidder submits a bundle that maximizes his utility under his current personalized prices. - The auctioneer calculates a provisional allocation that maximizes his revenue under the current prices. - The prices of bundles that were demanded by losing bidders are increased by .",
                "Finally: Terminate when the provisional allocation assigns to each bidder the bundle he demanded.",
                "Figure 8: Auctions from this family (denoted by NBEA auctions) are known to achieve the optimal welfare.",
                "No bidder will demand a low-valued bundle, as long as the <br>price</br> of one of his high-valued bundles is below 1 (and thus gain him a utility greater than 1).",
                "Therefore, for eliciting any information about the low-valued bundles, the auctioneer should first arbitrarily choose a bidder (w.l.o.g bidder 1) and raise the prices of all the bundles (S1 1 , ..., S1 n) to be greater than 1.",
                "Since the prices cannot decrease, the other bidders will clearly never demand these bundles in future stages.",
                "An adversary may choose the values such that the low values of all the bidders for the bundles not in bidder 1s partition are zero (i.e., vi(S1 j ) = 0 for every i = 1 and every j), however, allocating each bidder a different bundle from bidder 1s partition, might achieve a welfare of n+1−(n−1)δ (bidder 1s valuation is 2, and 1 − δ for all other bidders); If these bundles were wrongly allocated, only a welfare of 2 might be achieved (2 for bidder 1s high-valued bundle, 0 for all other bidders).",
                "At this point, the auctioneer cannot have any information about the identity of the bundles with the non-zero values.",
                "Therefore, an adversary can choose the values of the bundles received by bidders 2, ..., n in the final allocation to be zero.",
                "We conclude that anonymous bundleprice auctions cannot guarantee a welfare greater than 2 for this class, where the optimal welfare can be arbitrarily close to n + 1. 6.2 Bundle Prices vs.",
                "Item Prices The core of the auctions in [37, 3] is the scheme described in Figure 8 (in the spirit of [35]) for auctions with nonanonymous bundle prices.",
                "Auctions from this scheme end up with the optimal allocation for any class of valuations.",
                "We denote this family of ascending auctions as NBEA auctions29 .",
                "NBEA auctions can elicit k-term XOR valuations by a polynomial (in k) number of steps , although the elicitation of such valuations may require an exponential number of item-<br>price</br> queries ([7]), and item-<br>price</br> ascending auctions cannot do it at all (Theorem 5.4).",
                "Nevertheless, we show that NBEA auctions (and in particular, iBundle(3) and the proxy auction) are sometimes inferior to simple item-<br>price</br> demand auctions.",
                "This may justify the use of hybrid auctions that use both linear and non-linear prices (e.g., the clock-proxy auction [10]).",
                "We show that auctions from this 29 Non-anonymous Bundle-<br>price</br> economically Efficient Ascending auctions.",
                "For completeness, we give in the full paper [9] a simple proof for the efficiency (up to an ) of auctions of this scheme . family may use an exponential number of queries even for determining the optimal allocation among two bidders with additive valuations30 , where such valuations can be elicited by a simple item-<br>price</br> ascending auction.",
                "We actually prove this property for a wider class of auctions we call conservative auctions.",
                "We also observe that in conservative auctions, allowing the bidders to submit all the bundles in their demand sets ensures that the auction runs a polynomial number of steps - if L is not too high (but with exponential communication, of course).",
                "An ascending auction is called conservative if it is nonanonymous, uses bundle prices initialized to zero and at every stage the auctioneer can only raise prices of bundles demanded by the bidders until this stage.",
                "In addition, each bidder can only receive bundles he demanded during the auction.",
                "Note that NBEA auctions are by definition conservative.",
                "Proposition 6.3.",
                "If every bidder demands a single bundle in each step of the auction, conservative auctions may run for an exponential number of steps even for additive valuations.",
                "If the bidders are allowed to submit all the bundles in their demand sets in each step, then conservative auctions can run in a polynomial number of steps for any profile of valuations, as long as the maximal valuation L is polynomial in m, n and 1 δ .",
                "Acknowledgments: The authors thank Moshe Babaioff, Shahar Dobzinski, Ron Lavi, Daniel Lehmann, Ahuva Mualem, David Parkes, Michael Schapira and Ilya Segal for helpful discussions.",
                "Supported by grants from the Israeli Academy of Sciences and the USAIsrael Binational Science Foundation. 7.",
                "REFERENCES [1] amazon.",
                "Web Page: http://www.amazon.com. [2] ebay.",
                "Web Page: http://www.ebay.com. [3] L. M. Ausubel and P. R. Milgrom.",
                "Ascending auctions with package bidding.",
                "Frontiers of Theoretical Economics, 1:1-42, 2002. [4] Lawrence Ausubel.",
                "An efficient dynamic auction for heterogeneous commodities, 2000.",
                "Working paper, University of Maryland. [5] Yair Bartal, Rica Gonen, and Noam Nisan.",
                "Incentive compatible multi unit combinatorial auctions.",
                "In TARK 03, 2003. [6] Alejandro Bertelsen.",
                "Substitutes valuations and m -concavity.",
                "M.Sc.",
                "Thesis, The Hebrew University of Jerusalem, 2005. [7] Avrim Blum, Jeffrey C. Jackson, Tuomas Sandholm, and Martin A. Zinkevich.",
                "Preference elicitation and query learning.",
                "Journal of Machine Learning Research, 5:649-667, 2004. [8] Liad Blumrosen and Noam Nisan.",
                "On the computational power of iterative auctions I: demand queries.",
                "Working paper, The Hebrew University of 30 Valuations are called additive if for any disjoint bundles A and B, v(A ∪ B) = v(A) + v(B).",
                "Additive valuations are both sub-additive and super-additive and are determined by the m values assigned for the singletons. 42 Jerusalem.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [9] Liad Blumrosen and Noam Nisan.",
                "On the computational power of iterative auctions II: ascending auctions.",
                "Working paper, The Hebrew University of Jerusalem.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [10] P. Cramton, L.M.",
                "Ausubel, and P.R.",
                "Milgrom.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 5.",
                "The Clock-Proxy Auction: A Practical Combinatorial Auction Design.",
                "MIT Press.",
                "Forthcoming, 2005. [11] P. Cramton, Y. Shoham, and R. Steinberg (Editors).",
                "Combinatorial Auctions.",
                "MIT Press.",
                "Forthcoming, 2005. [12] G. Demange, D. Gale, and M. Sotomayor.",
                "Multi-item auctions.",
                "Journal of Political Economy, 94:863-872, 1986. [13] Shahar Dobzinski, Noam Nisan, and Michael Schapira.",
                "Approximation algorithms for cas with complement-free bidders.",
                "In The 37th ACM symposium on theory of computing (STOC)., 2005. [14] Shahar Dobzinski and Michael Schapira.",
                "Optimal upper and lower approximation bounds for k-duplicates combinatorial auctions.",
                "Working paper, the Hebrew University. [15] Combinatorial bidding conference.",
                "Web Page: http://wireless.fcc.gov/auctions/conferences/combin2003. [16] Faruk Gul and Ennio Stacchetti.",
                "Walrasian equilibrium with gross substitutes.",
                "Journal of Economic Theory, 87:95 - 124, 1999. [17] Faruk Gul and Ennio Stacchetti.",
                "The english auction with differentiated commodities.",
                "Journal of Economic Theory, 92(3):66 - 95, 2000. [18] J. Hastad.",
                "Almost optimal lower bounds for small depth circuits.",
                "In 18th STOC, pages 6-20, 1986. [19] Ron Holzman, Noa Kfir-Dahav, Dov Monderer, and Moshe Tennenholtz.",
                "Bundling equilibrium in combinatrial auctions.",
                "Games and Economic Behavior, 47:104-123, 2004. [20] H. Karloff.",
                "Linear Programming.",
                "Birkh¨auser Verlag, 1991. [21] Frank Kelly and Richard Steinberg.",
                "A combinatorial auction with multiple winners for universal service.",
                "Management Science, 46:586-596, 2000. [22] A.S. Kelso and V.P.",
                "Crawford.",
                "Job matching, coalition formation, and gross substitute.",
                "Econometrica, 50:1483-1504, 1982. [23] Subhash Khot, Richard J. Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Inapproximability results for combinatorial auctions with submodular utility functions.",
                "In Working paper., 2004. [24] Sebastien Lahaie and David C. Parkes.",
                "Applying learning algorithms to preference elicitation.",
                "In EC 04. [25] Benny Lehmann, Daniel Lehmann, and Noam Nisan.",
                "Combinatorial auctions with decreasing marginal utilities.",
                "In ACM conference on electronic commerce.",
                "To appear, Games and Economic Behaviour., 2001. [26] D. Lehmann, L. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "JACM, 49(5):577-602, Sept. 2002. [27] A. Mas-Collel, W. Whinston, and J.",
                "Green.",
                "Microeconomic Theory.",
                "Oxford university press, 1995. [28] Debasis Mishra and David Parkes.",
                "Ascending <br>price</br> vickrey auctions using primal-dual algorithms., 2004.",
                "Working paper, Harvard University. [29] Noam Nisan.",
                "The communication complexity of approximate set packing and covering.",
                "In ICALP 2002. [30] Noam Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In ACM Conference on Electronic Commerce, 2000. [31] Noam Nisan.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 1.",
                "Bidding Languages.",
                "MIT Press.",
                "Forthcoming, 2005. [32] Noam Nisan and Ilya Segal.",
                "The communication requirements of efficient allocations and supporting prices, 2003.",
                "Working paper.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html Forthcoming in the Journal of Economic Theory. [33] Noam Nisan and Ilya Segal.",
                "Exponential communication inefficiency of demand queries, 2004.",
                "Working paper.",
                "Available from http://www.stanford.edu/ isegal/queries1.pdf. [34] D. C. Parkes and L. H. Ungar.",
                "An ascending-<br>price</br> generalized vickrey auction.",
                "Tech.",
                "Rep., Harvard University, 2002. [35] David Parkes.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 3.",
                "Iterative Combinatorial Auctions.",
                "MIT Press.",
                "Forthcoming, 2005. [36] David C. Parkes.",
                "Iterative combinatorial auctions: Achieving economic and computational efficiency.",
                "Ph.D. Thesis, Department of Computer and Information Science, University of Pennsylvania., 2001. [37] David C. Parkes and Lyle H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In AAAI/IAAI, pages 74-81, 2000. [38] Ariel Rubinstein.",
                "Why are certain properties of binary relations relatively more common in natural languages.",
                "Econometrica, 64:343-356, 1996. [39] Tuomas Sandholm.",
                "Algorithm for optimal winner determination in combinatorial auctions.",
                "In Artificial Intelligence, volume 135, pages 1-54, 2002. [40] P. Santi, V. Conitzer, and T. Sandholm.",
                "Towards a characterization of polynomial preference elicitation with value queries in combinatorial auctions.",
                "In The 17th Annual Conference on Learning Theory, 2004. [41] Ilya Segal.",
                "The communication requirements of social choice rules and supporting budget sets, 2004.",
                "Working paper.",
                "Available from http://www.stanford.edu/ isegal/rules.pdf. [42] P.R.",
                "Wurman and M.P.",
                "Wellman.",
                "Akba: A progressive, anonymous-<br>price</br> combinatorial auction.",
                "In Second ACM Conference on Electronic Commerce, 2000. [43] Martin A. Zinkevich, Avrim Blum, and Tuomas Sandholm.",
                "On polynomial-time preference elicitation with value queries.",
                "In ACM Conference on Electronic Commerce, 2003. 43"
            ],
            "original_annotated_samples": [
                "We first focus on auctions that use a polynomial number of demand queries, and then we analyze the power of different kinds of ascending-<br>price</br> auctions.",
                "Some auctions, called item-<br>price</br> or linear-<br>price</br> auctions, specify a price pi for each item, and the price of any given bundle S is always linear, p(S) = P i∈S pi.",
                "Other auctions, called bundle-<br>price</br> auctions, allow specifying arbitrary (non-linear) prices p(S) for bundles.",
                "In ascending-<br>price</br> auctions, forcing prices to be anonymous may be a significant restriction.",
                "This strengthens our lower bounds, but means that the upper bounds require evaluation from this perspective also before being used in any real combinatorial auction.1 The second part of this paper studies the power of ascending -<br>price</br> auctions."
            ],
            "translated_annotated_samples": [
                "Primero nos enfocamos en subastas que utilizan un número polinomial de consultas de demanda, y luego analizamos el poder de diferentes tipos de subastas de <br>precio</br> ascendente.",
                "Algunas subastas, llamadas subastas de <br>precio</br> por artículo o de <br>precio</br> lineal, especifican un precio pi para cada artículo, y el precio de cualquier conjunto dado S siempre es lineal, p(S) = Σ i∈S pi.",
                "Otras subastas, llamadas subastas de <br>precio</br> por paquete, permiten especificar <br>precio</br>s arbitrarios (no lineales) p(S) para los paquetes.",
                "En las subastas de <br>precio</br> ascendente, obligar a que los <br>precio</br>s sean anónimos puede ser una restricción significativa.",
                "Esto refuerza nuestros límites inferiores, pero significa que los límites superiores también requieren evaluación desde esta perspectiva antes de ser utilizados en cualquier subasta combinatoria real. La segunda parte de este documento estudia el poder de las subastas de <br>precio</br> ascendente."
            ],
            "translated_text": "En el Poder Computacional de Subastas Iterativas∗ [Resumen Extendido] Liad Blumrosen Escuela de Ingeniería e Informática Universidad Hebrea de Jerusalén Jerusalén, Israel liad@cs.huji.ac.il Noam Nisan Escuela de Ingeniería e Informática Universidad Hebrea de Jerusalén Jerusalén, Israel noam@cs.huji.ac.il RESUMEN Nos embarcamos en un análisis sistemático del poder y limitaciones de las subastas combinatorias iterativas. La mayoría de las subastas combinatorias iterativas existentes se basan en sugerir precios repetidamente para paquetes de artículos y consultar a los postores sobre su demanda bajo estos precios. Demostramos un gran número de resultados que muestran los límites de lo que se puede lograr mediante subastas de este tipo. Primero nos enfocamos en subastas que utilizan un número polinomial de consultas de demanda, y luego analizamos el poder de diferentes tipos de subastas de <br>precio</br> ascendente. Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía Términos Generales Algoritmos, Economía, Teoría 1. Las subastas combinatorias han recibido recientemente mucha atención. En una subasta combinatoria, un conjunto M de m artículos no idénticos se venden en una sola subasta a n postores competidores. Los postores tienen preferencias con respecto a los lotes de artículos que pueden recibir. Las preferencias del postor i están especificadas por una función de valoración vi: 2M → R+, donde vi(S) denota el valor que el postor i asigna a ganar el conjunto de artículos S. Suponemos disposición libre, es decir, que los vi son monótonos no decrecientes. El objetivo habitual del subastador es optimizar el bienestar social P i vi(Si), donde la asignación S1...Sn debe ser una partición de los artículos. Las aplicaciones incluyen muchos problemas complejos de asignación de recursos y, de hecho, las subastas combinatorias pueden ser vistas como la abstracción común de muchos problemas complejos de asignación de recursos. Las subastas combinatorias enfrentan dificultades económicas y computacionales y son un problema central en la frontera recientemente activa de la teoría económica y la informática. Un libro próximo [11] aborda muchos de los problemas involucrados en el diseño e implementación de subastas combinatorias. El diseño de una subasta combinatoria implica muchas consideraciones. En este artículo nos enfocamos en un solo tema central: la comunicación entre los oferentes y el mecanismo de asignación - la obtención de preferencias. Transferir toda la información sobre las preferencias de los licitadores requiere una cantidad de comunicación inasumible (exponencial en m). Por lo tanto, las subastas de revelación directa en las que los postores simplemente declaran sus preferencias al mecanismo solo son prácticas para tamaños de subasta muy pequeños o para familias muy limitadas de preferencias de postores. Por lo tanto, hemos visto una multitud de subastas iterativas sugeridas en las que el protocolo de subasta interactúa repetidamente con los diferentes postores, con el objetivo de obtener de manera adaptativa suficiente información sobre las preferencias de los postores para poder encontrar una asignación buena (óptima o cercana a óptima). La mayoría de las subastas iterativas sugeridas proceden manteniendo precios temporales para los lotes de artículos y consultando repetidamente a los postores sobre sus preferencias entre los lotes bajo el conjunto actual de precios, y luego actualizando el conjunto de precios de los lotes según las respuestas recibidas (por ejemplo, [22, 12, 17, 37, 3]). Efectivamente, una subasta iterativa de este tipo accede a las preferencias de los postores haciendo repetidamente el siguiente tipo de consulta de demanda a los postores: Consulta al postor i: un vector de precios de paquetes p = {p(S)}S⊆M; Respuesta: un paquete de artículos S ⊆ M que maximiza vi(S) − p(S). Estos tipos de consultas son muy naturales en un entorno económico, ya que capturan las preferencias reveladas de los postores. Algunas subastas, llamadas subastas de <br>precio</br> por artículo o de <br>precio</br> lineal, especifican un precio pi para cada artículo, y el precio de cualquier conjunto dado S siempre es lineal, p(S) = Σ i∈S pi. Otras subastas, llamadas subastas de <br>precio</br> por paquete, permiten especificar <br>precio</br>s arbitrarios (no lineales) p(S) para los paquetes. Otra diferenciación importante entre los modelos de subastas iterativas se basa en si utilizan precios anónimos o no anónimos: En algunas subastas, los precios que se presentan a los postores son siempre los mismos (precios anónimos). En otras subastas (no anónimas), diferentes postores pueden enfrentar diferentes vectores de precios (discriminatorios). En las subastas de <br>precio</br> ascendente, obligar a que los <br>precio</br>s sean anónimos puede ser una restricción significativa. En este artículo, nos embarcamos en un análisis sistemático del poder computacional de las subastas iterativas basadas en consultas de demanda. No buscamos presentar subastas para uso práctico, sino más bien entender las limitaciones y posibilidades de este tipo de subastas. En la primera parte de este documento, nuestra pregunta principal es ¿qué se puede hacer utilizando un número polinómico de este tipo de consultas? Es decir, polinomial en los parámetros principales del problema: n, m y el número de bits t necesarios para representar un único valor vi(S). Ten en cuenta que desde un punto de vista algorítmico estamos hablando de algoritmos de tiempo sublineal: el tamaño de la entrada aquí es realmente n(2m − 1) números, las descripciones de las funciones de valoración de todos los postores. Hay dos aspectos de eficiencia computacional en estos contextos: el primero es la comunicación con los postores, es decir, la cantidad de consultas realizadas, y el segundo es la usual tratabilidad computacional. Nuestros límites inferiores dependerán solo del número de consultas y se mantendrán independientemente de cualquier suposición computacional como P = NP. Nuestros límites superiores siempre serán computacionalmente eficientes tanto en términos del número de consultas como en términos de computación regular. Como se mencionó, este artículo se centra en el único aspecto de la obtención de preferencias y en sus consecuencias computacionales, sin abordar cuestiones de incentivos. Esto refuerza nuestros límites inferiores, pero significa que los límites superiores también requieren evaluación desde esta perspectiva antes de ser utilizados en cualquier subasta combinatoria real. La segunda parte de este documento estudia el poder de las subastas de <br>precio</br> ascendente. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "polynomial demand": {
            "translated_key": "demanda polinómica",
            "is_in_text": false,
            "original_annotated_sentences": [
                "On the Computational Power of Iterative Auctions∗ [Extended Abstract] Liad Blumrosen School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel liad@cs.huji.ac.il Noam Nisan School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel noam@cs.huji.ac.il ABSTRACT We embark on a systematic analysis of the power and limitations of iterative combinatorial auctions.",
                "Most existing iterative combinatorial auctions are based on repeatedly suggesting prices for bundles of items, and querying the bidders for their demand under these prices.",
                "We prove a large number of results showing the boundaries of what can be achieved by auctions of this kind.",
                "We first focus on auctions that use a polynomial number of demand queries, and then we analyze the power of different kinds of ascending-price auctions.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION Combinatorial auctions have recently received a lot of attention.",
                "In a combinatorial auction, a set M of m nonidentical items are sold in a single auction to n competing bidders.",
                "The bidders have preferences regarding the bundles of items that they may receive.",
                "The preferences of bidder i are specified by a valuation function vi : 2M → R+ , where vi(S) denotes the value that bidder i attaches to winning the bundle of items S. We assume free disposal, i.e., that the vis are monotone non-decreasing.",
                "The usual goal of the auctioneer is to optimize the social welfare P i vi(Si), where the allocation S1...Sn must be a partition of the items.",
                "Applications include many complex resource allocation problems and, in fact, combinatorial auctions may be viewed as the common abstraction of many complex resource allocation problems.",
                "Combinatorial auctions face both economic and computational difficulties and are a central problem in the recently active border of economic theory and computer science.",
                "A forthcoming book [11] addresses many of the issues involved in the design and implementation of combinatorial auctions.",
                "The design of a combinatorial auction involves many considerations.",
                "In this paper we focus on just one central issue: the communication between bidders and the allocation mechanism - preference elicitation.",
                "Transferring all information about bidders preferences requires an infeasible (exponential in m) amount of communication.",
                "Thus, direct revelation auctions in which bidders simply declare their preferences to the mechanism are only practical for very small auction sizes or for very limited families of bidder preferences.",
                "We have therefore seen a multitude of suggested iterative auctions in which the auction protocol repeatedly interacts with the different bidders, aiming to adaptively elicit enough information about the bidders preferences as to be able to find a good (optimal or close to optimal) allocation.",
                "Most of the suggested iterative auctions proceed by maintaining temporary prices for the bundles of items and repeatedly querying the bidders as to their preferences between the bundles under the current set of prices, and then updating the set of bundle prices according to the replies received (e.g., [22, 12, 17, 37, 3]).",
                "Effectively, such an iterative auction accesses the bidders preferences by repeatedly making the following type of demand query to bidders: Query to bidder i: a vector of bundle prices p = {p(S)}S⊆M ; Answer: a bundle of items S ⊆ M that maximizes vi(S) − p(S)..",
                "These types of queries are very natural in an economic setting as they capture the revealed preferences of the bidders.",
                "Some auctions, called item-price or linear-price auctions, specify a price pi for each item, and the price of any given bundle S is always linear, p(S) = P i∈S pi.",
                "Other auctions, called bundle-price auctions, allow specifying arbitrary (non-linear) prices p(S) for bundles.",
                "Another important differentiation between models of iterative auctions is 29 based on whether they use anonymous or non-anonymous prices: In some auctions the prices that are presented to the bidders are always the same (anonymous prices).",
                "In other auctions (non-anonymous), different bidders may face different (discriminatory) vectors of prices.",
                "In ascending-price auctions, forcing prices to be anonymous may be a significant restriction.",
                "In this paper, we embark on a systematic analysis of the computational power of iterative auctions that are based on demand queries.",
                "We do not aim to present auctions for practical use but rather to understand the limitations and possibilities of these kinds of auctions.",
                "In the first part of this paper, our main question is what can be done using a polynomial number of these types of queries?",
                "That is, polynomial in the main parameters of the problem: n, m and the number of bits t needed for representing a single value vi(S).",
                "Note that from an algorithmic point of view we are talking about sub-linear time algorithms: the input size here is really n(2m − 1) numbers - the descriptions of the valuation functions of all bidders.",
                "There are two aspects to computational efficiency in these settings: the first is the communication with the bidders, i.e., the number of queries made, and the second is the usual computational tractability.",
                "Our lower bounds will depend only on the number of queriesand hold independently of any computational assumptions like P = NP.",
                "Our upper bounds will always be computationally efficient both in terms of the number of queries and in terms of regular computation.",
                "As mentioned, this paper concentrates on the single aspect of preference elicitation and on its computational consequences and does not address issues of incentives.",
                "This strengthens our lower bounds, but means that the upper bounds require evaluation from this perspective also before being used in any real combinatorial auction.1 The second part of this paper studies the power of ascending -price auctions.",
                "Ascending auctions are iterative auctions where the published prices cannot decrease in time.",
                "In this work, we try to systematically analyze what do the differences between various models of ascending auctions mean.",
                "We try to answer the following questions: (i) Which models of ascending auctions can find the optimal allocation, and for which classes of valuations? (ii) In cases where the optimal allocation cannot be determined by ascending auctions, how well can such auctions approximate the social welfare? (iii) How do the different models for ascending auctions compare?",
                "Are some models computationally stronger than others?",
                "Ascending auctions have been extensively studied in the literature (see the recent survey by Parkes [35]).",
                "Most of this work presented upper bounds, i.e., proposed mechanisms with ascending prices and analyzed their properties.",
                "A result which is closer in spirit to ours, is by Gul and Stacchetti [17], who showed that no item-price ascending auction can always determine the VCG prices, even for substitutes valuations.2 Our framework is more general than the traditional line of research that concentrates on the final allocation and 1 We do observe however that some weak incentive property comes for free in demand-query auctions since myopic players will answer all demand queries truthfully.",
                "We also note that in some cases (but not always!) the incentives issues can be handled orthogonally to the preference elicitation issues, e.g., by using Vickrey-Clarke-Groves (VCG) prices (e.g., [4, 34]). 2 We further discuss this result in Section 5.3.",
                "Iterative auctions Demand auctions Item-price auctions Anonymous price auctions Ascending auctions 1 2 3 4 5 6 97 8 10 Figure 1: The diagram classifies the following auctions according to their properties: (1) The adaptation [12] for Kelso & Crawfords [22] auction. (2) The Proxy Auction [3] by Ausubel & Milgrom. (3) iBundle(3) by Parkes & Ungar [34]. (4) iBundle(2) by Parkes & Ungar [37]. (5) Our descending adaptation for the 2-approximation for submodular valuations by [25] (see Subsection 5.4). (6) Ausubels [4] auction for substitutes valuations. (7) The adaptation by Nisan & Segal [32] of the O( √ m) approximation by [26]. (8) The duplicate-item auction by [5]. (9) Auction for Read-Once formulae by [43]. (10) The AkBA Auction by Wurman & Wellman [42]. payments and in particular, on reaching Walrasian equilibria or Competitive equilibria.",
                "A Walrasian equilibrium3 is known to exist in the case of Substitutes valuations, and is known to be impossible for any wider class of valuations [16].",
                "This does not rule out other allocations by ascending auctions: in this paper we view the auctions as a computational process where the outcome - both the allocation and the payments - can be determined according to all the data elicited throughout the auction; This general framework strengthens our negative results.4 We find the study of ascending auctions appealing for various reasons.",
                "First, ascending auctions are widely used in many real-life settings from the FCC spectrum auctions [15] to almost any e-commerce website (e.g., [2, 1]).",
                "Actually, this is maybe the most straightforward way to sell items: ask the bidders what would they like to buy under certain prices, and increase the prices of over-demanded goods.",
                "Ascending auctions are also considered more intuitive for many bidders, and are believed to increase the trust of the bidders in the auctioneer, as they see the result gradually emerging from the bidders responses.",
                "Ascending auctions also have other desired economic properties, e.g., they incur smaller information revelation (consider, for example, English auctions vs. second-price sealed bid auctions). 1.1 Extant Work Many iterative combinatorial auction mechanisms rely on demand queries (see the survey in [35]).",
                "Figure 1 summa3 A Walrasian equilibrium is vector of item prices for which all the items are sold when each bidder receives a bundle in his demand set. 4 In few recent auction designs (e.g., [4, 28]) the payments are not necessarily the final prices of the auctions. 30 Valuation family Upper bound Reference Lower bound Reference General min(n, O( √ m)) [26], Section 4.2 min(n, m1/2− ) [32] Substitutes 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subadditive O(logm) [13] 2 [13] k-duplicates O(m1/k+1 ) [14] O(m1/k+1 ) [14] Procurement ln m [32] (log m)/2 [29, 32] Figure 2: The best approximation factors currently achievable by computationally-efficient combinatorial auctions, for several classes of valuations.",
                "All lower bounds in the table apply to all iterative auctions (except the one marked by *); all upper bounds in the table are achieved with item-price demand queries. rizes the basic classes of auctions implied by combinations of the above properties and classifies some of the auctions proposed in the literature according to this classification.",
                "For our purposes, two families of these auctions serve as the main motivating starting points: the first is the ascending item-price auctions of [22, 17] that with computational efficiency find an optimal allocation among (gross) substitutes valuations, and the second is the ascending bundleprice auctions of [37, 3] that find an optimal allocation among general valuations - but not necessarily with computational efficiency.",
                "The main lower bound in this area, due to [32], states that indeed, due to inherent communication requirements, it is not possible for any iterative auction to find the optimal allocation among general valuations with sub-exponentially many queries.",
                "A similar exponential lower bound was shown in [32] also for even approximating the optimal allocation to within a factor of m1/2− .",
                "Several lower bounds and upper bounds for approximation are known for some natural classes of valuations - these are summarized in Figure 2.",
                "In [32], the universal generality of demand queries is also shown: any non-deterministic communication protocol for finding an allocation that optimizes the social welfare can be converted into one that only uses demand queries (with bundle prices).",
                "In [41] this was generalized also to nondeterministic protocols for finding allocations that satisfy other natural types of economic requirements (e.g., approximate social efficiency, envy-freeness).",
                "However, in [33] it was demonstrated that this completeness of demand queries holds only in the nondeterministic setting, while in the usual deterministic setting, demand queries (even with bundle prices) may be exponentially weaker than general communication.",
                "Bundle-price auctions are a generalization of (the more natural and intuitive) item-price auctions.",
                "It is known that indeed item-price auctions may be exponentially weaker: a nice example is the case of valuations that are a XOR of k bundles5 , where k is small (say, polynomial).",
                "Lahaie and Parkes [24] show an economically-efficient bundle-price auction that uses a polynomial number of queries whenever k is polynomial.",
                "In contrast, [7] show that there exist valuations that are XORs of k = √ m bundles such that any item-price auction that finds an optimal allocation between them requires exponentially many queries.",
                "These results are part of a recent line of research ([7, 43, 24, 40]) that study the preference elicitation problem in combinatorial auctions and its relation to the full elicitation problem (i.e., learn5 These are valuations where bidders have values for k specific packages, and the value of each bundle is the maximal value of one of these packages that it contains. ing the exact valuations of the bidders).",
                "These papers adapt methods from machine-learning theory to the combinatorialauction setting.",
                "The preference elicitation problem and the full elicitation problem relate to a well studied problem in microeconomics known as the integrability problem (see, e.g., [27]).",
                "This problem studies if and when one can derive the utility function of a consumer from her demand function.",
                "Paper organization: Due to the relatively large number of results we present, we start with a survey of our new results in Section 2.",
                "After describing our formal model in Section 3, we present our results concerning the power of demand queries in Section 4.",
                "Then, we describe the power of item-price ascending auctions (Section 5) and bundle-price ascending auctions (Section 6).",
                "Readers who are mainly interested in the self-contained discussion of ascending auctions can skip Section 4.",
                "Missing proofs from Section 4 can be found in part I of the full paper ([8]).",
                "Missing proofs from Sections 5 and 6 can be found in part II of the full paper ([9]). 2.",
                "A SURVEY OF OUR RESULTS Our systematic analysis is composed of the combination of a rather large number of results characterizing the power and limitations of various classes of auctions.",
                "In this section, we will present an exposition describing our new results.",
                "We first discuss the power of demand-query iterative auctions, and then we turn our attention to ascending auctions.",
                "Figure 3 summarizes some of our main results. 2.1 Demand Queries Comparison of query types We first ask what other natural types of queries could we imagine iterative auctions using?",
                "Here is a list of such queries that are either natural, have been used in the literature, or that we found useful. 1.",
                "Value query: The auctioneer presents a bundle S, the bidder reports his value v(S) for this bundle. 2.",
                "Marginal-value query: The auctioneer presents a bundle A and an item j, the bidder reports how much he is willing to pay for j, given that he already owns A, i.e., v(j|A) = v(A ∪ {j}) − v(A). 3.",
                "Demand query (with item prices): The auctioneer presents a vector of item prices p1...pm; the bidder reports his demand under these prices, i.e., some set S that maximizes v(S) − P i∈S pi.6 6 A tie breaking rule should be specified.",
                "All of our results 31 Communication Constraint Can find an optimal allocation?",
                "Upper bound for welfare approx.",
                "Lower bound for welfare approx.",
                "Item-Price Demand Queries Yes 1 1 Poly.",
                "Communication No [32] min(n, O(m1/2 )) [26] min(n, m1/2− ) [32] Poly.",
                "Item-Price Demand Queries No [32] min(n, O(m1/2 )) min(n, m1/2− ) [32] Poly.",
                "Value Queries No [32] O( m√ log m ) [19] O( m log m ) Anonymous Item-Price AA No - min(O(n), O(m1/2− )) Non-anonymous Item-Price AA No -Anonymous Bundle-Price AA No - min(O(n), O(m1/2− )) Non-anonymous Bundle-Price AA Yes [37] 1 1 Poly Number of Item-Price AA No min(n, O(m1/2 ))Figure 3: This paper studies the economic efficiency of auctions that follow certain communication constraints.",
                "For each class of auctions, the table shows whether the optimal allocation can be achieved, or else, how well can it be approximated (both upper bounds and lower bounds).",
                "New results are highlighted.",
                "Abbreviations: Poly. (Polynomial number/size), AA (ascending auctions). - means that nothing is currently known except trivial solutions. 4.",
                "Indirect-utility query: The auctioneer presents a set of item prices p1...pm, and the bidder responds with his indirect-utility under these prices, that is, the highest utility he can achieve from a bundle under these prices: maxS⊆M (v(S) − P i∈S pi).7 5.",
                "Relative-demand query: the auctioneer presents a set of non-zero prices p1...pm, and the bidder reports the bundle that maximizes his value per unit of money, i.e., some set that maximizes v(S)P i∈S pi .8 Theorem: Each of these queries can be efficiently (i.e., in time polynomial in n, m, and the number of bits of precision t needed to represent a single value vi(S)) simulated by a sequence of demand queries with item prices.",
                "In particular this shows that demand queries can elicit all information about a valuation by simulating all 2m −1 value queries.",
                "We also observe that value queries and marginalvalue queries can simulate each other in polynomial time and that demand queries and indirect-utility queries can also simulate each other in polynomial time.",
                "We prove that exponentially many value queries may be needed in order to simulate a single demand query.",
                "It is interesting to note that for the restricted class of substitutes valuations, demand queries may be simulated by polynomial number of value queries [6].",
                "Welfare approximation The next question that we ask is how well can a computationally-efficient auction that uses only demand queries approximate the optimal allocation?",
                "Two separate obstacles are known: In [32], a lower bound of min(n, m1/2− ), for any fixed > 0, was shown for the approximation factor apply for any fixed tie breaking rule. 7 This is exactly the utility achieved by the bundle which would be returned in a demand query with the same prices.",
                "This notion relates to the Indirect-utility function studied in the Microeconomic literature (see, e.g., [27]). 8 Note that when all the prices are 1, the bidder actually reports the bundle with the highest per-item price.",
                "We found this type of query useful, for example, in the design of the approximation algorithm described in Figure 5 in Section 4.2. obtained using any polynomial amount of communication.",
                "A computational bound with the same value applies even for the case of single-minded bidders, but under the assumption of NP = ZPP [39].",
                "As noted in [32], the computationallyefficient greedy algorithm of [26] can be adapted to become a polynomial-time iterative auction that achieves a nearly matching approximation factor of min(n, O( √ m)).",
                "This iterative auction may be implemented with bundle-price demand queries but, as far as we see, not as one with item prices.",
                "Since in a single bundle-price demand query an exponential number of prices can be presented, this algorithm can have an exponential communication cost.",
                "In Section 4.2, we describe a different item-price auction that achieves the same approximation factor with a polynomial number of queries (and thus with a polynomial communication).",
                "Theorem: There exists a computationally-efficient iterative auction with item-price demand queries that finds an allocation that approximates the optimal welfare between arbitrary valuations to within a factor of min(n, O( √ m)).",
                "One may then attempt obtaining such an approximation factor using iterative auctions that use only the weaker value queries.",
                "However, we show that this is impossible: Theorem: Any iterative auction that uses a polynomial (in n and m) number of value queries can not achieve an approximation factor that is better than O( m log m ).9 Note however that auctions with only value queries are not completely trivial in power: the bundling auctions of Holzman et al. [19] can easily be implemented by a polynomial number of value queries and can achieve an approximation factor of O( m√ log m ) by using O(log m) equi-sized bundles.",
                "We do not know how to close the (tiny) gap between this upper bound and our lower bound.",
                "Representing bundle-prices We then deal with a critical issue with bundle-price auctions that was side-stepped by our model, as well as by all previous works that used bundle-price auctions: how are 9 This was also proven independently by Shahar Dobzinski and Michael Schapira. 32 the bundle prices represented?",
                "For item-price auctions this is not an issue since a query needs only to specify a small number, m, of prices.",
                "In bundle-price auctions that situation is more difficult since there are exponentially many bundles that require pricing.",
                "Our basic model (like all previous work that used bundle prices, e.g., [37, 34, 3]), ignores this issue, and only requires that the prices be determined, somehow, by the protocol.",
                "A finer model would fix a specific language for denoting bundle prices, force the protocol to represent the bundle-prices in this language, and require that the representations of the bundle-prices also be polynomial.",
                "What could such a language for denoting prices for all bundles look like?",
                "First note that specifying a price for each bundle is equivalent to specifying a valuation.",
                "Second, as noted in [31], most of the proposed bidding languages are really just languages for representing valuations, i.e., a syntactic representation of valuations - thus we could use any of them.",
                "This point of view opens up the general issue of which language should be used in bundle-price auctions and what are the implications of this choice.",
                "Here we initiate this line of investigation.",
                "We consider bundle-price auctions where the prices must be given as a XOR-bid, i.e., the protocol must explicitly indicate the price of every bundle whose value is different than that of all of its proper subsets.",
                "Note that all bundle-price auctions that do not explicitly specify a bidding language must implicitly use this language or a weaker one, since without a specific language one would need to list prices for all bundles, perhaps except for trivial ones (those with value 0, or more generally, those with a value that is determined by one of their proper subsets.)",
                "We show that once the representation length of bundle prices is taken into account (using the XOR-language), bundle-price auctions are no more strictly stronger than item-price auctions.",
                "Define the cost of an iterative auction as the total length of the queries and answers used throughout the auction (in the worst case).",
                "Theorem: For some class of valuations, bundle price auctions that use the XOR-language require an exponential cost for finding the optimal allocation.",
                "In contrast, item-price auctions can find the optimal allocation for this class within polynomial cost.10 This put doubts on the applicability of bundle-price auctions like [3, 37], and it may justify the use of hybrid pricing methods such as Ausubel, Cramton and Milgroms Clock-Proxy auction ([10]).",
                "Demand queries and linear programs The winner determination problem in combinatorial auctions may be formulated as an integer program.",
                "In many cases solving the linear-program relaxation of this integer program is useful: for some restricted classes of valuations it finds the optimum of the integer program (e.g., substitute valuations [22, 17]) or helps approximating the optimum (e.g., by randomized rounding [13, 14]).",
                "However, the linear program has an exponential number of variables.",
                "Nisan and Segal [32] observed the surprising fact that despite the ex10 Our proof relies on the sophisticated known lower bounds for constant depth circuits.",
                "We were not able to find an elementary proof. ponential number of variables, this linear program may be solved within polynomial communication.",
                "The basic idea is to solve the dual program using the Ellipsoid method (see, e.g., [20]).",
                "The dual program has a polynomial number of variables, but an exponential number of constraints.",
                "The Ellipsoid algorithm runs in polynomial time even on such programs, provided that a separation oracle is given for the set of constraints.",
                "Surprisingly, such a separation oracle can be implemented using a single demand query (with item prices) to each of the bidders.",
                "The treatment of [32] was somewhat ad-hoc to the problem at hand (the case of substitute valuations).",
                "Here we give a somewhat more general form of this important observation.",
                "Let us call the following class of linear programs generalized-winner-determination-relaxation (GWDR) LPs: Maximize X i∈N,S⊆M wi xi,S vi(S) s.t.",
                "X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M The case where wi = 1, di = 1, qj = 1 (for every i, j) is the usual linear relaxation of the winner determination problem.",
                "More generally, wi may be viewed as the weight given to bidder is welfare, qj may be viewed as the quantity of units of good j, and di may be viewed as duplicity of the number of bidders of type i. Theorem: Any GWDR linear program may be solved in polynomial time (in n, m, and the number of bits of precision t) using only demand queries with item prices.11 2.2 Ascending Auctions Ascending item-price auctions: It is well known that the item-price ascending auctions of Kelso and Crawford [22] and its variants [12, 16] find the optimal allocation as long as all players valuations have the substitutes property.",
                "The obvious question is whether the optimal allocation can be found for a larger class of valuations.",
                "Our main result here is a strong negative result: Theorem: There is a 2-item 2-player problem where no ascending item-price auction can find the optimal allocation.",
                "This is in contrast to both the power of bundle-price ascending auctions and to the power of general item-price demand queries (see above), both of which can always find the optimal allocation and in fact even provide full preference elicitation.",
                "The same proof proves a similar impossibility result for other types of auctions (e.g., descending auctions, non-anonymous auctions).",
                "More extension of this result: • Eliciting some classes of valuations requires an exponential number of ascending item-price trajectories. 11 The produced optimal solution will have polynomial support and thus can be listed fully. 33 • At least k − 1 ascending item-price trajectories are needed to elicit XOR formulae with k terms.",
                "This result is in some sense tight, since we show that any k-term XOR formula can be fully elicited by k−1 nondeterministic (i.e., when some exogenous teacher instructs the auctioneer on how to increase the prices) ascending auctions.12 We also show that item-price ascending auctions and iterative auctions that are limited to a polynomial number of queries (of any kind, not necessarily ascending) are incomparable in their power: ascending auctions, with small enough increments, can elicit the preferences in cases where any polynomial number of queries cannot.",
                "Motivated by several recent papers that studied the relation between eliciting and fully-eliciting the preferences in combinatorial auctions (e.g., [7, 24]), we explore the difference between these problems in the context of ascending auctions.",
                "We show that although a single ascending auction can determine the optimal allocation among any number of bidders with substitutes valuations, it cannot fully-elicit such a valuation even for a single bidder.",
                "While it was shown in [25] that the set of substitutes valuations has measure zero in the space of general valuations, its dimension is not known, and in particular it is still open whether a polynomial amount of information suffices to describe a substitutes valuation.",
                "While our result may be a small step in that direction (a polynomial full elicitation may still be possible with other communication protocols), we note that our impossibility result also holds for valuations in the class OXS defined by [25], valuations that we are able to show have a compact representation.",
                "We also give several results separating the power of different models for ascending combinatorial auctions that use item-prices: we prove, not surprisingly, that adaptive ascending auctions are more powerful than oblivious ascending auctions and that non-deterministic ascending auctions are more powerful than deterministic ascending auctions.",
                "We also compare different kinds of non-anonymous auctions (e.g., simultaneous or sequential), and observe that anonymous bundle-price auctions and non-anonymous item-price auctions are incomparable in their power.",
                "Finally, motivated by Dutch auctions, we consider descending auctions, and how they compare to ascending ones; we show classes of valuations that can be elicited by ascending item-price auctions but not by descending item-price auctions, and vice versa.",
                "Ascending bundle-price auctions: All known ascending bundle-price auctions that are able to find the optimal allocation between general valuations (with free disposal) use non-anonymous prices.",
                "Anonymous ascending-price auctions (e.g., [42, 21, 37]) are only known to be able to find the optimal allocation among superadditive valuations or few other simple classes ([36]).",
                "We show that this is no mistake: Theorem: No ascending auction with anonymous prices can find the optimal allocation between general valuations. 12 Non-deterministic computation is widely used in CS and also in economics (e.g, a Walrasian equilibrium or [38]).",
                "In some settings, deterministic and non-deterministic models have equal power (e.g., computation with finite automata).",
                "This bound is regardless of the running time, and it also holds for descending auctions and non-deterministic auctions.",
                "We strengthen this result significantly by showing that anonymous ascending auctions cannot produce a better than O( √ m) approximation - the approximation ratio that can be achieved with a polynomial number of queries ([26, 32]) and, as mentioned, with a polynomial number of item-price demand queries.",
                "The same lower bound clearly holds for anonymous item-price ascending auctions since such auctions can be simulated by anonymous bundle-price ascending auctions.",
                "We currently do not have any lower bound on the approximation achievable by non-anonymous item-price ascending auctions.",
                "Finally, we study the performance of the existing computationally-efficient ascending auctions.",
                "These protocols ([37, 3]) require exponential time in the worst case, and this is unavoidable as shown by [32].",
                "However, we also observe that these auctions, as well as the whole class of similar ascending bundle-price auctions, require an exponential time even for simple additive valuations.",
                "This is avoidable and indeed the ascending item-price auctions of [22] can find the optimal allocation for these simple valuations with polynomial communication. 3.",
                "THE MODEL 3.1 Discrete Auctions for Continuous Values Our model aims to capture iterative auctions that operate on real-valued valuations.",
                "There is a slight technical difficulty here in bridging the gap between the discrete nature of an iterative auction, and the continuous nature of the valuations.",
                "This is exactly the same problem as in modeling a simple English auction.",
                "There are three standard formal ways to model it: 1.",
                "Model the auction as a continuous process and study its trajectory in time.",
                "For example, the so-called Japanese auction is basically a continuous model of an English model.13 2.",
                "Model the auction as discrete and the valuations as continuously valued.",
                "In this case we introduce a parameter and usually require the auction to produce results that are -close to optimal. 3.",
                "Model the valuations as discrete.",
                "In this case we will assume that all valuations are integer multiples of some small fixed quantity δ, e.g., 1 penny.",
                "All communication in this case is then naturally finite.",
                "In this paper we use the latter formulation and assume that all values are multiples of some δ.",
                "Thus, in some parts of the paper we assume without loss of generality that δ = 1, hence all valuations are integral.",
                "Almost all (if not all) of our results can be translated to the other two models with little effort. 3.2 Valuations A single auctioneer is selling m indivisible non-homogeneous items in a single auction, and let M be the set of these 13 Another similar model is the moving knives model in the cake-cutting literature. 34 items and N be the set of bidders.",
                "Each one of the n bidders in the auction has a valuation function vi : 2m → {0, δ, 2δ, ..., L}, where for every bundle of items S ⊆ M, vi(S) denotes the value of bidder i for the bundle S and is a multiple of δ in the range 0...L. We will sometimes denote the number of bits needed to represent such values in the range 0...L by t = log L. We assume free disposal, i.e., S ⊆ T implies vi(S) ≤ vi(T) and that vi(∅) = 0 for all bidders.",
                "We will mention the following classes of valuations: • A valuation is called sub-modular if for all sets of items A and B we have that v(A ∪ B) + v(A ∩ B) ≤ v(A) + v(B). • A valuation is called super-additive if for all disjoint sets of items A and B we have that v(A∪B) ≥ v(A)+ v(B). • A valuation is called a k-bundle XOR if it can be represented as a XOR combination of at most k atomic bids [30], i.e., if there are at most k bundles Si and prices pi such that for all S, v(S) = maxi|S⊇Si pi.",
                "Such valuations will be denoted by v = (S1 : p1) ⊕ (S2 : p2) ⊕ . . . ⊕ (Sk : pk).14 3.3 Iterative Auctions The auctioneer sets up a protocol (equivalently an algorithm), where at each stage of the protocol some information q - termed the query - is sent to some bidder i, and then bidder i replies with some reply that depends on the query as well as on his own valuation.",
                "In this paper, we assume that we have complete control over the bidders behavior, and thus the protocol also defines a reply function ri(q, vi) that specifies bidder is reply to query q.",
                "The protocol may be adaptive: the query value as well as the queried bidder may depend on the replies received for past queries.",
                "At the end of the protocol, an allocation S1...Sn must be declared, where Si ∩ Sj = ∅ for i = j.",
                "We say that the auction finds an optimal allocation if it finds the allocation that maximizes the social welfareP i vi(Si).",
                "We say that it finds a c-approximation if P i vi(Si) ≥ P i vi(Ti)/c where T1...Tn is an optimal allocation.",
                "The running time of the auction on a given instance of the bidders valuations is the total number of queries made on this instance.",
                "The running time of a protocol is the worst case cost over all instances.",
                "Note that we impose no computational limitations on the protocol or on the players.15 This of course only strengthens our hardness results.",
                "Yet, our positive results will not use this power and will be efficient also in the usual computational sense.",
                "Our goal will be to design computationally-efficient protocols.",
                "We will deem a protocol computationally-efficient if its cost is polynomial in the relevant parameters: the number of bidders n, the number of items m, and t = log L, where L is the largest possible value of a bundle.",
                "However, when we discuss ascending-price auctions and their variants, a computationally-efficient protocol will be required to be 14 For example, v = (abcd : 5) ⊕ (ab : 3) ⊕ (c : 4) denotes the XOR valuation with the terms abcd, ab, c and prices 5, 3, 4 respectively.",
                "For this valuation, v(abcd) = 5, v(abd) = 3, v(abc) = 4. 15 The running time really measures communication costs and not computational running time. pseudo-polynomial, i.e., it should ask a number of queries which is polynomial in m, n and L δ .",
                "This is because that ascending auctions can usually not achieve such running times (consider even the English auction on a single item).16 Note that all of our results give concrete bounds, where the dependence on the parameters is given explicitly; we use the standard big-Oh notation just as a shorthand.",
                "We say than an auction elicits some class V of valuations, if it determines the optimal allocation for any profile of valuations drawn from V ; We say that an auction fully elicits some class of valuations V , if it can fully learn any single valuation v ∈ V (i.e., learn v(S) for every S). 3.4 Demand Queries and Ascending Auctions Most of the paper will be concerned with a common special case of iterative auctions that we term demand auctions.",
                "In such auctions, the queries that are sent to bidders are demand queries: the query specifies a price p(S) ∈ + for each bundle S. The reply of bidder i is simply the set most desired - demanded - under these prices.",
                "Formally, a set S that maximizes vi(S) − p(S).",
                "It may happen that more than one set S maximizes this value.",
                "In which case, ties are broken according to some fixed tie-breaking rule, e.g., the lexicographically first such set is returned.",
                "All of our results hold for any fixed tie-breaking rule.",
                "Ascending auctions are iterative auctions with non-decreasing prices: Definition 1.",
                "In an ascending auction, the prices in the queries to the same bidder can only increase in time.",
                "Formally, let p be a query made for bidder i, and q be a query made for bidder i at a later stage in the protocol.",
                "Then for all sets S, q(S) ≥ p(S).",
                "A similar variant, which we also study and that is also common in real life, is descending auctions, in which prices can only decrease in time.",
                "Note that the term ascending auction refers to an auction with a single ascending trajectory of prices.",
                "It may be useful to define multi-trajectory ascending auctions, in which the prices maybe reset to zero a number of times (see, e.g., [4]).",
                "We consider two main restrictions on the types of allowed demand queries: Definition 2.",
                "Item Prices: The prices in each query are given by prices pj for each item j.",
                "The price of a set S is additive: p(S) = P j∈S pj.",
                "Definition 3.",
                "Anonymous prices: The prices seen by the bidders at any stage in the auction are the same, i.e. whenever a query is made to some bidder, the same query is also made to all other bidders (with the prices unchanged).",
                "In auctions with non-anonymous (discriminatory) prices, each bidder i has personalized prices denoted by pi (S).17 In this paper, all auctions are anonymous unless otherwise specified.",
                "Note that even though in our model valuations are integral (or multiples of some δ), we allow the demand query to 16 Most of the auctions we present may be adapted to run in time polynomial in log L, using a binary-search-like procedure, losing their ascending nature. 17 Note that a non-anonymous auction can clearly be simulated by n parallel anonymous auctions. 35 use arbitrary real numbers in +.",
                "That is, we assume that the increment we use in the ascending auctions may be significantly smaller than δ.",
                "All our hardness results hold for any , even for continuous price increments.",
                "A practical issue here is how will the query be specified: in the general case, an exponential number of prices needs to be sent in a single query.",
                "Formally, this is not a problem as the model does not limit the length of queries in any way - the protocol must simply define what the prices are in terms of the replies received for previous queries.",
                "We look into this issue further in Section 4.3. 4.",
                "THE POWER OF DEMAND QUERIES In this section, we study the power of iterative auctions that use demand queries (not necessarily ascending).",
                "We start by comapring demand queries to other types of queries.",
                "Then, we discuss how well can one approximate the optimal welfare using a polynomial number of demand queries.",
                "We also initiate the study of the representation of bundle-price demand queries, and finally, we show how demand queries help solving the linear-programming relaxation of combinatorial auctions in polynomial time. 4.1 The Power of Different Types of Queries In this section we compare the power of the various types of queries defined in Section 2.",
                "We will present computationally -efficient simulations of these query types using item-price demand queries.",
                "In Section 5.1 we show that these simulations can also be done using item-price ascending auctions.",
                "Lemma 4.1.",
                "A value query can be simulated by m marginalvalue queries.",
                "A marginal-value query can be simulated by two value queries.",
                "Lemma 4.2.",
                "A value query can be simulated by mt demand queries (where t = log L is the number of bits needed to represent a single bundle value).18 As a direct corollary we get that demand auctions can always fully elicit the bidders valuations by simulating all possible 2m − 1 queries and thus elicit enough information for determining the optimal allocation.",
                "Note, however, that this elicitation may be computationally inefficient.",
                "The next lemma shows that demand queries can be exponentially more powerful than value queries.",
                "Lemma 4.3.",
                "An exponential number of value queries may be required for simulating a single demand query.",
                "Indirect utility queries are, however, equivalent in power to demand queries: Lemma 4.4.",
                "An indirect-utility query can be simulated by mt + 1 demand queries.",
                "A demand query can be simulated by m + 1 indirect-utility queries.",
                "Demand queries can also simulate relative-demand queries:19 18 Note that t bundle-price demand queries can easily simulate a value query by setting the prices of all the bundles except S (the bundle with the unknown value) to be L, and performing a binary search on the price of S. 19 Note: although in our model values are integral (our multiples of δ), we allow the query prices to be arbitrary real numV MV D IU RD V 1 2 exp exp exp MV m 1 exp exp exp D mt poly 1 mt+1 poly IU 1 2 m+1 1 poly RD - - - - 1 Figure 4: Each entry in the table specifies how many queries of this row are needed to simulate a query from the relevant column.",
                "Abbreviations: V (value query), MV (marginal-value query), D (demand query), IU (Indirect-utility query), RD (relative demand query).",
                "Lemma 4.5.",
                "Relative-demand queries can be simulated by a polynomial number of demand queries.",
                "According to our definition of relative-demand queries, they clearly cannot simulate even value queries.",
                "Figure 4 summarizes the relations between these query types. 4.2 Approximating the Social Welfare with Value and Demand Queries We know from [32] that iterative combinatorial auctions that only use a polynomial number of queries can not find an optimal allocation among general valuations and in fact can not even approximate it to within a factor better than min{n, m1/2− }.",
                "In this section we ask how well can this approximation be done using demand queries with item prices, or using the weaker value queries.",
                "We show that, using demand queries, the lower bound can be matched, while value queries can only do much worse.",
                "Figure 5 describes a polynomial-time algorithm that achieves a min(n, O( √ m)) approximation ratio.",
                "This algorithm greedily picks the bundles that maximize the bidders per-item value (using relative-demand queries, see Section 4.1).",
                "As a final step, it allocates all the items to a single bidder if it improves the social welfare (this can be checked using value queries).",
                "Since both value queries and relative-demand queries can be simulated by a polynomial number of demand queries with item prices (Lemmas 4.2 and 4.5), this algorithm can be implemented by a polynomial number of demand queries with item prices.20 Theorem 4.6.",
                "The auction described in Figure 5 can be implemented by a polynomial number of demand queries and achieves a min{n, 4 √ m}-approximation for the social welfare.",
                "We now ask how well can the optimal welfare be approximated by a polynomial number of value queries.",
                "First we note that value queries are not completely powerless: In [19] it is shown that if the m items are split into k fixed bundles of size m/k each, and these fixed bundles are auctioned as though each was indivisible, then the social welfare bers, thus we may have bundles with arbitrarily close relative demands.",
                "In this sense the simulation above is only up to any given (and the number of queries is O(log L+log 1 )).",
                "When the relative-demand query prices are given as rational numbers, exact simulation is implied when log is linear in the input length. 20 In the full paper [8], we observe that this algorithm can be implemented by two descending item-price auctions (where we allow removing items along the auction). 36 generated by such an auction is at least m√ k -approximation of that possible in the original auction.",
                "Notice that such an auction can be implemented by 2k − 1 value queries to each bidder - querying the value of each bundle of the fixed bundles.",
                "Thus, if we choose k = log m bundles we get an m√ log m -approximation while still using a polynomial number of queries.",
                "The following lemma shows that not much more is possible using value queries: Lemma 4.7.",
                "Any iterative auction that uses only value queries and distinguishes between k-tuples of 0/1 valuations where the optimal allocation has value 1, and those where the optimal allocation has value k requires at least 2 m k queries.",
                "Proof.",
                "Consider the following family of valuations: for every S, such that |S| > m/2, v(S) = 1, and there exists a single set T, such that for |S| ≤ m/2, v(S) = 1 iff T ⊆ S and v(S) = 0 otherwise.",
                "Now look at the behavior of the protocol when all valuations vi have T = {1...m}.",
                "Clearly in this case the value of the best allocation is 1 since no set of size m 2 or lower has non-zero value for any player.",
                "Fix the sequence of queries and answers received on this k-tuple of valuations.",
                "Now consider the k-tuple of valuations chosen at random as follows: a partition of the m items into k sets T1...Tk each of size m k each is chosen uniformly at random among all such partitions.",
                "Now consider the k-tuple of valuations from our family that correspond to this partition - clearly Ti can be allocated to i, for each i, getting a total value of k. Now look at the protocol when running on these valuations and compare its behavior to the original case.",
                "Note that the answer to a query S to player i differs between the case of Ti and the original case of T = {1...m} only if |S| ≤ m 2 and Ti ⊆ S. Since Ti is distributed uniformly among all sets of size exactly m k , we have that for any fixed query S to player i, where |S| ≤ m 2 , Pr[Ti ⊆ S] ≤ „ |S| m «|Ti| ≤ 2− m k Using the union-bound, if the original sequence of queries was of length less than 2 m k , then with positive probability none of the queries in the sequence would receive a different answer than for the original input tuple.",
                "This is forbidden since the protocol must distinguish between this case and the original case - which cannot happen if all queries receive the same answer.",
                "Hence there must have been at least 2 m k queries for the original tuple of valuations.",
                "We conclude that a polynomial time protocol that uses only value queries cannot obtain a better than O( m log m ) approximation of the welfare: Theorem 4.8.",
                "An iterative auction that uses a polynomial number of value queries cannot achieve better than O( m log m )-approximation for the social welfare.",
                "Proof.",
                "Immediate from Lemma 4.7: achieving any approximation ratio k which is asymptotically greater than m log m needs an exponential number of value queries.",
                "An Approximation Algorithm: Initialization: Let T ← M be the current items for sale.",
                "Let K ← N be the currently participating bidders.",
                "Let S∗ 1 ← ∅, ..., S∗ n ← ∅ be the provisional allocation.",
                "Repeat until T = ∅ or K = ∅: Ask each bidder i in K for the bundle Si that maximizes her per-item value, i.e., Si ∈ argmaxS⊆T vi(S) |S| .",
                "Let i be the bidder with the maximal per-item value, i.e., i ∈ argmaxi∈K vi(Si) |Si| .",
                "Set: s∗ i = si, K = K \\ i, M = M \\ Si Finally: Ask the bidders for their values vi(M) for the grand bundle.",
                "If allocating all the items to some bidder i improves the social welfare achieved so far (i.e., ∃i ∈ N such that vi(M) > P i∈N vi(S∗ i )), then allocate all items to this bidder i.",
                "Figure 5: This algorithm achieves a min{n, 4 √ m}approximation for the social welfare, which is asymptotically the best worst-case approximation possible with polynomial communication.",
                "This algorithm can be implemented with a polynomial number of demand queries. 4.3 The Representation of Bundle Prices In this section we explicitly fix the language in which bundle prices are presented to the bidders in bundle-price auctions.",
                "This language requires the algorithm to explicitly list the price of every bundle with a non-trivial price.",
                "Trivial in this context is a price that is equal to that of one of its proper subsets (which was listed explicitly).",
                "This representation is equivalent to the XOR-language for expressing valuations.",
                "Formally, each query q is given by an expression: q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl).",
                "In this representation, the price demanded for every set S is simply p(S) = max{k=1...l|Sk⊆S}pk.",
                "Definition 4.",
                "The length of the query q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl) is l. The cost of an algorithm is the sum of the lengths of the queries asked during the operation of the algorithm on the worst case input.",
                "Note that under this definition, bundle-price auctions are not necessarily stronger than item-price auctions.",
                "An itemprice query that prices each item for 1, is translated to an exponentially long bundle-price query that needs to specify the price |S| for each bundle S. But perhaps bundle-price auctions can still find optimal allocations whenever itemprice auction can, without directly simulating such queries?",
                "We show that this is not the case: indeed, when the representation length is taken into account, bundle price auctions are sometimes seriously inferior to item price auctions.",
                "Consider the following family of valuations: Each item is valued at 3, except that for some single set S, its value is a bit more: 3|S| + b, where b ∈ {0, 1, 2}.",
                "Note that an item price auction can easily find the optimal allocation between any two such valuations: Set the prices of each item to 3+ ; if the demand sets of the two players are both empty, then b = 0 for both valuations, and an arbitrary allocation is fine.",
                "If one of them is empty and the other non-empty, allocate the non-empty demand set to its bidder, and the rest to the other.",
                "If both demand sets are non-empty then, unless they form an exact partition, we need to see which b is larger, which we can do by increasing the price of a single item in each demand set. 37 We will show that any bundle-price auction that uses only the XOR-language to describe bundle prices requires an exponential cost (which includes the sum of all description lengths of prices) to find an optimal allocation between any two such valuations.",
                "Lemma 4.9.",
                "Every bundle-price auction that uses XORexpressions to denote bundle prices requires 2Ω( √ m) cost in order to find the optimal allocation among two valuations from the above family.",
                "The complication in the proof stems from the fact that using XOR-expressions, the length of the price description depends on the number of bundles whose price is strictly larger than each of their subsets - this may be significantly smaller than the number of bundles that have a non-zero price. (The proof becomes easy if we require the protocol to explicitly name every bundle with non-zero price.)",
                "We do not know of any elementary proof for this lemma (although we believe that one can be found).",
                "Instead we reduce the problem to a well known lower bound in boolean circuit complexity [18] stating that boolean circuits of depth 3 that compute the majority function on m variables require 2Ω( √ m) size. 4.4 Demand Queries and Linear Programming Consider the following linear-programming relaxation for the generalized winner-determination problem in combinatorial auctions (the primal program): Maximize X i∈N,S⊆M wi xi,S vi(S) s.t.",
                "X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M Note that the primal program has an exponential number of variables.",
                "Yet, we will be able to solve it in polynomial time using demand queries to the bidders.",
                "The solution will have a polynomial size support (non-zero values for xi,S), and thus we will be able to describe it in polynomial time.",
                "Here is its dual: Minimize X j∈M qjpj + X i∈N diui s.t. ui + X j∈S pj ≥ wivi(S) ∀i ∈ N, S ⊆ M pi ≥ 0, uj ≥ 0 ∀i ∈ M, j ∈ N Notice that the dual problem has exactly n + m variables but an exponential number of constraints.",
                "Thus, the dual can be solved using the Ellipsoid method in polynomial time - if a separation oracle can be implemented in polynomial time.",
                "Recall that a separation oracle, when given a possible solution, either confirms that it is a feasible solution, or responds with a constraint that is violated by the possible solution.",
                "We construct a separation oracle for solving the dual program, using a single demand query to each of the bidders.",
                "Consider a possible solution (u, p) for the dual program.",
                "We can re-write the constraints of the dual program as: ui/wi ≥ vi(S) − X j∈S pj/wi Now a demand query to bidder i with prices pj/wi reveals exactly the set S that maximizes the RHS of the previous inequality.",
                "Thus, in order to check whether (u, p) is feasible it suffices to (1) query each bidder i for his demand Di under the prices pj/wi; (2) check only the n constraints ui + P j∈Di pj ≥ wivi(Di) (where vi(Di) can be simulated using a polynomial sequence of demand queries as shown in Lemma 4.2).",
                "If none of these is violated then we are assured that (u, p) is feasible; otherwise we get a violated constraint.",
                "What is left to be shown is how the primal program can be solved. (Recall that the primal program has an exponential number of variables.)",
                "Since the Ellipsoid algorithm runs in polynomial time, it encounters only a polynomial number of constraints during its operation.",
                "Clearly, if all other constraints were removed from the dual program, it would still have the same solution (adding constraints can only decrease the space of feasible solutions).",
                "Now take the reduced dual where only the constraints encountered exist, and look at its dual.",
                "It will have the same solution as the original dual and hence of the original primal.",
                "However, look at the form of this dual of the reduced dual.",
                "It is just a version of the primal program with a polynomial number of variables - those corresponding to constraints that remained in the reduced dual.",
                "Thus, it can be solved in polynomial time, and this solution clearly solves the original primal program, setting all other variables to zero. 5.",
                "ITEM-PRICE ASCENDING AUCTIONS In this section we characterize the power of ascending item-price auctions.",
                "We first show that this power is not trivial: such auctions can in general elicit an exponential amount of information.",
                "On the other hand, we show that the optimal allocation cannot always be determined by a single ascending auction, and in some cases, nor by an exponential number of ascending-price trajectories.",
                "Finally, we separate the power of different models of ascending auctions. 5.1 The Power of Item-Price Ascending Auctions We first show that if small enough increments are allowed, a single ascending trajectory of item-prices can elicit preferences that cannot be elicited with polynomial communication.",
                "As mentioned, all our hardness results hold for any increment, even infinitesimal.",
                "Theorem 5.1.",
                "Some classes of valuations can be elicited by item-price ascending auctions, but cannot be elicited by a polynomial number of queries of any kind.",
                "Proof. (sketch) Consider two bidders with v(S) = 1 if |S| > n 2 , v(S) = 0 if |S| < n 2 and every S such that |S| = n 2 has an unknown value from {0, 1}.",
                "Due to [32], determining the optimal allocation here requires exponential communication in the worst case.",
                "Nevertheless, we show (see [9]) that an item-price ascending auction can do it, as long as it can use exponentially small increments.",
                "We now describe another positive result for the power of item-price ascending auctions.",
                "In section 4.1, we showed 38 v(ab) v(a) v(b) Bidder 1 2 α ∈ (0, 1) β ∈ (0, 1) Bidder 2 2 2 2 Figure 6: No item-price ascending auctions can determine the optimal allocation for this class of valuations. that a value query can be simulated with a (truly) polynomial number of item-price demand queries.",
                "Here, we show that every value query can be simulated by a (pseudo) polynomial number of ascending item-price demand queries. (In the next subsection, we show that we cannot always simulate even a pair of value queries using a single item-price ascending auction.)",
                "In the full paper (part II,[9]), we show that we can simulate other types of queries using item-price ascending auctions.",
                "Proposition 5.2.",
                "A value query can be simulated by an item-price ascending auction.",
                "This simulation requires a polynomial number of queries.",
                "Actually, the proof for Proposition 5.2 proves a stronger useful result regarding the information elicited by iterative auctions.",
                "It says that in any iterative auction in which the changes of prices are small enough in each stage (pseudocontinuous auctions), the value of all bundles demanded during the auction can be computed.",
                "The basic idea is that when the bidder moves from demanding some bundle Ti to demanding another bundle Ti+1, there is a point in which she is indifferent between these two bundles.",
                "Thus, knowing the value of some demanded bundle (e.g., the empty set) enables computing the values of all other demanded bundles.",
                "We say that an auction is pseudo-continuous, if it only uses demand queries, and in each step, the price of at most one item is changed by (for some ∈ (0, δ]) with respect to the previous query.",
                "Proposition 5.3.",
                "Consider any pseudo-continuous auction (not necessarily ascending), in which bidder i demands the empty set at least once along the auction.",
                "Then, the value of every bundle demanded by bidder i throughout the auction can be calculated at the end of the auction. 5.2 Limitations of Item-Price Ascending Auctions Although we observed that demand queries can solve any combinatorial auction problem, when the queries are restricted to be ascending, some classes of valuations cannot be elicited nor fully-elicited.",
                "An example for such class of valuations is given in Figure 6.",
                "Theorem 5.4.",
                "There are classes of valuations that cannot be elicited nor fully elicited by any item-price ascending auction.",
                "Proof.",
                "Let bidder 1 have the valuation described in the first row of Figure 6, where α and β are unknown values in (0, 1).",
                "First, we prove that this class cannot be fully elicited by a single ascending auction.",
                "Specifically, an ascending auction cannot reveal the values of both α and β.",
                "As long as pa and pb are both below 1, the bidder will always demand the whole bundle ab: her utility from ab is strictly greater than the utility from either a or b separately.",
                "For example, we show that u1(ab) > u1(a): u1(ab) = 2 − (pa + pb) = 1 − pa + 1 − pb > vA(a) − pa + 1 − pb > u1(a) Thus, in order to gain any information about α or β, the price of one of the items should become at least 1, w.l.o.g. pa ≥ 1.",
                "But then, the bundle a will not be demanded by bidder 1 throughout the auction, thus no information at all will be gained about α.",
                "Now, assume that bidder 2 is known to have the valuation described in the second row of Figure 6.",
                "The optimal allocation depends on whether α is greater than β (in bidder 1s valuation), and we proved that an ascending auction cannot determine this.",
                "The proof of the theorem above shows that for an unknown value to be revealed, the price of one item should be greater than 1, and the other price should be smaller than 1.",
                "Therefore, in a price-monotonic trajectory of prices, only one of these values can be revealed.",
                "An immediate conclusion is that this impossibility result also holds for item-price descending auctions.",
                "Since no such trajectory exists, then the same conclusion even holds for non-deterministic itemprice auctions (in which exogenous data tells us how to increase the prices).",
                "Also note that since the hardness stems from the impossibility to fully-elicit a valuation of a single bidder, this result also holds for non-anonymous ascending item-price auctions. 5.3 Limitations of Multi-Trajectory Ascending Auctions According to Theorem 5.4, no ascending item-price auction can always elicit the preferences (we prove a similar result for bundle prices in section 6).",
                "But can two ascending trajectories do the job?",
                "Or a polynomial number of ascending trajectories?",
                "We give negative answers for such suggestions.",
                "We define a k-trajectory ascending auction as a demandquery iterative auction in which the demand queries can be partitioned to k sets of queries, where the prices published in each set only increase in time.",
                "Note that we use a general definition; It allows the trajectories to run in parallel or sequentially, and to use information elicited in some trajectories for determining the future queries in other trajectories.",
                "The power of multiple-trajectory auctions can be demonstrated by the negative result of Gul and Stacchetti [17] who showed that even for an auction among substitutes valuations, an anonymous ascending item-price auction cannot compute VCG prices for all players.21 Ausubel [4] overcame this impossibility result and designed auctions that do compute VCG prices by organizing the auction as a sequence of n + 1 ascending auctions.",
                "Here, we prove that one cannot elicit XOR valuations with k terms by less than k − 1 ascending trajectories.",
                "On the other hand, we show that an XOR formula can be fully elicited by k−1 non-deterministic ascending auctions (or by k−1 deterministic ascending auctions if the auctioneer knows the atomic bundles).22 21 A recent unpublished paper by Mishra and Parkes extends this result, and shows that non-anonymous prices with bundle-prices are necessary in order that an ascending auction will end up with a universal-competitive-equilibrium (that leads to VCG payments). 22 This result actually separates the power of deterministic 39 Proposition 5.5.",
                "XOR valuations with k terms cannot be elicited (or fully elicited) by any (k-2)-trajectory itemprice ascending auction, even when the atomic bundles are known to the elicitor.",
                "However, these valuations can be elicited (and fully elicited) by (k-1)-trajectory non-deterministic non-anonymous item-price ascending auctions.",
                "Moreover, an exponential number of trajectories is required for eliciting some classes of valuations: Proposition 5.6.",
                "Elicitation and full-elicitation of some classes of valuations cannot be done by any k-trajectory itemprice ascending auction, where k = o(2m ).",
                "Proof. (sketch) Consider the following class of valuations: For |S| < m 2 , v(S) = 0 and for |S| > m 2 , v(S) = 2; every bundle S of size m 2 has some unknown value in (0, 1).",
                "We show ([9]) that a single item-price ascending auction can reveal the value of at most one bundle of size n 2 , and therefore an exponential number of ascending trajectories is needed in order to elicit such valuations.",
                "We observe that the algorithm we presented in Section 4.2 can be implemented by a polynomial number of ascending auctions (each item-price demand query can be considered as a separate ascending auction), and therefore a min(n, 4 √ m)-approximation can be achieved by a polynomial number of ascending auctions.",
                "We do not currently have a better upper bound or any lower bound. 5.4 Separating the Various Models of Ascending Auctions Various models for ascending auctions have been suggested in the literature.",
                "In this section, we compare the power of the different models.",
                "As mentioned, all auctions are considered anonymous and deterministic, unless specified otherwise.",
                "Ascending vs.",
                "Descending Auctions: We begin the discussion of the relation between ascending auctions and descending auctions with an example.",
                "The algorithm by Lehmann, Lehmann and Nisan [25] can be implemented by a simple item-price descending auction (see the full paper for details [9]).",
                "This algorithm guarantees at least half of the optimal efficiency for submodular valuations.",
                "However, we are not familiar with any ascending auction that guarantees a similar fraction of the efficiency.",
                "This raises a more general question: can ascending auctions solve any combinatorialauction problem that is solvable using a descending auction (and vice versa)?",
                "We give negative answers to these questions.",
                "The idea behind the proofs is that the information that the auctioneer can get for free at the beginning of each type of auction is different.23 and non-deterministic iterative auctions: our proof shows that a non-deterministic iterative auction can elicit the kterm XOR valuations with a polynomial number of demand queries, and [7] show that this elicitation must take an exponential number of demand queries. 23 In ascending auctions, the auctioneer can reveal the most valuable bundle (besides M) before she starts raising the prices, thus she can use this information for adaptively choose the subsequent queries.",
                "In descending auctions, one can easily find the bundle with the highest average per-item price, keeping all other bundles with non-positive utilities, and use this information in the adaptive price change.",
                "Proposition 5.7.",
                "There are classes that cannot be elicited (fully elicited) by ascending item-price auctions, but can be elicited (resp. fully elicited) with a descending item-price auction.",
                "Proposition 5.8.",
                "There are classes that cannot be elicited (fully elicited) by item-price descending auctions, but can be elicited (resp. fully elicited) by item-price ascending auctions.",
                "Deterministic vs. Non-Deterministic Auctions: Nondeterministic ascending auctions can be viewed as auctions where some benevolent teacher that has complete information guides the auctioneer on how she should raise the prices.",
                "That is, preference elicitation can be done by a non-deterministic ascending auction, if there is some ascending trajectory that elicits enough information for determining the optimal allocation (and verifying that it is indeed optimal).",
                "We show that non-deterministic ascending auctions are more powerful than deterministic ascending auctions: Proposition 5.9.",
                "Some classes can be elicited (fully elicited) by an item-price non-deterministic ascending auction, but cannot be elicited (resp. fully elicited) by item-price deterministic ascending auctions.",
                "Anonymous vs. Non-Anonymous Auctions: As will be shown in Section 6, the power of anonymous and nonanonymous bundle-price ascending auctions differs significantly.",
                "Here, we show that a difference also exists for itemprice ascending auctions.",
                "Proposition 5.10.",
                "Some classes cannot be elicited by anonymous item-price ascending auctions, but can be elicited by a non-anonymous item-price ascending auction.",
                "Sequential vs.",
                "Simultaneous Auctions: A non-anonymous auction is called simultaneous if at each stage, the price of some item is raised by for every bidder.",
                "The auctioneer can use the information gathered until each stage, in all the personalized trajectories, to determine the next queries.",
                "A non-anonymous auction is called sequential if the auctioneer performs an auction for each bidder separately, in sequential order.",
                "The auctioneer can determine the next query based on the information gathered in the trajectories completed so far and on the history of the current trajectory.",
                "Proposition 5.11.",
                "There are classes that cannot be elicited by simultaneous non-anonymous item-price ascending auctions, but can be elicited by a sequential non-anonymous item-price ascending auction.",
                "Adaptive vs.",
                "Oblivious Auctions: If the auctioneer determines the queries regardless of the bidders responses (i.e., the queries are predefined) we say that the auction is oblivious.",
                "Otherwise, the auction is adaptive.",
                "We prove that an adaptive behaviour of the auctioneer may be beneficial.",
                "Proposition 5.12.",
                "There are classes that cannot be elicited (fully elicited) using oblivious item-price ascending auctions, but can be elicited (resp. fully elicited) by an adaptive item-price ascending auction. 40 5.5 Preference Elicitation vs. Full Elicitation Preference elicitation and full elicitation are closely related problems.",
                "If full elicitation is easy (e.g., in polynomial time) then clearly elicitation is also easy (by a nonanonymous auction, simply by learning all the valuations separately24 ).",
                "On the other hand, there are examples where preference elicitation is considered easy but learning is hard (typically, elicitation requires smaller amount of information; some examples can be found in [7]).",
                "The tatonnement algorithms by [22, 12, 16] end up with the optimal allocation for substitutes valuations.25 We prove that we cannot fully elicit substitutes valuations (or even their sub-class of OXS valuations defined in [25]), even for a single bidder, by an item-price ascending auction (although the optimal allocation can be found by an ascending auction for any number of bidders!).",
                "Theorem 5.13.",
                "Substitute valuations cannot be fully elicited by ascending item-price auctions.",
                "Moreover, they cannot be fully elicited by any m 2 ascending trajectories (m > 3).",
                "Whether substitutes valuations have a compact representation (i.e., polynomial in the number of goods) is an important open question.",
                "As a step in this direction, we show that its sub-class of OXS valuations does have a compact representation: every OXS valuation can be represented by at most m2 values.26 Lemma 5.14.",
                "Any OXS valuation can be represented by no more than m2 values. 6.",
                "BUNDLE-PRICE ASCENDING AUCTIONS All the ascending auctions in the literature that are proved to find the optimal allocation for unrestricted valuations are non-anonymous bundle-price auctions (iBundle(3) by Parkes and Ungar [37] and the Proxy Auction by Ausubel and Milgrom [3]).",
                "Yet, several anonymous ascending auctions have been suggested (e.g., AkBA [42], [21] and iBundle(2) [37]).",
                "In this section, we prove that anonymous bundle-price ascending auctions achieve poor results in the worst-case.",
                "We also show that the family of non-anonymous bundleprice ascending auctions can run exponentially slower than simple item-price ascending auctions. 6.1 Limitations of Anonymous Bundle-Price Ascending Auctions We present a class of valuations that cannot be elicited by anonymous bundle-price ascending auctions.",
                "These valuations are described in Figure 7.",
                "The basic idea: for determining some unknown value of one bidder we must raise 24 Note that an anonymous ascending auction cannot necessarily elicit a class that can be fully elicited by an ascending auction. 25 Substitute valuations are defined, e.g., in [16].",
                "Roughly speaking, a bidder with a substitute valuation will continue demand a certain item after the price of some other items was increased.",
                "For completeness, we present in the full paper [9] a proof for the efficiency of such auctions for substitutes valuations. 26 A unit-demand valuation is an XOR valuation in which all the atomic bundles are singletons.",
                "OXS valuations can be interpreted as an aggregation (OR) of any number of unit-demand bidders.",
                "Bid. 1 v1(ac) = 2 v1(bd) = 2 v1(cd) = α ∈ (0, 1) Bid. 2 v2(ab) = 2 v2(cd) = 2 v2(bd) = β ∈ (0, 1) Figure 7: Anonymous ascending bundle-price auctions cannot determine the optimal allocation for this class of valuations. a price of a bundle that should be demanded by the other bidder in the future.",
                "Theorem 6.1.",
                "Some classes of valuations cannot be elicited by anonymous bundle-price ascending auctions.",
                "Proof.",
                "Consider a pair of XOR valuations as described in Figure 7.",
                "For finding the optimal allocation we must know which value is greater between α and β.27 However, we cannot learn the value of both α and β by a single ascending trajectory: assume w.l.o.g. that bidder 1 demands cd before bidder 2 demands bd (no information will be elicited if none of these happens).",
                "In this case, the price for bd must be greater than 1 (otherwise, bidder 1 prefers bd to cd).",
                "Thus, bidder 2 will never demand the bundle bd, and no information will be elicited about β.",
                "The valuations described in the proof of Theorem 6.1 can be easily elicited by a non-anonymous item-price ascending auction.",
                "On the other hand, the valuations in Figure 6 can be easily elicited by an anonymous bundle-price ascending auction.",
                "We conclude that the power of these two families of ascending auctions is incomparable.",
                "We strengthen the impossibility result above by showing that anonymous bundle-price auctions cannot even achieve better than a min{O(n), O( √ m)}-approximation for the social welfare.",
                "This approximation ratio can be achieved with polynomial communication, and specifically with a polynomial number of item-price demand queries.28 Theorem 6.2.",
                "An anonymous bundle-price ascending auction cannot guarantee better than a min{ n 2 , √ m 2 } approximation for the optimal welfare.",
                "Proof. (Sketch) Assume we have n bidders and n2 items for sale, and that n is prime.",
                "We construct n2 distinct bundles with the following properties: for each bidder, we define a partition Si = (Si 1, ..., Si n) of the n2 items to n bundles, such that any two bundles from different partitions intersect.",
                "In the full paper, part II [9] we show an explicit construction using the properties of linear functions over finite fields.",
                "The rest of the proof is independent of the specific construction.",
                "Using these n2 bundles we construct a hard-to-elicit class.",
                "Every bidder has an atomic bid, in his XOR valuation, for each of these n2 bundles.",
                "A bidder i has a value of 2 for any bundle Si j in his partition.",
                "For all bundles in the other partitions, he has a value of either 0 or of 1 − δ, and these values are unknown to the auctioneer.",
                "Since every pair of bundles from different partitions intersect, only one bidder can receive a bundle with a value of 2. 27 If α > β, the optimal allocation will allocate cd to bidder 1 and ab to bidder 2.",
                "Otherwise, we give bd to bidder 2 and ac to bidder 1.",
                "Note that both bidders cannot gain a value of 2 in the same allocation, due to the intersections of the high-valued bundles. 28 Note that bundle-price queries may use exponential communication, thus the lower bound of [32] does not hold. 41 Non-anonymous Bundle-Price Economically-Efficient Ascending Auctions: Initialization: All prices are initialized to zero (non-anonymous bundle prices).",
                "Repeat: - Each bidder submits a bundle that maximizes his utility under his current personalized prices. - The auctioneer calculates a provisional allocation that maximizes his revenue under the current prices. - The prices of bundles that were demanded by losing bidders are increased by .",
                "Finally: Terminate when the provisional allocation assigns to each bidder the bundle he demanded.",
                "Figure 8: Auctions from this family (denoted by NBEA auctions) are known to achieve the optimal welfare.",
                "No bidder will demand a low-valued bundle, as long as the price of one of his high-valued bundles is below 1 (and thus gain him a utility greater than 1).",
                "Therefore, for eliciting any information about the low-valued bundles, the auctioneer should first arbitrarily choose a bidder (w.l.o.g bidder 1) and raise the prices of all the bundles (S1 1 , ..., S1 n) to be greater than 1.",
                "Since the prices cannot decrease, the other bidders will clearly never demand these bundles in future stages.",
                "An adversary may choose the values such that the low values of all the bidders for the bundles not in bidder 1s partition are zero (i.e., vi(S1 j ) = 0 for every i = 1 and every j), however, allocating each bidder a different bundle from bidder 1s partition, might achieve a welfare of n+1−(n−1)δ (bidder 1s valuation is 2, and 1 − δ for all other bidders); If these bundles were wrongly allocated, only a welfare of 2 might be achieved (2 for bidder 1s high-valued bundle, 0 for all other bidders).",
                "At this point, the auctioneer cannot have any information about the identity of the bundles with the non-zero values.",
                "Therefore, an adversary can choose the values of the bundles received by bidders 2, ..., n in the final allocation to be zero.",
                "We conclude that anonymous bundleprice auctions cannot guarantee a welfare greater than 2 for this class, where the optimal welfare can be arbitrarily close to n + 1. 6.2 Bundle Prices vs.",
                "Item Prices The core of the auctions in [37, 3] is the scheme described in Figure 8 (in the spirit of [35]) for auctions with nonanonymous bundle prices.",
                "Auctions from this scheme end up with the optimal allocation for any class of valuations.",
                "We denote this family of ascending auctions as NBEA auctions29 .",
                "NBEA auctions can elicit k-term XOR valuations by a polynomial (in k) number of steps , although the elicitation of such valuations may require an exponential number of item-price queries ([7]), and item-price ascending auctions cannot do it at all (Theorem 5.4).",
                "Nevertheless, we show that NBEA auctions (and in particular, iBundle(3) and the proxy auction) are sometimes inferior to simple item-price demand auctions.",
                "This may justify the use of hybrid auctions that use both linear and non-linear prices (e.g., the clock-proxy auction [10]).",
                "We show that auctions from this 29 Non-anonymous Bundle-price economically Efficient Ascending auctions.",
                "For completeness, we give in the full paper [9] a simple proof for the efficiency (up to an ) of auctions of this scheme . family may use an exponential number of queries even for determining the optimal allocation among two bidders with additive valuations30 , where such valuations can be elicited by a simple item-price ascending auction.",
                "We actually prove this property for a wider class of auctions we call conservative auctions.",
                "We also observe that in conservative auctions, allowing the bidders to submit all the bundles in their demand sets ensures that the auction runs a polynomial number of steps - if L is not too high (but with exponential communication, of course).",
                "An ascending auction is called conservative if it is nonanonymous, uses bundle prices initialized to zero and at every stage the auctioneer can only raise prices of bundles demanded by the bidders until this stage.",
                "In addition, each bidder can only receive bundles he demanded during the auction.",
                "Note that NBEA auctions are by definition conservative.",
                "Proposition 6.3.",
                "If every bidder demands a single bundle in each step of the auction, conservative auctions may run for an exponential number of steps even for additive valuations.",
                "If the bidders are allowed to submit all the bundles in their demand sets in each step, then conservative auctions can run in a polynomial number of steps for any profile of valuations, as long as the maximal valuation L is polynomial in m, n and 1 δ .",
                "Acknowledgments: The authors thank Moshe Babaioff, Shahar Dobzinski, Ron Lavi, Daniel Lehmann, Ahuva Mualem, David Parkes, Michael Schapira and Ilya Segal for helpful discussions.",
                "Supported by grants from the Israeli Academy of Sciences and the USAIsrael Binational Science Foundation. 7.",
                "REFERENCES [1] amazon.",
                "Web Page: http://www.amazon.com. [2] ebay.",
                "Web Page: http://www.ebay.com. [3] L. M. Ausubel and P. R. Milgrom.",
                "Ascending auctions with package bidding.",
                "Frontiers of Theoretical Economics, 1:1-42, 2002. [4] Lawrence Ausubel.",
                "An efficient dynamic auction for heterogeneous commodities, 2000.",
                "Working paper, University of Maryland. [5] Yair Bartal, Rica Gonen, and Noam Nisan.",
                "Incentive compatible multi unit combinatorial auctions.",
                "In TARK 03, 2003. [6] Alejandro Bertelsen.",
                "Substitutes valuations and m -concavity.",
                "M.Sc.",
                "Thesis, The Hebrew University of Jerusalem, 2005. [7] Avrim Blum, Jeffrey C. Jackson, Tuomas Sandholm, and Martin A. Zinkevich.",
                "Preference elicitation and query learning.",
                "Journal of Machine Learning Research, 5:649-667, 2004. [8] Liad Blumrosen and Noam Nisan.",
                "On the computational power of iterative auctions I: demand queries.",
                "Working paper, The Hebrew University of 30 Valuations are called additive if for any disjoint bundles A and B, v(A ∪ B) = v(A) + v(B).",
                "Additive valuations are both sub-additive and super-additive and are determined by the m values assigned for the singletons. 42 Jerusalem.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [9] Liad Blumrosen and Noam Nisan.",
                "On the computational power of iterative auctions II: ascending auctions.",
                "Working paper, The Hebrew University of Jerusalem.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [10] P. Cramton, L.M.",
                "Ausubel, and P.R.",
                "Milgrom.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 5.",
                "The Clock-Proxy Auction: A Practical Combinatorial Auction Design.",
                "MIT Press.",
                "Forthcoming, 2005. [11] P. Cramton, Y. Shoham, and R. Steinberg (Editors).",
                "Combinatorial Auctions.",
                "MIT Press.",
                "Forthcoming, 2005. [12] G. Demange, D. Gale, and M. Sotomayor.",
                "Multi-item auctions.",
                "Journal of Political Economy, 94:863-872, 1986. [13] Shahar Dobzinski, Noam Nisan, and Michael Schapira.",
                "Approximation algorithms for cas with complement-free bidders.",
                "In The 37th ACM symposium on theory of computing (STOC)., 2005. [14] Shahar Dobzinski and Michael Schapira.",
                "Optimal upper and lower approximation bounds for k-duplicates combinatorial auctions.",
                "Working paper, the Hebrew University. [15] Combinatorial bidding conference.",
                "Web Page: http://wireless.fcc.gov/auctions/conferences/combin2003. [16] Faruk Gul and Ennio Stacchetti.",
                "Walrasian equilibrium with gross substitutes.",
                "Journal of Economic Theory, 87:95 - 124, 1999. [17] Faruk Gul and Ennio Stacchetti.",
                "The english auction with differentiated commodities.",
                "Journal of Economic Theory, 92(3):66 - 95, 2000. [18] J. Hastad.",
                "Almost optimal lower bounds for small depth circuits.",
                "In 18th STOC, pages 6-20, 1986. [19] Ron Holzman, Noa Kfir-Dahav, Dov Monderer, and Moshe Tennenholtz.",
                "Bundling equilibrium in combinatrial auctions.",
                "Games and Economic Behavior, 47:104-123, 2004. [20] H. Karloff.",
                "Linear Programming.",
                "Birkh¨auser Verlag, 1991. [21] Frank Kelly and Richard Steinberg.",
                "A combinatorial auction with multiple winners for universal service.",
                "Management Science, 46:586-596, 2000. [22] A.S. Kelso and V.P.",
                "Crawford.",
                "Job matching, coalition formation, and gross substitute.",
                "Econometrica, 50:1483-1504, 1982. [23] Subhash Khot, Richard J. Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Inapproximability results for combinatorial auctions with submodular utility functions.",
                "In Working paper., 2004. [24] Sebastien Lahaie and David C. Parkes.",
                "Applying learning algorithms to preference elicitation.",
                "In EC 04. [25] Benny Lehmann, Daniel Lehmann, and Noam Nisan.",
                "Combinatorial auctions with decreasing marginal utilities.",
                "In ACM conference on electronic commerce.",
                "To appear, Games and Economic Behaviour., 2001. [26] D. Lehmann, L. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "JACM, 49(5):577-602, Sept. 2002. [27] A. Mas-Collel, W. Whinston, and J.",
                "Green.",
                "Microeconomic Theory.",
                "Oxford university press, 1995. [28] Debasis Mishra and David Parkes.",
                "Ascending price vickrey auctions using primal-dual algorithms., 2004.",
                "Working paper, Harvard University. [29] Noam Nisan.",
                "The communication complexity of approximate set packing and covering.",
                "In ICALP 2002. [30] Noam Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In ACM Conference on Electronic Commerce, 2000. [31] Noam Nisan.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 1.",
                "Bidding Languages.",
                "MIT Press.",
                "Forthcoming, 2005. [32] Noam Nisan and Ilya Segal.",
                "The communication requirements of efficient allocations and supporting prices, 2003.",
                "Working paper.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html Forthcoming in the Journal of Economic Theory. [33] Noam Nisan and Ilya Segal.",
                "Exponential communication inefficiency of demand queries, 2004.",
                "Working paper.",
                "Available from http://www.stanford.edu/ isegal/queries1.pdf. [34] D. C. Parkes and L. H. Ungar.",
                "An ascending-price generalized vickrey auction.",
                "Tech.",
                "Rep., Harvard University, 2002. [35] David Parkes.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 3.",
                "Iterative Combinatorial Auctions.",
                "MIT Press.",
                "Forthcoming, 2005. [36] David C. Parkes.",
                "Iterative combinatorial auctions: Achieving economic and computational efficiency.",
                "Ph.D. Thesis, Department of Computer and Information Science, University of Pennsylvania., 2001. [37] David C. Parkes and Lyle H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In AAAI/IAAI, pages 74-81, 2000. [38] Ariel Rubinstein.",
                "Why are certain properties of binary relations relatively more common in natural languages.",
                "Econometrica, 64:343-356, 1996. [39] Tuomas Sandholm.",
                "Algorithm for optimal winner determination in combinatorial auctions.",
                "In Artificial Intelligence, volume 135, pages 1-54, 2002. [40] P. Santi, V. Conitzer, and T. Sandholm.",
                "Towards a characterization of polynomial preference elicitation with value queries in combinatorial auctions.",
                "In The 17th Annual Conference on Learning Theory, 2004. [41] Ilya Segal.",
                "The communication requirements of social choice rules and supporting budget sets, 2004.",
                "Working paper.",
                "Available from http://www.stanford.edu/ isegal/rules.pdf. [42] P.R.",
                "Wurman and M.P.",
                "Wellman.",
                "Akba: A progressive, anonymous-price combinatorial auction.",
                "In Second ACM Conference on Electronic Commerce, 2000. [43] Martin A. Zinkevich, Avrim Blum, and Tuomas Sandholm.",
                "On polynomial-time preference elicitation with value queries.",
                "In ACM Conference on Electronic Commerce, 2003. 43"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        },
        "ascending-price auction": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "On the Computational Power of Iterative Auctions∗ [Extended Abstract] Liad Blumrosen School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel liad@cs.huji.ac.il Noam Nisan School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel noam@cs.huji.ac.il ABSTRACT We embark on a systematic analysis of the power and limitations of iterative combinatorial auctions.",
                "Most existing iterative combinatorial auctions are based on repeatedly suggesting prices for bundles of items, and querying the bidders for their demand under these prices.",
                "We prove a large number of results showing the boundaries of what can be achieved by auctions of this kind.",
                "We first focus on auctions that use a polynomial number of demand queries, and then we analyze the power of different kinds of <br>ascending-price auction</br>s.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION Combinatorial auctions have recently received a lot of attention.",
                "In a combinatorial auction, a set M of m nonidentical items are sold in a single auction to n competing bidders.",
                "The bidders have preferences regarding the bundles of items that they may receive.",
                "The preferences of bidder i are specified by a valuation function vi : 2M → R+ , where vi(S) denotes the value that bidder i attaches to winning the bundle of items S. We assume free disposal, i.e., that the vis are monotone non-decreasing.",
                "The usual goal of the auctioneer is to optimize the social welfare P i vi(Si), where the allocation S1...Sn must be a partition of the items.",
                "Applications include many complex resource allocation problems and, in fact, combinatorial auctions may be viewed as the common abstraction of many complex resource allocation problems.",
                "Combinatorial auctions face both economic and computational difficulties and are a central problem in the recently active border of economic theory and computer science.",
                "A forthcoming book [11] addresses many of the issues involved in the design and implementation of combinatorial auctions.",
                "The design of a combinatorial auction involves many considerations.",
                "In this paper we focus on just one central issue: the communication between bidders and the allocation mechanism - preference elicitation.",
                "Transferring all information about bidders preferences requires an infeasible (exponential in m) amount of communication.",
                "Thus, direct revelation auctions in which bidders simply declare their preferences to the mechanism are only practical for very small auction sizes or for very limited families of bidder preferences.",
                "We have therefore seen a multitude of suggested iterative auctions in which the auction protocol repeatedly interacts with the different bidders, aiming to adaptively elicit enough information about the bidders preferences as to be able to find a good (optimal or close to optimal) allocation.",
                "Most of the suggested iterative auctions proceed by maintaining temporary prices for the bundles of items and repeatedly querying the bidders as to their preferences between the bundles under the current set of prices, and then updating the set of bundle prices according to the replies received (e.g., [22, 12, 17, 37, 3]).",
                "Effectively, such an iterative auction accesses the bidders preferences by repeatedly making the following type of demand query to bidders: Query to bidder i: a vector of bundle prices p = {p(S)}S⊆M ; Answer: a bundle of items S ⊆ M that maximizes vi(S) − p(S)..",
                "These types of queries are very natural in an economic setting as they capture the revealed preferences of the bidders.",
                "Some auctions, called item-price or linear-price auctions, specify a price pi for each item, and the price of any given bundle S is always linear, p(S) = P i∈S pi.",
                "Other auctions, called bundle-price auctions, allow specifying arbitrary (non-linear) prices p(S) for bundles.",
                "Another important differentiation between models of iterative auctions is 29 based on whether they use anonymous or non-anonymous prices: In some auctions the prices that are presented to the bidders are always the same (anonymous prices).",
                "In other auctions (non-anonymous), different bidders may face different (discriminatory) vectors of prices.",
                "In <br>ascending-price auction</br>s, forcing prices to be anonymous may be a significant restriction.",
                "In this paper, we embark on a systematic analysis of the computational power of iterative auctions that are based on demand queries.",
                "We do not aim to present auctions for practical use but rather to understand the limitations and possibilities of these kinds of auctions.",
                "In the first part of this paper, our main question is what can be done using a polynomial number of these types of queries?",
                "That is, polynomial in the main parameters of the problem: n, m and the number of bits t needed for representing a single value vi(S).",
                "Note that from an algorithmic point of view we are talking about sub-linear time algorithms: the input size here is really n(2m − 1) numbers - the descriptions of the valuation functions of all bidders.",
                "There are two aspects to computational efficiency in these settings: the first is the communication with the bidders, i.e., the number of queries made, and the second is the usual computational tractability.",
                "Our lower bounds will depend only on the number of queriesand hold independently of any computational assumptions like P = NP.",
                "Our upper bounds will always be computationally efficient both in terms of the number of queries and in terms of regular computation.",
                "As mentioned, this paper concentrates on the single aspect of preference elicitation and on its computational consequences and does not address issues of incentives.",
                "This strengthens our lower bounds, but means that the upper bounds require evaluation from this perspective also before being used in any real combinatorial auction.1 The second part of this paper studies the power of ascending -price auctions.",
                "Ascending auctions are iterative auctions where the published prices cannot decrease in time.",
                "In this work, we try to systematically analyze what do the differences between various models of ascending auctions mean.",
                "We try to answer the following questions: (i) Which models of ascending auctions can find the optimal allocation, and for which classes of valuations? (ii) In cases where the optimal allocation cannot be determined by ascending auctions, how well can such auctions approximate the social welfare? (iii) How do the different models for ascending auctions compare?",
                "Are some models computationally stronger than others?",
                "Ascending auctions have been extensively studied in the literature (see the recent survey by Parkes [35]).",
                "Most of this work presented upper bounds, i.e., proposed mechanisms with ascending prices and analyzed their properties.",
                "A result which is closer in spirit to ours, is by Gul and Stacchetti [17], who showed that no item-price ascending auction can always determine the VCG prices, even for substitutes valuations.2 Our framework is more general than the traditional line of research that concentrates on the final allocation and 1 We do observe however that some weak incentive property comes for free in demand-query auctions since myopic players will answer all demand queries truthfully.",
                "We also note that in some cases (but not always!) the incentives issues can be handled orthogonally to the preference elicitation issues, e.g., by using Vickrey-Clarke-Groves (VCG) prices (e.g., [4, 34]). 2 We further discuss this result in Section 5.3.",
                "Iterative auctions Demand auctions Item-price auctions Anonymous price auctions Ascending auctions 1 2 3 4 5 6 97 8 10 Figure 1: The diagram classifies the following auctions according to their properties: (1) The adaptation [12] for Kelso & Crawfords [22] auction. (2) The Proxy Auction [3] by Ausubel & Milgrom. (3) iBundle(3) by Parkes & Ungar [34]. (4) iBundle(2) by Parkes & Ungar [37]. (5) Our descending adaptation for the 2-approximation for submodular valuations by [25] (see Subsection 5.4). (6) Ausubels [4] auction for substitutes valuations. (7) The adaptation by Nisan & Segal [32] of the O( √ m) approximation by [26]. (8) The duplicate-item auction by [5]. (9) Auction for Read-Once formulae by [43]. (10) The AkBA Auction by Wurman & Wellman [42]. payments and in particular, on reaching Walrasian equilibria or Competitive equilibria.",
                "A Walrasian equilibrium3 is known to exist in the case of Substitutes valuations, and is known to be impossible for any wider class of valuations [16].",
                "This does not rule out other allocations by ascending auctions: in this paper we view the auctions as a computational process where the outcome - both the allocation and the payments - can be determined according to all the data elicited throughout the auction; This general framework strengthens our negative results.4 We find the study of ascending auctions appealing for various reasons.",
                "First, ascending auctions are widely used in many real-life settings from the FCC spectrum auctions [15] to almost any e-commerce website (e.g., [2, 1]).",
                "Actually, this is maybe the most straightforward way to sell items: ask the bidders what would they like to buy under certain prices, and increase the prices of over-demanded goods.",
                "Ascending auctions are also considered more intuitive for many bidders, and are believed to increase the trust of the bidders in the auctioneer, as they see the result gradually emerging from the bidders responses.",
                "Ascending auctions also have other desired economic properties, e.g., they incur smaller information revelation (consider, for example, English auctions vs. second-price sealed bid auctions). 1.1 Extant Work Many iterative combinatorial auction mechanisms rely on demand queries (see the survey in [35]).",
                "Figure 1 summa3 A Walrasian equilibrium is vector of item prices for which all the items are sold when each bidder receives a bundle in his demand set. 4 In few recent auction designs (e.g., [4, 28]) the payments are not necessarily the final prices of the auctions. 30 Valuation family Upper bound Reference Lower bound Reference General min(n, O( √ m)) [26], Section 4.2 min(n, m1/2− ) [32] Substitutes 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subadditive O(logm) [13] 2 [13] k-duplicates O(m1/k+1 ) [14] O(m1/k+1 ) [14] Procurement ln m [32] (log m)/2 [29, 32] Figure 2: The best approximation factors currently achievable by computationally-efficient combinatorial auctions, for several classes of valuations.",
                "All lower bounds in the table apply to all iterative auctions (except the one marked by *); all upper bounds in the table are achieved with item-price demand queries. rizes the basic classes of auctions implied by combinations of the above properties and classifies some of the auctions proposed in the literature according to this classification.",
                "For our purposes, two families of these auctions serve as the main motivating starting points: the first is the ascending item-price auctions of [22, 17] that with computational efficiency find an optimal allocation among (gross) substitutes valuations, and the second is the ascending bundleprice auctions of [37, 3] that find an optimal allocation among general valuations - but not necessarily with computational efficiency.",
                "The main lower bound in this area, due to [32], states that indeed, due to inherent communication requirements, it is not possible for any iterative auction to find the optimal allocation among general valuations with sub-exponentially many queries.",
                "A similar exponential lower bound was shown in [32] also for even approximating the optimal allocation to within a factor of m1/2− .",
                "Several lower bounds and upper bounds for approximation are known for some natural classes of valuations - these are summarized in Figure 2.",
                "In [32], the universal generality of demand queries is also shown: any non-deterministic communication protocol for finding an allocation that optimizes the social welfare can be converted into one that only uses demand queries (with bundle prices).",
                "In [41] this was generalized also to nondeterministic protocols for finding allocations that satisfy other natural types of economic requirements (e.g., approximate social efficiency, envy-freeness).",
                "However, in [33] it was demonstrated that this completeness of demand queries holds only in the nondeterministic setting, while in the usual deterministic setting, demand queries (even with bundle prices) may be exponentially weaker than general communication.",
                "Bundle-price auctions are a generalization of (the more natural and intuitive) item-price auctions.",
                "It is known that indeed item-price auctions may be exponentially weaker: a nice example is the case of valuations that are a XOR of k bundles5 , where k is small (say, polynomial).",
                "Lahaie and Parkes [24] show an economically-efficient bundle-price auction that uses a polynomial number of queries whenever k is polynomial.",
                "In contrast, [7] show that there exist valuations that are XORs of k = √ m bundles such that any item-price auction that finds an optimal allocation between them requires exponentially many queries.",
                "These results are part of a recent line of research ([7, 43, 24, 40]) that study the preference elicitation problem in combinatorial auctions and its relation to the full elicitation problem (i.e., learn5 These are valuations where bidders have values for k specific packages, and the value of each bundle is the maximal value of one of these packages that it contains. ing the exact valuations of the bidders).",
                "These papers adapt methods from machine-learning theory to the combinatorialauction setting.",
                "The preference elicitation problem and the full elicitation problem relate to a well studied problem in microeconomics known as the integrability problem (see, e.g., [27]).",
                "This problem studies if and when one can derive the utility function of a consumer from her demand function.",
                "Paper organization: Due to the relatively large number of results we present, we start with a survey of our new results in Section 2.",
                "After describing our formal model in Section 3, we present our results concerning the power of demand queries in Section 4.",
                "Then, we describe the power of item-price ascending auctions (Section 5) and bundle-price ascending auctions (Section 6).",
                "Readers who are mainly interested in the self-contained discussion of ascending auctions can skip Section 4.",
                "Missing proofs from Section 4 can be found in part I of the full paper ([8]).",
                "Missing proofs from Sections 5 and 6 can be found in part II of the full paper ([9]). 2.",
                "A SURVEY OF OUR RESULTS Our systematic analysis is composed of the combination of a rather large number of results characterizing the power and limitations of various classes of auctions.",
                "In this section, we will present an exposition describing our new results.",
                "We first discuss the power of demand-query iterative auctions, and then we turn our attention to ascending auctions.",
                "Figure 3 summarizes some of our main results. 2.1 Demand Queries Comparison of query types We first ask what other natural types of queries could we imagine iterative auctions using?",
                "Here is a list of such queries that are either natural, have been used in the literature, or that we found useful. 1.",
                "Value query: The auctioneer presents a bundle S, the bidder reports his value v(S) for this bundle. 2.",
                "Marginal-value query: The auctioneer presents a bundle A and an item j, the bidder reports how much he is willing to pay for j, given that he already owns A, i.e., v(j|A) = v(A ∪ {j}) − v(A). 3.",
                "Demand query (with item prices): The auctioneer presents a vector of item prices p1...pm; the bidder reports his demand under these prices, i.e., some set S that maximizes v(S) − P i∈S pi.6 6 A tie breaking rule should be specified.",
                "All of our results 31 Communication Constraint Can find an optimal allocation?",
                "Upper bound for welfare approx.",
                "Lower bound for welfare approx.",
                "Item-Price Demand Queries Yes 1 1 Poly.",
                "Communication No [32] min(n, O(m1/2 )) [26] min(n, m1/2− ) [32] Poly.",
                "Item-Price Demand Queries No [32] min(n, O(m1/2 )) min(n, m1/2− ) [32] Poly.",
                "Value Queries No [32] O( m√ log m ) [19] O( m log m ) Anonymous Item-Price AA No - min(O(n), O(m1/2− )) Non-anonymous Item-Price AA No -Anonymous Bundle-Price AA No - min(O(n), O(m1/2− )) Non-anonymous Bundle-Price AA Yes [37] 1 1 Poly Number of Item-Price AA No min(n, O(m1/2 ))Figure 3: This paper studies the economic efficiency of auctions that follow certain communication constraints.",
                "For each class of auctions, the table shows whether the optimal allocation can be achieved, or else, how well can it be approximated (both upper bounds and lower bounds).",
                "New results are highlighted.",
                "Abbreviations: Poly. (Polynomial number/size), AA (ascending auctions). - means that nothing is currently known except trivial solutions. 4.",
                "Indirect-utility query: The auctioneer presents a set of item prices p1...pm, and the bidder responds with his indirect-utility under these prices, that is, the highest utility he can achieve from a bundle under these prices: maxS⊆M (v(S) − P i∈S pi).7 5.",
                "Relative-demand query: the auctioneer presents a set of non-zero prices p1...pm, and the bidder reports the bundle that maximizes his value per unit of money, i.e., some set that maximizes v(S)P i∈S pi .8 Theorem: Each of these queries can be efficiently (i.e., in time polynomial in n, m, and the number of bits of precision t needed to represent a single value vi(S)) simulated by a sequence of demand queries with item prices.",
                "In particular this shows that demand queries can elicit all information about a valuation by simulating all 2m −1 value queries.",
                "We also observe that value queries and marginalvalue queries can simulate each other in polynomial time and that demand queries and indirect-utility queries can also simulate each other in polynomial time.",
                "We prove that exponentially many value queries may be needed in order to simulate a single demand query.",
                "It is interesting to note that for the restricted class of substitutes valuations, demand queries may be simulated by polynomial number of value queries [6].",
                "Welfare approximation The next question that we ask is how well can a computationally-efficient auction that uses only demand queries approximate the optimal allocation?",
                "Two separate obstacles are known: In [32], a lower bound of min(n, m1/2− ), for any fixed > 0, was shown for the approximation factor apply for any fixed tie breaking rule. 7 This is exactly the utility achieved by the bundle which would be returned in a demand query with the same prices.",
                "This notion relates to the Indirect-utility function studied in the Microeconomic literature (see, e.g., [27]). 8 Note that when all the prices are 1, the bidder actually reports the bundle with the highest per-item price.",
                "We found this type of query useful, for example, in the design of the approximation algorithm described in Figure 5 in Section 4.2. obtained using any polynomial amount of communication.",
                "A computational bound with the same value applies even for the case of single-minded bidders, but under the assumption of NP = ZPP [39].",
                "As noted in [32], the computationallyefficient greedy algorithm of [26] can be adapted to become a polynomial-time iterative auction that achieves a nearly matching approximation factor of min(n, O( √ m)).",
                "This iterative auction may be implemented with bundle-price demand queries but, as far as we see, not as one with item prices.",
                "Since in a single bundle-price demand query an exponential number of prices can be presented, this algorithm can have an exponential communication cost.",
                "In Section 4.2, we describe a different item-price auction that achieves the same approximation factor with a polynomial number of queries (and thus with a polynomial communication).",
                "Theorem: There exists a computationally-efficient iterative auction with item-price demand queries that finds an allocation that approximates the optimal welfare between arbitrary valuations to within a factor of min(n, O( √ m)).",
                "One may then attempt obtaining such an approximation factor using iterative auctions that use only the weaker value queries.",
                "However, we show that this is impossible: Theorem: Any iterative auction that uses a polynomial (in n and m) number of value queries can not achieve an approximation factor that is better than O( m log m ).9 Note however that auctions with only value queries are not completely trivial in power: the bundling auctions of Holzman et al. [19] can easily be implemented by a polynomial number of value queries and can achieve an approximation factor of O( m√ log m ) by using O(log m) equi-sized bundles.",
                "We do not know how to close the (tiny) gap between this upper bound and our lower bound.",
                "Representing bundle-prices We then deal with a critical issue with bundle-price auctions that was side-stepped by our model, as well as by all previous works that used bundle-price auctions: how are 9 This was also proven independently by Shahar Dobzinski and Michael Schapira. 32 the bundle prices represented?",
                "For item-price auctions this is not an issue since a query needs only to specify a small number, m, of prices.",
                "In bundle-price auctions that situation is more difficult since there are exponentially many bundles that require pricing.",
                "Our basic model (like all previous work that used bundle prices, e.g., [37, 34, 3]), ignores this issue, and only requires that the prices be determined, somehow, by the protocol.",
                "A finer model would fix a specific language for denoting bundle prices, force the protocol to represent the bundle-prices in this language, and require that the representations of the bundle-prices also be polynomial.",
                "What could such a language for denoting prices for all bundles look like?",
                "First note that specifying a price for each bundle is equivalent to specifying a valuation.",
                "Second, as noted in [31], most of the proposed bidding languages are really just languages for representing valuations, i.e., a syntactic representation of valuations - thus we could use any of them.",
                "This point of view opens up the general issue of which language should be used in bundle-price auctions and what are the implications of this choice.",
                "Here we initiate this line of investigation.",
                "We consider bundle-price auctions where the prices must be given as a XOR-bid, i.e., the protocol must explicitly indicate the price of every bundle whose value is different than that of all of its proper subsets.",
                "Note that all bundle-price auctions that do not explicitly specify a bidding language must implicitly use this language or a weaker one, since without a specific language one would need to list prices for all bundles, perhaps except for trivial ones (those with value 0, or more generally, those with a value that is determined by one of their proper subsets.)",
                "We show that once the representation length of bundle prices is taken into account (using the XOR-language), bundle-price auctions are no more strictly stronger than item-price auctions.",
                "Define the cost of an iterative auction as the total length of the queries and answers used throughout the auction (in the worst case).",
                "Theorem: For some class of valuations, bundle price auctions that use the XOR-language require an exponential cost for finding the optimal allocation.",
                "In contrast, item-price auctions can find the optimal allocation for this class within polynomial cost.10 This put doubts on the applicability of bundle-price auctions like [3, 37], and it may justify the use of hybrid pricing methods such as Ausubel, Cramton and Milgroms Clock-Proxy auction ([10]).",
                "Demand queries and linear programs The winner determination problem in combinatorial auctions may be formulated as an integer program.",
                "In many cases solving the linear-program relaxation of this integer program is useful: for some restricted classes of valuations it finds the optimum of the integer program (e.g., substitute valuations [22, 17]) or helps approximating the optimum (e.g., by randomized rounding [13, 14]).",
                "However, the linear program has an exponential number of variables.",
                "Nisan and Segal [32] observed the surprising fact that despite the ex10 Our proof relies on the sophisticated known lower bounds for constant depth circuits.",
                "We were not able to find an elementary proof. ponential number of variables, this linear program may be solved within polynomial communication.",
                "The basic idea is to solve the dual program using the Ellipsoid method (see, e.g., [20]).",
                "The dual program has a polynomial number of variables, but an exponential number of constraints.",
                "The Ellipsoid algorithm runs in polynomial time even on such programs, provided that a separation oracle is given for the set of constraints.",
                "Surprisingly, such a separation oracle can be implemented using a single demand query (with item prices) to each of the bidders.",
                "The treatment of [32] was somewhat ad-hoc to the problem at hand (the case of substitute valuations).",
                "Here we give a somewhat more general form of this important observation.",
                "Let us call the following class of linear programs generalized-winner-determination-relaxation (GWDR) LPs: Maximize X i∈N,S⊆M wi xi,S vi(S) s.t.",
                "X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M The case where wi = 1, di = 1, qj = 1 (for every i, j) is the usual linear relaxation of the winner determination problem.",
                "More generally, wi may be viewed as the weight given to bidder is welfare, qj may be viewed as the quantity of units of good j, and di may be viewed as duplicity of the number of bidders of type i. Theorem: Any GWDR linear program may be solved in polynomial time (in n, m, and the number of bits of precision t) using only demand queries with item prices.11 2.2 Ascending Auctions Ascending item-price auctions: It is well known that the item-price ascending auctions of Kelso and Crawford [22] and its variants [12, 16] find the optimal allocation as long as all players valuations have the substitutes property.",
                "The obvious question is whether the optimal allocation can be found for a larger class of valuations.",
                "Our main result here is a strong negative result: Theorem: There is a 2-item 2-player problem where no ascending item-price auction can find the optimal allocation.",
                "This is in contrast to both the power of bundle-price ascending auctions and to the power of general item-price demand queries (see above), both of which can always find the optimal allocation and in fact even provide full preference elicitation.",
                "The same proof proves a similar impossibility result for other types of auctions (e.g., descending auctions, non-anonymous auctions).",
                "More extension of this result: • Eliciting some classes of valuations requires an exponential number of ascending item-price trajectories. 11 The produced optimal solution will have polynomial support and thus can be listed fully. 33 • At least k − 1 ascending item-price trajectories are needed to elicit XOR formulae with k terms.",
                "This result is in some sense tight, since we show that any k-term XOR formula can be fully elicited by k−1 nondeterministic (i.e., when some exogenous teacher instructs the auctioneer on how to increase the prices) ascending auctions.12 We also show that item-price ascending auctions and iterative auctions that are limited to a polynomial number of queries (of any kind, not necessarily ascending) are incomparable in their power: ascending auctions, with small enough increments, can elicit the preferences in cases where any polynomial number of queries cannot.",
                "Motivated by several recent papers that studied the relation between eliciting and fully-eliciting the preferences in combinatorial auctions (e.g., [7, 24]), we explore the difference between these problems in the context of ascending auctions.",
                "We show that although a single ascending auction can determine the optimal allocation among any number of bidders with substitutes valuations, it cannot fully-elicit such a valuation even for a single bidder.",
                "While it was shown in [25] that the set of substitutes valuations has measure zero in the space of general valuations, its dimension is not known, and in particular it is still open whether a polynomial amount of information suffices to describe a substitutes valuation.",
                "While our result may be a small step in that direction (a polynomial full elicitation may still be possible with other communication protocols), we note that our impossibility result also holds for valuations in the class OXS defined by [25], valuations that we are able to show have a compact representation.",
                "We also give several results separating the power of different models for ascending combinatorial auctions that use item-prices: we prove, not surprisingly, that adaptive ascending auctions are more powerful than oblivious ascending auctions and that non-deterministic ascending auctions are more powerful than deterministic ascending auctions.",
                "We also compare different kinds of non-anonymous auctions (e.g., simultaneous or sequential), and observe that anonymous bundle-price auctions and non-anonymous item-price auctions are incomparable in their power.",
                "Finally, motivated by Dutch auctions, we consider descending auctions, and how they compare to ascending ones; we show classes of valuations that can be elicited by ascending item-price auctions but not by descending item-price auctions, and vice versa.",
                "Ascending bundle-price auctions: All known ascending bundle-price auctions that are able to find the optimal allocation between general valuations (with free disposal) use non-anonymous prices.",
                "Anonymous <br>ascending-price auction</br>s (e.g., [42, 21, 37]) are only known to be able to find the optimal allocation among superadditive valuations or few other simple classes ([36]).",
                "We show that this is no mistake: Theorem: No ascending auction with anonymous prices can find the optimal allocation between general valuations. 12 Non-deterministic computation is widely used in CS and also in economics (e.g, a Walrasian equilibrium or [38]).",
                "In some settings, deterministic and non-deterministic models have equal power (e.g., computation with finite automata).",
                "This bound is regardless of the running time, and it also holds for descending auctions and non-deterministic auctions.",
                "We strengthen this result significantly by showing that anonymous ascending auctions cannot produce a better than O( √ m) approximation - the approximation ratio that can be achieved with a polynomial number of queries ([26, 32]) and, as mentioned, with a polynomial number of item-price demand queries.",
                "The same lower bound clearly holds for anonymous item-price ascending auctions since such auctions can be simulated by anonymous bundle-price ascending auctions.",
                "We currently do not have any lower bound on the approximation achievable by non-anonymous item-price ascending auctions.",
                "Finally, we study the performance of the existing computationally-efficient ascending auctions.",
                "These protocols ([37, 3]) require exponential time in the worst case, and this is unavoidable as shown by [32].",
                "However, we also observe that these auctions, as well as the whole class of similar ascending bundle-price auctions, require an exponential time even for simple additive valuations.",
                "This is avoidable and indeed the ascending item-price auctions of [22] can find the optimal allocation for these simple valuations with polynomial communication. 3.",
                "THE MODEL 3.1 Discrete Auctions for Continuous Values Our model aims to capture iterative auctions that operate on real-valued valuations.",
                "There is a slight technical difficulty here in bridging the gap between the discrete nature of an iterative auction, and the continuous nature of the valuations.",
                "This is exactly the same problem as in modeling a simple English auction.",
                "There are three standard formal ways to model it: 1.",
                "Model the auction as a continuous process and study its trajectory in time.",
                "For example, the so-called Japanese auction is basically a continuous model of an English model.13 2.",
                "Model the auction as discrete and the valuations as continuously valued.",
                "In this case we introduce a parameter and usually require the auction to produce results that are -close to optimal. 3.",
                "Model the valuations as discrete.",
                "In this case we will assume that all valuations are integer multiples of some small fixed quantity δ, e.g., 1 penny.",
                "All communication in this case is then naturally finite.",
                "In this paper we use the latter formulation and assume that all values are multiples of some δ.",
                "Thus, in some parts of the paper we assume without loss of generality that δ = 1, hence all valuations are integral.",
                "Almost all (if not all) of our results can be translated to the other two models with little effort. 3.2 Valuations A single auctioneer is selling m indivisible non-homogeneous items in a single auction, and let M be the set of these 13 Another similar model is the moving knives model in the cake-cutting literature. 34 items and N be the set of bidders.",
                "Each one of the n bidders in the auction has a valuation function vi : 2m → {0, δ, 2δ, ..., L}, where for every bundle of items S ⊆ M, vi(S) denotes the value of bidder i for the bundle S and is a multiple of δ in the range 0...L. We will sometimes denote the number of bits needed to represent such values in the range 0...L by t = log L. We assume free disposal, i.e., S ⊆ T implies vi(S) ≤ vi(T) and that vi(∅) = 0 for all bidders.",
                "We will mention the following classes of valuations: • A valuation is called sub-modular if for all sets of items A and B we have that v(A ∪ B) + v(A ∩ B) ≤ v(A) + v(B). • A valuation is called super-additive if for all disjoint sets of items A and B we have that v(A∪B) ≥ v(A)+ v(B). • A valuation is called a k-bundle XOR if it can be represented as a XOR combination of at most k atomic bids [30], i.e., if there are at most k bundles Si and prices pi such that for all S, v(S) = maxi|S⊇Si pi.",
                "Such valuations will be denoted by v = (S1 : p1) ⊕ (S2 : p2) ⊕ . . . ⊕ (Sk : pk).14 3.3 Iterative Auctions The auctioneer sets up a protocol (equivalently an algorithm), where at each stage of the protocol some information q - termed the query - is sent to some bidder i, and then bidder i replies with some reply that depends on the query as well as on his own valuation.",
                "In this paper, we assume that we have complete control over the bidders behavior, and thus the protocol also defines a reply function ri(q, vi) that specifies bidder is reply to query q.",
                "The protocol may be adaptive: the query value as well as the queried bidder may depend on the replies received for past queries.",
                "At the end of the protocol, an allocation S1...Sn must be declared, where Si ∩ Sj = ∅ for i = j.",
                "We say that the auction finds an optimal allocation if it finds the allocation that maximizes the social welfareP i vi(Si).",
                "We say that it finds a c-approximation if P i vi(Si) ≥ P i vi(Ti)/c where T1...Tn is an optimal allocation.",
                "The running time of the auction on a given instance of the bidders valuations is the total number of queries made on this instance.",
                "The running time of a protocol is the worst case cost over all instances.",
                "Note that we impose no computational limitations on the protocol or on the players.15 This of course only strengthens our hardness results.",
                "Yet, our positive results will not use this power and will be efficient also in the usual computational sense.",
                "Our goal will be to design computationally-efficient protocols.",
                "We will deem a protocol computationally-efficient if its cost is polynomial in the relevant parameters: the number of bidders n, the number of items m, and t = log L, where L is the largest possible value of a bundle.",
                "However, when we discuss <br>ascending-price auction</br>s and their variants, a computationally-efficient protocol will be required to be 14 For example, v = (abcd : 5) ⊕ (ab : 3) ⊕ (c : 4) denotes the XOR valuation with the terms abcd, ab, c and prices 5, 3, 4 respectively.",
                "For this valuation, v(abcd) = 5, v(abd) = 3, v(abc) = 4. 15 The running time really measures communication costs and not computational running time. pseudo-polynomial, i.e., it should ask a number of queries which is polynomial in m, n and L δ .",
                "This is because that ascending auctions can usually not achieve such running times (consider even the English auction on a single item).16 Note that all of our results give concrete bounds, where the dependence on the parameters is given explicitly; we use the standard big-Oh notation just as a shorthand.",
                "We say than an auction elicits some class V of valuations, if it determines the optimal allocation for any profile of valuations drawn from V ; We say that an auction fully elicits some class of valuations V , if it can fully learn any single valuation v ∈ V (i.e., learn v(S) for every S). 3.4 Demand Queries and Ascending Auctions Most of the paper will be concerned with a common special case of iterative auctions that we term demand auctions.",
                "In such auctions, the queries that are sent to bidders are demand queries: the query specifies a price p(S) ∈ + for each bundle S. The reply of bidder i is simply the set most desired - demanded - under these prices.",
                "Formally, a set S that maximizes vi(S) − p(S).",
                "It may happen that more than one set S maximizes this value.",
                "In which case, ties are broken according to some fixed tie-breaking rule, e.g., the lexicographically first such set is returned.",
                "All of our results hold for any fixed tie-breaking rule.",
                "Ascending auctions are iterative auctions with non-decreasing prices: Definition 1.",
                "In an ascending auction, the prices in the queries to the same bidder can only increase in time.",
                "Formally, let p be a query made for bidder i, and q be a query made for bidder i at a later stage in the protocol.",
                "Then for all sets S, q(S) ≥ p(S).",
                "A similar variant, which we also study and that is also common in real life, is descending auctions, in which prices can only decrease in time.",
                "Note that the term ascending auction refers to an auction with a single ascending trajectory of prices.",
                "It may be useful to define multi-trajectory ascending auctions, in which the prices maybe reset to zero a number of times (see, e.g., [4]).",
                "We consider two main restrictions on the types of allowed demand queries: Definition 2.",
                "Item Prices: The prices in each query are given by prices pj for each item j.",
                "The price of a set S is additive: p(S) = P j∈S pj.",
                "Definition 3.",
                "Anonymous prices: The prices seen by the bidders at any stage in the auction are the same, i.e. whenever a query is made to some bidder, the same query is also made to all other bidders (with the prices unchanged).",
                "In auctions with non-anonymous (discriminatory) prices, each bidder i has personalized prices denoted by pi (S).17 In this paper, all auctions are anonymous unless otherwise specified.",
                "Note that even though in our model valuations are integral (or multiples of some δ), we allow the demand query to 16 Most of the auctions we present may be adapted to run in time polynomial in log L, using a binary-search-like procedure, losing their ascending nature. 17 Note that a non-anonymous auction can clearly be simulated by n parallel anonymous auctions. 35 use arbitrary real numbers in +.",
                "That is, we assume that the increment we use in the ascending auctions may be significantly smaller than δ.",
                "All our hardness results hold for any , even for continuous price increments.",
                "A practical issue here is how will the query be specified: in the general case, an exponential number of prices needs to be sent in a single query.",
                "Formally, this is not a problem as the model does not limit the length of queries in any way - the protocol must simply define what the prices are in terms of the replies received for previous queries.",
                "We look into this issue further in Section 4.3. 4.",
                "THE POWER OF DEMAND QUERIES In this section, we study the power of iterative auctions that use demand queries (not necessarily ascending).",
                "We start by comapring demand queries to other types of queries.",
                "Then, we discuss how well can one approximate the optimal welfare using a polynomial number of demand queries.",
                "We also initiate the study of the representation of bundle-price demand queries, and finally, we show how demand queries help solving the linear-programming relaxation of combinatorial auctions in polynomial time. 4.1 The Power of Different Types of Queries In this section we compare the power of the various types of queries defined in Section 2.",
                "We will present computationally -efficient simulations of these query types using item-price demand queries.",
                "In Section 5.1 we show that these simulations can also be done using item-price ascending auctions.",
                "Lemma 4.1.",
                "A value query can be simulated by m marginalvalue queries.",
                "A marginal-value query can be simulated by two value queries.",
                "Lemma 4.2.",
                "A value query can be simulated by mt demand queries (where t = log L is the number of bits needed to represent a single bundle value).18 As a direct corollary we get that demand auctions can always fully elicit the bidders valuations by simulating all possible 2m − 1 queries and thus elicit enough information for determining the optimal allocation.",
                "Note, however, that this elicitation may be computationally inefficient.",
                "The next lemma shows that demand queries can be exponentially more powerful than value queries.",
                "Lemma 4.3.",
                "An exponential number of value queries may be required for simulating a single demand query.",
                "Indirect utility queries are, however, equivalent in power to demand queries: Lemma 4.4.",
                "An indirect-utility query can be simulated by mt + 1 demand queries.",
                "A demand query can be simulated by m + 1 indirect-utility queries.",
                "Demand queries can also simulate relative-demand queries:19 18 Note that t bundle-price demand queries can easily simulate a value query by setting the prices of all the bundles except S (the bundle with the unknown value) to be L, and performing a binary search on the price of S. 19 Note: although in our model values are integral (our multiples of δ), we allow the query prices to be arbitrary real numV MV D IU RD V 1 2 exp exp exp MV m 1 exp exp exp D mt poly 1 mt+1 poly IU 1 2 m+1 1 poly RD - - - - 1 Figure 4: Each entry in the table specifies how many queries of this row are needed to simulate a query from the relevant column.",
                "Abbreviations: V (value query), MV (marginal-value query), D (demand query), IU (Indirect-utility query), RD (relative demand query).",
                "Lemma 4.5.",
                "Relative-demand queries can be simulated by a polynomial number of demand queries.",
                "According to our definition of relative-demand queries, they clearly cannot simulate even value queries.",
                "Figure 4 summarizes the relations between these query types. 4.2 Approximating the Social Welfare with Value and Demand Queries We know from [32] that iterative combinatorial auctions that only use a polynomial number of queries can not find an optimal allocation among general valuations and in fact can not even approximate it to within a factor better than min{n, m1/2− }.",
                "In this section we ask how well can this approximation be done using demand queries with item prices, or using the weaker value queries.",
                "We show that, using demand queries, the lower bound can be matched, while value queries can only do much worse.",
                "Figure 5 describes a polynomial-time algorithm that achieves a min(n, O( √ m)) approximation ratio.",
                "This algorithm greedily picks the bundles that maximize the bidders per-item value (using relative-demand queries, see Section 4.1).",
                "As a final step, it allocates all the items to a single bidder if it improves the social welfare (this can be checked using value queries).",
                "Since both value queries and relative-demand queries can be simulated by a polynomial number of demand queries with item prices (Lemmas 4.2 and 4.5), this algorithm can be implemented by a polynomial number of demand queries with item prices.20 Theorem 4.6.",
                "The auction described in Figure 5 can be implemented by a polynomial number of demand queries and achieves a min{n, 4 √ m}-approximation for the social welfare.",
                "We now ask how well can the optimal welfare be approximated by a polynomial number of value queries.",
                "First we note that value queries are not completely powerless: In [19] it is shown that if the m items are split into k fixed bundles of size m/k each, and these fixed bundles are auctioned as though each was indivisible, then the social welfare bers, thus we may have bundles with arbitrarily close relative demands.",
                "In this sense the simulation above is only up to any given (and the number of queries is O(log L+log 1 )).",
                "When the relative-demand query prices are given as rational numbers, exact simulation is implied when log is linear in the input length. 20 In the full paper [8], we observe that this algorithm can be implemented by two descending item-price auctions (where we allow removing items along the auction). 36 generated by such an auction is at least m√ k -approximation of that possible in the original auction.",
                "Notice that such an auction can be implemented by 2k − 1 value queries to each bidder - querying the value of each bundle of the fixed bundles.",
                "Thus, if we choose k = log m bundles we get an m√ log m -approximation while still using a polynomial number of queries.",
                "The following lemma shows that not much more is possible using value queries: Lemma 4.7.",
                "Any iterative auction that uses only value queries and distinguishes between k-tuples of 0/1 valuations where the optimal allocation has value 1, and those where the optimal allocation has value k requires at least 2 m k queries.",
                "Proof.",
                "Consider the following family of valuations: for every S, such that |S| > m/2, v(S) = 1, and there exists a single set T, such that for |S| ≤ m/2, v(S) = 1 iff T ⊆ S and v(S) = 0 otherwise.",
                "Now look at the behavior of the protocol when all valuations vi have T = {1...m}.",
                "Clearly in this case the value of the best allocation is 1 since no set of size m 2 or lower has non-zero value for any player.",
                "Fix the sequence of queries and answers received on this k-tuple of valuations.",
                "Now consider the k-tuple of valuations chosen at random as follows: a partition of the m items into k sets T1...Tk each of size m k each is chosen uniformly at random among all such partitions.",
                "Now consider the k-tuple of valuations from our family that correspond to this partition - clearly Ti can be allocated to i, for each i, getting a total value of k. Now look at the protocol when running on these valuations and compare its behavior to the original case.",
                "Note that the answer to a query S to player i differs between the case of Ti and the original case of T = {1...m} only if |S| ≤ m 2 and Ti ⊆ S. Since Ti is distributed uniformly among all sets of size exactly m k , we have that for any fixed query S to player i, where |S| ≤ m 2 , Pr[Ti ⊆ S] ≤ „ |S| m «|Ti| ≤ 2− m k Using the union-bound, if the original sequence of queries was of length less than 2 m k , then with positive probability none of the queries in the sequence would receive a different answer than for the original input tuple.",
                "This is forbidden since the protocol must distinguish between this case and the original case - which cannot happen if all queries receive the same answer.",
                "Hence there must have been at least 2 m k queries for the original tuple of valuations.",
                "We conclude that a polynomial time protocol that uses only value queries cannot obtain a better than O( m log m ) approximation of the welfare: Theorem 4.8.",
                "An iterative auction that uses a polynomial number of value queries cannot achieve better than O( m log m )-approximation for the social welfare.",
                "Proof.",
                "Immediate from Lemma 4.7: achieving any approximation ratio k which is asymptotically greater than m log m needs an exponential number of value queries.",
                "An Approximation Algorithm: Initialization: Let T ← M be the current items for sale.",
                "Let K ← N be the currently participating bidders.",
                "Let S∗ 1 ← ∅, ..., S∗ n ← ∅ be the provisional allocation.",
                "Repeat until T = ∅ or K = ∅: Ask each bidder i in K for the bundle Si that maximizes her per-item value, i.e., Si ∈ argmaxS⊆T vi(S) |S| .",
                "Let i be the bidder with the maximal per-item value, i.e., i ∈ argmaxi∈K vi(Si) |Si| .",
                "Set: s∗ i = si, K = K \\ i, M = M \\ Si Finally: Ask the bidders for their values vi(M) for the grand bundle.",
                "If allocating all the items to some bidder i improves the social welfare achieved so far (i.e., ∃i ∈ N such that vi(M) > P i∈N vi(S∗ i )), then allocate all items to this bidder i.",
                "Figure 5: This algorithm achieves a min{n, 4 √ m}approximation for the social welfare, which is asymptotically the best worst-case approximation possible with polynomial communication.",
                "This algorithm can be implemented with a polynomial number of demand queries. 4.3 The Representation of Bundle Prices In this section we explicitly fix the language in which bundle prices are presented to the bidders in bundle-price auctions.",
                "This language requires the algorithm to explicitly list the price of every bundle with a non-trivial price.",
                "Trivial in this context is a price that is equal to that of one of its proper subsets (which was listed explicitly).",
                "This representation is equivalent to the XOR-language for expressing valuations.",
                "Formally, each query q is given by an expression: q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl).",
                "In this representation, the price demanded for every set S is simply p(S) = max{k=1...l|Sk⊆S}pk.",
                "Definition 4.",
                "The length of the query q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl) is l. The cost of an algorithm is the sum of the lengths of the queries asked during the operation of the algorithm on the worst case input.",
                "Note that under this definition, bundle-price auctions are not necessarily stronger than item-price auctions.",
                "An itemprice query that prices each item for 1, is translated to an exponentially long bundle-price query that needs to specify the price |S| for each bundle S. But perhaps bundle-price auctions can still find optimal allocations whenever itemprice auction can, without directly simulating such queries?",
                "We show that this is not the case: indeed, when the representation length is taken into account, bundle price auctions are sometimes seriously inferior to item price auctions.",
                "Consider the following family of valuations: Each item is valued at 3, except that for some single set S, its value is a bit more: 3|S| + b, where b ∈ {0, 1, 2}.",
                "Note that an item price auction can easily find the optimal allocation between any two such valuations: Set the prices of each item to 3+ ; if the demand sets of the two players are both empty, then b = 0 for both valuations, and an arbitrary allocation is fine.",
                "If one of them is empty and the other non-empty, allocate the non-empty demand set to its bidder, and the rest to the other.",
                "If both demand sets are non-empty then, unless they form an exact partition, we need to see which b is larger, which we can do by increasing the price of a single item in each demand set. 37 We will show that any bundle-price auction that uses only the XOR-language to describe bundle prices requires an exponential cost (which includes the sum of all description lengths of prices) to find an optimal allocation between any two such valuations.",
                "Lemma 4.9.",
                "Every bundle-price auction that uses XORexpressions to denote bundle prices requires 2Ω( √ m) cost in order to find the optimal allocation among two valuations from the above family.",
                "The complication in the proof stems from the fact that using XOR-expressions, the length of the price description depends on the number of bundles whose price is strictly larger than each of their subsets - this may be significantly smaller than the number of bundles that have a non-zero price. (The proof becomes easy if we require the protocol to explicitly name every bundle with non-zero price.)",
                "We do not know of any elementary proof for this lemma (although we believe that one can be found).",
                "Instead we reduce the problem to a well known lower bound in boolean circuit complexity [18] stating that boolean circuits of depth 3 that compute the majority function on m variables require 2Ω( √ m) size. 4.4 Demand Queries and Linear Programming Consider the following linear-programming relaxation for the generalized winner-determination problem in combinatorial auctions (the primal program): Maximize X i∈N,S⊆M wi xi,S vi(S) s.t.",
                "X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M Note that the primal program has an exponential number of variables.",
                "Yet, we will be able to solve it in polynomial time using demand queries to the bidders.",
                "The solution will have a polynomial size support (non-zero values for xi,S), and thus we will be able to describe it in polynomial time.",
                "Here is its dual: Minimize X j∈M qjpj + X i∈N diui s.t. ui + X j∈S pj ≥ wivi(S) ∀i ∈ N, S ⊆ M pi ≥ 0, uj ≥ 0 ∀i ∈ M, j ∈ N Notice that the dual problem has exactly n + m variables but an exponential number of constraints.",
                "Thus, the dual can be solved using the Ellipsoid method in polynomial time - if a separation oracle can be implemented in polynomial time.",
                "Recall that a separation oracle, when given a possible solution, either confirms that it is a feasible solution, or responds with a constraint that is violated by the possible solution.",
                "We construct a separation oracle for solving the dual program, using a single demand query to each of the bidders.",
                "Consider a possible solution (u, p) for the dual program.",
                "We can re-write the constraints of the dual program as: ui/wi ≥ vi(S) − X j∈S pj/wi Now a demand query to bidder i with prices pj/wi reveals exactly the set S that maximizes the RHS of the previous inequality.",
                "Thus, in order to check whether (u, p) is feasible it suffices to (1) query each bidder i for his demand Di under the prices pj/wi; (2) check only the n constraints ui + P j∈Di pj ≥ wivi(Di) (where vi(Di) can be simulated using a polynomial sequence of demand queries as shown in Lemma 4.2).",
                "If none of these is violated then we are assured that (u, p) is feasible; otherwise we get a violated constraint.",
                "What is left to be shown is how the primal program can be solved. (Recall that the primal program has an exponential number of variables.)",
                "Since the Ellipsoid algorithm runs in polynomial time, it encounters only a polynomial number of constraints during its operation.",
                "Clearly, if all other constraints were removed from the dual program, it would still have the same solution (adding constraints can only decrease the space of feasible solutions).",
                "Now take the reduced dual where only the constraints encountered exist, and look at its dual.",
                "It will have the same solution as the original dual and hence of the original primal.",
                "However, look at the form of this dual of the reduced dual.",
                "It is just a version of the primal program with a polynomial number of variables - those corresponding to constraints that remained in the reduced dual.",
                "Thus, it can be solved in polynomial time, and this solution clearly solves the original primal program, setting all other variables to zero. 5.",
                "ITEM-PRICE ASCENDING AUCTIONS In this section we characterize the power of ascending item-price auctions.",
                "We first show that this power is not trivial: such auctions can in general elicit an exponential amount of information.",
                "On the other hand, we show that the optimal allocation cannot always be determined by a single ascending auction, and in some cases, nor by an exponential number of ascending-price trajectories.",
                "Finally, we separate the power of different models of ascending auctions. 5.1 The Power of Item-Price Ascending Auctions We first show that if small enough increments are allowed, a single ascending trajectory of item-prices can elicit preferences that cannot be elicited with polynomial communication.",
                "As mentioned, all our hardness results hold for any increment, even infinitesimal.",
                "Theorem 5.1.",
                "Some classes of valuations can be elicited by item-price ascending auctions, but cannot be elicited by a polynomial number of queries of any kind.",
                "Proof. (sketch) Consider two bidders with v(S) = 1 if |S| > n 2 , v(S) = 0 if |S| < n 2 and every S such that |S| = n 2 has an unknown value from {0, 1}.",
                "Due to [32], determining the optimal allocation here requires exponential communication in the worst case.",
                "Nevertheless, we show (see [9]) that an item-price ascending auction can do it, as long as it can use exponentially small increments.",
                "We now describe another positive result for the power of item-price ascending auctions.",
                "In section 4.1, we showed 38 v(ab) v(a) v(b) Bidder 1 2 α ∈ (0, 1) β ∈ (0, 1) Bidder 2 2 2 2 Figure 6: No item-price ascending auctions can determine the optimal allocation for this class of valuations. that a value query can be simulated with a (truly) polynomial number of item-price demand queries.",
                "Here, we show that every value query can be simulated by a (pseudo) polynomial number of ascending item-price demand queries. (In the next subsection, we show that we cannot always simulate even a pair of value queries using a single item-price ascending auction.)",
                "In the full paper (part II,[9]), we show that we can simulate other types of queries using item-price ascending auctions.",
                "Proposition 5.2.",
                "A value query can be simulated by an item-price ascending auction.",
                "This simulation requires a polynomial number of queries.",
                "Actually, the proof for Proposition 5.2 proves a stronger useful result regarding the information elicited by iterative auctions.",
                "It says that in any iterative auction in which the changes of prices are small enough in each stage (pseudocontinuous auctions), the value of all bundles demanded during the auction can be computed.",
                "The basic idea is that when the bidder moves from demanding some bundle Ti to demanding another bundle Ti+1, there is a point in which she is indifferent between these two bundles.",
                "Thus, knowing the value of some demanded bundle (e.g., the empty set) enables computing the values of all other demanded bundles.",
                "We say that an auction is pseudo-continuous, if it only uses demand queries, and in each step, the price of at most one item is changed by (for some ∈ (0, δ]) with respect to the previous query.",
                "Proposition 5.3.",
                "Consider any pseudo-continuous auction (not necessarily ascending), in which bidder i demands the empty set at least once along the auction.",
                "Then, the value of every bundle demanded by bidder i throughout the auction can be calculated at the end of the auction. 5.2 Limitations of Item-Price Ascending Auctions Although we observed that demand queries can solve any combinatorial auction problem, when the queries are restricted to be ascending, some classes of valuations cannot be elicited nor fully-elicited.",
                "An example for such class of valuations is given in Figure 6.",
                "Theorem 5.4.",
                "There are classes of valuations that cannot be elicited nor fully elicited by any item-price ascending auction.",
                "Proof.",
                "Let bidder 1 have the valuation described in the first row of Figure 6, where α and β are unknown values in (0, 1).",
                "First, we prove that this class cannot be fully elicited by a single ascending auction.",
                "Specifically, an ascending auction cannot reveal the values of both α and β.",
                "As long as pa and pb are both below 1, the bidder will always demand the whole bundle ab: her utility from ab is strictly greater than the utility from either a or b separately.",
                "For example, we show that u1(ab) > u1(a): u1(ab) = 2 − (pa + pb) = 1 − pa + 1 − pb > vA(a) − pa + 1 − pb > u1(a) Thus, in order to gain any information about α or β, the price of one of the items should become at least 1, w.l.o.g. pa ≥ 1.",
                "But then, the bundle a will not be demanded by bidder 1 throughout the auction, thus no information at all will be gained about α.",
                "Now, assume that bidder 2 is known to have the valuation described in the second row of Figure 6.",
                "The optimal allocation depends on whether α is greater than β (in bidder 1s valuation), and we proved that an ascending auction cannot determine this.",
                "The proof of the theorem above shows that for an unknown value to be revealed, the price of one item should be greater than 1, and the other price should be smaller than 1.",
                "Therefore, in a price-monotonic trajectory of prices, only one of these values can be revealed.",
                "An immediate conclusion is that this impossibility result also holds for item-price descending auctions.",
                "Since no such trajectory exists, then the same conclusion even holds for non-deterministic itemprice auctions (in which exogenous data tells us how to increase the prices).",
                "Also note that since the hardness stems from the impossibility to fully-elicit a valuation of a single bidder, this result also holds for non-anonymous ascending item-price auctions. 5.3 Limitations of Multi-Trajectory Ascending Auctions According to Theorem 5.4, no ascending item-price auction can always elicit the preferences (we prove a similar result for bundle prices in section 6).",
                "But can two ascending trajectories do the job?",
                "Or a polynomial number of ascending trajectories?",
                "We give negative answers for such suggestions.",
                "We define a k-trajectory ascending auction as a demandquery iterative auction in which the demand queries can be partitioned to k sets of queries, where the prices published in each set only increase in time.",
                "Note that we use a general definition; It allows the trajectories to run in parallel or sequentially, and to use information elicited in some trajectories for determining the future queries in other trajectories.",
                "The power of multiple-trajectory auctions can be demonstrated by the negative result of Gul and Stacchetti [17] who showed that even for an auction among substitutes valuations, an anonymous ascending item-price auction cannot compute VCG prices for all players.21 Ausubel [4] overcame this impossibility result and designed auctions that do compute VCG prices by organizing the auction as a sequence of n + 1 ascending auctions.",
                "Here, we prove that one cannot elicit XOR valuations with k terms by less than k − 1 ascending trajectories.",
                "On the other hand, we show that an XOR formula can be fully elicited by k−1 non-deterministic ascending auctions (or by k−1 deterministic ascending auctions if the auctioneer knows the atomic bundles).22 21 A recent unpublished paper by Mishra and Parkes extends this result, and shows that non-anonymous prices with bundle-prices are necessary in order that an ascending auction will end up with a universal-competitive-equilibrium (that leads to VCG payments). 22 This result actually separates the power of deterministic 39 Proposition 5.5.",
                "XOR valuations with k terms cannot be elicited (or fully elicited) by any (k-2)-trajectory itemprice ascending auction, even when the atomic bundles are known to the elicitor.",
                "However, these valuations can be elicited (and fully elicited) by (k-1)-trajectory non-deterministic non-anonymous item-price ascending auctions.",
                "Moreover, an exponential number of trajectories is required for eliciting some classes of valuations: Proposition 5.6.",
                "Elicitation and full-elicitation of some classes of valuations cannot be done by any k-trajectory itemprice ascending auction, where k = o(2m ).",
                "Proof. (sketch) Consider the following class of valuations: For |S| < m 2 , v(S) = 0 and for |S| > m 2 , v(S) = 2; every bundle S of size m 2 has some unknown value in (0, 1).",
                "We show ([9]) that a single item-price ascending auction can reveal the value of at most one bundle of size n 2 , and therefore an exponential number of ascending trajectories is needed in order to elicit such valuations.",
                "We observe that the algorithm we presented in Section 4.2 can be implemented by a polynomial number of ascending auctions (each item-price demand query can be considered as a separate ascending auction), and therefore a min(n, 4 √ m)-approximation can be achieved by a polynomial number of ascending auctions.",
                "We do not currently have a better upper bound or any lower bound. 5.4 Separating the Various Models of Ascending Auctions Various models for ascending auctions have been suggested in the literature.",
                "In this section, we compare the power of the different models.",
                "As mentioned, all auctions are considered anonymous and deterministic, unless specified otherwise.",
                "Ascending vs.",
                "Descending Auctions: We begin the discussion of the relation between ascending auctions and descending auctions with an example.",
                "The algorithm by Lehmann, Lehmann and Nisan [25] can be implemented by a simple item-price descending auction (see the full paper for details [9]).",
                "This algorithm guarantees at least half of the optimal efficiency for submodular valuations.",
                "However, we are not familiar with any ascending auction that guarantees a similar fraction of the efficiency.",
                "This raises a more general question: can ascending auctions solve any combinatorialauction problem that is solvable using a descending auction (and vice versa)?",
                "We give negative answers to these questions.",
                "The idea behind the proofs is that the information that the auctioneer can get for free at the beginning of each type of auction is different.23 and non-deterministic iterative auctions: our proof shows that a non-deterministic iterative auction can elicit the kterm XOR valuations with a polynomial number of demand queries, and [7] show that this elicitation must take an exponential number of demand queries. 23 In ascending auctions, the auctioneer can reveal the most valuable bundle (besides M) before she starts raising the prices, thus she can use this information for adaptively choose the subsequent queries.",
                "In descending auctions, one can easily find the bundle with the highest average per-item price, keeping all other bundles with non-positive utilities, and use this information in the adaptive price change.",
                "Proposition 5.7.",
                "There are classes that cannot be elicited (fully elicited) by ascending item-price auctions, but can be elicited (resp. fully elicited) with a descending item-price auction.",
                "Proposition 5.8.",
                "There are classes that cannot be elicited (fully elicited) by item-price descending auctions, but can be elicited (resp. fully elicited) by item-price ascending auctions.",
                "Deterministic vs. Non-Deterministic Auctions: Nondeterministic ascending auctions can be viewed as auctions where some benevolent teacher that has complete information guides the auctioneer on how she should raise the prices.",
                "That is, preference elicitation can be done by a non-deterministic ascending auction, if there is some ascending trajectory that elicits enough information for determining the optimal allocation (and verifying that it is indeed optimal).",
                "We show that non-deterministic ascending auctions are more powerful than deterministic ascending auctions: Proposition 5.9.",
                "Some classes can be elicited (fully elicited) by an item-price non-deterministic ascending auction, but cannot be elicited (resp. fully elicited) by item-price deterministic ascending auctions.",
                "Anonymous vs. Non-Anonymous Auctions: As will be shown in Section 6, the power of anonymous and nonanonymous bundle-price ascending auctions differs significantly.",
                "Here, we show that a difference also exists for itemprice ascending auctions.",
                "Proposition 5.10.",
                "Some classes cannot be elicited by anonymous item-price ascending auctions, but can be elicited by a non-anonymous item-price ascending auction.",
                "Sequential vs.",
                "Simultaneous Auctions: A non-anonymous auction is called simultaneous if at each stage, the price of some item is raised by for every bidder.",
                "The auctioneer can use the information gathered until each stage, in all the personalized trajectories, to determine the next queries.",
                "A non-anonymous auction is called sequential if the auctioneer performs an auction for each bidder separately, in sequential order.",
                "The auctioneer can determine the next query based on the information gathered in the trajectories completed so far and on the history of the current trajectory.",
                "Proposition 5.11.",
                "There are classes that cannot be elicited by simultaneous non-anonymous item-price ascending auctions, but can be elicited by a sequential non-anonymous item-price ascending auction.",
                "Adaptive vs.",
                "Oblivious Auctions: If the auctioneer determines the queries regardless of the bidders responses (i.e., the queries are predefined) we say that the auction is oblivious.",
                "Otherwise, the auction is adaptive.",
                "We prove that an adaptive behaviour of the auctioneer may be beneficial.",
                "Proposition 5.12.",
                "There are classes that cannot be elicited (fully elicited) using oblivious item-price ascending auctions, but can be elicited (resp. fully elicited) by an adaptive item-price ascending auction. 40 5.5 Preference Elicitation vs. Full Elicitation Preference elicitation and full elicitation are closely related problems.",
                "If full elicitation is easy (e.g., in polynomial time) then clearly elicitation is also easy (by a nonanonymous auction, simply by learning all the valuations separately24 ).",
                "On the other hand, there are examples where preference elicitation is considered easy but learning is hard (typically, elicitation requires smaller amount of information; some examples can be found in [7]).",
                "The tatonnement algorithms by [22, 12, 16] end up with the optimal allocation for substitutes valuations.25 We prove that we cannot fully elicit substitutes valuations (or even their sub-class of OXS valuations defined in [25]), even for a single bidder, by an item-price ascending auction (although the optimal allocation can be found by an ascending auction for any number of bidders!).",
                "Theorem 5.13.",
                "Substitute valuations cannot be fully elicited by ascending item-price auctions.",
                "Moreover, they cannot be fully elicited by any m 2 ascending trajectories (m > 3).",
                "Whether substitutes valuations have a compact representation (i.e., polynomial in the number of goods) is an important open question.",
                "As a step in this direction, we show that its sub-class of OXS valuations does have a compact representation: every OXS valuation can be represented by at most m2 values.26 Lemma 5.14.",
                "Any OXS valuation can be represented by no more than m2 values. 6.",
                "BUNDLE-PRICE ASCENDING AUCTIONS All the ascending auctions in the literature that are proved to find the optimal allocation for unrestricted valuations are non-anonymous bundle-price auctions (iBundle(3) by Parkes and Ungar [37] and the Proxy Auction by Ausubel and Milgrom [3]).",
                "Yet, several anonymous ascending auctions have been suggested (e.g., AkBA [42], [21] and iBundle(2) [37]).",
                "In this section, we prove that anonymous bundle-price ascending auctions achieve poor results in the worst-case.",
                "We also show that the family of non-anonymous bundleprice ascending auctions can run exponentially slower than simple item-price ascending auctions. 6.1 Limitations of Anonymous Bundle-Price Ascending Auctions We present a class of valuations that cannot be elicited by anonymous bundle-price ascending auctions.",
                "These valuations are described in Figure 7.",
                "The basic idea: for determining some unknown value of one bidder we must raise 24 Note that an anonymous ascending auction cannot necessarily elicit a class that can be fully elicited by an ascending auction. 25 Substitute valuations are defined, e.g., in [16].",
                "Roughly speaking, a bidder with a substitute valuation will continue demand a certain item after the price of some other items was increased.",
                "For completeness, we present in the full paper [9] a proof for the efficiency of such auctions for substitutes valuations. 26 A unit-demand valuation is an XOR valuation in which all the atomic bundles are singletons.",
                "OXS valuations can be interpreted as an aggregation (OR) of any number of unit-demand bidders.",
                "Bid. 1 v1(ac) = 2 v1(bd) = 2 v1(cd) = α ∈ (0, 1) Bid. 2 v2(ab) = 2 v2(cd) = 2 v2(bd) = β ∈ (0, 1) Figure 7: Anonymous ascending bundle-price auctions cannot determine the optimal allocation for this class of valuations. a price of a bundle that should be demanded by the other bidder in the future.",
                "Theorem 6.1.",
                "Some classes of valuations cannot be elicited by anonymous bundle-price ascending auctions.",
                "Proof.",
                "Consider a pair of XOR valuations as described in Figure 7.",
                "For finding the optimal allocation we must know which value is greater between α and β.27 However, we cannot learn the value of both α and β by a single ascending trajectory: assume w.l.o.g. that bidder 1 demands cd before bidder 2 demands bd (no information will be elicited if none of these happens).",
                "In this case, the price for bd must be greater than 1 (otherwise, bidder 1 prefers bd to cd).",
                "Thus, bidder 2 will never demand the bundle bd, and no information will be elicited about β.",
                "The valuations described in the proof of Theorem 6.1 can be easily elicited by a non-anonymous item-price ascending auction.",
                "On the other hand, the valuations in Figure 6 can be easily elicited by an anonymous bundle-price ascending auction.",
                "We conclude that the power of these two families of ascending auctions is incomparable.",
                "We strengthen the impossibility result above by showing that anonymous bundle-price auctions cannot even achieve better than a min{O(n), O( √ m)}-approximation for the social welfare.",
                "This approximation ratio can be achieved with polynomial communication, and specifically with a polynomial number of item-price demand queries.28 Theorem 6.2.",
                "An anonymous bundle-price ascending auction cannot guarantee better than a min{ n 2 , √ m 2 } approximation for the optimal welfare.",
                "Proof. (Sketch) Assume we have n bidders and n2 items for sale, and that n is prime.",
                "We construct n2 distinct bundles with the following properties: for each bidder, we define a partition Si = (Si 1, ..., Si n) of the n2 items to n bundles, such that any two bundles from different partitions intersect.",
                "In the full paper, part II [9] we show an explicit construction using the properties of linear functions over finite fields.",
                "The rest of the proof is independent of the specific construction.",
                "Using these n2 bundles we construct a hard-to-elicit class.",
                "Every bidder has an atomic bid, in his XOR valuation, for each of these n2 bundles.",
                "A bidder i has a value of 2 for any bundle Si j in his partition.",
                "For all bundles in the other partitions, he has a value of either 0 or of 1 − δ, and these values are unknown to the auctioneer.",
                "Since every pair of bundles from different partitions intersect, only one bidder can receive a bundle with a value of 2. 27 If α > β, the optimal allocation will allocate cd to bidder 1 and ab to bidder 2.",
                "Otherwise, we give bd to bidder 2 and ac to bidder 1.",
                "Note that both bidders cannot gain a value of 2 in the same allocation, due to the intersections of the high-valued bundles. 28 Note that bundle-price queries may use exponential communication, thus the lower bound of [32] does not hold. 41 Non-anonymous Bundle-Price Economically-Efficient Ascending Auctions: Initialization: All prices are initialized to zero (non-anonymous bundle prices).",
                "Repeat: - Each bidder submits a bundle that maximizes his utility under his current personalized prices. - The auctioneer calculates a provisional allocation that maximizes his revenue under the current prices. - The prices of bundles that were demanded by losing bidders are increased by .",
                "Finally: Terminate when the provisional allocation assigns to each bidder the bundle he demanded.",
                "Figure 8: Auctions from this family (denoted by NBEA auctions) are known to achieve the optimal welfare.",
                "No bidder will demand a low-valued bundle, as long as the price of one of his high-valued bundles is below 1 (and thus gain him a utility greater than 1).",
                "Therefore, for eliciting any information about the low-valued bundles, the auctioneer should first arbitrarily choose a bidder (w.l.o.g bidder 1) and raise the prices of all the bundles (S1 1 , ..., S1 n) to be greater than 1.",
                "Since the prices cannot decrease, the other bidders will clearly never demand these bundles in future stages.",
                "An adversary may choose the values such that the low values of all the bidders for the bundles not in bidder 1s partition are zero (i.e., vi(S1 j ) = 0 for every i = 1 and every j), however, allocating each bidder a different bundle from bidder 1s partition, might achieve a welfare of n+1−(n−1)δ (bidder 1s valuation is 2, and 1 − δ for all other bidders); If these bundles were wrongly allocated, only a welfare of 2 might be achieved (2 for bidder 1s high-valued bundle, 0 for all other bidders).",
                "At this point, the auctioneer cannot have any information about the identity of the bundles with the non-zero values.",
                "Therefore, an adversary can choose the values of the bundles received by bidders 2, ..., n in the final allocation to be zero.",
                "We conclude that anonymous bundleprice auctions cannot guarantee a welfare greater than 2 for this class, where the optimal welfare can be arbitrarily close to n + 1. 6.2 Bundle Prices vs.",
                "Item Prices The core of the auctions in [37, 3] is the scheme described in Figure 8 (in the spirit of [35]) for auctions with nonanonymous bundle prices.",
                "Auctions from this scheme end up with the optimal allocation for any class of valuations.",
                "We denote this family of ascending auctions as NBEA auctions29 .",
                "NBEA auctions can elicit k-term XOR valuations by a polynomial (in k) number of steps , although the elicitation of such valuations may require an exponential number of item-price queries ([7]), and item-price ascending auctions cannot do it at all (Theorem 5.4).",
                "Nevertheless, we show that NBEA auctions (and in particular, iBundle(3) and the proxy auction) are sometimes inferior to simple item-price demand auctions.",
                "This may justify the use of hybrid auctions that use both linear and non-linear prices (e.g., the clock-proxy auction [10]).",
                "We show that auctions from this 29 Non-anonymous Bundle-price economically Efficient Ascending auctions.",
                "For completeness, we give in the full paper [9] a simple proof for the efficiency (up to an ) of auctions of this scheme . family may use an exponential number of queries even for determining the optimal allocation among two bidders with additive valuations30 , where such valuations can be elicited by a simple item-price ascending auction.",
                "We actually prove this property for a wider class of auctions we call conservative auctions.",
                "We also observe that in conservative auctions, allowing the bidders to submit all the bundles in their demand sets ensures that the auction runs a polynomial number of steps - if L is not too high (but with exponential communication, of course).",
                "An ascending auction is called conservative if it is nonanonymous, uses bundle prices initialized to zero and at every stage the auctioneer can only raise prices of bundles demanded by the bidders until this stage.",
                "In addition, each bidder can only receive bundles he demanded during the auction.",
                "Note that NBEA auctions are by definition conservative.",
                "Proposition 6.3.",
                "If every bidder demands a single bundle in each step of the auction, conservative auctions may run for an exponential number of steps even for additive valuations.",
                "If the bidders are allowed to submit all the bundles in their demand sets in each step, then conservative auctions can run in a polynomial number of steps for any profile of valuations, as long as the maximal valuation L is polynomial in m, n and 1 δ .",
                "Acknowledgments: The authors thank Moshe Babaioff, Shahar Dobzinski, Ron Lavi, Daniel Lehmann, Ahuva Mualem, David Parkes, Michael Schapira and Ilya Segal for helpful discussions.",
                "Supported by grants from the Israeli Academy of Sciences and the USAIsrael Binational Science Foundation. 7.",
                "REFERENCES [1] amazon.",
                "Web Page: http://www.amazon.com. [2] ebay.",
                "Web Page: http://www.ebay.com. [3] L. M. Ausubel and P. R. Milgrom.",
                "Ascending auctions with package bidding.",
                "Frontiers of Theoretical Economics, 1:1-42, 2002. [4] Lawrence Ausubel.",
                "An efficient dynamic auction for heterogeneous commodities, 2000.",
                "Working paper, University of Maryland. [5] Yair Bartal, Rica Gonen, and Noam Nisan.",
                "Incentive compatible multi unit combinatorial auctions.",
                "In TARK 03, 2003. [6] Alejandro Bertelsen.",
                "Substitutes valuations and m -concavity.",
                "M.Sc.",
                "Thesis, The Hebrew University of Jerusalem, 2005. [7] Avrim Blum, Jeffrey C. Jackson, Tuomas Sandholm, and Martin A. Zinkevich.",
                "Preference elicitation and query learning.",
                "Journal of Machine Learning Research, 5:649-667, 2004. [8] Liad Blumrosen and Noam Nisan.",
                "On the computational power of iterative auctions I: demand queries.",
                "Working paper, The Hebrew University of 30 Valuations are called additive if for any disjoint bundles A and B, v(A ∪ B) = v(A) + v(B).",
                "Additive valuations are both sub-additive and super-additive and are determined by the m values assigned for the singletons. 42 Jerusalem.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [9] Liad Blumrosen and Noam Nisan.",
                "On the computational power of iterative auctions II: ascending auctions.",
                "Working paper, The Hebrew University of Jerusalem.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [10] P. Cramton, L.M.",
                "Ausubel, and P.R.",
                "Milgrom.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 5.",
                "The Clock-Proxy Auction: A Practical Combinatorial Auction Design.",
                "MIT Press.",
                "Forthcoming, 2005. [11] P. Cramton, Y. Shoham, and R. Steinberg (Editors).",
                "Combinatorial Auctions.",
                "MIT Press.",
                "Forthcoming, 2005. [12] G. Demange, D. Gale, and M. Sotomayor.",
                "Multi-item auctions.",
                "Journal of Political Economy, 94:863-872, 1986. [13] Shahar Dobzinski, Noam Nisan, and Michael Schapira.",
                "Approximation algorithms for cas with complement-free bidders.",
                "In The 37th ACM symposium on theory of computing (STOC)., 2005. [14] Shahar Dobzinski and Michael Schapira.",
                "Optimal upper and lower approximation bounds for k-duplicates combinatorial auctions.",
                "Working paper, the Hebrew University. [15] Combinatorial bidding conference.",
                "Web Page: http://wireless.fcc.gov/auctions/conferences/combin2003. [16] Faruk Gul and Ennio Stacchetti.",
                "Walrasian equilibrium with gross substitutes.",
                "Journal of Economic Theory, 87:95 - 124, 1999. [17] Faruk Gul and Ennio Stacchetti.",
                "The english auction with differentiated commodities.",
                "Journal of Economic Theory, 92(3):66 - 95, 2000. [18] J. Hastad.",
                "Almost optimal lower bounds for small depth circuits.",
                "In 18th STOC, pages 6-20, 1986. [19] Ron Holzman, Noa Kfir-Dahav, Dov Monderer, and Moshe Tennenholtz.",
                "Bundling equilibrium in combinatrial auctions.",
                "Games and Economic Behavior, 47:104-123, 2004. [20] H. Karloff.",
                "Linear Programming.",
                "Birkh¨auser Verlag, 1991. [21] Frank Kelly and Richard Steinberg.",
                "A combinatorial auction with multiple winners for universal service.",
                "Management Science, 46:586-596, 2000. [22] A.S. Kelso and V.P.",
                "Crawford.",
                "Job matching, coalition formation, and gross substitute.",
                "Econometrica, 50:1483-1504, 1982. [23] Subhash Khot, Richard J. Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Inapproximability results for combinatorial auctions with submodular utility functions.",
                "In Working paper., 2004. [24] Sebastien Lahaie and David C. Parkes.",
                "Applying learning algorithms to preference elicitation.",
                "In EC 04. [25] Benny Lehmann, Daniel Lehmann, and Noam Nisan.",
                "Combinatorial auctions with decreasing marginal utilities.",
                "In ACM conference on electronic commerce.",
                "To appear, Games and Economic Behaviour., 2001. [26] D. Lehmann, L. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "JACM, 49(5):577-602, Sept. 2002. [27] A. Mas-Collel, W. Whinston, and J.",
                "Green.",
                "Microeconomic Theory.",
                "Oxford university press, 1995. [28] Debasis Mishra and David Parkes.",
                "Ascending price vickrey auctions using primal-dual algorithms., 2004.",
                "Working paper, Harvard University. [29] Noam Nisan.",
                "The communication complexity of approximate set packing and covering.",
                "In ICALP 2002. [30] Noam Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In ACM Conference on Electronic Commerce, 2000. [31] Noam Nisan.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 1.",
                "Bidding Languages.",
                "MIT Press.",
                "Forthcoming, 2005. [32] Noam Nisan and Ilya Segal.",
                "The communication requirements of efficient allocations and supporting prices, 2003.",
                "Working paper.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html Forthcoming in the Journal of Economic Theory. [33] Noam Nisan and Ilya Segal.",
                "Exponential communication inefficiency of demand queries, 2004.",
                "Working paper.",
                "Available from http://www.stanford.edu/ isegal/queries1.pdf. [34] D. C. Parkes and L. H. Ungar.",
                "An ascending-price generalized vickrey auction.",
                "Tech.",
                "Rep., Harvard University, 2002. [35] David Parkes.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 3.",
                "Iterative Combinatorial Auctions.",
                "MIT Press.",
                "Forthcoming, 2005. [36] David C. Parkes.",
                "Iterative combinatorial auctions: Achieving economic and computational efficiency.",
                "Ph.D. Thesis, Department of Computer and Information Science, University of Pennsylvania., 2001. [37] David C. Parkes and Lyle H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In AAAI/IAAI, pages 74-81, 2000. [38] Ariel Rubinstein.",
                "Why are certain properties of binary relations relatively more common in natural languages.",
                "Econometrica, 64:343-356, 1996. [39] Tuomas Sandholm.",
                "Algorithm for optimal winner determination in combinatorial auctions.",
                "In Artificial Intelligence, volume 135, pages 1-54, 2002. [40] P. Santi, V. Conitzer, and T. Sandholm.",
                "Towards a characterization of polynomial preference elicitation with value queries in combinatorial auctions.",
                "In The 17th Annual Conference on Learning Theory, 2004. [41] Ilya Segal.",
                "The communication requirements of social choice rules and supporting budget sets, 2004.",
                "Working paper.",
                "Available from http://www.stanford.edu/ isegal/rules.pdf. [42] P.R.",
                "Wurman and M.P.",
                "Wellman.",
                "Akba: A progressive, anonymous-price combinatorial auction.",
                "In Second ACM Conference on Electronic Commerce, 2000. [43] Martin A. Zinkevich, Avrim Blum, and Tuomas Sandholm.",
                "On polynomial-time preference elicitation with value queries.",
                "In ACM Conference on Electronic Commerce, 2003. 43"
            ],
            "original_annotated_samples": [
                "We first focus on auctions that use a polynomial number of demand queries, and then we analyze the power of different kinds of <br>ascending-price auction</br>s.",
                "In <br>ascending-price auction</br>s, forcing prices to be anonymous may be a significant restriction.",
                "Anonymous <br>ascending-price auction</br>s (e.g., [42, 21, 37]) are only known to be able to find the optimal allocation among superadditive valuations or few other simple classes ([36]).",
                "However, when we discuss <br>ascending-price auction</br>s and their variants, a computationally-efficient protocol will be required to be 14 For example, v = (abcd : 5) ⊕ (ab : 3) ⊕ (c : 4) denotes the XOR valuation with the terms abcd, ab, c and prices 5, 3, 4 respectively."
            ],
            "translated_annotated_samples": [
                "Primero nos enfocamos en subastas que utilizan un número polinomial de consultas de demanda, y luego analizamos el poder de diferentes tipos de <br>subastas de precio ascendente</br>.",
                "En las <br>subastas de precio ascendente</br>, obligar a que los precios sean anónimos puede ser una restricción significativa.",
                "Las <br>subastas anónimas de precio ascendente</br> (por ejemplo, [42, 21, 37]) solo se sabe que pueden encontrar la asignación óptima entre valoraciones superaditivas o algunas otras clases simples ([36]).",
                "Sin embargo, cuando discutimos <br>subastas de precio ascendente</br> y sus variantes, se requerirá un protocolo computacionalmente eficiente. Por ejemplo, v = (abcd : 5) ⊕ (ab : 3) ⊕ (c : 4) denota la valoración XOR con los términos abcd, ab, c y precios 5, 3, 4 respectivamente."
            ],
            "translated_text": "En el Poder Computacional de Subastas Iterativas∗ [Resumen Extendido] Liad Blumrosen Escuela de Ingeniería e Informática Universidad Hebrea de Jerusalén Jerusalén, Israel liad@cs.huji.ac.il Noam Nisan Escuela de Ingeniería e Informática Universidad Hebrea de Jerusalén Jerusalén, Israel noam@cs.huji.ac.il RESUMEN Nos embarcamos en un análisis sistemático del poder y limitaciones de las subastas combinatorias iterativas. La mayoría de las subastas combinatorias iterativas existentes se basan en sugerir precios repetidamente para paquetes de artículos y consultar a los postores sobre su demanda bajo estos precios. Demostramos un gran número de resultados que muestran los límites de lo que se puede lograr mediante subastas de este tipo. Primero nos enfocamos en subastas que utilizan un número polinomial de consultas de demanda, y luego analizamos el poder de diferentes tipos de <br>subastas de precio ascendente</br>. Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía Términos Generales Algoritmos, Economía, Teoría 1. Las subastas combinatorias han recibido recientemente mucha atención. En una subasta combinatoria, un conjunto M de m artículos no idénticos se venden en una sola subasta a n postores competidores. Los postores tienen preferencias con respecto a los lotes de artículos que pueden recibir. Las preferencias del postor i están especificadas por una función de valoración vi: 2M → R+, donde vi(S) denota el valor que el postor i asigna a ganar el conjunto de artículos S. Suponemos disposición libre, es decir, que los vi son monótonos no decrecientes. El objetivo habitual del subastador es optimizar el bienestar social P i vi(Si), donde la asignación S1...Sn debe ser una partición de los artículos. Las aplicaciones incluyen muchos problemas complejos de asignación de recursos y, de hecho, las subastas combinatorias pueden ser vistas como la abstracción común de muchos problemas complejos de asignación de recursos. Las subastas combinatorias enfrentan dificultades económicas y computacionales y son un problema central en la frontera recientemente activa de la teoría económica y la informática. Un libro próximo [11] aborda muchos de los problemas involucrados en el diseño e implementación de subastas combinatorias. El diseño de una subasta combinatoria implica muchas consideraciones. En este artículo nos enfocamos en un solo tema central: la comunicación entre los oferentes y el mecanismo de asignación - la obtención de preferencias. Transferir toda la información sobre las preferencias de los licitadores requiere una cantidad de comunicación inasumible (exponencial en m). Por lo tanto, las subastas de revelación directa en las que los postores simplemente declaran sus preferencias al mecanismo solo son prácticas para tamaños de subasta muy pequeños o para familias muy limitadas de preferencias de postores. Por lo tanto, hemos visto una multitud de subastas iterativas sugeridas en las que el protocolo de subasta interactúa repetidamente con los diferentes postores, con el objetivo de obtener de manera adaptativa suficiente información sobre las preferencias de los postores para poder encontrar una asignación buena (óptima o cercana a óptima). La mayoría de las subastas iterativas sugeridas proceden manteniendo precios temporales para los lotes de artículos y consultando repetidamente a los postores sobre sus preferencias entre los lotes bajo el conjunto actual de precios, y luego actualizando el conjunto de precios de los lotes según las respuestas recibidas (por ejemplo, [22, 12, 17, 37, 3]). Efectivamente, una subasta iterativa de este tipo accede a las preferencias de los postores haciendo repetidamente el siguiente tipo de consulta de demanda a los postores: Consulta al postor i: un vector de precios de paquetes p = {p(S)}S⊆M; Respuesta: un paquete de artículos S ⊆ M que maximiza vi(S) − p(S). Estos tipos de consultas son muy naturales en un entorno económico, ya que capturan las preferencias reveladas de los postores. Algunas subastas, llamadas subastas de precio por artículo o de precio lineal, especifican un precio pi para cada artículo, y el precio de cualquier conjunto dado S siempre es lineal, p(S) = Σ i∈S pi. Otras subastas, llamadas subastas de precio por paquete, permiten especificar precios arbitrarios (no lineales) p(S) para los paquetes. Otra diferenciación importante entre los modelos de subastas iterativas se basa en si utilizan precios anónimos o no anónimos: En algunas subastas, los precios que se presentan a los postores son siempre los mismos (precios anónimos). En otras subastas (no anónimas), diferentes postores pueden enfrentar diferentes vectores de precios (discriminatorios). En las <br>subastas de precio ascendente</br>, obligar a que los precios sean anónimos puede ser una restricción significativa. En este artículo, nos embarcamos en un análisis sistemático del poder computacional de las subastas iterativas basadas en consultas de demanda. No buscamos presentar subastas para uso práctico, sino más bien entender las limitaciones y posibilidades de este tipo de subastas. En la primera parte de este documento, nuestra pregunta principal es ¿qué se puede hacer utilizando un número polinómico de este tipo de consultas? Es decir, polinomial en los parámetros principales del problema: n, m y el número de bits t necesarios para representar un único valor vi(S). Ten en cuenta que desde un punto de vista algorítmico estamos hablando de algoritmos de tiempo sublineal: el tamaño de la entrada aquí es realmente n(2m − 1) números, las descripciones de las funciones de valoración de todos los postores. Hay dos aspectos de eficiencia computacional en estos contextos: el primero es la comunicación con los postores, es decir, la cantidad de consultas realizadas, y el segundo es la usual tratabilidad computacional. Nuestros límites inferiores dependerán solo del número de consultas y se mantendrán independientemente de cualquier suposición computacional como P = NP. Nuestros límites superiores siempre serán computacionalmente eficientes tanto en términos del número de consultas como en términos de computación regular. Como se mencionó, este artículo se centra en el único aspecto de la obtención de preferencias y en sus consecuencias computacionales, sin abordar cuestiones de incentivos. Esto refuerza nuestros límites inferiores, pero significa que los límites superiores también requieren evaluación desde esta perspectiva antes de ser utilizados en cualquier subasta combinatoria real. La segunda parte de este documento estudia el poder de las subastas de precio ascendente. Las subastas ascendentes son subastas iterativas donde los precios publicados no pueden disminuir con el tiempo. En este trabajo, intentamos analizar sistemáticamente qué significan las diferencias entre varios modelos de subastas ascendentes. Intentamos responder a las siguientes preguntas: (i) ¿Qué modelos de subastas ascendentes pueden encontrar la asignación óptima, y para qué clases de valoraciones? (ii) En casos donde la asignación óptima no puede ser determinada por subastas ascendentes, ¿qué tan bien pueden estas subastas aproximar el bienestar social? (iii) ¿Cómo se comparan los diferentes modelos de subastas ascendentes? ¿Son algunos modelos computacionalmente más fuertes que otros? Las subastas ascendentes han sido ampliamente estudiadas en la literatura (ver la encuesta reciente de Parkes [35]). La mayor parte de este trabajo presentó límites superiores, es decir, mecanismos propuestos con precios ascendentes y analizó sus propiedades. Un resultado que se acerca más al nuestro es el de Gul y Stacchetti [17], quienes demostraron que ninguna subasta de precio ascendente de artículo puede siempre determinar los precios VCG, incluso para valoraciones de sustitutos. Nuestro marco es más general que la línea tradicional de investigación que se concentra en la asignación final y observamos, sin embargo, que alguna propiedad de incentivo débil viene de forma gratuita en las subastas de consulta de demanda, ya que los jugadores miopes responderán todas las consultas de demanda de manera veraz. También observamos que en algunos casos (¡pero no siempre!) los problemas de incentivos pueden ser manejados de forma ortogonal a los problemas de obtención de preferencias, por ejemplo, utilizando precios de Vickrey-Clarke-Groves (VCG) (por ejemplo, [4, 34]). Además, discutimos este resultado en la Sección 5.3. Subastas iterativas Subastas de demanda Subastas de precio de artículo Subastas de precio anónimo Subastas ascendentes 1 2 3 4 5 6 97 8 10 Figura 1: El diagrama clasifica las siguientes subastas según sus propiedades: (1) La adaptación [12] para la subasta de Kelso & Crawford [22]. (2) La Subasta de Proxy [3] de Ausubel & Milgrom. (3) iBundle(3) de Parkes & Ungar [34]. (4) iBundle(2) de Parkes & Ungar [37]. (5) Nuestra adaptación descendente para la aproximación de 2 para valoraciones submodulares por [25] (ver Subsección 5.4). (6) La subasta de Ausubel [4] para valoraciones de sustitutos. (7) La adaptación de Nisan & Segal [32] de la aproximación O( √ m) por [26]. (8) La subasta de artículo duplicado por [5]. (9) Subasta para fórmulas de Leer-Una-Vez por [43]. (10) La Subasta AkBA por Wurman & Wellman [42]. pagos y en particular, en alcanzar equilibrios walrasianos o equilibrios competitivos. Se sabe que existe un equilibrio walrasiano en el caso de las valoraciones de sustitutos, y se sabe que es imposible para cualquier clase más amplia de valoraciones [16]. Esto no descarta otras asignaciones mediante subastas ascendentes: en este documento consideramos las subastas como un proceso computacional donde el resultado, tanto la asignación como los pagos, pueden determinarse según todos los datos recopilados a lo largo de la subasta; Este marco general refuerza nuestros resultados negativos. Encontramos el estudio de las subastas ascendentes atractivo por diversas razones. Primero, las subastas ascendentes son ampliamente utilizadas en muchos contextos de la vida real, desde las subastas de espectro de la FCC hasta casi cualquier sitio web de comercio electrónico (por ejemplo, [2, 1]). De hecho, esta es quizás la forma más directa de vender artículos: preguntar a los postores qué les gustaría comprar a ciertos precios, y aumentar los precios de los productos con alta demanda. Las subastas ascendentes también se consideran más intuitivas para muchos postores, y se cree que aumentan la confianza de los postores en el subastador, ya que ven el resultado que emerge gradualmente de las respuestas de los postores. Las subastas ascendentes también tienen otras propiedades económicas deseadas, por ejemplo, implican una revelación de información menor (considere, por ejemplo, las subastas inglesas frente a las subastas de segundo precio sellado). 1.1 Trabajo Existente Muchos mecanismos de subasta combinatoria iterativos dependen de consultas de demanda (ver la encuesta en [35]). La Figura 1 muestra un equilibrio walrasiano como un vector de precios de los artículos para los cuales todos los artículos se venden cuando cada postor recibe un conjunto en su conjunto de demanda. En algunos diseños de subasta recientes (por ejemplo, [4, 28]), los pagos no son necesariamente los precios finales de las subastas. Familia de valoración Límite superior Referencia Límite inferior Referencia General min(n, O( √ m)) [26], Sección 4.2 min(n, m1/2− ) [32] Sustitutos 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subaditiva O(logm) [13] 2 [13] k-duplicados O(m1/k+1 ) [14] O(m1/k+1 ) [14] Adquisiciones ln m [32] (log m)/2 [29, 32] Figura 2: Los mejores factores de aproximación actualmente alcanzables por subastas combinatorias computacionalmente eficientes, para varias clases de valoraciones. Todos los límites inferiores en la tabla se aplican a todas las subastas iterativas (excepto la marcada con *); todos los límites superiores en la tabla se logran con consultas de demanda de precio de artículo. Categoriza las clases básicas de subastas implicadas por combinaciones de las propiedades anteriores y clasifica algunas de las subastas propuestas en la literatura de acuerdo con esta clasificación. Para nuestros propósitos, dos familias de estas subastas sirven como los principales puntos de partida motivadores: la primera son las subastas de precio de artículo ascendente de [22, 17] que con eficiencia computacional encuentran una asignación óptima entre valoraciones de sustitutos (brutos), y la segunda son las subastas de precio de paquete ascendente de [37, 3] que encuentran una asignación óptima entre valoraciones generales, pero no necesariamente con eficiencia computacional. El límite inferior principal en esta área, debido a [32], establece que, de hecho, debido a los requisitos de comunicación inherentes, no es posible que ninguna subasta iterativa encuentre la asignación óptima entre valoraciones generales con un número subexponencial de consultas. Un límite inferior exponencial similar fue demostrado en [32] también para aproximar de manera óptima la asignación dentro de un factor de m1/2−. Se conocen varios límites inferiores y superiores para la aproximación de algunas clases naturales de valoraciones, los cuales se resumen en la Figura 2. En [32], también se muestra la universalidad de las consultas de demanda: cualquier protocolo de comunicación no determinista para encontrar una asignación que optimice el bienestar social puede convertirse en uno que solo utilice consultas de demanda (con precios de paquetes). En [41] esto también se generalizó a protocolos no deterministas para encontrar asignaciones que satisfacen otros tipos naturales de requisitos económicos (por ejemplo, eficiencia social aproximada, ausencia de envidia). Sin embargo, en [33] se demostró que esta completitud de las consultas de demanda solo se cumple en el entorno no determinista, mientras que en el entorno determinista habitual, las consultas de demanda (incluso con precios de paquetes) pueden ser exponencialmente más débiles que la comunicación general. Las subastas de precio por paquete son una generalización de las subastas de precio por artículo (más naturales e intuitivas). Se sabe que las subastas de precio de artículo pueden ser exponencialmente más débiles: un buen ejemplo es el caso de valoraciones que son un XOR de k paquetes, donde k es pequeño (digamos, polinómico). Lahaie y Parkes [24] muestran una subasta de precio de paquete económicamente eficiente que utiliza un número polinómico de consultas siempre que k sea polinómico. Por el contrario, [7] muestra que existen valoraciones que son XORs de k = √ m paquetes, de tal manera que cualquier subasta de precio de artículo que encuentre una asignación óptima entre ellos requiere un número exponencial de consultas. Estos resultados forman parte de una línea reciente de investigación ([7, 43, 24, 40]) que estudia el problema de la obtención de preferencias en subastas combinatorias y su relación con el problema de obtención completo (es decir, aprender las valoraciones exactas de los postores). Estas son valoraciones donde los postores tienen valores para k paquetes específicos, y el valor de cada conjunto es el valor máximo de uno de estos paquetes que contiene. Estos documentos adaptan métodos de la teoría del aprendizaje automático al entorno de subastas combinatorias. El problema de la obtención de preferencias y el problema de la obtención completa se relacionan con un problema bien estudiado en microeconomía conocido como el problema de integrabilidad (ver, por ejemplo, [27]). Este problema estudia si y cuándo se puede derivar la función de utilidad de un consumidor a partir de su función de demanda. Organización del documento: Debido al relativamente gran número de resultados que presentamos, comenzamos con una revisión de nuestros nuevos resultados en la Sección 2. Después de describir nuestro modelo formal en la Sección 3, presentamos nuestros resultados sobre el poder de las consultas de demanda en la Sección 4. Luego, describimos el poder de las subastas ascendentes de precio de artículo (Sección 5) y las subastas ascendentes de precio de paquete (Sección 6). Los lectores que estén principalmente interesados en la discusión autocontenida de las subastas ascendentes pueden omitir la Sección 4. Las pruebas faltantes de la Sección 4 se pueden encontrar en la parte I del artículo completo ([8]). Las pruebas faltantes de las Secciones 5 y 6 se pueden encontrar en la parte II del artículo completo ([9]). 2. Una encuesta de nuestros resultados Nuestro análisis sistemático está compuesto por la combinación de un número bastante grande de resultados que caracterizan el poder y las limitaciones de varias clases de subastas. En esta sección, presentaremos una exposición describiendo nuestros nuevos resultados. Primero discutimos el poder de las subastas iterativas de demanda-consulta, y luego dirigimos nuestra atención a las subastas ascendentes. La Figura 3 resume algunos de nuestros principales resultados. 2.1 Comparación de consultas de demanda de tipos de consultas Preguntamos primero qué otros tipos naturales de consultas podríamos imaginar que las subastas iterativas utilicen. Aquí hay una lista de tales consultas que son naturales, han sido utilizadas en la literatura, o que encontramos útiles. 1. Consulta de valor: El subastador presenta un paquete S, el postor informa su valor v(S) para este paquete. 2. Consulta de valor marginal: El subastador presenta un paquete A y un artículo j, el postor informa cuánto está dispuesto a pagar por j, dado que ya posee A, es decir, v(j|A) = v(A ∪ {j}) − v(A). 3. Consulta de demanda (con precios de los artículos): El subastador presenta un vector de precios de los artículos p1...pm; el postor informa su demanda bajo estos precios, es decir, algún conjunto S que maximiza v(S) − Σ i∈S pi. Se debe especificar una regla de desempate. ¿Todos nuestros resultados 31 Restricción de Comunicación pueden encontrar una asignación óptima? Límite superior para el bienestar aprox. Límite inferior para el bienestar aproximado. Consultas de demanda de precio de artículo Sí 1 1 Poli. Comunicación No [32] min(n, O(m1/2 )) [26] min(n, m1/2− ) [32] Poli. Consultas de demanda de precio de artículo No [32] min(n, O(m1/2 )) min(n, m1/2− ) [32] Poli. Este documento estudia la eficiencia económica de subastas que siguen ciertas restricciones de comunicación. Para cada clase de subastas, la tabla muestra si se puede lograr la asignación óptima, o en su defecto, qué tan bien se puede aproximar (tanto los límites superiores como los límites inferiores). Los nuevos resultados están resaltados. Abreviaturas: Poly. (número/tamaño polinomial), AA (subastas ascendentes). - significa que actualmente no se conoce nada excepto soluciones triviales. 4. Consulta de utilidad indirecta: El subastador presenta un conjunto de precios de los artículos p1...pm, y el postor responde con su utilidad indirecta bajo estos precios, es decir, la utilidad más alta que puede lograr de un conjunto bajo estos precios: maxS⊆M (v(S) − P i∈S pi). Consulta de demanda relativa: el subastador presenta un conjunto de precios no nulos p1...pm, y el postor informa el conjunto que maximiza su valor por unidad de dinero, es decir, algún conjunto que maximiza v(S)P i∈S pi. Teorema: Cada una de estas consultas puede ser simulada eficientemente (es decir, en tiempo polinómico en n, m y el número de bits de precisión t necesarios para representar un único valor vi(S)) por una secuencia de consultas de demanda con precios de artículos. En particular, esto muestra que las consultas de demanda pueden obtener toda la información sobre una valoración al simular todas las consultas de valor de 2m −1. También observamos que las consultas de valor y las consultas de valor marginal pueden simularse mutuamente en tiempo polinómico y que las consultas de demanda y las consultas de utilidad indirecta también pueden simularse mutuamente en tiempo polinómico. Demostramos que puede ser necesario realizar exponencialmente muchas consultas de valor para simular una sola consulta de demanda. Es interesante notar que para la clase restringida de valoraciones sustitutivas, las consultas de demanda pueden ser simuladas por un número polinomial de consultas de valor [6]. Aproximación del bienestar La siguiente pregunta que nos hacemos es ¿qué tan bien puede aproximar una subasta computacionalmente eficiente que solo utiliza consultas de demanda la asignación óptima? Se conocen dos obstáculos separados: En [32], se demostró una cota inferior de min(n, m1/2− ), para cualquier fijo > 0, para el factor de aproximación aplicable para cualquier regla de desempate fija. Esto es exactamente la utilidad lograda por el paquete que se devolvería en una consulta de demanda con los mismos precios. Esta noción se relaciona con la función de utilidad indirecta estudiada en la literatura microeconómica (ver, por ejemplo, [27]). Nota que cuando todos los precios son 1, el postor en realidad informa el paquete con el precio por artículo más alto. Encontramos este tipo de consulta útil, por ejemplo, en el diseño del algoritmo de aproximación descrito en la Figura 5 de la Sección 4.2, obtenido utilizando cualquier cantidad polinómica de comunicación. Un límite computacional con el mismo valor se aplica incluso para el caso de postores de mente única, pero bajo la suposición de NP = ZPP [39]. Como se señala en [32], el algoritmo voraz computacionalmente eficiente de [26] puede adaptarse para convertirse en una subasta iterativa de tiempo polinómico que logra un factor de aproximación casi coincidente de min(n, O( √ m)). Esta subasta iterativa puede implementarse con consultas de demanda de precios por paquete, pero, hasta donde vemos, no como una con precios por artículo. Dado que en una consulta de demanda de precio de paquete único se pueden presentar un número exponencial de precios, este algoritmo puede tener un costo de comunicación exponencial. En la Sección 4.2, describimos una subasta de precio de artículo diferente que logra el mismo factor de aproximación con un número polinomial de consultas (y por lo tanto con una comunicación polinomial). Teorema: Existe una subasta iterativa computacionalmente eficiente con consultas de demanda de precios de artículos que encuentra una asignación que aproxima el bienestar óptimo entre valoraciones arbitrarias dentro de un factor de min(n, O( √ m)). Uno puede intentar obtener un factor de aproximación utilizando subastas iterativas que solo utilicen las consultas de valor más débiles. Sin embargo, demostramos que esto es imposible: Teorema: Cualquier subasta iterativa que utilice un número polinómico (en n y m) de consultas de valor no puede lograr un factor de aproximación mejor que O( m log m ). Sin embargo, cabe destacar que las subastas con solo consultas de valor no son completamente triviales en poder: las subastas de agrupación de Holzman et al. [19] pueden implementarse fácilmente mediante un número polinómico de consultas de valor y pueden lograr un factor de aproximación de O( m√ log m ) utilizando O(log m) paquetes de tamaño equitativo. No sabemos cómo cerrar la brecha (pequeña) entre este límite superior y nuestro límite inferior. Representando precios de paquetes. Luego abordamos un problema crítico con las subastas de precios de paquetes que fue evitado por nuestro modelo, así como por todos los trabajos anteriores que utilizaron subastas de precios de paquetes: ¿cómo se representan los precios de los paquetes? Para subastas de precio de artículo, esto no es un problema ya que una consulta solo necesita especificar un pequeño número, m, de precios. En las subastas de precios por paquetes, esa situación es más difícil ya que hay exponencialmente muchos paquetes que requieren fijar precios. Nuestro modelo básico (como todos los trabajos anteriores que utilizaron precios de paquete, por ejemplo, [37, 34, 3]), ignora este problema y solo requiere que los precios sean determinados, de alguna manera, por el protocolo. Un modelo más refinado fijaría un idioma específico para denotar los precios de los paquetes, obligaría al protocolo a representar los precios de los paquetes en este idioma y requeriría que las representaciones de los precios de los paquetes también fueran polinomiales. ¿Cómo podría ser un lenguaje para denotar precios de todos los paquetes? Primero, hay que tener en cuenta que especificar un precio para cada paquete es equivalente a especificar una valoración. Segundo, como se señala en [31], la mayoría de los lenguajes de oferta propuestos son en realidad solo lenguajes para representar valoraciones, es decir, una representación sintáctica de valoraciones, por lo tanto podríamos usar cualquiera de ellos. Este punto de vista abre el tema general de qué idioma se debe utilizar en las subastas de precios en paquete y cuáles son las implicaciones de esta elección. Aquí iniciamos esta línea de investigación. Consideramos subastas de precios de paquetes donde los precios deben ser dados como una oferta XOR, es decir, el protocolo debe indicar explícitamente el precio de cada paquete cuyo valor sea diferente al de todos sus subconjuntos adecuados. Es importante tener en cuenta que todas las subastas de precios por paquetes que no especifiquen explícitamente un idioma de oferta deben usar implícitamente este idioma o uno menos restrictivo, ya que sin un idioma específico se necesitaría listar los precios de todos los paquetes, quizás excepto los triviales (aquellos con valor 0, o más generalmente, aquellos cuyo valor está determinado por uno de sus subconjuntos propios). Mostramos que una vez que se tiene en cuenta la longitud de la representación de los precios de los paquetes (utilizando el lenguaje XOR), las subastas de precios de paquetes ya no son estrictamente más fuertes que las subastas de precios de artículos. Define el costo de una subasta iterativa como la longitud total de las consultas y respuestas utilizadas a lo largo de la subasta (en el peor de los casos). Teorema: Para alguna clase de valoraciones, las subastas de precios de paquetes que utilizan el lenguaje XOR requieren un costo exponencial para encontrar la asignación óptima. Por el contrario, las subastas de precio por artículo pueden encontrar la asignación óptima para esta clase dentro de un costo polinómico. Esto pone en duda la aplicabilidad de las subastas de precio por paquete como [3, 37], y puede justificar el uso de métodos de fijación de precios híbridos como la subasta de reloj-proxy de Ausubel, Cramton y Milgrom ([10]). Las consultas de demanda y los programas lineales. El problema de determinación del ganador en subastas combinatorias puede formularse como un programa entero. En muchos casos, resolver la relajación del programa lineal de este programa entero es útil: para algunas clases restringidas de valoraciones, encuentra el óptimo del programa entero (por ejemplo, valoraciones de sustitución [22, 17]) o ayuda a aproximar el óptimo (por ejemplo, mediante redondeo aleatorio [13, 14]). Sin embargo, el programa lineal tiene un número exponencial de variables. Nisan y Segal [32] observaron el sorprendente hecho de que, a pesar de ello, nuestra prueba se basa en los sofisticados límites inferiores conocidos para circuitos de profundidad constante. No pudimos encontrar una prueba elemental. Dado el número exponencial de variables, este programa lineal puede resolverse con comunicación polinómica. La idea básica es resolver el programa dual utilizando el método del Elipsoide (ver, por ejemplo, [20]). El programa dual tiene un número polinomial de variables, pero un número exponencial de restricciones. El algoritmo de Elipsoide se ejecuta en tiempo polinómico incluso en tales programas, siempre que se proporcione un oráculo de separación para el conjunto de restricciones. Sorprendentemente, dicho oráculo de separación puede implementarse utilizando una sola consulta de demanda (con precios de los artículos) a cada uno de los postores. El tratamiento de [32] fue algo improvisado para el problema en cuestión (el caso de las valoraciones de sustitución). Aquí presentamos una forma algo más general de esta importante observación. Llamemos a la siguiente clase de programas lineales relajación de determinación de ganadores generalizada (GWDR) LPs: Maximizar X i∈N,S⊆M wi xi,S vi(S) sujeto a. El caso donde wi = 1, di = 1, qj = 1 (para cada i, j) es la relajación lineal habitual del problema de determinación del ganador. Más generalmente, wi puede ser visto como el peso dado al bienestar del postor, qj puede ser visto como la cantidad de unidades del bien j, y di puede ser visto como la duplicidad del número de postores del tipo i. Teorema: Cualquier programa lineal de GWDR puede ser resuelto en tiempo polinómico (en n, m y el número de bits de precisión t) usando solo consultas de demanda con precios de los artículos. Subastas ascendentes de precios de artículos: Es bien sabido que las subastas ascendentes de precios de artículos de Kelso y Crawford [22] y sus variantes [12, 16] encuentran la asignación óptima siempre y cuando las valoraciones de todos los jugadores tengan la propiedad de sustitutos. La pregunta obvia es si se puede encontrar la asignación óptima para una clase más amplia de valoraciones. Nuestro resultado principal aquí es un resultado negativo fuerte: Teorema: Existe un problema de 2 elementos y 2 jugadores donde ninguna subasta de precio ascendente puede encontrar la asignación óptima. Esto contrasta tanto con el poder de las subastas ascendentes de precios de paquetes como con el poder de las consultas generales de demanda de precios de artículos (ver arriba), ambos de los cuales siempre pueden encontrar la asignación óptima e incluso proporcionar una completa obtención de preferencias. La misma prueba demuestra un resultado de imposibilidad similar para otros tipos de subastas (por ejemplo, subastas descendentes, subastas no anónimas). Más extensión de este resultado: • Obtener algunas clases de valoraciones requiere un número exponencial de trayectorias ascendentes de precios de artículos. La solución óptima producida tendrá un soporte polinómico y, por lo tanto, puede ser listada completamente. • Se necesitan al menos k − 1 trayectorias ascendentes de precios de artículos para obtener fórmulas XOR con k términos. Este resultado es en cierto sentido ajustado, ya que demostramos que cualquier fórmula XOR de k términos puede ser completamente revelada por k−1 subastas ascendentes no determinísticas (es decir, cuando algún profesor externo instruye al subastador sobre cómo aumentar los precios). También demostramos que las subastas ascendentes de precio de artículo y las subastas iterativas limitadas a un número polinómico de consultas (de cualquier tipo, no necesariamente ascendentes) son incomparables en su poder: las subastas ascendentes, con incrementos lo suficientemente pequeños, pueden revelar las preferencias en casos donde cualquier número polinómico de consultas no puede. Motivados por varios artículos recientes que estudiaron la relación entre la obtención y la obtención completa de las preferencias en subastas combinatorias (por ejemplo, [7, 24]), exploramos la diferencia entre estos problemas en el contexto de subastas ascendentes. Mostramos que aunque una subasta ascendente única puede determinar la asignación óptima entre cualquier número de postores con valoraciones sustitutivas, no puede obtener completamente dicha valoración ni siquiera para un único postor. Aunque se demostró en [25] que el conjunto de valoraciones de sustitutos tiene medida cero en el espacio de valoraciones generales, no se conoce su dimensión, y en particular aún está abierto si una cantidad polinómica de información es suficiente para describir una valoración de sustitutos. Si bien nuestro resultado puede ser un pequeño paso en esa dirección (una elicitación completa de polinomios aún puede ser posible con otros protocolos de comunicación), señalamos que nuestro resultado de imposibilidad también se aplica a valoraciones en la clase OXS definida por [25], valoraciones que podemos demostrar tienen una representación compacta. También presentamos varios resultados que separan el poder de diferentes modelos para subastas combinatorias ascendentes que utilizan precios de artículos: demostramos, como era de esperar, que las subastas ascendentes adaptativas son más poderosas que las subastas ascendentes obvias y que las subastas ascendentes no deterministas son más poderosas que las subastas ascendentes deterministas. También comparamos diferentes tipos de subastas no anónimas (por ejemplo, simultáneas o secuenciales), y observamos que las subastas anónimas de precio por lote y las subastas no anónimas de precio por artículo son incomparables en su poder. Finalmente, motivados por las subastas holandesas, consideramos las subastas descendentes y cómo se comparan con las ascendentes; mostramos clases de valoraciones que pueden ser obtenidas mediante subastas ascendentes de precio de artículo pero no mediante subastas descendentes de precio de artículo, y viceversa. Subastas ascendentes de precio por paquetes: Todas las subastas ascendentes de precio por paquetes conocidas que son capaces de encontrar la asignación óptima entre valoraciones generales (con disposición libre) utilizan precios no anónimos. Las <br>subastas anónimas de precio ascendente</br> (por ejemplo, [42, 21, 37]) solo se sabe que pueden encontrar la asignación óptima entre valoraciones superaditivas o algunas otras clases simples ([36]). Demostramos que esto no es un error: Teorema: Ninguna subasta ascendente con precios anónimos puede encontrar la asignación óptima entre valoraciones generales. La computación no determinista se utiliza ampliamente en informática y también en economía (por ejemplo, un equilibrio walrasiano o [38]). En algunos contextos, los modelos deterministas y no deterministas tienen igual poder (por ejemplo, en la computación con autómatas finitos). Este límite es independiente del tiempo de ejecución, y también se aplica a subastas descendentes y subastas no determinísticas. Fortalecemos significativamente este resultado al demostrar que las subastas ascendentes anónimas no pueden producir una aproximación mejor que O( √ m) - la proporción de aproximación que se puede lograr con un número polinomial de consultas ([26, 32]) y, como se mencionó, con un número polinomial de consultas de demanda de precio de artículo. El mismo límite inferior claramente se aplica a las subastas anónimas de artículos y precios ascendentes, ya que dichas subastas pueden ser simuladas por subastas anónimas de paquetes y precios ascendentes. Actualmente no tenemos ningún límite inferior en la aproximación alcanzable por subastas ascendentes de artículos y precios no anónimas. Finalmente, estudiamos el rendimiento de las subastas ascendentes existentes computacionalmente eficientes. Estos protocolos ([37, 3]) requieren tiempo exponencial en el peor de los casos, y esto es inevitable como se muestra en [32]. Sin embargo, también observamos que estas subastas, al igual que toda la clase de subastas de precios de paquetes ascendentes similares, requieren un tiempo exponencial incluso para valoraciones aditivas simples. Esto es evitable y de hecho, las subastas ascendentes de precio de artículo de [22] pueden encontrar la asignación óptima para estas valoraciones simples con comunicación polinómica. 3. El MODELO 3.1 Subastas Discretas para Valores Continuos Nuestro modelo tiene como objetivo capturar subastas iterativas que operan en valuaciones de valores reales. Existe una ligera dificultad técnica aquí al tratar de superar la brecha entre la naturaleza discreta de una subasta iterativa y la naturaleza continua de las valoraciones. Este es exactamente el mismo problema que al modelar una subasta inglesa simple. Hay tres formas estándar formales de modelarlo: 1. Modelar la subasta como un proceso continuo y estudiar su trayectoria en el tiempo. Por ejemplo, la subasta japonesa, también conocida como subasta holandesa, es básicamente un modelo continuo de un modelo inglés. Modelar la subasta como discreta y las valoraciones como continuas. En este caso introducimos un parámetro y generalmente requerimos que la subasta produzca resultados que estén cerca de lo óptimo. 3. Modelar las valoraciones como discretas. En este caso asumiremos que todas las valoraciones son múltiplos enteros de alguna cantidad fija pequeña δ, por ejemplo, 1 centavo. Toda comunicación en este caso es naturalmente finita. En este documento utilizamos la última formulación y asumimos que todos los valores son múltiplos de algún δ. Por lo tanto, en algunas partes del documento asumimos sin pérdida de generalidad que δ = 1, por lo tanto todas las valoraciones son enteras. Casi todos (si no todos) nuestros resultados se pueden traducir a los otros dos modelos con poco esfuerzo. 3.2 Valoraciones Un único subastador está vendiendo m artículos indivisibles no homogéneos en una sola subasta, y sea M el conjunto de estos 13 Otro modelo similar es el modelo de cuchillos móviles en la literatura de corte de pasteles. 34 artículos y sea N el conjunto de postores. Cada uno de los n postores en la subasta tiene una función de valoración vi : 2m → {0, δ, 2δ, ..., L}, donde para cada conjunto de artículos S ⊆ M, vi(S) denota el valor del postor i por el conjunto S y es un múltiplo de δ en el rango 0...L. A veces denotaremos el número de bits necesarios para representar tales valores en el rango 0...L por t = log L. Suponemos disposición libre, es decir, S ⊆ T implica vi(S) ≤ vi(T) y que vi(∅) = 0 para todos los postores. Mencionaremos las siguientes clases de valoraciones: • Una valoración se llama submodular si para todos los conjuntos de elementos A y B tenemos que v(A ∪ B) + v(A ∩ B) ≤ v(A) + v(B). • Una valoración se llama superaditiva si para todos los conjuntos disjuntos de elementos A y B tenemos que v(A∪B) ≥ v(A)+ v(B). • Una valoración se llama un XOR de k-bundles si puede representarse como una combinación XOR de a lo sumo k ofertas atómicas [30], es decir, si hay a lo sumo k bundles Si y precios pi tales que para todo S, v(S) = maxi|S⊇Si pi. Tales valoraciones serán denotadas por v = (S1 : p1) ⊕ (S2 : p2) ⊕ . . . ⊕ (Sk : pk).14 3.3 Subastas Iterativas El subastador establece un protocolo (equivalentemente un algoritmo), donde en cada etapa del protocolo se envía cierta información q - denominada la consulta - a algún postor i, y luego el postor i responde con una respuesta que depende de la consulta así como de su propia valoración. En este documento, asumimos que tenemos control total sobre el comportamiento de los postores, por lo que el protocolo también define una función de respuesta ri(q, vi) que especifica la respuesta del postor a la consulta q. El protocolo puede ser adaptativo: el valor de la consulta, así como el postor consultado, pueden depender de las respuestas recibidas para consultas anteriores. Al final del protocolo, se debe declarar una asignación S1...Sn, donde Si ∩ Sj = ∅ para i = j. Decimos que la subasta encuentra una asignación óptima si encuentra la asignación que maximiza el bienestar social Σ vi(Si). Decimos que se encuentra una c-aproximación si P i vi(Si) ≥ P i vi(Ti)/c donde T1...Tn es una asignación óptima. El tiempo de ejecución de la subasta en una instancia dada de las valoraciones de los postores es el número total de consultas realizadas en esta instancia. El tiempo de ejecución de un protocolo es el costo en el peor caso sobre todas las instancias. Cabe destacar que no imponemos limitaciones computacionales en el protocolo ni en los jugadores. Esto, por supuesto, solo refuerza nuestros resultados de dificultad. Sin embargo, nuestros resultados positivos no utilizarán este poder y serán eficientes también en el sentido computacional habitual. Nuestro objetivo será diseñar protocolos computacionalmente eficientes. Consideraremos un protocolo eficiente computacionalmente si su costo es polinómico en los parámetros relevantes: el número de postores n, el número de artículos m y t = log L, donde L es el valor máximo posible de un paquete. Sin embargo, cuando discutimos <br>subastas de precio ascendente</br> y sus variantes, se requerirá un protocolo computacionalmente eficiente. Por ejemplo, v = (abcd : 5) ⊕ (ab : 3) ⊕ (c : 4) denota la valoración XOR con los términos abcd, ab, c y precios 5, 3, 4 respectivamente. Para esta valoración, v(abcd) = 5, v(abd) = 3, v(abc) = 4. El tiempo de ejecución realmente mide los costos de comunicación y no el tiempo de ejecución computacional. Pseudo-polinómico, es decir, debería requerir un número de consultas que sea polinómico en m, n y L δ. Esto se debe a que las subastas ascendentes generalmente no pueden lograr esos tiempos de ejecución (considera incluso la subasta inglesa de un solo artículo). Cabe destacar que todos nuestros resultados proporcionan límites concretos, donde la dependencia de los parámetros se expresa explícitamente; utilizamos la notación estándar de big-Oh solo como una abreviatura. Decimos que una subasta obtiene algunas clases V de valoraciones, si determina la asignación óptima para cualquier perfil de valoraciones extraídas de V; Decimos que una subasta obtiene completamente alguna clase de valoraciones V, si puede aprender completamente cualquier valoración única v ∈ V (es decir, aprender v(S) para cada S). 3.4 Consultas de demanda y subastas ascendentes La mayor parte del documento se ocupará de un caso especial común de subastas iterativas que denominamos subastas de demanda. En tales subastas, las consultas que se envían a los postores son consultas de demanda: la consulta especifica un precio p(S) ∈ + para cada conjunto S. La respuesta del postor i es simplemente el conjunto más deseado - demandado - bajo estos precios. Formalmente, un conjunto S que maximiza vi(S) − p(S). Puede suceder que más de un conjunto S maximice este valor. En caso de empate, se resuelven de acuerdo con una regla fija de desempate, por ejemplo, se devuelve el conjunto que sea el primero en orden lexicográfico. Todos nuestros resultados son válidos para cualquier regla de desempate fija. Las subastas ascendentes son subastas iterativas con precios no decrecientes: Definición 1. En una subasta ascendente, los precios en las ofertas al mismo postor solo pueden aumentar con el tiempo. Formalmente, sea p una consulta realizada por el postor i, y q una consulta realizada por el postor i en una etapa posterior del protocolo. Entonces, para todos los conjuntos S, q(S) ≥ p(S). Una variante similar, que también estudiamos y que también es común en la vida real, son las subastas descendentes, en las que los precios solo pueden disminuir con el tiempo. Cabe destacar que el término subasta ascendente se refiere a una subasta con una única trayectoria ascendente de precios. Puede ser útil definir subastas ascendentes de múltiples trayectorias, en las que los precios pueden reiniciarse a cero varias veces (ver, por ejemplo, [4]). Consideramos dos restricciones principales en los tipos de consultas de demanda permitidas: Definición 2. Precios de los artículos: Los precios en cada consulta son dados por los precios pj para cada artículo j. El precio de un conjunto S es aditivo: p(S) = Σ j∈S pj. Definición 3. Precios anónimos: Los precios vistos por los postores en cualquier etapa de la subasta son los mismos, es decir, cada vez que se realiza una consulta a un postor, la misma consulta también se realiza a todos los demás postores (con los precios sin cambios). En subastas con precios no anónimos (discriminatorios), cada postor i tiene precios personalizados denotados por pi (S). En este documento, todas las subastas son anónimas a menos que se especifique lo contrario. Ten en cuenta que aunque en nuestro modelo las valoraciones son integrales (o múltiplos de algún δ), permitimos la consulta de demanda a 16 La mayoría de las subastas que presentamos pueden adaptarse para ejecutarse en tiempo polinómico en log L, utilizando un procedimiento similar a una búsqueda binaria, perdiendo su naturaleza ascendente. 17 Ten en cuenta que una subasta no anónima claramente puede ser simulada por n subastas anónimas en paralelo. 35 utiliza números reales arbitrarios en +. Es decir, asumimos que el incremento que utilizamos en las subastas ascendentes puede ser significativamente menor que δ. Todos nuestros resultados de dureza se mantienen para cualquier , incluso para incrementos de precios continuos. Un problema práctico aquí es cómo se especificará la consulta: en el caso general, se necesita enviar un número exponencial de precios en una sola consulta. Formalmente, esto no es un problema ya que el modelo no limita la longitud de las consultas de ninguna manera; el protocolo simplemente debe definir cuáles son los precios en función de las respuestas recibidas a consultas anteriores. Investigaremos este problema más a fondo en la Sección 4.3. 4. En esta sección, estudiamos el poder de las subastas iterativas que utilizan consultas de demanda (no necesariamente ascendentes). Empezamos comparando las consultas de demanda con otros tipos de consultas. Luego, discutimos qué tan bien se puede aproximar el bienestar óptimo utilizando un número polinomial de consultas de demanda. También iniciamos el estudio de la representación de consultas de demanda de precios de paquetes, y finalmente, mostramos cómo las consultas de demanda ayudan a resolver la relajación de programación lineal de subastas combinatorias en tiempo polinómico. 4.1 El poder de los diferentes tipos de consultas En esta sección comparamos el poder de los diversos tipos de consultas definidos en la Sección 2. Presentaremos simulaciones computacionalmente eficientes de estos tipos de consultas utilizando consultas de demanda de precio de artículo. En la Sección 5.1 mostramos que estas simulaciones también se pueden realizar utilizando subastas ascendentes de precio de artículo. Lema 4.1. Una consulta de valor puede ser simulada por m consultas de valor marginal. Una consulta de valor marginal puede ser simulada por dos consultas de valor. Lema 4.2. Una consulta de valor puede ser simulada por consultas de demanda (donde t = log L es el número de bits necesarios para representar un valor de paquete único). Como corolario directo, obtenemos que las subastas de demanda siempre pueden obtener completamente las valoraciones de los postores al simular todas las posibles 2m − 1 consultas y, por lo tanto, obtener suficiente información para determinar la asignación óptima. Sin embargo, cabe destacar que esta inducción puede ser computacionalmente ineficiente. El siguiente lema muestra que las consultas de demanda pueden ser exponencialmente más poderosas que las consultas de valor. Lema 4.3. Puede ser necesario un número exponencial de consultas de valor para simular una sola consulta de demanda. Las consultas de utilidad indirecta son, sin embargo, equivalentes en poder a las consultas de demanda: Lema 4.4. Una consulta de utilidad indirecta puede ser simulada por mt + 1 consultas de demanda. Una consulta de demanda puede ser simulada por m + 1 consultas de utilidad indirecta. Las consultas de demanda también pueden simular consultas de demanda relativa: 19 18 Tenga en cuenta que las consultas de demanda de precios de paquetes pueden simular fácilmente una consulta de valor configurando los precios de todos los paquetes excepto S (el paquete con el valor desconocido) en L, y realizando una búsqueda binaria en el precio de S. 19 Nota: aunque en nuestro modelo los valores son enteros (múltiplos de δ), permitimos que los precios de las consultas sean números reales arbitrarios. Abreviaturas: V (consulta de valor), MV (consulta de valor marginal), D (consulta de demanda), IU (consulta de utilidad indirecta), RD (consulta de demanda relativa). Lema 4.5. Las consultas de demanda relativa pueden ser simuladas por un número polinomial de consultas de demanda. Según nuestra definición de consultas de demanda relativa, claramente no pueden simular consultas de valor par. La Figura 4 resume las relaciones entre estos tipos de consultas. 4.2 Aproximando el Bienestar Social con Consultas de Valor y Demanda Sabemos por [32] que las subastas combinatorias iterativas que solo utilizan un número polinómico de consultas no pueden encontrar una asignación óptima entre valoraciones generales y de hecho ni siquiera pueden aproximarla a un factor mejor que min{n, m1/2− }. En esta sección preguntamos qué tan bien se puede hacer esta aproximación utilizando consultas de demanda con precios de los artículos, o utilizando las consultas de valor más débiles. Mostramos que, utilizando consultas de demanda, se puede igualar el límite inferior, mientras que las consultas de valor solo pueden hacer mucho peor. La Figura 5 describe un algoritmo de tiempo polinómico que logra una proporción de aproximación de min(n, O( √ m)). Este algoritmo elige de forma codiciosa los paquetes que maximizan el valor por ítem de los postores (utilizando consultas de demanda relativa, ver Sección 4.1). Como paso final, asigna todos los artículos a un único postor si mejora el bienestar social (esto se puede verificar utilizando consultas de valor). Dado que tanto las consultas de valor como las consultas de demanda relativa pueden ser simuladas por un número polinomial de consultas de demanda con precios de los artículos (Lemas 4.2 y 4.5), este algoritmo puede ser implementado por un número polinomial de consultas de demanda con precios de los artículos. Teorema 4.6. La subasta descrita en la Figura 5 puede ser implementada mediante un número polinomial de consultas de demanda y logra una aproximación de min{n, 4 √ m} para el bienestar social. Ahora nos preguntamos qué tan bien se puede aproximar el bienestar óptimo mediante un número polinómico de consultas de valor. Primero notamos que las consultas de valor no son completamente inútiles: En [19] se muestra que si los m elementos se dividen en k paquetes fijos de tamaño m/k cada uno, y estos paquetes fijos se subastan como si cada uno fuera indivisible, entonces el bienestar social bers, por lo tanto, podemos tener paquetes con demandas relativas arbitrariamente cercanas. En este sentido, la simulación anterior es solo hasta un cierto límite (y el número de consultas es O(log L + log 1)). Cuando los precios de la consulta de demanda relativa se dan como números racionales, se implica una simulación exacta cuando el logaritmo es lineal en la longitud de la entrada. En el artículo completo [8], observamos que este algoritmo puede implementarse mediante dos subastas descendentes de precio de artículo (donde permitimos quitar artículos a lo largo de la subasta). El valor generado por tal subasta es al menos una aproximación de m√ k de lo posible en la subasta original. Ten en cuenta que tal subasta puede ser implementada mediante 2k − 1 consultas de valor a cada postor, consultando el valor de cada paquete de los paquetes fijos. Por lo tanto, si elegimos k = log m paquetes, obtenemos una aproximación de m√ log m mientras seguimos utilizando un número polinomial de consultas. El siguiente lema muestra que no es posible hacer mucho más utilizando consultas de valor: Lema 4.7. Cualquier subasta iterativa que utilice solo consultas de valor y distinga entre k-tuplas de valuaciones de 0/1 donde la asignación óptima tiene valor 1, y aquellas donde la asignación óptima tiene valor k, requiere al menos 2 m k consultas. Prueba. Considera la siguiente familia de valoraciones: para cada S, tal que |S| > m/2, v(S) = 1, y existe un único conjunto T, tal que para |S| ≤ m/2, v(S) = 1 si y solo si T ⊆ S y v(S) = 0 en caso contrario. Ahora observa el comportamiento del protocolo cuando todas las valoraciones vi tienen T = {1...m}. Claramente, en este caso el valor de la mejor asignación es 1, ya que ningún conjunto de tamaño m 2 o menor tiene un valor distinto de cero para ningún jugador. Corrija la secuencia de consultas y respuestas recibidas en este k-tupla de valuaciones. Ahora considera el k-tuplo de valoraciones elegido al azar de la siguiente manera: una partición de los m elementos en k conjuntos T1...Tk cada uno de tamaño m/k es elegido de forma uniforme al azar entre todas las particiones posibles. Ahora considera el k-tuplo de valoraciones de nuestra familia que corresponden a esta partición: claramente Ti puede asignarse a i, para cada i, obteniendo un valor total de k. Ahora observa el protocolo al ejecutarse con estas valoraciones y compara su comportamiento con el caso original. Ten en cuenta que la respuesta a una consulta S al jugador i difiere entre el caso de Ti y el caso original de T = {1...m} solo si |S| ≤ m 2 y Ti ⊆ S. Dado que Ti se distribuye uniformemente entre todos los conjuntos de tamaño exactamente m k , tenemos que para cualquier consulta fija S al jugador i, donde |S| ≤ m 2 , Pr[Ti ⊆ S] ≤ „ |S| m «|Ti| ≤ 2− m k Utilizando el límite de unión, si la secuencia original de consultas tenía una longitud menor que 2 m k , entonces con probabilidad positiva ninguna de las consultas en la secuencia recibiría una respuesta diferente a la tupla de entrada original. Esto está prohibido ya que el protocolo debe distinguir entre este caso y el caso original, lo cual no puede ocurrir si todas las consultas reciben la misma respuesta. Por lo tanto, debe haber habido al menos 2 consultas de m k para la tupla original de valoraciones. Concluimos que un protocolo de tiempo polinómico que utiliza solo consultas de valor no puede obtener una aproximación mejor que O( m log m ) del bienestar: Teorema 4.8. Una subasta iterativa que utiliza un número polinómico de consultas de valor no puede lograr una aproximación mejor que O( m log m ) para el bienestar social. Prueba. Inmediatamente del Lema 4.7: lograr cualquier ratio de aproximación k que sea asintóticamente mayor que m log m requiere un número exponencial de consultas de valor. Un algoritmo de aproximación: Inicialización: Sea T ← M los artículos actuales en venta. Que K ← N sean los postores actualmente participantes. Que S∗ 1 ← ∅, ..., S∗ n ← ∅ sea la asignación provisional. Repetir hasta que T = ∅ o K = ∅: Preguntar a cada postor i en K por el conjunto Si que maximice su valor por artículo, es decir, Si ∈ argmaxS⊆T vi(S) |S|. Sea i el postor con el valor máximo por artículo, es decir, i ∈ argmaxi∈K vi(Si) |Si| . Conjunto: s∗ i = si, K = K \\ i, M = M \\ Si Finalmente: Pregunte a los postores por sus valores vi(M) para el paquete completo. Si asignar todos los artículos a algún postor i mejora el bienestar social alcanzado hasta ahora (es decir, ∃i ∈ N tal que vi(M) > Σ i∈N vi(S∗ i )), entonces asigna todos los artículos a este postor i. Figura 5: Este algoritmo logra una aproximación de min{n, 4 √ m} para el bienestar social, que es asintóticamente la mejor aproximación en el peor de los casos posible con comunicación polinómica. Este algoritmo puede implementarse con un número polinomial de consultas de demanda. 4.3 La Representación de los Precios de los Paquetes En esta sección fijamos explícitamente el idioma en el que se presentan los precios de los paquetes a los postores en subastas de precios de paquetes. Este lenguaje requiere que el algoritmo liste explícitamente el precio de cada paquete con un precio no trivial. Trivial en este contexto es un precio que es igual al de uno de sus subconjuntos adecuados (que fue enumerado explícitamente). Esta representación es equivalente al lenguaje XOR para expresar valuaciones. Formalmente, cada consulta q se da por una expresión: q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl). En esta representación, el precio demandado para cada conjunto S es simplemente p(S) = max{k=1...l|Sk⊆S}pk. Definición 4. La longitud de la consulta q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl) es l. El costo de un algoritmo es la suma de las longitudes de las consultas realizadas durante la operación del algoritmo en el peor caso de entrada. Ten en cuenta que bajo esta definición, las subastas de precio por paquete no son necesariamente más fuertes que las subastas de precio por artículo. ¿Una consulta de precio de artículo que fija el precio de cada artículo en 1 se traduce en una consulta de precio de paquete exponencialmente larga que necesita especificar el precio |S| para cada paquete S. ¿Pero quizás las subastas de precio de paquete aún pueden encontrar asignaciones óptimas siempre que las subastas de precio de artículo puedan, sin simular directamente tales consultas? Mostramos que este no es el caso: de hecho, cuando se tiene en cuenta la longitud de la representación, las subastas de precios de paquetes a veces son seriamente inferiores a las subastas de precios de artículos. Considera la siguiente familia de valoraciones: Cada artículo tiene un valor de 3, excepto que para algún conjunto único S, su valor es un poco mayor: 3|S| + b, donde b ∈ {0, 1, 2}. Ten en cuenta que una subasta de precio de artículo puede encontrar fácilmente la asignación óptima entre dos valoraciones de este tipo: establece los precios de cada artículo en 3+; si los conjuntos de demanda de los dos jugadores están vacíos, entonces b = 0 para ambas valoraciones, y cualquier asignación arbitraria está bien. Si uno de ellos está vacío y el otro no, asigna el conjunto de demanda no vacío a su postor y el resto al otro. Si ambos conjuntos de demanda no están vacíos, entonces, a menos que formen una partición exacta, necesitamos ver cuál es mayor, lo cual podemos hacer aumentando el precio de un solo artículo en cada conjunto de demanda. Mostraremos que cualquier subasta de precio de paquete que utilice solo el lenguaje XOR para describir los precios de los paquetes requiere un costo exponencial (que incluye la suma de todas las longitudes de descripción de los precios) para encontrar una asignación óptima entre dos valoraciones de este tipo. Lema 4.9. Cada subasta de precio de paquete que utiliza expresiones XOR para denotar precios de paquete requiere un costo de 2Ω( √ m) para encontrar la asignación óptima entre dos valoraciones de la familia anterior. La complicación en la prueba se debe al hecho de que al usar expresiones XOR, la longitud de la descripción del precio depende del número de paquetes cuyo precio es estrictamente mayor que cada uno de sus subconjuntos, lo cual puede ser significativamente menor que el número de paquetes que tienen un precio distinto de cero. (La prueba se vuelve fácil si requerimos que el protocolo nombre explícitamente cada paquete con precio distinto de cero). No conocemos ninguna demostración elemental para este lema (aunque creemos que se puede encontrar una). En cambio, reducimos el problema a un límite inferior bien conocido en la complejidad de circuitos booleanos [18] que establece que los circuitos booleanos de profundidad 3 que calculan la función de mayoría en m variables requieren un tamaño de 2Ω( √ m). Consultas de demanda y programación lineal Considere la siguiente relajación de programación lineal para el problema generalizado de determinación de ganadores en subastas combinatorias (el programa primal): Maximizar X i∈N,S⊆M wi xi,S vi(S) sujeto a Para todo i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M. Nótese que el programa primal tiene un número exponencial de variables. Sin embargo, podremos resolverlo en tiempo polinómico utilizando consultas de demanda a los postores. La solución tendrá un soporte de tamaño polinómico (valores no nulos para xi,S), y por lo tanto podremos describirla en tiempo polinómico. Aquí está su dual: Minimizar X j∈M qjpj + X i∈N diui sujeto a ui + X j∈S pj ≥ wivi(S) ∀i ∈ N, S ⊆ M pi ≥ 0, uj ≥ 0 ∀i ∈ M, j ∈ N. Nótese que el problema dual tiene exactamente n + m variables pero un número exponencial de restricciones. Por lo tanto, el problema dual puede resolverse utilizando el método del Elipsoide en tiempo polinómico, si un oráculo de separación puede ser implementado en tiempo polinómico. Recuerda que un oráculo de separación, al recibir una posible solución, confirma si es una solución factible o responde con una restricción que es violada por la posible solución. Construimos un oráculo de separación para resolver el programa dual, utilizando una única consulta de demanda a cada uno de los postores. Considera una posible solución (u, p) para el programa dual. Podemos reescribir las restricciones del programa dual como: ui/wi ≥ vi(S) − X j∈S pj/wi. Ahora, una consulta de demanda al postor i con precios pj/wi revela exactamente el conjunto S que maximiza el RHS de la desigualdad anterior. Por lo tanto, para verificar si (u, p) es factible, basta con (1) consultar a cada postor i por su demanda Di bajo los precios pj/wi; (2) verificar solo las n restricciones ui + P j∈Di pj ≥ wivi(Di) (donde vi(Di) puede ser simulado utilizando una secuencia polinómica de consultas de demanda como se muestra en el Lema 4.2). Si ninguna de estas condiciones se viola, entonces estamos seguros de que (u, p) es factible; de lo contrario, obtenemos una restricción violada. Lo que queda por mostrar es cómo se puede resolver el programa primal. (Recuerde que el programa primal tiene un número exponencial de variables). Dado que el algoritmo de Elipsoide se ejecuta en tiempo polinómico, solo encuentra un número polinómico de restricciones durante su operación. Claramente, si se eliminaran todas las demás restricciones del programa dual, seguiría teniendo la misma solución (añadir restricciones solo puede disminuir el espacio de soluciones factibles). Ahora tome el dual reducido donde solo existan las restricciones encontradas, y observe su dual. Tendrá la misma solución que el dual original y, por lo tanto, del primal original. Sin embargo, observa la forma de este dual del dual reducido. Es solo una versión del programa primal con un número polinomial de variables, aquellas que corresponden a las restricciones que permanecieron en el dual reducido. Por lo tanto, se puede resolver en tiempo polinómico, y esta solución resuelve claramente el programa primal original, estableciendo todas las demás variables en cero. 5. En esta sección caracterizamos el poder de las subastas ascendentes por precio de artículo. Primero demostramos que este poder no es trivial: tales subastas pueden en general obtener una cantidad exponencial de información. Por otro lado, demostramos que la asignación óptima no siempre puede ser determinada por una sola subasta ascendente, y en algunos casos, tampoco por un número exponencial de trayectorias de precios ascendentes. Finalmente, separamos el poder de diferentes modelos de subastas ascendentes. 5.1 El Poder de las Subastas Ascendentes de Precio de Artículo Primero mostramos que si se permiten incrementos lo suficientemente pequeños, una única trayectoria ascendente de precios de artículos puede obtener preferencias que no pueden ser obtenidas con comunicación polinómica. Como se mencionó, todos nuestros resultados de dureza se mantienen para cualquier incremento, incluso infinitesimal. Teorema 5.1. Algunas clases de valoraciones pueden ser obtenidas mediante subastas ascendentes de precio de artículo, pero no pueden ser obtenidas mediante un número polinómico de consultas de ningún tipo. Prueba. (bosquejo) Considera dos postores con v(S) = 1 si |S| > n 2 , v(S) = 0 si |S| < n 2 y cada S tal que |S| = n 2 tiene un valor desconocido de {0, 1}. Debido a [32], determinar la asignación óptima aquí requiere comunicación exponencial en el peor de los casos. Sin embargo, demostramos (ver [9]) que una subasta ascendente de precio de artículo puede lograrlo, siempre y cuando pueda utilizar incrementos exponencialmente pequeños. Ahora describimos otro resultado positivo sobre el poder de las subastas ascendentes de precio de los artículos. En la sección 4.1, mostramos que en la subasta ascendente de precio de los artículos no se puede determinar la asignación óptima para esta clase de valoraciones, que una consulta de valor puede ser simulada con un número (verdaderamente) polinomial de consultas de demanda de precio de los artículos. Aquí mostramos que cada consulta de valor puede ser simulada por un número (pseudo) polinomial de consultas ascendentes de demanda de precio de artículo. (En la siguiente subsección, mostramos que no siempre podemos simular ni siquiera un par de consultas de valor utilizando una subasta ascendente de precio de artículo). En el artículo completo (parte II, [9]), demostramos que podemos simular otros tipos de consultas utilizando subastas ascendentes de precio de artículo. Proposición 5.2. Una consulta de valor puede ser simulada por una subasta ascendente de precio de artículo. Esta simulación requiere un número polinómico de consultas. De hecho, la prueba para la Proposición 5.2 demuestra un resultado útil más fuerte sobre la información obtenida por subastas iterativas. Se dice que en cualquier subasta iterativa en la que los cambios de precios sean lo suficientemente pequeños en cada etapa (subastas pseudocontinuas), se puede calcular el valor de todos los paquetes demandados durante la subasta. La idea básica es que cuando el oferente pasa de demandar un paquete Ti a demandar otro paquete Ti+1, hay un punto en el que ella es indiferente entre estos dos paquetes. Por lo tanto, conocer el valor de un conjunto demandado (por ejemplo, el conjunto vacío) permite calcular los valores de todos los demás conjuntos demandados. Decimos que una subasta es seudo-continua si solo utiliza consultas de demanda, y en cada paso, el precio de como máximo un artículo se modifica en (para algún ∈ (0, δ]) con respecto a la consulta anterior. Proposición 5.3. Considera cualquier subasta pseudo-continua (no necesariamente ascendente), en la que el postor i demande el conjunto vacío al menos una vez a lo largo de la subasta. Entonces, el valor de cada paquete demandado por el postor i a lo largo de la subasta puede calcularse al final de la subasta. 5.2 Limitaciones de las Subastas Ascendentes de Precio de Artículo Aunque observamos que las consultas de demanda pueden resolver cualquier problema de subasta combinatoria, cuando las consultas están restringidas a ser ascendentes, algunas clases de valoraciones no pueden ser obtenidas ni completamente obtenidas. Un ejemplo para tal clase de valoraciones se muestra en la Figura 6. Teorema 5.4. Existen clases de valoraciones que no pueden ser obtenidas ni completamente obtenidas por ninguna subasta ascendente de precio de artículos. Prueba. Que el postor 1 tenga la valoración descrita en la primera fila de la Figura 6, donde α y β son valores desconocidos en (0, 1). Primero, demostramos que esta clase no puede ser completamente revelada por una sola subasta ascendente. Específicamente, una subasta ascendente no puede revelar los valores de ambos α y β. Si tanto pa como pb son inferiores a 1, el oferente siempre exigirá el paquete completo ab: su utilidad de ab es estrictamente mayor que la utilidad de a o b por separado. Por ejemplo, demostramos que u1(ab) > u1(a): u1(ab) = 2 − (pa + pb) = 1 − pa + 1 − pb > vA(a) − pa + 1 − pb > u1(a) Por lo tanto, para obtener información sobre α o β, el precio de uno de los artículos debe ser al menos 1, sin pérdida de generalidad, pa ≥ 1. Pero entonces, el paquete a no será demandado por el postor 1 durante la subasta, por lo tanto, no se obtendrá ninguna información sobre α. Ahora, suponga que se sabe que el postor 2 tiene la valoración descrita en la segunda fila de la Figura 6. La asignación óptima depende de si α es mayor que β (en la valoración del postor 1), y demostramos que una subasta ascendente no puede determinar esto. La prueba del teorema anterior muestra que para que se revele un valor desconocido, el precio de un artículo debe ser mayor que 1 y el otro precio debe ser menor que 1. Por lo tanto, en una trayectoria de precios monótona de precios, solo uno de estos valores puede ser revelado. Una conclusión inmediata es que este resultado de imposibilidad también se aplica a las subastas descendentes de precio de los artículos. Dado que no existe tal trayectoria, entonces la misma conclusión se aplica incluso a las subastas de precios de artículos no deterministas (en las cuales los datos exógenos nos dicen cómo aumentar los precios). También hay que tener en cuenta que dado que la dificultad proviene de la imposibilidad de obtener completamente una valoración de un único postor, este resultado también se aplica a subastas ascendentes de precio de artículo no anónimas. 5.3 Limitaciones de las Subastas Ascendentes de Múltiples Trayectorias Según el Teorema 5.4, ninguna subasta ascendente de precio de artículo puede siempre obtener las preferencias (demostramos un resultado similar para precios de paquetes en la sección 6). ¿Pero pueden dos trayectorias ascendentes hacer el trabajo? ¿O un número polinómico de trayectorias ascendentes? Damos respuestas negativas a tales sugerencias. Definimos una subasta ascendente de trayectoria k como una subasta iterativa de consultas de demanda en la que las consultas de demanda pueden ser divididas en k conjuntos de consultas, donde los precios publicados en cada conjunto solo aumentan con el tiempo. Ten en cuenta que utilizamos una definición general; permite que las trayectorias se ejecuten en paralelo o secuencialmente, y utilizar la información obtenida en algunas trayectorias para determinar las consultas futuras en otras trayectorias. El poder de las subastas de múltiples trayectorias puede ser demostrado por el resultado negativo de Gul y Stacchetti [17], quienes mostraron que incluso para una subasta entre valoraciones de sustitutos, una subasta anónima ascendente de precio de artículo no puede calcular los precios VCG para todos los jugadores. Ausubel [4] superó este resultado imposible y diseñó subastas que sí calculan los precios VCG al organizar la subasta como una secuencia de n + 1 subastas ascendentes. Aquí demostramos que no se pueden obtener valoraciones XOR con k términos con menos de k − 1 trayectorias ascendentes. Por otro lado, demostramos que una fórmula XOR puede ser completamente revelada por k−1 subastas ascendentes no determinísticas (o por k−1 subastas ascendentes determinísticas si el subastador conoce los paquetes atómicos). Un reciente artículo no publicado de Mishra y Parkes extiende este resultado, y muestra que los precios no anónimos con precios de paquetes son necesarios para que una subasta ascendente termine con un equilibrio competitivo universal (que conduce a pagos VCG). Este resultado separa en realidad el poder de determinista 39 Proposición 5.5. Las valoraciones XOR con k términos no pueden ser obtenidas (o completamente obtenidas) por ninguna subasta ascendente de precio de artículo con trayectoria (k-2), incluso cuando los paquetes atómicos son conocidos por el que obtiene la información. Sin embargo, estas valoraciones pueden ser obtenidas (y completamente obtenidas) mediante subastas ascendentes de precios de artículos no deterministas y no anónimos de (k-1) trayectorias. Además, se requiere un número exponencial de trayectorias para obtener algunas clases de valoraciones: Proposición 5.6. La obtención y la obtención completa de algunas clases de valoraciones no pueden ser realizadas por ninguna subasta ascendente de precio de artículo de trayectoria k, donde k = o(2m). Prueba. (bosquejo) Considera la siguiente clase de valoraciones: Para |S| < m 2 , v(S) = 0 y para |S| > m 2 , v(S) = 2; cada conjunto S de tamaño m 2 tiene algún valor desconocido en (0, 1). Mostramos ([9]) que una subasta ascendente de un solo artículo y precio puede revelar el valor de como máximo un paquete de tamaño n 2, y por lo tanto se necesitaría un número exponencial de trayectorias ascendentes para obtener tales valoraciones. Observamos que el algoritmo que presentamos en la Sección 4.2 puede ser implementado por un número polinomial de subastas ascendentes (cada consulta de demanda de precio de artículo puede considerarse como una subasta ascendente separada), y por lo tanto, una aproximación de min(n, 4 √ m) puede lograrse mediante un número polinomial de subastas ascendentes. Actualmente no tenemos un límite superior mejor ni ningún límite inferior. 5.4 Separando los Diversos Modelos de Subastas Ascendentes Se han sugerido varios modelos para subastas ascendentes en la literatura. En esta sección, comparamos la potencia de los diferentes modelos. Como se mencionó, todas las subastas se consideran anónimas y determinísticas, a menos que se especifique lo contrario. Ascendente vs. Subastas descendentes: Comenzamos la discusión sobre la relación entre las subastas ascendentes y las subastas descendentes con un ejemplo. El algoritmo de Lehmann, Lehmann y Nisan [25] se puede implementar mediante una subasta simple de precio descendente por artículo (consultar el artículo completo para más detalles [9]). Este algoritmo garantiza al menos la mitad de la eficiencia óptima para valoraciones submodulares. Sin embargo, no estamos familiarizados con ninguna subasta ascendente que garantice una fracción similar de eficiencia. ¿Esto plantea una pregunta más general: ¿pueden las subastas ascendentes resolver cualquier problema de subasta combinatoria que sea resoluble utilizando una subasta descendente (y viceversa)? Damos respuestas negativas a estas preguntas. La idea detrás de las pruebas es que la información que el subastador puede obtener de forma gratuita al comienzo de cada tipo de subasta es diferente. En subastas iterativas no determinísticas: nuestra prueba muestra que una subasta iterativa no determinística puede obtener las valoraciones XOR de k términos con un número polinómico de consultas de demanda, y [7] muestra que esta obtención debe requerir un número exponencial de consultas de demanda. En subastas ascendentes, el subastador puede revelar el paquete más valioso (además de M) antes de comenzar a aumentar los precios, por lo tanto, puede utilizar esta información para elegir de forma adaptativa las consultas posteriores. En subastas descendentes, uno puede encontrar fácilmente el paquete con el precio promedio por artículo más alto, manteniendo todos los demás paquetes con utilidades no positivas, y utilizar esta información en el cambio de precio adaptativo. Proposición 5.7. Hay clases que no pueden ser obtenidas (totalmente obtenidas) mediante subastas de precio ascendente de artículos, pero pueden ser obtenidas (respectivamente, totalmente obtenidas) con una subasta de precio descendente de artículos. Proposición 5.8. Hay clases que no pueden ser obtenidas (totalmente obtenidas) mediante subastas descendentes de precio de artículo, pero pueden ser obtenidas (respectivamente, totalmente obtenidas) mediante subastas ascendentes de precio de artículo. Subastas Determinísticas vs. No Determinísticas: Las subastas ascendentes no determinísticas pueden ser vistas como subastas donde algún profesor benevolente que tiene información completa guía al subastador sobre cómo debería aumentar los precios. Es decir, la obtención de preferencias puede realizarse mediante una subasta ascendente no determinística, si existe una trayectoria ascendente que obtiene suficiente información para determinar la asignación óptima (y verificar que efectivamente lo sea). Mostramos que las subastas ascendentes no determinísticas son más poderosas que las subastas ascendentes determinísticas: Proposición 5.9. Algunas clases pueden ser obtenidas (totalmente obtenidas) mediante una subasta ascendente no determinista de precio de artículo, pero no pueden ser obtenidas (respectivamente, totalmente obtenidas) mediante subastas ascendentes deterministas de precio de artículo. Subastas Anónimas vs. No Anónimas: Como se mostrará en la Sección 6, el poder de las subastas ascendentes de precios de paquetes anónimas y no anónimas difiere significativamente. Aquí mostramos que también existe una diferencia para las subastas ascendentes de precio de artículo. Proposición 5.10. Algunas clases no pueden ser obtenidas mediante subastas anónimas ascendentes de precio de artículos, pero pueden ser obtenidas mediante una subasta ascendente de precio de artículos no anónima. Secuencial vs. Subastas Simultáneas: Una subasta no anónima se llama simultánea si en cada etapa, el precio de algún artículo se incrementa por para cada postor. El subastador puede utilizar la información recopilada hasta cada etapa, en todas las trayectorias personalizadas, para determinar las próximas consultas. Una subasta no anónima se llama secuencial si el subastador realiza una subasta para cada postor por separado, en orden secuencial. El subastador puede determinar la próxima consulta basándose en la información recopilada en las trayectorias completadas hasta el momento y en la historia de la trayectoria actual. Proposición 5.11. Hay clases que no pueden ser obtenidas mediante subastas simultáneas no anónimas de precio ascendente de artículos, pero que pueden ser obtenidas mediante una subasta secuencial no anónima de precio ascendente de artículos. Adaptativo vs. Subastas ajenas: Si el subastador determina las consultas independientemente de las respuestas de los postores (es decir, las consultas están predefinidas), decimos que la subasta es ajena. De lo contrario, la subasta es adaptativa. Demostramos que un comportamiento adaptativo del subastador puede ser beneficioso. Proposición 5.12. Hay clases que no pueden ser completamente elicitadas utilizando subastas ascendentes de precio de artículo sin conocimiento, pero pueden ser elicitadas (respectivamente, completamente elicitadas) por una subasta ascendente de precio de artículo adaptativa. La elicitación de preferencias frente a la elicitación completa de preferencias son problemas estrechamente relacionados. Si la elicitación completa es fácil (por ejemplo, en tiempo polinómico), entonces claramente la elicitación también es fácil (mediante una subasta no anónima, simplemente aprendiendo todas las valoraciones por separado). Por otro lado, hay ejemplos donde la obtención de preferencias se considera fácil pero el aprendizaje es difícil (típicamente, la obtención de preferencias requiere una menor cantidad de información; algunos ejemplos se pueden encontrar en [7]). Los algoritmos de tatonnement por [22, 12, 16] terminan con la asignación óptima para las valoraciones de sustitutos. Demostramos que no podemos obtener completamente las valoraciones de sustitutos (o incluso su subclase de valoraciones OXS definidas en [25]), incluso para un único postor, mediante una subasta ascendente de precio de artículo (¡aunque la asignación óptima puede encontrarse mediante una subasta ascendente para cualquier número de postores!). Teorema 5.13. Las valoraciones de sustitución no pueden ser completamente obtenidas mediante subastas ascendentes de precio por artículo. Además, no pueden ser completamente inducidos por ninguna trayectoria ascendente m 2 (m > 3). Si las valoraciones de los sustitutos tienen una representación compacta (es decir, polinomial en el número de bienes) es una pregunta abierta importante. Como un paso en esta dirección, mostramos que su subclase de valoraciones OXS tiene una representación compacta: cada valoración OXS puede ser representada por un máximo de m2 valores. Lema 5.14. Cualquier valoración de OXS puede ser representada por no más de m2 valores. 6. Subastas ascendentes de precio de paquete. Todas las subastas ascendentes en la literatura que se ha demostrado que encuentran la asignación óptima para valoraciones no restringidas son subastas de precio de paquete no anónimas (iBundle(3) de Parkes y Ungar [37] y la Subasta de Proxy de Ausubel y Milgrom [3]). Sin embargo, se han sugerido varias subastas ascendentes anónimas (por ejemplo, AkBA [42], [21] e iBundle(2) [37]). En esta sección, demostramos que las subastas ascendentes de precios de paquetes anónimos logran resultados pobres en el peor de los casos. También demostramos que la familia de subastas de precio ascendente de paquetes no anónimos puede funcionar exponencialmente más lento que las simples subastas de precio ascendente por artículo. 6.1 Limitaciones de las Subastas Anónimas de Precio Ascendente por Paquete Presentamos una clase de valoraciones que no pueden ser obtenidas por subastas anónimas de precio ascendente por paquete. Estas valoraciones están descritas en la Figura 7. La idea básica: para determinar el valor desconocido de un postor debemos aumentar 24. Tenga en cuenta que una subasta ascendente anónima no necesariamente puede obtener una clase que pueda ser completamente obtenida por una subasta ascendente. Las valoraciones sustitutivas están definidas, por ejemplo, en [16]. Hablando en términos generales, un postor con una valoración de sustitución seguirá demandando un cierto artículo después de que el precio de algunos otros artículos haya aumentado. Para completitud, presentamos en el artículo completo [9] una prueba de la eficiencia de tales subastas para valoraciones de sustitutos. Una valoración de demanda unitaria es una valoración XOR en la que todos los paquetes atómicos son elementos únicos. Las valoraciones de OXS pueden interpretarse como una agregación (O) de cualquier número de postores de demanda unitaria. La subasta anónima ascendente de precios de paquetes no puede determinar la asignación óptima para esta clase de valoraciones. un precio de un paquete que debería ser demandado por el otro postor en el futuro. Teorema 6.1. Algunas clases de valoraciones no pueden ser obtenidas mediante subastas anónimas de precios ascendentes por paquetes. Prueba. Considera un par de valoraciones XOR como se describe en la Figura 7. Para encontrar la asignación óptima debemos saber cuál valor es mayor entre α y β. Sin embargo, no podemos conocer el valor de ambos α y β con una sola trayectoria ascendente: asumimos sin pérdida de generalidad que el postor 1 demanda cd antes de que el postor 2 demande bd (no se obtendrá información si ninguno de estos eventos ocurre). En este caso, el precio de bd debe ser mayor que 1 (de lo contrario, el postor 1 prefiere bd a cd). Por lo tanto, el postor 2 nunca exigirá el paquete bd, y no se obtendrá información sobre β. Las valoraciones descritas en la prueba del Teorema 6.1 pueden ser fácilmente obtenidas mediante una subasta ascendente de precio de un artículo no anónima. Por otro lado, las valoraciones en la Figura 6 pueden ser fácilmente obtenidas mediante una subasta anónima ascendente de precios por paquetes. Concluimos que el poder de estas dos familias de subastas ascendentes es incomparable. Fortalecemos el resultado de imposibilidad anterior al demostrar que las subastas de precios de paquetes anónimos no pueden lograr ni siquiera una aproximación mejor que min{O(n), O( √ m)} para el bienestar social. Este ratio de aproximación se puede lograr con comunicación polinómica, y específicamente con un número polinómico de consultas de demanda de precio de artículo. Teorema 6.2. Una subasta anónima de precios ascendentes en paquetes no puede garantizar una aproximación mejor que min{ n 2 , √ m 2 } para el bienestar óptimo. Prueba. (Bosquejo) Supongamos que tenemos n postores y n2 artículos en venta, y que n es primo. Construimos n2 paquetes distintos con las siguientes propiedades: para cada postor, definimos una partición Si = (Si 1, ..., Si n) de los n2 artículos en n paquetes, de manera que cualquier par de paquetes de particiones diferentes se intersectan. En el artículo completo, en la parte II [9] mostramos una construcción explícita utilizando las propiedades de las funciones lineales sobre campos finitos. El resto de la prueba es independiente de la construcción específica. Usando estos n2 paquetes construimos una clase difícil de obtener. Cada postor tiene una oferta atómica, en su valoración XOR, para cada uno de estos n2 paquetes. Un postor i tiene un valor de 2 para cualquier conjunto Si j en su partición. Para todos los paquetes en las otras particiones, él tiene un valor de 0 o de 1 − δ, y estos valores son desconocidos para el subastador. Dado que cada par de paquetes de diferentes particiones se intersectan, solo un postor puede recibir un paquete con un valor de 2. 27 Si α > β, la asignación óptima asignará cd al postor 1 y ab al postor 2. De lo contrario, le damos bd al postor 2 y ac al postor 1. Ten en cuenta que ambos postores no pueden obtener un valor de 2 en la misma asignación, debido a las intersecciones de los paquetes de alto valor. Ten en cuenta que las consultas de precios de paquetes pueden requerir comunicación exponencial, por lo tanto, el límite inferior de [32] no se cumple. Subastas ascendentes económicamente eficientes de precios de paquetes no anónimos: Inicialización: Todos los precios se inicializan en cero (precios de paquetes no anónimos). Cada postor presenta un paquete que maximiza su utilidad bajo sus precios personalizados actuales. El subastador calcula una asignación provisional que maximiza sus ingresos bajo los precios actuales. Los precios de los paquetes que fueron demandados por postores perdedores se incrementan en . Finalmente: Terminar cuando la asignación provisional asigna a cada postor el paquete que solicitó. Figura 8: Las subastas de esta familia (denominadas subastas NBEA) se sabe que logran el bienestar óptimo. Ningún postor exigirá un paquete de bajo valor, siempre y cuando el precio de uno de sus paquetes de alto valor sea inferior a 1 (y así le genere una utilidad mayor a 1). Por lo tanto, para obtener información sobre los paquetes de bajo valor, el subastador debería elegir arbitrariamente a un postor (sin pérdida de generalidad, postor 1) y aumentar los precios de todos los paquetes (S1 1, ..., S1 n) para que sean mayores que 1. Dado que los precios no pueden disminuir, los otros postores claramente nunca demandarán estos paquetes en etapas futuras. Un adversario puede elegir los valores de manera que los valores bajos de todos los postores para los paquetes que no están en la partición del postor 1 sean cero (es decir, vi(S1 j) = 0 para cada i = 1 y cada j), sin embargo, asignar a cada postor un paquete diferente de la partición del postor 1, podría lograr un bienestar de n+1−(n−1)δ (la valoración del postor 1 es 2, y 1 − δ para todos los demás postores); Si estos paquetes se asignaran incorrectamente, solo se podría lograr un bienestar de 2 (2 para el paquete de alto valor del postor 1, 0 para todos los demás postores). En este punto, el subastador no puede tener ninguna información sobre la identidad de los paquetes con valores no nulos. Por lo tanto, un adversario puede elegir que los valores de los paquetes recibidos por los postores 2, ..., n en la asignación final sean cero. Concluimos que las subastas de precios de paquetes anónimos no pueden garantizar un bienestar mayor que 2 para esta clase, donde el bienestar óptimo puede estar arbitrariamente cerca de n + 1. 6.2 Precios de Paquetes vs. Los precios de los artículos El núcleo de las subastas en [37, 3] es el esquema descrito en la Figura 8 (en el espíritu de [35]) para subastas con precios de paquetes no anónimos. Las subastas de este esquema terminan con la asignación óptima para cualquier clase de valoraciones. Denominamos a esta familia de subastas ascendentes como subastas NBEA29. Las subastas NBEA pueden obtener valoraciones XOR de k términos en un número polinómico (en k) de pasos, aunque la obtención de dichas valoraciones puede requerir un número exponencial de consultas de precios de artículos ([7]), y las subastas ascendentes de precios de artículos no pueden hacerlo en absoluto (Teorema 5.4). Sin embargo, demostramos que las subastas de NBEA (y en particular, iBundle(3) y la subasta de proxy) a veces son inferiores a las simples subastas de demanda de precio de artículo. Esto puede justificar el uso de subastas híbridas que utilizan tanto precios lineales como no lineales (por ejemplo, la subasta de reloj-proxi [10]). Demostramos que las subastas de este tipo son 29 subastas ascendentes de precio de paquete no anónimas económicamente eficientes. Para completitud, en el artículo completo [9] presentamos una prueba sencilla de la eficiencia (hasta un ) de las subastas de este esquema . familia puede utilizar un número exponencial de consultas incluso para determinar la asignación óptima entre dos postores con valoraciones aditivas30 , donde dichas valoraciones pueden ser obtenidas mediante una subasta ascendente de precio de artículo simple. En realidad demostramos esta propiedad para una clase más amplia de subastas que llamamos subastas conservadoras. También observamos que en subastas conservadoras, permitir a los postores enviar todos los paquetes en sus conjuntos de demanda garantiza que la subasta se desarrolle en un número polinómico de pasos, si L no es demasiado alto (pero con comunicación exponencial, por supuesto). Una subasta ascendente se llama conservadora si no es anónima, utiliza precios de paquetes inicializados en cero y en cada etapa el subastador solo puede aumentar los precios de los paquetes demandados por los postores hasta esa etapa. Además, cada postor solo puede recibir los paquetes que solicitó durante la subasta. Ten en cuenta que las subastas de NBEA son, por definición, conservadoras. Proposición 6.3. Si cada postor exige un solo paquete en cada paso de la subasta, las subastas conservadoras pueden durar un número exponencial de pasos incluso para valoraciones aditivas. Si a los postores se les permite presentar todos los paquetes en sus conjuntos de demanda en cada paso, entonces las subastas conservadoras pueden ejecutarse en un número polinómico de pasos para cualquier perfil de valoraciones, siempre y cuando la valoración máxima L sea polinómica en m, n y δ. Agradecimientos: Los autores agradecen a Moshe Babaioff, Shahar Dobzinski, Ron Lavi, Daniel Lehmann, Ahuva Mualem, David Parkes, Michael Schapira e Ilya Segal por las útiles discusiones. Apoyado por subvenciones de la Academia de Ciencias de Israel y la Fundación de Ciencia Binacional Estados Unidos-Israel. 7. REFERENCIAS [1] Amazon. Página web: http://www.amazon.com. [2] ebay. Página web: http://www.ebay.com. [3] L. M. Ausubel y P. R. Milgrom. Subastas ascendentes con ofertas de paquetes. Fronteras de la Economía Teórica, 1:1-42, 2002. [4] Lawrence Ausubel. Una subasta dinámica eficiente para mercancías heterogéneas, 2000. Documento de trabajo, Universidad de Maryland. [5] Yair Bartal, Rica Gonen y Noam Nisan. Subastas combinatorias multiunidad compatibles con incentivos. En TARK 03, 2003. [6] Alejandro Bertelsen. Sustitutos de valoraciones y m-concavidad. M.Sc. Tesis, Universidad Hebrea de Jerusalén, 2005. [7] Avrim Blum, Jeffrey C. Jackson, Tuomas Sandholm y Martin A. Zinkevich. Elicitación de preferencias y aprendizaje por consulta. Revista de Investigación en Aprendizaje Automático, 5:649-667, 2004. [8] Liad Blumrosen y Noam Nisan. Sobre el poder computacional de las subastas iterativas I: consultas de demanda. Documento de trabajo, La Universidad Hebrea de 30 valoraciones se llaman aditivas si para cualquier conjunto de paquetes disjuntos A y B, v(A ∪ B) = v(A) + v(B). Las valoraciones aditivas son tanto subaditivas como superaditivas y están determinadas por los valores m asignados a los elementos individuales. 42 Jerusalén. Disponible en http://www.cs.huji.ac.il/˜noam/mkts.html. [9] Liad Blumrosen y Noam Nisan. Sobre el poder computacional de las subastas iterativas II: subastas ascendentes. Documento de trabajo, Universidad Hebrea de Jerusalén. Disponible en http://www.cs.huji.ac.il/˜noam/mkts.html. [10] P. Cramton, L.M. Ausubel y P.R. I'm sorry, but \"Milgrom\" is a proper noun and does not have a direct translation in Spanish. En P. Cramton, Y. Shoham y R. Steinberg (Editores), Subastas Combinatorias. Capítulo 5. La subasta de reloj-proxi: Un diseño práctico de subasta combinatoria. MIT Press. Próximamente, 2005. [11] P. Cramton, Y. Shoham y R. Steinberg (Editores). Subastas combinatorias. MIT Press. Próximamente, 2005. [12] G. Demange, D. Gale y M. Sotomayor. Subastas de varios artículos. Revista de Economía Política, 94:863-872, 1986. [13] Shahar Dobzinski, Noam Nisan y Michael Schapira. Algoritmos de aproximación para CAS con postores sin complemento. En el 37º simposio de ACM sobre teoría de la computación (STOC)., 2005. [14] Shahar Dobzinski y Michael Schapira. Límites óptimos de aproximación superior e inferior para subastas combinatorias de k-duplicados. Documento de trabajo, Universidad Hebrea. [15] Conferencia de licitación combinatoria. Página web: http://wireless.fcc.gov/auctions/conferences/combin2003. [16] Faruk Gul y Ennio Stacchetti. Equilibrio walrasiano con sustitutos brutos. Revista de Teoría Económica, 87:95 - 124, 1999. [17] Faruk Gul y Ennio Stacchetti. La subasta inglesa con productos diferenciados. Revista de Teoría Económica, 92(3):66 - 95, 2000. [18] J. Hastad. Límites inferiores casi óptimos para circuitos de poca profundidad. En el 18º STOC, páginas 6-20, 1986. [19] Ron Holzman, Noa Kfir-Dahav, Dov Monderer y Moshe Tennenholtz. Equilibrio de empaquetamiento en subastas combinatorias. Juegos y Comportamiento Económico, 47:104-123, 2004. [20] H. Karloff. Programación Lineal. Birkhäuser Verlag, 1991. [21] Frank Kelly y Richard Steinberg. Una subasta combinatoria con múltiples ganadores para el servicio universal. Ciencia de la Gestión, 46:586-596, 2000. [22] A.S. Kelso y V.P. Crawford. Emparejamiento laboral, formación de coaliciones y sustitución bruta. Econometrica, 50:1483-1504, 1982. [23] Subhash Khot, Richard J. Lipton, Evangelos Markakis y Aranyak Mehta. Resultados de inaproximabilidad para subastas combinatorias con funciones de utilidad submodulares. En Working paper., 2004. [24] Sebastien Lahaie y David C. Parkes. Aplicando algoritmos de aprendizaje a la obtención de preferencias. En EC 04. [25] Benny Lehmann, Daniel Lehmann y Noam Nisan. Subastas combinatorias con utilidades marginales decrecientes. En la conferencia de ACM sobre comercio electrónico. Para aparecer, Juegos y Comportamiento Económico., 2001. [26] D. Lehmann, L. OCallaghan, y Y. Shoham. Revelación de la verdad en subastas combinatorias aproximadamente eficientes. JACM, 49(5):577-602, septiembre de 2002. [27] A. Mas-Collel, W. Whinston y J. Verde. Teoría microeconómica. Oxford University Press, 1995. [28] Debasis Mishra y David Parkes. Subastas de Vickrey de precio ascendente utilizando algoritmos primal-dual., 2004. Documento de trabajo, Universidad de Harvard. [29] Noam Nisan. La complejidad de comunicación del empaquetamiento y cobertura de conjuntos aproximados. En ICALP 2002. [30] Noam Nisan. Subasta y asignación en subastas combinatorias. En la Conferencia ACM sobre Comercio Electrónico, 2000. [31] Noam Nisan. En P. Cramton, Y. Shoham y R. Steinberg (Editores), Subastas Combinatorias. Capítulo 1. Lenguajes de subasta. MIT Press. Próximamente, 2005. [32] Noam Nisan e Ilya Segal. Los requisitos de comunicación de asignaciones eficientes y precios de apoyo, 2003. Documento de trabajo. Disponible en http://www.cs.huji.ac.il/˜noam/mkts.html Próximamente en la Revista de Teoría Económica. [33] Noam Nisan e Ilya Segal. Ineficiencia exponencial de la comunicación de consultas de demanda, 2004. Documento de trabajo. Disponible en http://www.stanford.edu/ isegal/queries1.pdf. [34] D. C. Parkes y L. H. Ungar. Una subasta de Vickrey generalizada de precio ascendente. Tecnología. Rep., Universidad de Harvard, 2002. [35] David Parkes. En P. Cramton, Y. Shoham y R. Steinberg (Editores), Subastas Combinatorias. Capítulo 3. Subastas combinatorias iterativas. MIT Press. Próximamente, 2005. [36] David C. Parkes. Subastas combinatorias iterativas: Logrando eficiencia económica y computacional. Tesis de doctorado, Departamento de Ciencias de la Computación e Informática, Universidad de Pensilvania, 2001. [37] David C. Parkes y Lyle H. Ungar. Subastas combinatorias iterativas: Teoría y práctica. En AAAI/IAAI, páginas 74-81, 2000. [38] Ariel Rubinstein. ¿Por qué ciertas propiedades de las relaciones binarias son relativamente más comunes en los lenguajes naturales? Econometrica, 64:343-356, 1996. [39] Tuomas Sandholm. \n\nEconometrica, 64:343-356, 1996. [39] Tuomas Sandholm. Algoritmo para la determinación óptima del ganador en subastas combinatorias. En Inteligencia Artificial, volumen 135, páginas 1-54, 2002. [40] P. Santi, V. Conitzer y T. Sandholm. Hacia una caracterización de la obtención de preferencias polinomiales con consultas de valor en subastas combinatorias. En la 17ª Conferencia Anual sobre Teoría del Aprendizaje, 2004. [41] Ilya Segal. Los requisitos de comunicación de las reglas de elección social y los conjuntos de presupuesto de apoyo, 2004. Documento de trabajo. Disponible en http://www.stanford.edu/ isegal/rules.pdf. [42] P.R. Wurman y M.P. Wellman. Akba: Una subasta combinatoria progresiva y de precio anónimo. En la Segunda Conferencia ACM sobre Comercio Electrónico, 2000. [43] Martin A. Zinkevich, Avrim Blum y Tuomas Sandholm. En la obtención de preferencias en tiempo polinómico con consultas de valor. En la Conferencia ACM sobre Comercio Electrónico, 2003. 43 ",
            "candidates": [],
            "error": [
                [
                    "subastas de precio ascendente",
                    "subastas de precio ascendente",
                    "subastas anónimas de precio ascendente",
                    "subastas de precio ascendente"
                ]
            ]
        },
        "bidder": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "On the Computational Power of Iterative Auctions∗ [Extended Abstract] Liad Blumrosen School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel liad@cs.huji.ac.il Noam Nisan School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel noam@cs.huji.ac.il ABSTRACT We embark on a systematic analysis of the power and limitations of iterative combinatorial auctions.",
                "Most existing iterative combinatorial auctions are based on repeatedly suggesting prices for bundles of items, and querying the bidders for their demand under these prices.",
                "We prove a large number of results showing the boundaries of what can be achieved by auctions of this kind.",
                "We first focus on auctions that use a polynomial number of demand queries, and then we analyze the power of different kinds of ascending-price auctions.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION Combinatorial auctions have recently received a lot of attention.",
                "In a combinatorial auction, a set M of m nonidentical items are sold in a single auction to n competing bidders.",
                "The bidders have preferences regarding the bundles of items that they may receive.",
                "The preferences of <br>bidder</br> i are specified by a valuation function vi : 2M → R+ , where vi(S) denotes the value that <br>bidder</br> i attaches to winning the bundle of items S. We assume free disposal, i.e., that the vis are monotone non-decreasing.",
                "The usual goal of the auctioneer is to optimize the social welfare P i vi(Si), where the allocation S1...Sn must be a partition of the items.",
                "Applications include many complex resource allocation problems and, in fact, combinatorial auctions may be viewed as the common abstraction of many complex resource allocation problems.",
                "Combinatorial auctions face both economic and computational difficulties and are a central problem in the recently active border of economic theory and computer science.",
                "A forthcoming book [11] addresses many of the issues involved in the design and implementation of combinatorial auctions.",
                "The design of a combinatorial auction involves many considerations.",
                "In this paper we focus on just one central issue: the communication between bidders and the allocation mechanism - preference elicitation.",
                "Transferring all information about bidders preferences requires an infeasible (exponential in m) amount of communication.",
                "Thus, direct revelation auctions in which bidders simply declare their preferences to the mechanism are only practical for very small auction sizes or for very limited families of <br>bidder</br> preferences.",
                "We have therefore seen a multitude of suggested iterative auctions in which the auction protocol repeatedly interacts with the different bidders, aiming to adaptively elicit enough information about the bidders preferences as to be able to find a good (optimal or close to optimal) allocation.",
                "Most of the suggested iterative auctions proceed by maintaining temporary prices for the bundles of items and repeatedly querying the bidders as to their preferences between the bundles under the current set of prices, and then updating the set of bundle prices according to the replies received (e.g., [22, 12, 17, 37, 3]).",
                "Effectively, such an iterative auction accesses the bidders preferences by repeatedly making the following type of demand query to bidders: Query to <br>bidder</br> i: a vector of bundle prices p = {p(S)}S⊆M ; Answer: a bundle of items S ⊆ M that maximizes vi(S) − p(S)..",
                "These types of queries are very natural in an economic setting as they capture the revealed preferences of the bidders.",
                "Some auctions, called item-price or linear-price auctions, specify a price pi for each item, and the price of any given bundle S is always linear, p(S) = P i∈S pi.",
                "Other auctions, called bundle-price auctions, allow specifying arbitrary (non-linear) prices p(S) for bundles.",
                "Another important differentiation between models of iterative auctions is 29 based on whether they use anonymous or non-anonymous prices: In some auctions the prices that are presented to the bidders are always the same (anonymous prices).",
                "In other auctions (non-anonymous), different bidders may face different (discriminatory) vectors of prices.",
                "In ascending-price auctions, forcing prices to be anonymous may be a significant restriction.",
                "In this paper, we embark on a systematic analysis of the computational power of iterative auctions that are based on demand queries.",
                "We do not aim to present auctions for practical use but rather to understand the limitations and possibilities of these kinds of auctions.",
                "In the first part of this paper, our main question is what can be done using a polynomial number of these types of queries?",
                "That is, polynomial in the main parameters of the problem: n, m and the number of bits t needed for representing a single value vi(S).",
                "Note that from an algorithmic point of view we are talking about sub-linear time algorithms: the input size here is really n(2m − 1) numbers - the descriptions of the valuation functions of all bidders.",
                "There are two aspects to computational efficiency in these settings: the first is the communication with the bidders, i.e., the number of queries made, and the second is the usual computational tractability.",
                "Our lower bounds will depend only on the number of queriesand hold independently of any computational assumptions like P = NP.",
                "Our upper bounds will always be computationally efficient both in terms of the number of queries and in terms of regular computation.",
                "As mentioned, this paper concentrates on the single aspect of preference elicitation and on its computational consequences and does not address issues of incentives.",
                "This strengthens our lower bounds, but means that the upper bounds require evaluation from this perspective also before being used in any real combinatorial auction.1 The second part of this paper studies the power of ascending -price auctions.",
                "Ascending auctions are iterative auctions where the published prices cannot decrease in time.",
                "In this work, we try to systematically analyze what do the differences between various models of ascending auctions mean.",
                "We try to answer the following questions: (i) Which models of ascending auctions can find the optimal allocation, and for which classes of valuations? (ii) In cases where the optimal allocation cannot be determined by ascending auctions, how well can such auctions approximate the social welfare? (iii) How do the different models for ascending auctions compare?",
                "Are some models computationally stronger than others?",
                "Ascending auctions have been extensively studied in the literature (see the recent survey by Parkes [35]).",
                "Most of this work presented upper bounds, i.e., proposed mechanisms with ascending prices and analyzed their properties.",
                "A result which is closer in spirit to ours, is by Gul and Stacchetti [17], who showed that no item-price ascending auction can always determine the VCG prices, even for substitutes valuations.2 Our framework is more general than the traditional line of research that concentrates on the final allocation and 1 We do observe however that some weak incentive property comes for free in demand-query auctions since myopic players will answer all demand queries truthfully.",
                "We also note that in some cases (but not always!) the incentives issues can be handled orthogonally to the preference elicitation issues, e.g., by using Vickrey-Clarke-Groves (VCG) prices (e.g., [4, 34]). 2 We further discuss this result in Section 5.3.",
                "Iterative auctions Demand auctions Item-price auctions Anonymous price auctions Ascending auctions 1 2 3 4 5 6 97 8 10 Figure 1: The diagram classifies the following auctions according to their properties: (1) The adaptation [12] for Kelso & Crawfords [22] auction. (2) The Proxy Auction [3] by Ausubel & Milgrom. (3) iBundle(3) by Parkes & Ungar [34]. (4) iBundle(2) by Parkes & Ungar [37]. (5) Our descending adaptation for the 2-approximation for submodular valuations by [25] (see Subsection 5.4). (6) Ausubels [4] auction for substitutes valuations. (7) The adaptation by Nisan & Segal [32] of the O( √ m) approximation by [26]. (8) The duplicate-item auction by [5]. (9) Auction for Read-Once formulae by [43]. (10) The AkBA Auction by Wurman & Wellman [42]. payments and in particular, on reaching Walrasian equilibria or Competitive equilibria.",
                "A Walrasian equilibrium3 is known to exist in the case of Substitutes valuations, and is known to be impossible for any wider class of valuations [16].",
                "This does not rule out other allocations by ascending auctions: in this paper we view the auctions as a computational process where the outcome - both the allocation and the payments - can be determined according to all the data elicited throughout the auction; This general framework strengthens our negative results.4 We find the study of ascending auctions appealing for various reasons.",
                "First, ascending auctions are widely used in many real-life settings from the FCC spectrum auctions [15] to almost any e-commerce website (e.g., [2, 1]).",
                "Actually, this is maybe the most straightforward way to sell items: ask the bidders what would they like to buy under certain prices, and increase the prices of over-demanded goods.",
                "Ascending auctions are also considered more intuitive for many bidders, and are believed to increase the trust of the bidders in the auctioneer, as they see the result gradually emerging from the bidders responses.",
                "Ascending auctions also have other desired economic properties, e.g., they incur smaller information revelation (consider, for example, English auctions vs. second-price sealed bid auctions). 1.1 Extant Work Many iterative combinatorial auction mechanisms rely on demand queries (see the survey in [35]).",
                "Figure 1 summa3 A Walrasian equilibrium is vector of item prices for which all the items are sold when each <br>bidder</br> receives a bundle in his demand set. 4 In few recent auction designs (e.g., [4, 28]) the payments are not necessarily the final prices of the auctions. 30 Valuation family Upper bound Reference Lower bound Reference General min(n, O( √ m)) [26], Section 4.2 min(n, m1/2− ) [32] Substitutes 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subadditive O(logm) [13] 2 [13] k-duplicates O(m1/k+1 ) [14] O(m1/k+1 ) [14] Procurement ln m [32] (log m)/2 [29, 32] Figure 2: The best approximation factors currently achievable by computationally-efficient combinatorial auctions, for several classes of valuations.",
                "All lower bounds in the table apply to all iterative auctions (except the one marked by *); all upper bounds in the table are achieved with item-price demand queries. rizes the basic classes of auctions implied by combinations of the above properties and classifies some of the auctions proposed in the literature according to this classification.",
                "For our purposes, two families of these auctions serve as the main motivating starting points: the first is the ascending item-price auctions of [22, 17] that with computational efficiency find an optimal allocation among (gross) substitutes valuations, and the second is the ascending bundleprice auctions of [37, 3] that find an optimal allocation among general valuations - but not necessarily with computational efficiency.",
                "The main lower bound in this area, due to [32], states that indeed, due to inherent communication requirements, it is not possible for any iterative auction to find the optimal allocation among general valuations with sub-exponentially many queries.",
                "A similar exponential lower bound was shown in [32] also for even approximating the optimal allocation to within a factor of m1/2− .",
                "Several lower bounds and upper bounds for approximation are known for some natural classes of valuations - these are summarized in Figure 2.",
                "In [32], the universal generality of demand queries is also shown: any non-deterministic communication protocol for finding an allocation that optimizes the social welfare can be converted into one that only uses demand queries (with bundle prices).",
                "In [41] this was generalized also to nondeterministic protocols for finding allocations that satisfy other natural types of economic requirements (e.g., approximate social efficiency, envy-freeness).",
                "However, in [33] it was demonstrated that this completeness of demand queries holds only in the nondeterministic setting, while in the usual deterministic setting, demand queries (even with bundle prices) may be exponentially weaker than general communication.",
                "Bundle-price auctions are a generalization of (the more natural and intuitive) item-price auctions.",
                "It is known that indeed item-price auctions may be exponentially weaker: a nice example is the case of valuations that are a XOR of k bundles5 , where k is small (say, polynomial).",
                "Lahaie and Parkes [24] show an economically-efficient bundle-price auction that uses a polynomial number of queries whenever k is polynomial.",
                "In contrast, [7] show that there exist valuations that are XORs of k = √ m bundles such that any item-price auction that finds an optimal allocation between them requires exponentially many queries.",
                "These results are part of a recent line of research ([7, 43, 24, 40]) that study the preference elicitation problem in combinatorial auctions and its relation to the full elicitation problem (i.e., learn5 These are valuations where bidders have values for k specific packages, and the value of each bundle is the maximal value of one of these packages that it contains. ing the exact valuations of the bidders).",
                "These papers adapt methods from machine-learning theory to the combinatorialauction setting.",
                "The preference elicitation problem and the full elicitation problem relate to a well studied problem in microeconomics known as the integrability problem (see, e.g., [27]).",
                "This problem studies if and when one can derive the utility function of a consumer from her demand function.",
                "Paper organization: Due to the relatively large number of results we present, we start with a survey of our new results in Section 2.",
                "After describing our formal model in Section 3, we present our results concerning the power of demand queries in Section 4.",
                "Then, we describe the power of item-price ascending auctions (Section 5) and bundle-price ascending auctions (Section 6).",
                "Readers who are mainly interested in the self-contained discussion of ascending auctions can skip Section 4.",
                "Missing proofs from Section 4 can be found in part I of the full paper ([8]).",
                "Missing proofs from Sections 5 and 6 can be found in part II of the full paper ([9]). 2.",
                "A SURVEY OF OUR RESULTS Our systematic analysis is composed of the combination of a rather large number of results characterizing the power and limitations of various classes of auctions.",
                "In this section, we will present an exposition describing our new results.",
                "We first discuss the power of demand-query iterative auctions, and then we turn our attention to ascending auctions.",
                "Figure 3 summarizes some of our main results. 2.1 Demand Queries Comparison of query types We first ask what other natural types of queries could we imagine iterative auctions using?",
                "Here is a list of such queries that are either natural, have been used in the literature, or that we found useful. 1.",
                "Value query: The auctioneer presents a bundle S, the <br>bidder</br> reports his value v(S) for this bundle. 2.",
                "Marginal-value query: The auctioneer presents a bundle A and an item j, the <br>bidder</br> reports how much he is willing to pay for j, given that he already owns A, i.e., v(j|A) = v(A ∪ {j}) − v(A). 3.",
                "Demand query (with item prices): The auctioneer presents a vector of item prices p1...pm; the <br>bidder</br> reports his demand under these prices, i.e., some set S that maximizes v(S) − P i∈S pi.6 6 A tie breaking rule should be specified.",
                "All of our results 31 Communication Constraint Can find an optimal allocation?",
                "Upper bound for welfare approx.",
                "Lower bound for welfare approx.",
                "Item-Price Demand Queries Yes 1 1 Poly.",
                "Communication No [32] min(n, O(m1/2 )) [26] min(n, m1/2− ) [32] Poly.",
                "Item-Price Demand Queries No [32] min(n, O(m1/2 )) min(n, m1/2− ) [32] Poly.",
                "Value Queries No [32] O( m√ log m ) [19] O( m log m ) Anonymous Item-Price AA No - min(O(n), O(m1/2− )) Non-anonymous Item-Price AA No -Anonymous Bundle-Price AA No - min(O(n), O(m1/2− )) Non-anonymous Bundle-Price AA Yes [37] 1 1 Poly Number of Item-Price AA No min(n, O(m1/2 ))Figure 3: This paper studies the economic efficiency of auctions that follow certain communication constraints.",
                "For each class of auctions, the table shows whether the optimal allocation can be achieved, or else, how well can it be approximated (both upper bounds and lower bounds).",
                "New results are highlighted.",
                "Abbreviations: Poly. (Polynomial number/size), AA (ascending auctions). - means that nothing is currently known except trivial solutions. 4.",
                "Indirect-utility query: The auctioneer presents a set of item prices p1...pm, and the <br>bidder</br> responds with his indirect-utility under these prices, that is, the highest utility he can achieve from a bundle under these prices: maxS⊆M (v(S) − P i∈S pi).7 5.",
                "Relative-demand query: the auctioneer presents a set of non-zero prices p1...pm, and the <br>bidder</br> reports the bundle that maximizes his value per unit of money, i.e., some set that maximizes v(S)P i∈S pi .8 Theorem: Each of these queries can be efficiently (i.e., in time polynomial in n, m, and the number of bits of precision t needed to represent a single value vi(S)) simulated by a sequence of demand queries with item prices.",
                "In particular this shows that demand queries can elicit all information about a valuation by simulating all 2m −1 value queries.",
                "We also observe that value queries and marginalvalue queries can simulate each other in polynomial time and that demand queries and indirect-utility queries can also simulate each other in polynomial time.",
                "We prove that exponentially many value queries may be needed in order to simulate a single demand query.",
                "It is interesting to note that for the restricted class of substitutes valuations, demand queries may be simulated by polynomial number of value queries [6].",
                "Welfare approximation The next question that we ask is how well can a computationally-efficient auction that uses only demand queries approximate the optimal allocation?",
                "Two separate obstacles are known: In [32], a lower bound of min(n, m1/2− ), for any fixed > 0, was shown for the approximation factor apply for any fixed tie breaking rule. 7 This is exactly the utility achieved by the bundle which would be returned in a demand query with the same prices.",
                "This notion relates to the Indirect-utility function studied in the Microeconomic literature (see, e.g., [27]). 8 Note that when all the prices are 1, the <br>bidder</br> actually reports the bundle with the highest per-item price.",
                "We found this type of query useful, for example, in the design of the approximation algorithm described in Figure 5 in Section 4.2. obtained using any polynomial amount of communication.",
                "A computational bound with the same value applies even for the case of single-minded bidders, but under the assumption of NP = ZPP [39].",
                "As noted in [32], the computationallyefficient greedy algorithm of [26] can be adapted to become a polynomial-time iterative auction that achieves a nearly matching approximation factor of min(n, O( √ m)).",
                "This iterative auction may be implemented with bundle-price demand queries but, as far as we see, not as one with item prices.",
                "Since in a single bundle-price demand query an exponential number of prices can be presented, this algorithm can have an exponential communication cost.",
                "In Section 4.2, we describe a different item-price auction that achieves the same approximation factor with a polynomial number of queries (and thus with a polynomial communication).",
                "Theorem: There exists a computationally-efficient iterative auction with item-price demand queries that finds an allocation that approximates the optimal welfare between arbitrary valuations to within a factor of min(n, O( √ m)).",
                "One may then attempt obtaining such an approximation factor using iterative auctions that use only the weaker value queries.",
                "However, we show that this is impossible: Theorem: Any iterative auction that uses a polynomial (in n and m) number of value queries can not achieve an approximation factor that is better than O( m log m ).9 Note however that auctions with only value queries are not completely trivial in power: the bundling auctions of Holzman et al. [19] can easily be implemented by a polynomial number of value queries and can achieve an approximation factor of O( m√ log m ) by using O(log m) equi-sized bundles.",
                "We do not know how to close the (tiny) gap between this upper bound and our lower bound.",
                "Representing bundle-prices We then deal with a critical issue with bundle-price auctions that was side-stepped by our model, as well as by all previous works that used bundle-price auctions: how are 9 This was also proven independently by Shahar Dobzinski and Michael Schapira. 32 the bundle prices represented?",
                "For item-price auctions this is not an issue since a query needs only to specify a small number, m, of prices.",
                "In bundle-price auctions that situation is more difficult since there are exponentially many bundles that require pricing.",
                "Our basic model (like all previous work that used bundle prices, e.g., [37, 34, 3]), ignores this issue, and only requires that the prices be determined, somehow, by the protocol.",
                "A finer model would fix a specific language for denoting bundle prices, force the protocol to represent the bundle-prices in this language, and require that the representations of the bundle-prices also be polynomial.",
                "What could such a language for denoting prices for all bundles look like?",
                "First note that specifying a price for each bundle is equivalent to specifying a valuation.",
                "Second, as noted in [31], most of the proposed bidding languages are really just languages for representing valuations, i.e., a syntactic representation of valuations - thus we could use any of them.",
                "This point of view opens up the general issue of which language should be used in bundle-price auctions and what are the implications of this choice.",
                "Here we initiate this line of investigation.",
                "We consider bundle-price auctions where the prices must be given as a XOR-bid, i.e., the protocol must explicitly indicate the price of every bundle whose value is different than that of all of its proper subsets.",
                "Note that all bundle-price auctions that do not explicitly specify a bidding language must implicitly use this language or a weaker one, since without a specific language one would need to list prices for all bundles, perhaps except for trivial ones (those with value 0, or more generally, those with a value that is determined by one of their proper subsets.)",
                "We show that once the representation length of bundle prices is taken into account (using the XOR-language), bundle-price auctions are no more strictly stronger than item-price auctions.",
                "Define the cost of an iterative auction as the total length of the queries and answers used throughout the auction (in the worst case).",
                "Theorem: For some class of valuations, bundle price auctions that use the XOR-language require an exponential cost for finding the optimal allocation.",
                "In contrast, item-price auctions can find the optimal allocation for this class within polynomial cost.10 This put doubts on the applicability of bundle-price auctions like [3, 37], and it may justify the use of hybrid pricing methods such as Ausubel, Cramton and Milgroms Clock-Proxy auction ([10]).",
                "Demand queries and linear programs The winner determination problem in combinatorial auctions may be formulated as an integer program.",
                "In many cases solving the linear-program relaxation of this integer program is useful: for some restricted classes of valuations it finds the optimum of the integer program (e.g., substitute valuations [22, 17]) or helps approximating the optimum (e.g., by randomized rounding [13, 14]).",
                "However, the linear program has an exponential number of variables.",
                "Nisan and Segal [32] observed the surprising fact that despite the ex10 Our proof relies on the sophisticated known lower bounds for constant depth circuits.",
                "We were not able to find an elementary proof. ponential number of variables, this linear program may be solved within polynomial communication.",
                "The basic idea is to solve the dual program using the Ellipsoid method (see, e.g., [20]).",
                "The dual program has a polynomial number of variables, but an exponential number of constraints.",
                "The Ellipsoid algorithm runs in polynomial time even on such programs, provided that a separation oracle is given for the set of constraints.",
                "Surprisingly, such a separation oracle can be implemented using a single demand query (with item prices) to each of the bidders.",
                "The treatment of [32] was somewhat ad-hoc to the problem at hand (the case of substitute valuations).",
                "Here we give a somewhat more general form of this important observation.",
                "Let us call the following class of linear programs generalized-winner-determination-relaxation (GWDR) LPs: Maximize X i∈N,S⊆M wi xi,S vi(S) s.t.",
                "X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M The case where wi = 1, di = 1, qj = 1 (for every i, j) is the usual linear relaxation of the winner determination problem.",
                "More generally, wi may be viewed as the weight given to <br>bidder</br> is welfare, qj may be viewed as the quantity of units of good j, and di may be viewed as duplicity of the number of bidders of type i. Theorem: Any GWDR linear program may be solved in polynomial time (in n, m, and the number of bits of precision t) using only demand queries with item prices.11 2.2 Ascending Auctions Ascending item-price auctions: It is well known that the item-price ascending auctions of Kelso and Crawford [22] and its variants [12, 16] find the optimal allocation as long as all players valuations have the substitutes property.",
                "The obvious question is whether the optimal allocation can be found for a larger class of valuations.",
                "Our main result here is a strong negative result: Theorem: There is a 2-item 2-player problem where no ascending item-price auction can find the optimal allocation.",
                "This is in contrast to both the power of bundle-price ascending auctions and to the power of general item-price demand queries (see above), both of which can always find the optimal allocation and in fact even provide full preference elicitation.",
                "The same proof proves a similar impossibility result for other types of auctions (e.g., descending auctions, non-anonymous auctions).",
                "More extension of this result: • Eliciting some classes of valuations requires an exponential number of ascending item-price trajectories. 11 The produced optimal solution will have polynomial support and thus can be listed fully. 33 • At least k − 1 ascending item-price trajectories are needed to elicit XOR formulae with k terms.",
                "This result is in some sense tight, since we show that any k-term XOR formula can be fully elicited by k−1 nondeterministic (i.e., when some exogenous teacher instructs the auctioneer on how to increase the prices) ascending auctions.12 We also show that item-price ascending auctions and iterative auctions that are limited to a polynomial number of queries (of any kind, not necessarily ascending) are incomparable in their power: ascending auctions, with small enough increments, can elicit the preferences in cases where any polynomial number of queries cannot.",
                "Motivated by several recent papers that studied the relation between eliciting and fully-eliciting the preferences in combinatorial auctions (e.g., [7, 24]), we explore the difference between these problems in the context of ascending auctions.",
                "We show that although a single ascending auction can determine the optimal allocation among any number of bidders with substitutes valuations, it cannot fully-elicit such a valuation even for a single <br>bidder</br>.",
                "While it was shown in [25] that the set of substitutes valuations has measure zero in the space of general valuations, its dimension is not known, and in particular it is still open whether a polynomial amount of information suffices to describe a substitutes valuation.",
                "While our result may be a small step in that direction (a polynomial full elicitation may still be possible with other communication protocols), we note that our impossibility result also holds for valuations in the class OXS defined by [25], valuations that we are able to show have a compact representation.",
                "We also give several results separating the power of different models for ascending combinatorial auctions that use item-prices: we prove, not surprisingly, that adaptive ascending auctions are more powerful than oblivious ascending auctions and that non-deterministic ascending auctions are more powerful than deterministic ascending auctions.",
                "We also compare different kinds of non-anonymous auctions (e.g., simultaneous or sequential), and observe that anonymous bundle-price auctions and non-anonymous item-price auctions are incomparable in their power.",
                "Finally, motivated by Dutch auctions, we consider descending auctions, and how they compare to ascending ones; we show classes of valuations that can be elicited by ascending item-price auctions but not by descending item-price auctions, and vice versa.",
                "Ascending bundle-price auctions: All known ascending bundle-price auctions that are able to find the optimal allocation between general valuations (with free disposal) use non-anonymous prices.",
                "Anonymous ascending-price auctions (e.g., [42, 21, 37]) are only known to be able to find the optimal allocation among superadditive valuations or few other simple classes ([36]).",
                "We show that this is no mistake: Theorem: No ascending auction with anonymous prices can find the optimal allocation between general valuations. 12 Non-deterministic computation is widely used in CS and also in economics (e.g, a Walrasian equilibrium or [38]).",
                "In some settings, deterministic and non-deterministic models have equal power (e.g., computation with finite automata).",
                "This bound is regardless of the running time, and it also holds for descending auctions and non-deterministic auctions.",
                "We strengthen this result significantly by showing that anonymous ascending auctions cannot produce a better than O( √ m) approximation - the approximation ratio that can be achieved with a polynomial number of queries ([26, 32]) and, as mentioned, with a polynomial number of item-price demand queries.",
                "The same lower bound clearly holds for anonymous item-price ascending auctions since such auctions can be simulated by anonymous bundle-price ascending auctions.",
                "We currently do not have any lower bound on the approximation achievable by non-anonymous item-price ascending auctions.",
                "Finally, we study the performance of the existing computationally-efficient ascending auctions.",
                "These protocols ([37, 3]) require exponential time in the worst case, and this is unavoidable as shown by [32].",
                "However, we also observe that these auctions, as well as the whole class of similar ascending bundle-price auctions, require an exponential time even for simple additive valuations.",
                "This is avoidable and indeed the ascending item-price auctions of [22] can find the optimal allocation for these simple valuations with polynomial communication. 3.",
                "THE MODEL 3.1 Discrete Auctions for Continuous Values Our model aims to capture iterative auctions that operate on real-valued valuations.",
                "There is a slight technical difficulty here in bridging the gap between the discrete nature of an iterative auction, and the continuous nature of the valuations.",
                "This is exactly the same problem as in modeling a simple English auction.",
                "There are three standard formal ways to model it: 1.",
                "Model the auction as a continuous process and study its trajectory in time.",
                "For example, the so-called Japanese auction is basically a continuous model of an English model.13 2.",
                "Model the auction as discrete and the valuations as continuously valued.",
                "In this case we introduce a parameter and usually require the auction to produce results that are -close to optimal. 3.",
                "Model the valuations as discrete.",
                "In this case we will assume that all valuations are integer multiples of some small fixed quantity δ, e.g., 1 penny.",
                "All communication in this case is then naturally finite.",
                "In this paper we use the latter formulation and assume that all values are multiples of some δ.",
                "Thus, in some parts of the paper we assume without loss of generality that δ = 1, hence all valuations are integral.",
                "Almost all (if not all) of our results can be translated to the other two models with little effort. 3.2 Valuations A single auctioneer is selling m indivisible non-homogeneous items in a single auction, and let M be the set of these 13 Another similar model is the moving knives model in the cake-cutting literature. 34 items and N be the set of bidders.",
                "Each one of the n bidders in the auction has a valuation function vi : 2m → {0, δ, 2δ, ..., L}, where for every bundle of items S ⊆ M, vi(S) denotes the value of <br>bidder</br> i for the bundle S and is a multiple of δ in the range 0...L. We will sometimes denote the number of bits needed to represent such values in the range 0...L by t = log L. We assume free disposal, i.e., S ⊆ T implies vi(S) ≤ vi(T) and that vi(∅) = 0 for all bidders.",
                "We will mention the following classes of valuations: • A valuation is called sub-modular if for all sets of items A and B we have that v(A ∪ B) + v(A ∩ B) ≤ v(A) + v(B). • A valuation is called super-additive if for all disjoint sets of items A and B we have that v(A∪B) ≥ v(A)+ v(B). • A valuation is called a k-bundle XOR if it can be represented as a XOR combination of at most k atomic bids [30], i.e., if there are at most k bundles Si and prices pi such that for all S, v(S) = maxi|S⊇Si pi.",
                "Such valuations will be denoted by v = (S1 : p1) ⊕ (S2 : p2) ⊕ . . . ⊕ (Sk : pk).14 3.3 Iterative Auctions The auctioneer sets up a protocol (equivalently an algorithm), where at each stage of the protocol some information q - termed the query - is sent to some <br>bidder</br> i, and then <br>bidder</br> i replies with some reply that depends on the query as well as on his own valuation.",
                "In this paper, we assume that we have complete control over the bidders behavior, and thus the protocol also defines a reply function ri(q, vi) that specifies <br>bidder</br> is reply to query q.",
                "The protocol may be adaptive: the query value as well as the queried <br>bidder</br> may depend on the replies received for past queries.",
                "At the end of the protocol, an allocation S1...Sn must be declared, where Si ∩ Sj = ∅ for i = j.",
                "We say that the auction finds an optimal allocation if it finds the allocation that maximizes the social welfareP i vi(Si).",
                "We say that it finds a c-approximation if P i vi(Si) ≥ P i vi(Ti)/c where T1...Tn is an optimal allocation.",
                "The running time of the auction on a given instance of the bidders valuations is the total number of queries made on this instance.",
                "The running time of a protocol is the worst case cost over all instances.",
                "Note that we impose no computational limitations on the protocol or on the players.15 This of course only strengthens our hardness results.",
                "Yet, our positive results will not use this power and will be efficient also in the usual computational sense.",
                "Our goal will be to design computationally-efficient protocols.",
                "We will deem a protocol computationally-efficient if its cost is polynomial in the relevant parameters: the number of bidders n, the number of items m, and t = log L, where L is the largest possible value of a bundle.",
                "However, when we discuss ascending-price auctions and their variants, a computationally-efficient protocol will be required to be 14 For example, v = (abcd : 5) ⊕ (ab : 3) ⊕ (c : 4) denotes the XOR valuation with the terms abcd, ab, c and prices 5, 3, 4 respectively.",
                "For this valuation, v(abcd) = 5, v(abd) = 3, v(abc) = 4. 15 The running time really measures communication costs and not computational running time. pseudo-polynomial, i.e., it should ask a number of queries which is polynomial in m, n and L δ .",
                "This is because that ascending auctions can usually not achieve such running times (consider even the English auction on a single item).16 Note that all of our results give concrete bounds, where the dependence on the parameters is given explicitly; we use the standard big-Oh notation just as a shorthand.",
                "We say than an auction elicits some class V of valuations, if it determines the optimal allocation for any profile of valuations drawn from V ; We say that an auction fully elicits some class of valuations V , if it can fully learn any single valuation v ∈ V (i.e., learn v(S) for every S). 3.4 Demand Queries and Ascending Auctions Most of the paper will be concerned with a common special case of iterative auctions that we term demand auctions.",
                "In such auctions, the queries that are sent to bidders are demand queries: the query specifies a price p(S) ∈ + for each bundle S. The reply of <br>bidder</br> i is simply the set most desired - demanded - under these prices.",
                "Formally, a set S that maximizes vi(S) − p(S).",
                "It may happen that more than one set S maximizes this value.",
                "In which case, ties are broken according to some fixed tie-breaking rule, e.g., the lexicographically first such set is returned.",
                "All of our results hold for any fixed tie-breaking rule.",
                "Ascending auctions are iterative auctions with non-decreasing prices: Definition 1.",
                "In an ascending auction, the prices in the queries to the same <br>bidder</br> can only increase in time.",
                "Formally, let p be a query made for <br>bidder</br> i, and q be a query made for <br>bidder</br> i at a later stage in the protocol.",
                "Then for all sets S, q(S) ≥ p(S).",
                "A similar variant, which we also study and that is also common in real life, is descending auctions, in which prices can only decrease in time.",
                "Note that the term ascending auction refers to an auction with a single ascending trajectory of prices.",
                "It may be useful to define multi-trajectory ascending auctions, in which the prices maybe reset to zero a number of times (see, e.g., [4]).",
                "We consider two main restrictions on the types of allowed demand queries: Definition 2.",
                "Item Prices: The prices in each query are given by prices pj for each item j.",
                "The price of a set S is additive: p(S) = P j∈S pj.",
                "Definition 3.",
                "Anonymous prices: The prices seen by the bidders at any stage in the auction are the same, i.e. whenever a query is made to some <br>bidder</br>, the same query is also made to all other bidders (with the prices unchanged).",
                "In auctions with non-anonymous (discriminatory) prices, each <br>bidder</br> i has personalized prices denoted by pi (S).17 In this paper, all auctions are anonymous unless otherwise specified.",
                "Note that even though in our model valuations are integral (or multiples of some δ), we allow the demand query to 16 Most of the auctions we present may be adapted to run in time polynomial in log L, using a binary-search-like procedure, losing their ascending nature. 17 Note that a non-anonymous auction can clearly be simulated by n parallel anonymous auctions. 35 use arbitrary real numbers in +.",
                "That is, we assume that the increment we use in the ascending auctions may be significantly smaller than δ.",
                "All our hardness results hold for any , even for continuous price increments.",
                "A practical issue here is how will the query be specified: in the general case, an exponential number of prices needs to be sent in a single query.",
                "Formally, this is not a problem as the model does not limit the length of queries in any way - the protocol must simply define what the prices are in terms of the replies received for previous queries.",
                "We look into this issue further in Section 4.3. 4.",
                "THE POWER OF DEMAND QUERIES In this section, we study the power of iterative auctions that use demand queries (not necessarily ascending).",
                "We start by comapring demand queries to other types of queries.",
                "Then, we discuss how well can one approximate the optimal welfare using a polynomial number of demand queries.",
                "We also initiate the study of the representation of bundle-price demand queries, and finally, we show how demand queries help solving the linear-programming relaxation of combinatorial auctions in polynomial time. 4.1 The Power of Different Types of Queries In this section we compare the power of the various types of queries defined in Section 2.",
                "We will present computationally -efficient simulations of these query types using item-price demand queries.",
                "In Section 5.1 we show that these simulations can also be done using item-price ascending auctions.",
                "Lemma 4.1.",
                "A value query can be simulated by m marginalvalue queries.",
                "A marginal-value query can be simulated by two value queries.",
                "Lemma 4.2.",
                "A value query can be simulated by mt demand queries (where t = log L is the number of bits needed to represent a single bundle value).18 As a direct corollary we get that demand auctions can always fully elicit the bidders valuations by simulating all possible 2m − 1 queries and thus elicit enough information for determining the optimal allocation.",
                "Note, however, that this elicitation may be computationally inefficient.",
                "The next lemma shows that demand queries can be exponentially more powerful than value queries.",
                "Lemma 4.3.",
                "An exponential number of value queries may be required for simulating a single demand query.",
                "Indirect utility queries are, however, equivalent in power to demand queries: Lemma 4.4.",
                "An indirect-utility query can be simulated by mt + 1 demand queries.",
                "A demand query can be simulated by m + 1 indirect-utility queries.",
                "Demand queries can also simulate relative-demand queries:19 18 Note that t bundle-price demand queries can easily simulate a value query by setting the prices of all the bundles except S (the bundle with the unknown value) to be L, and performing a binary search on the price of S. 19 Note: although in our model values are integral (our multiples of δ), we allow the query prices to be arbitrary real numV MV D IU RD V 1 2 exp exp exp MV m 1 exp exp exp D mt poly 1 mt+1 poly IU 1 2 m+1 1 poly RD - - - - 1 Figure 4: Each entry in the table specifies how many queries of this row are needed to simulate a query from the relevant column.",
                "Abbreviations: V (value query), MV (marginal-value query), D (demand query), IU (Indirect-utility query), RD (relative demand query).",
                "Lemma 4.5.",
                "Relative-demand queries can be simulated by a polynomial number of demand queries.",
                "According to our definition of relative-demand queries, they clearly cannot simulate even value queries.",
                "Figure 4 summarizes the relations between these query types. 4.2 Approximating the Social Welfare with Value and Demand Queries We know from [32] that iterative combinatorial auctions that only use a polynomial number of queries can not find an optimal allocation among general valuations and in fact can not even approximate it to within a factor better than min{n, m1/2− }.",
                "In this section we ask how well can this approximation be done using demand queries with item prices, or using the weaker value queries.",
                "We show that, using demand queries, the lower bound can be matched, while value queries can only do much worse.",
                "Figure 5 describes a polynomial-time algorithm that achieves a min(n, O( √ m)) approximation ratio.",
                "This algorithm greedily picks the bundles that maximize the bidders per-item value (using relative-demand queries, see Section 4.1).",
                "As a final step, it allocates all the items to a single <br>bidder</br> if it improves the social welfare (this can be checked using value queries).",
                "Since both value queries and relative-demand queries can be simulated by a polynomial number of demand queries with item prices (Lemmas 4.2 and 4.5), this algorithm can be implemented by a polynomial number of demand queries with item prices.20 Theorem 4.6.",
                "The auction described in Figure 5 can be implemented by a polynomial number of demand queries and achieves a min{n, 4 √ m}-approximation for the social welfare.",
                "We now ask how well can the optimal welfare be approximated by a polynomial number of value queries.",
                "First we note that value queries are not completely powerless: In [19] it is shown that if the m items are split into k fixed bundles of size m/k each, and these fixed bundles are auctioned as though each was indivisible, then the social welfare bers, thus we may have bundles with arbitrarily close relative demands.",
                "In this sense the simulation above is only up to any given (and the number of queries is O(log L+log 1 )).",
                "When the relative-demand query prices are given as rational numbers, exact simulation is implied when log is linear in the input length. 20 In the full paper [8], we observe that this algorithm can be implemented by two descending item-price auctions (where we allow removing items along the auction). 36 generated by such an auction is at least m√ k -approximation of that possible in the original auction.",
                "Notice that such an auction can be implemented by 2k − 1 value queries to each <br>bidder</br> - querying the value of each bundle of the fixed bundles.",
                "Thus, if we choose k = log m bundles we get an m√ log m -approximation while still using a polynomial number of queries.",
                "The following lemma shows that not much more is possible using value queries: Lemma 4.7.",
                "Any iterative auction that uses only value queries and distinguishes between k-tuples of 0/1 valuations where the optimal allocation has value 1, and those where the optimal allocation has value k requires at least 2 m k queries.",
                "Proof.",
                "Consider the following family of valuations: for every S, such that |S| > m/2, v(S) = 1, and there exists a single set T, such that for |S| ≤ m/2, v(S) = 1 iff T ⊆ S and v(S) = 0 otherwise.",
                "Now look at the behavior of the protocol when all valuations vi have T = {1...m}.",
                "Clearly in this case the value of the best allocation is 1 since no set of size m 2 or lower has non-zero value for any player.",
                "Fix the sequence of queries and answers received on this k-tuple of valuations.",
                "Now consider the k-tuple of valuations chosen at random as follows: a partition of the m items into k sets T1...Tk each of size m k each is chosen uniformly at random among all such partitions.",
                "Now consider the k-tuple of valuations from our family that correspond to this partition - clearly Ti can be allocated to i, for each i, getting a total value of k. Now look at the protocol when running on these valuations and compare its behavior to the original case.",
                "Note that the answer to a query S to player i differs between the case of Ti and the original case of T = {1...m} only if |S| ≤ m 2 and Ti ⊆ S. Since Ti is distributed uniformly among all sets of size exactly m k , we have that for any fixed query S to player i, where |S| ≤ m 2 , Pr[Ti ⊆ S] ≤ „ |S| m «|Ti| ≤ 2− m k Using the union-bound, if the original sequence of queries was of length less than 2 m k , then with positive probability none of the queries in the sequence would receive a different answer than for the original input tuple.",
                "This is forbidden since the protocol must distinguish between this case and the original case - which cannot happen if all queries receive the same answer.",
                "Hence there must have been at least 2 m k queries for the original tuple of valuations.",
                "We conclude that a polynomial time protocol that uses only value queries cannot obtain a better than O( m log m ) approximation of the welfare: Theorem 4.8.",
                "An iterative auction that uses a polynomial number of value queries cannot achieve better than O( m log m )-approximation for the social welfare.",
                "Proof.",
                "Immediate from Lemma 4.7: achieving any approximation ratio k which is asymptotically greater than m log m needs an exponential number of value queries.",
                "An Approximation Algorithm: Initialization: Let T ← M be the current items for sale.",
                "Let K ← N be the currently participating bidders.",
                "Let S∗ 1 ← ∅, ..., S∗ n ← ∅ be the provisional allocation.",
                "Repeat until T = ∅ or K = ∅: Ask each <br>bidder</br> i in K for the bundle Si that maximizes her per-item value, i.e., Si ∈ argmaxS⊆T vi(S) |S| .",
                "Let i be the <br>bidder</br> with the maximal per-item value, i.e., i ∈ argmaxi∈K vi(Si) |Si| .",
                "Set: s∗ i = si, K = K \\ i, M = M \\ Si Finally: Ask the bidders for their values vi(M) for the grand bundle.",
                "If allocating all the items to some <br>bidder</br> i improves the social welfare achieved so far (i.e., ∃i ∈ N such that vi(M) > P i∈N vi(S∗ i )), then allocate all items to this <br>bidder</br> i.",
                "Figure 5: This algorithm achieves a min{n, 4 √ m}approximation for the social welfare, which is asymptotically the best worst-case approximation possible with polynomial communication.",
                "This algorithm can be implemented with a polynomial number of demand queries. 4.3 The Representation of Bundle Prices In this section we explicitly fix the language in which bundle prices are presented to the bidders in bundle-price auctions.",
                "This language requires the algorithm to explicitly list the price of every bundle with a non-trivial price.",
                "Trivial in this context is a price that is equal to that of one of its proper subsets (which was listed explicitly).",
                "This representation is equivalent to the XOR-language for expressing valuations.",
                "Formally, each query q is given by an expression: q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl).",
                "In this representation, the price demanded for every set S is simply p(S) = max{k=1...l|Sk⊆S}pk.",
                "Definition 4.",
                "The length of the query q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl) is l. The cost of an algorithm is the sum of the lengths of the queries asked during the operation of the algorithm on the worst case input.",
                "Note that under this definition, bundle-price auctions are not necessarily stronger than item-price auctions.",
                "An itemprice query that prices each item for 1, is translated to an exponentially long bundle-price query that needs to specify the price |S| for each bundle S. But perhaps bundle-price auctions can still find optimal allocations whenever itemprice auction can, without directly simulating such queries?",
                "We show that this is not the case: indeed, when the representation length is taken into account, bundle price auctions are sometimes seriously inferior to item price auctions.",
                "Consider the following family of valuations: Each item is valued at 3, except that for some single set S, its value is a bit more: 3|S| + b, where b ∈ {0, 1, 2}.",
                "Note that an item price auction can easily find the optimal allocation between any two such valuations: Set the prices of each item to 3+ ; if the demand sets of the two players are both empty, then b = 0 for both valuations, and an arbitrary allocation is fine.",
                "If one of them is empty and the other non-empty, allocate the non-empty demand set to its <br>bidder</br>, and the rest to the other.",
                "If both demand sets are non-empty then, unless they form an exact partition, we need to see which b is larger, which we can do by increasing the price of a single item in each demand set. 37 We will show that any bundle-price auction that uses only the XOR-language to describe bundle prices requires an exponential cost (which includes the sum of all description lengths of prices) to find an optimal allocation between any two such valuations.",
                "Lemma 4.9.",
                "Every bundle-price auction that uses XORexpressions to denote bundle prices requires 2Ω( √ m) cost in order to find the optimal allocation among two valuations from the above family.",
                "The complication in the proof stems from the fact that using XOR-expressions, the length of the price description depends on the number of bundles whose price is strictly larger than each of their subsets - this may be significantly smaller than the number of bundles that have a non-zero price. (The proof becomes easy if we require the protocol to explicitly name every bundle with non-zero price.)",
                "We do not know of any elementary proof for this lemma (although we believe that one can be found).",
                "Instead we reduce the problem to a well known lower bound in boolean circuit complexity [18] stating that boolean circuits of depth 3 that compute the majority function on m variables require 2Ω( √ m) size. 4.4 Demand Queries and Linear Programming Consider the following linear-programming relaxation for the generalized winner-determination problem in combinatorial auctions (the primal program): Maximize X i∈N,S⊆M wi xi,S vi(S) s.t.",
                "X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M Note that the primal program has an exponential number of variables.",
                "Yet, we will be able to solve it in polynomial time using demand queries to the bidders.",
                "The solution will have a polynomial size support (non-zero values for xi,S), and thus we will be able to describe it in polynomial time.",
                "Here is its dual: Minimize X j∈M qjpj + X i∈N diui s.t. ui + X j∈S pj ≥ wivi(S) ∀i ∈ N, S ⊆ M pi ≥ 0, uj ≥ 0 ∀i ∈ M, j ∈ N Notice that the dual problem has exactly n + m variables but an exponential number of constraints.",
                "Thus, the dual can be solved using the Ellipsoid method in polynomial time - if a separation oracle can be implemented in polynomial time.",
                "Recall that a separation oracle, when given a possible solution, either confirms that it is a feasible solution, or responds with a constraint that is violated by the possible solution.",
                "We construct a separation oracle for solving the dual program, using a single demand query to each of the bidders.",
                "Consider a possible solution (u, p) for the dual program.",
                "We can re-write the constraints of the dual program as: ui/wi ≥ vi(S) − X j∈S pj/wi Now a demand query to <br>bidder</br> i with prices pj/wi reveals exactly the set S that maximizes the RHS of the previous inequality.",
                "Thus, in order to check whether (u, p) is feasible it suffices to (1) query each <br>bidder</br> i for his demand Di under the prices pj/wi; (2) check only the n constraints ui + P j∈Di pj ≥ wivi(Di) (where vi(Di) can be simulated using a polynomial sequence of demand queries as shown in Lemma 4.2).",
                "If none of these is violated then we are assured that (u, p) is feasible; otherwise we get a violated constraint.",
                "What is left to be shown is how the primal program can be solved. (Recall that the primal program has an exponential number of variables.)",
                "Since the Ellipsoid algorithm runs in polynomial time, it encounters only a polynomial number of constraints during its operation.",
                "Clearly, if all other constraints were removed from the dual program, it would still have the same solution (adding constraints can only decrease the space of feasible solutions).",
                "Now take the reduced dual where only the constraints encountered exist, and look at its dual.",
                "It will have the same solution as the original dual and hence of the original primal.",
                "However, look at the form of this dual of the reduced dual.",
                "It is just a version of the primal program with a polynomial number of variables - those corresponding to constraints that remained in the reduced dual.",
                "Thus, it can be solved in polynomial time, and this solution clearly solves the original primal program, setting all other variables to zero. 5.",
                "ITEM-PRICE ASCENDING AUCTIONS In this section we characterize the power of ascending item-price auctions.",
                "We first show that this power is not trivial: such auctions can in general elicit an exponential amount of information.",
                "On the other hand, we show that the optimal allocation cannot always be determined by a single ascending auction, and in some cases, nor by an exponential number of ascending-price trajectories.",
                "Finally, we separate the power of different models of ascending auctions. 5.1 The Power of Item-Price Ascending Auctions We first show that if small enough increments are allowed, a single ascending trajectory of item-prices can elicit preferences that cannot be elicited with polynomial communication.",
                "As mentioned, all our hardness results hold for any increment, even infinitesimal.",
                "Theorem 5.1.",
                "Some classes of valuations can be elicited by item-price ascending auctions, but cannot be elicited by a polynomial number of queries of any kind.",
                "Proof. (sketch) Consider two bidders with v(S) = 1 if |S| > n 2 , v(S) = 0 if |S| < n 2 and every S such that |S| = n 2 has an unknown value from {0, 1}.",
                "Due to [32], determining the optimal allocation here requires exponential communication in the worst case.",
                "Nevertheless, we show (see [9]) that an item-price ascending auction can do it, as long as it can use exponentially small increments.",
                "We now describe another positive result for the power of item-price ascending auctions.",
                "In section 4.1, we showed 38 v(ab) v(a) v(b) <br>bidder</br> 1 2 α ∈ (0, 1) β ∈ (0, 1) <br>bidder</br> 2 2 2 2 Figure 6: No item-price ascending auctions can determine the optimal allocation for this class of valuations. that a value query can be simulated with a (truly) polynomial number of item-price demand queries.",
                "Here, we show that every value query can be simulated by a (pseudo) polynomial number of ascending item-price demand queries. (In the next subsection, we show that we cannot always simulate even a pair of value queries using a single item-price ascending auction.)",
                "In the full paper (part II,[9]), we show that we can simulate other types of queries using item-price ascending auctions.",
                "Proposition 5.2.",
                "A value query can be simulated by an item-price ascending auction.",
                "This simulation requires a polynomial number of queries.",
                "Actually, the proof for Proposition 5.2 proves a stronger useful result regarding the information elicited by iterative auctions.",
                "It says that in any iterative auction in which the changes of prices are small enough in each stage (pseudocontinuous auctions), the value of all bundles demanded during the auction can be computed.",
                "The basic idea is that when the <br>bidder</br> moves from demanding some bundle Ti to demanding another bundle Ti+1, there is a point in which she is indifferent between these two bundles.",
                "Thus, knowing the value of some demanded bundle (e.g., the empty set) enables computing the values of all other demanded bundles.",
                "We say that an auction is pseudo-continuous, if it only uses demand queries, and in each step, the price of at most one item is changed by (for some ∈ (0, δ]) with respect to the previous query.",
                "Proposition 5.3.",
                "Consider any pseudo-continuous auction (not necessarily ascending), in which <br>bidder</br> i demands the empty set at least once along the auction.",
                "Then, the value of every bundle demanded by <br>bidder</br> i throughout the auction can be calculated at the end of the auction. 5.2 Limitations of Item-Price Ascending Auctions Although we observed that demand queries can solve any combinatorial auction problem, when the queries are restricted to be ascending, some classes of valuations cannot be elicited nor fully-elicited.",
                "An example for such class of valuations is given in Figure 6.",
                "Theorem 5.4.",
                "There are classes of valuations that cannot be elicited nor fully elicited by any item-price ascending auction.",
                "Proof.",
                "Let <br>bidder</br> 1 have the valuation described in the first row of Figure 6, where α and β are unknown values in (0, 1).",
                "First, we prove that this class cannot be fully elicited by a single ascending auction.",
                "Specifically, an ascending auction cannot reveal the values of both α and β.",
                "As long as pa and pb are both below 1, the <br>bidder</br> will always demand the whole bundle ab: her utility from ab is strictly greater than the utility from either a or b separately.",
                "For example, we show that u1(ab) > u1(a): u1(ab) = 2 − (pa + pb) = 1 − pa + 1 − pb > vA(a) − pa + 1 − pb > u1(a) Thus, in order to gain any information about α or β, the price of one of the items should become at least 1, w.l.o.g. pa ≥ 1.",
                "But then, the bundle a will not be demanded by <br>bidder</br> 1 throughout the auction, thus no information at all will be gained about α.",
                "Now, assume that <br>bidder</br> 2 is known to have the valuation described in the second row of Figure 6.",
                "The optimal allocation depends on whether α is greater than β (in <br>bidder</br> 1s valuation), and we proved that an ascending auction cannot determine this.",
                "The proof of the theorem above shows that for an unknown value to be revealed, the price of one item should be greater than 1, and the other price should be smaller than 1.",
                "Therefore, in a price-monotonic trajectory of prices, only one of these values can be revealed.",
                "An immediate conclusion is that this impossibility result also holds for item-price descending auctions.",
                "Since no such trajectory exists, then the same conclusion even holds for non-deterministic itemprice auctions (in which exogenous data tells us how to increase the prices).",
                "Also note that since the hardness stems from the impossibility to fully-elicit a valuation of a single <br>bidder</br>, this result also holds for non-anonymous ascending item-price auctions. 5.3 Limitations of Multi-Trajectory Ascending Auctions According to Theorem 5.4, no ascending item-price auction can always elicit the preferences (we prove a similar result for bundle prices in section 6).",
                "But can two ascending trajectories do the job?",
                "Or a polynomial number of ascending trajectories?",
                "We give negative answers for such suggestions.",
                "We define a k-trajectory ascending auction as a demandquery iterative auction in which the demand queries can be partitioned to k sets of queries, where the prices published in each set only increase in time.",
                "Note that we use a general definition; It allows the trajectories to run in parallel or sequentially, and to use information elicited in some trajectories for determining the future queries in other trajectories.",
                "The power of multiple-trajectory auctions can be demonstrated by the negative result of Gul and Stacchetti [17] who showed that even for an auction among substitutes valuations, an anonymous ascending item-price auction cannot compute VCG prices for all players.21 Ausubel [4] overcame this impossibility result and designed auctions that do compute VCG prices by organizing the auction as a sequence of n + 1 ascending auctions.",
                "Here, we prove that one cannot elicit XOR valuations with k terms by less than k − 1 ascending trajectories.",
                "On the other hand, we show that an XOR formula can be fully elicited by k−1 non-deterministic ascending auctions (or by k−1 deterministic ascending auctions if the auctioneer knows the atomic bundles).22 21 A recent unpublished paper by Mishra and Parkes extends this result, and shows that non-anonymous prices with bundle-prices are necessary in order that an ascending auction will end up with a universal-competitive-equilibrium (that leads to VCG payments). 22 This result actually separates the power of deterministic 39 Proposition 5.5.",
                "XOR valuations with k terms cannot be elicited (or fully elicited) by any (k-2)-trajectory itemprice ascending auction, even when the atomic bundles are known to the elicitor.",
                "However, these valuations can be elicited (and fully elicited) by (k-1)-trajectory non-deterministic non-anonymous item-price ascending auctions.",
                "Moreover, an exponential number of trajectories is required for eliciting some classes of valuations: Proposition 5.6.",
                "Elicitation and full-elicitation of some classes of valuations cannot be done by any k-trajectory itemprice ascending auction, where k = o(2m ).",
                "Proof. (sketch) Consider the following class of valuations: For |S| < m 2 , v(S) = 0 and for |S| > m 2 , v(S) = 2; every bundle S of size m 2 has some unknown value in (0, 1).",
                "We show ([9]) that a single item-price ascending auction can reveal the value of at most one bundle of size n 2 , and therefore an exponential number of ascending trajectories is needed in order to elicit such valuations.",
                "We observe that the algorithm we presented in Section 4.2 can be implemented by a polynomial number of ascending auctions (each item-price demand query can be considered as a separate ascending auction), and therefore a min(n, 4 √ m)-approximation can be achieved by a polynomial number of ascending auctions.",
                "We do not currently have a better upper bound or any lower bound. 5.4 Separating the Various Models of Ascending Auctions Various models for ascending auctions have been suggested in the literature.",
                "In this section, we compare the power of the different models.",
                "As mentioned, all auctions are considered anonymous and deterministic, unless specified otherwise.",
                "Ascending vs.",
                "Descending Auctions: We begin the discussion of the relation between ascending auctions and descending auctions with an example.",
                "The algorithm by Lehmann, Lehmann and Nisan [25] can be implemented by a simple item-price descending auction (see the full paper for details [9]).",
                "This algorithm guarantees at least half of the optimal efficiency for submodular valuations.",
                "However, we are not familiar with any ascending auction that guarantees a similar fraction of the efficiency.",
                "This raises a more general question: can ascending auctions solve any combinatorialauction problem that is solvable using a descending auction (and vice versa)?",
                "We give negative answers to these questions.",
                "The idea behind the proofs is that the information that the auctioneer can get for free at the beginning of each type of auction is different.23 and non-deterministic iterative auctions: our proof shows that a non-deterministic iterative auction can elicit the kterm XOR valuations with a polynomial number of demand queries, and [7] show that this elicitation must take an exponential number of demand queries. 23 In ascending auctions, the auctioneer can reveal the most valuable bundle (besides M) before she starts raising the prices, thus she can use this information for adaptively choose the subsequent queries.",
                "In descending auctions, one can easily find the bundle with the highest average per-item price, keeping all other bundles with non-positive utilities, and use this information in the adaptive price change.",
                "Proposition 5.7.",
                "There are classes that cannot be elicited (fully elicited) by ascending item-price auctions, but can be elicited (resp. fully elicited) with a descending item-price auction.",
                "Proposition 5.8.",
                "There are classes that cannot be elicited (fully elicited) by item-price descending auctions, but can be elicited (resp. fully elicited) by item-price ascending auctions.",
                "Deterministic vs. Non-Deterministic Auctions: Nondeterministic ascending auctions can be viewed as auctions where some benevolent teacher that has complete information guides the auctioneer on how she should raise the prices.",
                "That is, preference elicitation can be done by a non-deterministic ascending auction, if there is some ascending trajectory that elicits enough information for determining the optimal allocation (and verifying that it is indeed optimal).",
                "We show that non-deterministic ascending auctions are more powerful than deterministic ascending auctions: Proposition 5.9.",
                "Some classes can be elicited (fully elicited) by an item-price non-deterministic ascending auction, but cannot be elicited (resp. fully elicited) by item-price deterministic ascending auctions.",
                "Anonymous vs. Non-Anonymous Auctions: As will be shown in Section 6, the power of anonymous and nonanonymous bundle-price ascending auctions differs significantly.",
                "Here, we show that a difference also exists for itemprice ascending auctions.",
                "Proposition 5.10.",
                "Some classes cannot be elicited by anonymous item-price ascending auctions, but can be elicited by a non-anonymous item-price ascending auction.",
                "Sequential vs.",
                "Simultaneous Auctions: A non-anonymous auction is called simultaneous if at each stage, the price of some item is raised by for every <br>bidder</br>.",
                "The auctioneer can use the information gathered until each stage, in all the personalized trajectories, to determine the next queries.",
                "A non-anonymous auction is called sequential if the auctioneer performs an auction for each <br>bidder</br> separately, in sequential order.",
                "The auctioneer can determine the next query based on the information gathered in the trajectories completed so far and on the history of the current trajectory.",
                "Proposition 5.11.",
                "There are classes that cannot be elicited by simultaneous non-anonymous item-price ascending auctions, but can be elicited by a sequential non-anonymous item-price ascending auction.",
                "Adaptive vs.",
                "Oblivious Auctions: If the auctioneer determines the queries regardless of the bidders responses (i.e., the queries are predefined) we say that the auction is oblivious.",
                "Otherwise, the auction is adaptive.",
                "We prove that an adaptive behaviour of the auctioneer may be beneficial.",
                "Proposition 5.12.",
                "There are classes that cannot be elicited (fully elicited) using oblivious item-price ascending auctions, but can be elicited (resp. fully elicited) by an adaptive item-price ascending auction. 40 5.5 Preference Elicitation vs. Full Elicitation Preference elicitation and full elicitation are closely related problems.",
                "If full elicitation is easy (e.g., in polynomial time) then clearly elicitation is also easy (by a nonanonymous auction, simply by learning all the valuations separately24 ).",
                "On the other hand, there are examples where preference elicitation is considered easy but learning is hard (typically, elicitation requires smaller amount of information; some examples can be found in [7]).",
                "The tatonnement algorithms by [22, 12, 16] end up with the optimal allocation for substitutes valuations.25 We prove that we cannot fully elicit substitutes valuations (or even their sub-class of OXS valuations defined in [25]), even for a single <br>bidder</br>, by an item-price ascending auction (although the optimal allocation can be found by an ascending auction for any number of bidders!).",
                "Theorem 5.13.",
                "Substitute valuations cannot be fully elicited by ascending item-price auctions.",
                "Moreover, they cannot be fully elicited by any m 2 ascending trajectories (m > 3).",
                "Whether substitutes valuations have a compact representation (i.e., polynomial in the number of goods) is an important open question.",
                "As a step in this direction, we show that its sub-class of OXS valuations does have a compact representation: every OXS valuation can be represented by at most m2 values.26 Lemma 5.14.",
                "Any OXS valuation can be represented by no more than m2 values. 6.",
                "BUNDLE-PRICE ASCENDING AUCTIONS All the ascending auctions in the literature that are proved to find the optimal allocation for unrestricted valuations are non-anonymous bundle-price auctions (iBundle(3) by Parkes and Ungar [37] and the Proxy Auction by Ausubel and Milgrom [3]).",
                "Yet, several anonymous ascending auctions have been suggested (e.g., AkBA [42], [21] and iBundle(2) [37]).",
                "In this section, we prove that anonymous bundle-price ascending auctions achieve poor results in the worst-case.",
                "We also show that the family of non-anonymous bundleprice ascending auctions can run exponentially slower than simple item-price ascending auctions. 6.1 Limitations of Anonymous Bundle-Price Ascending Auctions We present a class of valuations that cannot be elicited by anonymous bundle-price ascending auctions.",
                "These valuations are described in Figure 7.",
                "The basic idea: for determining some unknown value of one <br>bidder</br> we must raise 24 Note that an anonymous ascending auction cannot necessarily elicit a class that can be fully elicited by an ascending auction. 25 Substitute valuations are defined, e.g., in [16].",
                "Roughly speaking, a <br>bidder</br> with a substitute valuation will continue demand a certain item after the price of some other items was increased.",
                "For completeness, we present in the full paper [9] a proof for the efficiency of such auctions for substitutes valuations. 26 A unit-demand valuation is an XOR valuation in which all the atomic bundles are singletons.",
                "OXS valuations can be interpreted as an aggregation (OR) of any number of unit-demand bidders.",
                "Bid. 1 v1(ac) = 2 v1(bd) = 2 v1(cd) = α ∈ (0, 1) Bid. 2 v2(ab) = 2 v2(cd) = 2 v2(bd) = β ∈ (0, 1) Figure 7: Anonymous ascending bundle-price auctions cannot determine the optimal allocation for this class of valuations. a price of a bundle that should be demanded by the other <br>bidder</br> in the future.",
                "Theorem 6.1.",
                "Some classes of valuations cannot be elicited by anonymous bundle-price ascending auctions.",
                "Proof.",
                "Consider a pair of XOR valuations as described in Figure 7.",
                "For finding the optimal allocation we must know which value is greater between α and β.27 However, we cannot learn the value of both α and β by a single ascending trajectory: assume w.l.o.g. that <br>bidder</br> 1 demands cd before <br>bidder</br> 2 demands bd (no information will be elicited if none of these happens).",
                "In this case, the price for bd must be greater than 1 (otherwise, <br>bidder</br> 1 prefers bd to cd).",
                "Thus, <br>bidder</br> 2 will never demand the bundle bd, and no information will be elicited about β.",
                "The valuations described in the proof of Theorem 6.1 can be easily elicited by a non-anonymous item-price ascending auction.",
                "On the other hand, the valuations in Figure 6 can be easily elicited by an anonymous bundle-price ascending auction.",
                "We conclude that the power of these two families of ascending auctions is incomparable.",
                "We strengthen the impossibility result above by showing that anonymous bundle-price auctions cannot even achieve better than a min{O(n), O( √ m)}-approximation for the social welfare.",
                "This approximation ratio can be achieved with polynomial communication, and specifically with a polynomial number of item-price demand queries.28 Theorem 6.2.",
                "An anonymous bundle-price ascending auction cannot guarantee better than a min{ n 2 , √ m 2 } approximation for the optimal welfare.",
                "Proof. (Sketch) Assume we have n bidders and n2 items for sale, and that n is prime.",
                "We construct n2 distinct bundles with the following properties: for each <br>bidder</br>, we define a partition Si = (Si 1, ..., Si n) of the n2 items to n bundles, such that any two bundles from different partitions intersect.",
                "In the full paper, part II [9] we show an explicit construction using the properties of linear functions over finite fields.",
                "The rest of the proof is independent of the specific construction.",
                "Using these n2 bundles we construct a hard-to-elicit class.",
                "Every <br>bidder</br> has an atomic bid, in his XOR valuation, for each of these n2 bundles.",
                "A <br>bidder</br> i has a value of 2 for any bundle Si j in his partition.",
                "For all bundles in the other partitions, he has a value of either 0 or of 1 − δ, and these values are unknown to the auctioneer.",
                "Since every pair of bundles from different partitions intersect, only one <br>bidder</br> can receive a bundle with a value of 2. 27 If α > β, the optimal allocation will allocate cd to <br>bidder</br> 1 and ab to bidder 2.",
                "Otherwise, we give bd to <br>bidder</br> 2 and ac to <br>bidder</br> 1.",
                "Note that both bidders cannot gain a value of 2 in the same allocation, due to the intersections of the high-valued bundles. 28 Note that bundle-price queries may use exponential communication, thus the lower bound of [32] does not hold. 41 Non-anonymous Bundle-Price Economically-Efficient Ascending Auctions: Initialization: All prices are initialized to zero (non-anonymous bundle prices).",
                "Repeat: - Each <br>bidder</br> submits a bundle that maximizes his utility under his current personalized prices. - The auctioneer calculates a provisional allocation that maximizes his revenue under the current prices. - The prices of bundles that were demanded by losing bidders are increased by .",
                "Finally: Terminate when the provisional allocation assigns to each <br>bidder</br> the bundle he demanded.",
                "Figure 8: Auctions from this family (denoted by NBEA auctions) are known to achieve the optimal welfare.",
                "No <br>bidder</br> will demand a low-valued bundle, as long as the price of one of his high-valued bundles is below 1 (and thus gain him a utility greater than 1).",
                "Therefore, for eliciting any information about the low-valued bundles, the auctioneer should first arbitrarily choose a <br>bidder</br> (w.l.o.g <br>bidder</br> 1) and raise the prices of all the bundles (S1 1 , ..., S1 n) to be greater than 1.",
                "Since the prices cannot decrease, the other bidders will clearly never demand these bundles in future stages.",
                "An adversary may choose the values such that the low values of all the bidders for the bundles not in <br>bidder</br> 1s partition are zero (i.e., vi(S1 j ) = 0 for every i = 1 and every j), however, allocating each <br>bidder</br> a different bundle from bidder 1s partition, might achieve a welfare of n+1−(n−1)δ (bidder 1s valuation is 2, and 1 − δ for all other bidders); If these bundles were wrongly allocated, only a welfare of 2 might be achieved (2 for bidder 1s high-valued bundle, 0 for all other bidders).",
                "At this point, the auctioneer cannot have any information about the identity of the bundles with the non-zero values.",
                "Therefore, an adversary can choose the values of the bundles received by bidders 2, ..., n in the final allocation to be zero.",
                "We conclude that anonymous bundleprice auctions cannot guarantee a welfare greater than 2 for this class, where the optimal welfare can be arbitrarily close to n + 1. 6.2 Bundle Prices vs.",
                "Item Prices The core of the auctions in [37, 3] is the scheme described in Figure 8 (in the spirit of [35]) for auctions with nonanonymous bundle prices.",
                "Auctions from this scheme end up with the optimal allocation for any class of valuations.",
                "We denote this family of ascending auctions as NBEA auctions29 .",
                "NBEA auctions can elicit k-term XOR valuations by a polynomial (in k) number of steps , although the elicitation of such valuations may require an exponential number of item-price queries ([7]), and item-price ascending auctions cannot do it at all (Theorem 5.4).",
                "Nevertheless, we show that NBEA auctions (and in particular, iBundle(3) and the proxy auction) are sometimes inferior to simple item-price demand auctions.",
                "This may justify the use of hybrid auctions that use both linear and non-linear prices (e.g., the clock-proxy auction [10]).",
                "We show that auctions from this 29 Non-anonymous Bundle-price economically Efficient Ascending auctions.",
                "For completeness, we give in the full paper [9] a simple proof for the efficiency (up to an ) of auctions of this scheme . family may use an exponential number of queries even for determining the optimal allocation among two bidders with additive valuations30 , where such valuations can be elicited by a simple item-price ascending auction.",
                "We actually prove this property for a wider class of auctions we call conservative auctions.",
                "We also observe that in conservative auctions, allowing the bidders to submit all the bundles in their demand sets ensures that the auction runs a polynomial number of steps - if L is not too high (but with exponential communication, of course).",
                "An ascending auction is called conservative if it is nonanonymous, uses bundle prices initialized to zero and at every stage the auctioneer can only raise prices of bundles demanded by the bidders until this stage.",
                "In addition, each <br>bidder</br> can only receive bundles he demanded during the auction.",
                "Note that NBEA auctions are by definition conservative.",
                "Proposition 6.3.",
                "If every <br>bidder</br> demands a single bundle in each step of the auction, conservative auctions may run for an exponential number of steps even for additive valuations.",
                "If the bidders are allowed to submit all the bundles in their demand sets in each step, then conservative auctions can run in a polynomial number of steps for any profile of valuations, as long as the maximal valuation L is polynomial in m, n and 1 δ .",
                "Acknowledgments: The authors thank Moshe Babaioff, Shahar Dobzinski, Ron Lavi, Daniel Lehmann, Ahuva Mualem, David Parkes, Michael Schapira and Ilya Segal for helpful discussions.",
                "Supported by grants from the Israeli Academy of Sciences and the USAIsrael Binational Science Foundation. 7.",
                "REFERENCES [1] amazon.",
                "Web Page: http://www.amazon.com. [2] ebay.",
                "Web Page: http://www.ebay.com. [3] L. M. Ausubel and P. R. Milgrom.",
                "Ascending auctions with package bidding.",
                "Frontiers of Theoretical Economics, 1:1-42, 2002. [4] Lawrence Ausubel.",
                "An efficient dynamic auction for heterogeneous commodities, 2000.",
                "Working paper, University of Maryland. [5] Yair Bartal, Rica Gonen, and Noam Nisan.",
                "Incentive compatible multi unit combinatorial auctions.",
                "In TARK 03, 2003. [6] Alejandro Bertelsen.",
                "Substitutes valuations and m -concavity.",
                "M.Sc.",
                "Thesis, The Hebrew University of Jerusalem, 2005. [7] Avrim Blum, Jeffrey C. Jackson, Tuomas Sandholm, and Martin A. Zinkevich.",
                "Preference elicitation and query learning.",
                "Journal of Machine Learning Research, 5:649-667, 2004. [8] Liad Blumrosen and Noam Nisan.",
                "On the computational power of iterative auctions I: demand queries.",
                "Working paper, The Hebrew University of 30 Valuations are called additive if for any disjoint bundles A and B, v(A ∪ B) = v(A) + v(B).",
                "Additive valuations are both sub-additive and super-additive and are determined by the m values assigned for the singletons. 42 Jerusalem.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [9] Liad Blumrosen and Noam Nisan.",
                "On the computational power of iterative auctions II: ascending auctions.",
                "Working paper, The Hebrew University of Jerusalem.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [10] P. Cramton, L.M.",
                "Ausubel, and P.R.",
                "Milgrom.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 5.",
                "The Clock-Proxy Auction: A Practical Combinatorial Auction Design.",
                "MIT Press.",
                "Forthcoming, 2005. [11] P. Cramton, Y. Shoham, and R. Steinberg (Editors).",
                "Combinatorial Auctions.",
                "MIT Press.",
                "Forthcoming, 2005. [12] G. Demange, D. Gale, and M. Sotomayor.",
                "Multi-item auctions.",
                "Journal of Political Economy, 94:863-872, 1986. [13] Shahar Dobzinski, Noam Nisan, and Michael Schapira.",
                "Approximation algorithms for cas with complement-free bidders.",
                "In The 37th ACM symposium on theory of computing (STOC)., 2005. [14] Shahar Dobzinski and Michael Schapira.",
                "Optimal upper and lower approximation bounds for k-duplicates combinatorial auctions.",
                "Working paper, the Hebrew University. [15] Combinatorial bidding conference.",
                "Web Page: http://wireless.fcc.gov/auctions/conferences/combin2003. [16] Faruk Gul and Ennio Stacchetti.",
                "Walrasian equilibrium with gross substitutes.",
                "Journal of Economic Theory, 87:95 - 124, 1999. [17] Faruk Gul and Ennio Stacchetti.",
                "The english auction with differentiated commodities.",
                "Journal of Economic Theory, 92(3):66 - 95, 2000. [18] J. Hastad.",
                "Almost optimal lower bounds for small depth circuits.",
                "In 18th STOC, pages 6-20, 1986. [19] Ron Holzman, Noa Kfir-Dahav, Dov Monderer, and Moshe Tennenholtz.",
                "Bundling equilibrium in combinatrial auctions.",
                "Games and Economic Behavior, 47:104-123, 2004. [20] H. Karloff.",
                "Linear Programming.",
                "Birkh¨auser Verlag, 1991. [21] Frank Kelly and Richard Steinberg.",
                "A combinatorial auction with multiple winners for universal service.",
                "Management Science, 46:586-596, 2000. [22] A.S. Kelso and V.P.",
                "Crawford.",
                "Job matching, coalition formation, and gross substitute.",
                "Econometrica, 50:1483-1504, 1982. [23] Subhash Khot, Richard J. Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Inapproximability results for combinatorial auctions with submodular utility functions.",
                "In Working paper., 2004. [24] Sebastien Lahaie and David C. Parkes.",
                "Applying learning algorithms to preference elicitation.",
                "In EC 04. [25] Benny Lehmann, Daniel Lehmann, and Noam Nisan.",
                "Combinatorial auctions with decreasing marginal utilities.",
                "In ACM conference on electronic commerce.",
                "To appear, Games and Economic Behaviour., 2001. [26] D. Lehmann, L. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "JACM, 49(5):577-602, Sept. 2002. [27] A. Mas-Collel, W. Whinston, and J.",
                "Green.",
                "Microeconomic Theory.",
                "Oxford university press, 1995. [28] Debasis Mishra and David Parkes.",
                "Ascending price vickrey auctions using primal-dual algorithms., 2004.",
                "Working paper, Harvard University. [29] Noam Nisan.",
                "The communication complexity of approximate set packing and covering.",
                "In ICALP 2002. [30] Noam Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In ACM Conference on Electronic Commerce, 2000. [31] Noam Nisan.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 1.",
                "Bidding Languages.",
                "MIT Press.",
                "Forthcoming, 2005. [32] Noam Nisan and Ilya Segal.",
                "The communication requirements of efficient allocations and supporting prices, 2003.",
                "Working paper.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html Forthcoming in the Journal of Economic Theory. [33] Noam Nisan and Ilya Segal.",
                "Exponential communication inefficiency of demand queries, 2004.",
                "Working paper.",
                "Available from http://www.stanford.edu/ isegal/queries1.pdf. [34] D. C. Parkes and L. H. Ungar.",
                "An ascending-price generalized vickrey auction.",
                "Tech.",
                "Rep., Harvard University, 2002. [35] David Parkes.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 3.",
                "Iterative Combinatorial Auctions.",
                "MIT Press.",
                "Forthcoming, 2005. [36] David C. Parkes.",
                "Iterative combinatorial auctions: Achieving economic and computational efficiency.",
                "Ph.D. Thesis, Department of Computer and Information Science, University of Pennsylvania., 2001. [37] David C. Parkes and Lyle H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In AAAI/IAAI, pages 74-81, 2000. [38] Ariel Rubinstein.",
                "Why are certain properties of binary relations relatively more common in natural languages.",
                "Econometrica, 64:343-356, 1996. [39] Tuomas Sandholm.",
                "Algorithm for optimal winner determination in combinatorial auctions.",
                "In Artificial Intelligence, volume 135, pages 1-54, 2002. [40] P. Santi, V. Conitzer, and T. Sandholm.",
                "Towards a characterization of polynomial preference elicitation with value queries in combinatorial auctions.",
                "In The 17th Annual Conference on Learning Theory, 2004. [41] Ilya Segal.",
                "The communication requirements of social choice rules and supporting budget sets, 2004.",
                "Working paper.",
                "Available from http://www.stanford.edu/ isegal/rules.pdf. [42] P.R.",
                "Wurman and M.P.",
                "Wellman.",
                "Akba: A progressive, anonymous-price combinatorial auction.",
                "In Second ACM Conference on Electronic Commerce, 2000. [43] Martin A. Zinkevich, Avrim Blum, and Tuomas Sandholm.",
                "On polynomial-time preference elicitation with value queries.",
                "In ACM Conference on Electronic Commerce, 2003. 43"
            ],
            "original_annotated_samples": [
                "The preferences of <br>bidder</br> i are specified by a valuation function vi : 2M → R+ , where vi(S) denotes the value that <br>bidder</br> i attaches to winning the bundle of items S. We assume free disposal, i.e., that the vis are monotone non-decreasing.",
                "Thus, direct revelation auctions in which bidders simply declare their preferences to the mechanism are only practical for very small auction sizes or for very limited families of <br>bidder</br> preferences.",
                "Effectively, such an iterative auction accesses the bidders preferences by repeatedly making the following type of demand query to bidders: Query to <br>bidder</br> i: a vector of bundle prices p = {p(S)}S⊆M ; Answer: a bundle of items S ⊆ M that maximizes vi(S) − p(S)..",
                "Figure 1 summa3 A Walrasian equilibrium is vector of item prices for which all the items are sold when each <br>bidder</br> receives a bundle in his demand set. 4 In few recent auction designs (e.g., [4, 28]) the payments are not necessarily the final prices of the auctions. 30 Valuation family Upper bound Reference Lower bound Reference General min(n, O( √ m)) [26], Section 4.2 min(n, m1/2− ) [32] Substitutes 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subadditive O(logm) [13] 2 [13] k-duplicates O(m1/k+1 ) [14] O(m1/k+1 ) [14] Procurement ln m [32] (log m)/2 [29, 32] Figure 2: The best approximation factors currently achievable by computationally-efficient combinatorial auctions, for several classes of valuations.",
                "Value query: The auctioneer presents a bundle S, the <br>bidder</br> reports his value v(S) for this bundle. 2."
            ],
            "translated_annotated_samples": [
                "Las preferencias del <br>postor</br> i están especificadas por una función de valoración vi: 2M → R+, donde vi(S) denota el valor que el <br>postor</br> i asigna a ganar el conjunto de artículos S. Suponemos disposición libre, es decir, que los vi son monótonos no decrecientes.",
                "Por lo tanto, las subastas de revelación directa en las que los postores simplemente declaran sus preferencias al mecanismo solo son prácticas para tamaños de subasta muy pequeños o para familias muy limitadas de <br>preferencias de postores</br>.",
                "Efectivamente, una subasta iterativa de este tipo accede a las preferencias de los <br>postor</br>es haciendo repetidamente el siguiente tipo de consulta de demanda a los <br>postor</br>es: Consulta al postor i: un vector de precios de paquetes p = {p(S)}S⊆M; Respuesta: un paquete de artículos S ⊆ M que maximiza vi(S) − p(S).",
                "La Figura 1 muestra un equilibrio walrasiano como un vector de precios de los artículos para los cuales todos los artículos se venden cuando cada <br>postor</br> recibe un conjunto en su conjunto de demanda. En algunos diseños de subasta recientes (por ejemplo, [4, 28]), los pagos no son necesariamente los precios finales de las subastas. Familia de valoración Límite superior Referencia Límite inferior Referencia General min(n, O( √ m)) [26], Sección 4.2 min(n, m1/2− ) [32] Sustitutos 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subaditiva O(logm) [13] 2 [13] k-duplicados O(m1/k+1 ) [14] O(m1/k+1 ) [14] Adquisiciones ln m [32] (log m)/2 [29, 32] Figura 2: Los mejores factores de aproximación actualmente alcanzables por subastas combinatorias computacionalmente eficientes, para varias clases de valoraciones.",
                "Consulta de valor: El subastador presenta un paquete S, el <br>postor</br> informa su valor v(S) para este paquete. 2."
            ],
            "translated_text": "En el Poder Computacional de Subastas Iterativas∗ [Resumen Extendido] Liad Blumrosen Escuela de Ingeniería e Informática Universidad Hebrea de Jerusalén Jerusalén, Israel liad@cs.huji.ac.il Noam Nisan Escuela de Ingeniería e Informática Universidad Hebrea de Jerusalén Jerusalén, Israel noam@cs.huji.ac.il RESUMEN Nos embarcamos en un análisis sistemático del poder y limitaciones de las subastas combinatorias iterativas. La mayoría de las subastas combinatorias iterativas existentes se basan en sugerir precios repetidamente para paquetes de artículos y consultar a los postores sobre su demanda bajo estos precios. Demostramos un gran número de resultados que muestran los límites de lo que se puede lograr mediante subastas de este tipo. Primero nos enfocamos en subastas que utilizan un número polinomial de consultas de demanda, y luego analizamos el poder de diferentes tipos de subastas de precio ascendente. Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía Términos Generales Algoritmos, Economía, Teoría 1. Las subastas combinatorias han recibido recientemente mucha atención. En una subasta combinatoria, un conjunto M de m artículos no idénticos se venden en una sola subasta a n postores competidores. Los postores tienen preferencias con respecto a los lotes de artículos que pueden recibir. Las preferencias del <br>postor</br> i están especificadas por una función de valoración vi: 2M → R+, donde vi(S) denota el valor que el <br>postor</br> i asigna a ganar el conjunto de artículos S. Suponemos disposición libre, es decir, que los vi son monótonos no decrecientes. El objetivo habitual del subastador es optimizar el bienestar social P i vi(Si), donde la asignación S1...Sn debe ser una partición de los artículos. Las aplicaciones incluyen muchos problemas complejos de asignación de recursos y, de hecho, las subastas combinatorias pueden ser vistas como la abstracción común de muchos problemas complejos de asignación de recursos. Las subastas combinatorias enfrentan dificultades económicas y computacionales y son un problema central en la frontera recientemente activa de la teoría económica y la informática. Un libro próximo [11] aborda muchos de los problemas involucrados en el diseño e implementación de subastas combinatorias. El diseño de una subasta combinatoria implica muchas consideraciones. En este artículo nos enfocamos en un solo tema central: la comunicación entre los oferentes y el mecanismo de asignación - la obtención de preferencias. Transferir toda la información sobre las preferencias de los licitadores requiere una cantidad de comunicación inasumible (exponencial en m). Por lo tanto, las subastas de revelación directa en las que los postores simplemente declaran sus preferencias al mecanismo solo son prácticas para tamaños de subasta muy pequeños o para familias muy limitadas de <br>preferencias de postores</br>. Por lo tanto, hemos visto una multitud de subastas iterativas sugeridas en las que el protocolo de subasta interactúa repetidamente con los diferentes postores, con el objetivo de obtener de manera adaptativa suficiente información sobre las preferencias de los postores para poder encontrar una asignación buena (óptima o cercana a óptima). La mayoría de las subastas iterativas sugeridas proceden manteniendo precios temporales para los lotes de artículos y consultando repetidamente a los postores sobre sus preferencias entre los lotes bajo el conjunto actual de precios, y luego actualizando el conjunto de precios de los lotes según las respuestas recibidas (por ejemplo, [22, 12, 17, 37, 3]). Efectivamente, una subasta iterativa de este tipo accede a las preferencias de los <br>postor</br>es haciendo repetidamente el siguiente tipo de consulta de demanda a los <br>postor</br>es: Consulta al postor i: un vector de precios de paquetes p = {p(S)}S⊆M; Respuesta: un paquete de artículos S ⊆ M que maximiza vi(S) − p(S). Estos tipos de consultas son muy naturales en un entorno económico, ya que capturan las preferencias reveladas de los postores. Algunas subastas, llamadas subastas de precio por artículo o de precio lineal, especifican un precio pi para cada artículo, y el precio de cualquier conjunto dado S siempre es lineal, p(S) = Σ i∈S pi. Otras subastas, llamadas subastas de precio por paquete, permiten especificar precios arbitrarios (no lineales) p(S) para los paquetes. Otra diferenciación importante entre los modelos de subastas iterativas se basa en si utilizan precios anónimos o no anónimos: En algunas subastas, los precios que se presentan a los postores son siempre los mismos (precios anónimos). En otras subastas (no anónimas), diferentes postores pueden enfrentar diferentes vectores de precios (discriminatorios). En las subastas de precio ascendente, obligar a que los precios sean anónimos puede ser una restricción significativa. En este artículo, nos embarcamos en un análisis sistemático del poder computacional de las subastas iterativas basadas en consultas de demanda. No buscamos presentar subastas para uso práctico, sino más bien entender las limitaciones y posibilidades de este tipo de subastas. En la primera parte de este documento, nuestra pregunta principal es ¿qué se puede hacer utilizando un número polinómico de este tipo de consultas? Es decir, polinomial en los parámetros principales del problema: n, m y el número de bits t necesarios para representar un único valor vi(S). Ten en cuenta que desde un punto de vista algorítmico estamos hablando de algoritmos de tiempo sublineal: el tamaño de la entrada aquí es realmente n(2m − 1) números, las descripciones de las funciones de valoración de todos los postores. Hay dos aspectos de eficiencia computacional en estos contextos: el primero es la comunicación con los postores, es decir, la cantidad de consultas realizadas, y el segundo es la usual tratabilidad computacional. Nuestros límites inferiores dependerán solo del número de consultas y se mantendrán independientemente de cualquier suposición computacional como P = NP. Nuestros límites superiores siempre serán computacionalmente eficientes tanto en términos del número de consultas como en términos de computación regular. Como se mencionó, este artículo se centra en el único aspecto de la obtención de preferencias y en sus consecuencias computacionales, sin abordar cuestiones de incentivos. Esto refuerza nuestros límites inferiores, pero significa que los límites superiores también requieren evaluación desde esta perspectiva antes de ser utilizados en cualquier subasta combinatoria real. La segunda parte de este documento estudia el poder de las subastas de precio ascendente. Las subastas ascendentes son subastas iterativas donde los precios publicados no pueden disminuir con el tiempo. En este trabajo, intentamos analizar sistemáticamente qué significan las diferencias entre varios modelos de subastas ascendentes. Intentamos responder a las siguientes preguntas: (i) ¿Qué modelos de subastas ascendentes pueden encontrar la asignación óptima, y para qué clases de valoraciones? (ii) En casos donde la asignación óptima no puede ser determinada por subastas ascendentes, ¿qué tan bien pueden estas subastas aproximar el bienestar social? (iii) ¿Cómo se comparan los diferentes modelos de subastas ascendentes? ¿Son algunos modelos computacionalmente más fuertes que otros? Las subastas ascendentes han sido ampliamente estudiadas en la literatura (ver la encuesta reciente de Parkes [35]). La mayor parte de este trabajo presentó límites superiores, es decir, mecanismos propuestos con precios ascendentes y analizó sus propiedades. Un resultado que se acerca más al nuestro es el de Gul y Stacchetti [17], quienes demostraron que ninguna subasta de precio ascendente de artículo puede siempre determinar los precios VCG, incluso para valoraciones de sustitutos. Nuestro marco es más general que la línea tradicional de investigación que se concentra en la asignación final y observamos, sin embargo, que alguna propiedad de incentivo débil viene de forma gratuita en las subastas de consulta de demanda, ya que los jugadores miopes responderán todas las consultas de demanda de manera veraz. También observamos que en algunos casos (¡pero no siempre!) los problemas de incentivos pueden ser manejados de forma ortogonal a los problemas de obtención de preferencias, por ejemplo, utilizando precios de Vickrey-Clarke-Groves (VCG) (por ejemplo, [4, 34]). Además, discutimos este resultado en la Sección 5.3. Subastas iterativas Subastas de demanda Subastas de precio de artículo Subastas de precio anónimo Subastas ascendentes 1 2 3 4 5 6 97 8 10 Figura 1: El diagrama clasifica las siguientes subastas según sus propiedades: (1) La adaptación [12] para la subasta de Kelso & Crawford [22]. (2) La Subasta de Proxy [3] de Ausubel & Milgrom. (3) iBundle(3) de Parkes & Ungar [34]. (4) iBundle(2) de Parkes & Ungar [37]. (5) Nuestra adaptación descendente para la aproximación de 2 para valoraciones submodulares por [25] (ver Subsección 5.4). (6) La subasta de Ausubel [4] para valoraciones de sustitutos. (7) La adaptación de Nisan & Segal [32] de la aproximación O( √ m) por [26]. (8) La subasta de artículo duplicado por [5]. (9) Subasta para fórmulas de Leer-Una-Vez por [43]. (10) La Subasta AkBA por Wurman & Wellman [42]. pagos y en particular, en alcanzar equilibrios walrasianos o equilibrios competitivos. Se sabe que existe un equilibrio walrasiano en el caso de las valoraciones de sustitutos, y se sabe que es imposible para cualquier clase más amplia de valoraciones [16]. Esto no descarta otras asignaciones mediante subastas ascendentes: en este documento consideramos las subastas como un proceso computacional donde el resultado, tanto la asignación como los pagos, pueden determinarse según todos los datos recopilados a lo largo de la subasta; Este marco general refuerza nuestros resultados negativos. Encontramos el estudio de las subastas ascendentes atractivo por diversas razones. Primero, las subastas ascendentes son ampliamente utilizadas en muchos contextos de la vida real, desde las subastas de espectro de la FCC hasta casi cualquier sitio web de comercio electrónico (por ejemplo, [2, 1]). De hecho, esta es quizás la forma más directa de vender artículos: preguntar a los postores qué les gustaría comprar a ciertos precios, y aumentar los precios de los productos con alta demanda. Las subastas ascendentes también se consideran más intuitivas para muchos postores, y se cree que aumentan la confianza de los postores en el subastador, ya que ven el resultado que emerge gradualmente de las respuestas de los postores. Las subastas ascendentes también tienen otras propiedades económicas deseadas, por ejemplo, implican una revelación de información menor (considere, por ejemplo, las subastas inglesas frente a las subastas de segundo precio sellado). 1.1 Trabajo Existente Muchos mecanismos de subasta combinatoria iterativos dependen de consultas de demanda (ver la encuesta en [35]). La Figura 1 muestra un equilibrio walrasiano como un vector de precios de los artículos para los cuales todos los artículos se venden cuando cada <br>postor</br> recibe un conjunto en su conjunto de demanda. En algunos diseños de subasta recientes (por ejemplo, [4, 28]), los pagos no son necesariamente los precios finales de las subastas. Familia de valoración Límite superior Referencia Límite inferior Referencia General min(n, O( √ m)) [26], Sección 4.2 min(n, m1/2− ) [32] Sustitutos 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subaditiva O(logm) [13] 2 [13] k-duplicados O(m1/k+1 ) [14] O(m1/k+1 ) [14] Adquisiciones ln m [32] (log m)/2 [29, 32] Figura 2: Los mejores factores de aproximación actualmente alcanzables por subastas combinatorias computacionalmente eficientes, para varias clases de valoraciones. Todos los límites inferiores en la tabla se aplican a todas las subastas iterativas (excepto la marcada con *); todos los límites superiores en la tabla se logran con consultas de demanda de precio de artículo. Categoriza las clases básicas de subastas implicadas por combinaciones de las propiedades anteriores y clasifica algunas de las subastas propuestas en la literatura de acuerdo con esta clasificación. Para nuestros propósitos, dos familias de estas subastas sirven como los principales puntos de partida motivadores: la primera son las subastas de precio de artículo ascendente de [22, 17] que con eficiencia computacional encuentran una asignación óptima entre valoraciones de sustitutos (brutos), y la segunda son las subastas de precio de paquete ascendente de [37, 3] que encuentran una asignación óptima entre valoraciones generales, pero no necesariamente con eficiencia computacional. El límite inferior principal en esta área, debido a [32], establece que, de hecho, debido a los requisitos de comunicación inherentes, no es posible que ninguna subasta iterativa encuentre la asignación óptima entre valoraciones generales con un número subexponencial de consultas. Un límite inferior exponencial similar fue demostrado en [32] también para aproximar de manera óptima la asignación dentro de un factor de m1/2−. Se conocen varios límites inferiores y superiores para la aproximación de algunas clases naturales de valoraciones, los cuales se resumen en la Figura 2. En [32], también se muestra la universalidad de las consultas de demanda: cualquier protocolo de comunicación no determinista para encontrar una asignación que optimice el bienestar social puede convertirse en uno que solo utilice consultas de demanda (con precios de paquetes). En [41] esto también se generalizó a protocolos no deterministas para encontrar asignaciones que satisfacen otros tipos naturales de requisitos económicos (por ejemplo, eficiencia social aproximada, ausencia de envidia). Sin embargo, en [33] se demostró que esta completitud de las consultas de demanda solo se cumple en el entorno no determinista, mientras que en el entorno determinista habitual, las consultas de demanda (incluso con precios de paquetes) pueden ser exponencialmente más débiles que la comunicación general. Las subastas de precio por paquete son una generalización de las subastas de precio por artículo (más naturales e intuitivas). Se sabe que las subastas de precio de artículo pueden ser exponencialmente más débiles: un buen ejemplo es el caso de valoraciones que son un XOR de k paquetes, donde k es pequeño (digamos, polinómico). Lahaie y Parkes [24] muestran una subasta de precio de paquete económicamente eficiente que utiliza un número polinómico de consultas siempre que k sea polinómico. Por el contrario, [7] muestra que existen valoraciones que son XORs de k = √ m paquetes, de tal manera que cualquier subasta de precio de artículo que encuentre una asignación óptima entre ellos requiere un número exponencial de consultas. Estos resultados forman parte de una línea reciente de investigación ([7, 43, 24, 40]) que estudia el problema de la obtención de preferencias en subastas combinatorias y su relación con el problema de obtención completo (es decir, aprender las valoraciones exactas de los postores). Estas son valoraciones donde los postores tienen valores para k paquetes específicos, y el valor de cada conjunto es el valor máximo de uno de estos paquetes que contiene. Estos documentos adaptan métodos de la teoría del aprendizaje automático al entorno de subastas combinatorias. El problema de la obtención de preferencias y el problema de la obtención completa se relacionan con un problema bien estudiado en microeconomía conocido como el problema de integrabilidad (ver, por ejemplo, [27]). Este problema estudia si y cuándo se puede derivar la función de utilidad de un consumidor a partir de su función de demanda. Organización del documento: Debido al relativamente gran número de resultados que presentamos, comenzamos con una revisión de nuestros nuevos resultados en la Sección 2. Después de describir nuestro modelo formal en la Sección 3, presentamos nuestros resultados sobre el poder de las consultas de demanda en la Sección 4. Luego, describimos el poder de las subastas ascendentes de precio de artículo (Sección 5) y las subastas ascendentes de precio de paquete (Sección 6). Los lectores que estén principalmente interesados en la discusión autocontenida de las subastas ascendentes pueden omitir la Sección 4. Las pruebas faltantes de la Sección 4 se pueden encontrar en la parte I del artículo completo ([8]). Las pruebas faltantes de las Secciones 5 y 6 se pueden encontrar en la parte II del artículo completo ([9]). 2. Una encuesta de nuestros resultados Nuestro análisis sistemático está compuesto por la combinación de un número bastante grande de resultados que caracterizan el poder y las limitaciones de varias clases de subastas. En esta sección, presentaremos una exposición describiendo nuestros nuevos resultados. Primero discutimos el poder de las subastas iterativas de demanda-consulta, y luego dirigimos nuestra atención a las subastas ascendentes. La Figura 3 resume algunos de nuestros principales resultados. 2.1 Comparación de consultas de demanda de tipos de consultas Preguntamos primero qué otros tipos naturales de consultas podríamos imaginar que las subastas iterativas utilicen. Aquí hay una lista de tales consultas que son naturales, han sido utilizadas en la literatura, o que encontramos útiles. 1. Consulta de valor: El subastador presenta un paquete S, el <br>postor</br> informa su valor v(S) para este paquete. 2. ",
            "candidates": [],
            "error": [
                [
                    "postor",
                    "postor",
                    "preferencias de postores",
                    "postor",
                    "postor",
                    "postor",
                    "postor"
                ]
            ]
        },
        "demand query": {
            "translated_key": "consulta de demanda",
            "is_in_text": true,
            "original_annotated_sentences": [
                "On the Computational Power of Iterative Auctions∗ [Extended Abstract] Liad Blumrosen School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel liad@cs.huji.ac.il Noam Nisan School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel noam@cs.huji.ac.il ABSTRACT We embark on a systematic analysis of the power and limitations of iterative combinatorial auctions.",
                "Most existing iterative combinatorial auctions are based on repeatedly suggesting prices for bundles of items, and querying the bidders for their demand under these prices.",
                "We prove a large number of results showing the boundaries of what can be achieved by auctions of this kind.",
                "We first focus on auctions that use a polynomial number of demand queries, and then we analyze the power of different kinds of ascending-price auctions.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION Combinatorial auctions have recently received a lot of attention.",
                "In a combinatorial auction, a set M of m nonidentical items are sold in a single auction to n competing bidders.",
                "The bidders have preferences regarding the bundles of items that they may receive.",
                "The preferences of bidder i are specified by a valuation function vi : 2M → R+ , where vi(S) denotes the value that bidder i attaches to winning the bundle of items S. We assume free disposal, i.e., that the vis are monotone non-decreasing.",
                "The usual goal of the auctioneer is to optimize the social welfare P i vi(Si), where the allocation S1...Sn must be a partition of the items.",
                "Applications include many complex resource allocation problems and, in fact, combinatorial auctions may be viewed as the common abstraction of many complex resource allocation problems.",
                "Combinatorial auctions face both economic and computational difficulties and are a central problem in the recently active border of economic theory and computer science.",
                "A forthcoming book [11] addresses many of the issues involved in the design and implementation of combinatorial auctions.",
                "The design of a combinatorial auction involves many considerations.",
                "In this paper we focus on just one central issue: the communication between bidders and the allocation mechanism - preference elicitation.",
                "Transferring all information about bidders preferences requires an infeasible (exponential in m) amount of communication.",
                "Thus, direct revelation auctions in which bidders simply declare their preferences to the mechanism are only practical for very small auction sizes or for very limited families of bidder preferences.",
                "We have therefore seen a multitude of suggested iterative auctions in which the auction protocol repeatedly interacts with the different bidders, aiming to adaptively elicit enough information about the bidders preferences as to be able to find a good (optimal or close to optimal) allocation.",
                "Most of the suggested iterative auctions proceed by maintaining temporary prices for the bundles of items and repeatedly querying the bidders as to their preferences between the bundles under the current set of prices, and then updating the set of bundle prices according to the replies received (e.g., [22, 12, 17, 37, 3]).",
                "Effectively, such an iterative auction accesses the bidders preferences by repeatedly making the following type of <br>demand query</br> to bidders: Query to bidder i: a vector of bundle prices p = {p(S)}S⊆M ; Answer: a bundle of items S ⊆ M that maximizes vi(S) − p(S)..",
                "These types of queries are very natural in an economic setting as they capture the revealed preferences of the bidders.",
                "Some auctions, called item-price or linear-price auctions, specify a price pi for each item, and the price of any given bundle S is always linear, p(S) = P i∈S pi.",
                "Other auctions, called bundle-price auctions, allow specifying arbitrary (non-linear) prices p(S) for bundles.",
                "Another important differentiation between models of iterative auctions is 29 based on whether they use anonymous or non-anonymous prices: In some auctions the prices that are presented to the bidders are always the same (anonymous prices).",
                "In other auctions (non-anonymous), different bidders may face different (discriminatory) vectors of prices.",
                "In ascending-price auctions, forcing prices to be anonymous may be a significant restriction.",
                "In this paper, we embark on a systematic analysis of the computational power of iterative auctions that are based on demand queries.",
                "We do not aim to present auctions for practical use but rather to understand the limitations and possibilities of these kinds of auctions.",
                "In the first part of this paper, our main question is what can be done using a polynomial number of these types of queries?",
                "That is, polynomial in the main parameters of the problem: n, m and the number of bits t needed for representing a single value vi(S).",
                "Note that from an algorithmic point of view we are talking about sub-linear time algorithms: the input size here is really n(2m − 1) numbers - the descriptions of the valuation functions of all bidders.",
                "There are two aspects to computational efficiency in these settings: the first is the communication with the bidders, i.e., the number of queries made, and the second is the usual computational tractability.",
                "Our lower bounds will depend only on the number of queriesand hold independently of any computational assumptions like P = NP.",
                "Our upper bounds will always be computationally efficient both in terms of the number of queries and in terms of regular computation.",
                "As mentioned, this paper concentrates on the single aspect of preference elicitation and on its computational consequences and does not address issues of incentives.",
                "This strengthens our lower bounds, but means that the upper bounds require evaluation from this perspective also before being used in any real combinatorial auction.1 The second part of this paper studies the power of ascending -price auctions.",
                "Ascending auctions are iterative auctions where the published prices cannot decrease in time.",
                "In this work, we try to systematically analyze what do the differences between various models of ascending auctions mean.",
                "We try to answer the following questions: (i) Which models of ascending auctions can find the optimal allocation, and for which classes of valuations? (ii) In cases where the optimal allocation cannot be determined by ascending auctions, how well can such auctions approximate the social welfare? (iii) How do the different models for ascending auctions compare?",
                "Are some models computationally stronger than others?",
                "Ascending auctions have been extensively studied in the literature (see the recent survey by Parkes [35]).",
                "Most of this work presented upper bounds, i.e., proposed mechanisms with ascending prices and analyzed their properties.",
                "A result which is closer in spirit to ours, is by Gul and Stacchetti [17], who showed that no item-price ascending auction can always determine the VCG prices, even for substitutes valuations.2 Our framework is more general than the traditional line of research that concentrates on the final allocation and 1 We do observe however that some weak incentive property comes for free in demand-query auctions since myopic players will answer all demand queries truthfully.",
                "We also note that in some cases (but not always!) the incentives issues can be handled orthogonally to the preference elicitation issues, e.g., by using Vickrey-Clarke-Groves (VCG) prices (e.g., [4, 34]). 2 We further discuss this result in Section 5.3.",
                "Iterative auctions Demand auctions Item-price auctions Anonymous price auctions Ascending auctions 1 2 3 4 5 6 97 8 10 Figure 1: The diagram classifies the following auctions according to their properties: (1) The adaptation [12] for Kelso & Crawfords [22] auction. (2) The Proxy Auction [3] by Ausubel & Milgrom. (3) iBundle(3) by Parkes & Ungar [34]. (4) iBundle(2) by Parkes & Ungar [37]. (5) Our descending adaptation for the 2-approximation for submodular valuations by [25] (see Subsection 5.4). (6) Ausubels [4] auction for substitutes valuations. (7) The adaptation by Nisan & Segal [32] of the O( √ m) approximation by [26]. (8) The duplicate-item auction by [5]. (9) Auction for Read-Once formulae by [43]. (10) The AkBA Auction by Wurman & Wellman [42]. payments and in particular, on reaching Walrasian equilibria or Competitive equilibria.",
                "A Walrasian equilibrium3 is known to exist in the case of Substitutes valuations, and is known to be impossible for any wider class of valuations [16].",
                "This does not rule out other allocations by ascending auctions: in this paper we view the auctions as a computational process where the outcome - both the allocation and the payments - can be determined according to all the data elicited throughout the auction; This general framework strengthens our negative results.4 We find the study of ascending auctions appealing for various reasons.",
                "First, ascending auctions are widely used in many real-life settings from the FCC spectrum auctions [15] to almost any e-commerce website (e.g., [2, 1]).",
                "Actually, this is maybe the most straightforward way to sell items: ask the bidders what would they like to buy under certain prices, and increase the prices of over-demanded goods.",
                "Ascending auctions are also considered more intuitive for many bidders, and are believed to increase the trust of the bidders in the auctioneer, as they see the result gradually emerging from the bidders responses.",
                "Ascending auctions also have other desired economic properties, e.g., they incur smaller information revelation (consider, for example, English auctions vs. second-price sealed bid auctions). 1.1 Extant Work Many iterative combinatorial auction mechanisms rely on demand queries (see the survey in [35]).",
                "Figure 1 summa3 A Walrasian equilibrium is vector of item prices for which all the items are sold when each bidder receives a bundle in his demand set. 4 In few recent auction designs (e.g., [4, 28]) the payments are not necessarily the final prices of the auctions. 30 Valuation family Upper bound Reference Lower bound Reference General min(n, O( √ m)) [26], Section 4.2 min(n, m1/2− ) [32] Substitutes 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subadditive O(logm) [13] 2 [13] k-duplicates O(m1/k+1 ) [14] O(m1/k+1 ) [14] Procurement ln m [32] (log m)/2 [29, 32] Figure 2: The best approximation factors currently achievable by computationally-efficient combinatorial auctions, for several classes of valuations.",
                "All lower bounds in the table apply to all iterative auctions (except the one marked by *); all upper bounds in the table are achieved with item-price demand queries. rizes the basic classes of auctions implied by combinations of the above properties and classifies some of the auctions proposed in the literature according to this classification.",
                "For our purposes, two families of these auctions serve as the main motivating starting points: the first is the ascending item-price auctions of [22, 17] that with computational efficiency find an optimal allocation among (gross) substitutes valuations, and the second is the ascending bundleprice auctions of [37, 3] that find an optimal allocation among general valuations - but not necessarily with computational efficiency.",
                "The main lower bound in this area, due to [32], states that indeed, due to inherent communication requirements, it is not possible for any iterative auction to find the optimal allocation among general valuations with sub-exponentially many queries.",
                "A similar exponential lower bound was shown in [32] also for even approximating the optimal allocation to within a factor of m1/2− .",
                "Several lower bounds and upper bounds for approximation are known for some natural classes of valuations - these are summarized in Figure 2.",
                "In [32], the universal generality of demand queries is also shown: any non-deterministic communication protocol for finding an allocation that optimizes the social welfare can be converted into one that only uses demand queries (with bundle prices).",
                "In [41] this was generalized also to nondeterministic protocols for finding allocations that satisfy other natural types of economic requirements (e.g., approximate social efficiency, envy-freeness).",
                "However, in [33] it was demonstrated that this completeness of demand queries holds only in the nondeterministic setting, while in the usual deterministic setting, demand queries (even with bundle prices) may be exponentially weaker than general communication.",
                "Bundle-price auctions are a generalization of (the more natural and intuitive) item-price auctions.",
                "It is known that indeed item-price auctions may be exponentially weaker: a nice example is the case of valuations that are a XOR of k bundles5 , where k is small (say, polynomial).",
                "Lahaie and Parkes [24] show an economically-efficient bundle-price auction that uses a polynomial number of queries whenever k is polynomial.",
                "In contrast, [7] show that there exist valuations that are XORs of k = √ m bundles such that any item-price auction that finds an optimal allocation between them requires exponentially many queries.",
                "These results are part of a recent line of research ([7, 43, 24, 40]) that study the preference elicitation problem in combinatorial auctions and its relation to the full elicitation problem (i.e., learn5 These are valuations where bidders have values for k specific packages, and the value of each bundle is the maximal value of one of these packages that it contains. ing the exact valuations of the bidders).",
                "These papers adapt methods from machine-learning theory to the combinatorialauction setting.",
                "The preference elicitation problem and the full elicitation problem relate to a well studied problem in microeconomics known as the integrability problem (see, e.g., [27]).",
                "This problem studies if and when one can derive the utility function of a consumer from her demand function.",
                "Paper organization: Due to the relatively large number of results we present, we start with a survey of our new results in Section 2.",
                "After describing our formal model in Section 3, we present our results concerning the power of demand queries in Section 4.",
                "Then, we describe the power of item-price ascending auctions (Section 5) and bundle-price ascending auctions (Section 6).",
                "Readers who are mainly interested in the self-contained discussion of ascending auctions can skip Section 4.",
                "Missing proofs from Section 4 can be found in part I of the full paper ([8]).",
                "Missing proofs from Sections 5 and 6 can be found in part II of the full paper ([9]). 2.",
                "A SURVEY OF OUR RESULTS Our systematic analysis is composed of the combination of a rather large number of results characterizing the power and limitations of various classes of auctions.",
                "In this section, we will present an exposition describing our new results.",
                "We first discuss the power of demand-query iterative auctions, and then we turn our attention to ascending auctions.",
                "Figure 3 summarizes some of our main results. 2.1 Demand Queries Comparison of query types We first ask what other natural types of queries could we imagine iterative auctions using?",
                "Here is a list of such queries that are either natural, have been used in the literature, or that we found useful. 1.",
                "Value query: The auctioneer presents a bundle S, the bidder reports his value v(S) for this bundle. 2.",
                "Marginal-value query: The auctioneer presents a bundle A and an item j, the bidder reports how much he is willing to pay for j, given that he already owns A, i.e., v(j|A) = v(A ∪ {j}) − v(A). 3.",
                "<br>demand query</br> (with item prices): The auctioneer presents a vector of item prices p1...pm; the bidder reports his demand under these prices, i.e., some set S that maximizes v(S) − P i∈S pi.6 6 A tie breaking rule should be specified.",
                "All of our results 31 Communication Constraint Can find an optimal allocation?",
                "Upper bound for welfare approx.",
                "Lower bound for welfare approx.",
                "Item-Price Demand Queries Yes 1 1 Poly.",
                "Communication No [32] min(n, O(m1/2 )) [26] min(n, m1/2− ) [32] Poly.",
                "Item-Price Demand Queries No [32] min(n, O(m1/2 )) min(n, m1/2− ) [32] Poly.",
                "Value Queries No [32] O( m√ log m ) [19] O( m log m ) Anonymous Item-Price AA No - min(O(n), O(m1/2− )) Non-anonymous Item-Price AA No -Anonymous Bundle-Price AA No - min(O(n), O(m1/2− )) Non-anonymous Bundle-Price AA Yes [37] 1 1 Poly Number of Item-Price AA No min(n, O(m1/2 ))Figure 3: This paper studies the economic efficiency of auctions that follow certain communication constraints.",
                "For each class of auctions, the table shows whether the optimal allocation can be achieved, or else, how well can it be approximated (both upper bounds and lower bounds).",
                "New results are highlighted.",
                "Abbreviations: Poly. (Polynomial number/size), AA (ascending auctions). - means that nothing is currently known except trivial solutions. 4.",
                "Indirect-utility query: The auctioneer presents a set of item prices p1...pm, and the bidder responds with his indirect-utility under these prices, that is, the highest utility he can achieve from a bundle under these prices: maxS⊆M (v(S) − P i∈S pi).7 5.",
                "Relative-<br>demand query</br>: the auctioneer presents a set of non-zero prices p1...pm, and the bidder reports the bundle that maximizes his value per unit of money, i.e., some set that maximizes v(S)P i∈S pi .8 Theorem: Each of these queries can be efficiently (i.e., in time polynomial in n, m, and the number of bits of precision t needed to represent a single value vi(S)) simulated by a sequence of demand queries with item prices.",
                "In particular this shows that demand queries can elicit all information about a valuation by simulating all 2m −1 value queries.",
                "We also observe that value queries and marginalvalue queries can simulate each other in polynomial time and that demand queries and indirect-utility queries can also simulate each other in polynomial time.",
                "We prove that exponentially many value queries may be needed in order to simulate a single <br>demand query</br>.",
                "It is interesting to note that for the restricted class of substitutes valuations, demand queries may be simulated by polynomial number of value queries [6].",
                "Welfare approximation The next question that we ask is how well can a computationally-efficient auction that uses only demand queries approximate the optimal allocation?",
                "Two separate obstacles are known: In [32], a lower bound of min(n, m1/2− ), for any fixed > 0, was shown for the approximation factor apply for any fixed tie breaking rule. 7 This is exactly the utility achieved by the bundle which would be returned in a <br>demand query</br> with the same prices.",
                "This notion relates to the Indirect-utility function studied in the Microeconomic literature (see, e.g., [27]). 8 Note that when all the prices are 1, the bidder actually reports the bundle with the highest per-item price.",
                "We found this type of query useful, for example, in the design of the approximation algorithm described in Figure 5 in Section 4.2. obtained using any polynomial amount of communication.",
                "A computational bound with the same value applies even for the case of single-minded bidders, but under the assumption of NP = ZPP [39].",
                "As noted in [32], the computationallyefficient greedy algorithm of [26] can be adapted to become a polynomial-time iterative auction that achieves a nearly matching approximation factor of min(n, O( √ m)).",
                "This iterative auction may be implemented with bundle-price demand queries but, as far as we see, not as one with item prices.",
                "Since in a single bundle-price <br>demand query</br> an exponential number of prices can be presented, this algorithm can have an exponential communication cost.",
                "In Section 4.2, we describe a different item-price auction that achieves the same approximation factor with a polynomial number of queries (and thus with a polynomial communication).",
                "Theorem: There exists a computationally-efficient iterative auction with item-price demand queries that finds an allocation that approximates the optimal welfare between arbitrary valuations to within a factor of min(n, O( √ m)).",
                "One may then attempt obtaining such an approximation factor using iterative auctions that use only the weaker value queries.",
                "However, we show that this is impossible: Theorem: Any iterative auction that uses a polynomial (in n and m) number of value queries can not achieve an approximation factor that is better than O( m log m ).9 Note however that auctions with only value queries are not completely trivial in power: the bundling auctions of Holzman et al. [19] can easily be implemented by a polynomial number of value queries and can achieve an approximation factor of O( m√ log m ) by using O(log m) equi-sized bundles.",
                "We do not know how to close the (tiny) gap between this upper bound and our lower bound.",
                "Representing bundle-prices We then deal with a critical issue with bundle-price auctions that was side-stepped by our model, as well as by all previous works that used bundle-price auctions: how are 9 This was also proven independently by Shahar Dobzinski and Michael Schapira. 32 the bundle prices represented?",
                "For item-price auctions this is not an issue since a query needs only to specify a small number, m, of prices.",
                "In bundle-price auctions that situation is more difficult since there are exponentially many bundles that require pricing.",
                "Our basic model (like all previous work that used bundle prices, e.g., [37, 34, 3]), ignores this issue, and only requires that the prices be determined, somehow, by the protocol.",
                "A finer model would fix a specific language for denoting bundle prices, force the protocol to represent the bundle-prices in this language, and require that the representations of the bundle-prices also be polynomial.",
                "What could such a language for denoting prices for all bundles look like?",
                "First note that specifying a price for each bundle is equivalent to specifying a valuation.",
                "Second, as noted in [31], most of the proposed bidding languages are really just languages for representing valuations, i.e., a syntactic representation of valuations - thus we could use any of them.",
                "This point of view opens up the general issue of which language should be used in bundle-price auctions and what are the implications of this choice.",
                "Here we initiate this line of investigation.",
                "We consider bundle-price auctions where the prices must be given as a XOR-bid, i.e., the protocol must explicitly indicate the price of every bundle whose value is different than that of all of its proper subsets.",
                "Note that all bundle-price auctions that do not explicitly specify a bidding language must implicitly use this language or a weaker one, since without a specific language one would need to list prices for all bundles, perhaps except for trivial ones (those with value 0, or more generally, those with a value that is determined by one of their proper subsets.)",
                "We show that once the representation length of bundle prices is taken into account (using the XOR-language), bundle-price auctions are no more strictly stronger than item-price auctions.",
                "Define the cost of an iterative auction as the total length of the queries and answers used throughout the auction (in the worst case).",
                "Theorem: For some class of valuations, bundle price auctions that use the XOR-language require an exponential cost for finding the optimal allocation.",
                "In contrast, item-price auctions can find the optimal allocation for this class within polynomial cost.10 This put doubts on the applicability of bundle-price auctions like [3, 37], and it may justify the use of hybrid pricing methods such as Ausubel, Cramton and Milgroms Clock-Proxy auction ([10]).",
                "Demand queries and linear programs The winner determination problem in combinatorial auctions may be formulated as an integer program.",
                "In many cases solving the linear-program relaxation of this integer program is useful: for some restricted classes of valuations it finds the optimum of the integer program (e.g., substitute valuations [22, 17]) or helps approximating the optimum (e.g., by randomized rounding [13, 14]).",
                "However, the linear program has an exponential number of variables.",
                "Nisan and Segal [32] observed the surprising fact that despite the ex10 Our proof relies on the sophisticated known lower bounds for constant depth circuits.",
                "We were not able to find an elementary proof. ponential number of variables, this linear program may be solved within polynomial communication.",
                "The basic idea is to solve the dual program using the Ellipsoid method (see, e.g., [20]).",
                "The dual program has a polynomial number of variables, but an exponential number of constraints.",
                "The Ellipsoid algorithm runs in polynomial time even on such programs, provided that a separation oracle is given for the set of constraints.",
                "Surprisingly, such a separation oracle can be implemented using a single <br>demand query</br> (with item prices) to each of the bidders.",
                "The treatment of [32] was somewhat ad-hoc to the problem at hand (the case of substitute valuations).",
                "Here we give a somewhat more general form of this important observation.",
                "Let us call the following class of linear programs generalized-winner-determination-relaxation (GWDR) LPs: Maximize X i∈N,S⊆M wi xi,S vi(S) s.t.",
                "X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M The case where wi = 1, di = 1, qj = 1 (for every i, j) is the usual linear relaxation of the winner determination problem.",
                "More generally, wi may be viewed as the weight given to bidder is welfare, qj may be viewed as the quantity of units of good j, and di may be viewed as duplicity of the number of bidders of type i. Theorem: Any GWDR linear program may be solved in polynomial time (in n, m, and the number of bits of precision t) using only demand queries with item prices.11 2.2 Ascending Auctions Ascending item-price auctions: It is well known that the item-price ascending auctions of Kelso and Crawford [22] and its variants [12, 16] find the optimal allocation as long as all players valuations have the substitutes property.",
                "The obvious question is whether the optimal allocation can be found for a larger class of valuations.",
                "Our main result here is a strong negative result: Theorem: There is a 2-item 2-player problem where no ascending item-price auction can find the optimal allocation.",
                "This is in contrast to both the power of bundle-price ascending auctions and to the power of general item-price demand queries (see above), both of which can always find the optimal allocation and in fact even provide full preference elicitation.",
                "The same proof proves a similar impossibility result for other types of auctions (e.g., descending auctions, non-anonymous auctions).",
                "More extension of this result: • Eliciting some classes of valuations requires an exponential number of ascending item-price trajectories. 11 The produced optimal solution will have polynomial support and thus can be listed fully. 33 • At least k − 1 ascending item-price trajectories are needed to elicit XOR formulae with k terms.",
                "This result is in some sense tight, since we show that any k-term XOR formula can be fully elicited by k−1 nondeterministic (i.e., when some exogenous teacher instructs the auctioneer on how to increase the prices) ascending auctions.12 We also show that item-price ascending auctions and iterative auctions that are limited to a polynomial number of queries (of any kind, not necessarily ascending) are incomparable in their power: ascending auctions, with small enough increments, can elicit the preferences in cases where any polynomial number of queries cannot.",
                "Motivated by several recent papers that studied the relation between eliciting and fully-eliciting the preferences in combinatorial auctions (e.g., [7, 24]), we explore the difference between these problems in the context of ascending auctions.",
                "We show that although a single ascending auction can determine the optimal allocation among any number of bidders with substitutes valuations, it cannot fully-elicit such a valuation even for a single bidder.",
                "While it was shown in [25] that the set of substitutes valuations has measure zero in the space of general valuations, its dimension is not known, and in particular it is still open whether a polynomial amount of information suffices to describe a substitutes valuation.",
                "While our result may be a small step in that direction (a polynomial full elicitation may still be possible with other communication protocols), we note that our impossibility result also holds for valuations in the class OXS defined by [25], valuations that we are able to show have a compact representation.",
                "We also give several results separating the power of different models for ascending combinatorial auctions that use item-prices: we prove, not surprisingly, that adaptive ascending auctions are more powerful than oblivious ascending auctions and that non-deterministic ascending auctions are more powerful than deterministic ascending auctions.",
                "We also compare different kinds of non-anonymous auctions (e.g., simultaneous or sequential), and observe that anonymous bundle-price auctions and non-anonymous item-price auctions are incomparable in their power.",
                "Finally, motivated by Dutch auctions, we consider descending auctions, and how they compare to ascending ones; we show classes of valuations that can be elicited by ascending item-price auctions but not by descending item-price auctions, and vice versa.",
                "Ascending bundle-price auctions: All known ascending bundle-price auctions that are able to find the optimal allocation between general valuations (with free disposal) use non-anonymous prices.",
                "Anonymous ascending-price auctions (e.g., [42, 21, 37]) are only known to be able to find the optimal allocation among superadditive valuations or few other simple classes ([36]).",
                "We show that this is no mistake: Theorem: No ascending auction with anonymous prices can find the optimal allocation between general valuations. 12 Non-deterministic computation is widely used in CS and also in economics (e.g, a Walrasian equilibrium or [38]).",
                "In some settings, deterministic and non-deterministic models have equal power (e.g., computation with finite automata).",
                "This bound is regardless of the running time, and it also holds for descending auctions and non-deterministic auctions.",
                "We strengthen this result significantly by showing that anonymous ascending auctions cannot produce a better than O( √ m) approximation - the approximation ratio that can be achieved with a polynomial number of queries ([26, 32]) and, as mentioned, with a polynomial number of item-price demand queries.",
                "The same lower bound clearly holds for anonymous item-price ascending auctions since such auctions can be simulated by anonymous bundle-price ascending auctions.",
                "We currently do not have any lower bound on the approximation achievable by non-anonymous item-price ascending auctions.",
                "Finally, we study the performance of the existing computationally-efficient ascending auctions.",
                "These protocols ([37, 3]) require exponential time in the worst case, and this is unavoidable as shown by [32].",
                "However, we also observe that these auctions, as well as the whole class of similar ascending bundle-price auctions, require an exponential time even for simple additive valuations.",
                "This is avoidable and indeed the ascending item-price auctions of [22] can find the optimal allocation for these simple valuations with polynomial communication. 3.",
                "THE MODEL 3.1 Discrete Auctions for Continuous Values Our model aims to capture iterative auctions that operate on real-valued valuations.",
                "There is a slight technical difficulty here in bridging the gap between the discrete nature of an iterative auction, and the continuous nature of the valuations.",
                "This is exactly the same problem as in modeling a simple English auction.",
                "There are three standard formal ways to model it: 1.",
                "Model the auction as a continuous process and study its trajectory in time.",
                "For example, the so-called Japanese auction is basically a continuous model of an English model.13 2.",
                "Model the auction as discrete and the valuations as continuously valued.",
                "In this case we introduce a parameter and usually require the auction to produce results that are -close to optimal. 3.",
                "Model the valuations as discrete.",
                "In this case we will assume that all valuations are integer multiples of some small fixed quantity δ, e.g., 1 penny.",
                "All communication in this case is then naturally finite.",
                "In this paper we use the latter formulation and assume that all values are multiples of some δ.",
                "Thus, in some parts of the paper we assume without loss of generality that δ = 1, hence all valuations are integral.",
                "Almost all (if not all) of our results can be translated to the other two models with little effort. 3.2 Valuations A single auctioneer is selling m indivisible non-homogeneous items in a single auction, and let M be the set of these 13 Another similar model is the moving knives model in the cake-cutting literature. 34 items and N be the set of bidders.",
                "Each one of the n bidders in the auction has a valuation function vi : 2m → {0, δ, 2δ, ..., L}, where for every bundle of items S ⊆ M, vi(S) denotes the value of bidder i for the bundle S and is a multiple of δ in the range 0...L. We will sometimes denote the number of bits needed to represent such values in the range 0...L by t = log L. We assume free disposal, i.e., S ⊆ T implies vi(S) ≤ vi(T) and that vi(∅) = 0 for all bidders.",
                "We will mention the following classes of valuations: • A valuation is called sub-modular if for all sets of items A and B we have that v(A ∪ B) + v(A ∩ B) ≤ v(A) + v(B). • A valuation is called super-additive if for all disjoint sets of items A and B we have that v(A∪B) ≥ v(A)+ v(B). • A valuation is called a k-bundle XOR if it can be represented as a XOR combination of at most k atomic bids [30], i.e., if there are at most k bundles Si and prices pi such that for all S, v(S) = maxi|S⊇Si pi.",
                "Such valuations will be denoted by v = (S1 : p1) ⊕ (S2 : p2) ⊕ . . . ⊕ (Sk : pk).14 3.3 Iterative Auctions The auctioneer sets up a protocol (equivalently an algorithm), where at each stage of the protocol some information q - termed the query - is sent to some bidder i, and then bidder i replies with some reply that depends on the query as well as on his own valuation.",
                "In this paper, we assume that we have complete control over the bidders behavior, and thus the protocol also defines a reply function ri(q, vi) that specifies bidder is reply to query q.",
                "The protocol may be adaptive: the query value as well as the queried bidder may depend on the replies received for past queries.",
                "At the end of the protocol, an allocation S1...Sn must be declared, where Si ∩ Sj = ∅ for i = j.",
                "We say that the auction finds an optimal allocation if it finds the allocation that maximizes the social welfareP i vi(Si).",
                "We say that it finds a c-approximation if P i vi(Si) ≥ P i vi(Ti)/c where T1...Tn is an optimal allocation.",
                "The running time of the auction on a given instance of the bidders valuations is the total number of queries made on this instance.",
                "The running time of a protocol is the worst case cost over all instances.",
                "Note that we impose no computational limitations on the protocol or on the players.15 This of course only strengthens our hardness results.",
                "Yet, our positive results will not use this power and will be efficient also in the usual computational sense.",
                "Our goal will be to design computationally-efficient protocols.",
                "We will deem a protocol computationally-efficient if its cost is polynomial in the relevant parameters: the number of bidders n, the number of items m, and t = log L, where L is the largest possible value of a bundle.",
                "However, when we discuss ascending-price auctions and their variants, a computationally-efficient protocol will be required to be 14 For example, v = (abcd : 5) ⊕ (ab : 3) ⊕ (c : 4) denotes the XOR valuation with the terms abcd, ab, c and prices 5, 3, 4 respectively.",
                "For this valuation, v(abcd) = 5, v(abd) = 3, v(abc) = 4. 15 The running time really measures communication costs and not computational running time. pseudo-polynomial, i.e., it should ask a number of queries which is polynomial in m, n and L δ .",
                "This is because that ascending auctions can usually not achieve such running times (consider even the English auction on a single item).16 Note that all of our results give concrete bounds, where the dependence on the parameters is given explicitly; we use the standard big-Oh notation just as a shorthand.",
                "We say than an auction elicits some class V of valuations, if it determines the optimal allocation for any profile of valuations drawn from V ; We say that an auction fully elicits some class of valuations V , if it can fully learn any single valuation v ∈ V (i.e., learn v(S) for every S). 3.4 Demand Queries and Ascending Auctions Most of the paper will be concerned with a common special case of iterative auctions that we term demand auctions.",
                "In such auctions, the queries that are sent to bidders are demand queries: the query specifies a price p(S) ∈ + for each bundle S. The reply of bidder i is simply the set most desired - demanded - under these prices.",
                "Formally, a set S that maximizes vi(S) − p(S).",
                "It may happen that more than one set S maximizes this value.",
                "In which case, ties are broken according to some fixed tie-breaking rule, e.g., the lexicographically first such set is returned.",
                "All of our results hold for any fixed tie-breaking rule.",
                "Ascending auctions are iterative auctions with non-decreasing prices: Definition 1.",
                "In an ascending auction, the prices in the queries to the same bidder can only increase in time.",
                "Formally, let p be a query made for bidder i, and q be a query made for bidder i at a later stage in the protocol.",
                "Then for all sets S, q(S) ≥ p(S).",
                "A similar variant, which we also study and that is also common in real life, is descending auctions, in which prices can only decrease in time.",
                "Note that the term ascending auction refers to an auction with a single ascending trajectory of prices.",
                "It may be useful to define multi-trajectory ascending auctions, in which the prices maybe reset to zero a number of times (see, e.g., [4]).",
                "We consider two main restrictions on the types of allowed demand queries: Definition 2.",
                "Item Prices: The prices in each query are given by prices pj for each item j.",
                "The price of a set S is additive: p(S) = P j∈S pj.",
                "Definition 3.",
                "Anonymous prices: The prices seen by the bidders at any stage in the auction are the same, i.e. whenever a query is made to some bidder, the same query is also made to all other bidders (with the prices unchanged).",
                "In auctions with non-anonymous (discriminatory) prices, each bidder i has personalized prices denoted by pi (S).17 In this paper, all auctions are anonymous unless otherwise specified.",
                "Note that even though in our model valuations are integral (or multiples of some δ), we allow the <br>demand query</br> to 16 Most of the auctions we present may be adapted to run in time polynomial in log L, using a binary-search-like procedure, losing their ascending nature. 17 Note that a non-anonymous auction can clearly be simulated by n parallel anonymous auctions. 35 use arbitrary real numbers in +.",
                "That is, we assume that the increment we use in the ascending auctions may be significantly smaller than δ.",
                "All our hardness results hold for any , even for continuous price increments.",
                "A practical issue here is how will the query be specified: in the general case, an exponential number of prices needs to be sent in a single query.",
                "Formally, this is not a problem as the model does not limit the length of queries in any way - the protocol must simply define what the prices are in terms of the replies received for previous queries.",
                "We look into this issue further in Section 4.3. 4.",
                "THE POWER OF DEMAND QUERIES In this section, we study the power of iterative auctions that use demand queries (not necessarily ascending).",
                "We start by comapring demand queries to other types of queries.",
                "Then, we discuss how well can one approximate the optimal welfare using a polynomial number of demand queries.",
                "We also initiate the study of the representation of bundle-price demand queries, and finally, we show how demand queries help solving the linear-programming relaxation of combinatorial auctions in polynomial time. 4.1 The Power of Different Types of Queries In this section we compare the power of the various types of queries defined in Section 2.",
                "We will present computationally -efficient simulations of these query types using item-price demand queries.",
                "In Section 5.1 we show that these simulations can also be done using item-price ascending auctions.",
                "Lemma 4.1.",
                "A value query can be simulated by m marginalvalue queries.",
                "A marginal-value query can be simulated by two value queries.",
                "Lemma 4.2.",
                "A value query can be simulated by mt demand queries (where t = log L is the number of bits needed to represent a single bundle value).18 As a direct corollary we get that demand auctions can always fully elicit the bidders valuations by simulating all possible 2m − 1 queries and thus elicit enough information for determining the optimal allocation.",
                "Note, however, that this elicitation may be computationally inefficient.",
                "The next lemma shows that demand queries can be exponentially more powerful than value queries.",
                "Lemma 4.3.",
                "An exponential number of value queries may be required for simulating a single <br>demand query</br>.",
                "Indirect utility queries are, however, equivalent in power to demand queries: Lemma 4.4.",
                "An indirect-utility query can be simulated by mt + 1 demand queries.",
                "A <br>demand query</br> can be simulated by m + 1 indirect-utility queries.",
                "Demand queries can also simulate relative-demand queries:19 18 Note that t bundle-price demand queries can easily simulate a value query by setting the prices of all the bundles except S (the bundle with the unknown value) to be L, and performing a binary search on the price of S. 19 Note: although in our model values are integral (our multiples of δ), we allow the query prices to be arbitrary real numV MV D IU RD V 1 2 exp exp exp MV m 1 exp exp exp D mt poly 1 mt+1 poly IU 1 2 m+1 1 poly RD - - - - 1 Figure 4: Each entry in the table specifies how many queries of this row are needed to simulate a query from the relevant column.",
                "Abbreviations: V (value query), MV (marginal-value query), D (<br>demand query</br>), IU (Indirect-utility query), RD (relative <br>demand query</br>).",
                "Lemma 4.5.",
                "Relative-demand queries can be simulated by a polynomial number of demand queries.",
                "According to our definition of relative-demand queries, they clearly cannot simulate even value queries.",
                "Figure 4 summarizes the relations between these query types. 4.2 Approximating the Social Welfare with Value and Demand Queries We know from [32] that iterative combinatorial auctions that only use a polynomial number of queries can not find an optimal allocation among general valuations and in fact can not even approximate it to within a factor better than min{n, m1/2− }.",
                "In this section we ask how well can this approximation be done using demand queries with item prices, or using the weaker value queries.",
                "We show that, using demand queries, the lower bound can be matched, while value queries can only do much worse.",
                "Figure 5 describes a polynomial-time algorithm that achieves a min(n, O( √ m)) approximation ratio.",
                "This algorithm greedily picks the bundles that maximize the bidders per-item value (using relative-demand queries, see Section 4.1).",
                "As a final step, it allocates all the items to a single bidder if it improves the social welfare (this can be checked using value queries).",
                "Since both value queries and relative-demand queries can be simulated by a polynomial number of demand queries with item prices (Lemmas 4.2 and 4.5), this algorithm can be implemented by a polynomial number of demand queries with item prices.20 Theorem 4.6.",
                "The auction described in Figure 5 can be implemented by a polynomial number of demand queries and achieves a min{n, 4 √ m}-approximation for the social welfare.",
                "We now ask how well can the optimal welfare be approximated by a polynomial number of value queries.",
                "First we note that value queries are not completely powerless: In [19] it is shown that if the m items are split into k fixed bundles of size m/k each, and these fixed bundles are auctioned as though each was indivisible, then the social welfare bers, thus we may have bundles with arbitrarily close relative demands.",
                "In this sense the simulation above is only up to any given (and the number of queries is O(log L+log 1 )).",
                "When the relative-<br>demand query</br> prices are given as rational numbers, exact simulation is implied when log is linear in the input length. 20 In the full paper [8], we observe that this algorithm can be implemented by two descending item-price auctions (where we allow removing items along the auction). 36 generated by such an auction is at least m√ k -approximation of that possible in the original auction.",
                "Notice that such an auction can be implemented by 2k − 1 value queries to each bidder - querying the value of each bundle of the fixed bundles.",
                "Thus, if we choose k = log m bundles we get an m√ log m -approximation while still using a polynomial number of queries.",
                "The following lemma shows that not much more is possible using value queries: Lemma 4.7.",
                "Any iterative auction that uses only value queries and distinguishes between k-tuples of 0/1 valuations where the optimal allocation has value 1, and those where the optimal allocation has value k requires at least 2 m k queries.",
                "Proof.",
                "Consider the following family of valuations: for every S, such that |S| > m/2, v(S) = 1, and there exists a single set T, such that for |S| ≤ m/2, v(S) = 1 iff T ⊆ S and v(S) = 0 otherwise.",
                "Now look at the behavior of the protocol when all valuations vi have T = {1...m}.",
                "Clearly in this case the value of the best allocation is 1 since no set of size m 2 or lower has non-zero value for any player.",
                "Fix the sequence of queries and answers received on this k-tuple of valuations.",
                "Now consider the k-tuple of valuations chosen at random as follows: a partition of the m items into k sets T1...Tk each of size m k each is chosen uniformly at random among all such partitions.",
                "Now consider the k-tuple of valuations from our family that correspond to this partition - clearly Ti can be allocated to i, for each i, getting a total value of k. Now look at the protocol when running on these valuations and compare its behavior to the original case.",
                "Note that the answer to a query S to player i differs between the case of Ti and the original case of T = {1...m} only if |S| ≤ m 2 and Ti ⊆ S. Since Ti is distributed uniformly among all sets of size exactly m k , we have that for any fixed query S to player i, where |S| ≤ m 2 , Pr[Ti ⊆ S] ≤ „ |S| m «|Ti| ≤ 2− m k Using the union-bound, if the original sequence of queries was of length less than 2 m k , then with positive probability none of the queries in the sequence would receive a different answer than for the original input tuple.",
                "This is forbidden since the protocol must distinguish between this case and the original case - which cannot happen if all queries receive the same answer.",
                "Hence there must have been at least 2 m k queries for the original tuple of valuations.",
                "We conclude that a polynomial time protocol that uses only value queries cannot obtain a better than O( m log m ) approximation of the welfare: Theorem 4.8.",
                "An iterative auction that uses a polynomial number of value queries cannot achieve better than O( m log m )-approximation for the social welfare.",
                "Proof.",
                "Immediate from Lemma 4.7: achieving any approximation ratio k which is asymptotically greater than m log m needs an exponential number of value queries.",
                "An Approximation Algorithm: Initialization: Let T ← M be the current items for sale.",
                "Let K ← N be the currently participating bidders.",
                "Let S∗ 1 ← ∅, ..., S∗ n ← ∅ be the provisional allocation.",
                "Repeat until T = ∅ or K = ∅: Ask each bidder i in K for the bundle Si that maximizes her per-item value, i.e., Si ∈ argmaxS⊆T vi(S) |S| .",
                "Let i be the bidder with the maximal per-item value, i.e., i ∈ argmaxi∈K vi(Si) |Si| .",
                "Set: s∗ i = si, K = K \\ i, M = M \\ Si Finally: Ask the bidders for their values vi(M) for the grand bundle.",
                "If allocating all the items to some bidder i improves the social welfare achieved so far (i.e., ∃i ∈ N such that vi(M) > P i∈N vi(S∗ i )), then allocate all items to this bidder i.",
                "Figure 5: This algorithm achieves a min{n, 4 √ m}approximation for the social welfare, which is asymptotically the best worst-case approximation possible with polynomial communication.",
                "This algorithm can be implemented with a polynomial number of demand queries. 4.3 The Representation of Bundle Prices In this section we explicitly fix the language in which bundle prices are presented to the bidders in bundle-price auctions.",
                "This language requires the algorithm to explicitly list the price of every bundle with a non-trivial price.",
                "Trivial in this context is a price that is equal to that of one of its proper subsets (which was listed explicitly).",
                "This representation is equivalent to the XOR-language for expressing valuations.",
                "Formally, each query q is given by an expression: q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl).",
                "In this representation, the price demanded for every set S is simply p(S) = max{k=1...l|Sk⊆S}pk.",
                "Definition 4.",
                "The length of the query q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl) is l. The cost of an algorithm is the sum of the lengths of the queries asked during the operation of the algorithm on the worst case input.",
                "Note that under this definition, bundle-price auctions are not necessarily stronger than item-price auctions.",
                "An itemprice query that prices each item for 1, is translated to an exponentially long bundle-price query that needs to specify the price |S| for each bundle S. But perhaps bundle-price auctions can still find optimal allocations whenever itemprice auction can, without directly simulating such queries?",
                "We show that this is not the case: indeed, when the representation length is taken into account, bundle price auctions are sometimes seriously inferior to item price auctions.",
                "Consider the following family of valuations: Each item is valued at 3, except that for some single set S, its value is a bit more: 3|S| + b, where b ∈ {0, 1, 2}.",
                "Note that an item price auction can easily find the optimal allocation between any two such valuations: Set the prices of each item to 3+ ; if the demand sets of the two players are both empty, then b = 0 for both valuations, and an arbitrary allocation is fine.",
                "If one of them is empty and the other non-empty, allocate the non-empty demand set to its bidder, and the rest to the other.",
                "If both demand sets are non-empty then, unless they form an exact partition, we need to see which b is larger, which we can do by increasing the price of a single item in each demand set. 37 We will show that any bundle-price auction that uses only the XOR-language to describe bundle prices requires an exponential cost (which includes the sum of all description lengths of prices) to find an optimal allocation between any two such valuations.",
                "Lemma 4.9.",
                "Every bundle-price auction that uses XORexpressions to denote bundle prices requires 2Ω( √ m) cost in order to find the optimal allocation among two valuations from the above family.",
                "The complication in the proof stems from the fact that using XOR-expressions, the length of the price description depends on the number of bundles whose price is strictly larger than each of their subsets - this may be significantly smaller than the number of bundles that have a non-zero price. (The proof becomes easy if we require the protocol to explicitly name every bundle with non-zero price.)",
                "We do not know of any elementary proof for this lemma (although we believe that one can be found).",
                "Instead we reduce the problem to a well known lower bound in boolean circuit complexity [18] stating that boolean circuits of depth 3 that compute the majority function on m variables require 2Ω( √ m) size. 4.4 Demand Queries and Linear Programming Consider the following linear-programming relaxation for the generalized winner-determination problem in combinatorial auctions (the primal program): Maximize X i∈N,S⊆M wi xi,S vi(S) s.t.",
                "X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M Note that the primal program has an exponential number of variables.",
                "Yet, we will be able to solve it in polynomial time using demand queries to the bidders.",
                "The solution will have a polynomial size support (non-zero values for xi,S), and thus we will be able to describe it in polynomial time.",
                "Here is its dual: Minimize X j∈M qjpj + X i∈N diui s.t. ui + X j∈S pj ≥ wivi(S) ∀i ∈ N, S ⊆ M pi ≥ 0, uj ≥ 0 ∀i ∈ M, j ∈ N Notice that the dual problem has exactly n + m variables but an exponential number of constraints.",
                "Thus, the dual can be solved using the Ellipsoid method in polynomial time - if a separation oracle can be implemented in polynomial time.",
                "Recall that a separation oracle, when given a possible solution, either confirms that it is a feasible solution, or responds with a constraint that is violated by the possible solution.",
                "We construct a separation oracle for solving the dual program, using a single <br>demand query</br> to each of the bidders.",
                "Consider a possible solution (u, p) for the dual program.",
                "We can re-write the constraints of the dual program as: ui/wi ≥ vi(S) − X j∈S pj/wi Now a <br>demand query</br> to bidder i with prices pj/wi reveals exactly the set S that maximizes the RHS of the previous inequality.",
                "Thus, in order to check whether (u, p) is feasible it suffices to (1) query each bidder i for his demand Di under the prices pj/wi; (2) check only the n constraints ui + P j∈Di pj ≥ wivi(Di) (where vi(Di) can be simulated using a polynomial sequence of demand queries as shown in Lemma 4.2).",
                "If none of these is violated then we are assured that (u, p) is feasible; otherwise we get a violated constraint.",
                "What is left to be shown is how the primal program can be solved. (Recall that the primal program has an exponential number of variables.)",
                "Since the Ellipsoid algorithm runs in polynomial time, it encounters only a polynomial number of constraints during its operation.",
                "Clearly, if all other constraints were removed from the dual program, it would still have the same solution (adding constraints can only decrease the space of feasible solutions).",
                "Now take the reduced dual where only the constraints encountered exist, and look at its dual.",
                "It will have the same solution as the original dual and hence of the original primal.",
                "However, look at the form of this dual of the reduced dual.",
                "It is just a version of the primal program with a polynomial number of variables - those corresponding to constraints that remained in the reduced dual.",
                "Thus, it can be solved in polynomial time, and this solution clearly solves the original primal program, setting all other variables to zero. 5.",
                "ITEM-PRICE ASCENDING AUCTIONS In this section we characterize the power of ascending item-price auctions.",
                "We first show that this power is not trivial: such auctions can in general elicit an exponential amount of information.",
                "On the other hand, we show that the optimal allocation cannot always be determined by a single ascending auction, and in some cases, nor by an exponential number of ascending-price trajectories.",
                "Finally, we separate the power of different models of ascending auctions. 5.1 The Power of Item-Price Ascending Auctions We first show that if small enough increments are allowed, a single ascending trajectory of item-prices can elicit preferences that cannot be elicited with polynomial communication.",
                "As mentioned, all our hardness results hold for any increment, even infinitesimal.",
                "Theorem 5.1.",
                "Some classes of valuations can be elicited by item-price ascending auctions, but cannot be elicited by a polynomial number of queries of any kind.",
                "Proof. (sketch) Consider two bidders with v(S) = 1 if |S| > n 2 , v(S) = 0 if |S| < n 2 and every S such that |S| = n 2 has an unknown value from {0, 1}.",
                "Due to [32], determining the optimal allocation here requires exponential communication in the worst case.",
                "Nevertheless, we show (see [9]) that an item-price ascending auction can do it, as long as it can use exponentially small increments.",
                "We now describe another positive result for the power of item-price ascending auctions.",
                "In section 4.1, we showed 38 v(ab) v(a) v(b) Bidder 1 2 α ∈ (0, 1) β ∈ (0, 1) Bidder 2 2 2 2 Figure 6: No item-price ascending auctions can determine the optimal allocation for this class of valuations. that a value query can be simulated with a (truly) polynomial number of item-price demand queries.",
                "Here, we show that every value query can be simulated by a (pseudo) polynomial number of ascending item-price demand queries. (In the next subsection, we show that we cannot always simulate even a pair of value queries using a single item-price ascending auction.)",
                "In the full paper (part II,[9]), we show that we can simulate other types of queries using item-price ascending auctions.",
                "Proposition 5.2.",
                "A value query can be simulated by an item-price ascending auction.",
                "This simulation requires a polynomial number of queries.",
                "Actually, the proof for Proposition 5.2 proves a stronger useful result regarding the information elicited by iterative auctions.",
                "It says that in any iterative auction in which the changes of prices are small enough in each stage (pseudocontinuous auctions), the value of all bundles demanded during the auction can be computed.",
                "The basic idea is that when the bidder moves from demanding some bundle Ti to demanding another bundle Ti+1, there is a point in which she is indifferent between these two bundles.",
                "Thus, knowing the value of some demanded bundle (e.g., the empty set) enables computing the values of all other demanded bundles.",
                "We say that an auction is pseudo-continuous, if it only uses demand queries, and in each step, the price of at most one item is changed by (for some ∈ (0, δ]) with respect to the previous query.",
                "Proposition 5.3.",
                "Consider any pseudo-continuous auction (not necessarily ascending), in which bidder i demands the empty set at least once along the auction.",
                "Then, the value of every bundle demanded by bidder i throughout the auction can be calculated at the end of the auction. 5.2 Limitations of Item-Price Ascending Auctions Although we observed that demand queries can solve any combinatorial auction problem, when the queries are restricted to be ascending, some classes of valuations cannot be elicited nor fully-elicited.",
                "An example for such class of valuations is given in Figure 6.",
                "Theorem 5.4.",
                "There are classes of valuations that cannot be elicited nor fully elicited by any item-price ascending auction.",
                "Proof.",
                "Let bidder 1 have the valuation described in the first row of Figure 6, where α and β are unknown values in (0, 1).",
                "First, we prove that this class cannot be fully elicited by a single ascending auction.",
                "Specifically, an ascending auction cannot reveal the values of both α and β.",
                "As long as pa and pb are both below 1, the bidder will always demand the whole bundle ab: her utility from ab is strictly greater than the utility from either a or b separately.",
                "For example, we show that u1(ab) > u1(a): u1(ab) = 2 − (pa + pb) = 1 − pa + 1 − pb > vA(a) − pa + 1 − pb > u1(a) Thus, in order to gain any information about α or β, the price of one of the items should become at least 1, w.l.o.g. pa ≥ 1.",
                "But then, the bundle a will not be demanded by bidder 1 throughout the auction, thus no information at all will be gained about α.",
                "Now, assume that bidder 2 is known to have the valuation described in the second row of Figure 6.",
                "The optimal allocation depends on whether α is greater than β (in bidder 1s valuation), and we proved that an ascending auction cannot determine this.",
                "The proof of the theorem above shows that for an unknown value to be revealed, the price of one item should be greater than 1, and the other price should be smaller than 1.",
                "Therefore, in a price-monotonic trajectory of prices, only one of these values can be revealed.",
                "An immediate conclusion is that this impossibility result also holds for item-price descending auctions.",
                "Since no such trajectory exists, then the same conclusion even holds for non-deterministic itemprice auctions (in which exogenous data tells us how to increase the prices).",
                "Also note that since the hardness stems from the impossibility to fully-elicit a valuation of a single bidder, this result also holds for non-anonymous ascending item-price auctions. 5.3 Limitations of Multi-Trajectory Ascending Auctions According to Theorem 5.4, no ascending item-price auction can always elicit the preferences (we prove a similar result for bundle prices in section 6).",
                "But can two ascending trajectories do the job?",
                "Or a polynomial number of ascending trajectories?",
                "We give negative answers for such suggestions.",
                "We define a k-trajectory ascending auction as a demandquery iterative auction in which the demand queries can be partitioned to k sets of queries, where the prices published in each set only increase in time.",
                "Note that we use a general definition; It allows the trajectories to run in parallel or sequentially, and to use information elicited in some trajectories for determining the future queries in other trajectories.",
                "The power of multiple-trajectory auctions can be demonstrated by the negative result of Gul and Stacchetti [17] who showed that even for an auction among substitutes valuations, an anonymous ascending item-price auction cannot compute VCG prices for all players.21 Ausubel [4] overcame this impossibility result and designed auctions that do compute VCG prices by organizing the auction as a sequence of n + 1 ascending auctions.",
                "Here, we prove that one cannot elicit XOR valuations with k terms by less than k − 1 ascending trajectories.",
                "On the other hand, we show that an XOR formula can be fully elicited by k−1 non-deterministic ascending auctions (or by k−1 deterministic ascending auctions if the auctioneer knows the atomic bundles).22 21 A recent unpublished paper by Mishra and Parkes extends this result, and shows that non-anonymous prices with bundle-prices are necessary in order that an ascending auction will end up with a universal-competitive-equilibrium (that leads to VCG payments). 22 This result actually separates the power of deterministic 39 Proposition 5.5.",
                "XOR valuations with k terms cannot be elicited (or fully elicited) by any (k-2)-trajectory itemprice ascending auction, even when the atomic bundles are known to the elicitor.",
                "However, these valuations can be elicited (and fully elicited) by (k-1)-trajectory non-deterministic non-anonymous item-price ascending auctions.",
                "Moreover, an exponential number of trajectories is required for eliciting some classes of valuations: Proposition 5.6.",
                "Elicitation and full-elicitation of some classes of valuations cannot be done by any k-trajectory itemprice ascending auction, where k = o(2m ).",
                "Proof. (sketch) Consider the following class of valuations: For |S| < m 2 , v(S) = 0 and for |S| > m 2 , v(S) = 2; every bundle S of size m 2 has some unknown value in (0, 1).",
                "We show ([9]) that a single item-price ascending auction can reveal the value of at most one bundle of size n 2 , and therefore an exponential number of ascending trajectories is needed in order to elicit such valuations.",
                "We observe that the algorithm we presented in Section 4.2 can be implemented by a polynomial number of ascending auctions (each item-price <br>demand query</br> can be considered as a separate ascending auction), and therefore a min(n, 4 √ m)-approximation can be achieved by a polynomial number of ascending auctions.",
                "We do not currently have a better upper bound or any lower bound. 5.4 Separating the Various Models of Ascending Auctions Various models for ascending auctions have been suggested in the literature.",
                "In this section, we compare the power of the different models.",
                "As mentioned, all auctions are considered anonymous and deterministic, unless specified otherwise.",
                "Ascending vs.",
                "Descending Auctions: We begin the discussion of the relation between ascending auctions and descending auctions with an example.",
                "The algorithm by Lehmann, Lehmann and Nisan [25] can be implemented by a simple item-price descending auction (see the full paper for details [9]).",
                "This algorithm guarantees at least half of the optimal efficiency for submodular valuations.",
                "However, we are not familiar with any ascending auction that guarantees a similar fraction of the efficiency.",
                "This raises a more general question: can ascending auctions solve any combinatorialauction problem that is solvable using a descending auction (and vice versa)?",
                "We give negative answers to these questions.",
                "The idea behind the proofs is that the information that the auctioneer can get for free at the beginning of each type of auction is different.23 and non-deterministic iterative auctions: our proof shows that a non-deterministic iterative auction can elicit the kterm XOR valuations with a polynomial number of demand queries, and [7] show that this elicitation must take an exponential number of demand queries. 23 In ascending auctions, the auctioneer can reveal the most valuable bundle (besides M) before she starts raising the prices, thus she can use this information for adaptively choose the subsequent queries.",
                "In descending auctions, one can easily find the bundle with the highest average per-item price, keeping all other bundles with non-positive utilities, and use this information in the adaptive price change.",
                "Proposition 5.7.",
                "There are classes that cannot be elicited (fully elicited) by ascending item-price auctions, but can be elicited (resp. fully elicited) with a descending item-price auction.",
                "Proposition 5.8.",
                "There are classes that cannot be elicited (fully elicited) by item-price descending auctions, but can be elicited (resp. fully elicited) by item-price ascending auctions.",
                "Deterministic vs. Non-Deterministic Auctions: Nondeterministic ascending auctions can be viewed as auctions where some benevolent teacher that has complete information guides the auctioneer on how she should raise the prices.",
                "That is, preference elicitation can be done by a non-deterministic ascending auction, if there is some ascending trajectory that elicits enough information for determining the optimal allocation (and verifying that it is indeed optimal).",
                "We show that non-deterministic ascending auctions are more powerful than deterministic ascending auctions: Proposition 5.9.",
                "Some classes can be elicited (fully elicited) by an item-price non-deterministic ascending auction, but cannot be elicited (resp. fully elicited) by item-price deterministic ascending auctions.",
                "Anonymous vs. Non-Anonymous Auctions: As will be shown in Section 6, the power of anonymous and nonanonymous bundle-price ascending auctions differs significantly.",
                "Here, we show that a difference also exists for itemprice ascending auctions.",
                "Proposition 5.10.",
                "Some classes cannot be elicited by anonymous item-price ascending auctions, but can be elicited by a non-anonymous item-price ascending auction.",
                "Sequential vs.",
                "Simultaneous Auctions: A non-anonymous auction is called simultaneous if at each stage, the price of some item is raised by for every bidder.",
                "The auctioneer can use the information gathered until each stage, in all the personalized trajectories, to determine the next queries.",
                "A non-anonymous auction is called sequential if the auctioneer performs an auction for each bidder separately, in sequential order.",
                "The auctioneer can determine the next query based on the information gathered in the trajectories completed so far and on the history of the current trajectory.",
                "Proposition 5.11.",
                "There are classes that cannot be elicited by simultaneous non-anonymous item-price ascending auctions, but can be elicited by a sequential non-anonymous item-price ascending auction.",
                "Adaptive vs.",
                "Oblivious Auctions: If the auctioneer determines the queries regardless of the bidders responses (i.e., the queries are predefined) we say that the auction is oblivious.",
                "Otherwise, the auction is adaptive.",
                "We prove that an adaptive behaviour of the auctioneer may be beneficial.",
                "Proposition 5.12.",
                "There are classes that cannot be elicited (fully elicited) using oblivious item-price ascending auctions, but can be elicited (resp. fully elicited) by an adaptive item-price ascending auction. 40 5.5 Preference Elicitation vs. Full Elicitation Preference elicitation and full elicitation are closely related problems.",
                "If full elicitation is easy (e.g., in polynomial time) then clearly elicitation is also easy (by a nonanonymous auction, simply by learning all the valuations separately24 ).",
                "On the other hand, there are examples where preference elicitation is considered easy but learning is hard (typically, elicitation requires smaller amount of information; some examples can be found in [7]).",
                "The tatonnement algorithms by [22, 12, 16] end up with the optimal allocation for substitutes valuations.25 We prove that we cannot fully elicit substitutes valuations (or even their sub-class of OXS valuations defined in [25]), even for a single bidder, by an item-price ascending auction (although the optimal allocation can be found by an ascending auction for any number of bidders!).",
                "Theorem 5.13.",
                "Substitute valuations cannot be fully elicited by ascending item-price auctions.",
                "Moreover, they cannot be fully elicited by any m 2 ascending trajectories (m > 3).",
                "Whether substitutes valuations have a compact representation (i.e., polynomial in the number of goods) is an important open question.",
                "As a step in this direction, we show that its sub-class of OXS valuations does have a compact representation: every OXS valuation can be represented by at most m2 values.26 Lemma 5.14.",
                "Any OXS valuation can be represented by no more than m2 values. 6.",
                "BUNDLE-PRICE ASCENDING AUCTIONS All the ascending auctions in the literature that are proved to find the optimal allocation for unrestricted valuations are non-anonymous bundle-price auctions (iBundle(3) by Parkes and Ungar [37] and the Proxy Auction by Ausubel and Milgrom [3]).",
                "Yet, several anonymous ascending auctions have been suggested (e.g., AkBA [42], [21] and iBundle(2) [37]).",
                "In this section, we prove that anonymous bundle-price ascending auctions achieve poor results in the worst-case.",
                "We also show that the family of non-anonymous bundleprice ascending auctions can run exponentially slower than simple item-price ascending auctions. 6.1 Limitations of Anonymous Bundle-Price Ascending Auctions We present a class of valuations that cannot be elicited by anonymous bundle-price ascending auctions.",
                "These valuations are described in Figure 7.",
                "The basic idea: for determining some unknown value of one bidder we must raise 24 Note that an anonymous ascending auction cannot necessarily elicit a class that can be fully elicited by an ascending auction. 25 Substitute valuations are defined, e.g., in [16].",
                "Roughly speaking, a bidder with a substitute valuation will continue demand a certain item after the price of some other items was increased.",
                "For completeness, we present in the full paper [9] a proof for the efficiency of such auctions for substitutes valuations. 26 A unit-demand valuation is an XOR valuation in which all the atomic bundles are singletons.",
                "OXS valuations can be interpreted as an aggregation (OR) of any number of unit-demand bidders.",
                "Bid. 1 v1(ac) = 2 v1(bd) = 2 v1(cd) = α ∈ (0, 1) Bid. 2 v2(ab) = 2 v2(cd) = 2 v2(bd) = β ∈ (0, 1) Figure 7: Anonymous ascending bundle-price auctions cannot determine the optimal allocation for this class of valuations. a price of a bundle that should be demanded by the other bidder in the future.",
                "Theorem 6.1.",
                "Some classes of valuations cannot be elicited by anonymous bundle-price ascending auctions.",
                "Proof.",
                "Consider a pair of XOR valuations as described in Figure 7.",
                "For finding the optimal allocation we must know which value is greater between α and β.27 However, we cannot learn the value of both α and β by a single ascending trajectory: assume w.l.o.g. that bidder 1 demands cd before bidder 2 demands bd (no information will be elicited if none of these happens).",
                "In this case, the price for bd must be greater than 1 (otherwise, bidder 1 prefers bd to cd).",
                "Thus, bidder 2 will never demand the bundle bd, and no information will be elicited about β.",
                "The valuations described in the proof of Theorem 6.1 can be easily elicited by a non-anonymous item-price ascending auction.",
                "On the other hand, the valuations in Figure 6 can be easily elicited by an anonymous bundle-price ascending auction.",
                "We conclude that the power of these two families of ascending auctions is incomparable.",
                "We strengthen the impossibility result above by showing that anonymous bundle-price auctions cannot even achieve better than a min{O(n), O( √ m)}-approximation for the social welfare.",
                "This approximation ratio can be achieved with polynomial communication, and specifically with a polynomial number of item-price demand queries.28 Theorem 6.2.",
                "An anonymous bundle-price ascending auction cannot guarantee better than a min{ n 2 , √ m 2 } approximation for the optimal welfare.",
                "Proof. (Sketch) Assume we have n bidders and n2 items for sale, and that n is prime.",
                "We construct n2 distinct bundles with the following properties: for each bidder, we define a partition Si = (Si 1, ..., Si n) of the n2 items to n bundles, such that any two bundles from different partitions intersect.",
                "In the full paper, part II [9] we show an explicit construction using the properties of linear functions over finite fields.",
                "The rest of the proof is independent of the specific construction.",
                "Using these n2 bundles we construct a hard-to-elicit class.",
                "Every bidder has an atomic bid, in his XOR valuation, for each of these n2 bundles.",
                "A bidder i has a value of 2 for any bundle Si j in his partition.",
                "For all bundles in the other partitions, he has a value of either 0 or of 1 − δ, and these values are unknown to the auctioneer.",
                "Since every pair of bundles from different partitions intersect, only one bidder can receive a bundle with a value of 2. 27 If α > β, the optimal allocation will allocate cd to bidder 1 and ab to bidder 2.",
                "Otherwise, we give bd to bidder 2 and ac to bidder 1.",
                "Note that both bidders cannot gain a value of 2 in the same allocation, due to the intersections of the high-valued bundles. 28 Note that bundle-price queries may use exponential communication, thus the lower bound of [32] does not hold. 41 Non-anonymous Bundle-Price Economically-Efficient Ascending Auctions: Initialization: All prices are initialized to zero (non-anonymous bundle prices).",
                "Repeat: - Each bidder submits a bundle that maximizes his utility under his current personalized prices. - The auctioneer calculates a provisional allocation that maximizes his revenue under the current prices. - The prices of bundles that were demanded by losing bidders are increased by .",
                "Finally: Terminate when the provisional allocation assigns to each bidder the bundle he demanded.",
                "Figure 8: Auctions from this family (denoted by NBEA auctions) are known to achieve the optimal welfare.",
                "No bidder will demand a low-valued bundle, as long as the price of one of his high-valued bundles is below 1 (and thus gain him a utility greater than 1).",
                "Therefore, for eliciting any information about the low-valued bundles, the auctioneer should first arbitrarily choose a bidder (w.l.o.g bidder 1) and raise the prices of all the bundles (S1 1 , ..., S1 n) to be greater than 1.",
                "Since the prices cannot decrease, the other bidders will clearly never demand these bundles in future stages.",
                "An adversary may choose the values such that the low values of all the bidders for the bundles not in bidder 1s partition are zero (i.e., vi(S1 j ) = 0 for every i = 1 and every j), however, allocating each bidder a different bundle from bidder 1s partition, might achieve a welfare of n+1−(n−1)δ (bidder 1s valuation is 2, and 1 − δ for all other bidders); If these bundles were wrongly allocated, only a welfare of 2 might be achieved (2 for bidder 1s high-valued bundle, 0 for all other bidders).",
                "At this point, the auctioneer cannot have any information about the identity of the bundles with the non-zero values.",
                "Therefore, an adversary can choose the values of the bundles received by bidders 2, ..., n in the final allocation to be zero.",
                "We conclude that anonymous bundleprice auctions cannot guarantee a welfare greater than 2 for this class, where the optimal welfare can be arbitrarily close to n + 1. 6.2 Bundle Prices vs.",
                "Item Prices The core of the auctions in [37, 3] is the scheme described in Figure 8 (in the spirit of [35]) for auctions with nonanonymous bundle prices.",
                "Auctions from this scheme end up with the optimal allocation for any class of valuations.",
                "We denote this family of ascending auctions as NBEA auctions29 .",
                "NBEA auctions can elicit k-term XOR valuations by a polynomial (in k) number of steps , although the elicitation of such valuations may require an exponential number of item-price queries ([7]), and item-price ascending auctions cannot do it at all (Theorem 5.4).",
                "Nevertheless, we show that NBEA auctions (and in particular, iBundle(3) and the proxy auction) are sometimes inferior to simple item-price demand auctions.",
                "This may justify the use of hybrid auctions that use both linear and non-linear prices (e.g., the clock-proxy auction [10]).",
                "We show that auctions from this 29 Non-anonymous Bundle-price economically Efficient Ascending auctions.",
                "For completeness, we give in the full paper [9] a simple proof for the efficiency (up to an ) of auctions of this scheme . family may use an exponential number of queries even for determining the optimal allocation among two bidders with additive valuations30 , where such valuations can be elicited by a simple item-price ascending auction.",
                "We actually prove this property for a wider class of auctions we call conservative auctions.",
                "We also observe that in conservative auctions, allowing the bidders to submit all the bundles in their demand sets ensures that the auction runs a polynomial number of steps - if L is not too high (but with exponential communication, of course).",
                "An ascending auction is called conservative if it is nonanonymous, uses bundle prices initialized to zero and at every stage the auctioneer can only raise prices of bundles demanded by the bidders until this stage.",
                "In addition, each bidder can only receive bundles he demanded during the auction.",
                "Note that NBEA auctions are by definition conservative.",
                "Proposition 6.3.",
                "If every bidder demands a single bundle in each step of the auction, conservative auctions may run for an exponential number of steps even for additive valuations.",
                "If the bidders are allowed to submit all the bundles in their demand sets in each step, then conservative auctions can run in a polynomial number of steps for any profile of valuations, as long as the maximal valuation L is polynomial in m, n and 1 δ .",
                "Acknowledgments: The authors thank Moshe Babaioff, Shahar Dobzinski, Ron Lavi, Daniel Lehmann, Ahuva Mualem, David Parkes, Michael Schapira and Ilya Segal for helpful discussions.",
                "Supported by grants from the Israeli Academy of Sciences and the USAIsrael Binational Science Foundation. 7.",
                "REFERENCES [1] amazon.",
                "Web Page: http://www.amazon.com. [2] ebay.",
                "Web Page: http://www.ebay.com. [3] L. M. Ausubel and P. R. Milgrom.",
                "Ascending auctions with package bidding.",
                "Frontiers of Theoretical Economics, 1:1-42, 2002. [4] Lawrence Ausubel.",
                "An efficient dynamic auction for heterogeneous commodities, 2000.",
                "Working paper, University of Maryland. [5] Yair Bartal, Rica Gonen, and Noam Nisan.",
                "Incentive compatible multi unit combinatorial auctions.",
                "In TARK 03, 2003. [6] Alejandro Bertelsen.",
                "Substitutes valuations and m -concavity.",
                "M.Sc.",
                "Thesis, The Hebrew University of Jerusalem, 2005. [7] Avrim Blum, Jeffrey C. Jackson, Tuomas Sandholm, and Martin A. Zinkevich.",
                "Preference elicitation and query learning.",
                "Journal of Machine Learning Research, 5:649-667, 2004. [8] Liad Blumrosen and Noam Nisan.",
                "On the computational power of iterative auctions I: demand queries.",
                "Working paper, The Hebrew University of 30 Valuations are called additive if for any disjoint bundles A and B, v(A ∪ B) = v(A) + v(B).",
                "Additive valuations are both sub-additive and super-additive and are determined by the m values assigned for the singletons. 42 Jerusalem.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [9] Liad Blumrosen and Noam Nisan.",
                "On the computational power of iterative auctions II: ascending auctions.",
                "Working paper, The Hebrew University of Jerusalem.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [10] P. Cramton, L.M.",
                "Ausubel, and P.R.",
                "Milgrom.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 5.",
                "The Clock-Proxy Auction: A Practical Combinatorial Auction Design.",
                "MIT Press.",
                "Forthcoming, 2005. [11] P. Cramton, Y. Shoham, and R. Steinberg (Editors).",
                "Combinatorial Auctions.",
                "MIT Press.",
                "Forthcoming, 2005. [12] G. Demange, D. Gale, and M. Sotomayor.",
                "Multi-item auctions.",
                "Journal of Political Economy, 94:863-872, 1986. [13] Shahar Dobzinski, Noam Nisan, and Michael Schapira.",
                "Approximation algorithms for cas with complement-free bidders.",
                "In The 37th ACM symposium on theory of computing (STOC)., 2005. [14] Shahar Dobzinski and Michael Schapira.",
                "Optimal upper and lower approximation bounds for k-duplicates combinatorial auctions.",
                "Working paper, the Hebrew University. [15] Combinatorial bidding conference.",
                "Web Page: http://wireless.fcc.gov/auctions/conferences/combin2003. [16] Faruk Gul and Ennio Stacchetti.",
                "Walrasian equilibrium with gross substitutes.",
                "Journal of Economic Theory, 87:95 - 124, 1999. [17] Faruk Gul and Ennio Stacchetti.",
                "The english auction with differentiated commodities.",
                "Journal of Economic Theory, 92(3):66 - 95, 2000. [18] J. Hastad.",
                "Almost optimal lower bounds for small depth circuits.",
                "In 18th STOC, pages 6-20, 1986. [19] Ron Holzman, Noa Kfir-Dahav, Dov Monderer, and Moshe Tennenholtz.",
                "Bundling equilibrium in combinatrial auctions.",
                "Games and Economic Behavior, 47:104-123, 2004. [20] H. Karloff.",
                "Linear Programming.",
                "Birkh¨auser Verlag, 1991. [21] Frank Kelly and Richard Steinberg.",
                "A combinatorial auction with multiple winners for universal service.",
                "Management Science, 46:586-596, 2000. [22] A.S. Kelso and V.P.",
                "Crawford.",
                "Job matching, coalition formation, and gross substitute.",
                "Econometrica, 50:1483-1504, 1982. [23] Subhash Khot, Richard J. Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Inapproximability results for combinatorial auctions with submodular utility functions.",
                "In Working paper., 2004. [24] Sebastien Lahaie and David C. Parkes.",
                "Applying learning algorithms to preference elicitation.",
                "In EC 04. [25] Benny Lehmann, Daniel Lehmann, and Noam Nisan.",
                "Combinatorial auctions with decreasing marginal utilities.",
                "In ACM conference on electronic commerce.",
                "To appear, Games and Economic Behaviour., 2001. [26] D. Lehmann, L. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "JACM, 49(5):577-602, Sept. 2002. [27] A. Mas-Collel, W. Whinston, and J.",
                "Green.",
                "Microeconomic Theory.",
                "Oxford university press, 1995. [28] Debasis Mishra and David Parkes.",
                "Ascending price vickrey auctions using primal-dual algorithms., 2004.",
                "Working paper, Harvard University. [29] Noam Nisan.",
                "The communication complexity of approximate set packing and covering.",
                "In ICALP 2002. [30] Noam Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In ACM Conference on Electronic Commerce, 2000. [31] Noam Nisan.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 1.",
                "Bidding Languages.",
                "MIT Press.",
                "Forthcoming, 2005. [32] Noam Nisan and Ilya Segal.",
                "The communication requirements of efficient allocations and supporting prices, 2003.",
                "Working paper.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html Forthcoming in the Journal of Economic Theory. [33] Noam Nisan and Ilya Segal.",
                "Exponential communication inefficiency of demand queries, 2004.",
                "Working paper.",
                "Available from http://www.stanford.edu/ isegal/queries1.pdf. [34] D. C. Parkes and L. H. Ungar.",
                "An ascending-price generalized vickrey auction.",
                "Tech.",
                "Rep., Harvard University, 2002. [35] David Parkes.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 3.",
                "Iterative Combinatorial Auctions.",
                "MIT Press.",
                "Forthcoming, 2005. [36] David C. Parkes.",
                "Iterative combinatorial auctions: Achieving economic and computational efficiency.",
                "Ph.D. Thesis, Department of Computer and Information Science, University of Pennsylvania., 2001. [37] David C. Parkes and Lyle H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In AAAI/IAAI, pages 74-81, 2000. [38] Ariel Rubinstein.",
                "Why are certain properties of binary relations relatively more common in natural languages.",
                "Econometrica, 64:343-356, 1996. [39] Tuomas Sandholm.",
                "Algorithm for optimal winner determination in combinatorial auctions.",
                "In Artificial Intelligence, volume 135, pages 1-54, 2002. [40] P. Santi, V. Conitzer, and T. Sandholm.",
                "Towards a characterization of polynomial preference elicitation with value queries in combinatorial auctions.",
                "In The 17th Annual Conference on Learning Theory, 2004. [41] Ilya Segal.",
                "The communication requirements of social choice rules and supporting budget sets, 2004.",
                "Working paper.",
                "Available from http://www.stanford.edu/ isegal/rules.pdf. [42] P.R.",
                "Wurman and M.P.",
                "Wellman.",
                "Akba: A progressive, anonymous-price combinatorial auction.",
                "In Second ACM Conference on Electronic Commerce, 2000. [43] Martin A. Zinkevich, Avrim Blum, and Tuomas Sandholm.",
                "On polynomial-time preference elicitation with value queries.",
                "In ACM Conference on Electronic Commerce, 2003. 43"
            ],
            "original_annotated_samples": [
                "Effectively, such an iterative auction accesses the bidders preferences by repeatedly making the following type of <br>demand query</br> to bidders: Query to bidder i: a vector of bundle prices p = {p(S)}S⊆M ; Answer: a bundle of items S ⊆ M that maximizes vi(S) − p(S)..",
                "<br>demand query</br> (with item prices): The auctioneer presents a vector of item prices p1...pm; the bidder reports his demand under these prices, i.e., some set S that maximizes v(S) − P i∈S pi.6 6 A tie breaking rule should be specified.",
                "Relative-<br>demand query</br>: the auctioneer presents a set of non-zero prices p1...pm, and the bidder reports the bundle that maximizes his value per unit of money, i.e., some set that maximizes v(S)P i∈S pi .8 Theorem: Each of these queries can be efficiently (i.e., in time polynomial in n, m, and the number of bits of precision t needed to represent a single value vi(S)) simulated by a sequence of demand queries with item prices.",
                "We prove that exponentially many value queries may be needed in order to simulate a single <br>demand query</br>.",
                "Two separate obstacles are known: In [32], a lower bound of min(n, m1/2− ), for any fixed > 0, was shown for the approximation factor apply for any fixed tie breaking rule. 7 This is exactly the utility achieved by the bundle which would be returned in a <br>demand query</br> with the same prices."
            ],
            "translated_annotated_samples": [
                "Efectivamente, una subasta iterativa de este tipo accede a las preferencias de los postores haciendo repetidamente el siguiente tipo de <br>consulta de demanda</br> a los postores: Consulta al postor i: un vector de precios de paquetes p = {p(S)}S⊆M; Respuesta: un paquete de artículos S ⊆ M que maximiza vi(S) − p(S).",
                "Consulta de demanda (con precios de los artículos): El subastador presenta un vector de precios de los artículos p1...pm; el postor informa su demanda bajo estos precios, es decir, algún conjunto S que maximiza v(S) − Σ i∈S pi. Se debe especificar una regla de desempate.",
                "Consulta de demanda relativa: el subastador presenta un conjunto de precios no nulos p1...pm, y el postor informa el conjunto que maximiza su valor por unidad de dinero, es decir, algún conjunto que maximiza v(S)P i∈S pi. Teorema: Cada una de estas consultas puede ser simulada eficientemente (es decir, en tiempo polinómico en n, m y el número de bits de precisión t necesarios para representar un único valor vi(S)) por una secuencia de consultas de demanda con precios de artículos.",
                "Demostramos que puede ser necesario realizar exponencialmente muchas consultas de valor para simular una sola <br>consulta de demanda</br>.",
                "Se conocen dos obstáculos separados: En [32], se demostró una cota inferior de min(n, m1/2− ), para cualquier fijo > 0, para el factor de aproximación aplicable para cualquier regla de desempate fija. Esto es exactamente la utilidad lograda por el paquete que se devolvería en una <br>consulta de demanda</br> con los mismos precios."
            ],
            "translated_text": "En el Poder Computacional de Subastas Iterativas∗ [Resumen Extendido] Liad Blumrosen Escuela de Ingeniería e Informática Universidad Hebrea de Jerusalén Jerusalén, Israel liad@cs.huji.ac.il Noam Nisan Escuela de Ingeniería e Informática Universidad Hebrea de Jerusalén Jerusalén, Israel noam@cs.huji.ac.il RESUMEN Nos embarcamos en un análisis sistemático del poder y limitaciones de las subastas combinatorias iterativas. La mayoría de las subastas combinatorias iterativas existentes se basan en sugerir precios repetidamente para paquetes de artículos y consultar a los postores sobre su demanda bajo estos precios. Demostramos un gran número de resultados que muestran los límites de lo que se puede lograr mediante subastas de este tipo. Primero nos enfocamos en subastas que utilizan un número polinomial de consultas de demanda, y luego analizamos el poder de diferentes tipos de subastas de precio ascendente. Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía Términos Generales Algoritmos, Economía, Teoría 1. Las subastas combinatorias han recibido recientemente mucha atención. En una subasta combinatoria, un conjunto M de m artículos no idénticos se venden en una sola subasta a n postores competidores. Los postores tienen preferencias con respecto a los lotes de artículos que pueden recibir. Las preferencias del postor i están especificadas por una función de valoración vi: 2M → R+, donde vi(S) denota el valor que el postor i asigna a ganar el conjunto de artículos S. Suponemos disposición libre, es decir, que los vi son monótonos no decrecientes. El objetivo habitual del subastador es optimizar el bienestar social P i vi(Si), donde la asignación S1...Sn debe ser una partición de los artículos. Las aplicaciones incluyen muchos problemas complejos de asignación de recursos y, de hecho, las subastas combinatorias pueden ser vistas como la abstracción común de muchos problemas complejos de asignación de recursos. Las subastas combinatorias enfrentan dificultades económicas y computacionales y son un problema central en la frontera recientemente activa de la teoría económica y la informática. Un libro próximo [11] aborda muchos de los problemas involucrados en el diseño e implementación de subastas combinatorias. El diseño de una subasta combinatoria implica muchas consideraciones. En este artículo nos enfocamos en un solo tema central: la comunicación entre los oferentes y el mecanismo de asignación - la obtención de preferencias. Transferir toda la información sobre las preferencias de los licitadores requiere una cantidad de comunicación inasumible (exponencial en m). Por lo tanto, las subastas de revelación directa en las que los postores simplemente declaran sus preferencias al mecanismo solo son prácticas para tamaños de subasta muy pequeños o para familias muy limitadas de preferencias de postores. Por lo tanto, hemos visto una multitud de subastas iterativas sugeridas en las que el protocolo de subasta interactúa repetidamente con los diferentes postores, con el objetivo de obtener de manera adaptativa suficiente información sobre las preferencias de los postores para poder encontrar una asignación buena (óptima o cercana a óptima). La mayoría de las subastas iterativas sugeridas proceden manteniendo precios temporales para los lotes de artículos y consultando repetidamente a los postores sobre sus preferencias entre los lotes bajo el conjunto actual de precios, y luego actualizando el conjunto de precios de los lotes según las respuestas recibidas (por ejemplo, [22, 12, 17, 37, 3]). Efectivamente, una subasta iterativa de este tipo accede a las preferencias de los postores haciendo repetidamente el siguiente tipo de <br>consulta de demanda</br> a los postores: Consulta al postor i: un vector de precios de paquetes p = {p(S)}S⊆M; Respuesta: un paquete de artículos S ⊆ M que maximiza vi(S) − p(S). Estos tipos de consultas son muy naturales en un entorno económico, ya que capturan las preferencias reveladas de los postores. Algunas subastas, llamadas subastas de precio por artículo o de precio lineal, especifican un precio pi para cada artículo, y el precio de cualquier conjunto dado S siempre es lineal, p(S) = Σ i∈S pi. Otras subastas, llamadas subastas de precio por paquete, permiten especificar precios arbitrarios (no lineales) p(S) para los paquetes. Otra diferenciación importante entre los modelos de subastas iterativas se basa en si utilizan precios anónimos o no anónimos: En algunas subastas, los precios que se presentan a los postores son siempre los mismos (precios anónimos). En otras subastas (no anónimas), diferentes postores pueden enfrentar diferentes vectores de precios (discriminatorios). En las subastas de precio ascendente, obligar a que los precios sean anónimos puede ser una restricción significativa. En este artículo, nos embarcamos en un análisis sistemático del poder computacional de las subastas iterativas basadas en consultas de demanda. No buscamos presentar subastas para uso práctico, sino más bien entender las limitaciones y posibilidades de este tipo de subastas. En la primera parte de este documento, nuestra pregunta principal es ¿qué se puede hacer utilizando un número polinómico de este tipo de consultas? Es decir, polinomial en los parámetros principales del problema: n, m y el número de bits t necesarios para representar un único valor vi(S). Ten en cuenta que desde un punto de vista algorítmico estamos hablando de algoritmos de tiempo sublineal: el tamaño de la entrada aquí es realmente n(2m − 1) números, las descripciones de las funciones de valoración de todos los postores. Hay dos aspectos de eficiencia computacional en estos contextos: el primero es la comunicación con los postores, es decir, la cantidad de consultas realizadas, y el segundo es la usual tratabilidad computacional. Nuestros límites inferiores dependerán solo del número de consultas y se mantendrán independientemente de cualquier suposición computacional como P = NP. Nuestros límites superiores siempre serán computacionalmente eficientes tanto en términos del número de consultas como en términos de computación regular. Como se mencionó, este artículo se centra en el único aspecto de la obtención de preferencias y en sus consecuencias computacionales, sin abordar cuestiones de incentivos. Esto refuerza nuestros límites inferiores, pero significa que los límites superiores también requieren evaluación desde esta perspectiva antes de ser utilizados en cualquier subasta combinatoria real. La segunda parte de este documento estudia el poder de las subastas de precio ascendente. Las subastas ascendentes son subastas iterativas donde los precios publicados no pueden disminuir con el tiempo. En este trabajo, intentamos analizar sistemáticamente qué significan las diferencias entre varios modelos de subastas ascendentes. Intentamos responder a las siguientes preguntas: (i) ¿Qué modelos de subastas ascendentes pueden encontrar la asignación óptima, y para qué clases de valoraciones? (ii) En casos donde la asignación óptima no puede ser determinada por subastas ascendentes, ¿qué tan bien pueden estas subastas aproximar el bienestar social? (iii) ¿Cómo se comparan los diferentes modelos de subastas ascendentes? ¿Son algunos modelos computacionalmente más fuertes que otros? Las subastas ascendentes han sido ampliamente estudiadas en la literatura (ver la encuesta reciente de Parkes [35]). La mayor parte de este trabajo presentó límites superiores, es decir, mecanismos propuestos con precios ascendentes y analizó sus propiedades. Un resultado que se acerca más al nuestro es el de Gul y Stacchetti [17], quienes demostraron que ninguna subasta de precio ascendente de artículo puede siempre determinar los precios VCG, incluso para valoraciones de sustitutos. Nuestro marco es más general que la línea tradicional de investigación que se concentra en la asignación final y observamos, sin embargo, que alguna propiedad de incentivo débil viene de forma gratuita en las subastas de consulta de demanda, ya que los jugadores miopes responderán todas las consultas de demanda de manera veraz. También observamos que en algunos casos (¡pero no siempre!) los problemas de incentivos pueden ser manejados de forma ortogonal a los problemas de obtención de preferencias, por ejemplo, utilizando precios de Vickrey-Clarke-Groves (VCG) (por ejemplo, [4, 34]). Además, discutimos este resultado en la Sección 5.3. Subastas iterativas Subastas de demanda Subastas de precio de artículo Subastas de precio anónimo Subastas ascendentes 1 2 3 4 5 6 97 8 10 Figura 1: El diagrama clasifica las siguientes subastas según sus propiedades: (1) La adaptación [12] para la subasta de Kelso & Crawford [22]. (2) La Subasta de Proxy [3] de Ausubel & Milgrom. (3) iBundle(3) de Parkes & Ungar [34]. (4) iBundle(2) de Parkes & Ungar [37]. (5) Nuestra adaptación descendente para la aproximación de 2 para valoraciones submodulares por [25] (ver Subsección 5.4). (6) La subasta de Ausubel [4] para valoraciones de sustitutos. (7) La adaptación de Nisan & Segal [32] de la aproximación O( √ m) por [26]. (8) La subasta de artículo duplicado por [5]. (9) Subasta para fórmulas de Leer-Una-Vez por [43]. (10) La Subasta AkBA por Wurman & Wellman [42]. pagos y en particular, en alcanzar equilibrios walrasianos o equilibrios competitivos. Se sabe que existe un equilibrio walrasiano en el caso de las valoraciones de sustitutos, y se sabe que es imposible para cualquier clase más amplia de valoraciones [16]. Esto no descarta otras asignaciones mediante subastas ascendentes: en este documento consideramos las subastas como un proceso computacional donde el resultado, tanto la asignación como los pagos, pueden determinarse según todos los datos recopilados a lo largo de la subasta; Este marco general refuerza nuestros resultados negativos. Encontramos el estudio de las subastas ascendentes atractivo por diversas razones. Primero, las subastas ascendentes son ampliamente utilizadas en muchos contextos de la vida real, desde las subastas de espectro de la FCC hasta casi cualquier sitio web de comercio electrónico (por ejemplo, [2, 1]). De hecho, esta es quizás la forma más directa de vender artículos: preguntar a los postores qué les gustaría comprar a ciertos precios, y aumentar los precios de los productos con alta demanda. Las subastas ascendentes también se consideran más intuitivas para muchos postores, y se cree que aumentan la confianza de los postores en el subastador, ya que ven el resultado que emerge gradualmente de las respuestas de los postores. Las subastas ascendentes también tienen otras propiedades económicas deseadas, por ejemplo, implican una revelación de información menor (considere, por ejemplo, las subastas inglesas frente a las subastas de segundo precio sellado). 1.1 Trabajo Existente Muchos mecanismos de subasta combinatoria iterativos dependen de consultas de demanda (ver la encuesta en [35]). La Figura 1 muestra un equilibrio walrasiano como un vector de precios de los artículos para los cuales todos los artículos se venden cuando cada postor recibe un conjunto en su conjunto de demanda. En algunos diseños de subasta recientes (por ejemplo, [4, 28]), los pagos no son necesariamente los precios finales de las subastas. Familia de valoración Límite superior Referencia Límite inferior Referencia General min(n, O( √ m)) [26], Sección 4.2 min(n, m1/2− ) [32] Sustitutos 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subaditiva O(logm) [13] 2 [13] k-duplicados O(m1/k+1 ) [14] O(m1/k+1 ) [14] Adquisiciones ln m [32] (log m)/2 [29, 32] Figura 2: Los mejores factores de aproximación actualmente alcanzables por subastas combinatorias computacionalmente eficientes, para varias clases de valoraciones. Todos los límites inferiores en la tabla se aplican a todas las subastas iterativas (excepto la marcada con *); todos los límites superiores en la tabla se logran con consultas de demanda de precio de artículo. Categoriza las clases básicas de subastas implicadas por combinaciones de las propiedades anteriores y clasifica algunas de las subastas propuestas en la literatura de acuerdo con esta clasificación. Para nuestros propósitos, dos familias de estas subastas sirven como los principales puntos de partida motivadores: la primera son las subastas de precio de artículo ascendente de [22, 17] que con eficiencia computacional encuentran una asignación óptima entre valoraciones de sustitutos (brutos), y la segunda son las subastas de precio de paquete ascendente de [37, 3] que encuentran una asignación óptima entre valoraciones generales, pero no necesariamente con eficiencia computacional. El límite inferior principal en esta área, debido a [32], establece que, de hecho, debido a los requisitos de comunicación inherentes, no es posible que ninguna subasta iterativa encuentre la asignación óptima entre valoraciones generales con un número subexponencial de consultas. Un límite inferior exponencial similar fue demostrado en [32] también para aproximar de manera óptima la asignación dentro de un factor de m1/2−. Se conocen varios límites inferiores y superiores para la aproximación de algunas clases naturales de valoraciones, los cuales se resumen en la Figura 2. En [32], también se muestra la universalidad de las consultas de demanda: cualquier protocolo de comunicación no determinista para encontrar una asignación que optimice el bienestar social puede convertirse en uno que solo utilice consultas de demanda (con precios de paquetes). En [41] esto también se generalizó a protocolos no deterministas para encontrar asignaciones que satisfacen otros tipos naturales de requisitos económicos (por ejemplo, eficiencia social aproximada, ausencia de envidia). Sin embargo, en [33] se demostró que esta completitud de las consultas de demanda solo se cumple en el entorno no determinista, mientras que en el entorno determinista habitual, las consultas de demanda (incluso con precios de paquetes) pueden ser exponencialmente más débiles que la comunicación general. Las subastas de precio por paquete son una generalización de las subastas de precio por artículo (más naturales e intuitivas). Se sabe que las subastas de precio de artículo pueden ser exponencialmente más débiles: un buen ejemplo es el caso de valoraciones que son un XOR de k paquetes, donde k es pequeño (digamos, polinómico). Lahaie y Parkes [24] muestran una subasta de precio de paquete económicamente eficiente que utiliza un número polinómico de consultas siempre que k sea polinómico. Por el contrario, [7] muestra que existen valoraciones que son XORs de k = √ m paquetes, de tal manera que cualquier subasta de precio de artículo que encuentre una asignación óptima entre ellos requiere un número exponencial de consultas. Estos resultados forman parte de una línea reciente de investigación ([7, 43, 24, 40]) que estudia el problema de la obtención de preferencias en subastas combinatorias y su relación con el problema de obtención completo (es decir, aprender las valoraciones exactas de los postores). Estas son valoraciones donde los postores tienen valores para k paquetes específicos, y el valor de cada conjunto es el valor máximo de uno de estos paquetes que contiene. Estos documentos adaptan métodos de la teoría del aprendizaje automático al entorno de subastas combinatorias. El problema de la obtención de preferencias y el problema de la obtención completa se relacionan con un problema bien estudiado en microeconomía conocido como el problema de integrabilidad (ver, por ejemplo, [27]). Este problema estudia si y cuándo se puede derivar la función de utilidad de un consumidor a partir de su función de demanda. Organización del documento: Debido al relativamente gran número de resultados que presentamos, comenzamos con una revisión de nuestros nuevos resultados en la Sección 2. Después de describir nuestro modelo formal en la Sección 3, presentamos nuestros resultados sobre el poder de las consultas de demanda en la Sección 4. Luego, describimos el poder de las subastas ascendentes de precio de artículo (Sección 5) y las subastas ascendentes de precio de paquete (Sección 6). Los lectores que estén principalmente interesados en la discusión autocontenida de las subastas ascendentes pueden omitir la Sección 4. Las pruebas faltantes de la Sección 4 se pueden encontrar en la parte I del artículo completo ([8]). Las pruebas faltantes de las Secciones 5 y 6 se pueden encontrar en la parte II del artículo completo ([9]). 2. Una encuesta de nuestros resultados Nuestro análisis sistemático está compuesto por la combinación de un número bastante grande de resultados que caracterizan el poder y las limitaciones de varias clases de subastas. En esta sección, presentaremos una exposición describiendo nuestros nuevos resultados. Primero discutimos el poder de las subastas iterativas de demanda-consulta, y luego dirigimos nuestra atención a las subastas ascendentes. La Figura 3 resume algunos de nuestros principales resultados. 2.1 Comparación de consultas de demanda de tipos de consultas Preguntamos primero qué otros tipos naturales de consultas podríamos imaginar que las subastas iterativas utilicen. Aquí hay una lista de tales consultas que son naturales, han sido utilizadas en la literatura, o que encontramos útiles. 1. Consulta de valor: El subastador presenta un paquete S, el postor informa su valor v(S) para este paquete. 2. Consulta de valor marginal: El subastador presenta un paquete A y un artículo j, el postor informa cuánto está dispuesto a pagar por j, dado que ya posee A, es decir, v(j|A) = v(A ∪ {j}) − v(A). 3. Consulta de demanda (con precios de los artículos): El subastador presenta un vector de precios de los artículos p1...pm; el postor informa su demanda bajo estos precios, es decir, algún conjunto S que maximiza v(S) − Σ i∈S pi. Se debe especificar una regla de desempate. ¿Todos nuestros resultados 31 Restricción de Comunicación pueden encontrar una asignación óptima? Límite superior para el bienestar aprox. Límite inferior para el bienestar aproximado. Consultas de demanda de precio de artículo Sí 1 1 Poli. Comunicación No [32] min(n, O(m1/2 )) [26] min(n, m1/2− ) [32] Poli. Consultas de demanda de precio de artículo No [32] min(n, O(m1/2 )) min(n, m1/2− ) [32] Poli. Este documento estudia la eficiencia económica de subastas que siguen ciertas restricciones de comunicación. Para cada clase de subastas, la tabla muestra si se puede lograr la asignación óptima, o en su defecto, qué tan bien se puede aproximar (tanto los límites superiores como los límites inferiores). Los nuevos resultados están resaltados. Abreviaturas: Poly. (número/tamaño polinomial), AA (subastas ascendentes). - significa que actualmente no se conoce nada excepto soluciones triviales. 4. Consulta de utilidad indirecta: El subastador presenta un conjunto de precios de los artículos p1...pm, y el postor responde con su utilidad indirecta bajo estos precios, es decir, la utilidad más alta que puede lograr de un conjunto bajo estos precios: maxS⊆M (v(S) − P i∈S pi). Consulta de demanda relativa: el subastador presenta un conjunto de precios no nulos p1...pm, y el postor informa el conjunto que maximiza su valor por unidad de dinero, es decir, algún conjunto que maximiza v(S)P i∈S pi. Teorema: Cada una de estas consultas puede ser simulada eficientemente (es decir, en tiempo polinómico en n, m y el número de bits de precisión t necesarios para representar un único valor vi(S)) por una secuencia de consultas de demanda con precios de artículos. En particular, esto muestra que las consultas de demanda pueden obtener toda la información sobre una valoración al simular todas las consultas de valor de 2m −1. También observamos que las consultas de valor y las consultas de valor marginal pueden simularse mutuamente en tiempo polinómico y que las consultas de demanda y las consultas de utilidad indirecta también pueden simularse mutuamente en tiempo polinómico. Demostramos que puede ser necesario realizar exponencialmente muchas consultas de valor para simular una sola <br>consulta de demanda</br>. Es interesante notar que para la clase restringida de valoraciones sustitutivas, las consultas de demanda pueden ser simuladas por un número polinomial de consultas de valor [6]. Aproximación del bienestar La siguiente pregunta que nos hacemos es ¿qué tan bien puede aproximar una subasta computacionalmente eficiente que solo utiliza consultas de demanda la asignación óptima? Se conocen dos obstáculos separados: En [32], se demostró una cota inferior de min(n, m1/2− ), para cualquier fijo > 0, para el factor de aproximación aplicable para cualquier regla de desempate fija. Esto es exactamente la utilidad lograda por el paquete que se devolvería en una <br>consulta de demanda</br> con los mismos precios. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "bound": {
            "translated_key": "límite inferior",
            "is_in_text": true,
            "original_annotated_sentences": [
                "On the Computational Power of Iterative Auctions∗ [Extended Abstract] Liad Blumrosen School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel liad@cs.huji.ac.il Noam Nisan School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel noam@cs.huji.ac.il ABSTRACT We embark on a systematic analysis of the power and limitations of iterative combinatorial auctions.",
                "Most existing iterative combinatorial auctions are based on repeatedly suggesting prices for bundles of items, and querying the bidders for their demand under these prices.",
                "We prove a large number of results showing the boundaries of what can be achieved by auctions of this kind.",
                "We first focus on auctions that use a polynomial number of demand queries, and then we analyze the power of different kinds of ascending-price auctions.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION Combinatorial auctions have recently received a lot of attention.",
                "In a combinatorial auction, a set M of m nonidentical items are sold in a single auction to n competing bidders.",
                "The bidders have preferences regarding the bundles of items that they may receive.",
                "The preferences of bidder i are specified by a valuation function vi : 2M → R+ , where vi(S) denotes the value that bidder i attaches to winning the bundle of items S. We assume free disposal, i.e., that the vis are monotone non-decreasing.",
                "The usual goal of the auctioneer is to optimize the social welfare P i vi(Si), where the allocation S1...Sn must be a partition of the items.",
                "Applications include many complex resource allocation problems and, in fact, combinatorial auctions may be viewed as the common abstraction of many complex resource allocation problems.",
                "Combinatorial auctions face both economic and computational difficulties and are a central problem in the recently active border of economic theory and computer science.",
                "A forthcoming book [11] addresses many of the issues involved in the design and implementation of combinatorial auctions.",
                "The design of a combinatorial auction involves many considerations.",
                "In this paper we focus on just one central issue: the communication between bidders and the allocation mechanism - preference elicitation.",
                "Transferring all information about bidders preferences requires an infeasible (exponential in m) amount of communication.",
                "Thus, direct revelation auctions in which bidders simply declare their preferences to the mechanism are only practical for very small auction sizes or for very limited families of bidder preferences.",
                "We have therefore seen a multitude of suggested iterative auctions in which the auction protocol repeatedly interacts with the different bidders, aiming to adaptively elicit enough information about the bidders preferences as to be able to find a good (optimal or close to optimal) allocation.",
                "Most of the suggested iterative auctions proceed by maintaining temporary prices for the bundles of items and repeatedly querying the bidders as to their preferences between the bundles under the current set of prices, and then updating the set of bundle prices according to the replies received (e.g., [22, 12, 17, 37, 3]).",
                "Effectively, such an iterative auction accesses the bidders preferences by repeatedly making the following type of demand query to bidders: Query to bidder i: a vector of bundle prices p = {p(S)}S⊆M ; Answer: a bundle of items S ⊆ M that maximizes vi(S) − p(S)..",
                "These types of queries are very natural in an economic setting as they capture the revealed preferences of the bidders.",
                "Some auctions, called item-price or linear-price auctions, specify a price pi for each item, and the price of any given bundle S is always linear, p(S) = P i∈S pi.",
                "Other auctions, called bundle-price auctions, allow specifying arbitrary (non-linear) prices p(S) for bundles.",
                "Another important differentiation between models of iterative auctions is 29 based on whether they use anonymous or non-anonymous prices: In some auctions the prices that are presented to the bidders are always the same (anonymous prices).",
                "In other auctions (non-anonymous), different bidders may face different (discriminatory) vectors of prices.",
                "In ascending-price auctions, forcing prices to be anonymous may be a significant restriction.",
                "In this paper, we embark on a systematic analysis of the computational power of iterative auctions that are based on demand queries.",
                "We do not aim to present auctions for practical use but rather to understand the limitations and possibilities of these kinds of auctions.",
                "In the first part of this paper, our main question is what can be done using a polynomial number of these types of queries?",
                "That is, polynomial in the main parameters of the problem: n, m and the number of bits t needed for representing a single value vi(S).",
                "Note that from an algorithmic point of view we are talking about sub-linear time algorithms: the input size here is really n(2m − 1) numbers - the descriptions of the valuation functions of all bidders.",
                "There are two aspects to computational efficiency in these settings: the first is the communication with the bidders, i.e., the number of queries made, and the second is the usual computational tractability.",
                "Our lower bounds will depend only on the number of queriesand hold independently of any computational assumptions like P = NP.",
                "Our upper bounds will always be computationally efficient both in terms of the number of queries and in terms of regular computation.",
                "As mentioned, this paper concentrates on the single aspect of preference elicitation and on its computational consequences and does not address issues of incentives.",
                "This strengthens our lower bounds, but means that the upper bounds require evaluation from this perspective also before being used in any real combinatorial auction.1 The second part of this paper studies the power of ascending -price auctions.",
                "Ascending auctions are iterative auctions where the published prices cannot decrease in time.",
                "In this work, we try to systematically analyze what do the differences between various models of ascending auctions mean.",
                "We try to answer the following questions: (i) Which models of ascending auctions can find the optimal allocation, and for which classes of valuations? (ii) In cases where the optimal allocation cannot be determined by ascending auctions, how well can such auctions approximate the social welfare? (iii) How do the different models for ascending auctions compare?",
                "Are some models computationally stronger than others?",
                "Ascending auctions have been extensively studied in the literature (see the recent survey by Parkes [35]).",
                "Most of this work presented upper bounds, i.e., proposed mechanisms with ascending prices and analyzed their properties.",
                "A result which is closer in spirit to ours, is by Gul and Stacchetti [17], who showed that no item-price ascending auction can always determine the VCG prices, even for substitutes valuations.2 Our framework is more general than the traditional line of research that concentrates on the final allocation and 1 We do observe however that some weak incentive property comes for free in demand-query auctions since myopic players will answer all demand queries truthfully.",
                "We also note that in some cases (but not always!) the incentives issues can be handled orthogonally to the preference elicitation issues, e.g., by using Vickrey-Clarke-Groves (VCG) prices (e.g., [4, 34]). 2 We further discuss this result in Section 5.3.",
                "Iterative auctions Demand auctions Item-price auctions Anonymous price auctions Ascending auctions 1 2 3 4 5 6 97 8 10 Figure 1: The diagram classifies the following auctions according to their properties: (1) The adaptation [12] for Kelso & Crawfords [22] auction. (2) The Proxy Auction [3] by Ausubel & Milgrom. (3) iBundle(3) by Parkes & Ungar [34]. (4) iBundle(2) by Parkes & Ungar [37]. (5) Our descending adaptation for the 2-approximation for submodular valuations by [25] (see Subsection 5.4). (6) Ausubels [4] auction for substitutes valuations. (7) The adaptation by Nisan & Segal [32] of the O( √ m) approximation by [26]. (8) The duplicate-item auction by [5]. (9) Auction for Read-Once formulae by [43]. (10) The AkBA Auction by Wurman & Wellman [42]. payments and in particular, on reaching Walrasian equilibria or Competitive equilibria.",
                "A Walrasian equilibrium3 is known to exist in the case of Substitutes valuations, and is known to be impossible for any wider class of valuations [16].",
                "This does not rule out other allocations by ascending auctions: in this paper we view the auctions as a computational process where the outcome - both the allocation and the payments - can be determined according to all the data elicited throughout the auction; This general framework strengthens our negative results.4 We find the study of ascending auctions appealing for various reasons.",
                "First, ascending auctions are widely used in many real-life settings from the FCC spectrum auctions [15] to almost any e-commerce website (e.g., [2, 1]).",
                "Actually, this is maybe the most straightforward way to sell items: ask the bidders what would they like to buy under certain prices, and increase the prices of over-demanded goods.",
                "Ascending auctions are also considered more intuitive for many bidders, and are believed to increase the trust of the bidders in the auctioneer, as they see the result gradually emerging from the bidders responses.",
                "Ascending auctions also have other desired economic properties, e.g., they incur smaller information revelation (consider, for example, English auctions vs. second-price sealed bid auctions). 1.1 Extant Work Many iterative combinatorial auction mechanisms rely on demand queries (see the survey in [35]).",
                "Figure 1 summa3 A Walrasian equilibrium is vector of item prices for which all the items are sold when each bidder receives a bundle in his demand set. 4 In few recent auction designs (e.g., [4, 28]) the payments are not necessarily the final prices of the auctions. 30 Valuation family Upper <br>bound</br> Reference Lower <br>bound</br> Reference General min(n, O( √ m)) [26], Section 4.2 min(n, m1/2− ) [32] Substitutes 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subadditive O(logm) [13] 2 [13] k-duplicates O(m1/k+1 ) [14] O(m1/k+1 ) [14] Procurement ln m [32] (log m)/2 [29, 32] Figure 2: The best approximation factors currently achievable by computationally-efficient combinatorial auctions, for several classes of valuations.",
                "All lower bounds in the table apply to all iterative auctions (except the one marked by *); all upper bounds in the table are achieved with item-price demand queries. rizes the basic classes of auctions implied by combinations of the above properties and classifies some of the auctions proposed in the literature according to this classification.",
                "For our purposes, two families of these auctions serve as the main motivating starting points: the first is the ascending item-price auctions of [22, 17] that with computational efficiency find an optimal allocation among (gross) substitutes valuations, and the second is the ascending bundleprice auctions of [37, 3] that find an optimal allocation among general valuations - but not necessarily with computational efficiency.",
                "The main lower <br>bound</br> in this area, due to [32], states that indeed, due to inherent communication requirements, it is not possible for any iterative auction to find the optimal allocation among general valuations with sub-exponentially many queries.",
                "A similar exponential lower <br>bound</br> was shown in [32] also for even approximating the optimal allocation to within a factor of m1/2− .",
                "Several lower bounds and upper bounds for approximation are known for some natural classes of valuations - these are summarized in Figure 2.",
                "In [32], the universal generality of demand queries is also shown: any non-deterministic communication protocol for finding an allocation that optimizes the social welfare can be converted into one that only uses demand queries (with bundle prices).",
                "In [41] this was generalized also to nondeterministic protocols for finding allocations that satisfy other natural types of economic requirements (e.g., approximate social efficiency, envy-freeness).",
                "However, in [33] it was demonstrated that this completeness of demand queries holds only in the nondeterministic setting, while in the usual deterministic setting, demand queries (even with bundle prices) may be exponentially weaker than general communication.",
                "Bundle-price auctions are a generalization of (the more natural and intuitive) item-price auctions.",
                "It is known that indeed item-price auctions may be exponentially weaker: a nice example is the case of valuations that are a XOR of k bundles5 , where k is small (say, polynomial).",
                "Lahaie and Parkes [24] show an economically-efficient bundle-price auction that uses a polynomial number of queries whenever k is polynomial.",
                "In contrast, [7] show that there exist valuations that are XORs of k = √ m bundles such that any item-price auction that finds an optimal allocation between them requires exponentially many queries.",
                "These results are part of a recent line of research ([7, 43, 24, 40]) that study the preference elicitation problem in combinatorial auctions and its relation to the full elicitation problem (i.e., learn5 These are valuations where bidders have values for k specific packages, and the value of each bundle is the maximal value of one of these packages that it contains. ing the exact valuations of the bidders).",
                "These papers adapt methods from machine-learning theory to the combinatorialauction setting.",
                "The preference elicitation problem and the full elicitation problem relate to a well studied problem in microeconomics known as the integrability problem (see, e.g., [27]).",
                "This problem studies if and when one can derive the utility function of a consumer from her demand function.",
                "Paper organization: Due to the relatively large number of results we present, we start with a survey of our new results in Section 2.",
                "After describing our formal model in Section 3, we present our results concerning the power of demand queries in Section 4.",
                "Then, we describe the power of item-price ascending auctions (Section 5) and bundle-price ascending auctions (Section 6).",
                "Readers who are mainly interested in the self-contained discussion of ascending auctions can skip Section 4.",
                "Missing proofs from Section 4 can be found in part I of the full paper ([8]).",
                "Missing proofs from Sections 5 and 6 can be found in part II of the full paper ([9]). 2.",
                "A SURVEY OF OUR RESULTS Our systematic analysis is composed of the combination of a rather large number of results characterizing the power and limitations of various classes of auctions.",
                "In this section, we will present an exposition describing our new results.",
                "We first discuss the power of demand-query iterative auctions, and then we turn our attention to ascending auctions.",
                "Figure 3 summarizes some of our main results. 2.1 Demand Queries Comparison of query types We first ask what other natural types of queries could we imagine iterative auctions using?",
                "Here is a list of such queries that are either natural, have been used in the literature, or that we found useful. 1.",
                "Value query: The auctioneer presents a bundle S, the bidder reports his value v(S) for this bundle. 2.",
                "Marginal-value query: The auctioneer presents a bundle A and an item j, the bidder reports how much he is willing to pay for j, given that he already owns A, i.e., v(j|A) = v(A ∪ {j}) − v(A). 3.",
                "Demand query (with item prices): The auctioneer presents a vector of item prices p1...pm; the bidder reports his demand under these prices, i.e., some set S that maximizes v(S) − P i∈S pi.6 6 A tie breaking rule should be specified.",
                "All of our results 31 Communication Constraint Can find an optimal allocation?",
                "Upper <br>bound</br> for welfare approx.",
                "Lower <br>bound</br> for welfare approx.",
                "Item-Price Demand Queries Yes 1 1 Poly.",
                "Communication No [32] min(n, O(m1/2 )) [26] min(n, m1/2− ) [32] Poly.",
                "Item-Price Demand Queries No [32] min(n, O(m1/2 )) min(n, m1/2− ) [32] Poly.",
                "Value Queries No [32] O( m√ log m ) [19] O( m log m ) Anonymous Item-Price AA No - min(O(n), O(m1/2− )) Non-anonymous Item-Price AA No -Anonymous Bundle-Price AA No - min(O(n), O(m1/2− )) Non-anonymous Bundle-Price AA Yes [37] 1 1 Poly Number of Item-Price AA No min(n, O(m1/2 ))Figure 3: This paper studies the economic efficiency of auctions that follow certain communication constraints.",
                "For each class of auctions, the table shows whether the optimal allocation can be achieved, or else, how well can it be approximated (both upper bounds and lower bounds).",
                "New results are highlighted.",
                "Abbreviations: Poly. (Polynomial number/size), AA (ascending auctions). - means that nothing is currently known except trivial solutions. 4.",
                "Indirect-utility query: The auctioneer presents a set of item prices p1...pm, and the bidder responds with his indirect-utility under these prices, that is, the highest utility he can achieve from a bundle under these prices: maxS⊆M (v(S) − P i∈S pi).7 5.",
                "Relative-demand query: the auctioneer presents a set of non-zero prices p1...pm, and the bidder reports the bundle that maximizes his value per unit of money, i.e., some set that maximizes v(S)P i∈S pi .8 Theorem: Each of these queries can be efficiently (i.e., in time polynomial in n, m, and the number of bits of precision t needed to represent a single value vi(S)) simulated by a sequence of demand queries with item prices.",
                "In particular this shows that demand queries can elicit all information about a valuation by simulating all 2m −1 value queries.",
                "We also observe that value queries and marginalvalue queries can simulate each other in polynomial time and that demand queries and indirect-utility queries can also simulate each other in polynomial time.",
                "We prove that exponentially many value queries may be needed in order to simulate a single demand query.",
                "It is interesting to note that for the restricted class of substitutes valuations, demand queries may be simulated by polynomial number of value queries [6].",
                "Welfare approximation The next question that we ask is how well can a computationally-efficient auction that uses only demand queries approximate the optimal allocation?",
                "Two separate obstacles are known: In [32], a lower <br>bound</br> of min(n, m1/2− ), for any fixed > 0, was shown for the approximation factor apply for any fixed tie breaking rule. 7 This is exactly the utility achieved by the bundle which would be returned in a demand query with the same prices.",
                "This notion relates to the Indirect-utility function studied in the Microeconomic literature (see, e.g., [27]). 8 Note that when all the prices are 1, the bidder actually reports the bundle with the highest per-item price.",
                "We found this type of query useful, for example, in the design of the approximation algorithm described in Figure 5 in Section 4.2. obtained using any polynomial amount of communication.",
                "A computational <br>bound</br> with the same value applies even for the case of single-minded bidders, but under the assumption of NP = ZPP [39].",
                "As noted in [32], the computationallyefficient greedy algorithm of [26] can be adapted to become a polynomial-time iterative auction that achieves a nearly matching approximation factor of min(n, O( √ m)).",
                "This iterative auction may be implemented with bundle-price demand queries but, as far as we see, not as one with item prices.",
                "Since in a single bundle-price demand query an exponential number of prices can be presented, this algorithm can have an exponential communication cost.",
                "In Section 4.2, we describe a different item-price auction that achieves the same approximation factor with a polynomial number of queries (and thus with a polynomial communication).",
                "Theorem: There exists a computationally-efficient iterative auction with item-price demand queries that finds an allocation that approximates the optimal welfare between arbitrary valuations to within a factor of min(n, O( √ m)).",
                "One may then attempt obtaining such an approximation factor using iterative auctions that use only the weaker value queries.",
                "However, we show that this is impossible: Theorem: Any iterative auction that uses a polynomial (in n and m) number of value queries can not achieve an approximation factor that is better than O( m log m ).9 Note however that auctions with only value queries are not completely trivial in power: the bundling auctions of Holzman et al. [19] can easily be implemented by a polynomial number of value queries and can achieve an approximation factor of O( m√ log m ) by using O(log m) equi-sized bundles.",
                "We do not know how to close the (tiny) gap between this upper <br>bound</br> and our lower <br>bound</br>.",
                "Representing bundle-prices We then deal with a critical issue with bundle-price auctions that was side-stepped by our model, as well as by all previous works that used bundle-price auctions: how are 9 This was also proven independently by Shahar Dobzinski and Michael Schapira. 32 the bundle prices represented?",
                "For item-price auctions this is not an issue since a query needs only to specify a small number, m, of prices.",
                "In bundle-price auctions that situation is more difficult since there are exponentially many bundles that require pricing.",
                "Our basic model (like all previous work that used bundle prices, e.g., [37, 34, 3]), ignores this issue, and only requires that the prices be determined, somehow, by the protocol.",
                "A finer model would fix a specific language for denoting bundle prices, force the protocol to represent the bundle-prices in this language, and require that the representations of the bundle-prices also be polynomial.",
                "What could such a language for denoting prices for all bundles look like?",
                "First note that specifying a price for each bundle is equivalent to specifying a valuation.",
                "Second, as noted in [31], most of the proposed bidding languages are really just languages for representing valuations, i.e., a syntactic representation of valuations - thus we could use any of them.",
                "This point of view opens up the general issue of which language should be used in bundle-price auctions and what are the implications of this choice.",
                "Here we initiate this line of investigation.",
                "We consider bundle-price auctions where the prices must be given as a XOR-bid, i.e., the protocol must explicitly indicate the price of every bundle whose value is different than that of all of its proper subsets.",
                "Note that all bundle-price auctions that do not explicitly specify a bidding language must implicitly use this language or a weaker one, since without a specific language one would need to list prices for all bundles, perhaps except for trivial ones (those with value 0, or more generally, those with a value that is determined by one of their proper subsets.)",
                "We show that once the representation length of bundle prices is taken into account (using the XOR-language), bundle-price auctions are no more strictly stronger than item-price auctions.",
                "Define the cost of an iterative auction as the total length of the queries and answers used throughout the auction (in the worst case).",
                "Theorem: For some class of valuations, bundle price auctions that use the XOR-language require an exponential cost for finding the optimal allocation.",
                "In contrast, item-price auctions can find the optimal allocation for this class within polynomial cost.10 This put doubts on the applicability of bundle-price auctions like [3, 37], and it may justify the use of hybrid pricing methods such as Ausubel, Cramton and Milgroms Clock-Proxy auction ([10]).",
                "Demand queries and linear programs The winner determination problem in combinatorial auctions may be formulated as an integer program.",
                "In many cases solving the linear-program relaxation of this integer program is useful: for some restricted classes of valuations it finds the optimum of the integer program (e.g., substitute valuations [22, 17]) or helps approximating the optimum (e.g., by randomized rounding [13, 14]).",
                "However, the linear program has an exponential number of variables.",
                "Nisan and Segal [32] observed the surprising fact that despite the ex10 Our proof relies on the sophisticated known lower bounds for constant depth circuits.",
                "We were not able to find an elementary proof. ponential number of variables, this linear program may be solved within polynomial communication.",
                "The basic idea is to solve the dual program using the Ellipsoid method (see, e.g., [20]).",
                "The dual program has a polynomial number of variables, but an exponential number of constraints.",
                "The Ellipsoid algorithm runs in polynomial time even on such programs, provided that a separation oracle is given for the set of constraints.",
                "Surprisingly, such a separation oracle can be implemented using a single demand query (with item prices) to each of the bidders.",
                "The treatment of [32] was somewhat ad-hoc to the problem at hand (the case of substitute valuations).",
                "Here we give a somewhat more general form of this important observation.",
                "Let us call the following class of linear programs generalized-winner-determination-relaxation (GWDR) LPs: Maximize X i∈N,S⊆M wi xi,S vi(S) s.t.",
                "X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M The case where wi = 1, di = 1, qj = 1 (for every i, j) is the usual linear relaxation of the winner determination problem.",
                "More generally, wi may be viewed as the weight given to bidder is welfare, qj may be viewed as the quantity of units of good j, and di may be viewed as duplicity of the number of bidders of type i. Theorem: Any GWDR linear program may be solved in polynomial time (in n, m, and the number of bits of precision t) using only demand queries with item prices.11 2.2 Ascending Auctions Ascending item-price auctions: It is well known that the item-price ascending auctions of Kelso and Crawford [22] and its variants [12, 16] find the optimal allocation as long as all players valuations have the substitutes property.",
                "The obvious question is whether the optimal allocation can be found for a larger class of valuations.",
                "Our main result here is a strong negative result: Theorem: There is a 2-item 2-player problem where no ascending item-price auction can find the optimal allocation.",
                "This is in contrast to both the power of bundle-price ascending auctions and to the power of general item-price demand queries (see above), both of which can always find the optimal allocation and in fact even provide full preference elicitation.",
                "The same proof proves a similar impossibility result for other types of auctions (e.g., descending auctions, non-anonymous auctions).",
                "More extension of this result: • Eliciting some classes of valuations requires an exponential number of ascending item-price trajectories. 11 The produced optimal solution will have polynomial support and thus can be listed fully. 33 • At least k − 1 ascending item-price trajectories are needed to elicit XOR formulae with k terms.",
                "This result is in some sense tight, since we show that any k-term XOR formula can be fully elicited by k−1 nondeterministic (i.e., when some exogenous teacher instructs the auctioneer on how to increase the prices) ascending auctions.12 We also show that item-price ascending auctions and iterative auctions that are limited to a polynomial number of queries (of any kind, not necessarily ascending) are incomparable in their power: ascending auctions, with small enough increments, can elicit the preferences in cases where any polynomial number of queries cannot.",
                "Motivated by several recent papers that studied the relation between eliciting and fully-eliciting the preferences in combinatorial auctions (e.g., [7, 24]), we explore the difference between these problems in the context of ascending auctions.",
                "We show that although a single ascending auction can determine the optimal allocation among any number of bidders with substitutes valuations, it cannot fully-elicit such a valuation even for a single bidder.",
                "While it was shown in [25] that the set of substitutes valuations has measure zero in the space of general valuations, its dimension is not known, and in particular it is still open whether a polynomial amount of information suffices to describe a substitutes valuation.",
                "While our result may be a small step in that direction (a polynomial full elicitation may still be possible with other communication protocols), we note that our impossibility result also holds for valuations in the class OXS defined by [25], valuations that we are able to show have a compact representation.",
                "We also give several results separating the power of different models for ascending combinatorial auctions that use item-prices: we prove, not surprisingly, that adaptive ascending auctions are more powerful than oblivious ascending auctions and that non-deterministic ascending auctions are more powerful than deterministic ascending auctions.",
                "We also compare different kinds of non-anonymous auctions (e.g., simultaneous or sequential), and observe that anonymous bundle-price auctions and non-anonymous item-price auctions are incomparable in their power.",
                "Finally, motivated by Dutch auctions, we consider descending auctions, and how they compare to ascending ones; we show classes of valuations that can be elicited by ascending item-price auctions but not by descending item-price auctions, and vice versa.",
                "Ascending bundle-price auctions: All known ascending bundle-price auctions that are able to find the optimal allocation between general valuations (with free disposal) use non-anonymous prices.",
                "Anonymous ascending-price auctions (e.g., [42, 21, 37]) are only known to be able to find the optimal allocation among superadditive valuations or few other simple classes ([36]).",
                "We show that this is no mistake: Theorem: No ascending auction with anonymous prices can find the optimal allocation between general valuations. 12 Non-deterministic computation is widely used in CS and also in economics (e.g, a Walrasian equilibrium or [38]).",
                "In some settings, deterministic and non-deterministic models have equal power (e.g., computation with finite automata).",
                "This <br>bound</br> is regardless of the running time, and it also holds for descending auctions and non-deterministic auctions.",
                "We strengthen this result significantly by showing that anonymous ascending auctions cannot produce a better than O( √ m) approximation - the approximation ratio that can be achieved with a polynomial number of queries ([26, 32]) and, as mentioned, with a polynomial number of item-price demand queries.",
                "The same lower <br>bound</br> clearly holds for anonymous item-price ascending auctions since such auctions can be simulated by anonymous bundle-price ascending auctions.",
                "We currently do not have any lower <br>bound</br> on the approximation achievable by non-anonymous item-price ascending auctions.",
                "Finally, we study the performance of the existing computationally-efficient ascending auctions.",
                "These protocols ([37, 3]) require exponential time in the worst case, and this is unavoidable as shown by [32].",
                "However, we also observe that these auctions, as well as the whole class of similar ascending bundle-price auctions, require an exponential time even for simple additive valuations.",
                "This is avoidable and indeed the ascending item-price auctions of [22] can find the optimal allocation for these simple valuations with polynomial communication. 3.",
                "THE MODEL 3.1 Discrete Auctions for Continuous Values Our model aims to capture iterative auctions that operate on real-valued valuations.",
                "There is a slight technical difficulty here in bridging the gap between the discrete nature of an iterative auction, and the continuous nature of the valuations.",
                "This is exactly the same problem as in modeling a simple English auction.",
                "There are three standard formal ways to model it: 1.",
                "Model the auction as a continuous process and study its trajectory in time.",
                "For example, the so-called Japanese auction is basically a continuous model of an English model.13 2.",
                "Model the auction as discrete and the valuations as continuously valued.",
                "In this case we introduce a parameter and usually require the auction to produce results that are -close to optimal. 3.",
                "Model the valuations as discrete.",
                "In this case we will assume that all valuations are integer multiples of some small fixed quantity δ, e.g., 1 penny.",
                "All communication in this case is then naturally finite.",
                "In this paper we use the latter formulation and assume that all values are multiples of some δ.",
                "Thus, in some parts of the paper we assume without loss of generality that δ = 1, hence all valuations are integral.",
                "Almost all (if not all) of our results can be translated to the other two models with little effort. 3.2 Valuations A single auctioneer is selling m indivisible non-homogeneous items in a single auction, and let M be the set of these 13 Another similar model is the moving knives model in the cake-cutting literature. 34 items and N be the set of bidders.",
                "Each one of the n bidders in the auction has a valuation function vi : 2m → {0, δ, 2δ, ..., L}, where for every bundle of items S ⊆ M, vi(S) denotes the value of bidder i for the bundle S and is a multiple of δ in the range 0...L. We will sometimes denote the number of bits needed to represent such values in the range 0...L by t = log L. We assume free disposal, i.e., S ⊆ T implies vi(S) ≤ vi(T) and that vi(∅) = 0 for all bidders.",
                "We will mention the following classes of valuations: • A valuation is called sub-modular if for all sets of items A and B we have that v(A ∪ B) + v(A ∩ B) ≤ v(A) + v(B). • A valuation is called super-additive if for all disjoint sets of items A and B we have that v(A∪B) ≥ v(A)+ v(B). • A valuation is called a k-bundle XOR if it can be represented as a XOR combination of at most k atomic bids [30], i.e., if there are at most k bundles Si and prices pi such that for all S, v(S) = maxi|S⊇Si pi.",
                "Such valuations will be denoted by v = (S1 : p1) ⊕ (S2 : p2) ⊕ . . . ⊕ (Sk : pk).14 3.3 Iterative Auctions The auctioneer sets up a protocol (equivalently an algorithm), where at each stage of the protocol some information q - termed the query - is sent to some bidder i, and then bidder i replies with some reply that depends on the query as well as on his own valuation.",
                "In this paper, we assume that we have complete control over the bidders behavior, and thus the protocol also defines a reply function ri(q, vi) that specifies bidder is reply to query q.",
                "The protocol may be adaptive: the query value as well as the queried bidder may depend on the replies received for past queries.",
                "At the end of the protocol, an allocation S1...Sn must be declared, where Si ∩ Sj = ∅ for i = j.",
                "We say that the auction finds an optimal allocation if it finds the allocation that maximizes the social welfareP i vi(Si).",
                "We say that it finds a c-approximation if P i vi(Si) ≥ P i vi(Ti)/c where T1...Tn is an optimal allocation.",
                "The running time of the auction on a given instance of the bidders valuations is the total number of queries made on this instance.",
                "The running time of a protocol is the worst case cost over all instances.",
                "Note that we impose no computational limitations on the protocol or on the players.15 This of course only strengthens our hardness results.",
                "Yet, our positive results will not use this power and will be efficient also in the usual computational sense.",
                "Our goal will be to design computationally-efficient protocols.",
                "We will deem a protocol computationally-efficient if its cost is polynomial in the relevant parameters: the number of bidders n, the number of items m, and t = log L, where L is the largest possible value of a bundle.",
                "However, when we discuss ascending-price auctions and their variants, a computationally-efficient protocol will be required to be 14 For example, v = (abcd : 5) ⊕ (ab : 3) ⊕ (c : 4) denotes the XOR valuation with the terms abcd, ab, c and prices 5, 3, 4 respectively.",
                "For this valuation, v(abcd) = 5, v(abd) = 3, v(abc) = 4. 15 The running time really measures communication costs and not computational running time. pseudo-polynomial, i.e., it should ask a number of queries which is polynomial in m, n and L δ .",
                "This is because that ascending auctions can usually not achieve such running times (consider even the English auction on a single item).16 Note that all of our results give concrete bounds, where the dependence on the parameters is given explicitly; we use the standard big-Oh notation just as a shorthand.",
                "We say than an auction elicits some class V of valuations, if it determines the optimal allocation for any profile of valuations drawn from V ; We say that an auction fully elicits some class of valuations V , if it can fully learn any single valuation v ∈ V (i.e., learn v(S) for every S). 3.4 Demand Queries and Ascending Auctions Most of the paper will be concerned with a common special case of iterative auctions that we term demand auctions.",
                "In such auctions, the queries that are sent to bidders are demand queries: the query specifies a price p(S) ∈ + for each bundle S. The reply of bidder i is simply the set most desired - demanded - under these prices.",
                "Formally, a set S that maximizes vi(S) − p(S).",
                "It may happen that more than one set S maximizes this value.",
                "In which case, ties are broken according to some fixed tie-breaking rule, e.g., the lexicographically first such set is returned.",
                "All of our results hold for any fixed tie-breaking rule.",
                "Ascending auctions are iterative auctions with non-decreasing prices: Definition 1.",
                "In an ascending auction, the prices in the queries to the same bidder can only increase in time.",
                "Formally, let p be a query made for bidder i, and q be a query made for bidder i at a later stage in the protocol.",
                "Then for all sets S, q(S) ≥ p(S).",
                "A similar variant, which we also study and that is also common in real life, is descending auctions, in which prices can only decrease in time.",
                "Note that the term ascending auction refers to an auction with a single ascending trajectory of prices.",
                "It may be useful to define multi-trajectory ascending auctions, in which the prices maybe reset to zero a number of times (see, e.g., [4]).",
                "We consider two main restrictions on the types of allowed demand queries: Definition 2.",
                "Item Prices: The prices in each query are given by prices pj for each item j.",
                "The price of a set S is additive: p(S) = P j∈S pj.",
                "Definition 3.",
                "Anonymous prices: The prices seen by the bidders at any stage in the auction are the same, i.e. whenever a query is made to some bidder, the same query is also made to all other bidders (with the prices unchanged).",
                "In auctions with non-anonymous (discriminatory) prices, each bidder i has personalized prices denoted by pi (S).17 In this paper, all auctions are anonymous unless otherwise specified.",
                "Note that even though in our model valuations are integral (or multiples of some δ), we allow the demand query to 16 Most of the auctions we present may be adapted to run in time polynomial in log L, using a binary-search-like procedure, losing their ascending nature. 17 Note that a non-anonymous auction can clearly be simulated by n parallel anonymous auctions. 35 use arbitrary real numbers in +.",
                "That is, we assume that the increment we use in the ascending auctions may be significantly smaller than δ.",
                "All our hardness results hold for any , even for continuous price increments.",
                "A practical issue here is how will the query be specified: in the general case, an exponential number of prices needs to be sent in a single query.",
                "Formally, this is not a problem as the model does not limit the length of queries in any way - the protocol must simply define what the prices are in terms of the replies received for previous queries.",
                "We look into this issue further in Section 4.3. 4.",
                "THE POWER OF DEMAND QUERIES In this section, we study the power of iterative auctions that use demand queries (not necessarily ascending).",
                "We start by comapring demand queries to other types of queries.",
                "Then, we discuss how well can one approximate the optimal welfare using a polynomial number of demand queries.",
                "We also initiate the study of the representation of bundle-price demand queries, and finally, we show how demand queries help solving the linear-programming relaxation of combinatorial auctions in polynomial time. 4.1 The Power of Different Types of Queries In this section we compare the power of the various types of queries defined in Section 2.",
                "We will present computationally -efficient simulations of these query types using item-price demand queries.",
                "In Section 5.1 we show that these simulations can also be done using item-price ascending auctions.",
                "Lemma 4.1.",
                "A value query can be simulated by m marginalvalue queries.",
                "A marginal-value query can be simulated by two value queries.",
                "Lemma 4.2.",
                "A value query can be simulated by mt demand queries (where t = log L is the number of bits needed to represent a single bundle value).18 As a direct corollary we get that demand auctions can always fully elicit the bidders valuations by simulating all possible 2m − 1 queries and thus elicit enough information for determining the optimal allocation.",
                "Note, however, that this elicitation may be computationally inefficient.",
                "The next lemma shows that demand queries can be exponentially more powerful than value queries.",
                "Lemma 4.3.",
                "An exponential number of value queries may be required for simulating a single demand query.",
                "Indirect utility queries are, however, equivalent in power to demand queries: Lemma 4.4.",
                "An indirect-utility query can be simulated by mt + 1 demand queries.",
                "A demand query can be simulated by m + 1 indirect-utility queries.",
                "Demand queries can also simulate relative-demand queries:19 18 Note that t bundle-price demand queries can easily simulate a value query by setting the prices of all the bundles except S (the bundle with the unknown value) to be L, and performing a binary search on the price of S. 19 Note: although in our model values are integral (our multiples of δ), we allow the query prices to be arbitrary real numV MV D IU RD V 1 2 exp exp exp MV m 1 exp exp exp D mt poly 1 mt+1 poly IU 1 2 m+1 1 poly RD - - - - 1 Figure 4: Each entry in the table specifies how many queries of this row are needed to simulate a query from the relevant column.",
                "Abbreviations: V (value query), MV (marginal-value query), D (demand query), IU (Indirect-utility query), RD (relative demand query).",
                "Lemma 4.5.",
                "Relative-demand queries can be simulated by a polynomial number of demand queries.",
                "According to our definition of relative-demand queries, they clearly cannot simulate even value queries.",
                "Figure 4 summarizes the relations between these query types. 4.2 Approximating the Social Welfare with Value and Demand Queries We know from [32] that iterative combinatorial auctions that only use a polynomial number of queries can not find an optimal allocation among general valuations and in fact can not even approximate it to within a factor better than min{n, m1/2− }.",
                "In this section we ask how well can this approximation be done using demand queries with item prices, or using the weaker value queries.",
                "We show that, using demand queries, the lower <br>bound</br> can be matched, while value queries can only do much worse.",
                "Figure 5 describes a polynomial-time algorithm that achieves a min(n, O( √ m)) approximation ratio.",
                "This algorithm greedily picks the bundles that maximize the bidders per-item value (using relative-demand queries, see Section 4.1).",
                "As a final step, it allocates all the items to a single bidder if it improves the social welfare (this can be checked using value queries).",
                "Since both value queries and relative-demand queries can be simulated by a polynomial number of demand queries with item prices (Lemmas 4.2 and 4.5), this algorithm can be implemented by a polynomial number of demand queries with item prices.20 Theorem 4.6.",
                "The auction described in Figure 5 can be implemented by a polynomial number of demand queries and achieves a min{n, 4 √ m}-approximation for the social welfare.",
                "We now ask how well can the optimal welfare be approximated by a polynomial number of value queries.",
                "First we note that value queries are not completely powerless: In [19] it is shown that if the m items are split into k fixed bundles of size m/k each, and these fixed bundles are auctioned as though each was indivisible, then the social welfare bers, thus we may have bundles with arbitrarily close relative demands.",
                "In this sense the simulation above is only up to any given (and the number of queries is O(log L+log 1 )).",
                "When the relative-demand query prices are given as rational numbers, exact simulation is implied when log is linear in the input length. 20 In the full paper [8], we observe that this algorithm can be implemented by two descending item-price auctions (where we allow removing items along the auction). 36 generated by such an auction is at least m√ k -approximation of that possible in the original auction.",
                "Notice that such an auction can be implemented by 2k − 1 value queries to each bidder - querying the value of each bundle of the fixed bundles.",
                "Thus, if we choose k = log m bundles we get an m√ log m -approximation while still using a polynomial number of queries.",
                "The following lemma shows that not much more is possible using value queries: Lemma 4.7.",
                "Any iterative auction that uses only value queries and distinguishes between k-tuples of 0/1 valuations where the optimal allocation has value 1, and those where the optimal allocation has value k requires at least 2 m k queries.",
                "Proof.",
                "Consider the following family of valuations: for every S, such that |S| > m/2, v(S) = 1, and there exists a single set T, such that for |S| ≤ m/2, v(S) = 1 iff T ⊆ S and v(S) = 0 otherwise.",
                "Now look at the behavior of the protocol when all valuations vi have T = {1...m}.",
                "Clearly in this case the value of the best allocation is 1 since no set of size m 2 or lower has non-zero value for any player.",
                "Fix the sequence of queries and answers received on this k-tuple of valuations.",
                "Now consider the k-tuple of valuations chosen at random as follows: a partition of the m items into k sets T1...Tk each of size m k each is chosen uniformly at random among all such partitions.",
                "Now consider the k-tuple of valuations from our family that correspond to this partition - clearly Ti can be allocated to i, for each i, getting a total value of k. Now look at the protocol when running on these valuations and compare its behavior to the original case.",
                "Note that the answer to a query S to player i differs between the case of Ti and the original case of T = {1...m} only if |S| ≤ m 2 and Ti ⊆ S. Since Ti is distributed uniformly among all sets of size exactly m k , we have that for any fixed query S to player i, where |S| ≤ m 2 , Pr[Ti ⊆ S] ≤ „ |S| m «|Ti| ≤ 2− m k Using the union-<br>bound</br>, if the original sequence of queries was of length less than 2 m k , then with positive probability none of the queries in the sequence would receive a different answer than for the original input tuple.",
                "This is forbidden since the protocol must distinguish between this case and the original case - which cannot happen if all queries receive the same answer.",
                "Hence there must have been at least 2 m k queries for the original tuple of valuations.",
                "We conclude that a polynomial time protocol that uses only value queries cannot obtain a better than O( m log m ) approximation of the welfare: Theorem 4.8.",
                "An iterative auction that uses a polynomial number of value queries cannot achieve better than O( m log m )-approximation for the social welfare.",
                "Proof.",
                "Immediate from Lemma 4.7: achieving any approximation ratio k which is asymptotically greater than m log m needs an exponential number of value queries.",
                "An Approximation Algorithm: Initialization: Let T ← M be the current items for sale.",
                "Let K ← N be the currently participating bidders.",
                "Let S∗ 1 ← ∅, ..., S∗ n ← ∅ be the provisional allocation.",
                "Repeat until T = ∅ or K = ∅: Ask each bidder i in K for the bundle Si that maximizes her per-item value, i.e., Si ∈ argmaxS⊆T vi(S) |S| .",
                "Let i be the bidder with the maximal per-item value, i.e., i ∈ argmaxi∈K vi(Si) |Si| .",
                "Set: s∗ i = si, K = K \\ i, M = M \\ Si Finally: Ask the bidders for their values vi(M) for the grand bundle.",
                "If allocating all the items to some bidder i improves the social welfare achieved so far (i.e., ∃i ∈ N such that vi(M) > P i∈N vi(S∗ i )), then allocate all items to this bidder i.",
                "Figure 5: This algorithm achieves a min{n, 4 √ m}approximation for the social welfare, which is asymptotically the best worst-case approximation possible with polynomial communication.",
                "This algorithm can be implemented with a polynomial number of demand queries. 4.3 The Representation of Bundle Prices In this section we explicitly fix the language in which bundle prices are presented to the bidders in bundle-price auctions.",
                "This language requires the algorithm to explicitly list the price of every bundle with a non-trivial price.",
                "Trivial in this context is a price that is equal to that of one of its proper subsets (which was listed explicitly).",
                "This representation is equivalent to the XOR-language for expressing valuations.",
                "Formally, each query q is given by an expression: q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl).",
                "In this representation, the price demanded for every set S is simply p(S) = max{k=1...l|Sk⊆S}pk.",
                "Definition 4.",
                "The length of the query q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl) is l. The cost of an algorithm is the sum of the lengths of the queries asked during the operation of the algorithm on the worst case input.",
                "Note that under this definition, bundle-price auctions are not necessarily stronger than item-price auctions.",
                "An itemprice query that prices each item for 1, is translated to an exponentially long bundle-price query that needs to specify the price |S| for each bundle S. But perhaps bundle-price auctions can still find optimal allocations whenever itemprice auction can, without directly simulating such queries?",
                "We show that this is not the case: indeed, when the representation length is taken into account, bundle price auctions are sometimes seriously inferior to item price auctions.",
                "Consider the following family of valuations: Each item is valued at 3, except that for some single set S, its value is a bit more: 3|S| + b, where b ∈ {0, 1, 2}.",
                "Note that an item price auction can easily find the optimal allocation between any two such valuations: Set the prices of each item to 3+ ; if the demand sets of the two players are both empty, then b = 0 for both valuations, and an arbitrary allocation is fine.",
                "If one of them is empty and the other non-empty, allocate the non-empty demand set to its bidder, and the rest to the other.",
                "If both demand sets are non-empty then, unless they form an exact partition, we need to see which b is larger, which we can do by increasing the price of a single item in each demand set. 37 We will show that any bundle-price auction that uses only the XOR-language to describe bundle prices requires an exponential cost (which includes the sum of all description lengths of prices) to find an optimal allocation between any two such valuations.",
                "Lemma 4.9.",
                "Every bundle-price auction that uses XORexpressions to denote bundle prices requires 2Ω( √ m) cost in order to find the optimal allocation among two valuations from the above family.",
                "The complication in the proof stems from the fact that using XOR-expressions, the length of the price description depends on the number of bundles whose price is strictly larger than each of their subsets - this may be significantly smaller than the number of bundles that have a non-zero price. (The proof becomes easy if we require the protocol to explicitly name every bundle with non-zero price.)",
                "We do not know of any elementary proof for this lemma (although we believe that one can be found).",
                "Instead we reduce the problem to a well known lower <br>bound</br> in boolean circuit complexity [18] stating that boolean circuits of depth 3 that compute the majority function on m variables require 2Ω( √ m) size. 4.4 Demand Queries and Linear Programming Consider the following linear-programming relaxation for the generalized winner-determination problem in combinatorial auctions (the primal program): Maximize X i∈N,S⊆M wi xi,S vi(S) s.t.",
                "X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M Note that the primal program has an exponential number of variables.",
                "Yet, we will be able to solve it in polynomial time using demand queries to the bidders.",
                "The solution will have a polynomial size support (non-zero values for xi,S), and thus we will be able to describe it in polynomial time.",
                "Here is its dual: Minimize X j∈M qjpj + X i∈N diui s.t. ui + X j∈S pj ≥ wivi(S) ∀i ∈ N, S ⊆ M pi ≥ 0, uj ≥ 0 ∀i ∈ M, j ∈ N Notice that the dual problem has exactly n + m variables but an exponential number of constraints.",
                "Thus, the dual can be solved using the Ellipsoid method in polynomial time - if a separation oracle can be implemented in polynomial time.",
                "Recall that a separation oracle, when given a possible solution, either confirms that it is a feasible solution, or responds with a constraint that is violated by the possible solution.",
                "We construct a separation oracle for solving the dual program, using a single demand query to each of the bidders.",
                "Consider a possible solution (u, p) for the dual program.",
                "We can re-write the constraints of the dual program as: ui/wi ≥ vi(S) − X j∈S pj/wi Now a demand query to bidder i with prices pj/wi reveals exactly the set S that maximizes the RHS of the previous inequality.",
                "Thus, in order to check whether (u, p) is feasible it suffices to (1) query each bidder i for his demand Di under the prices pj/wi; (2) check only the n constraints ui + P j∈Di pj ≥ wivi(Di) (where vi(Di) can be simulated using a polynomial sequence of demand queries as shown in Lemma 4.2).",
                "If none of these is violated then we are assured that (u, p) is feasible; otherwise we get a violated constraint.",
                "What is left to be shown is how the primal program can be solved. (Recall that the primal program has an exponential number of variables.)",
                "Since the Ellipsoid algorithm runs in polynomial time, it encounters only a polynomial number of constraints during its operation.",
                "Clearly, if all other constraints were removed from the dual program, it would still have the same solution (adding constraints can only decrease the space of feasible solutions).",
                "Now take the reduced dual where only the constraints encountered exist, and look at its dual.",
                "It will have the same solution as the original dual and hence of the original primal.",
                "However, look at the form of this dual of the reduced dual.",
                "It is just a version of the primal program with a polynomial number of variables - those corresponding to constraints that remained in the reduced dual.",
                "Thus, it can be solved in polynomial time, and this solution clearly solves the original primal program, setting all other variables to zero. 5.",
                "ITEM-PRICE ASCENDING AUCTIONS In this section we characterize the power of ascending item-price auctions.",
                "We first show that this power is not trivial: such auctions can in general elicit an exponential amount of information.",
                "On the other hand, we show that the optimal allocation cannot always be determined by a single ascending auction, and in some cases, nor by an exponential number of ascending-price trajectories.",
                "Finally, we separate the power of different models of ascending auctions. 5.1 The Power of Item-Price Ascending Auctions We first show that if small enough increments are allowed, a single ascending trajectory of item-prices can elicit preferences that cannot be elicited with polynomial communication.",
                "As mentioned, all our hardness results hold for any increment, even infinitesimal.",
                "Theorem 5.1.",
                "Some classes of valuations can be elicited by item-price ascending auctions, but cannot be elicited by a polynomial number of queries of any kind.",
                "Proof. (sketch) Consider two bidders with v(S) = 1 if |S| > n 2 , v(S) = 0 if |S| < n 2 and every S such that |S| = n 2 has an unknown value from {0, 1}.",
                "Due to [32], determining the optimal allocation here requires exponential communication in the worst case.",
                "Nevertheless, we show (see [9]) that an item-price ascending auction can do it, as long as it can use exponentially small increments.",
                "We now describe another positive result for the power of item-price ascending auctions.",
                "In section 4.1, we showed 38 v(ab) v(a) v(b) Bidder 1 2 α ∈ (0, 1) β ∈ (0, 1) Bidder 2 2 2 2 Figure 6: No item-price ascending auctions can determine the optimal allocation for this class of valuations. that a value query can be simulated with a (truly) polynomial number of item-price demand queries.",
                "Here, we show that every value query can be simulated by a (pseudo) polynomial number of ascending item-price demand queries. (In the next subsection, we show that we cannot always simulate even a pair of value queries using a single item-price ascending auction.)",
                "In the full paper (part II,[9]), we show that we can simulate other types of queries using item-price ascending auctions.",
                "Proposition 5.2.",
                "A value query can be simulated by an item-price ascending auction.",
                "This simulation requires a polynomial number of queries.",
                "Actually, the proof for Proposition 5.2 proves a stronger useful result regarding the information elicited by iterative auctions.",
                "It says that in any iterative auction in which the changes of prices are small enough in each stage (pseudocontinuous auctions), the value of all bundles demanded during the auction can be computed.",
                "The basic idea is that when the bidder moves from demanding some bundle Ti to demanding another bundle Ti+1, there is a point in which she is indifferent between these two bundles.",
                "Thus, knowing the value of some demanded bundle (e.g., the empty set) enables computing the values of all other demanded bundles.",
                "We say that an auction is pseudo-continuous, if it only uses demand queries, and in each step, the price of at most one item is changed by (for some ∈ (0, δ]) with respect to the previous query.",
                "Proposition 5.3.",
                "Consider any pseudo-continuous auction (not necessarily ascending), in which bidder i demands the empty set at least once along the auction.",
                "Then, the value of every bundle demanded by bidder i throughout the auction can be calculated at the end of the auction. 5.2 Limitations of Item-Price Ascending Auctions Although we observed that demand queries can solve any combinatorial auction problem, when the queries are restricted to be ascending, some classes of valuations cannot be elicited nor fully-elicited.",
                "An example for such class of valuations is given in Figure 6.",
                "Theorem 5.4.",
                "There are classes of valuations that cannot be elicited nor fully elicited by any item-price ascending auction.",
                "Proof.",
                "Let bidder 1 have the valuation described in the first row of Figure 6, where α and β are unknown values in (0, 1).",
                "First, we prove that this class cannot be fully elicited by a single ascending auction.",
                "Specifically, an ascending auction cannot reveal the values of both α and β.",
                "As long as pa and pb are both below 1, the bidder will always demand the whole bundle ab: her utility from ab is strictly greater than the utility from either a or b separately.",
                "For example, we show that u1(ab) > u1(a): u1(ab) = 2 − (pa + pb) = 1 − pa + 1 − pb > vA(a) − pa + 1 − pb > u1(a) Thus, in order to gain any information about α or β, the price of one of the items should become at least 1, w.l.o.g. pa ≥ 1.",
                "But then, the bundle a will not be demanded by bidder 1 throughout the auction, thus no information at all will be gained about α.",
                "Now, assume that bidder 2 is known to have the valuation described in the second row of Figure 6.",
                "The optimal allocation depends on whether α is greater than β (in bidder 1s valuation), and we proved that an ascending auction cannot determine this.",
                "The proof of the theorem above shows that for an unknown value to be revealed, the price of one item should be greater than 1, and the other price should be smaller than 1.",
                "Therefore, in a price-monotonic trajectory of prices, only one of these values can be revealed.",
                "An immediate conclusion is that this impossibility result also holds for item-price descending auctions.",
                "Since no such trajectory exists, then the same conclusion even holds for non-deterministic itemprice auctions (in which exogenous data tells us how to increase the prices).",
                "Also note that since the hardness stems from the impossibility to fully-elicit a valuation of a single bidder, this result also holds for non-anonymous ascending item-price auctions. 5.3 Limitations of Multi-Trajectory Ascending Auctions According to Theorem 5.4, no ascending item-price auction can always elicit the preferences (we prove a similar result for bundle prices in section 6).",
                "But can two ascending trajectories do the job?",
                "Or a polynomial number of ascending trajectories?",
                "We give negative answers for such suggestions.",
                "We define a k-trajectory ascending auction as a demandquery iterative auction in which the demand queries can be partitioned to k sets of queries, where the prices published in each set only increase in time.",
                "Note that we use a general definition; It allows the trajectories to run in parallel or sequentially, and to use information elicited in some trajectories for determining the future queries in other trajectories.",
                "The power of multiple-trajectory auctions can be demonstrated by the negative result of Gul and Stacchetti [17] who showed that even for an auction among substitutes valuations, an anonymous ascending item-price auction cannot compute VCG prices for all players.21 Ausubel [4] overcame this impossibility result and designed auctions that do compute VCG prices by organizing the auction as a sequence of n + 1 ascending auctions.",
                "Here, we prove that one cannot elicit XOR valuations with k terms by less than k − 1 ascending trajectories.",
                "On the other hand, we show that an XOR formula can be fully elicited by k−1 non-deterministic ascending auctions (or by k−1 deterministic ascending auctions if the auctioneer knows the atomic bundles).22 21 A recent unpublished paper by Mishra and Parkes extends this result, and shows that non-anonymous prices with bundle-prices are necessary in order that an ascending auction will end up with a universal-competitive-equilibrium (that leads to VCG payments). 22 This result actually separates the power of deterministic 39 Proposition 5.5.",
                "XOR valuations with k terms cannot be elicited (or fully elicited) by any (k-2)-trajectory itemprice ascending auction, even when the atomic bundles are known to the elicitor.",
                "However, these valuations can be elicited (and fully elicited) by (k-1)-trajectory non-deterministic non-anonymous item-price ascending auctions.",
                "Moreover, an exponential number of trajectories is required for eliciting some classes of valuations: Proposition 5.6.",
                "Elicitation and full-elicitation of some classes of valuations cannot be done by any k-trajectory itemprice ascending auction, where k = o(2m ).",
                "Proof. (sketch) Consider the following class of valuations: For |S| < m 2 , v(S) = 0 and for |S| > m 2 , v(S) = 2; every bundle S of size m 2 has some unknown value in (0, 1).",
                "We show ([9]) that a single item-price ascending auction can reveal the value of at most one bundle of size n 2 , and therefore an exponential number of ascending trajectories is needed in order to elicit such valuations.",
                "We observe that the algorithm we presented in Section 4.2 can be implemented by a polynomial number of ascending auctions (each item-price demand query can be considered as a separate ascending auction), and therefore a min(n, 4 √ m)-approximation can be achieved by a polynomial number of ascending auctions.",
                "We do not currently have a better upper <br>bound</br> or any lower <br>bound</br>. 5.4 Separating the Various Models of Ascending Auctions Various models for ascending auctions have been suggested in the literature.",
                "In this section, we compare the power of the different models.",
                "As mentioned, all auctions are considered anonymous and deterministic, unless specified otherwise.",
                "Ascending vs.",
                "Descending Auctions: We begin the discussion of the relation between ascending auctions and descending auctions with an example.",
                "The algorithm by Lehmann, Lehmann and Nisan [25] can be implemented by a simple item-price descending auction (see the full paper for details [9]).",
                "This algorithm guarantees at least half of the optimal efficiency for submodular valuations.",
                "However, we are not familiar with any ascending auction that guarantees a similar fraction of the efficiency.",
                "This raises a more general question: can ascending auctions solve any combinatorialauction problem that is solvable using a descending auction (and vice versa)?",
                "We give negative answers to these questions.",
                "The idea behind the proofs is that the information that the auctioneer can get for free at the beginning of each type of auction is different.23 and non-deterministic iterative auctions: our proof shows that a non-deterministic iterative auction can elicit the kterm XOR valuations with a polynomial number of demand queries, and [7] show that this elicitation must take an exponential number of demand queries. 23 In ascending auctions, the auctioneer can reveal the most valuable bundle (besides M) before she starts raising the prices, thus she can use this information for adaptively choose the subsequent queries.",
                "In descending auctions, one can easily find the bundle with the highest average per-item price, keeping all other bundles with non-positive utilities, and use this information in the adaptive price change.",
                "Proposition 5.7.",
                "There are classes that cannot be elicited (fully elicited) by ascending item-price auctions, but can be elicited (resp. fully elicited) with a descending item-price auction.",
                "Proposition 5.8.",
                "There are classes that cannot be elicited (fully elicited) by item-price descending auctions, but can be elicited (resp. fully elicited) by item-price ascending auctions.",
                "Deterministic vs. Non-Deterministic Auctions: Nondeterministic ascending auctions can be viewed as auctions where some benevolent teacher that has complete information guides the auctioneer on how she should raise the prices.",
                "That is, preference elicitation can be done by a non-deterministic ascending auction, if there is some ascending trajectory that elicits enough information for determining the optimal allocation (and verifying that it is indeed optimal).",
                "We show that non-deterministic ascending auctions are more powerful than deterministic ascending auctions: Proposition 5.9.",
                "Some classes can be elicited (fully elicited) by an item-price non-deterministic ascending auction, but cannot be elicited (resp. fully elicited) by item-price deterministic ascending auctions.",
                "Anonymous vs. Non-Anonymous Auctions: As will be shown in Section 6, the power of anonymous and nonanonymous bundle-price ascending auctions differs significantly.",
                "Here, we show that a difference also exists for itemprice ascending auctions.",
                "Proposition 5.10.",
                "Some classes cannot be elicited by anonymous item-price ascending auctions, but can be elicited by a non-anonymous item-price ascending auction.",
                "Sequential vs.",
                "Simultaneous Auctions: A non-anonymous auction is called simultaneous if at each stage, the price of some item is raised by for every bidder.",
                "The auctioneer can use the information gathered until each stage, in all the personalized trajectories, to determine the next queries.",
                "A non-anonymous auction is called sequential if the auctioneer performs an auction for each bidder separately, in sequential order.",
                "The auctioneer can determine the next query based on the information gathered in the trajectories completed so far and on the history of the current trajectory.",
                "Proposition 5.11.",
                "There are classes that cannot be elicited by simultaneous non-anonymous item-price ascending auctions, but can be elicited by a sequential non-anonymous item-price ascending auction.",
                "Adaptive vs.",
                "Oblivious Auctions: If the auctioneer determines the queries regardless of the bidders responses (i.e., the queries are predefined) we say that the auction is oblivious.",
                "Otherwise, the auction is adaptive.",
                "We prove that an adaptive behaviour of the auctioneer may be beneficial.",
                "Proposition 5.12.",
                "There are classes that cannot be elicited (fully elicited) using oblivious item-price ascending auctions, but can be elicited (resp. fully elicited) by an adaptive item-price ascending auction. 40 5.5 Preference Elicitation vs. Full Elicitation Preference elicitation and full elicitation are closely related problems.",
                "If full elicitation is easy (e.g., in polynomial time) then clearly elicitation is also easy (by a nonanonymous auction, simply by learning all the valuations separately24 ).",
                "On the other hand, there are examples where preference elicitation is considered easy but learning is hard (typically, elicitation requires smaller amount of information; some examples can be found in [7]).",
                "The tatonnement algorithms by [22, 12, 16] end up with the optimal allocation for substitutes valuations.25 We prove that we cannot fully elicit substitutes valuations (or even their sub-class of OXS valuations defined in [25]), even for a single bidder, by an item-price ascending auction (although the optimal allocation can be found by an ascending auction for any number of bidders!).",
                "Theorem 5.13.",
                "Substitute valuations cannot be fully elicited by ascending item-price auctions.",
                "Moreover, they cannot be fully elicited by any m 2 ascending trajectories (m > 3).",
                "Whether substitutes valuations have a compact representation (i.e., polynomial in the number of goods) is an important open question.",
                "As a step in this direction, we show that its sub-class of OXS valuations does have a compact representation: every OXS valuation can be represented by at most m2 values.26 Lemma 5.14.",
                "Any OXS valuation can be represented by no more than m2 values. 6.",
                "BUNDLE-PRICE ASCENDING AUCTIONS All the ascending auctions in the literature that are proved to find the optimal allocation for unrestricted valuations are non-anonymous bundle-price auctions (iBundle(3) by Parkes and Ungar [37] and the Proxy Auction by Ausubel and Milgrom [3]).",
                "Yet, several anonymous ascending auctions have been suggested (e.g., AkBA [42], [21] and iBundle(2) [37]).",
                "In this section, we prove that anonymous bundle-price ascending auctions achieve poor results in the worst-case.",
                "We also show that the family of non-anonymous bundleprice ascending auctions can run exponentially slower than simple item-price ascending auctions. 6.1 Limitations of Anonymous Bundle-Price Ascending Auctions We present a class of valuations that cannot be elicited by anonymous bundle-price ascending auctions.",
                "These valuations are described in Figure 7.",
                "The basic idea: for determining some unknown value of one bidder we must raise 24 Note that an anonymous ascending auction cannot necessarily elicit a class that can be fully elicited by an ascending auction. 25 Substitute valuations are defined, e.g., in [16].",
                "Roughly speaking, a bidder with a substitute valuation will continue demand a certain item after the price of some other items was increased.",
                "For completeness, we present in the full paper [9] a proof for the efficiency of such auctions for substitutes valuations. 26 A unit-demand valuation is an XOR valuation in which all the atomic bundles are singletons.",
                "OXS valuations can be interpreted as an aggregation (OR) of any number of unit-demand bidders.",
                "Bid. 1 v1(ac) = 2 v1(bd) = 2 v1(cd) = α ∈ (0, 1) Bid. 2 v2(ab) = 2 v2(cd) = 2 v2(bd) = β ∈ (0, 1) Figure 7: Anonymous ascending bundle-price auctions cannot determine the optimal allocation for this class of valuations. a price of a bundle that should be demanded by the other bidder in the future.",
                "Theorem 6.1.",
                "Some classes of valuations cannot be elicited by anonymous bundle-price ascending auctions.",
                "Proof.",
                "Consider a pair of XOR valuations as described in Figure 7.",
                "For finding the optimal allocation we must know which value is greater between α and β.27 However, we cannot learn the value of both α and β by a single ascending trajectory: assume w.l.o.g. that bidder 1 demands cd before bidder 2 demands bd (no information will be elicited if none of these happens).",
                "In this case, the price for bd must be greater than 1 (otherwise, bidder 1 prefers bd to cd).",
                "Thus, bidder 2 will never demand the bundle bd, and no information will be elicited about β.",
                "The valuations described in the proof of Theorem 6.1 can be easily elicited by a non-anonymous item-price ascending auction.",
                "On the other hand, the valuations in Figure 6 can be easily elicited by an anonymous bundle-price ascending auction.",
                "We conclude that the power of these two families of ascending auctions is incomparable.",
                "We strengthen the impossibility result above by showing that anonymous bundle-price auctions cannot even achieve better than a min{O(n), O( √ m)}-approximation for the social welfare.",
                "This approximation ratio can be achieved with polynomial communication, and specifically with a polynomial number of item-price demand queries.28 Theorem 6.2.",
                "An anonymous bundle-price ascending auction cannot guarantee better than a min{ n 2 , √ m 2 } approximation for the optimal welfare.",
                "Proof. (Sketch) Assume we have n bidders and n2 items for sale, and that n is prime.",
                "We construct n2 distinct bundles with the following properties: for each bidder, we define a partition Si = (Si 1, ..., Si n) of the n2 items to n bundles, such that any two bundles from different partitions intersect.",
                "In the full paper, part II [9] we show an explicit construction using the properties of linear functions over finite fields.",
                "The rest of the proof is independent of the specific construction.",
                "Using these n2 bundles we construct a hard-to-elicit class.",
                "Every bidder has an atomic bid, in his XOR valuation, for each of these n2 bundles.",
                "A bidder i has a value of 2 for any bundle Si j in his partition.",
                "For all bundles in the other partitions, he has a value of either 0 or of 1 − δ, and these values are unknown to the auctioneer.",
                "Since every pair of bundles from different partitions intersect, only one bidder can receive a bundle with a value of 2. 27 If α > β, the optimal allocation will allocate cd to bidder 1 and ab to bidder 2.",
                "Otherwise, we give bd to bidder 2 and ac to bidder 1.",
                "Note that both bidders cannot gain a value of 2 in the same allocation, due to the intersections of the high-valued bundles. 28 Note that bundle-price queries may use exponential communication, thus the lower <br>bound</br> of [32] does not hold. 41 Non-anonymous Bundle-Price Economically-Efficient Ascending Auctions: Initialization: All prices are initialized to zero (non-anonymous bundle prices).",
                "Repeat: - Each bidder submits a bundle that maximizes his utility under his current personalized prices. - The auctioneer calculates a provisional allocation that maximizes his revenue under the current prices. - The prices of bundles that were demanded by losing bidders are increased by .",
                "Finally: Terminate when the provisional allocation assigns to each bidder the bundle he demanded.",
                "Figure 8: Auctions from this family (denoted by NBEA auctions) are known to achieve the optimal welfare.",
                "No bidder will demand a low-valued bundle, as long as the price of one of his high-valued bundles is below 1 (and thus gain him a utility greater than 1).",
                "Therefore, for eliciting any information about the low-valued bundles, the auctioneer should first arbitrarily choose a bidder (w.l.o.g bidder 1) and raise the prices of all the bundles (S1 1 , ..., S1 n) to be greater than 1.",
                "Since the prices cannot decrease, the other bidders will clearly never demand these bundles in future stages.",
                "An adversary may choose the values such that the low values of all the bidders for the bundles not in bidder 1s partition are zero (i.e., vi(S1 j ) = 0 for every i = 1 and every j), however, allocating each bidder a different bundle from bidder 1s partition, might achieve a welfare of n+1−(n−1)δ (bidder 1s valuation is 2, and 1 − δ for all other bidders); If these bundles were wrongly allocated, only a welfare of 2 might be achieved (2 for bidder 1s high-valued bundle, 0 for all other bidders).",
                "At this point, the auctioneer cannot have any information about the identity of the bundles with the non-zero values.",
                "Therefore, an adversary can choose the values of the bundles received by bidders 2, ..., n in the final allocation to be zero.",
                "We conclude that anonymous bundleprice auctions cannot guarantee a welfare greater than 2 for this class, where the optimal welfare can be arbitrarily close to n + 1. 6.2 Bundle Prices vs.",
                "Item Prices The core of the auctions in [37, 3] is the scheme described in Figure 8 (in the spirit of [35]) for auctions with nonanonymous bundle prices.",
                "Auctions from this scheme end up with the optimal allocation for any class of valuations.",
                "We denote this family of ascending auctions as NBEA auctions29 .",
                "NBEA auctions can elicit k-term XOR valuations by a polynomial (in k) number of steps , although the elicitation of such valuations may require an exponential number of item-price queries ([7]), and item-price ascending auctions cannot do it at all (Theorem 5.4).",
                "Nevertheless, we show that NBEA auctions (and in particular, iBundle(3) and the proxy auction) are sometimes inferior to simple item-price demand auctions.",
                "This may justify the use of hybrid auctions that use both linear and non-linear prices (e.g., the clock-proxy auction [10]).",
                "We show that auctions from this 29 Non-anonymous Bundle-price economically Efficient Ascending auctions.",
                "For completeness, we give in the full paper [9] a simple proof for the efficiency (up to an ) of auctions of this scheme . family may use an exponential number of queries even for determining the optimal allocation among two bidders with additive valuations30 , where such valuations can be elicited by a simple item-price ascending auction.",
                "We actually prove this property for a wider class of auctions we call conservative auctions.",
                "We also observe that in conservative auctions, allowing the bidders to submit all the bundles in their demand sets ensures that the auction runs a polynomial number of steps - if L is not too high (but with exponential communication, of course).",
                "An ascending auction is called conservative if it is nonanonymous, uses bundle prices initialized to zero and at every stage the auctioneer can only raise prices of bundles demanded by the bidders until this stage.",
                "In addition, each bidder can only receive bundles he demanded during the auction.",
                "Note that NBEA auctions are by definition conservative.",
                "Proposition 6.3.",
                "If every bidder demands a single bundle in each step of the auction, conservative auctions may run for an exponential number of steps even for additive valuations.",
                "If the bidders are allowed to submit all the bundles in their demand sets in each step, then conservative auctions can run in a polynomial number of steps for any profile of valuations, as long as the maximal valuation L is polynomial in m, n and 1 δ .",
                "Acknowledgments: The authors thank Moshe Babaioff, Shahar Dobzinski, Ron Lavi, Daniel Lehmann, Ahuva Mualem, David Parkes, Michael Schapira and Ilya Segal for helpful discussions.",
                "Supported by grants from the Israeli Academy of Sciences and the USAIsrael Binational Science Foundation. 7.",
                "REFERENCES [1] amazon.",
                "Web Page: http://www.amazon.com. [2] ebay.",
                "Web Page: http://www.ebay.com. [3] L. M. Ausubel and P. R. Milgrom.",
                "Ascending auctions with package bidding.",
                "Frontiers of Theoretical Economics, 1:1-42, 2002. [4] Lawrence Ausubel.",
                "An efficient dynamic auction for heterogeneous commodities, 2000.",
                "Working paper, University of Maryland. [5] Yair Bartal, Rica Gonen, and Noam Nisan.",
                "Incentive compatible multi unit combinatorial auctions.",
                "In TARK 03, 2003. [6] Alejandro Bertelsen.",
                "Substitutes valuations and m -concavity.",
                "M.Sc.",
                "Thesis, The Hebrew University of Jerusalem, 2005. [7] Avrim Blum, Jeffrey C. Jackson, Tuomas Sandholm, and Martin A. Zinkevich.",
                "Preference elicitation and query learning.",
                "Journal of Machine Learning Research, 5:649-667, 2004. [8] Liad Blumrosen and Noam Nisan.",
                "On the computational power of iterative auctions I: demand queries.",
                "Working paper, The Hebrew University of 30 Valuations are called additive if for any disjoint bundles A and B, v(A ∪ B) = v(A) + v(B).",
                "Additive valuations are both sub-additive and super-additive and are determined by the m values assigned for the singletons. 42 Jerusalem.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [9] Liad Blumrosen and Noam Nisan.",
                "On the computational power of iterative auctions II: ascending auctions.",
                "Working paper, The Hebrew University of Jerusalem.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [10] P. Cramton, L.M.",
                "Ausubel, and P.R.",
                "Milgrom.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 5.",
                "The Clock-Proxy Auction: A Practical Combinatorial Auction Design.",
                "MIT Press.",
                "Forthcoming, 2005. [11] P. Cramton, Y. Shoham, and R. Steinberg (Editors).",
                "Combinatorial Auctions.",
                "MIT Press.",
                "Forthcoming, 2005. [12] G. Demange, D. Gale, and M. Sotomayor.",
                "Multi-item auctions.",
                "Journal of Political Economy, 94:863-872, 1986. [13] Shahar Dobzinski, Noam Nisan, and Michael Schapira.",
                "Approximation algorithms for cas with complement-free bidders.",
                "In The 37th ACM symposium on theory of computing (STOC)., 2005. [14] Shahar Dobzinski and Michael Schapira.",
                "Optimal upper and lower approximation bounds for k-duplicates combinatorial auctions.",
                "Working paper, the Hebrew University. [15] Combinatorial bidding conference.",
                "Web Page: http://wireless.fcc.gov/auctions/conferences/combin2003. [16] Faruk Gul and Ennio Stacchetti.",
                "Walrasian equilibrium with gross substitutes.",
                "Journal of Economic Theory, 87:95 - 124, 1999. [17] Faruk Gul and Ennio Stacchetti.",
                "The english auction with differentiated commodities.",
                "Journal of Economic Theory, 92(3):66 - 95, 2000. [18] J. Hastad.",
                "Almost optimal lower bounds for small depth circuits.",
                "In 18th STOC, pages 6-20, 1986. [19] Ron Holzman, Noa Kfir-Dahav, Dov Monderer, and Moshe Tennenholtz.",
                "Bundling equilibrium in combinatrial auctions.",
                "Games and Economic Behavior, 47:104-123, 2004. [20] H. Karloff.",
                "Linear Programming.",
                "Birkh¨auser Verlag, 1991. [21] Frank Kelly and Richard Steinberg.",
                "A combinatorial auction with multiple winners for universal service.",
                "Management Science, 46:586-596, 2000. [22] A.S. Kelso and V.P.",
                "Crawford.",
                "Job matching, coalition formation, and gross substitute.",
                "Econometrica, 50:1483-1504, 1982. [23] Subhash Khot, Richard J. Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Inapproximability results for combinatorial auctions with submodular utility functions.",
                "In Working paper., 2004. [24] Sebastien Lahaie and David C. Parkes.",
                "Applying learning algorithms to preference elicitation.",
                "In EC 04. [25] Benny Lehmann, Daniel Lehmann, and Noam Nisan.",
                "Combinatorial auctions with decreasing marginal utilities.",
                "In ACM conference on electronic commerce.",
                "To appear, Games and Economic Behaviour., 2001. [26] D. Lehmann, L. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "JACM, 49(5):577-602, Sept. 2002. [27] A. Mas-Collel, W. Whinston, and J.",
                "Green.",
                "Microeconomic Theory.",
                "Oxford university press, 1995. [28] Debasis Mishra and David Parkes.",
                "Ascending price vickrey auctions using primal-dual algorithms., 2004.",
                "Working paper, Harvard University. [29] Noam Nisan.",
                "The communication complexity of approximate set packing and covering.",
                "In ICALP 2002. [30] Noam Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In ACM Conference on Electronic Commerce, 2000. [31] Noam Nisan.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 1.",
                "Bidding Languages.",
                "MIT Press.",
                "Forthcoming, 2005. [32] Noam Nisan and Ilya Segal.",
                "The communication requirements of efficient allocations and supporting prices, 2003.",
                "Working paper.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html Forthcoming in the Journal of Economic Theory. [33] Noam Nisan and Ilya Segal.",
                "Exponential communication inefficiency of demand queries, 2004.",
                "Working paper.",
                "Available from http://www.stanford.edu/ isegal/queries1.pdf. [34] D. C. Parkes and L. H. Ungar.",
                "An ascending-price generalized vickrey auction.",
                "Tech.",
                "Rep., Harvard University, 2002. [35] David Parkes.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 3.",
                "Iterative Combinatorial Auctions.",
                "MIT Press.",
                "Forthcoming, 2005. [36] David C. Parkes.",
                "Iterative combinatorial auctions: Achieving economic and computational efficiency.",
                "Ph.D. Thesis, Department of Computer and Information Science, University of Pennsylvania., 2001. [37] David C. Parkes and Lyle H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In AAAI/IAAI, pages 74-81, 2000. [38] Ariel Rubinstein.",
                "Why are certain properties of binary relations relatively more common in natural languages.",
                "Econometrica, 64:343-356, 1996. [39] Tuomas Sandholm.",
                "Algorithm for optimal winner determination in combinatorial auctions.",
                "In Artificial Intelligence, volume 135, pages 1-54, 2002. [40] P. Santi, V. Conitzer, and T. Sandholm.",
                "Towards a characterization of polynomial preference elicitation with value queries in combinatorial auctions.",
                "In The 17th Annual Conference on Learning Theory, 2004. [41] Ilya Segal.",
                "The communication requirements of social choice rules and supporting budget sets, 2004.",
                "Working paper.",
                "Available from http://www.stanford.edu/ isegal/rules.pdf. [42] P.R.",
                "Wurman and M.P.",
                "Wellman.",
                "Akba: A progressive, anonymous-price combinatorial auction.",
                "In Second ACM Conference on Electronic Commerce, 2000. [43] Martin A. Zinkevich, Avrim Blum, and Tuomas Sandholm.",
                "On polynomial-time preference elicitation with value queries.",
                "In ACM Conference on Electronic Commerce, 2003. 43"
            ],
            "original_annotated_samples": [
                "Figure 1 summa3 A Walrasian equilibrium is vector of item prices for which all the items are sold when each bidder receives a bundle in his demand set. 4 In few recent auction designs (e.g., [4, 28]) the payments are not necessarily the final prices of the auctions. 30 Valuation family Upper <br>bound</br> Reference Lower <br>bound</br> Reference General min(n, O( √ m)) [26], Section 4.2 min(n, m1/2− ) [32] Substitutes 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subadditive O(logm) [13] 2 [13] k-duplicates O(m1/k+1 ) [14] O(m1/k+1 ) [14] Procurement ln m [32] (log m)/2 [29, 32] Figure 2: The best approximation factors currently achievable by computationally-efficient combinatorial auctions, for several classes of valuations.",
                "The main lower <br>bound</br> in this area, due to [32], states that indeed, due to inherent communication requirements, it is not possible for any iterative auction to find the optimal allocation among general valuations with sub-exponentially many queries.",
                "A similar exponential lower <br>bound</br> was shown in [32] also for even approximating the optimal allocation to within a factor of m1/2− .",
                "Upper <br>bound</br> for welfare approx.",
                "Lower <br>bound</br> for welfare approx."
            ],
            "translated_annotated_samples": [
                "La Figura 1 muestra un equilibrio walrasiano como un vector de precios de los artículos para los cuales todos los artículos se venden cuando cada postor recibe un conjunto en su conjunto de demanda. En algunos diseños de subasta recientes (por ejemplo, [4, 28]), los pagos no son necesariamente los precios finales de las subastas. Familia de valoración Límite superior Referencia Límite inferior Referencia General min(n, O( √ m)) [26], Sección 4.2 min(n, m1/2− ) [32] Sustitutos 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subaditiva O(logm) [13] 2 [13] k-duplicados O(m1/k+1 ) [14] O(m1/k+1 ) [14] Adquisiciones ln m [32] (log m)/2 [29, 32] Figura 2: Los mejores factores de aproximación actualmente alcanzables por subastas combinatorias computacionalmente eficientes, para varias clases de valoraciones.",
                "El <br>límite inferior</br> principal en esta área, debido a [32], establece que, de hecho, debido a los requisitos de comunicación inherentes, no es posible que ninguna subasta iterativa encuentre la asignación óptima entre valoraciones generales con un número subexponencial de consultas.",
                "Un <br>límite inferior</br> exponencial similar fue demostrado en [32] también para aproximar de manera óptima la asignación dentro de un factor de m1/2−.",
                "Límite superior para el bienestar aprox.",
                "Límite inferior para el bienestar aproximado."
            ],
            "translated_text": "En el Poder Computacional de Subastas Iterativas∗ [Resumen Extendido] Liad Blumrosen Escuela de Ingeniería e Informática Universidad Hebrea de Jerusalén Jerusalén, Israel liad@cs.huji.ac.il Noam Nisan Escuela de Ingeniería e Informática Universidad Hebrea de Jerusalén Jerusalén, Israel noam@cs.huji.ac.il RESUMEN Nos embarcamos en un análisis sistemático del poder y limitaciones de las subastas combinatorias iterativas. La mayoría de las subastas combinatorias iterativas existentes se basan en sugerir precios repetidamente para paquetes de artículos y consultar a los postores sobre su demanda bajo estos precios. Demostramos un gran número de resultados que muestran los límites de lo que se puede lograr mediante subastas de este tipo. Primero nos enfocamos en subastas que utilizan un número polinomial de consultas de demanda, y luego analizamos el poder de diferentes tipos de subastas de precio ascendente. Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía Términos Generales Algoritmos, Economía, Teoría 1. Las subastas combinatorias han recibido recientemente mucha atención. En una subasta combinatoria, un conjunto M de m artículos no idénticos se venden en una sola subasta a n postores competidores. Los postores tienen preferencias con respecto a los lotes de artículos que pueden recibir. Las preferencias del postor i están especificadas por una función de valoración vi: 2M → R+, donde vi(S) denota el valor que el postor i asigna a ganar el conjunto de artículos S. Suponemos disposición libre, es decir, que los vi son monótonos no decrecientes. El objetivo habitual del subastador es optimizar el bienestar social P i vi(Si), donde la asignación S1...Sn debe ser una partición de los artículos. Las aplicaciones incluyen muchos problemas complejos de asignación de recursos y, de hecho, las subastas combinatorias pueden ser vistas como la abstracción común de muchos problemas complejos de asignación de recursos. Las subastas combinatorias enfrentan dificultades económicas y computacionales y son un problema central en la frontera recientemente activa de la teoría económica y la informática. Un libro próximo [11] aborda muchos de los problemas involucrados en el diseño e implementación de subastas combinatorias. El diseño de una subasta combinatoria implica muchas consideraciones. En este artículo nos enfocamos en un solo tema central: la comunicación entre los oferentes y el mecanismo de asignación - la obtención de preferencias. Transferir toda la información sobre las preferencias de los licitadores requiere una cantidad de comunicación inasumible (exponencial en m). Por lo tanto, las subastas de revelación directa en las que los postores simplemente declaran sus preferencias al mecanismo solo son prácticas para tamaños de subasta muy pequeños o para familias muy limitadas de preferencias de postores. Por lo tanto, hemos visto una multitud de subastas iterativas sugeridas en las que el protocolo de subasta interactúa repetidamente con los diferentes postores, con el objetivo de obtener de manera adaptativa suficiente información sobre las preferencias de los postores para poder encontrar una asignación buena (óptima o cercana a óptima). La mayoría de las subastas iterativas sugeridas proceden manteniendo precios temporales para los lotes de artículos y consultando repetidamente a los postores sobre sus preferencias entre los lotes bajo el conjunto actual de precios, y luego actualizando el conjunto de precios de los lotes según las respuestas recibidas (por ejemplo, [22, 12, 17, 37, 3]). Efectivamente, una subasta iterativa de este tipo accede a las preferencias de los postores haciendo repetidamente el siguiente tipo de consulta de demanda a los postores: Consulta al postor i: un vector de precios de paquetes p = {p(S)}S⊆M; Respuesta: un paquete de artículos S ⊆ M que maximiza vi(S) − p(S). Estos tipos de consultas son muy naturales en un entorno económico, ya que capturan las preferencias reveladas de los postores. Algunas subastas, llamadas subastas de precio por artículo o de precio lineal, especifican un precio pi para cada artículo, y el precio de cualquier conjunto dado S siempre es lineal, p(S) = Σ i∈S pi. Otras subastas, llamadas subastas de precio por paquete, permiten especificar precios arbitrarios (no lineales) p(S) para los paquetes. Otra diferenciación importante entre los modelos de subastas iterativas se basa en si utilizan precios anónimos o no anónimos: En algunas subastas, los precios que se presentan a los postores son siempre los mismos (precios anónimos). En otras subastas (no anónimas), diferentes postores pueden enfrentar diferentes vectores de precios (discriminatorios). En las subastas de precio ascendente, obligar a que los precios sean anónimos puede ser una restricción significativa. En este artículo, nos embarcamos en un análisis sistemático del poder computacional de las subastas iterativas basadas en consultas de demanda. No buscamos presentar subastas para uso práctico, sino más bien entender las limitaciones y posibilidades de este tipo de subastas. En la primera parte de este documento, nuestra pregunta principal es ¿qué se puede hacer utilizando un número polinómico de este tipo de consultas? Es decir, polinomial en los parámetros principales del problema: n, m y el número de bits t necesarios para representar un único valor vi(S). Ten en cuenta que desde un punto de vista algorítmico estamos hablando de algoritmos de tiempo sublineal: el tamaño de la entrada aquí es realmente n(2m − 1) números, las descripciones de las funciones de valoración de todos los postores. Hay dos aspectos de eficiencia computacional en estos contextos: el primero es la comunicación con los postores, es decir, la cantidad de consultas realizadas, y el segundo es la usual tratabilidad computacional. Nuestros límites inferiores dependerán solo del número de consultas y se mantendrán independientemente de cualquier suposición computacional como P = NP. Nuestros límites superiores siempre serán computacionalmente eficientes tanto en términos del número de consultas como en términos de computación regular. Como se mencionó, este artículo se centra en el único aspecto de la obtención de preferencias y en sus consecuencias computacionales, sin abordar cuestiones de incentivos. Esto refuerza nuestros límites inferiores, pero significa que los límites superiores también requieren evaluación desde esta perspectiva antes de ser utilizados en cualquier subasta combinatoria real. La segunda parte de este documento estudia el poder de las subastas de precio ascendente. Las subastas ascendentes son subastas iterativas donde los precios publicados no pueden disminuir con el tiempo. En este trabajo, intentamos analizar sistemáticamente qué significan las diferencias entre varios modelos de subastas ascendentes. Intentamos responder a las siguientes preguntas: (i) ¿Qué modelos de subastas ascendentes pueden encontrar la asignación óptima, y para qué clases de valoraciones? (ii) En casos donde la asignación óptima no puede ser determinada por subastas ascendentes, ¿qué tan bien pueden estas subastas aproximar el bienestar social? (iii) ¿Cómo se comparan los diferentes modelos de subastas ascendentes? ¿Son algunos modelos computacionalmente más fuertes que otros? Las subastas ascendentes han sido ampliamente estudiadas en la literatura (ver la encuesta reciente de Parkes [35]). La mayor parte de este trabajo presentó límites superiores, es decir, mecanismos propuestos con precios ascendentes y analizó sus propiedades. Un resultado que se acerca más al nuestro es el de Gul y Stacchetti [17], quienes demostraron que ninguna subasta de precio ascendente de artículo puede siempre determinar los precios VCG, incluso para valoraciones de sustitutos. Nuestro marco es más general que la línea tradicional de investigación que se concentra en la asignación final y observamos, sin embargo, que alguna propiedad de incentivo débil viene de forma gratuita en las subastas de consulta de demanda, ya que los jugadores miopes responderán todas las consultas de demanda de manera veraz. También observamos que en algunos casos (¡pero no siempre!) los problemas de incentivos pueden ser manejados de forma ortogonal a los problemas de obtención de preferencias, por ejemplo, utilizando precios de Vickrey-Clarke-Groves (VCG) (por ejemplo, [4, 34]). Además, discutimos este resultado en la Sección 5.3. Subastas iterativas Subastas de demanda Subastas de precio de artículo Subastas de precio anónimo Subastas ascendentes 1 2 3 4 5 6 97 8 10 Figura 1: El diagrama clasifica las siguientes subastas según sus propiedades: (1) La adaptación [12] para la subasta de Kelso & Crawford [22]. (2) La Subasta de Proxy [3] de Ausubel & Milgrom. (3) iBundle(3) de Parkes & Ungar [34]. (4) iBundle(2) de Parkes & Ungar [37]. (5) Nuestra adaptación descendente para la aproximación de 2 para valoraciones submodulares por [25] (ver Subsección 5.4). (6) La subasta de Ausubel [4] para valoraciones de sustitutos. (7) La adaptación de Nisan & Segal [32] de la aproximación O( √ m) por [26]. (8) La subasta de artículo duplicado por [5]. (9) Subasta para fórmulas de Leer-Una-Vez por [43]. (10) La Subasta AkBA por Wurman & Wellman [42]. pagos y en particular, en alcanzar equilibrios walrasianos o equilibrios competitivos. Se sabe que existe un equilibrio walrasiano en el caso de las valoraciones de sustitutos, y se sabe que es imposible para cualquier clase más amplia de valoraciones [16]. Esto no descarta otras asignaciones mediante subastas ascendentes: en este documento consideramos las subastas como un proceso computacional donde el resultado, tanto la asignación como los pagos, pueden determinarse según todos los datos recopilados a lo largo de la subasta; Este marco general refuerza nuestros resultados negativos. Encontramos el estudio de las subastas ascendentes atractivo por diversas razones. Primero, las subastas ascendentes son ampliamente utilizadas en muchos contextos de la vida real, desde las subastas de espectro de la FCC hasta casi cualquier sitio web de comercio electrónico (por ejemplo, [2, 1]). De hecho, esta es quizás la forma más directa de vender artículos: preguntar a los postores qué les gustaría comprar a ciertos precios, y aumentar los precios de los productos con alta demanda. Las subastas ascendentes también se consideran más intuitivas para muchos postores, y se cree que aumentan la confianza de los postores en el subastador, ya que ven el resultado que emerge gradualmente de las respuestas de los postores. Las subastas ascendentes también tienen otras propiedades económicas deseadas, por ejemplo, implican una revelación de información menor (considere, por ejemplo, las subastas inglesas frente a las subastas de segundo precio sellado). 1.1 Trabajo Existente Muchos mecanismos de subasta combinatoria iterativos dependen de consultas de demanda (ver la encuesta en [35]). La Figura 1 muestra un equilibrio walrasiano como un vector de precios de los artículos para los cuales todos los artículos se venden cuando cada postor recibe un conjunto en su conjunto de demanda. En algunos diseños de subasta recientes (por ejemplo, [4, 28]), los pagos no son necesariamente los precios finales de las subastas. Familia de valoración Límite superior Referencia Límite inferior Referencia General min(n, O( √ m)) [26], Sección 4.2 min(n, m1/2− ) [32] Sustitutos 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subaditiva O(logm) [13] 2 [13] k-duplicados O(m1/k+1 ) [14] O(m1/k+1 ) [14] Adquisiciones ln m [32] (log m)/2 [29, 32] Figura 2: Los mejores factores de aproximación actualmente alcanzables por subastas combinatorias computacionalmente eficientes, para varias clases de valoraciones. Todos los límites inferiores en la tabla se aplican a todas las subastas iterativas (excepto la marcada con *); todos los límites superiores en la tabla se logran con consultas de demanda de precio de artículo. Categoriza las clases básicas de subastas implicadas por combinaciones de las propiedades anteriores y clasifica algunas de las subastas propuestas en la literatura de acuerdo con esta clasificación. Para nuestros propósitos, dos familias de estas subastas sirven como los principales puntos de partida motivadores: la primera son las subastas de precio de artículo ascendente de [22, 17] que con eficiencia computacional encuentran una asignación óptima entre valoraciones de sustitutos (brutos), y la segunda son las subastas de precio de paquete ascendente de [37, 3] que encuentran una asignación óptima entre valoraciones generales, pero no necesariamente con eficiencia computacional. El <br>límite inferior</br> principal en esta área, debido a [32], establece que, de hecho, debido a los requisitos de comunicación inherentes, no es posible que ninguna subasta iterativa encuentre la asignación óptima entre valoraciones generales con un número subexponencial de consultas. Un <br>límite inferior</br> exponencial similar fue demostrado en [32] también para aproximar de manera óptima la asignación dentro de un factor de m1/2−. Se conocen varios límites inferiores y superiores para la aproximación de algunas clases naturales de valoraciones, los cuales se resumen en la Figura 2. En [32], también se muestra la universalidad de las consultas de demanda: cualquier protocolo de comunicación no determinista para encontrar una asignación que optimice el bienestar social puede convertirse en uno que solo utilice consultas de demanda (con precios de paquetes). En [41] esto también se generalizó a protocolos no deterministas para encontrar asignaciones que satisfacen otros tipos naturales de requisitos económicos (por ejemplo, eficiencia social aproximada, ausencia de envidia). Sin embargo, en [33] se demostró que esta completitud de las consultas de demanda solo se cumple en el entorno no determinista, mientras que en el entorno determinista habitual, las consultas de demanda (incluso con precios de paquetes) pueden ser exponencialmente más débiles que la comunicación general. Las subastas de precio por paquete son una generalización de las subastas de precio por artículo (más naturales e intuitivas). Se sabe que las subastas de precio de artículo pueden ser exponencialmente más débiles: un buen ejemplo es el caso de valoraciones que son un XOR de k paquetes, donde k es pequeño (digamos, polinómico). Lahaie y Parkes [24] muestran una subasta de precio de paquete económicamente eficiente que utiliza un número polinómico de consultas siempre que k sea polinómico. Por el contrario, [7] muestra que existen valoraciones que son XORs de k = √ m paquetes, de tal manera que cualquier subasta de precio de artículo que encuentre una asignación óptima entre ellos requiere un número exponencial de consultas. Estos resultados forman parte de una línea reciente de investigación ([7, 43, 24, 40]) que estudia el problema de la obtención de preferencias en subastas combinatorias y su relación con el problema de obtención completo (es decir, aprender las valoraciones exactas de los postores). Estas son valoraciones donde los postores tienen valores para k paquetes específicos, y el valor de cada conjunto es el valor máximo de uno de estos paquetes que contiene. Estos documentos adaptan métodos de la teoría del aprendizaje automático al entorno de subastas combinatorias. El problema de la obtención de preferencias y el problema de la obtención completa se relacionan con un problema bien estudiado en microeconomía conocido como el problema de integrabilidad (ver, por ejemplo, [27]). Este problema estudia si y cuándo se puede derivar la función de utilidad de un consumidor a partir de su función de demanda. Organización del documento: Debido al relativamente gran número de resultados que presentamos, comenzamos con una revisión de nuestros nuevos resultados en la Sección 2. Después de describir nuestro modelo formal en la Sección 3, presentamos nuestros resultados sobre el poder de las consultas de demanda en la Sección 4. Luego, describimos el poder de las subastas ascendentes de precio de artículo (Sección 5) y las subastas ascendentes de precio de paquete (Sección 6). Los lectores que estén principalmente interesados en la discusión autocontenida de las subastas ascendentes pueden omitir la Sección 4. Las pruebas faltantes de la Sección 4 se pueden encontrar en la parte I del artículo completo ([8]). Las pruebas faltantes de las Secciones 5 y 6 se pueden encontrar en la parte II del artículo completo ([9]). 2. Una encuesta de nuestros resultados Nuestro análisis sistemático está compuesto por la combinación de un número bastante grande de resultados que caracterizan el poder y las limitaciones de varias clases de subastas. En esta sección, presentaremos una exposición describiendo nuestros nuevos resultados. Primero discutimos el poder de las subastas iterativas de demanda-consulta, y luego dirigimos nuestra atención a las subastas ascendentes. La Figura 3 resume algunos de nuestros principales resultados. 2.1 Comparación de consultas de demanda de tipos de consultas Preguntamos primero qué otros tipos naturales de consultas podríamos imaginar que las subastas iterativas utilicen. Aquí hay una lista de tales consultas que son naturales, han sido utilizadas en la literatura, o que encontramos útiles. 1. Consulta de valor: El subastador presenta un paquete S, el postor informa su valor v(S) para este paquete. 2. Consulta de valor marginal: El subastador presenta un paquete A y un artículo j, el postor informa cuánto está dispuesto a pagar por j, dado que ya posee A, es decir, v(j|A) = v(A ∪ {j}) − v(A). 3. Consulta de demanda (con precios de los artículos): El subastador presenta un vector de precios de los artículos p1...pm; el postor informa su demanda bajo estos precios, es decir, algún conjunto S que maximiza v(S) − Σ i∈S pi. Se debe especificar una regla de desempate. ¿Todos nuestros resultados 31 Restricción de Comunicación pueden encontrar una asignación óptima? Límite superior para el bienestar aprox. Límite inferior para el bienestar aproximado. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "approximation factor": {
            "translated_key": "factor de aproximación",
            "is_in_text": true,
            "original_annotated_sentences": [
                "On the Computational Power of Iterative Auctions∗ [Extended Abstract] Liad Blumrosen School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel liad@cs.huji.ac.il Noam Nisan School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel noam@cs.huji.ac.il ABSTRACT We embark on a systematic analysis of the power and limitations of iterative combinatorial auctions.",
                "Most existing iterative combinatorial auctions are based on repeatedly suggesting prices for bundles of items, and querying the bidders for their demand under these prices.",
                "We prove a large number of results showing the boundaries of what can be achieved by auctions of this kind.",
                "We first focus on auctions that use a polynomial number of demand queries, and then we analyze the power of different kinds of ascending-price auctions.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION Combinatorial auctions have recently received a lot of attention.",
                "In a combinatorial auction, a set M of m nonidentical items are sold in a single auction to n competing bidders.",
                "The bidders have preferences regarding the bundles of items that they may receive.",
                "The preferences of bidder i are specified by a valuation function vi : 2M → R+ , where vi(S) denotes the value that bidder i attaches to winning the bundle of items S. We assume free disposal, i.e., that the vis are monotone non-decreasing.",
                "The usual goal of the auctioneer is to optimize the social welfare P i vi(Si), where the allocation S1...Sn must be a partition of the items.",
                "Applications include many complex resource allocation problems and, in fact, combinatorial auctions may be viewed as the common abstraction of many complex resource allocation problems.",
                "Combinatorial auctions face both economic and computational difficulties and are a central problem in the recently active border of economic theory and computer science.",
                "A forthcoming book [11] addresses many of the issues involved in the design and implementation of combinatorial auctions.",
                "The design of a combinatorial auction involves many considerations.",
                "In this paper we focus on just one central issue: the communication between bidders and the allocation mechanism - preference elicitation.",
                "Transferring all information about bidders preferences requires an infeasible (exponential in m) amount of communication.",
                "Thus, direct revelation auctions in which bidders simply declare their preferences to the mechanism are only practical for very small auction sizes or for very limited families of bidder preferences.",
                "We have therefore seen a multitude of suggested iterative auctions in which the auction protocol repeatedly interacts with the different bidders, aiming to adaptively elicit enough information about the bidders preferences as to be able to find a good (optimal or close to optimal) allocation.",
                "Most of the suggested iterative auctions proceed by maintaining temporary prices for the bundles of items and repeatedly querying the bidders as to their preferences between the bundles under the current set of prices, and then updating the set of bundle prices according to the replies received (e.g., [22, 12, 17, 37, 3]).",
                "Effectively, such an iterative auction accesses the bidders preferences by repeatedly making the following type of demand query to bidders: Query to bidder i: a vector of bundle prices p = {p(S)}S⊆M ; Answer: a bundle of items S ⊆ M that maximizes vi(S) − p(S)..",
                "These types of queries are very natural in an economic setting as they capture the revealed preferences of the bidders.",
                "Some auctions, called item-price or linear-price auctions, specify a price pi for each item, and the price of any given bundle S is always linear, p(S) = P i∈S pi.",
                "Other auctions, called bundle-price auctions, allow specifying arbitrary (non-linear) prices p(S) for bundles.",
                "Another important differentiation between models of iterative auctions is 29 based on whether they use anonymous or non-anonymous prices: In some auctions the prices that are presented to the bidders are always the same (anonymous prices).",
                "In other auctions (non-anonymous), different bidders may face different (discriminatory) vectors of prices.",
                "In ascending-price auctions, forcing prices to be anonymous may be a significant restriction.",
                "In this paper, we embark on a systematic analysis of the computational power of iterative auctions that are based on demand queries.",
                "We do not aim to present auctions for practical use but rather to understand the limitations and possibilities of these kinds of auctions.",
                "In the first part of this paper, our main question is what can be done using a polynomial number of these types of queries?",
                "That is, polynomial in the main parameters of the problem: n, m and the number of bits t needed for representing a single value vi(S).",
                "Note that from an algorithmic point of view we are talking about sub-linear time algorithms: the input size here is really n(2m − 1) numbers - the descriptions of the valuation functions of all bidders.",
                "There are two aspects to computational efficiency in these settings: the first is the communication with the bidders, i.e., the number of queries made, and the second is the usual computational tractability.",
                "Our lower bounds will depend only on the number of queriesand hold independently of any computational assumptions like P = NP.",
                "Our upper bounds will always be computationally efficient both in terms of the number of queries and in terms of regular computation.",
                "As mentioned, this paper concentrates on the single aspect of preference elicitation and on its computational consequences and does not address issues of incentives.",
                "This strengthens our lower bounds, but means that the upper bounds require evaluation from this perspective also before being used in any real combinatorial auction.1 The second part of this paper studies the power of ascending -price auctions.",
                "Ascending auctions are iterative auctions where the published prices cannot decrease in time.",
                "In this work, we try to systematically analyze what do the differences between various models of ascending auctions mean.",
                "We try to answer the following questions: (i) Which models of ascending auctions can find the optimal allocation, and for which classes of valuations? (ii) In cases where the optimal allocation cannot be determined by ascending auctions, how well can such auctions approximate the social welfare? (iii) How do the different models for ascending auctions compare?",
                "Are some models computationally stronger than others?",
                "Ascending auctions have been extensively studied in the literature (see the recent survey by Parkes [35]).",
                "Most of this work presented upper bounds, i.e., proposed mechanisms with ascending prices and analyzed their properties.",
                "A result which is closer in spirit to ours, is by Gul and Stacchetti [17], who showed that no item-price ascending auction can always determine the VCG prices, even for substitutes valuations.2 Our framework is more general than the traditional line of research that concentrates on the final allocation and 1 We do observe however that some weak incentive property comes for free in demand-query auctions since myopic players will answer all demand queries truthfully.",
                "We also note that in some cases (but not always!) the incentives issues can be handled orthogonally to the preference elicitation issues, e.g., by using Vickrey-Clarke-Groves (VCG) prices (e.g., [4, 34]). 2 We further discuss this result in Section 5.3.",
                "Iterative auctions Demand auctions Item-price auctions Anonymous price auctions Ascending auctions 1 2 3 4 5 6 97 8 10 Figure 1: The diagram classifies the following auctions according to their properties: (1) The adaptation [12] for Kelso & Crawfords [22] auction. (2) The Proxy Auction [3] by Ausubel & Milgrom. (3) iBundle(3) by Parkes & Ungar [34]. (4) iBundle(2) by Parkes & Ungar [37]. (5) Our descending adaptation for the 2-approximation for submodular valuations by [25] (see Subsection 5.4). (6) Ausubels [4] auction for substitutes valuations. (7) The adaptation by Nisan & Segal [32] of the O( √ m) approximation by [26]. (8) The duplicate-item auction by [5]. (9) Auction for Read-Once formulae by [43]. (10) The AkBA Auction by Wurman & Wellman [42]. payments and in particular, on reaching Walrasian equilibria or Competitive equilibria.",
                "A Walrasian equilibrium3 is known to exist in the case of Substitutes valuations, and is known to be impossible for any wider class of valuations [16].",
                "This does not rule out other allocations by ascending auctions: in this paper we view the auctions as a computational process where the outcome - both the allocation and the payments - can be determined according to all the data elicited throughout the auction; This general framework strengthens our negative results.4 We find the study of ascending auctions appealing for various reasons.",
                "First, ascending auctions are widely used in many real-life settings from the FCC spectrum auctions [15] to almost any e-commerce website (e.g., [2, 1]).",
                "Actually, this is maybe the most straightforward way to sell items: ask the bidders what would they like to buy under certain prices, and increase the prices of over-demanded goods.",
                "Ascending auctions are also considered more intuitive for many bidders, and are believed to increase the trust of the bidders in the auctioneer, as they see the result gradually emerging from the bidders responses.",
                "Ascending auctions also have other desired economic properties, e.g., they incur smaller information revelation (consider, for example, English auctions vs. second-price sealed bid auctions). 1.1 Extant Work Many iterative combinatorial auction mechanisms rely on demand queries (see the survey in [35]).",
                "Figure 1 summa3 A Walrasian equilibrium is vector of item prices for which all the items are sold when each bidder receives a bundle in his demand set. 4 In few recent auction designs (e.g., [4, 28]) the payments are not necessarily the final prices of the auctions. 30 Valuation family Upper bound Reference Lower bound Reference General min(n, O( √ m)) [26], Section 4.2 min(n, m1/2− ) [32] Substitutes 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subadditive O(logm) [13] 2 [13] k-duplicates O(m1/k+1 ) [14] O(m1/k+1 ) [14] Procurement ln m [32] (log m)/2 [29, 32] Figure 2: The best approximation factors currently achievable by computationally-efficient combinatorial auctions, for several classes of valuations.",
                "All lower bounds in the table apply to all iterative auctions (except the one marked by *); all upper bounds in the table are achieved with item-price demand queries. rizes the basic classes of auctions implied by combinations of the above properties and classifies some of the auctions proposed in the literature according to this classification.",
                "For our purposes, two families of these auctions serve as the main motivating starting points: the first is the ascending item-price auctions of [22, 17] that with computational efficiency find an optimal allocation among (gross) substitutes valuations, and the second is the ascending bundleprice auctions of [37, 3] that find an optimal allocation among general valuations - but not necessarily with computational efficiency.",
                "The main lower bound in this area, due to [32], states that indeed, due to inherent communication requirements, it is not possible for any iterative auction to find the optimal allocation among general valuations with sub-exponentially many queries.",
                "A similar exponential lower bound was shown in [32] also for even approximating the optimal allocation to within a factor of m1/2− .",
                "Several lower bounds and upper bounds for approximation are known for some natural classes of valuations - these are summarized in Figure 2.",
                "In [32], the universal generality of demand queries is also shown: any non-deterministic communication protocol for finding an allocation that optimizes the social welfare can be converted into one that only uses demand queries (with bundle prices).",
                "In [41] this was generalized also to nondeterministic protocols for finding allocations that satisfy other natural types of economic requirements (e.g., approximate social efficiency, envy-freeness).",
                "However, in [33] it was demonstrated that this completeness of demand queries holds only in the nondeterministic setting, while in the usual deterministic setting, demand queries (even with bundle prices) may be exponentially weaker than general communication.",
                "Bundle-price auctions are a generalization of (the more natural and intuitive) item-price auctions.",
                "It is known that indeed item-price auctions may be exponentially weaker: a nice example is the case of valuations that are a XOR of k bundles5 , where k is small (say, polynomial).",
                "Lahaie and Parkes [24] show an economically-efficient bundle-price auction that uses a polynomial number of queries whenever k is polynomial.",
                "In contrast, [7] show that there exist valuations that are XORs of k = √ m bundles such that any item-price auction that finds an optimal allocation between them requires exponentially many queries.",
                "These results are part of a recent line of research ([7, 43, 24, 40]) that study the preference elicitation problem in combinatorial auctions and its relation to the full elicitation problem (i.e., learn5 These are valuations where bidders have values for k specific packages, and the value of each bundle is the maximal value of one of these packages that it contains. ing the exact valuations of the bidders).",
                "These papers adapt methods from machine-learning theory to the combinatorialauction setting.",
                "The preference elicitation problem and the full elicitation problem relate to a well studied problem in microeconomics known as the integrability problem (see, e.g., [27]).",
                "This problem studies if and when one can derive the utility function of a consumer from her demand function.",
                "Paper organization: Due to the relatively large number of results we present, we start with a survey of our new results in Section 2.",
                "After describing our formal model in Section 3, we present our results concerning the power of demand queries in Section 4.",
                "Then, we describe the power of item-price ascending auctions (Section 5) and bundle-price ascending auctions (Section 6).",
                "Readers who are mainly interested in the self-contained discussion of ascending auctions can skip Section 4.",
                "Missing proofs from Section 4 can be found in part I of the full paper ([8]).",
                "Missing proofs from Sections 5 and 6 can be found in part II of the full paper ([9]). 2.",
                "A SURVEY OF OUR RESULTS Our systematic analysis is composed of the combination of a rather large number of results characterizing the power and limitations of various classes of auctions.",
                "In this section, we will present an exposition describing our new results.",
                "We first discuss the power of demand-query iterative auctions, and then we turn our attention to ascending auctions.",
                "Figure 3 summarizes some of our main results. 2.1 Demand Queries Comparison of query types We first ask what other natural types of queries could we imagine iterative auctions using?",
                "Here is a list of such queries that are either natural, have been used in the literature, or that we found useful. 1.",
                "Value query: The auctioneer presents a bundle S, the bidder reports his value v(S) for this bundle. 2.",
                "Marginal-value query: The auctioneer presents a bundle A and an item j, the bidder reports how much he is willing to pay for j, given that he already owns A, i.e., v(j|A) = v(A ∪ {j}) − v(A). 3.",
                "Demand query (with item prices): The auctioneer presents a vector of item prices p1...pm; the bidder reports his demand under these prices, i.e., some set S that maximizes v(S) − P i∈S pi.6 6 A tie breaking rule should be specified.",
                "All of our results 31 Communication Constraint Can find an optimal allocation?",
                "Upper bound for welfare approx.",
                "Lower bound for welfare approx.",
                "Item-Price Demand Queries Yes 1 1 Poly.",
                "Communication No [32] min(n, O(m1/2 )) [26] min(n, m1/2− ) [32] Poly.",
                "Item-Price Demand Queries No [32] min(n, O(m1/2 )) min(n, m1/2− ) [32] Poly.",
                "Value Queries No [32] O( m√ log m ) [19] O( m log m ) Anonymous Item-Price AA No - min(O(n), O(m1/2− )) Non-anonymous Item-Price AA No -Anonymous Bundle-Price AA No - min(O(n), O(m1/2− )) Non-anonymous Bundle-Price AA Yes [37] 1 1 Poly Number of Item-Price AA No min(n, O(m1/2 ))Figure 3: This paper studies the economic efficiency of auctions that follow certain communication constraints.",
                "For each class of auctions, the table shows whether the optimal allocation can be achieved, or else, how well can it be approximated (both upper bounds and lower bounds).",
                "New results are highlighted.",
                "Abbreviations: Poly. (Polynomial number/size), AA (ascending auctions). - means that nothing is currently known except trivial solutions. 4.",
                "Indirect-utility query: The auctioneer presents a set of item prices p1...pm, and the bidder responds with his indirect-utility under these prices, that is, the highest utility he can achieve from a bundle under these prices: maxS⊆M (v(S) − P i∈S pi).7 5.",
                "Relative-demand query: the auctioneer presents a set of non-zero prices p1...pm, and the bidder reports the bundle that maximizes his value per unit of money, i.e., some set that maximizes v(S)P i∈S pi .8 Theorem: Each of these queries can be efficiently (i.e., in time polynomial in n, m, and the number of bits of precision t needed to represent a single value vi(S)) simulated by a sequence of demand queries with item prices.",
                "In particular this shows that demand queries can elicit all information about a valuation by simulating all 2m −1 value queries.",
                "We also observe that value queries and marginalvalue queries can simulate each other in polynomial time and that demand queries and indirect-utility queries can also simulate each other in polynomial time.",
                "We prove that exponentially many value queries may be needed in order to simulate a single demand query.",
                "It is interesting to note that for the restricted class of substitutes valuations, demand queries may be simulated by polynomial number of value queries [6].",
                "Welfare approximation The next question that we ask is how well can a computationally-efficient auction that uses only demand queries approximate the optimal allocation?",
                "Two separate obstacles are known: In [32], a lower bound of min(n, m1/2− ), for any fixed > 0, was shown for the <br>approximation factor</br> apply for any fixed tie breaking rule. 7 This is exactly the utility achieved by the bundle which would be returned in a demand query with the same prices.",
                "This notion relates to the Indirect-utility function studied in the Microeconomic literature (see, e.g., [27]). 8 Note that when all the prices are 1, the bidder actually reports the bundle with the highest per-item price.",
                "We found this type of query useful, for example, in the design of the approximation algorithm described in Figure 5 in Section 4.2. obtained using any polynomial amount of communication.",
                "A computational bound with the same value applies even for the case of single-minded bidders, but under the assumption of NP = ZPP [39].",
                "As noted in [32], the computationallyefficient greedy algorithm of [26] can be adapted to become a polynomial-time iterative auction that achieves a nearly matching <br>approximation factor</br> of min(n, O( √ m)).",
                "This iterative auction may be implemented with bundle-price demand queries but, as far as we see, not as one with item prices.",
                "Since in a single bundle-price demand query an exponential number of prices can be presented, this algorithm can have an exponential communication cost.",
                "In Section 4.2, we describe a different item-price auction that achieves the same <br>approximation factor</br> with a polynomial number of queries (and thus with a polynomial communication).",
                "Theorem: There exists a computationally-efficient iterative auction with item-price demand queries that finds an allocation that approximates the optimal welfare between arbitrary valuations to within a factor of min(n, O( √ m)).",
                "One may then attempt obtaining such an <br>approximation factor</br> using iterative auctions that use only the weaker value queries.",
                "However, we show that this is impossible: Theorem: Any iterative auction that uses a polynomial (in n and m) number of value queries can not achieve an <br>approximation factor</br> that is better than O( m log m ).9 Note however that auctions with only value queries are not completely trivial in power: the bundling auctions of Holzman et al. [19] can easily be implemented by a polynomial number of value queries and can achieve an <br>approximation factor</br> of O( m√ log m ) by using O(log m) equi-sized bundles.",
                "We do not know how to close the (tiny) gap between this upper bound and our lower bound.",
                "Representing bundle-prices We then deal with a critical issue with bundle-price auctions that was side-stepped by our model, as well as by all previous works that used bundle-price auctions: how are 9 This was also proven independently by Shahar Dobzinski and Michael Schapira. 32 the bundle prices represented?",
                "For item-price auctions this is not an issue since a query needs only to specify a small number, m, of prices.",
                "In bundle-price auctions that situation is more difficult since there are exponentially many bundles that require pricing.",
                "Our basic model (like all previous work that used bundle prices, e.g., [37, 34, 3]), ignores this issue, and only requires that the prices be determined, somehow, by the protocol.",
                "A finer model would fix a specific language for denoting bundle prices, force the protocol to represent the bundle-prices in this language, and require that the representations of the bundle-prices also be polynomial.",
                "What could such a language for denoting prices for all bundles look like?",
                "First note that specifying a price for each bundle is equivalent to specifying a valuation.",
                "Second, as noted in [31], most of the proposed bidding languages are really just languages for representing valuations, i.e., a syntactic representation of valuations - thus we could use any of them.",
                "This point of view opens up the general issue of which language should be used in bundle-price auctions and what are the implications of this choice.",
                "Here we initiate this line of investigation.",
                "We consider bundle-price auctions where the prices must be given as a XOR-bid, i.e., the protocol must explicitly indicate the price of every bundle whose value is different than that of all of its proper subsets.",
                "Note that all bundle-price auctions that do not explicitly specify a bidding language must implicitly use this language or a weaker one, since without a specific language one would need to list prices for all bundles, perhaps except for trivial ones (those with value 0, or more generally, those with a value that is determined by one of their proper subsets.)",
                "We show that once the representation length of bundle prices is taken into account (using the XOR-language), bundle-price auctions are no more strictly stronger than item-price auctions.",
                "Define the cost of an iterative auction as the total length of the queries and answers used throughout the auction (in the worst case).",
                "Theorem: For some class of valuations, bundle price auctions that use the XOR-language require an exponential cost for finding the optimal allocation.",
                "In contrast, item-price auctions can find the optimal allocation for this class within polynomial cost.10 This put doubts on the applicability of bundle-price auctions like [3, 37], and it may justify the use of hybrid pricing methods such as Ausubel, Cramton and Milgroms Clock-Proxy auction ([10]).",
                "Demand queries and linear programs The winner determination problem in combinatorial auctions may be formulated as an integer program.",
                "In many cases solving the linear-program relaxation of this integer program is useful: for some restricted classes of valuations it finds the optimum of the integer program (e.g., substitute valuations [22, 17]) or helps approximating the optimum (e.g., by randomized rounding [13, 14]).",
                "However, the linear program has an exponential number of variables.",
                "Nisan and Segal [32] observed the surprising fact that despite the ex10 Our proof relies on the sophisticated known lower bounds for constant depth circuits.",
                "We were not able to find an elementary proof. ponential number of variables, this linear program may be solved within polynomial communication.",
                "The basic idea is to solve the dual program using the Ellipsoid method (see, e.g., [20]).",
                "The dual program has a polynomial number of variables, but an exponential number of constraints.",
                "The Ellipsoid algorithm runs in polynomial time even on such programs, provided that a separation oracle is given for the set of constraints.",
                "Surprisingly, such a separation oracle can be implemented using a single demand query (with item prices) to each of the bidders.",
                "The treatment of [32] was somewhat ad-hoc to the problem at hand (the case of substitute valuations).",
                "Here we give a somewhat more general form of this important observation.",
                "Let us call the following class of linear programs generalized-winner-determination-relaxation (GWDR) LPs: Maximize X i∈N,S⊆M wi xi,S vi(S) s.t.",
                "X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M The case where wi = 1, di = 1, qj = 1 (for every i, j) is the usual linear relaxation of the winner determination problem.",
                "More generally, wi may be viewed as the weight given to bidder is welfare, qj may be viewed as the quantity of units of good j, and di may be viewed as duplicity of the number of bidders of type i. Theorem: Any GWDR linear program may be solved in polynomial time (in n, m, and the number of bits of precision t) using only demand queries with item prices.11 2.2 Ascending Auctions Ascending item-price auctions: It is well known that the item-price ascending auctions of Kelso and Crawford [22] and its variants [12, 16] find the optimal allocation as long as all players valuations have the substitutes property.",
                "The obvious question is whether the optimal allocation can be found for a larger class of valuations.",
                "Our main result here is a strong negative result: Theorem: There is a 2-item 2-player problem where no ascending item-price auction can find the optimal allocation.",
                "This is in contrast to both the power of bundle-price ascending auctions and to the power of general item-price demand queries (see above), both of which can always find the optimal allocation and in fact even provide full preference elicitation.",
                "The same proof proves a similar impossibility result for other types of auctions (e.g., descending auctions, non-anonymous auctions).",
                "More extension of this result: • Eliciting some classes of valuations requires an exponential number of ascending item-price trajectories. 11 The produced optimal solution will have polynomial support and thus can be listed fully. 33 • At least k − 1 ascending item-price trajectories are needed to elicit XOR formulae with k terms.",
                "This result is in some sense tight, since we show that any k-term XOR formula can be fully elicited by k−1 nondeterministic (i.e., when some exogenous teacher instructs the auctioneer on how to increase the prices) ascending auctions.12 We also show that item-price ascending auctions and iterative auctions that are limited to a polynomial number of queries (of any kind, not necessarily ascending) are incomparable in their power: ascending auctions, with small enough increments, can elicit the preferences in cases where any polynomial number of queries cannot.",
                "Motivated by several recent papers that studied the relation between eliciting and fully-eliciting the preferences in combinatorial auctions (e.g., [7, 24]), we explore the difference between these problems in the context of ascending auctions.",
                "We show that although a single ascending auction can determine the optimal allocation among any number of bidders with substitutes valuations, it cannot fully-elicit such a valuation even for a single bidder.",
                "While it was shown in [25] that the set of substitutes valuations has measure zero in the space of general valuations, its dimension is not known, and in particular it is still open whether a polynomial amount of information suffices to describe a substitutes valuation.",
                "While our result may be a small step in that direction (a polynomial full elicitation may still be possible with other communication protocols), we note that our impossibility result also holds for valuations in the class OXS defined by [25], valuations that we are able to show have a compact representation.",
                "We also give several results separating the power of different models for ascending combinatorial auctions that use item-prices: we prove, not surprisingly, that adaptive ascending auctions are more powerful than oblivious ascending auctions and that non-deterministic ascending auctions are more powerful than deterministic ascending auctions.",
                "We also compare different kinds of non-anonymous auctions (e.g., simultaneous or sequential), and observe that anonymous bundle-price auctions and non-anonymous item-price auctions are incomparable in their power.",
                "Finally, motivated by Dutch auctions, we consider descending auctions, and how they compare to ascending ones; we show classes of valuations that can be elicited by ascending item-price auctions but not by descending item-price auctions, and vice versa.",
                "Ascending bundle-price auctions: All known ascending bundle-price auctions that are able to find the optimal allocation between general valuations (with free disposal) use non-anonymous prices.",
                "Anonymous ascending-price auctions (e.g., [42, 21, 37]) are only known to be able to find the optimal allocation among superadditive valuations or few other simple classes ([36]).",
                "We show that this is no mistake: Theorem: No ascending auction with anonymous prices can find the optimal allocation between general valuations. 12 Non-deterministic computation is widely used in CS and also in economics (e.g, a Walrasian equilibrium or [38]).",
                "In some settings, deterministic and non-deterministic models have equal power (e.g., computation with finite automata).",
                "This bound is regardless of the running time, and it also holds for descending auctions and non-deterministic auctions.",
                "We strengthen this result significantly by showing that anonymous ascending auctions cannot produce a better than O( √ m) approximation - the approximation ratio that can be achieved with a polynomial number of queries ([26, 32]) and, as mentioned, with a polynomial number of item-price demand queries.",
                "The same lower bound clearly holds for anonymous item-price ascending auctions since such auctions can be simulated by anonymous bundle-price ascending auctions.",
                "We currently do not have any lower bound on the approximation achievable by non-anonymous item-price ascending auctions.",
                "Finally, we study the performance of the existing computationally-efficient ascending auctions.",
                "These protocols ([37, 3]) require exponential time in the worst case, and this is unavoidable as shown by [32].",
                "However, we also observe that these auctions, as well as the whole class of similar ascending bundle-price auctions, require an exponential time even for simple additive valuations.",
                "This is avoidable and indeed the ascending item-price auctions of [22] can find the optimal allocation for these simple valuations with polynomial communication. 3.",
                "THE MODEL 3.1 Discrete Auctions for Continuous Values Our model aims to capture iterative auctions that operate on real-valued valuations.",
                "There is a slight technical difficulty here in bridging the gap between the discrete nature of an iterative auction, and the continuous nature of the valuations.",
                "This is exactly the same problem as in modeling a simple English auction.",
                "There are three standard formal ways to model it: 1.",
                "Model the auction as a continuous process and study its trajectory in time.",
                "For example, the so-called Japanese auction is basically a continuous model of an English model.13 2.",
                "Model the auction as discrete and the valuations as continuously valued.",
                "In this case we introduce a parameter and usually require the auction to produce results that are -close to optimal. 3.",
                "Model the valuations as discrete.",
                "In this case we will assume that all valuations are integer multiples of some small fixed quantity δ, e.g., 1 penny.",
                "All communication in this case is then naturally finite.",
                "In this paper we use the latter formulation and assume that all values are multiples of some δ.",
                "Thus, in some parts of the paper we assume without loss of generality that δ = 1, hence all valuations are integral.",
                "Almost all (if not all) of our results can be translated to the other two models with little effort. 3.2 Valuations A single auctioneer is selling m indivisible non-homogeneous items in a single auction, and let M be the set of these 13 Another similar model is the moving knives model in the cake-cutting literature. 34 items and N be the set of bidders.",
                "Each one of the n bidders in the auction has a valuation function vi : 2m → {0, δ, 2δ, ..., L}, where for every bundle of items S ⊆ M, vi(S) denotes the value of bidder i for the bundle S and is a multiple of δ in the range 0...L. We will sometimes denote the number of bits needed to represent such values in the range 0...L by t = log L. We assume free disposal, i.e., S ⊆ T implies vi(S) ≤ vi(T) and that vi(∅) = 0 for all bidders.",
                "We will mention the following classes of valuations: • A valuation is called sub-modular if for all sets of items A and B we have that v(A ∪ B) + v(A ∩ B) ≤ v(A) + v(B). • A valuation is called super-additive if for all disjoint sets of items A and B we have that v(A∪B) ≥ v(A)+ v(B). • A valuation is called a k-bundle XOR if it can be represented as a XOR combination of at most k atomic bids [30], i.e., if there are at most k bundles Si and prices pi such that for all S, v(S) = maxi|S⊇Si pi.",
                "Such valuations will be denoted by v = (S1 : p1) ⊕ (S2 : p2) ⊕ . . . ⊕ (Sk : pk).14 3.3 Iterative Auctions The auctioneer sets up a protocol (equivalently an algorithm), where at each stage of the protocol some information q - termed the query - is sent to some bidder i, and then bidder i replies with some reply that depends on the query as well as on his own valuation.",
                "In this paper, we assume that we have complete control over the bidders behavior, and thus the protocol also defines a reply function ri(q, vi) that specifies bidder is reply to query q.",
                "The protocol may be adaptive: the query value as well as the queried bidder may depend on the replies received for past queries.",
                "At the end of the protocol, an allocation S1...Sn must be declared, where Si ∩ Sj = ∅ for i = j.",
                "We say that the auction finds an optimal allocation if it finds the allocation that maximizes the social welfareP i vi(Si).",
                "We say that it finds a c-approximation if P i vi(Si) ≥ P i vi(Ti)/c where T1...Tn is an optimal allocation.",
                "The running time of the auction on a given instance of the bidders valuations is the total number of queries made on this instance.",
                "The running time of a protocol is the worst case cost over all instances.",
                "Note that we impose no computational limitations on the protocol or on the players.15 This of course only strengthens our hardness results.",
                "Yet, our positive results will not use this power and will be efficient also in the usual computational sense.",
                "Our goal will be to design computationally-efficient protocols.",
                "We will deem a protocol computationally-efficient if its cost is polynomial in the relevant parameters: the number of bidders n, the number of items m, and t = log L, where L is the largest possible value of a bundle.",
                "However, when we discuss ascending-price auctions and their variants, a computationally-efficient protocol will be required to be 14 For example, v = (abcd : 5) ⊕ (ab : 3) ⊕ (c : 4) denotes the XOR valuation with the terms abcd, ab, c and prices 5, 3, 4 respectively.",
                "For this valuation, v(abcd) = 5, v(abd) = 3, v(abc) = 4. 15 The running time really measures communication costs and not computational running time. pseudo-polynomial, i.e., it should ask a number of queries which is polynomial in m, n and L δ .",
                "This is because that ascending auctions can usually not achieve such running times (consider even the English auction on a single item).16 Note that all of our results give concrete bounds, where the dependence on the parameters is given explicitly; we use the standard big-Oh notation just as a shorthand.",
                "We say than an auction elicits some class V of valuations, if it determines the optimal allocation for any profile of valuations drawn from V ; We say that an auction fully elicits some class of valuations V , if it can fully learn any single valuation v ∈ V (i.e., learn v(S) for every S). 3.4 Demand Queries and Ascending Auctions Most of the paper will be concerned with a common special case of iterative auctions that we term demand auctions.",
                "In such auctions, the queries that are sent to bidders are demand queries: the query specifies a price p(S) ∈ + for each bundle S. The reply of bidder i is simply the set most desired - demanded - under these prices.",
                "Formally, a set S that maximizes vi(S) − p(S).",
                "It may happen that more than one set S maximizes this value.",
                "In which case, ties are broken according to some fixed tie-breaking rule, e.g., the lexicographically first such set is returned.",
                "All of our results hold for any fixed tie-breaking rule.",
                "Ascending auctions are iterative auctions with non-decreasing prices: Definition 1.",
                "In an ascending auction, the prices in the queries to the same bidder can only increase in time.",
                "Formally, let p be a query made for bidder i, and q be a query made for bidder i at a later stage in the protocol.",
                "Then for all sets S, q(S) ≥ p(S).",
                "A similar variant, which we also study and that is also common in real life, is descending auctions, in which prices can only decrease in time.",
                "Note that the term ascending auction refers to an auction with a single ascending trajectory of prices.",
                "It may be useful to define multi-trajectory ascending auctions, in which the prices maybe reset to zero a number of times (see, e.g., [4]).",
                "We consider two main restrictions on the types of allowed demand queries: Definition 2.",
                "Item Prices: The prices in each query are given by prices pj for each item j.",
                "The price of a set S is additive: p(S) = P j∈S pj.",
                "Definition 3.",
                "Anonymous prices: The prices seen by the bidders at any stage in the auction are the same, i.e. whenever a query is made to some bidder, the same query is also made to all other bidders (with the prices unchanged).",
                "In auctions with non-anonymous (discriminatory) prices, each bidder i has personalized prices denoted by pi (S).17 In this paper, all auctions are anonymous unless otherwise specified.",
                "Note that even though in our model valuations are integral (or multiples of some δ), we allow the demand query to 16 Most of the auctions we present may be adapted to run in time polynomial in log L, using a binary-search-like procedure, losing their ascending nature. 17 Note that a non-anonymous auction can clearly be simulated by n parallel anonymous auctions. 35 use arbitrary real numbers in +.",
                "That is, we assume that the increment we use in the ascending auctions may be significantly smaller than δ.",
                "All our hardness results hold for any , even for continuous price increments.",
                "A practical issue here is how will the query be specified: in the general case, an exponential number of prices needs to be sent in a single query.",
                "Formally, this is not a problem as the model does not limit the length of queries in any way - the protocol must simply define what the prices are in terms of the replies received for previous queries.",
                "We look into this issue further in Section 4.3. 4.",
                "THE POWER OF DEMAND QUERIES In this section, we study the power of iterative auctions that use demand queries (not necessarily ascending).",
                "We start by comapring demand queries to other types of queries.",
                "Then, we discuss how well can one approximate the optimal welfare using a polynomial number of demand queries.",
                "We also initiate the study of the representation of bundle-price demand queries, and finally, we show how demand queries help solving the linear-programming relaxation of combinatorial auctions in polynomial time. 4.1 The Power of Different Types of Queries In this section we compare the power of the various types of queries defined in Section 2.",
                "We will present computationally -efficient simulations of these query types using item-price demand queries.",
                "In Section 5.1 we show that these simulations can also be done using item-price ascending auctions.",
                "Lemma 4.1.",
                "A value query can be simulated by m marginalvalue queries.",
                "A marginal-value query can be simulated by two value queries.",
                "Lemma 4.2.",
                "A value query can be simulated by mt demand queries (where t = log L is the number of bits needed to represent a single bundle value).18 As a direct corollary we get that demand auctions can always fully elicit the bidders valuations by simulating all possible 2m − 1 queries and thus elicit enough information for determining the optimal allocation.",
                "Note, however, that this elicitation may be computationally inefficient.",
                "The next lemma shows that demand queries can be exponentially more powerful than value queries.",
                "Lemma 4.3.",
                "An exponential number of value queries may be required for simulating a single demand query.",
                "Indirect utility queries are, however, equivalent in power to demand queries: Lemma 4.4.",
                "An indirect-utility query can be simulated by mt + 1 demand queries.",
                "A demand query can be simulated by m + 1 indirect-utility queries.",
                "Demand queries can also simulate relative-demand queries:19 18 Note that t bundle-price demand queries can easily simulate a value query by setting the prices of all the bundles except S (the bundle with the unknown value) to be L, and performing a binary search on the price of S. 19 Note: although in our model values are integral (our multiples of δ), we allow the query prices to be arbitrary real numV MV D IU RD V 1 2 exp exp exp MV m 1 exp exp exp D mt poly 1 mt+1 poly IU 1 2 m+1 1 poly RD - - - - 1 Figure 4: Each entry in the table specifies how many queries of this row are needed to simulate a query from the relevant column.",
                "Abbreviations: V (value query), MV (marginal-value query), D (demand query), IU (Indirect-utility query), RD (relative demand query).",
                "Lemma 4.5.",
                "Relative-demand queries can be simulated by a polynomial number of demand queries.",
                "According to our definition of relative-demand queries, they clearly cannot simulate even value queries.",
                "Figure 4 summarizes the relations between these query types. 4.2 Approximating the Social Welfare with Value and Demand Queries We know from [32] that iterative combinatorial auctions that only use a polynomial number of queries can not find an optimal allocation among general valuations and in fact can not even approximate it to within a factor better than min{n, m1/2− }.",
                "In this section we ask how well can this approximation be done using demand queries with item prices, or using the weaker value queries.",
                "We show that, using demand queries, the lower bound can be matched, while value queries can only do much worse.",
                "Figure 5 describes a polynomial-time algorithm that achieves a min(n, O( √ m)) approximation ratio.",
                "This algorithm greedily picks the bundles that maximize the bidders per-item value (using relative-demand queries, see Section 4.1).",
                "As a final step, it allocates all the items to a single bidder if it improves the social welfare (this can be checked using value queries).",
                "Since both value queries and relative-demand queries can be simulated by a polynomial number of demand queries with item prices (Lemmas 4.2 and 4.5), this algorithm can be implemented by a polynomial number of demand queries with item prices.20 Theorem 4.6.",
                "The auction described in Figure 5 can be implemented by a polynomial number of demand queries and achieves a min{n, 4 √ m}-approximation for the social welfare.",
                "We now ask how well can the optimal welfare be approximated by a polynomial number of value queries.",
                "First we note that value queries are not completely powerless: In [19] it is shown that if the m items are split into k fixed bundles of size m/k each, and these fixed bundles are auctioned as though each was indivisible, then the social welfare bers, thus we may have bundles with arbitrarily close relative demands.",
                "In this sense the simulation above is only up to any given (and the number of queries is O(log L+log 1 )).",
                "When the relative-demand query prices are given as rational numbers, exact simulation is implied when log is linear in the input length. 20 In the full paper [8], we observe that this algorithm can be implemented by two descending item-price auctions (where we allow removing items along the auction). 36 generated by such an auction is at least m√ k -approximation of that possible in the original auction.",
                "Notice that such an auction can be implemented by 2k − 1 value queries to each bidder - querying the value of each bundle of the fixed bundles.",
                "Thus, if we choose k = log m bundles we get an m√ log m -approximation while still using a polynomial number of queries.",
                "The following lemma shows that not much more is possible using value queries: Lemma 4.7.",
                "Any iterative auction that uses only value queries and distinguishes between k-tuples of 0/1 valuations where the optimal allocation has value 1, and those where the optimal allocation has value k requires at least 2 m k queries.",
                "Proof.",
                "Consider the following family of valuations: for every S, such that |S| > m/2, v(S) = 1, and there exists a single set T, such that for |S| ≤ m/2, v(S) = 1 iff T ⊆ S and v(S) = 0 otherwise.",
                "Now look at the behavior of the protocol when all valuations vi have T = {1...m}.",
                "Clearly in this case the value of the best allocation is 1 since no set of size m 2 or lower has non-zero value for any player.",
                "Fix the sequence of queries and answers received on this k-tuple of valuations.",
                "Now consider the k-tuple of valuations chosen at random as follows: a partition of the m items into k sets T1...Tk each of size m k each is chosen uniformly at random among all such partitions.",
                "Now consider the k-tuple of valuations from our family that correspond to this partition - clearly Ti can be allocated to i, for each i, getting a total value of k. Now look at the protocol when running on these valuations and compare its behavior to the original case.",
                "Note that the answer to a query S to player i differs between the case of Ti and the original case of T = {1...m} only if |S| ≤ m 2 and Ti ⊆ S. Since Ti is distributed uniformly among all sets of size exactly m k , we have that for any fixed query S to player i, where |S| ≤ m 2 , Pr[Ti ⊆ S] ≤ „ |S| m «|Ti| ≤ 2− m k Using the union-bound, if the original sequence of queries was of length less than 2 m k , then with positive probability none of the queries in the sequence would receive a different answer than for the original input tuple.",
                "This is forbidden since the protocol must distinguish between this case and the original case - which cannot happen if all queries receive the same answer.",
                "Hence there must have been at least 2 m k queries for the original tuple of valuations.",
                "We conclude that a polynomial time protocol that uses only value queries cannot obtain a better than O( m log m ) approximation of the welfare: Theorem 4.8.",
                "An iterative auction that uses a polynomial number of value queries cannot achieve better than O( m log m )-approximation for the social welfare.",
                "Proof.",
                "Immediate from Lemma 4.7: achieving any approximation ratio k which is asymptotically greater than m log m needs an exponential number of value queries.",
                "An Approximation Algorithm: Initialization: Let T ← M be the current items for sale.",
                "Let K ← N be the currently participating bidders.",
                "Let S∗ 1 ← ∅, ..., S∗ n ← ∅ be the provisional allocation.",
                "Repeat until T = ∅ or K = ∅: Ask each bidder i in K for the bundle Si that maximizes her per-item value, i.e., Si ∈ argmaxS⊆T vi(S) |S| .",
                "Let i be the bidder with the maximal per-item value, i.e., i ∈ argmaxi∈K vi(Si) |Si| .",
                "Set: s∗ i = si, K = K \\ i, M = M \\ Si Finally: Ask the bidders for their values vi(M) for the grand bundle.",
                "If allocating all the items to some bidder i improves the social welfare achieved so far (i.e., ∃i ∈ N such that vi(M) > P i∈N vi(S∗ i )), then allocate all items to this bidder i.",
                "Figure 5: This algorithm achieves a min{n, 4 √ m}approximation for the social welfare, which is asymptotically the best worst-case approximation possible with polynomial communication.",
                "This algorithm can be implemented with a polynomial number of demand queries. 4.3 The Representation of Bundle Prices In this section we explicitly fix the language in which bundle prices are presented to the bidders in bundle-price auctions.",
                "This language requires the algorithm to explicitly list the price of every bundle with a non-trivial price.",
                "Trivial in this context is a price that is equal to that of one of its proper subsets (which was listed explicitly).",
                "This representation is equivalent to the XOR-language for expressing valuations.",
                "Formally, each query q is given by an expression: q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl).",
                "In this representation, the price demanded for every set S is simply p(S) = max{k=1...l|Sk⊆S}pk.",
                "Definition 4.",
                "The length of the query q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl) is l. The cost of an algorithm is the sum of the lengths of the queries asked during the operation of the algorithm on the worst case input.",
                "Note that under this definition, bundle-price auctions are not necessarily stronger than item-price auctions.",
                "An itemprice query that prices each item for 1, is translated to an exponentially long bundle-price query that needs to specify the price |S| for each bundle S. But perhaps bundle-price auctions can still find optimal allocations whenever itemprice auction can, without directly simulating such queries?",
                "We show that this is not the case: indeed, when the representation length is taken into account, bundle price auctions are sometimes seriously inferior to item price auctions.",
                "Consider the following family of valuations: Each item is valued at 3, except that for some single set S, its value is a bit more: 3|S| + b, where b ∈ {0, 1, 2}.",
                "Note that an item price auction can easily find the optimal allocation between any two such valuations: Set the prices of each item to 3+ ; if the demand sets of the two players are both empty, then b = 0 for both valuations, and an arbitrary allocation is fine.",
                "If one of them is empty and the other non-empty, allocate the non-empty demand set to its bidder, and the rest to the other.",
                "If both demand sets are non-empty then, unless they form an exact partition, we need to see which b is larger, which we can do by increasing the price of a single item in each demand set. 37 We will show that any bundle-price auction that uses only the XOR-language to describe bundle prices requires an exponential cost (which includes the sum of all description lengths of prices) to find an optimal allocation between any two such valuations.",
                "Lemma 4.9.",
                "Every bundle-price auction that uses XORexpressions to denote bundle prices requires 2Ω( √ m) cost in order to find the optimal allocation among two valuations from the above family.",
                "The complication in the proof stems from the fact that using XOR-expressions, the length of the price description depends on the number of bundles whose price is strictly larger than each of their subsets - this may be significantly smaller than the number of bundles that have a non-zero price. (The proof becomes easy if we require the protocol to explicitly name every bundle with non-zero price.)",
                "We do not know of any elementary proof for this lemma (although we believe that one can be found).",
                "Instead we reduce the problem to a well known lower bound in boolean circuit complexity [18] stating that boolean circuits of depth 3 that compute the majority function on m variables require 2Ω( √ m) size. 4.4 Demand Queries and Linear Programming Consider the following linear-programming relaxation for the generalized winner-determination problem in combinatorial auctions (the primal program): Maximize X i∈N,S⊆M wi xi,S vi(S) s.t.",
                "X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M Note that the primal program has an exponential number of variables.",
                "Yet, we will be able to solve it in polynomial time using demand queries to the bidders.",
                "The solution will have a polynomial size support (non-zero values for xi,S), and thus we will be able to describe it in polynomial time.",
                "Here is its dual: Minimize X j∈M qjpj + X i∈N diui s.t. ui + X j∈S pj ≥ wivi(S) ∀i ∈ N, S ⊆ M pi ≥ 0, uj ≥ 0 ∀i ∈ M, j ∈ N Notice that the dual problem has exactly n + m variables but an exponential number of constraints.",
                "Thus, the dual can be solved using the Ellipsoid method in polynomial time - if a separation oracle can be implemented in polynomial time.",
                "Recall that a separation oracle, when given a possible solution, either confirms that it is a feasible solution, or responds with a constraint that is violated by the possible solution.",
                "We construct a separation oracle for solving the dual program, using a single demand query to each of the bidders.",
                "Consider a possible solution (u, p) for the dual program.",
                "We can re-write the constraints of the dual program as: ui/wi ≥ vi(S) − X j∈S pj/wi Now a demand query to bidder i with prices pj/wi reveals exactly the set S that maximizes the RHS of the previous inequality.",
                "Thus, in order to check whether (u, p) is feasible it suffices to (1) query each bidder i for his demand Di under the prices pj/wi; (2) check only the n constraints ui + P j∈Di pj ≥ wivi(Di) (where vi(Di) can be simulated using a polynomial sequence of demand queries as shown in Lemma 4.2).",
                "If none of these is violated then we are assured that (u, p) is feasible; otherwise we get a violated constraint.",
                "What is left to be shown is how the primal program can be solved. (Recall that the primal program has an exponential number of variables.)",
                "Since the Ellipsoid algorithm runs in polynomial time, it encounters only a polynomial number of constraints during its operation.",
                "Clearly, if all other constraints were removed from the dual program, it would still have the same solution (adding constraints can only decrease the space of feasible solutions).",
                "Now take the reduced dual where only the constraints encountered exist, and look at its dual.",
                "It will have the same solution as the original dual and hence of the original primal.",
                "However, look at the form of this dual of the reduced dual.",
                "It is just a version of the primal program with a polynomial number of variables - those corresponding to constraints that remained in the reduced dual.",
                "Thus, it can be solved in polynomial time, and this solution clearly solves the original primal program, setting all other variables to zero. 5.",
                "ITEM-PRICE ASCENDING AUCTIONS In this section we characterize the power of ascending item-price auctions.",
                "We first show that this power is not trivial: such auctions can in general elicit an exponential amount of information.",
                "On the other hand, we show that the optimal allocation cannot always be determined by a single ascending auction, and in some cases, nor by an exponential number of ascending-price trajectories.",
                "Finally, we separate the power of different models of ascending auctions. 5.1 The Power of Item-Price Ascending Auctions We first show that if small enough increments are allowed, a single ascending trajectory of item-prices can elicit preferences that cannot be elicited with polynomial communication.",
                "As mentioned, all our hardness results hold for any increment, even infinitesimal.",
                "Theorem 5.1.",
                "Some classes of valuations can be elicited by item-price ascending auctions, but cannot be elicited by a polynomial number of queries of any kind.",
                "Proof. (sketch) Consider two bidders with v(S) = 1 if |S| > n 2 , v(S) = 0 if |S| < n 2 and every S such that |S| = n 2 has an unknown value from {0, 1}.",
                "Due to [32], determining the optimal allocation here requires exponential communication in the worst case.",
                "Nevertheless, we show (see [9]) that an item-price ascending auction can do it, as long as it can use exponentially small increments.",
                "We now describe another positive result for the power of item-price ascending auctions.",
                "In section 4.1, we showed 38 v(ab) v(a) v(b) Bidder 1 2 α ∈ (0, 1) β ∈ (0, 1) Bidder 2 2 2 2 Figure 6: No item-price ascending auctions can determine the optimal allocation for this class of valuations. that a value query can be simulated with a (truly) polynomial number of item-price demand queries.",
                "Here, we show that every value query can be simulated by a (pseudo) polynomial number of ascending item-price demand queries. (In the next subsection, we show that we cannot always simulate even a pair of value queries using a single item-price ascending auction.)",
                "In the full paper (part II,[9]), we show that we can simulate other types of queries using item-price ascending auctions.",
                "Proposition 5.2.",
                "A value query can be simulated by an item-price ascending auction.",
                "This simulation requires a polynomial number of queries.",
                "Actually, the proof for Proposition 5.2 proves a stronger useful result regarding the information elicited by iterative auctions.",
                "It says that in any iterative auction in which the changes of prices are small enough in each stage (pseudocontinuous auctions), the value of all bundles demanded during the auction can be computed.",
                "The basic idea is that when the bidder moves from demanding some bundle Ti to demanding another bundle Ti+1, there is a point in which she is indifferent between these two bundles.",
                "Thus, knowing the value of some demanded bundle (e.g., the empty set) enables computing the values of all other demanded bundles.",
                "We say that an auction is pseudo-continuous, if it only uses demand queries, and in each step, the price of at most one item is changed by (for some ∈ (0, δ]) with respect to the previous query.",
                "Proposition 5.3.",
                "Consider any pseudo-continuous auction (not necessarily ascending), in which bidder i demands the empty set at least once along the auction.",
                "Then, the value of every bundle demanded by bidder i throughout the auction can be calculated at the end of the auction. 5.2 Limitations of Item-Price Ascending Auctions Although we observed that demand queries can solve any combinatorial auction problem, when the queries are restricted to be ascending, some classes of valuations cannot be elicited nor fully-elicited.",
                "An example for such class of valuations is given in Figure 6.",
                "Theorem 5.4.",
                "There are classes of valuations that cannot be elicited nor fully elicited by any item-price ascending auction.",
                "Proof.",
                "Let bidder 1 have the valuation described in the first row of Figure 6, where α and β are unknown values in (0, 1).",
                "First, we prove that this class cannot be fully elicited by a single ascending auction.",
                "Specifically, an ascending auction cannot reveal the values of both α and β.",
                "As long as pa and pb are both below 1, the bidder will always demand the whole bundle ab: her utility from ab is strictly greater than the utility from either a or b separately.",
                "For example, we show that u1(ab) > u1(a): u1(ab) = 2 − (pa + pb) = 1 − pa + 1 − pb > vA(a) − pa + 1 − pb > u1(a) Thus, in order to gain any information about α or β, the price of one of the items should become at least 1, w.l.o.g. pa ≥ 1.",
                "But then, the bundle a will not be demanded by bidder 1 throughout the auction, thus no information at all will be gained about α.",
                "Now, assume that bidder 2 is known to have the valuation described in the second row of Figure 6.",
                "The optimal allocation depends on whether α is greater than β (in bidder 1s valuation), and we proved that an ascending auction cannot determine this.",
                "The proof of the theorem above shows that for an unknown value to be revealed, the price of one item should be greater than 1, and the other price should be smaller than 1.",
                "Therefore, in a price-monotonic trajectory of prices, only one of these values can be revealed.",
                "An immediate conclusion is that this impossibility result also holds for item-price descending auctions.",
                "Since no such trajectory exists, then the same conclusion even holds for non-deterministic itemprice auctions (in which exogenous data tells us how to increase the prices).",
                "Also note that since the hardness stems from the impossibility to fully-elicit a valuation of a single bidder, this result also holds for non-anonymous ascending item-price auctions. 5.3 Limitations of Multi-Trajectory Ascending Auctions According to Theorem 5.4, no ascending item-price auction can always elicit the preferences (we prove a similar result for bundle prices in section 6).",
                "But can two ascending trajectories do the job?",
                "Or a polynomial number of ascending trajectories?",
                "We give negative answers for such suggestions.",
                "We define a k-trajectory ascending auction as a demandquery iterative auction in which the demand queries can be partitioned to k sets of queries, where the prices published in each set only increase in time.",
                "Note that we use a general definition; It allows the trajectories to run in parallel or sequentially, and to use information elicited in some trajectories for determining the future queries in other trajectories.",
                "The power of multiple-trajectory auctions can be demonstrated by the negative result of Gul and Stacchetti [17] who showed that even for an auction among substitutes valuations, an anonymous ascending item-price auction cannot compute VCG prices for all players.21 Ausubel [4] overcame this impossibility result and designed auctions that do compute VCG prices by organizing the auction as a sequence of n + 1 ascending auctions.",
                "Here, we prove that one cannot elicit XOR valuations with k terms by less than k − 1 ascending trajectories.",
                "On the other hand, we show that an XOR formula can be fully elicited by k−1 non-deterministic ascending auctions (or by k−1 deterministic ascending auctions if the auctioneer knows the atomic bundles).22 21 A recent unpublished paper by Mishra and Parkes extends this result, and shows that non-anonymous prices with bundle-prices are necessary in order that an ascending auction will end up with a universal-competitive-equilibrium (that leads to VCG payments). 22 This result actually separates the power of deterministic 39 Proposition 5.5.",
                "XOR valuations with k terms cannot be elicited (or fully elicited) by any (k-2)-trajectory itemprice ascending auction, even when the atomic bundles are known to the elicitor.",
                "However, these valuations can be elicited (and fully elicited) by (k-1)-trajectory non-deterministic non-anonymous item-price ascending auctions.",
                "Moreover, an exponential number of trajectories is required for eliciting some classes of valuations: Proposition 5.6.",
                "Elicitation and full-elicitation of some classes of valuations cannot be done by any k-trajectory itemprice ascending auction, where k = o(2m ).",
                "Proof. (sketch) Consider the following class of valuations: For |S| < m 2 , v(S) = 0 and for |S| > m 2 , v(S) = 2; every bundle S of size m 2 has some unknown value in (0, 1).",
                "We show ([9]) that a single item-price ascending auction can reveal the value of at most one bundle of size n 2 , and therefore an exponential number of ascending trajectories is needed in order to elicit such valuations.",
                "We observe that the algorithm we presented in Section 4.2 can be implemented by a polynomial number of ascending auctions (each item-price demand query can be considered as a separate ascending auction), and therefore a min(n, 4 √ m)-approximation can be achieved by a polynomial number of ascending auctions.",
                "We do not currently have a better upper bound or any lower bound. 5.4 Separating the Various Models of Ascending Auctions Various models for ascending auctions have been suggested in the literature.",
                "In this section, we compare the power of the different models.",
                "As mentioned, all auctions are considered anonymous and deterministic, unless specified otherwise.",
                "Ascending vs.",
                "Descending Auctions: We begin the discussion of the relation between ascending auctions and descending auctions with an example.",
                "The algorithm by Lehmann, Lehmann and Nisan [25] can be implemented by a simple item-price descending auction (see the full paper for details [9]).",
                "This algorithm guarantees at least half of the optimal efficiency for submodular valuations.",
                "However, we are not familiar with any ascending auction that guarantees a similar fraction of the efficiency.",
                "This raises a more general question: can ascending auctions solve any combinatorialauction problem that is solvable using a descending auction (and vice versa)?",
                "We give negative answers to these questions.",
                "The idea behind the proofs is that the information that the auctioneer can get for free at the beginning of each type of auction is different.23 and non-deterministic iterative auctions: our proof shows that a non-deterministic iterative auction can elicit the kterm XOR valuations with a polynomial number of demand queries, and [7] show that this elicitation must take an exponential number of demand queries. 23 In ascending auctions, the auctioneer can reveal the most valuable bundle (besides M) before she starts raising the prices, thus she can use this information for adaptively choose the subsequent queries.",
                "In descending auctions, one can easily find the bundle with the highest average per-item price, keeping all other bundles with non-positive utilities, and use this information in the adaptive price change.",
                "Proposition 5.7.",
                "There are classes that cannot be elicited (fully elicited) by ascending item-price auctions, but can be elicited (resp. fully elicited) with a descending item-price auction.",
                "Proposition 5.8.",
                "There are classes that cannot be elicited (fully elicited) by item-price descending auctions, but can be elicited (resp. fully elicited) by item-price ascending auctions.",
                "Deterministic vs. Non-Deterministic Auctions: Nondeterministic ascending auctions can be viewed as auctions where some benevolent teacher that has complete information guides the auctioneer on how she should raise the prices.",
                "That is, preference elicitation can be done by a non-deterministic ascending auction, if there is some ascending trajectory that elicits enough information for determining the optimal allocation (and verifying that it is indeed optimal).",
                "We show that non-deterministic ascending auctions are more powerful than deterministic ascending auctions: Proposition 5.9.",
                "Some classes can be elicited (fully elicited) by an item-price non-deterministic ascending auction, but cannot be elicited (resp. fully elicited) by item-price deterministic ascending auctions.",
                "Anonymous vs. Non-Anonymous Auctions: As will be shown in Section 6, the power of anonymous and nonanonymous bundle-price ascending auctions differs significantly.",
                "Here, we show that a difference also exists for itemprice ascending auctions.",
                "Proposition 5.10.",
                "Some classes cannot be elicited by anonymous item-price ascending auctions, but can be elicited by a non-anonymous item-price ascending auction.",
                "Sequential vs.",
                "Simultaneous Auctions: A non-anonymous auction is called simultaneous if at each stage, the price of some item is raised by for every bidder.",
                "The auctioneer can use the information gathered until each stage, in all the personalized trajectories, to determine the next queries.",
                "A non-anonymous auction is called sequential if the auctioneer performs an auction for each bidder separately, in sequential order.",
                "The auctioneer can determine the next query based on the information gathered in the trajectories completed so far and on the history of the current trajectory.",
                "Proposition 5.11.",
                "There are classes that cannot be elicited by simultaneous non-anonymous item-price ascending auctions, but can be elicited by a sequential non-anonymous item-price ascending auction.",
                "Adaptive vs.",
                "Oblivious Auctions: If the auctioneer determines the queries regardless of the bidders responses (i.e., the queries are predefined) we say that the auction is oblivious.",
                "Otherwise, the auction is adaptive.",
                "We prove that an adaptive behaviour of the auctioneer may be beneficial.",
                "Proposition 5.12.",
                "There are classes that cannot be elicited (fully elicited) using oblivious item-price ascending auctions, but can be elicited (resp. fully elicited) by an adaptive item-price ascending auction. 40 5.5 Preference Elicitation vs. Full Elicitation Preference elicitation and full elicitation are closely related problems.",
                "If full elicitation is easy (e.g., in polynomial time) then clearly elicitation is also easy (by a nonanonymous auction, simply by learning all the valuations separately24 ).",
                "On the other hand, there are examples where preference elicitation is considered easy but learning is hard (typically, elicitation requires smaller amount of information; some examples can be found in [7]).",
                "The tatonnement algorithms by [22, 12, 16] end up with the optimal allocation for substitutes valuations.25 We prove that we cannot fully elicit substitutes valuations (or even their sub-class of OXS valuations defined in [25]), even for a single bidder, by an item-price ascending auction (although the optimal allocation can be found by an ascending auction for any number of bidders!).",
                "Theorem 5.13.",
                "Substitute valuations cannot be fully elicited by ascending item-price auctions.",
                "Moreover, they cannot be fully elicited by any m 2 ascending trajectories (m > 3).",
                "Whether substitutes valuations have a compact representation (i.e., polynomial in the number of goods) is an important open question.",
                "As a step in this direction, we show that its sub-class of OXS valuations does have a compact representation: every OXS valuation can be represented by at most m2 values.26 Lemma 5.14.",
                "Any OXS valuation can be represented by no more than m2 values. 6.",
                "BUNDLE-PRICE ASCENDING AUCTIONS All the ascending auctions in the literature that are proved to find the optimal allocation for unrestricted valuations are non-anonymous bundle-price auctions (iBundle(3) by Parkes and Ungar [37] and the Proxy Auction by Ausubel and Milgrom [3]).",
                "Yet, several anonymous ascending auctions have been suggested (e.g., AkBA [42], [21] and iBundle(2) [37]).",
                "In this section, we prove that anonymous bundle-price ascending auctions achieve poor results in the worst-case.",
                "We also show that the family of non-anonymous bundleprice ascending auctions can run exponentially slower than simple item-price ascending auctions. 6.1 Limitations of Anonymous Bundle-Price Ascending Auctions We present a class of valuations that cannot be elicited by anonymous bundle-price ascending auctions.",
                "These valuations are described in Figure 7.",
                "The basic idea: for determining some unknown value of one bidder we must raise 24 Note that an anonymous ascending auction cannot necessarily elicit a class that can be fully elicited by an ascending auction. 25 Substitute valuations are defined, e.g., in [16].",
                "Roughly speaking, a bidder with a substitute valuation will continue demand a certain item after the price of some other items was increased.",
                "For completeness, we present in the full paper [9] a proof for the efficiency of such auctions for substitutes valuations. 26 A unit-demand valuation is an XOR valuation in which all the atomic bundles are singletons.",
                "OXS valuations can be interpreted as an aggregation (OR) of any number of unit-demand bidders.",
                "Bid. 1 v1(ac) = 2 v1(bd) = 2 v1(cd) = α ∈ (0, 1) Bid. 2 v2(ab) = 2 v2(cd) = 2 v2(bd) = β ∈ (0, 1) Figure 7: Anonymous ascending bundle-price auctions cannot determine the optimal allocation for this class of valuations. a price of a bundle that should be demanded by the other bidder in the future.",
                "Theorem 6.1.",
                "Some classes of valuations cannot be elicited by anonymous bundle-price ascending auctions.",
                "Proof.",
                "Consider a pair of XOR valuations as described in Figure 7.",
                "For finding the optimal allocation we must know which value is greater between α and β.27 However, we cannot learn the value of both α and β by a single ascending trajectory: assume w.l.o.g. that bidder 1 demands cd before bidder 2 demands bd (no information will be elicited if none of these happens).",
                "In this case, the price for bd must be greater than 1 (otherwise, bidder 1 prefers bd to cd).",
                "Thus, bidder 2 will never demand the bundle bd, and no information will be elicited about β.",
                "The valuations described in the proof of Theorem 6.1 can be easily elicited by a non-anonymous item-price ascending auction.",
                "On the other hand, the valuations in Figure 6 can be easily elicited by an anonymous bundle-price ascending auction.",
                "We conclude that the power of these two families of ascending auctions is incomparable.",
                "We strengthen the impossibility result above by showing that anonymous bundle-price auctions cannot even achieve better than a min{O(n), O( √ m)}-approximation for the social welfare.",
                "This approximation ratio can be achieved with polynomial communication, and specifically with a polynomial number of item-price demand queries.28 Theorem 6.2.",
                "An anonymous bundle-price ascending auction cannot guarantee better than a min{ n 2 , √ m 2 } approximation for the optimal welfare.",
                "Proof. (Sketch) Assume we have n bidders and n2 items for sale, and that n is prime.",
                "We construct n2 distinct bundles with the following properties: for each bidder, we define a partition Si = (Si 1, ..., Si n) of the n2 items to n bundles, such that any two bundles from different partitions intersect.",
                "In the full paper, part II [9] we show an explicit construction using the properties of linear functions over finite fields.",
                "The rest of the proof is independent of the specific construction.",
                "Using these n2 bundles we construct a hard-to-elicit class.",
                "Every bidder has an atomic bid, in his XOR valuation, for each of these n2 bundles.",
                "A bidder i has a value of 2 for any bundle Si j in his partition.",
                "For all bundles in the other partitions, he has a value of either 0 or of 1 − δ, and these values are unknown to the auctioneer.",
                "Since every pair of bundles from different partitions intersect, only one bidder can receive a bundle with a value of 2. 27 If α > β, the optimal allocation will allocate cd to bidder 1 and ab to bidder 2.",
                "Otherwise, we give bd to bidder 2 and ac to bidder 1.",
                "Note that both bidders cannot gain a value of 2 in the same allocation, due to the intersections of the high-valued bundles. 28 Note that bundle-price queries may use exponential communication, thus the lower bound of [32] does not hold. 41 Non-anonymous Bundle-Price Economically-Efficient Ascending Auctions: Initialization: All prices are initialized to zero (non-anonymous bundle prices).",
                "Repeat: - Each bidder submits a bundle that maximizes his utility under his current personalized prices. - The auctioneer calculates a provisional allocation that maximizes his revenue under the current prices. - The prices of bundles that were demanded by losing bidders are increased by .",
                "Finally: Terminate when the provisional allocation assigns to each bidder the bundle he demanded.",
                "Figure 8: Auctions from this family (denoted by NBEA auctions) are known to achieve the optimal welfare.",
                "No bidder will demand a low-valued bundle, as long as the price of one of his high-valued bundles is below 1 (and thus gain him a utility greater than 1).",
                "Therefore, for eliciting any information about the low-valued bundles, the auctioneer should first arbitrarily choose a bidder (w.l.o.g bidder 1) and raise the prices of all the bundles (S1 1 , ..., S1 n) to be greater than 1.",
                "Since the prices cannot decrease, the other bidders will clearly never demand these bundles in future stages.",
                "An adversary may choose the values such that the low values of all the bidders for the bundles not in bidder 1s partition are zero (i.e., vi(S1 j ) = 0 for every i = 1 and every j), however, allocating each bidder a different bundle from bidder 1s partition, might achieve a welfare of n+1−(n−1)δ (bidder 1s valuation is 2, and 1 − δ for all other bidders); If these bundles were wrongly allocated, only a welfare of 2 might be achieved (2 for bidder 1s high-valued bundle, 0 for all other bidders).",
                "At this point, the auctioneer cannot have any information about the identity of the bundles with the non-zero values.",
                "Therefore, an adversary can choose the values of the bundles received by bidders 2, ..., n in the final allocation to be zero.",
                "We conclude that anonymous bundleprice auctions cannot guarantee a welfare greater than 2 for this class, where the optimal welfare can be arbitrarily close to n + 1. 6.2 Bundle Prices vs.",
                "Item Prices The core of the auctions in [37, 3] is the scheme described in Figure 8 (in the spirit of [35]) for auctions with nonanonymous bundle prices.",
                "Auctions from this scheme end up with the optimal allocation for any class of valuations.",
                "We denote this family of ascending auctions as NBEA auctions29 .",
                "NBEA auctions can elicit k-term XOR valuations by a polynomial (in k) number of steps , although the elicitation of such valuations may require an exponential number of item-price queries ([7]), and item-price ascending auctions cannot do it at all (Theorem 5.4).",
                "Nevertheless, we show that NBEA auctions (and in particular, iBundle(3) and the proxy auction) are sometimes inferior to simple item-price demand auctions.",
                "This may justify the use of hybrid auctions that use both linear and non-linear prices (e.g., the clock-proxy auction [10]).",
                "We show that auctions from this 29 Non-anonymous Bundle-price economically Efficient Ascending auctions.",
                "For completeness, we give in the full paper [9] a simple proof for the efficiency (up to an ) of auctions of this scheme . family may use an exponential number of queries even for determining the optimal allocation among two bidders with additive valuations30 , where such valuations can be elicited by a simple item-price ascending auction.",
                "We actually prove this property for a wider class of auctions we call conservative auctions.",
                "We also observe that in conservative auctions, allowing the bidders to submit all the bundles in their demand sets ensures that the auction runs a polynomial number of steps - if L is not too high (but with exponential communication, of course).",
                "An ascending auction is called conservative if it is nonanonymous, uses bundle prices initialized to zero and at every stage the auctioneer can only raise prices of bundles demanded by the bidders until this stage.",
                "In addition, each bidder can only receive bundles he demanded during the auction.",
                "Note that NBEA auctions are by definition conservative.",
                "Proposition 6.3.",
                "If every bidder demands a single bundle in each step of the auction, conservative auctions may run for an exponential number of steps even for additive valuations.",
                "If the bidders are allowed to submit all the bundles in their demand sets in each step, then conservative auctions can run in a polynomial number of steps for any profile of valuations, as long as the maximal valuation L is polynomial in m, n and 1 δ .",
                "Acknowledgments: The authors thank Moshe Babaioff, Shahar Dobzinski, Ron Lavi, Daniel Lehmann, Ahuva Mualem, David Parkes, Michael Schapira and Ilya Segal for helpful discussions.",
                "Supported by grants from the Israeli Academy of Sciences and the USAIsrael Binational Science Foundation. 7.",
                "REFERENCES [1] amazon.",
                "Web Page: http://www.amazon.com. [2] ebay.",
                "Web Page: http://www.ebay.com. [3] L. M. Ausubel and P. R. Milgrom.",
                "Ascending auctions with package bidding.",
                "Frontiers of Theoretical Economics, 1:1-42, 2002. [4] Lawrence Ausubel.",
                "An efficient dynamic auction for heterogeneous commodities, 2000.",
                "Working paper, University of Maryland. [5] Yair Bartal, Rica Gonen, and Noam Nisan.",
                "Incentive compatible multi unit combinatorial auctions.",
                "In TARK 03, 2003. [6] Alejandro Bertelsen.",
                "Substitutes valuations and m -concavity.",
                "M.Sc.",
                "Thesis, The Hebrew University of Jerusalem, 2005. [7] Avrim Blum, Jeffrey C. Jackson, Tuomas Sandholm, and Martin A. Zinkevich.",
                "Preference elicitation and query learning.",
                "Journal of Machine Learning Research, 5:649-667, 2004. [8] Liad Blumrosen and Noam Nisan.",
                "On the computational power of iterative auctions I: demand queries.",
                "Working paper, The Hebrew University of 30 Valuations are called additive if for any disjoint bundles A and B, v(A ∪ B) = v(A) + v(B).",
                "Additive valuations are both sub-additive and super-additive and are determined by the m values assigned for the singletons. 42 Jerusalem.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [9] Liad Blumrosen and Noam Nisan.",
                "On the computational power of iterative auctions II: ascending auctions.",
                "Working paper, The Hebrew University of Jerusalem.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [10] P. Cramton, L.M.",
                "Ausubel, and P.R.",
                "Milgrom.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 5.",
                "The Clock-Proxy Auction: A Practical Combinatorial Auction Design.",
                "MIT Press.",
                "Forthcoming, 2005. [11] P. Cramton, Y. Shoham, and R. Steinberg (Editors).",
                "Combinatorial Auctions.",
                "MIT Press.",
                "Forthcoming, 2005. [12] G. Demange, D. Gale, and M. Sotomayor.",
                "Multi-item auctions.",
                "Journal of Political Economy, 94:863-872, 1986. [13] Shahar Dobzinski, Noam Nisan, and Michael Schapira.",
                "Approximation algorithms for cas with complement-free bidders.",
                "In The 37th ACM symposium on theory of computing (STOC)., 2005. [14] Shahar Dobzinski and Michael Schapira.",
                "Optimal upper and lower approximation bounds for k-duplicates combinatorial auctions.",
                "Working paper, the Hebrew University. [15] Combinatorial bidding conference.",
                "Web Page: http://wireless.fcc.gov/auctions/conferences/combin2003. [16] Faruk Gul and Ennio Stacchetti.",
                "Walrasian equilibrium with gross substitutes.",
                "Journal of Economic Theory, 87:95 - 124, 1999. [17] Faruk Gul and Ennio Stacchetti.",
                "The english auction with differentiated commodities.",
                "Journal of Economic Theory, 92(3):66 - 95, 2000. [18] J. Hastad.",
                "Almost optimal lower bounds for small depth circuits.",
                "In 18th STOC, pages 6-20, 1986. [19] Ron Holzman, Noa Kfir-Dahav, Dov Monderer, and Moshe Tennenholtz.",
                "Bundling equilibrium in combinatrial auctions.",
                "Games and Economic Behavior, 47:104-123, 2004. [20] H. Karloff.",
                "Linear Programming.",
                "Birkh¨auser Verlag, 1991. [21] Frank Kelly and Richard Steinberg.",
                "A combinatorial auction with multiple winners for universal service.",
                "Management Science, 46:586-596, 2000. [22] A.S. Kelso and V.P.",
                "Crawford.",
                "Job matching, coalition formation, and gross substitute.",
                "Econometrica, 50:1483-1504, 1982. [23] Subhash Khot, Richard J. Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Inapproximability results for combinatorial auctions with submodular utility functions.",
                "In Working paper., 2004. [24] Sebastien Lahaie and David C. Parkes.",
                "Applying learning algorithms to preference elicitation.",
                "In EC 04. [25] Benny Lehmann, Daniel Lehmann, and Noam Nisan.",
                "Combinatorial auctions with decreasing marginal utilities.",
                "In ACM conference on electronic commerce.",
                "To appear, Games and Economic Behaviour., 2001. [26] D. Lehmann, L. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "JACM, 49(5):577-602, Sept. 2002. [27] A. Mas-Collel, W. Whinston, and J.",
                "Green.",
                "Microeconomic Theory.",
                "Oxford university press, 1995. [28] Debasis Mishra and David Parkes.",
                "Ascending price vickrey auctions using primal-dual algorithms., 2004.",
                "Working paper, Harvard University. [29] Noam Nisan.",
                "The communication complexity of approximate set packing and covering.",
                "In ICALP 2002. [30] Noam Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In ACM Conference on Electronic Commerce, 2000. [31] Noam Nisan.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 1.",
                "Bidding Languages.",
                "MIT Press.",
                "Forthcoming, 2005. [32] Noam Nisan and Ilya Segal.",
                "The communication requirements of efficient allocations and supporting prices, 2003.",
                "Working paper.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html Forthcoming in the Journal of Economic Theory. [33] Noam Nisan and Ilya Segal.",
                "Exponential communication inefficiency of demand queries, 2004.",
                "Working paper.",
                "Available from http://www.stanford.edu/ isegal/queries1.pdf. [34] D. C. Parkes and L. H. Ungar.",
                "An ascending-price generalized vickrey auction.",
                "Tech.",
                "Rep., Harvard University, 2002. [35] David Parkes.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 3.",
                "Iterative Combinatorial Auctions.",
                "MIT Press.",
                "Forthcoming, 2005. [36] David C. Parkes.",
                "Iterative combinatorial auctions: Achieving economic and computational efficiency.",
                "Ph.D. Thesis, Department of Computer and Information Science, University of Pennsylvania., 2001. [37] David C. Parkes and Lyle H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In AAAI/IAAI, pages 74-81, 2000. [38] Ariel Rubinstein.",
                "Why are certain properties of binary relations relatively more common in natural languages.",
                "Econometrica, 64:343-356, 1996. [39] Tuomas Sandholm.",
                "Algorithm for optimal winner determination in combinatorial auctions.",
                "In Artificial Intelligence, volume 135, pages 1-54, 2002. [40] P. Santi, V. Conitzer, and T. Sandholm.",
                "Towards a characterization of polynomial preference elicitation with value queries in combinatorial auctions.",
                "In The 17th Annual Conference on Learning Theory, 2004. [41] Ilya Segal.",
                "The communication requirements of social choice rules and supporting budget sets, 2004.",
                "Working paper.",
                "Available from http://www.stanford.edu/ isegal/rules.pdf. [42] P.R.",
                "Wurman and M.P.",
                "Wellman.",
                "Akba: A progressive, anonymous-price combinatorial auction.",
                "In Second ACM Conference on Electronic Commerce, 2000. [43] Martin A. Zinkevich, Avrim Blum, and Tuomas Sandholm.",
                "On polynomial-time preference elicitation with value queries.",
                "In ACM Conference on Electronic Commerce, 2003. 43"
            ],
            "original_annotated_samples": [
                "Two separate obstacles are known: In [32], a lower bound of min(n, m1/2− ), for any fixed > 0, was shown for the <br>approximation factor</br> apply for any fixed tie breaking rule. 7 This is exactly the utility achieved by the bundle which would be returned in a demand query with the same prices.",
                "As noted in [32], the computationallyefficient greedy algorithm of [26] can be adapted to become a polynomial-time iterative auction that achieves a nearly matching <br>approximation factor</br> of min(n, O( √ m)).",
                "In Section 4.2, we describe a different item-price auction that achieves the same <br>approximation factor</br> with a polynomial number of queries (and thus with a polynomial communication).",
                "One may then attempt obtaining such an <br>approximation factor</br> using iterative auctions that use only the weaker value queries.",
                "However, we show that this is impossible: Theorem: Any iterative auction that uses a polynomial (in n and m) number of value queries can not achieve an <br>approximation factor</br> that is better than O( m log m ).9 Note however that auctions with only value queries are not completely trivial in power: the bundling auctions of Holzman et al. [19] can easily be implemented by a polynomial number of value queries and can achieve an <br>approximation factor</br> of O( m√ log m ) by using O(log m) equi-sized bundles."
            ],
            "translated_annotated_samples": [
                "Se conocen dos obstáculos separados: En [32], se demostró una cota inferior de min(n, m1/2− ), para cualquier fijo > 0, para el <br>factor de aproximación</br> aplicable para cualquier regla de desempate fija. Esto es exactamente la utilidad lograda por el paquete que se devolvería en una consulta de demanda con los mismos precios.",
                "Como se señala en [32], el algoritmo voraz computacionalmente eficiente de [26] puede adaptarse para convertirse en una subasta iterativa de tiempo polinómico que logra un <br>factor de aproximación</br> casi coincidente de min(n, O( √ m)).",
                "En la Sección 4.2, describimos una subasta de precio de artículo diferente que logra el mismo <br>factor de aproximación</br> con un número polinomial de consultas (y por lo tanto con una comunicación polinomial).",
                "Uno puede intentar obtener un <br>factor de aproximación</br> utilizando subastas iterativas que solo utilicen las consultas de valor más débiles.",
                "Sin embargo, demostramos que esto es imposible: Teorema: Cualquier subasta iterativa que utilice un número polinómico (en n y m) de consultas de valor no puede lograr un <br>factor de aproximación</br> mejor que O( m log m ). Sin embargo, cabe destacar que las subastas con solo consultas de valor no son completamente triviales en poder: las subastas de agrupación de Holzman et al. [19] pueden implementarse fácilmente mediante un número polinómico de consultas de valor y pueden lograr un <br>factor de aproximación</br> de O( m√ log m ) utilizando O(log m) paquetes de tamaño equitativo."
            ],
            "translated_text": "En el Poder Computacional de Subastas Iterativas∗ [Resumen Extendido] Liad Blumrosen Escuela de Ingeniería e Informática Universidad Hebrea de Jerusalén Jerusalén, Israel liad@cs.huji.ac.il Noam Nisan Escuela de Ingeniería e Informática Universidad Hebrea de Jerusalén Jerusalén, Israel noam@cs.huji.ac.il RESUMEN Nos embarcamos en un análisis sistemático del poder y limitaciones de las subastas combinatorias iterativas. La mayoría de las subastas combinatorias iterativas existentes se basan en sugerir precios repetidamente para paquetes de artículos y consultar a los postores sobre su demanda bajo estos precios. Demostramos un gran número de resultados que muestran los límites de lo que se puede lograr mediante subastas de este tipo. Primero nos enfocamos en subastas que utilizan un número polinomial de consultas de demanda, y luego analizamos el poder de diferentes tipos de subastas de precio ascendente. Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía Términos Generales Algoritmos, Economía, Teoría 1. Las subastas combinatorias han recibido recientemente mucha atención. En una subasta combinatoria, un conjunto M de m artículos no idénticos se venden en una sola subasta a n postores competidores. Los postores tienen preferencias con respecto a los lotes de artículos que pueden recibir. Las preferencias del postor i están especificadas por una función de valoración vi: 2M → R+, donde vi(S) denota el valor que el postor i asigna a ganar el conjunto de artículos S. Suponemos disposición libre, es decir, que los vi son monótonos no decrecientes. El objetivo habitual del subastador es optimizar el bienestar social P i vi(Si), donde la asignación S1...Sn debe ser una partición de los artículos. Las aplicaciones incluyen muchos problemas complejos de asignación de recursos y, de hecho, las subastas combinatorias pueden ser vistas como la abstracción común de muchos problemas complejos de asignación de recursos. Las subastas combinatorias enfrentan dificultades económicas y computacionales y son un problema central en la frontera recientemente activa de la teoría económica y la informática. Un libro próximo [11] aborda muchos de los problemas involucrados en el diseño e implementación de subastas combinatorias. El diseño de una subasta combinatoria implica muchas consideraciones. En este artículo nos enfocamos en un solo tema central: la comunicación entre los oferentes y el mecanismo de asignación - la obtención de preferencias. Transferir toda la información sobre las preferencias de los licitadores requiere una cantidad de comunicación inasumible (exponencial en m). Por lo tanto, las subastas de revelación directa en las que los postores simplemente declaran sus preferencias al mecanismo solo son prácticas para tamaños de subasta muy pequeños o para familias muy limitadas de preferencias de postores. Por lo tanto, hemos visto una multitud de subastas iterativas sugeridas en las que el protocolo de subasta interactúa repetidamente con los diferentes postores, con el objetivo de obtener de manera adaptativa suficiente información sobre las preferencias de los postores para poder encontrar una asignación buena (óptima o cercana a óptima). La mayoría de las subastas iterativas sugeridas proceden manteniendo precios temporales para los lotes de artículos y consultando repetidamente a los postores sobre sus preferencias entre los lotes bajo el conjunto actual de precios, y luego actualizando el conjunto de precios de los lotes según las respuestas recibidas (por ejemplo, [22, 12, 17, 37, 3]). Efectivamente, una subasta iterativa de este tipo accede a las preferencias de los postores haciendo repetidamente el siguiente tipo de consulta de demanda a los postores: Consulta al postor i: un vector de precios de paquetes p = {p(S)}S⊆M; Respuesta: un paquete de artículos S ⊆ M que maximiza vi(S) − p(S). Estos tipos de consultas son muy naturales en un entorno económico, ya que capturan las preferencias reveladas de los postores. Algunas subastas, llamadas subastas de precio por artículo o de precio lineal, especifican un precio pi para cada artículo, y el precio de cualquier conjunto dado S siempre es lineal, p(S) = Σ i∈S pi. Otras subastas, llamadas subastas de precio por paquete, permiten especificar precios arbitrarios (no lineales) p(S) para los paquetes. Otra diferenciación importante entre los modelos de subastas iterativas se basa en si utilizan precios anónimos o no anónimos: En algunas subastas, los precios que se presentan a los postores son siempre los mismos (precios anónimos). En otras subastas (no anónimas), diferentes postores pueden enfrentar diferentes vectores de precios (discriminatorios). En las subastas de precio ascendente, obligar a que los precios sean anónimos puede ser una restricción significativa. En este artículo, nos embarcamos en un análisis sistemático del poder computacional de las subastas iterativas basadas en consultas de demanda. No buscamos presentar subastas para uso práctico, sino más bien entender las limitaciones y posibilidades de este tipo de subastas. En la primera parte de este documento, nuestra pregunta principal es ¿qué se puede hacer utilizando un número polinómico de este tipo de consultas? Es decir, polinomial en los parámetros principales del problema: n, m y el número de bits t necesarios para representar un único valor vi(S). Ten en cuenta que desde un punto de vista algorítmico estamos hablando de algoritmos de tiempo sublineal: el tamaño de la entrada aquí es realmente n(2m − 1) números, las descripciones de las funciones de valoración de todos los postores. Hay dos aspectos de eficiencia computacional en estos contextos: el primero es la comunicación con los postores, es decir, la cantidad de consultas realizadas, y el segundo es la usual tratabilidad computacional. Nuestros límites inferiores dependerán solo del número de consultas y se mantendrán independientemente de cualquier suposición computacional como P = NP. Nuestros límites superiores siempre serán computacionalmente eficientes tanto en términos del número de consultas como en términos de computación regular. Como se mencionó, este artículo se centra en el único aspecto de la obtención de preferencias y en sus consecuencias computacionales, sin abordar cuestiones de incentivos. Esto refuerza nuestros límites inferiores, pero significa que los límites superiores también requieren evaluación desde esta perspectiva antes de ser utilizados en cualquier subasta combinatoria real. La segunda parte de este documento estudia el poder de las subastas de precio ascendente. Las subastas ascendentes son subastas iterativas donde los precios publicados no pueden disminuir con el tiempo. En este trabajo, intentamos analizar sistemáticamente qué significan las diferencias entre varios modelos de subastas ascendentes. Intentamos responder a las siguientes preguntas: (i) ¿Qué modelos de subastas ascendentes pueden encontrar la asignación óptima, y para qué clases de valoraciones? (ii) En casos donde la asignación óptima no puede ser determinada por subastas ascendentes, ¿qué tan bien pueden estas subastas aproximar el bienestar social? (iii) ¿Cómo se comparan los diferentes modelos de subastas ascendentes? ¿Son algunos modelos computacionalmente más fuertes que otros? Las subastas ascendentes han sido ampliamente estudiadas en la literatura (ver la encuesta reciente de Parkes [35]). La mayor parte de este trabajo presentó límites superiores, es decir, mecanismos propuestos con precios ascendentes y analizó sus propiedades. Un resultado que se acerca más al nuestro es el de Gul y Stacchetti [17], quienes demostraron que ninguna subasta de precio ascendente de artículo puede siempre determinar los precios VCG, incluso para valoraciones de sustitutos. Nuestro marco es más general que la línea tradicional de investigación que se concentra en la asignación final y observamos, sin embargo, que alguna propiedad de incentivo débil viene de forma gratuita en las subastas de consulta de demanda, ya que los jugadores miopes responderán todas las consultas de demanda de manera veraz. También observamos que en algunos casos (¡pero no siempre!) los problemas de incentivos pueden ser manejados de forma ortogonal a los problemas de obtención de preferencias, por ejemplo, utilizando precios de Vickrey-Clarke-Groves (VCG) (por ejemplo, [4, 34]). Además, discutimos este resultado en la Sección 5.3. Subastas iterativas Subastas de demanda Subastas de precio de artículo Subastas de precio anónimo Subastas ascendentes 1 2 3 4 5 6 97 8 10 Figura 1: El diagrama clasifica las siguientes subastas según sus propiedades: (1) La adaptación [12] para la subasta de Kelso & Crawford [22]. (2) La Subasta de Proxy [3] de Ausubel & Milgrom. (3) iBundle(3) de Parkes & Ungar [34]. (4) iBundle(2) de Parkes & Ungar [37]. (5) Nuestra adaptación descendente para la aproximación de 2 para valoraciones submodulares por [25] (ver Subsección 5.4). (6) La subasta de Ausubel [4] para valoraciones de sustitutos. (7) La adaptación de Nisan & Segal [32] de la aproximación O( √ m) por [26]. (8) La subasta de artículo duplicado por [5]. (9) Subasta para fórmulas de Leer-Una-Vez por [43]. (10) La Subasta AkBA por Wurman & Wellman [42]. pagos y en particular, en alcanzar equilibrios walrasianos o equilibrios competitivos. Se sabe que existe un equilibrio walrasiano en el caso de las valoraciones de sustitutos, y se sabe que es imposible para cualquier clase más amplia de valoraciones [16]. Esto no descarta otras asignaciones mediante subastas ascendentes: en este documento consideramos las subastas como un proceso computacional donde el resultado, tanto la asignación como los pagos, pueden determinarse según todos los datos recopilados a lo largo de la subasta; Este marco general refuerza nuestros resultados negativos. Encontramos el estudio de las subastas ascendentes atractivo por diversas razones. Primero, las subastas ascendentes son ampliamente utilizadas en muchos contextos de la vida real, desde las subastas de espectro de la FCC hasta casi cualquier sitio web de comercio electrónico (por ejemplo, [2, 1]). De hecho, esta es quizás la forma más directa de vender artículos: preguntar a los postores qué les gustaría comprar a ciertos precios, y aumentar los precios de los productos con alta demanda. Las subastas ascendentes también se consideran más intuitivas para muchos postores, y se cree que aumentan la confianza de los postores en el subastador, ya que ven el resultado que emerge gradualmente de las respuestas de los postores. Las subastas ascendentes también tienen otras propiedades económicas deseadas, por ejemplo, implican una revelación de información menor (considere, por ejemplo, las subastas inglesas frente a las subastas de segundo precio sellado). 1.1 Trabajo Existente Muchos mecanismos de subasta combinatoria iterativos dependen de consultas de demanda (ver la encuesta en [35]). La Figura 1 muestra un equilibrio walrasiano como un vector de precios de los artículos para los cuales todos los artículos se venden cuando cada postor recibe un conjunto en su conjunto de demanda. En algunos diseños de subasta recientes (por ejemplo, [4, 28]), los pagos no son necesariamente los precios finales de las subastas. Familia de valoración Límite superior Referencia Límite inferior Referencia General min(n, O( √ m)) [26], Sección 4.2 min(n, m1/2− ) [32] Sustitutos 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subaditiva O(logm) [13] 2 [13] k-duplicados O(m1/k+1 ) [14] O(m1/k+1 ) [14] Adquisiciones ln m [32] (log m)/2 [29, 32] Figura 2: Los mejores factores de aproximación actualmente alcanzables por subastas combinatorias computacionalmente eficientes, para varias clases de valoraciones. Todos los límites inferiores en la tabla se aplican a todas las subastas iterativas (excepto la marcada con *); todos los límites superiores en la tabla se logran con consultas de demanda de precio de artículo. Categoriza las clases básicas de subastas implicadas por combinaciones de las propiedades anteriores y clasifica algunas de las subastas propuestas en la literatura de acuerdo con esta clasificación. Para nuestros propósitos, dos familias de estas subastas sirven como los principales puntos de partida motivadores: la primera son las subastas de precio de artículo ascendente de [22, 17] que con eficiencia computacional encuentran una asignación óptima entre valoraciones de sustitutos (brutos), y la segunda son las subastas de precio de paquete ascendente de [37, 3] que encuentran una asignación óptima entre valoraciones generales, pero no necesariamente con eficiencia computacional. El límite inferior principal en esta área, debido a [32], establece que, de hecho, debido a los requisitos de comunicación inherentes, no es posible que ninguna subasta iterativa encuentre la asignación óptima entre valoraciones generales con un número subexponencial de consultas. Un límite inferior exponencial similar fue demostrado en [32] también para aproximar de manera óptima la asignación dentro de un factor de m1/2−. Se conocen varios límites inferiores y superiores para la aproximación de algunas clases naturales de valoraciones, los cuales se resumen en la Figura 2. En [32], también se muestra la universalidad de las consultas de demanda: cualquier protocolo de comunicación no determinista para encontrar una asignación que optimice el bienestar social puede convertirse en uno que solo utilice consultas de demanda (con precios de paquetes). En [41] esto también se generalizó a protocolos no deterministas para encontrar asignaciones que satisfacen otros tipos naturales de requisitos económicos (por ejemplo, eficiencia social aproximada, ausencia de envidia). Sin embargo, en [33] se demostró que esta completitud de las consultas de demanda solo se cumple en el entorno no determinista, mientras que en el entorno determinista habitual, las consultas de demanda (incluso con precios de paquetes) pueden ser exponencialmente más débiles que la comunicación general. Las subastas de precio por paquete son una generalización de las subastas de precio por artículo (más naturales e intuitivas). Se sabe que las subastas de precio de artículo pueden ser exponencialmente más débiles: un buen ejemplo es el caso de valoraciones que son un XOR de k paquetes, donde k es pequeño (digamos, polinómico). Lahaie y Parkes [24] muestran una subasta de precio de paquete económicamente eficiente que utiliza un número polinómico de consultas siempre que k sea polinómico. Por el contrario, [7] muestra que existen valoraciones que son XORs de k = √ m paquetes, de tal manera que cualquier subasta de precio de artículo que encuentre una asignación óptima entre ellos requiere un número exponencial de consultas. Estos resultados forman parte de una línea reciente de investigación ([7, 43, 24, 40]) que estudia el problema de la obtención de preferencias en subastas combinatorias y su relación con el problema de obtención completo (es decir, aprender las valoraciones exactas de los postores). Estas son valoraciones donde los postores tienen valores para k paquetes específicos, y el valor de cada conjunto es el valor máximo de uno de estos paquetes que contiene. Estos documentos adaptan métodos de la teoría del aprendizaje automático al entorno de subastas combinatorias. El problema de la obtención de preferencias y el problema de la obtención completa se relacionan con un problema bien estudiado en microeconomía conocido como el problema de integrabilidad (ver, por ejemplo, [27]). Este problema estudia si y cuándo se puede derivar la función de utilidad de un consumidor a partir de su función de demanda. Organización del documento: Debido al relativamente gran número de resultados que presentamos, comenzamos con una revisión de nuestros nuevos resultados en la Sección 2. Después de describir nuestro modelo formal en la Sección 3, presentamos nuestros resultados sobre el poder de las consultas de demanda en la Sección 4. Luego, describimos el poder de las subastas ascendentes de precio de artículo (Sección 5) y las subastas ascendentes de precio de paquete (Sección 6). Los lectores que estén principalmente interesados en la discusión autocontenida de las subastas ascendentes pueden omitir la Sección 4. Las pruebas faltantes de la Sección 4 se pueden encontrar en la parte I del artículo completo ([8]). Las pruebas faltantes de las Secciones 5 y 6 se pueden encontrar en la parte II del artículo completo ([9]). 2. Una encuesta de nuestros resultados Nuestro análisis sistemático está compuesto por la combinación de un número bastante grande de resultados que caracterizan el poder y las limitaciones de varias clases de subastas. En esta sección, presentaremos una exposición describiendo nuestros nuevos resultados. Primero discutimos el poder de las subastas iterativas de demanda-consulta, y luego dirigimos nuestra atención a las subastas ascendentes. La Figura 3 resume algunos de nuestros principales resultados. 2.1 Comparación de consultas de demanda de tipos de consultas Preguntamos primero qué otros tipos naturales de consultas podríamos imaginar que las subastas iterativas utilicen. Aquí hay una lista de tales consultas que son naturales, han sido utilizadas en la literatura, o que encontramos útiles. 1. Consulta de valor: El subastador presenta un paquete S, el postor informa su valor v(S) para este paquete. 2. Consulta de valor marginal: El subastador presenta un paquete A y un artículo j, el postor informa cuánto está dispuesto a pagar por j, dado que ya posee A, es decir, v(j|A) = v(A ∪ {j}) − v(A). 3. Consulta de demanda (con precios de los artículos): El subastador presenta un vector de precios de los artículos p1...pm; el postor informa su demanda bajo estos precios, es decir, algún conjunto S que maximiza v(S) − Σ i∈S pi. Se debe especificar una regla de desempate. ¿Todos nuestros resultados 31 Restricción de Comunicación pueden encontrar una asignación óptima? Límite superior para el bienestar aprox. Límite inferior para el bienestar aproximado. Consultas de demanda de precio de artículo Sí 1 1 Poli. Comunicación No [32] min(n, O(m1/2 )) [26] min(n, m1/2− ) [32] Poli. Consultas de demanda de precio de artículo No [32] min(n, O(m1/2 )) min(n, m1/2− ) [32] Poli. Este documento estudia la eficiencia económica de subastas que siguen ciertas restricciones de comunicación. Para cada clase de subastas, la tabla muestra si se puede lograr la asignación óptima, o en su defecto, qué tan bien se puede aproximar (tanto los límites superiores como los límites inferiores). Los nuevos resultados están resaltados. Abreviaturas: Poly. (número/tamaño polinomial), AA (subastas ascendentes). - significa que actualmente no se conoce nada excepto soluciones triviales. 4. Consulta de utilidad indirecta: El subastador presenta un conjunto de precios de los artículos p1...pm, y el postor responde con su utilidad indirecta bajo estos precios, es decir, la utilidad más alta que puede lograr de un conjunto bajo estos precios: maxS⊆M (v(S) − P i∈S pi). Consulta de demanda relativa: el subastador presenta un conjunto de precios no nulos p1...pm, y el postor informa el conjunto que maximiza su valor por unidad de dinero, es decir, algún conjunto que maximiza v(S)P i∈S pi. Teorema: Cada una de estas consultas puede ser simulada eficientemente (es decir, en tiempo polinómico en n, m y el número de bits de precisión t necesarios para representar un único valor vi(S)) por una secuencia de consultas de demanda con precios de artículos. En particular, esto muestra que las consultas de demanda pueden obtener toda la información sobre una valoración al simular todas las consultas de valor de 2m −1. También observamos que las consultas de valor y las consultas de valor marginal pueden simularse mutuamente en tiempo polinómico y que las consultas de demanda y las consultas de utilidad indirecta también pueden simularse mutuamente en tiempo polinómico. Demostramos que puede ser necesario realizar exponencialmente muchas consultas de valor para simular una sola consulta de demanda. Es interesante notar que para la clase restringida de valoraciones sustitutivas, las consultas de demanda pueden ser simuladas por un número polinomial de consultas de valor [6]. Aproximación del bienestar La siguiente pregunta que nos hacemos es ¿qué tan bien puede aproximar una subasta computacionalmente eficiente que solo utiliza consultas de demanda la asignación óptima? Se conocen dos obstáculos separados: En [32], se demostró una cota inferior de min(n, m1/2− ), para cualquier fijo > 0, para el <br>factor de aproximación</br> aplicable para cualquier regla de desempate fija. Esto es exactamente la utilidad lograda por el paquete que se devolvería en una consulta de demanda con los mismos precios. Esta noción se relaciona con la función de utilidad indirecta estudiada en la literatura microeconómica (ver, por ejemplo, [27]). Nota que cuando todos los precios son 1, el postor en realidad informa el paquete con el precio por artículo más alto. Encontramos este tipo de consulta útil, por ejemplo, en el diseño del algoritmo de aproximación descrito en la Figura 5 de la Sección 4.2, obtenido utilizando cualquier cantidad polinómica de comunicación. Un límite computacional con el mismo valor se aplica incluso para el caso de postores de mente única, pero bajo la suposición de NP = ZPP [39]. Como se señala en [32], el algoritmo voraz computacionalmente eficiente de [26] puede adaptarse para convertirse en una subasta iterativa de tiempo polinómico que logra un <br>factor de aproximación</br> casi coincidente de min(n, O( √ m)). Esta subasta iterativa puede implementarse con consultas de demanda de precios por paquete, pero, hasta donde vemos, no como una con precios por artículo. Dado que en una consulta de demanda de precio de paquete único se pueden presentar un número exponencial de precios, este algoritmo puede tener un costo de comunicación exponencial. En la Sección 4.2, describimos una subasta de precio de artículo diferente que logra el mismo <br>factor de aproximación</br> con un número polinomial de consultas (y por lo tanto con una comunicación polinomial). Teorema: Existe una subasta iterativa computacionalmente eficiente con consultas de demanda de precios de artículos que encuentra una asignación que aproxima el bienestar óptimo entre valoraciones arbitrarias dentro de un factor de min(n, O( √ m)). Uno puede intentar obtener un <br>factor de aproximación</br> utilizando subastas iterativas que solo utilicen las consultas de valor más débiles. Sin embargo, demostramos que esto es imposible: Teorema: Cualquier subasta iterativa que utilice un número polinómico (en n y m) de consultas de valor no puede lograr un <br>factor de aproximación</br> mejor que O( m log m ). Sin embargo, cabe destacar que las subastas con solo consultas de valor no son completamente triviales en poder: las subastas de agrupación de Holzman et al. [19] pueden implementarse fácilmente mediante un número polinómico de consultas de valor y pueden lograr un <br>factor de aproximación</br> de O( m√ log m ) utilizando O(log m) paquetes de tamaño equitativo. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "optimal allocation": {
            "translated_key": "asignación óptima",
            "is_in_text": true,
            "original_annotated_sentences": [
                "On the Computational Power of Iterative Auctions∗ [Extended Abstract] Liad Blumrosen School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel liad@cs.huji.ac.il Noam Nisan School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel noam@cs.huji.ac.il ABSTRACT We embark on a systematic analysis of the power and limitations of iterative combinatorial auctions.",
                "Most existing iterative combinatorial auctions are based on repeatedly suggesting prices for bundles of items, and querying the bidders for their demand under these prices.",
                "We prove a large number of results showing the boundaries of what can be achieved by auctions of this kind.",
                "We first focus on auctions that use a polynomial number of demand queries, and then we analyze the power of different kinds of ascending-price auctions.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION Combinatorial auctions have recently received a lot of attention.",
                "In a combinatorial auction, a set M of m nonidentical items are sold in a single auction to n competing bidders.",
                "The bidders have preferences regarding the bundles of items that they may receive.",
                "The preferences of bidder i are specified by a valuation function vi : 2M → R+ , where vi(S) denotes the value that bidder i attaches to winning the bundle of items S. We assume free disposal, i.e., that the vis are monotone non-decreasing.",
                "The usual goal of the auctioneer is to optimize the social welfare P i vi(Si), where the allocation S1...Sn must be a partition of the items.",
                "Applications include many complex resource allocation problems and, in fact, combinatorial auctions may be viewed as the common abstraction of many complex resource allocation problems.",
                "Combinatorial auctions face both economic and computational difficulties and are a central problem in the recently active border of economic theory and computer science.",
                "A forthcoming book [11] addresses many of the issues involved in the design and implementation of combinatorial auctions.",
                "The design of a combinatorial auction involves many considerations.",
                "In this paper we focus on just one central issue: the communication between bidders and the allocation mechanism - preference elicitation.",
                "Transferring all information about bidders preferences requires an infeasible (exponential in m) amount of communication.",
                "Thus, direct revelation auctions in which bidders simply declare their preferences to the mechanism are only practical for very small auction sizes or for very limited families of bidder preferences.",
                "We have therefore seen a multitude of suggested iterative auctions in which the auction protocol repeatedly interacts with the different bidders, aiming to adaptively elicit enough information about the bidders preferences as to be able to find a good (optimal or close to optimal) allocation.",
                "Most of the suggested iterative auctions proceed by maintaining temporary prices for the bundles of items and repeatedly querying the bidders as to their preferences between the bundles under the current set of prices, and then updating the set of bundle prices according to the replies received (e.g., [22, 12, 17, 37, 3]).",
                "Effectively, such an iterative auction accesses the bidders preferences by repeatedly making the following type of demand query to bidders: Query to bidder i: a vector of bundle prices p = {p(S)}S⊆M ; Answer: a bundle of items S ⊆ M that maximizes vi(S) − p(S)..",
                "These types of queries are very natural in an economic setting as they capture the revealed preferences of the bidders.",
                "Some auctions, called item-price or linear-price auctions, specify a price pi for each item, and the price of any given bundle S is always linear, p(S) = P i∈S pi.",
                "Other auctions, called bundle-price auctions, allow specifying arbitrary (non-linear) prices p(S) for bundles.",
                "Another important differentiation between models of iterative auctions is 29 based on whether they use anonymous or non-anonymous prices: In some auctions the prices that are presented to the bidders are always the same (anonymous prices).",
                "In other auctions (non-anonymous), different bidders may face different (discriminatory) vectors of prices.",
                "In ascending-price auctions, forcing prices to be anonymous may be a significant restriction.",
                "In this paper, we embark on a systematic analysis of the computational power of iterative auctions that are based on demand queries.",
                "We do not aim to present auctions for practical use but rather to understand the limitations and possibilities of these kinds of auctions.",
                "In the first part of this paper, our main question is what can be done using a polynomial number of these types of queries?",
                "That is, polynomial in the main parameters of the problem: n, m and the number of bits t needed for representing a single value vi(S).",
                "Note that from an algorithmic point of view we are talking about sub-linear time algorithms: the input size here is really n(2m − 1) numbers - the descriptions of the valuation functions of all bidders.",
                "There are two aspects to computational efficiency in these settings: the first is the communication with the bidders, i.e., the number of queries made, and the second is the usual computational tractability.",
                "Our lower bounds will depend only on the number of queriesand hold independently of any computational assumptions like P = NP.",
                "Our upper bounds will always be computationally efficient both in terms of the number of queries and in terms of regular computation.",
                "As mentioned, this paper concentrates on the single aspect of preference elicitation and on its computational consequences and does not address issues of incentives.",
                "This strengthens our lower bounds, but means that the upper bounds require evaluation from this perspective also before being used in any real combinatorial auction.1 The second part of this paper studies the power of ascending -price auctions.",
                "Ascending auctions are iterative auctions where the published prices cannot decrease in time.",
                "In this work, we try to systematically analyze what do the differences between various models of ascending auctions mean.",
                "We try to answer the following questions: (i) Which models of ascending auctions can find the <br>optimal allocation</br>, and for which classes of valuations? (ii) In cases where the <br>optimal allocation</br> cannot be determined by ascending auctions, how well can such auctions approximate the social welfare? (iii) How do the different models for ascending auctions compare?",
                "Are some models computationally stronger than others?",
                "Ascending auctions have been extensively studied in the literature (see the recent survey by Parkes [35]).",
                "Most of this work presented upper bounds, i.e., proposed mechanisms with ascending prices and analyzed their properties.",
                "A result which is closer in spirit to ours, is by Gul and Stacchetti [17], who showed that no item-price ascending auction can always determine the VCG prices, even for substitutes valuations.2 Our framework is more general than the traditional line of research that concentrates on the final allocation and 1 We do observe however that some weak incentive property comes for free in demand-query auctions since myopic players will answer all demand queries truthfully.",
                "We also note that in some cases (but not always!) the incentives issues can be handled orthogonally to the preference elicitation issues, e.g., by using Vickrey-Clarke-Groves (VCG) prices (e.g., [4, 34]). 2 We further discuss this result in Section 5.3.",
                "Iterative auctions Demand auctions Item-price auctions Anonymous price auctions Ascending auctions 1 2 3 4 5 6 97 8 10 Figure 1: The diagram classifies the following auctions according to their properties: (1) The adaptation [12] for Kelso & Crawfords [22] auction. (2) The Proxy Auction [3] by Ausubel & Milgrom. (3) iBundle(3) by Parkes & Ungar [34]. (4) iBundle(2) by Parkes & Ungar [37]. (5) Our descending adaptation for the 2-approximation for submodular valuations by [25] (see Subsection 5.4). (6) Ausubels [4] auction for substitutes valuations. (7) The adaptation by Nisan & Segal [32] of the O( √ m) approximation by [26]. (8) The duplicate-item auction by [5]. (9) Auction for Read-Once formulae by [43]. (10) The AkBA Auction by Wurman & Wellman [42]. payments and in particular, on reaching Walrasian equilibria or Competitive equilibria.",
                "A Walrasian equilibrium3 is known to exist in the case of Substitutes valuations, and is known to be impossible for any wider class of valuations [16].",
                "This does not rule out other allocations by ascending auctions: in this paper we view the auctions as a computational process where the outcome - both the allocation and the payments - can be determined according to all the data elicited throughout the auction; This general framework strengthens our negative results.4 We find the study of ascending auctions appealing for various reasons.",
                "First, ascending auctions are widely used in many real-life settings from the FCC spectrum auctions [15] to almost any e-commerce website (e.g., [2, 1]).",
                "Actually, this is maybe the most straightforward way to sell items: ask the bidders what would they like to buy under certain prices, and increase the prices of over-demanded goods.",
                "Ascending auctions are also considered more intuitive for many bidders, and are believed to increase the trust of the bidders in the auctioneer, as they see the result gradually emerging from the bidders responses.",
                "Ascending auctions also have other desired economic properties, e.g., they incur smaller information revelation (consider, for example, English auctions vs. second-price sealed bid auctions). 1.1 Extant Work Many iterative combinatorial auction mechanisms rely on demand queries (see the survey in [35]).",
                "Figure 1 summa3 A Walrasian equilibrium is vector of item prices for which all the items are sold when each bidder receives a bundle in his demand set. 4 In few recent auction designs (e.g., [4, 28]) the payments are not necessarily the final prices of the auctions. 30 Valuation family Upper bound Reference Lower bound Reference General min(n, O( √ m)) [26], Section 4.2 min(n, m1/2− ) [32] Substitutes 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subadditive O(logm) [13] 2 [13] k-duplicates O(m1/k+1 ) [14] O(m1/k+1 ) [14] Procurement ln m [32] (log m)/2 [29, 32] Figure 2: The best approximation factors currently achievable by computationally-efficient combinatorial auctions, for several classes of valuations.",
                "All lower bounds in the table apply to all iterative auctions (except the one marked by *); all upper bounds in the table are achieved with item-price demand queries. rizes the basic classes of auctions implied by combinations of the above properties and classifies some of the auctions proposed in the literature according to this classification.",
                "For our purposes, two families of these auctions serve as the main motivating starting points: the first is the ascending item-price auctions of [22, 17] that with computational efficiency find an <br>optimal allocation</br> among (gross) substitutes valuations, and the second is the ascending bundleprice auctions of [37, 3] that find an <br>optimal allocation</br> among general valuations - but not necessarily with computational efficiency.",
                "The main lower bound in this area, due to [32], states that indeed, due to inherent communication requirements, it is not possible for any iterative auction to find the <br>optimal allocation</br> among general valuations with sub-exponentially many queries.",
                "A similar exponential lower bound was shown in [32] also for even approximating the <br>optimal allocation</br> to within a factor of m1/2− .",
                "Several lower bounds and upper bounds for approximation are known for some natural classes of valuations - these are summarized in Figure 2.",
                "In [32], the universal generality of demand queries is also shown: any non-deterministic communication protocol for finding an allocation that optimizes the social welfare can be converted into one that only uses demand queries (with bundle prices).",
                "In [41] this was generalized also to nondeterministic protocols for finding allocations that satisfy other natural types of economic requirements (e.g., approximate social efficiency, envy-freeness).",
                "However, in [33] it was demonstrated that this completeness of demand queries holds only in the nondeterministic setting, while in the usual deterministic setting, demand queries (even with bundle prices) may be exponentially weaker than general communication.",
                "Bundle-price auctions are a generalization of (the more natural and intuitive) item-price auctions.",
                "It is known that indeed item-price auctions may be exponentially weaker: a nice example is the case of valuations that are a XOR of k bundles5 , where k is small (say, polynomial).",
                "Lahaie and Parkes [24] show an economically-efficient bundle-price auction that uses a polynomial number of queries whenever k is polynomial.",
                "In contrast, [7] show that there exist valuations that are XORs of k = √ m bundles such that any item-price auction that finds an <br>optimal allocation</br> between them requires exponentially many queries.",
                "These results are part of a recent line of research ([7, 43, 24, 40]) that study the preference elicitation problem in combinatorial auctions and its relation to the full elicitation problem (i.e., learn5 These are valuations where bidders have values for k specific packages, and the value of each bundle is the maximal value of one of these packages that it contains. ing the exact valuations of the bidders).",
                "These papers adapt methods from machine-learning theory to the combinatorialauction setting.",
                "The preference elicitation problem and the full elicitation problem relate to a well studied problem in microeconomics known as the integrability problem (see, e.g., [27]).",
                "This problem studies if and when one can derive the utility function of a consumer from her demand function.",
                "Paper organization: Due to the relatively large number of results we present, we start with a survey of our new results in Section 2.",
                "After describing our formal model in Section 3, we present our results concerning the power of demand queries in Section 4.",
                "Then, we describe the power of item-price ascending auctions (Section 5) and bundle-price ascending auctions (Section 6).",
                "Readers who are mainly interested in the self-contained discussion of ascending auctions can skip Section 4.",
                "Missing proofs from Section 4 can be found in part I of the full paper ([8]).",
                "Missing proofs from Sections 5 and 6 can be found in part II of the full paper ([9]). 2.",
                "A SURVEY OF OUR RESULTS Our systematic analysis is composed of the combination of a rather large number of results characterizing the power and limitations of various classes of auctions.",
                "In this section, we will present an exposition describing our new results.",
                "We first discuss the power of demand-query iterative auctions, and then we turn our attention to ascending auctions.",
                "Figure 3 summarizes some of our main results. 2.1 Demand Queries Comparison of query types We first ask what other natural types of queries could we imagine iterative auctions using?",
                "Here is a list of such queries that are either natural, have been used in the literature, or that we found useful. 1.",
                "Value query: The auctioneer presents a bundle S, the bidder reports his value v(S) for this bundle. 2.",
                "Marginal-value query: The auctioneer presents a bundle A and an item j, the bidder reports how much he is willing to pay for j, given that he already owns A, i.e., v(j|A) = v(A ∪ {j}) − v(A). 3.",
                "Demand query (with item prices): The auctioneer presents a vector of item prices p1...pm; the bidder reports his demand under these prices, i.e., some set S that maximizes v(S) − P i∈S pi.6 6 A tie breaking rule should be specified.",
                "All of our results 31 Communication Constraint Can find an <br>optimal allocation</br>?",
                "Upper bound for welfare approx.",
                "Lower bound for welfare approx.",
                "Item-Price Demand Queries Yes 1 1 Poly.",
                "Communication No [32] min(n, O(m1/2 )) [26] min(n, m1/2− ) [32] Poly.",
                "Item-Price Demand Queries No [32] min(n, O(m1/2 )) min(n, m1/2− ) [32] Poly.",
                "Value Queries No [32] O( m√ log m ) [19] O( m log m ) Anonymous Item-Price AA No - min(O(n), O(m1/2− )) Non-anonymous Item-Price AA No -Anonymous Bundle-Price AA No - min(O(n), O(m1/2− )) Non-anonymous Bundle-Price AA Yes [37] 1 1 Poly Number of Item-Price AA No min(n, O(m1/2 ))Figure 3: This paper studies the economic efficiency of auctions that follow certain communication constraints.",
                "For each class of auctions, the table shows whether the <br>optimal allocation</br> can be achieved, or else, how well can it be approximated (both upper bounds and lower bounds).",
                "New results are highlighted.",
                "Abbreviations: Poly. (Polynomial number/size), AA (ascending auctions). - means that nothing is currently known except trivial solutions. 4.",
                "Indirect-utility query: The auctioneer presents a set of item prices p1...pm, and the bidder responds with his indirect-utility under these prices, that is, the highest utility he can achieve from a bundle under these prices: maxS⊆M (v(S) − P i∈S pi).7 5.",
                "Relative-demand query: the auctioneer presents a set of non-zero prices p1...pm, and the bidder reports the bundle that maximizes his value per unit of money, i.e., some set that maximizes v(S)P i∈S pi .8 Theorem: Each of these queries can be efficiently (i.e., in time polynomial in n, m, and the number of bits of precision t needed to represent a single value vi(S)) simulated by a sequence of demand queries with item prices.",
                "In particular this shows that demand queries can elicit all information about a valuation by simulating all 2m −1 value queries.",
                "We also observe that value queries and marginalvalue queries can simulate each other in polynomial time and that demand queries and indirect-utility queries can also simulate each other in polynomial time.",
                "We prove that exponentially many value queries may be needed in order to simulate a single demand query.",
                "It is interesting to note that for the restricted class of substitutes valuations, demand queries may be simulated by polynomial number of value queries [6].",
                "Welfare approximation The next question that we ask is how well can a computationally-efficient auction that uses only demand queries approximate the <br>optimal allocation</br>?",
                "Two separate obstacles are known: In [32], a lower bound of min(n, m1/2− ), for any fixed > 0, was shown for the approximation factor apply for any fixed tie breaking rule. 7 This is exactly the utility achieved by the bundle which would be returned in a demand query with the same prices.",
                "This notion relates to the Indirect-utility function studied in the Microeconomic literature (see, e.g., [27]). 8 Note that when all the prices are 1, the bidder actually reports the bundle with the highest per-item price.",
                "We found this type of query useful, for example, in the design of the approximation algorithm described in Figure 5 in Section 4.2. obtained using any polynomial amount of communication.",
                "A computational bound with the same value applies even for the case of single-minded bidders, but under the assumption of NP = ZPP [39].",
                "As noted in [32], the computationallyefficient greedy algorithm of [26] can be adapted to become a polynomial-time iterative auction that achieves a nearly matching approximation factor of min(n, O( √ m)).",
                "This iterative auction may be implemented with bundle-price demand queries but, as far as we see, not as one with item prices.",
                "Since in a single bundle-price demand query an exponential number of prices can be presented, this algorithm can have an exponential communication cost.",
                "In Section 4.2, we describe a different item-price auction that achieves the same approximation factor with a polynomial number of queries (and thus with a polynomial communication).",
                "Theorem: There exists a computationally-efficient iterative auction with item-price demand queries that finds an allocation that approximates the optimal welfare between arbitrary valuations to within a factor of min(n, O( √ m)).",
                "One may then attempt obtaining such an approximation factor using iterative auctions that use only the weaker value queries.",
                "However, we show that this is impossible: Theorem: Any iterative auction that uses a polynomial (in n and m) number of value queries can not achieve an approximation factor that is better than O( m log m ).9 Note however that auctions with only value queries are not completely trivial in power: the bundling auctions of Holzman et al. [19] can easily be implemented by a polynomial number of value queries and can achieve an approximation factor of O( m√ log m ) by using O(log m) equi-sized bundles.",
                "We do not know how to close the (tiny) gap between this upper bound and our lower bound.",
                "Representing bundle-prices We then deal with a critical issue with bundle-price auctions that was side-stepped by our model, as well as by all previous works that used bundle-price auctions: how are 9 This was also proven independently by Shahar Dobzinski and Michael Schapira. 32 the bundle prices represented?",
                "For item-price auctions this is not an issue since a query needs only to specify a small number, m, of prices.",
                "In bundle-price auctions that situation is more difficult since there are exponentially many bundles that require pricing.",
                "Our basic model (like all previous work that used bundle prices, e.g., [37, 34, 3]), ignores this issue, and only requires that the prices be determined, somehow, by the protocol.",
                "A finer model would fix a specific language for denoting bundle prices, force the protocol to represent the bundle-prices in this language, and require that the representations of the bundle-prices also be polynomial.",
                "What could such a language for denoting prices for all bundles look like?",
                "First note that specifying a price for each bundle is equivalent to specifying a valuation.",
                "Second, as noted in [31], most of the proposed bidding languages are really just languages for representing valuations, i.e., a syntactic representation of valuations - thus we could use any of them.",
                "This point of view opens up the general issue of which language should be used in bundle-price auctions and what are the implications of this choice.",
                "Here we initiate this line of investigation.",
                "We consider bundle-price auctions where the prices must be given as a XOR-bid, i.e., the protocol must explicitly indicate the price of every bundle whose value is different than that of all of its proper subsets.",
                "Note that all bundle-price auctions that do not explicitly specify a bidding language must implicitly use this language or a weaker one, since without a specific language one would need to list prices for all bundles, perhaps except for trivial ones (those with value 0, or more generally, those with a value that is determined by one of their proper subsets.)",
                "We show that once the representation length of bundle prices is taken into account (using the XOR-language), bundle-price auctions are no more strictly stronger than item-price auctions.",
                "Define the cost of an iterative auction as the total length of the queries and answers used throughout the auction (in the worst case).",
                "Theorem: For some class of valuations, bundle price auctions that use the XOR-language require an exponential cost for finding the <br>optimal allocation</br>.",
                "In contrast, item-price auctions can find the <br>optimal allocation</br> for this class within polynomial cost.10 This put doubts on the applicability of bundle-price auctions like [3, 37], and it may justify the use of hybrid pricing methods such as Ausubel, Cramton and Milgroms Clock-Proxy auction ([10]).",
                "Demand queries and linear programs The winner determination problem in combinatorial auctions may be formulated as an integer program.",
                "In many cases solving the linear-program relaxation of this integer program is useful: for some restricted classes of valuations it finds the optimum of the integer program (e.g., substitute valuations [22, 17]) or helps approximating the optimum (e.g., by randomized rounding [13, 14]).",
                "However, the linear program has an exponential number of variables.",
                "Nisan and Segal [32] observed the surprising fact that despite the ex10 Our proof relies on the sophisticated known lower bounds for constant depth circuits.",
                "We were not able to find an elementary proof. ponential number of variables, this linear program may be solved within polynomial communication.",
                "The basic idea is to solve the dual program using the Ellipsoid method (see, e.g., [20]).",
                "The dual program has a polynomial number of variables, but an exponential number of constraints.",
                "The Ellipsoid algorithm runs in polynomial time even on such programs, provided that a separation oracle is given for the set of constraints.",
                "Surprisingly, such a separation oracle can be implemented using a single demand query (with item prices) to each of the bidders.",
                "The treatment of [32] was somewhat ad-hoc to the problem at hand (the case of substitute valuations).",
                "Here we give a somewhat more general form of this important observation.",
                "Let us call the following class of linear programs generalized-winner-determination-relaxation (GWDR) LPs: Maximize X i∈N,S⊆M wi xi,S vi(S) s.t.",
                "X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M The case where wi = 1, di = 1, qj = 1 (for every i, j) is the usual linear relaxation of the winner determination problem.",
                "More generally, wi may be viewed as the weight given to bidder is welfare, qj may be viewed as the quantity of units of good j, and di may be viewed as duplicity of the number of bidders of type i. Theorem: Any GWDR linear program may be solved in polynomial time (in n, m, and the number of bits of precision t) using only demand queries with item prices.11 2.2 Ascending Auctions Ascending item-price auctions: It is well known that the item-price ascending auctions of Kelso and Crawford [22] and its variants [12, 16] find the <br>optimal allocation</br> as long as all players valuations have the substitutes property.",
                "The obvious question is whether the <br>optimal allocation</br> can be found for a larger class of valuations.",
                "Our main result here is a strong negative result: Theorem: There is a 2-item 2-player problem where no ascending item-price auction can find the <br>optimal allocation</br>.",
                "This is in contrast to both the power of bundle-price ascending auctions and to the power of general item-price demand queries (see above), both of which can always find the <br>optimal allocation</br> and in fact even provide full preference elicitation.",
                "The same proof proves a similar impossibility result for other types of auctions (e.g., descending auctions, non-anonymous auctions).",
                "More extension of this result: • Eliciting some classes of valuations requires an exponential number of ascending item-price trajectories. 11 The produced optimal solution will have polynomial support and thus can be listed fully. 33 • At least k − 1 ascending item-price trajectories are needed to elicit XOR formulae with k terms.",
                "This result is in some sense tight, since we show that any k-term XOR formula can be fully elicited by k−1 nondeterministic (i.e., when some exogenous teacher instructs the auctioneer on how to increase the prices) ascending auctions.12 We also show that item-price ascending auctions and iterative auctions that are limited to a polynomial number of queries (of any kind, not necessarily ascending) are incomparable in their power: ascending auctions, with small enough increments, can elicit the preferences in cases where any polynomial number of queries cannot.",
                "Motivated by several recent papers that studied the relation between eliciting and fully-eliciting the preferences in combinatorial auctions (e.g., [7, 24]), we explore the difference between these problems in the context of ascending auctions.",
                "We show that although a single ascending auction can determine the <br>optimal allocation</br> among any number of bidders with substitutes valuations, it cannot fully-elicit such a valuation even for a single bidder.",
                "While it was shown in [25] that the set of substitutes valuations has measure zero in the space of general valuations, its dimension is not known, and in particular it is still open whether a polynomial amount of information suffices to describe a substitutes valuation.",
                "While our result may be a small step in that direction (a polynomial full elicitation may still be possible with other communication protocols), we note that our impossibility result also holds for valuations in the class OXS defined by [25], valuations that we are able to show have a compact representation.",
                "We also give several results separating the power of different models for ascending combinatorial auctions that use item-prices: we prove, not surprisingly, that adaptive ascending auctions are more powerful than oblivious ascending auctions and that non-deterministic ascending auctions are more powerful than deterministic ascending auctions.",
                "We also compare different kinds of non-anonymous auctions (e.g., simultaneous or sequential), and observe that anonymous bundle-price auctions and non-anonymous item-price auctions are incomparable in their power.",
                "Finally, motivated by Dutch auctions, we consider descending auctions, and how they compare to ascending ones; we show classes of valuations that can be elicited by ascending item-price auctions but not by descending item-price auctions, and vice versa.",
                "Ascending bundle-price auctions: All known ascending bundle-price auctions that are able to find the <br>optimal allocation</br> between general valuations (with free disposal) use non-anonymous prices.",
                "Anonymous ascending-price auctions (e.g., [42, 21, 37]) are only known to be able to find the <br>optimal allocation</br> among superadditive valuations or few other simple classes ([36]).",
                "We show that this is no mistake: Theorem: No ascending auction with anonymous prices can find the <br>optimal allocation</br> between general valuations. 12 Non-deterministic computation is widely used in CS and also in economics (e.g, a Walrasian equilibrium or [38]).",
                "In some settings, deterministic and non-deterministic models have equal power (e.g., computation with finite automata).",
                "This bound is regardless of the running time, and it also holds for descending auctions and non-deterministic auctions.",
                "We strengthen this result significantly by showing that anonymous ascending auctions cannot produce a better than O( √ m) approximation - the approximation ratio that can be achieved with a polynomial number of queries ([26, 32]) and, as mentioned, with a polynomial number of item-price demand queries.",
                "The same lower bound clearly holds for anonymous item-price ascending auctions since such auctions can be simulated by anonymous bundle-price ascending auctions.",
                "We currently do not have any lower bound on the approximation achievable by non-anonymous item-price ascending auctions.",
                "Finally, we study the performance of the existing computationally-efficient ascending auctions.",
                "These protocols ([37, 3]) require exponential time in the worst case, and this is unavoidable as shown by [32].",
                "However, we also observe that these auctions, as well as the whole class of similar ascending bundle-price auctions, require an exponential time even for simple additive valuations.",
                "This is avoidable and indeed the ascending item-price auctions of [22] can find the <br>optimal allocation</br> for these simple valuations with polynomial communication. 3.",
                "THE MODEL 3.1 Discrete Auctions for Continuous Values Our model aims to capture iterative auctions that operate on real-valued valuations.",
                "There is a slight technical difficulty here in bridging the gap between the discrete nature of an iterative auction, and the continuous nature of the valuations.",
                "This is exactly the same problem as in modeling a simple English auction.",
                "There are three standard formal ways to model it: 1.",
                "Model the auction as a continuous process and study its trajectory in time.",
                "For example, the so-called Japanese auction is basically a continuous model of an English model.13 2.",
                "Model the auction as discrete and the valuations as continuously valued.",
                "In this case we introduce a parameter and usually require the auction to produce results that are -close to optimal. 3.",
                "Model the valuations as discrete.",
                "In this case we will assume that all valuations are integer multiples of some small fixed quantity δ, e.g., 1 penny.",
                "All communication in this case is then naturally finite.",
                "In this paper we use the latter formulation and assume that all values are multiples of some δ.",
                "Thus, in some parts of the paper we assume without loss of generality that δ = 1, hence all valuations are integral.",
                "Almost all (if not all) of our results can be translated to the other two models with little effort. 3.2 Valuations A single auctioneer is selling m indivisible non-homogeneous items in a single auction, and let M be the set of these 13 Another similar model is the moving knives model in the cake-cutting literature. 34 items and N be the set of bidders.",
                "Each one of the n bidders in the auction has a valuation function vi : 2m → {0, δ, 2δ, ..., L}, where for every bundle of items S ⊆ M, vi(S) denotes the value of bidder i for the bundle S and is a multiple of δ in the range 0...L. We will sometimes denote the number of bits needed to represent such values in the range 0...L by t = log L. We assume free disposal, i.e., S ⊆ T implies vi(S) ≤ vi(T) and that vi(∅) = 0 for all bidders.",
                "We will mention the following classes of valuations: • A valuation is called sub-modular if for all sets of items A and B we have that v(A ∪ B) + v(A ∩ B) ≤ v(A) + v(B). • A valuation is called super-additive if for all disjoint sets of items A and B we have that v(A∪B) ≥ v(A)+ v(B). • A valuation is called a k-bundle XOR if it can be represented as a XOR combination of at most k atomic bids [30], i.e., if there are at most k bundles Si and prices pi such that for all S, v(S) = maxi|S⊇Si pi.",
                "Such valuations will be denoted by v = (S1 : p1) ⊕ (S2 : p2) ⊕ . . . ⊕ (Sk : pk).14 3.3 Iterative Auctions The auctioneer sets up a protocol (equivalently an algorithm), where at each stage of the protocol some information q - termed the query - is sent to some bidder i, and then bidder i replies with some reply that depends on the query as well as on his own valuation.",
                "In this paper, we assume that we have complete control over the bidders behavior, and thus the protocol also defines a reply function ri(q, vi) that specifies bidder is reply to query q.",
                "The protocol may be adaptive: the query value as well as the queried bidder may depend on the replies received for past queries.",
                "At the end of the protocol, an allocation S1...Sn must be declared, where Si ∩ Sj = ∅ for i = j.",
                "We say that the auction finds an <br>optimal allocation</br> if it finds the allocation that maximizes the social welfareP i vi(Si).",
                "We say that it finds a c-approximation if P i vi(Si) ≥ P i vi(Ti)/c where T1...Tn is an <br>optimal allocation</br>.",
                "The running time of the auction on a given instance of the bidders valuations is the total number of queries made on this instance.",
                "The running time of a protocol is the worst case cost over all instances.",
                "Note that we impose no computational limitations on the protocol or on the players.15 This of course only strengthens our hardness results.",
                "Yet, our positive results will not use this power and will be efficient also in the usual computational sense.",
                "Our goal will be to design computationally-efficient protocols.",
                "We will deem a protocol computationally-efficient if its cost is polynomial in the relevant parameters: the number of bidders n, the number of items m, and t = log L, where L is the largest possible value of a bundle.",
                "However, when we discuss ascending-price auctions and their variants, a computationally-efficient protocol will be required to be 14 For example, v = (abcd : 5) ⊕ (ab : 3) ⊕ (c : 4) denotes the XOR valuation with the terms abcd, ab, c and prices 5, 3, 4 respectively.",
                "For this valuation, v(abcd) = 5, v(abd) = 3, v(abc) = 4. 15 The running time really measures communication costs and not computational running time. pseudo-polynomial, i.e., it should ask a number of queries which is polynomial in m, n and L δ .",
                "This is because that ascending auctions can usually not achieve such running times (consider even the English auction on a single item).16 Note that all of our results give concrete bounds, where the dependence on the parameters is given explicitly; we use the standard big-Oh notation just as a shorthand.",
                "We say than an auction elicits some class V of valuations, if it determines the <br>optimal allocation</br> for any profile of valuations drawn from V ; We say that an auction fully elicits some class of valuations V , if it can fully learn any single valuation v ∈ V (i.e., learn v(S) for every S). 3.4 Demand Queries and Ascending Auctions Most of the paper will be concerned with a common special case of iterative auctions that we term demand auctions.",
                "In such auctions, the queries that are sent to bidders are demand queries: the query specifies a price p(S) ∈ + for each bundle S. The reply of bidder i is simply the set most desired - demanded - under these prices.",
                "Formally, a set S that maximizes vi(S) − p(S).",
                "It may happen that more than one set S maximizes this value.",
                "In which case, ties are broken according to some fixed tie-breaking rule, e.g., the lexicographically first such set is returned.",
                "All of our results hold for any fixed tie-breaking rule.",
                "Ascending auctions are iterative auctions with non-decreasing prices: Definition 1.",
                "In an ascending auction, the prices in the queries to the same bidder can only increase in time.",
                "Formally, let p be a query made for bidder i, and q be a query made for bidder i at a later stage in the protocol.",
                "Then for all sets S, q(S) ≥ p(S).",
                "A similar variant, which we also study and that is also common in real life, is descending auctions, in which prices can only decrease in time.",
                "Note that the term ascending auction refers to an auction with a single ascending trajectory of prices.",
                "It may be useful to define multi-trajectory ascending auctions, in which the prices maybe reset to zero a number of times (see, e.g., [4]).",
                "We consider two main restrictions on the types of allowed demand queries: Definition 2.",
                "Item Prices: The prices in each query are given by prices pj for each item j.",
                "The price of a set S is additive: p(S) = P j∈S pj.",
                "Definition 3.",
                "Anonymous prices: The prices seen by the bidders at any stage in the auction are the same, i.e. whenever a query is made to some bidder, the same query is also made to all other bidders (with the prices unchanged).",
                "In auctions with non-anonymous (discriminatory) prices, each bidder i has personalized prices denoted by pi (S).17 In this paper, all auctions are anonymous unless otherwise specified.",
                "Note that even though in our model valuations are integral (or multiples of some δ), we allow the demand query to 16 Most of the auctions we present may be adapted to run in time polynomial in log L, using a binary-search-like procedure, losing their ascending nature. 17 Note that a non-anonymous auction can clearly be simulated by n parallel anonymous auctions. 35 use arbitrary real numbers in +.",
                "That is, we assume that the increment we use in the ascending auctions may be significantly smaller than δ.",
                "All our hardness results hold for any , even for continuous price increments.",
                "A practical issue here is how will the query be specified: in the general case, an exponential number of prices needs to be sent in a single query.",
                "Formally, this is not a problem as the model does not limit the length of queries in any way - the protocol must simply define what the prices are in terms of the replies received for previous queries.",
                "We look into this issue further in Section 4.3. 4.",
                "THE POWER OF DEMAND QUERIES In this section, we study the power of iterative auctions that use demand queries (not necessarily ascending).",
                "We start by comapring demand queries to other types of queries.",
                "Then, we discuss how well can one approximate the optimal welfare using a polynomial number of demand queries.",
                "We also initiate the study of the representation of bundle-price demand queries, and finally, we show how demand queries help solving the linear-programming relaxation of combinatorial auctions in polynomial time. 4.1 The Power of Different Types of Queries In this section we compare the power of the various types of queries defined in Section 2.",
                "We will present computationally -efficient simulations of these query types using item-price demand queries.",
                "In Section 5.1 we show that these simulations can also be done using item-price ascending auctions.",
                "Lemma 4.1.",
                "A value query can be simulated by m marginalvalue queries.",
                "A marginal-value query can be simulated by two value queries.",
                "Lemma 4.2.",
                "A value query can be simulated by mt demand queries (where t = log L is the number of bits needed to represent a single bundle value).18 As a direct corollary we get that demand auctions can always fully elicit the bidders valuations by simulating all possible 2m − 1 queries and thus elicit enough information for determining the <br>optimal allocation</br>.",
                "Note, however, that this elicitation may be computationally inefficient.",
                "The next lemma shows that demand queries can be exponentially more powerful than value queries.",
                "Lemma 4.3.",
                "An exponential number of value queries may be required for simulating a single demand query.",
                "Indirect utility queries are, however, equivalent in power to demand queries: Lemma 4.4.",
                "An indirect-utility query can be simulated by mt + 1 demand queries.",
                "A demand query can be simulated by m + 1 indirect-utility queries.",
                "Demand queries can also simulate relative-demand queries:19 18 Note that t bundle-price demand queries can easily simulate a value query by setting the prices of all the bundles except S (the bundle with the unknown value) to be L, and performing a binary search on the price of S. 19 Note: although in our model values are integral (our multiples of δ), we allow the query prices to be arbitrary real numV MV D IU RD V 1 2 exp exp exp MV m 1 exp exp exp D mt poly 1 mt+1 poly IU 1 2 m+1 1 poly RD - - - - 1 Figure 4: Each entry in the table specifies how many queries of this row are needed to simulate a query from the relevant column.",
                "Abbreviations: V (value query), MV (marginal-value query), D (demand query), IU (Indirect-utility query), RD (relative demand query).",
                "Lemma 4.5.",
                "Relative-demand queries can be simulated by a polynomial number of demand queries.",
                "According to our definition of relative-demand queries, they clearly cannot simulate even value queries.",
                "Figure 4 summarizes the relations between these query types. 4.2 Approximating the Social Welfare with Value and Demand Queries We know from [32] that iterative combinatorial auctions that only use a polynomial number of queries can not find an <br>optimal allocation</br> among general valuations and in fact can not even approximate it to within a factor better than min{n, m1/2− }.",
                "In this section we ask how well can this approximation be done using demand queries with item prices, or using the weaker value queries.",
                "We show that, using demand queries, the lower bound can be matched, while value queries can only do much worse.",
                "Figure 5 describes a polynomial-time algorithm that achieves a min(n, O( √ m)) approximation ratio.",
                "This algorithm greedily picks the bundles that maximize the bidders per-item value (using relative-demand queries, see Section 4.1).",
                "As a final step, it allocates all the items to a single bidder if it improves the social welfare (this can be checked using value queries).",
                "Since both value queries and relative-demand queries can be simulated by a polynomial number of demand queries with item prices (Lemmas 4.2 and 4.5), this algorithm can be implemented by a polynomial number of demand queries with item prices.20 Theorem 4.6.",
                "The auction described in Figure 5 can be implemented by a polynomial number of demand queries and achieves a min{n, 4 √ m}-approximation for the social welfare.",
                "We now ask how well can the optimal welfare be approximated by a polynomial number of value queries.",
                "First we note that value queries are not completely powerless: In [19] it is shown that if the m items are split into k fixed bundles of size m/k each, and these fixed bundles are auctioned as though each was indivisible, then the social welfare bers, thus we may have bundles with arbitrarily close relative demands.",
                "In this sense the simulation above is only up to any given (and the number of queries is O(log L+log 1 )).",
                "When the relative-demand query prices are given as rational numbers, exact simulation is implied when log is linear in the input length. 20 In the full paper [8], we observe that this algorithm can be implemented by two descending item-price auctions (where we allow removing items along the auction). 36 generated by such an auction is at least m√ k -approximation of that possible in the original auction.",
                "Notice that such an auction can be implemented by 2k − 1 value queries to each bidder - querying the value of each bundle of the fixed bundles.",
                "Thus, if we choose k = log m bundles we get an m√ log m -approximation while still using a polynomial number of queries.",
                "The following lemma shows that not much more is possible using value queries: Lemma 4.7.",
                "Any iterative auction that uses only value queries and distinguishes between k-tuples of 0/1 valuations where the <br>optimal allocation</br> has value 1, and those where the <br>optimal allocation</br> has value k requires at least 2 m k queries.",
                "Proof.",
                "Consider the following family of valuations: for every S, such that |S| > m/2, v(S) = 1, and there exists a single set T, such that for |S| ≤ m/2, v(S) = 1 iff T ⊆ S and v(S) = 0 otherwise.",
                "Now look at the behavior of the protocol when all valuations vi have T = {1...m}.",
                "Clearly in this case the value of the best allocation is 1 since no set of size m 2 or lower has non-zero value for any player.",
                "Fix the sequence of queries and answers received on this k-tuple of valuations.",
                "Now consider the k-tuple of valuations chosen at random as follows: a partition of the m items into k sets T1...Tk each of size m k each is chosen uniformly at random among all such partitions.",
                "Now consider the k-tuple of valuations from our family that correspond to this partition - clearly Ti can be allocated to i, for each i, getting a total value of k. Now look at the protocol when running on these valuations and compare its behavior to the original case.",
                "Note that the answer to a query S to player i differs between the case of Ti and the original case of T = {1...m} only if |S| ≤ m 2 and Ti ⊆ S. Since Ti is distributed uniformly among all sets of size exactly m k , we have that for any fixed query S to player i, where |S| ≤ m 2 , Pr[Ti ⊆ S] ≤ „ |S| m «|Ti| ≤ 2− m k Using the union-bound, if the original sequence of queries was of length less than 2 m k , then with positive probability none of the queries in the sequence would receive a different answer than for the original input tuple.",
                "This is forbidden since the protocol must distinguish between this case and the original case - which cannot happen if all queries receive the same answer.",
                "Hence there must have been at least 2 m k queries for the original tuple of valuations.",
                "We conclude that a polynomial time protocol that uses only value queries cannot obtain a better than O( m log m ) approximation of the welfare: Theorem 4.8.",
                "An iterative auction that uses a polynomial number of value queries cannot achieve better than O( m log m )-approximation for the social welfare.",
                "Proof.",
                "Immediate from Lemma 4.7: achieving any approximation ratio k which is asymptotically greater than m log m needs an exponential number of value queries.",
                "An Approximation Algorithm: Initialization: Let T ← M be the current items for sale.",
                "Let K ← N be the currently participating bidders.",
                "Let S∗ 1 ← ∅, ..., S∗ n ← ∅ be the provisional allocation.",
                "Repeat until T = ∅ or K = ∅: Ask each bidder i in K for the bundle Si that maximizes her per-item value, i.e., Si ∈ argmaxS⊆T vi(S) |S| .",
                "Let i be the bidder with the maximal per-item value, i.e., i ∈ argmaxi∈K vi(Si) |Si| .",
                "Set: s∗ i = si, K = K \\ i, M = M \\ Si Finally: Ask the bidders for their values vi(M) for the grand bundle.",
                "If allocating all the items to some bidder i improves the social welfare achieved so far (i.e., ∃i ∈ N such that vi(M) > P i∈N vi(S∗ i )), then allocate all items to this bidder i.",
                "Figure 5: This algorithm achieves a min{n, 4 √ m}approximation for the social welfare, which is asymptotically the best worst-case approximation possible with polynomial communication.",
                "This algorithm can be implemented with a polynomial number of demand queries. 4.3 The Representation of Bundle Prices In this section we explicitly fix the language in which bundle prices are presented to the bidders in bundle-price auctions.",
                "This language requires the algorithm to explicitly list the price of every bundle with a non-trivial price.",
                "Trivial in this context is a price that is equal to that of one of its proper subsets (which was listed explicitly).",
                "This representation is equivalent to the XOR-language for expressing valuations.",
                "Formally, each query q is given by an expression: q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl).",
                "In this representation, the price demanded for every set S is simply p(S) = max{k=1...l|Sk⊆S}pk.",
                "Definition 4.",
                "The length of the query q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl) is l. The cost of an algorithm is the sum of the lengths of the queries asked during the operation of the algorithm on the worst case input.",
                "Note that under this definition, bundle-price auctions are not necessarily stronger than item-price auctions.",
                "An itemprice query that prices each item for 1, is translated to an exponentially long bundle-price query that needs to specify the price |S| for each bundle S. But perhaps bundle-price auctions can still find optimal allocations whenever itemprice auction can, without directly simulating such queries?",
                "We show that this is not the case: indeed, when the representation length is taken into account, bundle price auctions are sometimes seriously inferior to item price auctions.",
                "Consider the following family of valuations: Each item is valued at 3, except that for some single set S, its value is a bit more: 3|S| + b, where b ∈ {0, 1, 2}.",
                "Note that an item price auction can easily find the <br>optimal allocation</br> between any two such valuations: Set the prices of each item to 3+ ; if the demand sets of the two players are both empty, then b = 0 for both valuations, and an arbitrary allocation is fine.",
                "If one of them is empty and the other non-empty, allocate the non-empty demand set to its bidder, and the rest to the other.",
                "If both demand sets are non-empty then, unless they form an exact partition, we need to see which b is larger, which we can do by increasing the price of a single item in each demand set. 37 We will show that any bundle-price auction that uses only the XOR-language to describe bundle prices requires an exponential cost (which includes the sum of all description lengths of prices) to find an <br>optimal allocation</br> between any two such valuations.",
                "Lemma 4.9.",
                "Every bundle-price auction that uses XORexpressions to denote bundle prices requires 2Ω( √ m) cost in order to find the <br>optimal allocation</br> among two valuations from the above family.",
                "The complication in the proof stems from the fact that using XOR-expressions, the length of the price description depends on the number of bundles whose price is strictly larger than each of their subsets - this may be significantly smaller than the number of bundles that have a non-zero price. (The proof becomes easy if we require the protocol to explicitly name every bundle with non-zero price.)",
                "We do not know of any elementary proof for this lemma (although we believe that one can be found).",
                "Instead we reduce the problem to a well known lower bound in boolean circuit complexity [18] stating that boolean circuits of depth 3 that compute the majority function on m variables require 2Ω( √ m) size. 4.4 Demand Queries and Linear Programming Consider the following linear-programming relaxation for the generalized winner-determination problem in combinatorial auctions (the primal program): Maximize X i∈N,S⊆M wi xi,S vi(S) s.t.",
                "X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M Note that the primal program has an exponential number of variables.",
                "Yet, we will be able to solve it in polynomial time using demand queries to the bidders.",
                "The solution will have a polynomial size support (non-zero values for xi,S), and thus we will be able to describe it in polynomial time.",
                "Here is its dual: Minimize X j∈M qjpj + X i∈N diui s.t. ui + X j∈S pj ≥ wivi(S) ∀i ∈ N, S ⊆ M pi ≥ 0, uj ≥ 0 ∀i ∈ M, j ∈ N Notice that the dual problem has exactly n + m variables but an exponential number of constraints.",
                "Thus, the dual can be solved using the Ellipsoid method in polynomial time - if a separation oracle can be implemented in polynomial time.",
                "Recall that a separation oracle, when given a possible solution, either confirms that it is a feasible solution, or responds with a constraint that is violated by the possible solution.",
                "We construct a separation oracle for solving the dual program, using a single demand query to each of the bidders.",
                "Consider a possible solution (u, p) for the dual program.",
                "We can re-write the constraints of the dual program as: ui/wi ≥ vi(S) − X j∈S pj/wi Now a demand query to bidder i with prices pj/wi reveals exactly the set S that maximizes the RHS of the previous inequality.",
                "Thus, in order to check whether (u, p) is feasible it suffices to (1) query each bidder i for his demand Di under the prices pj/wi; (2) check only the n constraints ui + P j∈Di pj ≥ wivi(Di) (where vi(Di) can be simulated using a polynomial sequence of demand queries as shown in Lemma 4.2).",
                "If none of these is violated then we are assured that (u, p) is feasible; otherwise we get a violated constraint.",
                "What is left to be shown is how the primal program can be solved. (Recall that the primal program has an exponential number of variables.)",
                "Since the Ellipsoid algorithm runs in polynomial time, it encounters only a polynomial number of constraints during its operation.",
                "Clearly, if all other constraints were removed from the dual program, it would still have the same solution (adding constraints can only decrease the space of feasible solutions).",
                "Now take the reduced dual where only the constraints encountered exist, and look at its dual.",
                "It will have the same solution as the original dual and hence of the original primal.",
                "However, look at the form of this dual of the reduced dual.",
                "It is just a version of the primal program with a polynomial number of variables - those corresponding to constraints that remained in the reduced dual.",
                "Thus, it can be solved in polynomial time, and this solution clearly solves the original primal program, setting all other variables to zero. 5.",
                "ITEM-PRICE ASCENDING AUCTIONS In this section we characterize the power of ascending item-price auctions.",
                "We first show that this power is not trivial: such auctions can in general elicit an exponential amount of information.",
                "On the other hand, we show that the <br>optimal allocation</br> cannot always be determined by a single ascending auction, and in some cases, nor by an exponential number of ascending-price trajectories.",
                "Finally, we separate the power of different models of ascending auctions. 5.1 The Power of Item-Price Ascending Auctions We first show that if small enough increments are allowed, a single ascending trajectory of item-prices can elicit preferences that cannot be elicited with polynomial communication.",
                "As mentioned, all our hardness results hold for any increment, even infinitesimal.",
                "Theorem 5.1.",
                "Some classes of valuations can be elicited by item-price ascending auctions, but cannot be elicited by a polynomial number of queries of any kind.",
                "Proof. (sketch) Consider two bidders with v(S) = 1 if |S| > n 2 , v(S) = 0 if |S| < n 2 and every S such that |S| = n 2 has an unknown value from {0, 1}.",
                "Due to [32], determining the <br>optimal allocation</br> here requires exponential communication in the worst case.",
                "Nevertheless, we show (see [9]) that an item-price ascending auction can do it, as long as it can use exponentially small increments.",
                "We now describe another positive result for the power of item-price ascending auctions.",
                "In section 4.1, we showed 38 v(ab) v(a) v(b) Bidder 1 2 α ∈ (0, 1) β ∈ (0, 1) Bidder 2 2 2 2 Figure 6: No item-price ascending auctions can determine the <br>optimal allocation</br> for this class of valuations. that a value query can be simulated with a (truly) polynomial number of item-price demand queries.",
                "Here, we show that every value query can be simulated by a (pseudo) polynomial number of ascending item-price demand queries. (In the next subsection, we show that we cannot always simulate even a pair of value queries using a single item-price ascending auction.)",
                "In the full paper (part II,[9]), we show that we can simulate other types of queries using item-price ascending auctions.",
                "Proposition 5.2.",
                "A value query can be simulated by an item-price ascending auction.",
                "This simulation requires a polynomial number of queries.",
                "Actually, the proof for Proposition 5.2 proves a stronger useful result regarding the information elicited by iterative auctions.",
                "It says that in any iterative auction in which the changes of prices are small enough in each stage (pseudocontinuous auctions), the value of all bundles demanded during the auction can be computed.",
                "The basic idea is that when the bidder moves from demanding some bundle Ti to demanding another bundle Ti+1, there is a point in which she is indifferent between these two bundles.",
                "Thus, knowing the value of some demanded bundle (e.g., the empty set) enables computing the values of all other demanded bundles.",
                "We say that an auction is pseudo-continuous, if it only uses demand queries, and in each step, the price of at most one item is changed by (for some ∈ (0, δ]) with respect to the previous query.",
                "Proposition 5.3.",
                "Consider any pseudo-continuous auction (not necessarily ascending), in which bidder i demands the empty set at least once along the auction.",
                "Then, the value of every bundle demanded by bidder i throughout the auction can be calculated at the end of the auction. 5.2 Limitations of Item-Price Ascending Auctions Although we observed that demand queries can solve any combinatorial auction problem, when the queries are restricted to be ascending, some classes of valuations cannot be elicited nor fully-elicited.",
                "An example for such class of valuations is given in Figure 6.",
                "Theorem 5.4.",
                "There are classes of valuations that cannot be elicited nor fully elicited by any item-price ascending auction.",
                "Proof.",
                "Let bidder 1 have the valuation described in the first row of Figure 6, where α and β are unknown values in (0, 1).",
                "First, we prove that this class cannot be fully elicited by a single ascending auction.",
                "Specifically, an ascending auction cannot reveal the values of both α and β.",
                "As long as pa and pb are both below 1, the bidder will always demand the whole bundle ab: her utility from ab is strictly greater than the utility from either a or b separately.",
                "For example, we show that u1(ab) > u1(a): u1(ab) = 2 − (pa + pb) = 1 − pa + 1 − pb > vA(a) − pa + 1 − pb > u1(a) Thus, in order to gain any information about α or β, the price of one of the items should become at least 1, w.l.o.g. pa ≥ 1.",
                "But then, the bundle a will not be demanded by bidder 1 throughout the auction, thus no information at all will be gained about α.",
                "Now, assume that bidder 2 is known to have the valuation described in the second row of Figure 6.",
                "The <br>optimal allocation</br> depends on whether α is greater than β (in bidder 1s valuation), and we proved that an ascending auction cannot determine this.",
                "The proof of the theorem above shows that for an unknown value to be revealed, the price of one item should be greater than 1, and the other price should be smaller than 1.",
                "Therefore, in a price-monotonic trajectory of prices, only one of these values can be revealed.",
                "An immediate conclusion is that this impossibility result also holds for item-price descending auctions.",
                "Since no such trajectory exists, then the same conclusion even holds for non-deterministic itemprice auctions (in which exogenous data tells us how to increase the prices).",
                "Also note that since the hardness stems from the impossibility to fully-elicit a valuation of a single bidder, this result also holds for non-anonymous ascending item-price auctions. 5.3 Limitations of Multi-Trajectory Ascending Auctions According to Theorem 5.4, no ascending item-price auction can always elicit the preferences (we prove a similar result for bundle prices in section 6).",
                "But can two ascending trajectories do the job?",
                "Or a polynomial number of ascending trajectories?",
                "We give negative answers for such suggestions.",
                "We define a k-trajectory ascending auction as a demandquery iterative auction in which the demand queries can be partitioned to k sets of queries, where the prices published in each set only increase in time.",
                "Note that we use a general definition; It allows the trajectories to run in parallel or sequentially, and to use information elicited in some trajectories for determining the future queries in other trajectories.",
                "The power of multiple-trajectory auctions can be demonstrated by the negative result of Gul and Stacchetti [17] who showed that even for an auction among substitutes valuations, an anonymous ascending item-price auction cannot compute VCG prices for all players.21 Ausubel [4] overcame this impossibility result and designed auctions that do compute VCG prices by organizing the auction as a sequence of n + 1 ascending auctions.",
                "Here, we prove that one cannot elicit XOR valuations with k terms by less than k − 1 ascending trajectories.",
                "On the other hand, we show that an XOR formula can be fully elicited by k−1 non-deterministic ascending auctions (or by k−1 deterministic ascending auctions if the auctioneer knows the atomic bundles).22 21 A recent unpublished paper by Mishra and Parkes extends this result, and shows that non-anonymous prices with bundle-prices are necessary in order that an ascending auction will end up with a universal-competitive-equilibrium (that leads to VCG payments). 22 This result actually separates the power of deterministic 39 Proposition 5.5.",
                "XOR valuations with k terms cannot be elicited (or fully elicited) by any (k-2)-trajectory itemprice ascending auction, even when the atomic bundles are known to the elicitor.",
                "However, these valuations can be elicited (and fully elicited) by (k-1)-trajectory non-deterministic non-anonymous item-price ascending auctions.",
                "Moreover, an exponential number of trajectories is required for eliciting some classes of valuations: Proposition 5.6.",
                "Elicitation and full-elicitation of some classes of valuations cannot be done by any k-trajectory itemprice ascending auction, where k = o(2m ).",
                "Proof. (sketch) Consider the following class of valuations: For |S| < m 2 , v(S) = 0 and for |S| > m 2 , v(S) = 2; every bundle S of size m 2 has some unknown value in (0, 1).",
                "We show ([9]) that a single item-price ascending auction can reveal the value of at most one bundle of size n 2 , and therefore an exponential number of ascending trajectories is needed in order to elicit such valuations.",
                "We observe that the algorithm we presented in Section 4.2 can be implemented by a polynomial number of ascending auctions (each item-price demand query can be considered as a separate ascending auction), and therefore a min(n, 4 √ m)-approximation can be achieved by a polynomial number of ascending auctions.",
                "We do not currently have a better upper bound or any lower bound. 5.4 Separating the Various Models of Ascending Auctions Various models for ascending auctions have been suggested in the literature.",
                "In this section, we compare the power of the different models.",
                "As mentioned, all auctions are considered anonymous and deterministic, unless specified otherwise.",
                "Ascending vs.",
                "Descending Auctions: We begin the discussion of the relation between ascending auctions and descending auctions with an example.",
                "The algorithm by Lehmann, Lehmann and Nisan [25] can be implemented by a simple item-price descending auction (see the full paper for details [9]).",
                "This algorithm guarantees at least half of the optimal efficiency for submodular valuations.",
                "However, we are not familiar with any ascending auction that guarantees a similar fraction of the efficiency.",
                "This raises a more general question: can ascending auctions solve any combinatorialauction problem that is solvable using a descending auction (and vice versa)?",
                "We give negative answers to these questions.",
                "The idea behind the proofs is that the information that the auctioneer can get for free at the beginning of each type of auction is different.23 and non-deterministic iterative auctions: our proof shows that a non-deterministic iterative auction can elicit the kterm XOR valuations with a polynomial number of demand queries, and [7] show that this elicitation must take an exponential number of demand queries. 23 In ascending auctions, the auctioneer can reveal the most valuable bundle (besides M) before she starts raising the prices, thus she can use this information for adaptively choose the subsequent queries.",
                "In descending auctions, one can easily find the bundle with the highest average per-item price, keeping all other bundles with non-positive utilities, and use this information in the adaptive price change.",
                "Proposition 5.7.",
                "There are classes that cannot be elicited (fully elicited) by ascending item-price auctions, but can be elicited (resp. fully elicited) with a descending item-price auction.",
                "Proposition 5.8.",
                "There are classes that cannot be elicited (fully elicited) by item-price descending auctions, but can be elicited (resp. fully elicited) by item-price ascending auctions.",
                "Deterministic vs. Non-Deterministic Auctions: Nondeterministic ascending auctions can be viewed as auctions where some benevolent teacher that has complete information guides the auctioneer on how she should raise the prices.",
                "That is, preference elicitation can be done by a non-deterministic ascending auction, if there is some ascending trajectory that elicits enough information for determining the <br>optimal allocation</br> (and verifying that it is indeed optimal).",
                "We show that non-deterministic ascending auctions are more powerful than deterministic ascending auctions: Proposition 5.9.",
                "Some classes can be elicited (fully elicited) by an item-price non-deterministic ascending auction, but cannot be elicited (resp. fully elicited) by item-price deterministic ascending auctions.",
                "Anonymous vs. Non-Anonymous Auctions: As will be shown in Section 6, the power of anonymous and nonanonymous bundle-price ascending auctions differs significantly.",
                "Here, we show that a difference also exists for itemprice ascending auctions.",
                "Proposition 5.10.",
                "Some classes cannot be elicited by anonymous item-price ascending auctions, but can be elicited by a non-anonymous item-price ascending auction.",
                "Sequential vs.",
                "Simultaneous Auctions: A non-anonymous auction is called simultaneous if at each stage, the price of some item is raised by for every bidder.",
                "The auctioneer can use the information gathered until each stage, in all the personalized trajectories, to determine the next queries.",
                "A non-anonymous auction is called sequential if the auctioneer performs an auction for each bidder separately, in sequential order.",
                "The auctioneer can determine the next query based on the information gathered in the trajectories completed so far and on the history of the current trajectory.",
                "Proposition 5.11.",
                "There are classes that cannot be elicited by simultaneous non-anonymous item-price ascending auctions, but can be elicited by a sequential non-anonymous item-price ascending auction.",
                "Adaptive vs.",
                "Oblivious Auctions: If the auctioneer determines the queries regardless of the bidders responses (i.e., the queries are predefined) we say that the auction is oblivious.",
                "Otherwise, the auction is adaptive.",
                "We prove that an adaptive behaviour of the auctioneer may be beneficial.",
                "Proposition 5.12.",
                "There are classes that cannot be elicited (fully elicited) using oblivious item-price ascending auctions, but can be elicited (resp. fully elicited) by an adaptive item-price ascending auction. 40 5.5 Preference Elicitation vs. Full Elicitation Preference elicitation and full elicitation are closely related problems.",
                "If full elicitation is easy (e.g., in polynomial time) then clearly elicitation is also easy (by a nonanonymous auction, simply by learning all the valuations separately24 ).",
                "On the other hand, there are examples where preference elicitation is considered easy but learning is hard (typically, elicitation requires smaller amount of information; some examples can be found in [7]).",
                "The tatonnement algorithms by [22, 12, 16] end up with the <br>optimal allocation</br> for substitutes valuations.25 We prove that we cannot fully elicit substitutes valuations (or even their sub-class of OXS valuations defined in [25]), even for a single bidder, by an item-price ascending auction (although the <br>optimal allocation</br> can be found by an ascending auction for any number of bidders!).",
                "Theorem 5.13.",
                "Substitute valuations cannot be fully elicited by ascending item-price auctions.",
                "Moreover, they cannot be fully elicited by any m 2 ascending trajectories (m > 3).",
                "Whether substitutes valuations have a compact representation (i.e., polynomial in the number of goods) is an important open question.",
                "As a step in this direction, we show that its sub-class of OXS valuations does have a compact representation: every OXS valuation can be represented by at most m2 values.26 Lemma 5.14.",
                "Any OXS valuation can be represented by no more than m2 values. 6.",
                "BUNDLE-PRICE ASCENDING AUCTIONS All the ascending auctions in the literature that are proved to find the <br>optimal allocation</br> for unrestricted valuations are non-anonymous bundle-price auctions (iBundle(3) by Parkes and Ungar [37] and the Proxy Auction by Ausubel and Milgrom [3]).",
                "Yet, several anonymous ascending auctions have been suggested (e.g., AkBA [42], [21] and iBundle(2) [37]).",
                "In this section, we prove that anonymous bundle-price ascending auctions achieve poor results in the worst-case.",
                "We also show that the family of non-anonymous bundleprice ascending auctions can run exponentially slower than simple item-price ascending auctions. 6.1 Limitations of Anonymous Bundle-Price Ascending Auctions We present a class of valuations that cannot be elicited by anonymous bundle-price ascending auctions.",
                "These valuations are described in Figure 7.",
                "The basic idea: for determining some unknown value of one bidder we must raise 24 Note that an anonymous ascending auction cannot necessarily elicit a class that can be fully elicited by an ascending auction. 25 Substitute valuations are defined, e.g., in [16].",
                "Roughly speaking, a bidder with a substitute valuation will continue demand a certain item after the price of some other items was increased.",
                "For completeness, we present in the full paper [9] a proof for the efficiency of such auctions for substitutes valuations. 26 A unit-demand valuation is an XOR valuation in which all the atomic bundles are singletons.",
                "OXS valuations can be interpreted as an aggregation (OR) of any number of unit-demand bidders.",
                "Bid. 1 v1(ac) = 2 v1(bd) = 2 v1(cd) = α ∈ (0, 1) Bid. 2 v2(ab) = 2 v2(cd) = 2 v2(bd) = β ∈ (0, 1) Figure 7: Anonymous ascending bundle-price auctions cannot determine the <br>optimal allocation</br> for this class of valuations. a price of a bundle that should be demanded by the other bidder in the future.",
                "Theorem 6.1.",
                "Some classes of valuations cannot be elicited by anonymous bundle-price ascending auctions.",
                "Proof.",
                "Consider a pair of XOR valuations as described in Figure 7.",
                "For finding the <br>optimal allocation</br> we must know which value is greater between α and β.27 However, we cannot learn the value of both α and β by a single ascending trajectory: assume w.l.o.g. that bidder 1 demands cd before bidder 2 demands bd (no information will be elicited if none of these happens).",
                "In this case, the price for bd must be greater than 1 (otherwise, bidder 1 prefers bd to cd).",
                "Thus, bidder 2 will never demand the bundle bd, and no information will be elicited about β.",
                "The valuations described in the proof of Theorem 6.1 can be easily elicited by a non-anonymous item-price ascending auction.",
                "On the other hand, the valuations in Figure 6 can be easily elicited by an anonymous bundle-price ascending auction.",
                "We conclude that the power of these two families of ascending auctions is incomparable.",
                "We strengthen the impossibility result above by showing that anonymous bundle-price auctions cannot even achieve better than a min{O(n), O( √ m)}-approximation for the social welfare.",
                "This approximation ratio can be achieved with polynomial communication, and specifically with a polynomial number of item-price demand queries.28 Theorem 6.2.",
                "An anonymous bundle-price ascending auction cannot guarantee better than a min{ n 2 , √ m 2 } approximation for the optimal welfare.",
                "Proof. (Sketch) Assume we have n bidders and n2 items for sale, and that n is prime.",
                "We construct n2 distinct bundles with the following properties: for each bidder, we define a partition Si = (Si 1, ..., Si n) of the n2 items to n bundles, such that any two bundles from different partitions intersect.",
                "In the full paper, part II [9] we show an explicit construction using the properties of linear functions over finite fields.",
                "The rest of the proof is independent of the specific construction.",
                "Using these n2 bundles we construct a hard-to-elicit class.",
                "Every bidder has an atomic bid, in his XOR valuation, for each of these n2 bundles.",
                "A bidder i has a value of 2 for any bundle Si j in his partition.",
                "For all bundles in the other partitions, he has a value of either 0 or of 1 − δ, and these values are unknown to the auctioneer.",
                "Since every pair of bundles from different partitions intersect, only one bidder can receive a bundle with a value of 2. 27 If α > β, the <br>optimal allocation</br> will allocate cd to bidder 1 and ab to bidder 2.",
                "Otherwise, we give bd to bidder 2 and ac to bidder 1.",
                "Note that both bidders cannot gain a value of 2 in the same allocation, due to the intersections of the high-valued bundles. 28 Note that bundle-price queries may use exponential communication, thus the lower bound of [32] does not hold. 41 Non-anonymous Bundle-Price Economically-Efficient Ascending Auctions: Initialization: All prices are initialized to zero (non-anonymous bundle prices).",
                "Repeat: - Each bidder submits a bundle that maximizes his utility under his current personalized prices. - The auctioneer calculates a provisional allocation that maximizes his revenue under the current prices. - The prices of bundles that were demanded by losing bidders are increased by .",
                "Finally: Terminate when the provisional allocation assigns to each bidder the bundle he demanded.",
                "Figure 8: Auctions from this family (denoted by NBEA auctions) are known to achieve the optimal welfare.",
                "No bidder will demand a low-valued bundle, as long as the price of one of his high-valued bundles is below 1 (and thus gain him a utility greater than 1).",
                "Therefore, for eliciting any information about the low-valued bundles, the auctioneer should first arbitrarily choose a bidder (w.l.o.g bidder 1) and raise the prices of all the bundles (S1 1 , ..., S1 n) to be greater than 1.",
                "Since the prices cannot decrease, the other bidders will clearly never demand these bundles in future stages.",
                "An adversary may choose the values such that the low values of all the bidders for the bundles not in bidder 1s partition are zero (i.e., vi(S1 j ) = 0 for every i = 1 and every j), however, allocating each bidder a different bundle from bidder 1s partition, might achieve a welfare of n+1−(n−1)δ (bidder 1s valuation is 2, and 1 − δ for all other bidders); If these bundles were wrongly allocated, only a welfare of 2 might be achieved (2 for bidder 1s high-valued bundle, 0 for all other bidders).",
                "At this point, the auctioneer cannot have any information about the identity of the bundles with the non-zero values.",
                "Therefore, an adversary can choose the values of the bundles received by bidders 2, ..., n in the final allocation to be zero.",
                "We conclude that anonymous bundleprice auctions cannot guarantee a welfare greater than 2 for this class, where the optimal welfare can be arbitrarily close to n + 1. 6.2 Bundle Prices vs.",
                "Item Prices The core of the auctions in [37, 3] is the scheme described in Figure 8 (in the spirit of [35]) for auctions with nonanonymous bundle prices.",
                "Auctions from this scheme end up with the <br>optimal allocation</br> for any class of valuations.",
                "We denote this family of ascending auctions as NBEA auctions29 .",
                "NBEA auctions can elicit k-term XOR valuations by a polynomial (in k) number of steps , although the elicitation of such valuations may require an exponential number of item-price queries ([7]), and item-price ascending auctions cannot do it at all (Theorem 5.4).",
                "Nevertheless, we show that NBEA auctions (and in particular, iBundle(3) and the proxy auction) are sometimes inferior to simple item-price demand auctions.",
                "This may justify the use of hybrid auctions that use both linear and non-linear prices (e.g., the clock-proxy auction [10]).",
                "We show that auctions from this 29 Non-anonymous Bundle-price economically Efficient Ascending auctions.",
                "For completeness, we give in the full paper [9] a simple proof for the efficiency (up to an ) of auctions of this scheme . family may use an exponential number of queries even for determining the <br>optimal allocation</br> among two bidders with additive valuations30 , where such valuations can be elicited by a simple item-price ascending auction.",
                "We actually prove this property for a wider class of auctions we call conservative auctions.",
                "We also observe that in conservative auctions, allowing the bidders to submit all the bundles in their demand sets ensures that the auction runs a polynomial number of steps - if L is not too high (but with exponential communication, of course).",
                "An ascending auction is called conservative if it is nonanonymous, uses bundle prices initialized to zero and at every stage the auctioneer can only raise prices of bundles demanded by the bidders until this stage.",
                "In addition, each bidder can only receive bundles he demanded during the auction.",
                "Note that NBEA auctions are by definition conservative.",
                "Proposition 6.3.",
                "If every bidder demands a single bundle in each step of the auction, conservative auctions may run for an exponential number of steps even for additive valuations.",
                "If the bidders are allowed to submit all the bundles in their demand sets in each step, then conservative auctions can run in a polynomial number of steps for any profile of valuations, as long as the maximal valuation L is polynomial in m, n and 1 δ .",
                "Acknowledgments: The authors thank Moshe Babaioff, Shahar Dobzinski, Ron Lavi, Daniel Lehmann, Ahuva Mualem, David Parkes, Michael Schapira and Ilya Segal for helpful discussions.",
                "Supported by grants from the Israeli Academy of Sciences and the USAIsrael Binational Science Foundation. 7.",
                "REFERENCES [1] amazon.",
                "Web Page: http://www.amazon.com. [2] ebay.",
                "Web Page: http://www.ebay.com. [3] L. M. Ausubel and P. R. Milgrom.",
                "Ascending auctions with package bidding.",
                "Frontiers of Theoretical Economics, 1:1-42, 2002. [4] Lawrence Ausubel.",
                "An efficient dynamic auction for heterogeneous commodities, 2000.",
                "Working paper, University of Maryland. [5] Yair Bartal, Rica Gonen, and Noam Nisan.",
                "Incentive compatible multi unit combinatorial auctions.",
                "In TARK 03, 2003. [6] Alejandro Bertelsen.",
                "Substitutes valuations and m -concavity.",
                "M.Sc.",
                "Thesis, The Hebrew University of Jerusalem, 2005. [7] Avrim Blum, Jeffrey C. Jackson, Tuomas Sandholm, and Martin A. Zinkevich.",
                "Preference elicitation and query learning.",
                "Journal of Machine Learning Research, 5:649-667, 2004. [8] Liad Blumrosen and Noam Nisan.",
                "On the computational power of iterative auctions I: demand queries.",
                "Working paper, The Hebrew University of 30 Valuations are called additive if for any disjoint bundles A and B, v(A ∪ B) = v(A) + v(B).",
                "Additive valuations are both sub-additive and super-additive and are determined by the m values assigned for the singletons. 42 Jerusalem.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [9] Liad Blumrosen and Noam Nisan.",
                "On the computational power of iterative auctions II: ascending auctions.",
                "Working paper, The Hebrew University of Jerusalem.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [10] P. Cramton, L.M.",
                "Ausubel, and P.R.",
                "Milgrom.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 5.",
                "The Clock-Proxy Auction: A Practical Combinatorial Auction Design.",
                "MIT Press.",
                "Forthcoming, 2005. [11] P. Cramton, Y. Shoham, and R. Steinberg (Editors).",
                "Combinatorial Auctions.",
                "MIT Press.",
                "Forthcoming, 2005. [12] G. Demange, D. Gale, and M. Sotomayor.",
                "Multi-item auctions.",
                "Journal of Political Economy, 94:863-872, 1986. [13] Shahar Dobzinski, Noam Nisan, and Michael Schapira.",
                "Approximation algorithms for cas with complement-free bidders.",
                "In The 37th ACM symposium on theory of computing (STOC)., 2005. [14] Shahar Dobzinski and Michael Schapira.",
                "Optimal upper and lower approximation bounds for k-duplicates combinatorial auctions.",
                "Working paper, the Hebrew University. [15] Combinatorial bidding conference.",
                "Web Page: http://wireless.fcc.gov/auctions/conferences/combin2003. [16] Faruk Gul and Ennio Stacchetti.",
                "Walrasian equilibrium with gross substitutes.",
                "Journal of Economic Theory, 87:95 - 124, 1999. [17] Faruk Gul and Ennio Stacchetti.",
                "The english auction with differentiated commodities.",
                "Journal of Economic Theory, 92(3):66 - 95, 2000. [18] J. Hastad.",
                "Almost optimal lower bounds for small depth circuits.",
                "In 18th STOC, pages 6-20, 1986. [19] Ron Holzman, Noa Kfir-Dahav, Dov Monderer, and Moshe Tennenholtz.",
                "Bundling equilibrium in combinatrial auctions.",
                "Games and Economic Behavior, 47:104-123, 2004. [20] H. Karloff.",
                "Linear Programming.",
                "Birkh¨auser Verlag, 1991. [21] Frank Kelly and Richard Steinberg.",
                "A combinatorial auction with multiple winners for universal service.",
                "Management Science, 46:586-596, 2000. [22] A.S. Kelso and V.P.",
                "Crawford.",
                "Job matching, coalition formation, and gross substitute.",
                "Econometrica, 50:1483-1504, 1982. [23] Subhash Khot, Richard J. Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Inapproximability results for combinatorial auctions with submodular utility functions.",
                "In Working paper., 2004. [24] Sebastien Lahaie and David C. Parkes.",
                "Applying learning algorithms to preference elicitation.",
                "In EC 04. [25] Benny Lehmann, Daniel Lehmann, and Noam Nisan.",
                "Combinatorial auctions with decreasing marginal utilities.",
                "In ACM conference on electronic commerce.",
                "To appear, Games and Economic Behaviour., 2001. [26] D. Lehmann, L. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "JACM, 49(5):577-602, Sept. 2002. [27] A. Mas-Collel, W. Whinston, and J.",
                "Green.",
                "Microeconomic Theory.",
                "Oxford university press, 1995. [28] Debasis Mishra and David Parkes.",
                "Ascending price vickrey auctions using primal-dual algorithms., 2004.",
                "Working paper, Harvard University. [29] Noam Nisan.",
                "The communication complexity of approximate set packing and covering.",
                "In ICALP 2002. [30] Noam Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In ACM Conference on Electronic Commerce, 2000. [31] Noam Nisan.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 1.",
                "Bidding Languages.",
                "MIT Press.",
                "Forthcoming, 2005. [32] Noam Nisan and Ilya Segal.",
                "The communication requirements of efficient allocations and supporting prices, 2003.",
                "Working paper.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html Forthcoming in the Journal of Economic Theory. [33] Noam Nisan and Ilya Segal.",
                "Exponential communication inefficiency of demand queries, 2004.",
                "Working paper.",
                "Available from http://www.stanford.edu/ isegal/queries1.pdf. [34] D. C. Parkes and L. H. Ungar.",
                "An ascending-price generalized vickrey auction.",
                "Tech.",
                "Rep., Harvard University, 2002. [35] David Parkes.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 3.",
                "Iterative Combinatorial Auctions.",
                "MIT Press.",
                "Forthcoming, 2005. [36] David C. Parkes.",
                "Iterative combinatorial auctions: Achieving economic and computational efficiency.",
                "Ph.D. Thesis, Department of Computer and Information Science, University of Pennsylvania., 2001. [37] David C. Parkes and Lyle H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In AAAI/IAAI, pages 74-81, 2000. [38] Ariel Rubinstein.",
                "Why are certain properties of binary relations relatively more common in natural languages.",
                "Econometrica, 64:343-356, 1996. [39] Tuomas Sandholm.",
                "Algorithm for optimal winner determination in combinatorial auctions.",
                "In Artificial Intelligence, volume 135, pages 1-54, 2002. [40] P. Santi, V. Conitzer, and T. Sandholm.",
                "Towards a characterization of polynomial preference elicitation with value queries in combinatorial auctions.",
                "In The 17th Annual Conference on Learning Theory, 2004. [41] Ilya Segal.",
                "The communication requirements of social choice rules and supporting budget sets, 2004.",
                "Working paper.",
                "Available from http://www.stanford.edu/ isegal/rules.pdf. [42] P.R.",
                "Wurman and M.P.",
                "Wellman.",
                "Akba: A progressive, anonymous-price combinatorial auction.",
                "In Second ACM Conference on Electronic Commerce, 2000. [43] Martin A. Zinkevich, Avrim Blum, and Tuomas Sandholm.",
                "On polynomial-time preference elicitation with value queries.",
                "In ACM Conference on Electronic Commerce, 2003. 43"
            ],
            "original_annotated_samples": [
                "We try to answer the following questions: (i) Which models of ascending auctions can find the <br>optimal allocation</br>, and for which classes of valuations? (ii) In cases where the <br>optimal allocation</br> cannot be determined by ascending auctions, how well can such auctions approximate the social welfare? (iii) How do the different models for ascending auctions compare?",
                "For our purposes, two families of these auctions serve as the main motivating starting points: the first is the ascending item-price auctions of [22, 17] that with computational efficiency find an <br>optimal allocation</br> among (gross) substitutes valuations, and the second is the ascending bundleprice auctions of [37, 3] that find an <br>optimal allocation</br> among general valuations - but not necessarily with computational efficiency.",
                "The main lower bound in this area, due to [32], states that indeed, due to inherent communication requirements, it is not possible for any iterative auction to find the <br>optimal allocation</br> among general valuations with sub-exponentially many queries.",
                "A similar exponential lower bound was shown in [32] also for even approximating the <br>optimal allocation</br> to within a factor of m1/2− .",
                "In contrast, [7] show that there exist valuations that are XORs of k = √ m bundles such that any item-price auction that finds an <br>optimal allocation</br> between them requires exponentially many queries."
            ],
            "translated_annotated_samples": [
                "Intentamos responder a las siguientes preguntas: (i) ¿Qué modelos de subastas ascendentes pueden encontrar la <br>asignación óptima</br>, y para qué clases de valoraciones? (ii) En casos donde la <br>asignación óptima</br> no puede ser determinada por subastas ascendentes, ¿qué tan bien pueden estas subastas aproximar el bienestar social? (iii) ¿Cómo se comparan los diferentes modelos de subastas ascendentes?",
                "Para nuestros propósitos, dos familias de estas subastas sirven como los principales puntos de partida motivadores: la primera son las subastas de precio de artículo ascendente de [22, 17] que con eficiencia computacional encuentran una <br>asignación óptima</br> entre valoraciones de sustitutos (brutos), y la segunda son las subastas de precio de paquete ascendente de [37, 3] que encuentran una <br>asignación óptima</br> entre valoraciones generales, pero no necesariamente con eficiencia computacional.",
                "El límite inferior principal en esta área, debido a [32], establece que, de hecho, debido a los requisitos de comunicación inherentes, no es posible que ninguna subasta iterativa encuentre la <br>asignación óptima</br> entre valoraciones generales con un número subexponencial de consultas.",
                "Un límite inferior exponencial similar fue demostrado en [32] también para aproximar de manera óptima la asignación dentro de un factor de m1/2−.",
                "Por el contrario, [7] muestra que existen valoraciones que son XORs de k = √ m paquetes, de tal manera que cualquier subasta de precio de artículo que encuentre una <br>asignación óptima</br> entre ellos requiere un número exponencial de consultas."
            ],
            "translated_text": "En el Poder Computacional de Subastas Iterativas∗ [Resumen Extendido] Liad Blumrosen Escuela de Ingeniería e Informática Universidad Hebrea de Jerusalén Jerusalén, Israel liad@cs.huji.ac.il Noam Nisan Escuela de Ingeniería e Informática Universidad Hebrea de Jerusalén Jerusalén, Israel noam@cs.huji.ac.il RESUMEN Nos embarcamos en un análisis sistemático del poder y limitaciones de las subastas combinatorias iterativas. La mayoría de las subastas combinatorias iterativas existentes se basan en sugerir precios repetidamente para paquetes de artículos y consultar a los postores sobre su demanda bajo estos precios. Demostramos un gran número de resultados que muestran los límites de lo que se puede lograr mediante subastas de este tipo. Primero nos enfocamos en subastas que utilizan un número polinomial de consultas de demanda, y luego analizamos el poder de diferentes tipos de subastas de precio ascendente. Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía Términos Generales Algoritmos, Economía, Teoría 1. Las subastas combinatorias han recibido recientemente mucha atención. En una subasta combinatoria, un conjunto M de m artículos no idénticos se venden en una sola subasta a n postores competidores. Los postores tienen preferencias con respecto a los lotes de artículos que pueden recibir. Las preferencias del postor i están especificadas por una función de valoración vi: 2M → R+, donde vi(S) denota el valor que el postor i asigna a ganar el conjunto de artículos S. Suponemos disposición libre, es decir, que los vi son monótonos no decrecientes. El objetivo habitual del subastador es optimizar el bienestar social P i vi(Si), donde la asignación S1...Sn debe ser una partición de los artículos. Las aplicaciones incluyen muchos problemas complejos de asignación de recursos y, de hecho, las subastas combinatorias pueden ser vistas como la abstracción común de muchos problemas complejos de asignación de recursos. Las subastas combinatorias enfrentan dificultades económicas y computacionales y son un problema central en la frontera recientemente activa de la teoría económica y la informática. Un libro próximo [11] aborda muchos de los problemas involucrados en el diseño e implementación de subastas combinatorias. El diseño de una subasta combinatoria implica muchas consideraciones. En este artículo nos enfocamos en un solo tema central: la comunicación entre los oferentes y el mecanismo de asignación - la obtención de preferencias. Transferir toda la información sobre las preferencias de los licitadores requiere una cantidad de comunicación inasumible (exponencial en m). Por lo tanto, las subastas de revelación directa en las que los postores simplemente declaran sus preferencias al mecanismo solo son prácticas para tamaños de subasta muy pequeños o para familias muy limitadas de preferencias de postores. Por lo tanto, hemos visto una multitud de subastas iterativas sugeridas en las que el protocolo de subasta interactúa repetidamente con los diferentes postores, con el objetivo de obtener de manera adaptativa suficiente información sobre las preferencias de los postores para poder encontrar una asignación buena (óptima o cercana a óptima). La mayoría de las subastas iterativas sugeridas proceden manteniendo precios temporales para los lotes de artículos y consultando repetidamente a los postores sobre sus preferencias entre los lotes bajo el conjunto actual de precios, y luego actualizando el conjunto de precios de los lotes según las respuestas recibidas (por ejemplo, [22, 12, 17, 37, 3]). Efectivamente, una subasta iterativa de este tipo accede a las preferencias de los postores haciendo repetidamente el siguiente tipo de consulta de demanda a los postores: Consulta al postor i: un vector de precios de paquetes p = {p(S)}S⊆M; Respuesta: un paquete de artículos S ⊆ M que maximiza vi(S) − p(S). Estos tipos de consultas son muy naturales en un entorno económico, ya que capturan las preferencias reveladas de los postores. Algunas subastas, llamadas subastas de precio por artículo o de precio lineal, especifican un precio pi para cada artículo, y el precio de cualquier conjunto dado S siempre es lineal, p(S) = Σ i∈S pi. Otras subastas, llamadas subastas de precio por paquete, permiten especificar precios arbitrarios (no lineales) p(S) para los paquetes. Otra diferenciación importante entre los modelos de subastas iterativas se basa en si utilizan precios anónimos o no anónimos: En algunas subastas, los precios que se presentan a los postores son siempre los mismos (precios anónimos). En otras subastas (no anónimas), diferentes postores pueden enfrentar diferentes vectores de precios (discriminatorios). En las subastas de precio ascendente, obligar a que los precios sean anónimos puede ser una restricción significativa. En este artículo, nos embarcamos en un análisis sistemático del poder computacional de las subastas iterativas basadas en consultas de demanda. No buscamos presentar subastas para uso práctico, sino más bien entender las limitaciones y posibilidades de este tipo de subastas. En la primera parte de este documento, nuestra pregunta principal es ¿qué se puede hacer utilizando un número polinómico de este tipo de consultas? Es decir, polinomial en los parámetros principales del problema: n, m y el número de bits t necesarios para representar un único valor vi(S). Ten en cuenta que desde un punto de vista algorítmico estamos hablando de algoritmos de tiempo sublineal: el tamaño de la entrada aquí es realmente n(2m − 1) números, las descripciones de las funciones de valoración de todos los postores. Hay dos aspectos de eficiencia computacional en estos contextos: el primero es la comunicación con los postores, es decir, la cantidad de consultas realizadas, y el segundo es la usual tratabilidad computacional. Nuestros límites inferiores dependerán solo del número de consultas y se mantendrán independientemente de cualquier suposición computacional como P = NP. Nuestros límites superiores siempre serán computacionalmente eficientes tanto en términos del número de consultas como en términos de computación regular. Como se mencionó, este artículo se centra en el único aspecto de la obtención de preferencias y en sus consecuencias computacionales, sin abordar cuestiones de incentivos. Esto refuerza nuestros límites inferiores, pero significa que los límites superiores también requieren evaluación desde esta perspectiva antes de ser utilizados en cualquier subasta combinatoria real. La segunda parte de este documento estudia el poder de las subastas de precio ascendente. Las subastas ascendentes son subastas iterativas donde los precios publicados no pueden disminuir con el tiempo. En este trabajo, intentamos analizar sistemáticamente qué significan las diferencias entre varios modelos de subastas ascendentes. Intentamos responder a las siguientes preguntas: (i) ¿Qué modelos de subastas ascendentes pueden encontrar la <br>asignación óptima</br>, y para qué clases de valoraciones? (ii) En casos donde la <br>asignación óptima</br> no puede ser determinada por subastas ascendentes, ¿qué tan bien pueden estas subastas aproximar el bienestar social? (iii) ¿Cómo se comparan los diferentes modelos de subastas ascendentes? ¿Son algunos modelos computacionalmente más fuertes que otros? Las subastas ascendentes han sido ampliamente estudiadas en la literatura (ver la encuesta reciente de Parkes [35]). La mayor parte de este trabajo presentó límites superiores, es decir, mecanismos propuestos con precios ascendentes y analizó sus propiedades. Un resultado que se acerca más al nuestro es el de Gul y Stacchetti [17], quienes demostraron que ninguna subasta de precio ascendente de artículo puede siempre determinar los precios VCG, incluso para valoraciones de sustitutos. Nuestro marco es más general que la línea tradicional de investigación que se concentra en la asignación final y observamos, sin embargo, que alguna propiedad de incentivo débil viene de forma gratuita en las subastas de consulta de demanda, ya que los jugadores miopes responderán todas las consultas de demanda de manera veraz. También observamos que en algunos casos (¡pero no siempre!) los problemas de incentivos pueden ser manejados de forma ortogonal a los problemas de obtención de preferencias, por ejemplo, utilizando precios de Vickrey-Clarke-Groves (VCG) (por ejemplo, [4, 34]). Además, discutimos este resultado en la Sección 5.3. Subastas iterativas Subastas de demanda Subastas de precio de artículo Subastas de precio anónimo Subastas ascendentes 1 2 3 4 5 6 97 8 10 Figura 1: El diagrama clasifica las siguientes subastas según sus propiedades: (1) La adaptación [12] para la subasta de Kelso & Crawford [22]. (2) La Subasta de Proxy [3] de Ausubel & Milgrom. (3) iBundle(3) de Parkes & Ungar [34]. (4) iBundle(2) de Parkes & Ungar [37]. (5) Nuestra adaptación descendente para la aproximación de 2 para valoraciones submodulares por [25] (ver Subsección 5.4). (6) La subasta de Ausubel [4] para valoraciones de sustitutos. (7) La adaptación de Nisan & Segal [32] de la aproximación O( √ m) por [26]. (8) La subasta de artículo duplicado por [5]. (9) Subasta para fórmulas de Leer-Una-Vez por [43]. (10) La Subasta AkBA por Wurman & Wellman [42]. pagos y en particular, en alcanzar equilibrios walrasianos o equilibrios competitivos. Se sabe que existe un equilibrio walrasiano en el caso de las valoraciones de sustitutos, y se sabe que es imposible para cualquier clase más amplia de valoraciones [16]. Esto no descarta otras asignaciones mediante subastas ascendentes: en este documento consideramos las subastas como un proceso computacional donde el resultado, tanto la asignación como los pagos, pueden determinarse según todos los datos recopilados a lo largo de la subasta; Este marco general refuerza nuestros resultados negativos. Encontramos el estudio de las subastas ascendentes atractivo por diversas razones. Primero, las subastas ascendentes son ampliamente utilizadas en muchos contextos de la vida real, desde las subastas de espectro de la FCC hasta casi cualquier sitio web de comercio electrónico (por ejemplo, [2, 1]). De hecho, esta es quizás la forma más directa de vender artículos: preguntar a los postores qué les gustaría comprar a ciertos precios, y aumentar los precios de los productos con alta demanda. Las subastas ascendentes también se consideran más intuitivas para muchos postores, y se cree que aumentan la confianza de los postores en el subastador, ya que ven el resultado que emerge gradualmente de las respuestas de los postores. Las subastas ascendentes también tienen otras propiedades económicas deseadas, por ejemplo, implican una revelación de información menor (considere, por ejemplo, las subastas inglesas frente a las subastas de segundo precio sellado). 1.1 Trabajo Existente Muchos mecanismos de subasta combinatoria iterativos dependen de consultas de demanda (ver la encuesta en [35]). La Figura 1 muestra un equilibrio walrasiano como un vector de precios de los artículos para los cuales todos los artículos se venden cuando cada postor recibe un conjunto en su conjunto de demanda. En algunos diseños de subasta recientes (por ejemplo, [4, 28]), los pagos no son necesariamente los precios finales de las subastas. Familia de valoración Límite superior Referencia Límite inferior Referencia General min(n, O( √ m)) [26], Sección 4.2 min(n, m1/2− ) [32] Sustitutos 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subaditiva O(logm) [13] 2 [13] k-duplicados O(m1/k+1 ) [14] O(m1/k+1 ) [14] Adquisiciones ln m [32] (log m)/2 [29, 32] Figura 2: Los mejores factores de aproximación actualmente alcanzables por subastas combinatorias computacionalmente eficientes, para varias clases de valoraciones. Todos los límites inferiores en la tabla se aplican a todas las subastas iterativas (excepto la marcada con *); todos los límites superiores en la tabla se logran con consultas de demanda de precio de artículo. Categoriza las clases básicas de subastas implicadas por combinaciones de las propiedades anteriores y clasifica algunas de las subastas propuestas en la literatura de acuerdo con esta clasificación. Para nuestros propósitos, dos familias de estas subastas sirven como los principales puntos de partida motivadores: la primera son las subastas de precio de artículo ascendente de [22, 17] que con eficiencia computacional encuentran una <br>asignación óptima</br> entre valoraciones de sustitutos (brutos), y la segunda son las subastas de precio de paquete ascendente de [37, 3] que encuentran una <br>asignación óptima</br> entre valoraciones generales, pero no necesariamente con eficiencia computacional. El límite inferior principal en esta área, debido a [32], establece que, de hecho, debido a los requisitos de comunicación inherentes, no es posible que ninguna subasta iterativa encuentre la <br>asignación óptima</br> entre valoraciones generales con un número subexponencial de consultas. Un límite inferior exponencial similar fue demostrado en [32] también para aproximar de manera óptima la asignación dentro de un factor de m1/2−. Se conocen varios límites inferiores y superiores para la aproximación de algunas clases naturales de valoraciones, los cuales se resumen en la Figura 2. En [32], también se muestra la universalidad de las consultas de demanda: cualquier protocolo de comunicación no determinista para encontrar una asignación que optimice el bienestar social puede convertirse en uno que solo utilice consultas de demanda (con precios de paquetes). En [41] esto también se generalizó a protocolos no deterministas para encontrar asignaciones que satisfacen otros tipos naturales de requisitos económicos (por ejemplo, eficiencia social aproximada, ausencia de envidia). Sin embargo, en [33] se demostró que esta completitud de las consultas de demanda solo se cumple en el entorno no determinista, mientras que en el entorno determinista habitual, las consultas de demanda (incluso con precios de paquetes) pueden ser exponencialmente más débiles que la comunicación general. Las subastas de precio por paquete son una generalización de las subastas de precio por artículo (más naturales e intuitivas). Se sabe que las subastas de precio de artículo pueden ser exponencialmente más débiles: un buen ejemplo es el caso de valoraciones que son un XOR de k paquetes, donde k es pequeño (digamos, polinómico). Lahaie y Parkes [24] muestran una subasta de precio de paquete económicamente eficiente que utiliza un número polinómico de consultas siempre que k sea polinómico. Por el contrario, [7] muestra que existen valoraciones que son XORs de k = √ m paquetes, de tal manera que cualquier subasta de precio de artículo que encuentre una <br>asignación óptima</br> entre ellos requiere un número exponencial de consultas. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "preference elicitation": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "On the Computational Power of Iterative Auctions∗ [Extended Abstract] Liad Blumrosen School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel liad@cs.huji.ac.il Noam Nisan School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel noam@cs.huji.ac.il ABSTRACT We embark on a systematic analysis of the power and limitations of iterative combinatorial auctions.",
                "Most existing iterative combinatorial auctions are based on repeatedly suggesting prices for bundles of items, and querying the bidders for their demand under these prices.",
                "We prove a large number of results showing the boundaries of what can be achieved by auctions of this kind.",
                "We first focus on auctions that use a polynomial number of demand queries, and then we analyze the power of different kinds of ascending-price auctions.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION Combinatorial auctions have recently received a lot of attention.",
                "In a combinatorial auction, a set M of m nonidentical items are sold in a single auction to n competing bidders.",
                "The bidders have preferences regarding the bundles of items that they may receive.",
                "The preferences of bidder i are specified by a valuation function vi : 2M → R+ , where vi(S) denotes the value that bidder i attaches to winning the bundle of items S. We assume free disposal, i.e., that the vis are monotone non-decreasing.",
                "The usual goal of the auctioneer is to optimize the social welfare P i vi(Si), where the allocation S1...Sn must be a partition of the items.",
                "Applications include many complex resource allocation problems and, in fact, combinatorial auctions may be viewed as the common abstraction of many complex resource allocation problems.",
                "Combinatorial auctions face both economic and computational difficulties and are a central problem in the recently active border of economic theory and computer science.",
                "A forthcoming book [11] addresses many of the issues involved in the design and implementation of combinatorial auctions.",
                "The design of a combinatorial auction involves many considerations.",
                "In this paper we focus on just one central issue: the communication between bidders and the allocation mechanism - <br>preference elicitation</br>.",
                "Transferring all information about bidders preferences requires an infeasible (exponential in m) amount of communication.",
                "Thus, direct revelation auctions in which bidders simply declare their preferences to the mechanism are only practical for very small auction sizes or for very limited families of bidder preferences.",
                "We have therefore seen a multitude of suggested iterative auctions in which the auction protocol repeatedly interacts with the different bidders, aiming to adaptively elicit enough information about the bidders preferences as to be able to find a good (optimal or close to optimal) allocation.",
                "Most of the suggested iterative auctions proceed by maintaining temporary prices for the bundles of items and repeatedly querying the bidders as to their preferences between the bundles under the current set of prices, and then updating the set of bundle prices according to the replies received (e.g., [22, 12, 17, 37, 3]).",
                "Effectively, such an iterative auction accesses the bidders preferences by repeatedly making the following type of demand query to bidders: Query to bidder i: a vector of bundle prices p = {p(S)}S⊆M ; Answer: a bundle of items S ⊆ M that maximizes vi(S) − p(S)..",
                "These types of queries are very natural in an economic setting as they capture the revealed preferences of the bidders.",
                "Some auctions, called item-price or linear-price auctions, specify a price pi for each item, and the price of any given bundle S is always linear, p(S) = P i∈S pi.",
                "Other auctions, called bundle-price auctions, allow specifying arbitrary (non-linear) prices p(S) for bundles.",
                "Another important differentiation between models of iterative auctions is 29 based on whether they use anonymous or non-anonymous prices: In some auctions the prices that are presented to the bidders are always the same (anonymous prices).",
                "In other auctions (non-anonymous), different bidders may face different (discriminatory) vectors of prices.",
                "In ascending-price auctions, forcing prices to be anonymous may be a significant restriction.",
                "In this paper, we embark on a systematic analysis of the computational power of iterative auctions that are based on demand queries.",
                "We do not aim to present auctions for practical use but rather to understand the limitations and possibilities of these kinds of auctions.",
                "In the first part of this paper, our main question is what can be done using a polynomial number of these types of queries?",
                "That is, polynomial in the main parameters of the problem: n, m and the number of bits t needed for representing a single value vi(S).",
                "Note that from an algorithmic point of view we are talking about sub-linear time algorithms: the input size here is really n(2m − 1) numbers - the descriptions of the valuation functions of all bidders.",
                "There are two aspects to computational efficiency in these settings: the first is the communication with the bidders, i.e., the number of queries made, and the second is the usual computational tractability.",
                "Our lower bounds will depend only on the number of queriesand hold independently of any computational assumptions like P = NP.",
                "Our upper bounds will always be computationally efficient both in terms of the number of queries and in terms of regular computation.",
                "As mentioned, this paper concentrates on the single aspect of <br>preference elicitation</br> and on its computational consequences and does not address issues of incentives.",
                "This strengthens our lower bounds, but means that the upper bounds require evaluation from this perspective also before being used in any real combinatorial auction.1 The second part of this paper studies the power of ascending -price auctions.",
                "Ascending auctions are iterative auctions where the published prices cannot decrease in time.",
                "In this work, we try to systematically analyze what do the differences between various models of ascending auctions mean.",
                "We try to answer the following questions: (i) Which models of ascending auctions can find the optimal allocation, and for which classes of valuations? (ii) In cases where the optimal allocation cannot be determined by ascending auctions, how well can such auctions approximate the social welfare? (iii) How do the different models for ascending auctions compare?",
                "Are some models computationally stronger than others?",
                "Ascending auctions have been extensively studied in the literature (see the recent survey by Parkes [35]).",
                "Most of this work presented upper bounds, i.e., proposed mechanisms with ascending prices and analyzed their properties.",
                "A result which is closer in spirit to ours, is by Gul and Stacchetti [17], who showed that no item-price ascending auction can always determine the VCG prices, even for substitutes valuations.2 Our framework is more general than the traditional line of research that concentrates on the final allocation and 1 We do observe however that some weak incentive property comes for free in demand-query auctions since myopic players will answer all demand queries truthfully.",
                "We also note that in some cases (but not always!) the incentives issues can be handled orthogonally to the <br>preference elicitation</br> issues, e.g., by using Vickrey-Clarke-Groves (VCG) prices (e.g., [4, 34]). 2 We further discuss this result in Section 5.3.",
                "Iterative auctions Demand auctions Item-price auctions Anonymous price auctions Ascending auctions 1 2 3 4 5 6 97 8 10 Figure 1: The diagram classifies the following auctions according to their properties: (1) The adaptation [12] for Kelso & Crawfords [22] auction. (2) The Proxy Auction [3] by Ausubel & Milgrom. (3) iBundle(3) by Parkes & Ungar [34]. (4) iBundle(2) by Parkes & Ungar [37]. (5) Our descending adaptation for the 2-approximation for submodular valuations by [25] (see Subsection 5.4). (6) Ausubels [4] auction for substitutes valuations. (7) The adaptation by Nisan & Segal [32] of the O( √ m) approximation by [26]. (8) The duplicate-item auction by [5]. (9) Auction for Read-Once formulae by [43]. (10) The AkBA Auction by Wurman & Wellman [42]. payments and in particular, on reaching Walrasian equilibria or Competitive equilibria.",
                "A Walrasian equilibrium3 is known to exist in the case of Substitutes valuations, and is known to be impossible for any wider class of valuations [16].",
                "This does not rule out other allocations by ascending auctions: in this paper we view the auctions as a computational process where the outcome - both the allocation and the payments - can be determined according to all the data elicited throughout the auction; This general framework strengthens our negative results.4 We find the study of ascending auctions appealing for various reasons.",
                "First, ascending auctions are widely used in many real-life settings from the FCC spectrum auctions [15] to almost any e-commerce website (e.g., [2, 1]).",
                "Actually, this is maybe the most straightforward way to sell items: ask the bidders what would they like to buy under certain prices, and increase the prices of over-demanded goods.",
                "Ascending auctions are also considered more intuitive for many bidders, and are believed to increase the trust of the bidders in the auctioneer, as they see the result gradually emerging from the bidders responses.",
                "Ascending auctions also have other desired economic properties, e.g., they incur smaller information revelation (consider, for example, English auctions vs. second-price sealed bid auctions). 1.1 Extant Work Many iterative combinatorial auction mechanisms rely on demand queries (see the survey in [35]).",
                "Figure 1 summa3 A Walrasian equilibrium is vector of item prices for which all the items are sold when each bidder receives a bundle in his demand set. 4 In few recent auction designs (e.g., [4, 28]) the payments are not necessarily the final prices of the auctions. 30 Valuation family Upper bound Reference Lower bound Reference General min(n, O( √ m)) [26], Section 4.2 min(n, m1/2− ) [32] Substitutes 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subadditive O(logm) [13] 2 [13] k-duplicates O(m1/k+1 ) [14] O(m1/k+1 ) [14] Procurement ln m [32] (log m)/2 [29, 32] Figure 2: The best approximation factors currently achievable by computationally-efficient combinatorial auctions, for several classes of valuations.",
                "All lower bounds in the table apply to all iterative auctions (except the one marked by *); all upper bounds in the table are achieved with item-price demand queries. rizes the basic classes of auctions implied by combinations of the above properties and classifies some of the auctions proposed in the literature according to this classification.",
                "For our purposes, two families of these auctions serve as the main motivating starting points: the first is the ascending item-price auctions of [22, 17] that with computational efficiency find an optimal allocation among (gross) substitutes valuations, and the second is the ascending bundleprice auctions of [37, 3] that find an optimal allocation among general valuations - but not necessarily with computational efficiency.",
                "The main lower bound in this area, due to [32], states that indeed, due to inherent communication requirements, it is not possible for any iterative auction to find the optimal allocation among general valuations with sub-exponentially many queries.",
                "A similar exponential lower bound was shown in [32] also for even approximating the optimal allocation to within a factor of m1/2− .",
                "Several lower bounds and upper bounds for approximation are known for some natural classes of valuations - these are summarized in Figure 2.",
                "In [32], the universal generality of demand queries is also shown: any non-deterministic communication protocol for finding an allocation that optimizes the social welfare can be converted into one that only uses demand queries (with bundle prices).",
                "In [41] this was generalized also to nondeterministic protocols for finding allocations that satisfy other natural types of economic requirements (e.g., approximate social efficiency, envy-freeness).",
                "However, in [33] it was demonstrated that this completeness of demand queries holds only in the nondeterministic setting, while in the usual deterministic setting, demand queries (even with bundle prices) may be exponentially weaker than general communication.",
                "Bundle-price auctions are a generalization of (the more natural and intuitive) item-price auctions.",
                "It is known that indeed item-price auctions may be exponentially weaker: a nice example is the case of valuations that are a XOR of k bundles5 , where k is small (say, polynomial).",
                "Lahaie and Parkes [24] show an economically-efficient bundle-price auction that uses a polynomial number of queries whenever k is polynomial.",
                "In contrast, [7] show that there exist valuations that are XORs of k = √ m bundles such that any item-price auction that finds an optimal allocation between them requires exponentially many queries.",
                "These results are part of a recent line of research ([7, 43, 24, 40]) that study the <br>preference elicitation</br> problem in combinatorial auctions and its relation to the full elicitation problem (i.e., learn5 These are valuations where bidders have values for k specific packages, and the value of each bundle is the maximal value of one of these packages that it contains. ing the exact valuations of the bidders).",
                "These papers adapt methods from machine-learning theory to the combinatorialauction setting.",
                "The <br>preference elicitation</br> problem and the full elicitation problem relate to a well studied problem in microeconomics known as the integrability problem (see, e.g., [27]).",
                "This problem studies if and when one can derive the utility function of a consumer from her demand function.",
                "Paper organization: Due to the relatively large number of results we present, we start with a survey of our new results in Section 2.",
                "After describing our formal model in Section 3, we present our results concerning the power of demand queries in Section 4.",
                "Then, we describe the power of item-price ascending auctions (Section 5) and bundle-price ascending auctions (Section 6).",
                "Readers who are mainly interested in the self-contained discussion of ascending auctions can skip Section 4.",
                "Missing proofs from Section 4 can be found in part I of the full paper ([8]).",
                "Missing proofs from Sections 5 and 6 can be found in part II of the full paper ([9]). 2.",
                "A SURVEY OF OUR RESULTS Our systematic analysis is composed of the combination of a rather large number of results characterizing the power and limitations of various classes of auctions.",
                "In this section, we will present an exposition describing our new results.",
                "We first discuss the power of demand-query iterative auctions, and then we turn our attention to ascending auctions.",
                "Figure 3 summarizes some of our main results. 2.1 Demand Queries Comparison of query types We first ask what other natural types of queries could we imagine iterative auctions using?",
                "Here is a list of such queries that are either natural, have been used in the literature, or that we found useful. 1.",
                "Value query: The auctioneer presents a bundle S, the bidder reports his value v(S) for this bundle. 2.",
                "Marginal-value query: The auctioneer presents a bundle A and an item j, the bidder reports how much he is willing to pay for j, given that he already owns A, i.e., v(j|A) = v(A ∪ {j}) − v(A). 3.",
                "Demand query (with item prices): The auctioneer presents a vector of item prices p1...pm; the bidder reports his demand under these prices, i.e., some set S that maximizes v(S) − P i∈S pi.6 6 A tie breaking rule should be specified.",
                "All of our results 31 Communication Constraint Can find an optimal allocation?",
                "Upper bound for welfare approx.",
                "Lower bound for welfare approx.",
                "Item-Price Demand Queries Yes 1 1 Poly.",
                "Communication No [32] min(n, O(m1/2 )) [26] min(n, m1/2− ) [32] Poly.",
                "Item-Price Demand Queries No [32] min(n, O(m1/2 )) min(n, m1/2− ) [32] Poly.",
                "Value Queries No [32] O( m√ log m ) [19] O( m log m ) Anonymous Item-Price AA No - min(O(n), O(m1/2− )) Non-anonymous Item-Price AA No -Anonymous Bundle-Price AA No - min(O(n), O(m1/2− )) Non-anonymous Bundle-Price AA Yes [37] 1 1 Poly Number of Item-Price AA No min(n, O(m1/2 ))Figure 3: This paper studies the economic efficiency of auctions that follow certain communication constraints.",
                "For each class of auctions, the table shows whether the optimal allocation can be achieved, or else, how well can it be approximated (both upper bounds and lower bounds).",
                "New results are highlighted.",
                "Abbreviations: Poly. (Polynomial number/size), AA (ascending auctions). - means that nothing is currently known except trivial solutions. 4.",
                "Indirect-utility query: The auctioneer presents a set of item prices p1...pm, and the bidder responds with his indirect-utility under these prices, that is, the highest utility he can achieve from a bundle under these prices: maxS⊆M (v(S) − P i∈S pi).7 5.",
                "Relative-demand query: the auctioneer presents a set of non-zero prices p1...pm, and the bidder reports the bundle that maximizes his value per unit of money, i.e., some set that maximizes v(S)P i∈S pi .8 Theorem: Each of these queries can be efficiently (i.e., in time polynomial in n, m, and the number of bits of precision t needed to represent a single value vi(S)) simulated by a sequence of demand queries with item prices.",
                "In particular this shows that demand queries can elicit all information about a valuation by simulating all 2m −1 value queries.",
                "We also observe that value queries and marginalvalue queries can simulate each other in polynomial time and that demand queries and indirect-utility queries can also simulate each other in polynomial time.",
                "We prove that exponentially many value queries may be needed in order to simulate a single demand query.",
                "It is interesting to note that for the restricted class of substitutes valuations, demand queries may be simulated by polynomial number of value queries [6].",
                "Welfare approximation The next question that we ask is how well can a computationally-efficient auction that uses only demand queries approximate the optimal allocation?",
                "Two separate obstacles are known: In [32], a lower bound of min(n, m1/2− ), for any fixed > 0, was shown for the approximation factor apply for any fixed tie breaking rule. 7 This is exactly the utility achieved by the bundle which would be returned in a demand query with the same prices.",
                "This notion relates to the Indirect-utility function studied in the Microeconomic literature (see, e.g., [27]). 8 Note that when all the prices are 1, the bidder actually reports the bundle with the highest per-item price.",
                "We found this type of query useful, for example, in the design of the approximation algorithm described in Figure 5 in Section 4.2. obtained using any polynomial amount of communication.",
                "A computational bound with the same value applies even for the case of single-minded bidders, but under the assumption of NP = ZPP [39].",
                "As noted in [32], the computationallyefficient greedy algorithm of [26] can be adapted to become a polynomial-time iterative auction that achieves a nearly matching approximation factor of min(n, O( √ m)).",
                "This iterative auction may be implemented with bundle-price demand queries but, as far as we see, not as one with item prices.",
                "Since in a single bundle-price demand query an exponential number of prices can be presented, this algorithm can have an exponential communication cost.",
                "In Section 4.2, we describe a different item-price auction that achieves the same approximation factor with a polynomial number of queries (and thus with a polynomial communication).",
                "Theorem: There exists a computationally-efficient iterative auction with item-price demand queries that finds an allocation that approximates the optimal welfare between arbitrary valuations to within a factor of min(n, O( √ m)).",
                "One may then attempt obtaining such an approximation factor using iterative auctions that use only the weaker value queries.",
                "However, we show that this is impossible: Theorem: Any iterative auction that uses a polynomial (in n and m) number of value queries can not achieve an approximation factor that is better than O( m log m ).9 Note however that auctions with only value queries are not completely trivial in power: the bundling auctions of Holzman et al. [19] can easily be implemented by a polynomial number of value queries and can achieve an approximation factor of O( m√ log m ) by using O(log m) equi-sized bundles.",
                "We do not know how to close the (tiny) gap between this upper bound and our lower bound.",
                "Representing bundle-prices We then deal with a critical issue with bundle-price auctions that was side-stepped by our model, as well as by all previous works that used bundle-price auctions: how are 9 This was also proven independently by Shahar Dobzinski and Michael Schapira. 32 the bundle prices represented?",
                "For item-price auctions this is not an issue since a query needs only to specify a small number, m, of prices.",
                "In bundle-price auctions that situation is more difficult since there are exponentially many bundles that require pricing.",
                "Our basic model (like all previous work that used bundle prices, e.g., [37, 34, 3]), ignores this issue, and only requires that the prices be determined, somehow, by the protocol.",
                "A finer model would fix a specific language for denoting bundle prices, force the protocol to represent the bundle-prices in this language, and require that the representations of the bundle-prices also be polynomial.",
                "What could such a language for denoting prices for all bundles look like?",
                "First note that specifying a price for each bundle is equivalent to specifying a valuation.",
                "Second, as noted in [31], most of the proposed bidding languages are really just languages for representing valuations, i.e., a syntactic representation of valuations - thus we could use any of them.",
                "This point of view opens up the general issue of which language should be used in bundle-price auctions and what are the implications of this choice.",
                "Here we initiate this line of investigation.",
                "We consider bundle-price auctions where the prices must be given as a XOR-bid, i.e., the protocol must explicitly indicate the price of every bundle whose value is different than that of all of its proper subsets.",
                "Note that all bundle-price auctions that do not explicitly specify a bidding language must implicitly use this language or a weaker one, since without a specific language one would need to list prices for all bundles, perhaps except for trivial ones (those with value 0, or more generally, those with a value that is determined by one of their proper subsets.)",
                "We show that once the representation length of bundle prices is taken into account (using the XOR-language), bundle-price auctions are no more strictly stronger than item-price auctions.",
                "Define the cost of an iterative auction as the total length of the queries and answers used throughout the auction (in the worst case).",
                "Theorem: For some class of valuations, bundle price auctions that use the XOR-language require an exponential cost for finding the optimal allocation.",
                "In contrast, item-price auctions can find the optimal allocation for this class within polynomial cost.10 This put doubts on the applicability of bundle-price auctions like [3, 37], and it may justify the use of hybrid pricing methods such as Ausubel, Cramton and Milgroms Clock-Proxy auction ([10]).",
                "Demand queries and linear programs The winner determination problem in combinatorial auctions may be formulated as an integer program.",
                "In many cases solving the linear-program relaxation of this integer program is useful: for some restricted classes of valuations it finds the optimum of the integer program (e.g., substitute valuations [22, 17]) or helps approximating the optimum (e.g., by randomized rounding [13, 14]).",
                "However, the linear program has an exponential number of variables.",
                "Nisan and Segal [32] observed the surprising fact that despite the ex10 Our proof relies on the sophisticated known lower bounds for constant depth circuits.",
                "We were not able to find an elementary proof. ponential number of variables, this linear program may be solved within polynomial communication.",
                "The basic idea is to solve the dual program using the Ellipsoid method (see, e.g., [20]).",
                "The dual program has a polynomial number of variables, but an exponential number of constraints.",
                "The Ellipsoid algorithm runs in polynomial time even on such programs, provided that a separation oracle is given for the set of constraints.",
                "Surprisingly, such a separation oracle can be implemented using a single demand query (with item prices) to each of the bidders.",
                "The treatment of [32] was somewhat ad-hoc to the problem at hand (the case of substitute valuations).",
                "Here we give a somewhat more general form of this important observation.",
                "Let us call the following class of linear programs generalized-winner-determination-relaxation (GWDR) LPs: Maximize X i∈N,S⊆M wi xi,S vi(S) s.t.",
                "X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M The case where wi = 1, di = 1, qj = 1 (for every i, j) is the usual linear relaxation of the winner determination problem.",
                "More generally, wi may be viewed as the weight given to bidder is welfare, qj may be viewed as the quantity of units of good j, and di may be viewed as duplicity of the number of bidders of type i. Theorem: Any GWDR linear program may be solved in polynomial time (in n, m, and the number of bits of precision t) using only demand queries with item prices.11 2.2 Ascending Auctions Ascending item-price auctions: It is well known that the item-price ascending auctions of Kelso and Crawford [22] and its variants [12, 16] find the optimal allocation as long as all players valuations have the substitutes property.",
                "The obvious question is whether the optimal allocation can be found for a larger class of valuations.",
                "Our main result here is a strong negative result: Theorem: There is a 2-item 2-player problem where no ascending item-price auction can find the optimal allocation.",
                "This is in contrast to both the power of bundle-price ascending auctions and to the power of general item-price demand queries (see above), both of which can always find the optimal allocation and in fact even provide full <br>preference elicitation</br>.",
                "The same proof proves a similar impossibility result for other types of auctions (e.g., descending auctions, non-anonymous auctions).",
                "More extension of this result: • Eliciting some classes of valuations requires an exponential number of ascending item-price trajectories. 11 The produced optimal solution will have polynomial support and thus can be listed fully. 33 • At least k − 1 ascending item-price trajectories are needed to elicit XOR formulae with k terms.",
                "This result is in some sense tight, since we show that any k-term XOR formula can be fully elicited by k−1 nondeterministic (i.e., when some exogenous teacher instructs the auctioneer on how to increase the prices) ascending auctions.12 We also show that item-price ascending auctions and iterative auctions that are limited to a polynomial number of queries (of any kind, not necessarily ascending) are incomparable in their power: ascending auctions, with small enough increments, can elicit the preferences in cases where any polynomial number of queries cannot.",
                "Motivated by several recent papers that studied the relation between eliciting and fully-eliciting the preferences in combinatorial auctions (e.g., [7, 24]), we explore the difference between these problems in the context of ascending auctions.",
                "We show that although a single ascending auction can determine the optimal allocation among any number of bidders with substitutes valuations, it cannot fully-elicit such a valuation even for a single bidder.",
                "While it was shown in [25] that the set of substitutes valuations has measure zero in the space of general valuations, its dimension is not known, and in particular it is still open whether a polynomial amount of information suffices to describe a substitutes valuation.",
                "While our result may be a small step in that direction (a polynomial full elicitation may still be possible with other communication protocols), we note that our impossibility result also holds for valuations in the class OXS defined by [25], valuations that we are able to show have a compact representation.",
                "We also give several results separating the power of different models for ascending combinatorial auctions that use item-prices: we prove, not surprisingly, that adaptive ascending auctions are more powerful than oblivious ascending auctions and that non-deterministic ascending auctions are more powerful than deterministic ascending auctions.",
                "We also compare different kinds of non-anonymous auctions (e.g., simultaneous or sequential), and observe that anonymous bundle-price auctions and non-anonymous item-price auctions are incomparable in their power.",
                "Finally, motivated by Dutch auctions, we consider descending auctions, and how they compare to ascending ones; we show classes of valuations that can be elicited by ascending item-price auctions but not by descending item-price auctions, and vice versa.",
                "Ascending bundle-price auctions: All known ascending bundle-price auctions that are able to find the optimal allocation between general valuations (with free disposal) use non-anonymous prices.",
                "Anonymous ascending-price auctions (e.g., [42, 21, 37]) are only known to be able to find the optimal allocation among superadditive valuations or few other simple classes ([36]).",
                "We show that this is no mistake: Theorem: No ascending auction with anonymous prices can find the optimal allocation between general valuations. 12 Non-deterministic computation is widely used in CS and also in economics (e.g, a Walrasian equilibrium or [38]).",
                "In some settings, deterministic and non-deterministic models have equal power (e.g., computation with finite automata).",
                "This bound is regardless of the running time, and it also holds for descending auctions and non-deterministic auctions.",
                "We strengthen this result significantly by showing that anonymous ascending auctions cannot produce a better than O( √ m) approximation - the approximation ratio that can be achieved with a polynomial number of queries ([26, 32]) and, as mentioned, with a polynomial number of item-price demand queries.",
                "The same lower bound clearly holds for anonymous item-price ascending auctions since such auctions can be simulated by anonymous bundle-price ascending auctions.",
                "We currently do not have any lower bound on the approximation achievable by non-anonymous item-price ascending auctions.",
                "Finally, we study the performance of the existing computationally-efficient ascending auctions.",
                "These protocols ([37, 3]) require exponential time in the worst case, and this is unavoidable as shown by [32].",
                "However, we also observe that these auctions, as well as the whole class of similar ascending bundle-price auctions, require an exponential time even for simple additive valuations.",
                "This is avoidable and indeed the ascending item-price auctions of [22] can find the optimal allocation for these simple valuations with polynomial communication. 3.",
                "THE MODEL 3.1 Discrete Auctions for Continuous Values Our model aims to capture iterative auctions that operate on real-valued valuations.",
                "There is a slight technical difficulty here in bridging the gap between the discrete nature of an iterative auction, and the continuous nature of the valuations.",
                "This is exactly the same problem as in modeling a simple English auction.",
                "There are three standard formal ways to model it: 1.",
                "Model the auction as a continuous process and study its trajectory in time.",
                "For example, the so-called Japanese auction is basically a continuous model of an English model.13 2.",
                "Model the auction as discrete and the valuations as continuously valued.",
                "In this case we introduce a parameter and usually require the auction to produce results that are -close to optimal. 3.",
                "Model the valuations as discrete.",
                "In this case we will assume that all valuations are integer multiples of some small fixed quantity δ, e.g., 1 penny.",
                "All communication in this case is then naturally finite.",
                "In this paper we use the latter formulation and assume that all values are multiples of some δ.",
                "Thus, in some parts of the paper we assume without loss of generality that δ = 1, hence all valuations are integral.",
                "Almost all (if not all) of our results can be translated to the other two models with little effort. 3.2 Valuations A single auctioneer is selling m indivisible non-homogeneous items in a single auction, and let M be the set of these 13 Another similar model is the moving knives model in the cake-cutting literature. 34 items and N be the set of bidders.",
                "Each one of the n bidders in the auction has a valuation function vi : 2m → {0, δ, 2δ, ..., L}, where for every bundle of items S ⊆ M, vi(S) denotes the value of bidder i for the bundle S and is a multiple of δ in the range 0...L. We will sometimes denote the number of bits needed to represent such values in the range 0...L by t = log L. We assume free disposal, i.e., S ⊆ T implies vi(S) ≤ vi(T) and that vi(∅) = 0 for all bidders.",
                "We will mention the following classes of valuations: • A valuation is called sub-modular if for all sets of items A and B we have that v(A ∪ B) + v(A ∩ B) ≤ v(A) + v(B). • A valuation is called super-additive if for all disjoint sets of items A and B we have that v(A∪B) ≥ v(A)+ v(B). • A valuation is called a k-bundle XOR if it can be represented as a XOR combination of at most k atomic bids [30], i.e., if there are at most k bundles Si and prices pi such that for all S, v(S) = maxi|S⊇Si pi.",
                "Such valuations will be denoted by v = (S1 : p1) ⊕ (S2 : p2) ⊕ . . . ⊕ (Sk : pk).14 3.3 Iterative Auctions The auctioneer sets up a protocol (equivalently an algorithm), where at each stage of the protocol some information q - termed the query - is sent to some bidder i, and then bidder i replies with some reply that depends on the query as well as on his own valuation.",
                "In this paper, we assume that we have complete control over the bidders behavior, and thus the protocol also defines a reply function ri(q, vi) that specifies bidder is reply to query q.",
                "The protocol may be adaptive: the query value as well as the queried bidder may depend on the replies received for past queries.",
                "At the end of the protocol, an allocation S1...Sn must be declared, where Si ∩ Sj = ∅ for i = j.",
                "We say that the auction finds an optimal allocation if it finds the allocation that maximizes the social welfareP i vi(Si).",
                "We say that it finds a c-approximation if P i vi(Si) ≥ P i vi(Ti)/c where T1...Tn is an optimal allocation.",
                "The running time of the auction on a given instance of the bidders valuations is the total number of queries made on this instance.",
                "The running time of a protocol is the worst case cost over all instances.",
                "Note that we impose no computational limitations on the protocol or on the players.15 This of course only strengthens our hardness results.",
                "Yet, our positive results will not use this power and will be efficient also in the usual computational sense.",
                "Our goal will be to design computationally-efficient protocols.",
                "We will deem a protocol computationally-efficient if its cost is polynomial in the relevant parameters: the number of bidders n, the number of items m, and t = log L, where L is the largest possible value of a bundle.",
                "However, when we discuss ascending-price auctions and their variants, a computationally-efficient protocol will be required to be 14 For example, v = (abcd : 5) ⊕ (ab : 3) ⊕ (c : 4) denotes the XOR valuation with the terms abcd, ab, c and prices 5, 3, 4 respectively.",
                "For this valuation, v(abcd) = 5, v(abd) = 3, v(abc) = 4. 15 The running time really measures communication costs and not computational running time. pseudo-polynomial, i.e., it should ask a number of queries which is polynomial in m, n and L δ .",
                "This is because that ascending auctions can usually not achieve such running times (consider even the English auction on a single item).16 Note that all of our results give concrete bounds, where the dependence on the parameters is given explicitly; we use the standard big-Oh notation just as a shorthand.",
                "We say than an auction elicits some class V of valuations, if it determines the optimal allocation for any profile of valuations drawn from V ; We say that an auction fully elicits some class of valuations V , if it can fully learn any single valuation v ∈ V (i.e., learn v(S) for every S). 3.4 Demand Queries and Ascending Auctions Most of the paper will be concerned with a common special case of iterative auctions that we term demand auctions.",
                "In such auctions, the queries that are sent to bidders are demand queries: the query specifies a price p(S) ∈ + for each bundle S. The reply of bidder i is simply the set most desired - demanded - under these prices.",
                "Formally, a set S that maximizes vi(S) − p(S).",
                "It may happen that more than one set S maximizes this value.",
                "In which case, ties are broken according to some fixed tie-breaking rule, e.g., the lexicographically first such set is returned.",
                "All of our results hold for any fixed tie-breaking rule.",
                "Ascending auctions are iterative auctions with non-decreasing prices: Definition 1.",
                "In an ascending auction, the prices in the queries to the same bidder can only increase in time.",
                "Formally, let p be a query made for bidder i, and q be a query made for bidder i at a later stage in the protocol.",
                "Then for all sets S, q(S) ≥ p(S).",
                "A similar variant, which we also study and that is also common in real life, is descending auctions, in which prices can only decrease in time.",
                "Note that the term ascending auction refers to an auction with a single ascending trajectory of prices.",
                "It may be useful to define multi-trajectory ascending auctions, in which the prices maybe reset to zero a number of times (see, e.g., [4]).",
                "We consider two main restrictions on the types of allowed demand queries: Definition 2.",
                "Item Prices: The prices in each query are given by prices pj for each item j.",
                "The price of a set S is additive: p(S) = P j∈S pj.",
                "Definition 3.",
                "Anonymous prices: The prices seen by the bidders at any stage in the auction are the same, i.e. whenever a query is made to some bidder, the same query is also made to all other bidders (with the prices unchanged).",
                "In auctions with non-anonymous (discriminatory) prices, each bidder i has personalized prices denoted by pi (S).17 In this paper, all auctions are anonymous unless otherwise specified.",
                "Note that even though in our model valuations are integral (or multiples of some δ), we allow the demand query to 16 Most of the auctions we present may be adapted to run in time polynomial in log L, using a binary-search-like procedure, losing their ascending nature. 17 Note that a non-anonymous auction can clearly be simulated by n parallel anonymous auctions. 35 use arbitrary real numbers in +.",
                "That is, we assume that the increment we use in the ascending auctions may be significantly smaller than δ.",
                "All our hardness results hold for any , even for continuous price increments.",
                "A practical issue here is how will the query be specified: in the general case, an exponential number of prices needs to be sent in a single query.",
                "Formally, this is not a problem as the model does not limit the length of queries in any way - the protocol must simply define what the prices are in terms of the replies received for previous queries.",
                "We look into this issue further in Section 4.3. 4.",
                "THE POWER OF DEMAND QUERIES In this section, we study the power of iterative auctions that use demand queries (not necessarily ascending).",
                "We start by comapring demand queries to other types of queries.",
                "Then, we discuss how well can one approximate the optimal welfare using a polynomial number of demand queries.",
                "We also initiate the study of the representation of bundle-price demand queries, and finally, we show how demand queries help solving the linear-programming relaxation of combinatorial auctions in polynomial time. 4.1 The Power of Different Types of Queries In this section we compare the power of the various types of queries defined in Section 2.",
                "We will present computationally -efficient simulations of these query types using item-price demand queries.",
                "In Section 5.1 we show that these simulations can also be done using item-price ascending auctions.",
                "Lemma 4.1.",
                "A value query can be simulated by m marginalvalue queries.",
                "A marginal-value query can be simulated by two value queries.",
                "Lemma 4.2.",
                "A value query can be simulated by mt demand queries (where t = log L is the number of bits needed to represent a single bundle value).18 As a direct corollary we get that demand auctions can always fully elicit the bidders valuations by simulating all possible 2m − 1 queries and thus elicit enough information for determining the optimal allocation.",
                "Note, however, that this elicitation may be computationally inefficient.",
                "The next lemma shows that demand queries can be exponentially more powerful than value queries.",
                "Lemma 4.3.",
                "An exponential number of value queries may be required for simulating a single demand query.",
                "Indirect utility queries are, however, equivalent in power to demand queries: Lemma 4.4.",
                "An indirect-utility query can be simulated by mt + 1 demand queries.",
                "A demand query can be simulated by m + 1 indirect-utility queries.",
                "Demand queries can also simulate relative-demand queries:19 18 Note that t bundle-price demand queries can easily simulate a value query by setting the prices of all the bundles except S (the bundle with the unknown value) to be L, and performing a binary search on the price of S. 19 Note: although in our model values are integral (our multiples of δ), we allow the query prices to be arbitrary real numV MV D IU RD V 1 2 exp exp exp MV m 1 exp exp exp D mt poly 1 mt+1 poly IU 1 2 m+1 1 poly RD - - - - 1 Figure 4: Each entry in the table specifies how many queries of this row are needed to simulate a query from the relevant column.",
                "Abbreviations: V (value query), MV (marginal-value query), D (demand query), IU (Indirect-utility query), RD (relative demand query).",
                "Lemma 4.5.",
                "Relative-demand queries can be simulated by a polynomial number of demand queries.",
                "According to our definition of relative-demand queries, they clearly cannot simulate even value queries.",
                "Figure 4 summarizes the relations between these query types. 4.2 Approximating the Social Welfare with Value and Demand Queries We know from [32] that iterative combinatorial auctions that only use a polynomial number of queries can not find an optimal allocation among general valuations and in fact can not even approximate it to within a factor better than min{n, m1/2− }.",
                "In this section we ask how well can this approximation be done using demand queries with item prices, or using the weaker value queries.",
                "We show that, using demand queries, the lower bound can be matched, while value queries can only do much worse.",
                "Figure 5 describes a polynomial-time algorithm that achieves a min(n, O( √ m)) approximation ratio.",
                "This algorithm greedily picks the bundles that maximize the bidders per-item value (using relative-demand queries, see Section 4.1).",
                "As a final step, it allocates all the items to a single bidder if it improves the social welfare (this can be checked using value queries).",
                "Since both value queries and relative-demand queries can be simulated by a polynomial number of demand queries with item prices (Lemmas 4.2 and 4.5), this algorithm can be implemented by a polynomial number of demand queries with item prices.20 Theorem 4.6.",
                "The auction described in Figure 5 can be implemented by a polynomial number of demand queries and achieves a min{n, 4 √ m}-approximation for the social welfare.",
                "We now ask how well can the optimal welfare be approximated by a polynomial number of value queries.",
                "First we note that value queries are not completely powerless: In [19] it is shown that if the m items are split into k fixed bundles of size m/k each, and these fixed bundles are auctioned as though each was indivisible, then the social welfare bers, thus we may have bundles with arbitrarily close relative demands.",
                "In this sense the simulation above is only up to any given (and the number of queries is O(log L+log 1 )).",
                "When the relative-demand query prices are given as rational numbers, exact simulation is implied when log is linear in the input length. 20 In the full paper [8], we observe that this algorithm can be implemented by two descending item-price auctions (where we allow removing items along the auction). 36 generated by such an auction is at least m√ k -approximation of that possible in the original auction.",
                "Notice that such an auction can be implemented by 2k − 1 value queries to each bidder - querying the value of each bundle of the fixed bundles.",
                "Thus, if we choose k = log m bundles we get an m√ log m -approximation while still using a polynomial number of queries.",
                "The following lemma shows that not much more is possible using value queries: Lemma 4.7.",
                "Any iterative auction that uses only value queries and distinguishes between k-tuples of 0/1 valuations where the optimal allocation has value 1, and those where the optimal allocation has value k requires at least 2 m k queries.",
                "Proof.",
                "Consider the following family of valuations: for every S, such that |S| > m/2, v(S) = 1, and there exists a single set T, such that for |S| ≤ m/2, v(S) = 1 iff T ⊆ S and v(S) = 0 otherwise.",
                "Now look at the behavior of the protocol when all valuations vi have T = {1...m}.",
                "Clearly in this case the value of the best allocation is 1 since no set of size m 2 or lower has non-zero value for any player.",
                "Fix the sequence of queries and answers received on this k-tuple of valuations.",
                "Now consider the k-tuple of valuations chosen at random as follows: a partition of the m items into k sets T1...Tk each of size m k each is chosen uniformly at random among all such partitions.",
                "Now consider the k-tuple of valuations from our family that correspond to this partition - clearly Ti can be allocated to i, for each i, getting a total value of k. Now look at the protocol when running on these valuations and compare its behavior to the original case.",
                "Note that the answer to a query S to player i differs between the case of Ti and the original case of T = {1...m} only if |S| ≤ m 2 and Ti ⊆ S. Since Ti is distributed uniformly among all sets of size exactly m k , we have that for any fixed query S to player i, where |S| ≤ m 2 , Pr[Ti ⊆ S] ≤ „ |S| m «|Ti| ≤ 2− m k Using the union-bound, if the original sequence of queries was of length less than 2 m k , then with positive probability none of the queries in the sequence would receive a different answer than for the original input tuple.",
                "This is forbidden since the protocol must distinguish between this case and the original case - which cannot happen if all queries receive the same answer.",
                "Hence there must have been at least 2 m k queries for the original tuple of valuations.",
                "We conclude that a polynomial time protocol that uses only value queries cannot obtain a better than O( m log m ) approximation of the welfare: Theorem 4.8.",
                "An iterative auction that uses a polynomial number of value queries cannot achieve better than O( m log m )-approximation for the social welfare.",
                "Proof.",
                "Immediate from Lemma 4.7: achieving any approximation ratio k which is asymptotically greater than m log m needs an exponential number of value queries.",
                "An Approximation Algorithm: Initialization: Let T ← M be the current items for sale.",
                "Let K ← N be the currently participating bidders.",
                "Let S∗ 1 ← ∅, ..., S∗ n ← ∅ be the provisional allocation.",
                "Repeat until T = ∅ or K = ∅: Ask each bidder i in K for the bundle Si that maximizes her per-item value, i.e., Si ∈ argmaxS⊆T vi(S) |S| .",
                "Let i be the bidder with the maximal per-item value, i.e., i ∈ argmaxi∈K vi(Si) |Si| .",
                "Set: s∗ i = si, K = K \\ i, M = M \\ Si Finally: Ask the bidders for their values vi(M) for the grand bundle.",
                "If allocating all the items to some bidder i improves the social welfare achieved so far (i.e., ∃i ∈ N such that vi(M) > P i∈N vi(S∗ i )), then allocate all items to this bidder i.",
                "Figure 5: This algorithm achieves a min{n, 4 √ m}approximation for the social welfare, which is asymptotically the best worst-case approximation possible with polynomial communication.",
                "This algorithm can be implemented with a polynomial number of demand queries. 4.3 The Representation of Bundle Prices In this section we explicitly fix the language in which bundle prices are presented to the bidders in bundle-price auctions.",
                "This language requires the algorithm to explicitly list the price of every bundle with a non-trivial price.",
                "Trivial in this context is a price that is equal to that of one of its proper subsets (which was listed explicitly).",
                "This representation is equivalent to the XOR-language for expressing valuations.",
                "Formally, each query q is given by an expression: q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl).",
                "In this representation, the price demanded for every set S is simply p(S) = max{k=1...l|Sk⊆S}pk.",
                "Definition 4.",
                "The length of the query q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl) is l. The cost of an algorithm is the sum of the lengths of the queries asked during the operation of the algorithm on the worst case input.",
                "Note that under this definition, bundle-price auctions are not necessarily stronger than item-price auctions.",
                "An itemprice query that prices each item for 1, is translated to an exponentially long bundle-price query that needs to specify the price |S| for each bundle S. But perhaps bundle-price auctions can still find optimal allocations whenever itemprice auction can, without directly simulating such queries?",
                "We show that this is not the case: indeed, when the representation length is taken into account, bundle price auctions are sometimes seriously inferior to item price auctions.",
                "Consider the following family of valuations: Each item is valued at 3, except that for some single set S, its value is a bit more: 3|S| + b, where b ∈ {0, 1, 2}.",
                "Note that an item price auction can easily find the optimal allocation between any two such valuations: Set the prices of each item to 3+ ; if the demand sets of the two players are both empty, then b = 0 for both valuations, and an arbitrary allocation is fine.",
                "If one of them is empty and the other non-empty, allocate the non-empty demand set to its bidder, and the rest to the other.",
                "If both demand sets are non-empty then, unless they form an exact partition, we need to see which b is larger, which we can do by increasing the price of a single item in each demand set. 37 We will show that any bundle-price auction that uses only the XOR-language to describe bundle prices requires an exponential cost (which includes the sum of all description lengths of prices) to find an optimal allocation between any two such valuations.",
                "Lemma 4.9.",
                "Every bundle-price auction that uses XORexpressions to denote bundle prices requires 2Ω( √ m) cost in order to find the optimal allocation among two valuations from the above family.",
                "The complication in the proof stems from the fact that using XOR-expressions, the length of the price description depends on the number of bundles whose price is strictly larger than each of their subsets - this may be significantly smaller than the number of bundles that have a non-zero price. (The proof becomes easy if we require the protocol to explicitly name every bundle with non-zero price.)",
                "We do not know of any elementary proof for this lemma (although we believe that one can be found).",
                "Instead we reduce the problem to a well known lower bound in boolean circuit complexity [18] stating that boolean circuits of depth 3 that compute the majority function on m variables require 2Ω( √ m) size. 4.4 Demand Queries and Linear Programming Consider the following linear-programming relaxation for the generalized winner-determination problem in combinatorial auctions (the primal program): Maximize X i∈N,S⊆M wi xi,S vi(S) s.t.",
                "X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M Note that the primal program has an exponential number of variables.",
                "Yet, we will be able to solve it in polynomial time using demand queries to the bidders.",
                "The solution will have a polynomial size support (non-zero values for xi,S), and thus we will be able to describe it in polynomial time.",
                "Here is its dual: Minimize X j∈M qjpj + X i∈N diui s.t. ui + X j∈S pj ≥ wivi(S) ∀i ∈ N, S ⊆ M pi ≥ 0, uj ≥ 0 ∀i ∈ M, j ∈ N Notice that the dual problem has exactly n + m variables but an exponential number of constraints.",
                "Thus, the dual can be solved using the Ellipsoid method in polynomial time - if a separation oracle can be implemented in polynomial time.",
                "Recall that a separation oracle, when given a possible solution, either confirms that it is a feasible solution, or responds with a constraint that is violated by the possible solution.",
                "We construct a separation oracle for solving the dual program, using a single demand query to each of the bidders.",
                "Consider a possible solution (u, p) for the dual program.",
                "We can re-write the constraints of the dual program as: ui/wi ≥ vi(S) − X j∈S pj/wi Now a demand query to bidder i with prices pj/wi reveals exactly the set S that maximizes the RHS of the previous inequality.",
                "Thus, in order to check whether (u, p) is feasible it suffices to (1) query each bidder i for his demand Di under the prices pj/wi; (2) check only the n constraints ui + P j∈Di pj ≥ wivi(Di) (where vi(Di) can be simulated using a polynomial sequence of demand queries as shown in Lemma 4.2).",
                "If none of these is violated then we are assured that (u, p) is feasible; otherwise we get a violated constraint.",
                "What is left to be shown is how the primal program can be solved. (Recall that the primal program has an exponential number of variables.)",
                "Since the Ellipsoid algorithm runs in polynomial time, it encounters only a polynomial number of constraints during its operation.",
                "Clearly, if all other constraints were removed from the dual program, it would still have the same solution (adding constraints can only decrease the space of feasible solutions).",
                "Now take the reduced dual where only the constraints encountered exist, and look at its dual.",
                "It will have the same solution as the original dual and hence of the original primal.",
                "However, look at the form of this dual of the reduced dual.",
                "It is just a version of the primal program with a polynomial number of variables - those corresponding to constraints that remained in the reduced dual.",
                "Thus, it can be solved in polynomial time, and this solution clearly solves the original primal program, setting all other variables to zero. 5.",
                "ITEM-PRICE ASCENDING AUCTIONS In this section we characterize the power of ascending item-price auctions.",
                "We first show that this power is not trivial: such auctions can in general elicit an exponential amount of information.",
                "On the other hand, we show that the optimal allocation cannot always be determined by a single ascending auction, and in some cases, nor by an exponential number of ascending-price trajectories.",
                "Finally, we separate the power of different models of ascending auctions. 5.1 The Power of Item-Price Ascending Auctions We first show that if small enough increments are allowed, a single ascending trajectory of item-prices can elicit preferences that cannot be elicited with polynomial communication.",
                "As mentioned, all our hardness results hold for any increment, even infinitesimal.",
                "Theorem 5.1.",
                "Some classes of valuations can be elicited by item-price ascending auctions, but cannot be elicited by a polynomial number of queries of any kind.",
                "Proof. (sketch) Consider two bidders with v(S) = 1 if |S| > n 2 , v(S) = 0 if |S| < n 2 and every S such that |S| = n 2 has an unknown value from {0, 1}.",
                "Due to [32], determining the optimal allocation here requires exponential communication in the worst case.",
                "Nevertheless, we show (see [9]) that an item-price ascending auction can do it, as long as it can use exponentially small increments.",
                "We now describe another positive result for the power of item-price ascending auctions.",
                "In section 4.1, we showed 38 v(ab) v(a) v(b) Bidder 1 2 α ∈ (0, 1) β ∈ (0, 1) Bidder 2 2 2 2 Figure 6: No item-price ascending auctions can determine the optimal allocation for this class of valuations. that a value query can be simulated with a (truly) polynomial number of item-price demand queries.",
                "Here, we show that every value query can be simulated by a (pseudo) polynomial number of ascending item-price demand queries. (In the next subsection, we show that we cannot always simulate even a pair of value queries using a single item-price ascending auction.)",
                "In the full paper (part II,[9]), we show that we can simulate other types of queries using item-price ascending auctions.",
                "Proposition 5.2.",
                "A value query can be simulated by an item-price ascending auction.",
                "This simulation requires a polynomial number of queries.",
                "Actually, the proof for Proposition 5.2 proves a stronger useful result regarding the information elicited by iterative auctions.",
                "It says that in any iterative auction in which the changes of prices are small enough in each stage (pseudocontinuous auctions), the value of all bundles demanded during the auction can be computed.",
                "The basic idea is that when the bidder moves from demanding some bundle Ti to demanding another bundle Ti+1, there is a point in which she is indifferent between these two bundles.",
                "Thus, knowing the value of some demanded bundle (e.g., the empty set) enables computing the values of all other demanded bundles.",
                "We say that an auction is pseudo-continuous, if it only uses demand queries, and in each step, the price of at most one item is changed by (for some ∈ (0, δ]) with respect to the previous query.",
                "Proposition 5.3.",
                "Consider any pseudo-continuous auction (not necessarily ascending), in which bidder i demands the empty set at least once along the auction.",
                "Then, the value of every bundle demanded by bidder i throughout the auction can be calculated at the end of the auction. 5.2 Limitations of Item-Price Ascending Auctions Although we observed that demand queries can solve any combinatorial auction problem, when the queries are restricted to be ascending, some classes of valuations cannot be elicited nor fully-elicited.",
                "An example for such class of valuations is given in Figure 6.",
                "Theorem 5.4.",
                "There are classes of valuations that cannot be elicited nor fully elicited by any item-price ascending auction.",
                "Proof.",
                "Let bidder 1 have the valuation described in the first row of Figure 6, where α and β are unknown values in (0, 1).",
                "First, we prove that this class cannot be fully elicited by a single ascending auction.",
                "Specifically, an ascending auction cannot reveal the values of both α and β.",
                "As long as pa and pb are both below 1, the bidder will always demand the whole bundle ab: her utility from ab is strictly greater than the utility from either a or b separately.",
                "For example, we show that u1(ab) > u1(a): u1(ab) = 2 − (pa + pb) = 1 − pa + 1 − pb > vA(a) − pa + 1 − pb > u1(a) Thus, in order to gain any information about α or β, the price of one of the items should become at least 1, w.l.o.g. pa ≥ 1.",
                "But then, the bundle a will not be demanded by bidder 1 throughout the auction, thus no information at all will be gained about α.",
                "Now, assume that bidder 2 is known to have the valuation described in the second row of Figure 6.",
                "The optimal allocation depends on whether α is greater than β (in bidder 1s valuation), and we proved that an ascending auction cannot determine this.",
                "The proof of the theorem above shows that for an unknown value to be revealed, the price of one item should be greater than 1, and the other price should be smaller than 1.",
                "Therefore, in a price-monotonic trajectory of prices, only one of these values can be revealed.",
                "An immediate conclusion is that this impossibility result also holds for item-price descending auctions.",
                "Since no such trajectory exists, then the same conclusion even holds for non-deterministic itemprice auctions (in which exogenous data tells us how to increase the prices).",
                "Also note that since the hardness stems from the impossibility to fully-elicit a valuation of a single bidder, this result also holds for non-anonymous ascending item-price auctions. 5.3 Limitations of Multi-Trajectory Ascending Auctions According to Theorem 5.4, no ascending item-price auction can always elicit the preferences (we prove a similar result for bundle prices in section 6).",
                "But can two ascending trajectories do the job?",
                "Or a polynomial number of ascending trajectories?",
                "We give negative answers for such suggestions.",
                "We define a k-trajectory ascending auction as a demandquery iterative auction in which the demand queries can be partitioned to k sets of queries, where the prices published in each set only increase in time.",
                "Note that we use a general definition; It allows the trajectories to run in parallel or sequentially, and to use information elicited in some trajectories for determining the future queries in other trajectories.",
                "The power of multiple-trajectory auctions can be demonstrated by the negative result of Gul and Stacchetti [17] who showed that even for an auction among substitutes valuations, an anonymous ascending item-price auction cannot compute VCG prices for all players.21 Ausubel [4] overcame this impossibility result and designed auctions that do compute VCG prices by organizing the auction as a sequence of n + 1 ascending auctions.",
                "Here, we prove that one cannot elicit XOR valuations with k terms by less than k − 1 ascending trajectories.",
                "On the other hand, we show that an XOR formula can be fully elicited by k−1 non-deterministic ascending auctions (or by k−1 deterministic ascending auctions if the auctioneer knows the atomic bundles).22 21 A recent unpublished paper by Mishra and Parkes extends this result, and shows that non-anonymous prices with bundle-prices are necessary in order that an ascending auction will end up with a universal-competitive-equilibrium (that leads to VCG payments). 22 This result actually separates the power of deterministic 39 Proposition 5.5.",
                "XOR valuations with k terms cannot be elicited (or fully elicited) by any (k-2)-trajectory itemprice ascending auction, even when the atomic bundles are known to the elicitor.",
                "However, these valuations can be elicited (and fully elicited) by (k-1)-trajectory non-deterministic non-anonymous item-price ascending auctions.",
                "Moreover, an exponential number of trajectories is required for eliciting some classes of valuations: Proposition 5.6.",
                "Elicitation and full-elicitation of some classes of valuations cannot be done by any k-trajectory itemprice ascending auction, where k = o(2m ).",
                "Proof. (sketch) Consider the following class of valuations: For |S| < m 2 , v(S) = 0 and for |S| > m 2 , v(S) = 2; every bundle S of size m 2 has some unknown value in (0, 1).",
                "We show ([9]) that a single item-price ascending auction can reveal the value of at most one bundle of size n 2 , and therefore an exponential number of ascending trajectories is needed in order to elicit such valuations.",
                "We observe that the algorithm we presented in Section 4.2 can be implemented by a polynomial number of ascending auctions (each item-price demand query can be considered as a separate ascending auction), and therefore a min(n, 4 √ m)-approximation can be achieved by a polynomial number of ascending auctions.",
                "We do not currently have a better upper bound or any lower bound. 5.4 Separating the Various Models of Ascending Auctions Various models for ascending auctions have been suggested in the literature.",
                "In this section, we compare the power of the different models.",
                "As mentioned, all auctions are considered anonymous and deterministic, unless specified otherwise.",
                "Ascending vs.",
                "Descending Auctions: We begin the discussion of the relation between ascending auctions and descending auctions with an example.",
                "The algorithm by Lehmann, Lehmann and Nisan [25] can be implemented by a simple item-price descending auction (see the full paper for details [9]).",
                "This algorithm guarantees at least half of the optimal efficiency for submodular valuations.",
                "However, we are not familiar with any ascending auction that guarantees a similar fraction of the efficiency.",
                "This raises a more general question: can ascending auctions solve any combinatorialauction problem that is solvable using a descending auction (and vice versa)?",
                "We give negative answers to these questions.",
                "The idea behind the proofs is that the information that the auctioneer can get for free at the beginning of each type of auction is different.23 and non-deterministic iterative auctions: our proof shows that a non-deterministic iterative auction can elicit the kterm XOR valuations with a polynomial number of demand queries, and [7] show that this elicitation must take an exponential number of demand queries. 23 In ascending auctions, the auctioneer can reveal the most valuable bundle (besides M) before she starts raising the prices, thus she can use this information for adaptively choose the subsequent queries.",
                "In descending auctions, one can easily find the bundle with the highest average per-item price, keeping all other bundles with non-positive utilities, and use this information in the adaptive price change.",
                "Proposition 5.7.",
                "There are classes that cannot be elicited (fully elicited) by ascending item-price auctions, but can be elicited (resp. fully elicited) with a descending item-price auction.",
                "Proposition 5.8.",
                "There are classes that cannot be elicited (fully elicited) by item-price descending auctions, but can be elicited (resp. fully elicited) by item-price ascending auctions.",
                "Deterministic vs. Non-Deterministic Auctions: Nondeterministic ascending auctions can be viewed as auctions where some benevolent teacher that has complete information guides the auctioneer on how she should raise the prices.",
                "That is, <br>preference elicitation</br> can be done by a non-deterministic ascending auction, if there is some ascending trajectory that elicits enough information for determining the optimal allocation (and verifying that it is indeed optimal).",
                "We show that non-deterministic ascending auctions are more powerful than deterministic ascending auctions: Proposition 5.9.",
                "Some classes can be elicited (fully elicited) by an item-price non-deterministic ascending auction, but cannot be elicited (resp. fully elicited) by item-price deterministic ascending auctions.",
                "Anonymous vs. Non-Anonymous Auctions: As will be shown in Section 6, the power of anonymous and nonanonymous bundle-price ascending auctions differs significantly.",
                "Here, we show that a difference also exists for itemprice ascending auctions.",
                "Proposition 5.10.",
                "Some classes cannot be elicited by anonymous item-price ascending auctions, but can be elicited by a non-anonymous item-price ascending auction.",
                "Sequential vs.",
                "Simultaneous Auctions: A non-anonymous auction is called simultaneous if at each stage, the price of some item is raised by for every bidder.",
                "The auctioneer can use the information gathered until each stage, in all the personalized trajectories, to determine the next queries.",
                "A non-anonymous auction is called sequential if the auctioneer performs an auction for each bidder separately, in sequential order.",
                "The auctioneer can determine the next query based on the information gathered in the trajectories completed so far and on the history of the current trajectory.",
                "Proposition 5.11.",
                "There are classes that cannot be elicited by simultaneous non-anonymous item-price ascending auctions, but can be elicited by a sequential non-anonymous item-price ascending auction.",
                "Adaptive vs.",
                "Oblivious Auctions: If the auctioneer determines the queries regardless of the bidders responses (i.e., the queries are predefined) we say that the auction is oblivious.",
                "Otherwise, the auction is adaptive.",
                "We prove that an adaptive behaviour of the auctioneer may be beneficial.",
                "Proposition 5.12.",
                "There are classes that cannot be elicited (fully elicited) using oblivious item-price ascending auctions, but can be elicited (resp. fully elicited) by an adaptive item-price ascending auction. 40 5.5 <br>preference elicitation</br> vs. Full Elicitation <br>preference elicitation</br> and full elicitation are closely related problems.",
                "If full elicitation is easy (e.g., in polynomial time) then clearly elicitation is also easy (by a nonanonymous auction, simply by learning all the valuations separately24 ).",
                "On the other hand, there are examples where <br>preference elicitation</br> is considered easy but learning is hard (typically, elicitation requires smaller amount of information; some examples can be found in [7]).",
                "The tatonnement algorithms by [22, 12, 16] end up with the optimal allocation for substitutes valuations.25 We prove that we cannot fully elicit substitutes valuations (or even their sub-class of OXS valuations defined in [25]), even for a single bidder, by an item-price ascending auction (although the optimal allocation can be found by an ascending auction for any number of bidders!).",
                "Theorem 5.13.",
                "Substitute valuations cannot be fully elicited by ascending item-price auctions.",
                "Moreover, they cannot be fully elicited by any m 2 ascending trajectories (m > 3).",
                "Whether substitutes valuations have a compact representation (i.e., polynomial in the number of goods) is an important open question.",
                "As a step in this direction, we show that its sub-class of OXS valuations does have a compact representation: every OXS valuation can be represented by at most m2 values.26 Lemma 5.14.",
                "Any OXS valuation can be represented by no more than m2 values. 6.",
                "BUNDLE-PRICE ASCENDING AUCTIONS All the ascending auctions in the literature that are proved to find the optimal allocation for unrestricted valuations are non-anonymous bundle-price auctions (iBundle(3) by Parkes and Ungar [37] and the Proxy Auction by Ausubel and Milgrom [3]).",
                "Yet, several anonymous ascending auctions have been suggested (e.g., AkBA [42], [21] and iBundle(2) [37]).",
                "In this section, we prove that anonymous bundle-price ascending auctions achieve poor results in the worst-case.",
                "We also show that the family of non-anonymous bundleprice ascending auctions can run exponentially slower than simple item-price ascending auctions. 6.1 Limitations of Anonymous Bundle-Price Ascending Auctions We present a class of valuations that cannot be elicited by anonymous bundle-price ascending auctions.",
                "These valuations are described in Figure 7.",
                "The basic idea: for determining some unknown value of one bidder we must raise 24 Note that an anonymous ascending auction cannot necessarily elicit a class that can be fully elicited by an ascending auction. 25 Substitute valuations are defined, e.g., in [16].",
                "Roughly speaking, a bidder with a substitute valuation will continue demand a certain item after the price of some other items was increased.",
                "For completeness, we present in the full paper [9] a proof for the efficiency of such auctions for substitutes valuations. 26 A unit-demand valuation is an XOR valuation in which all the atomic bundles are singletons.",
                "OXS valuations can be interpreted as an aggregation (OR) of any number of unit-demand bidders.",
                "Bid. 1 v1(ac) = 2 v1(bd) = 2 v1(cd) = α ∈ (0, 1) Bid. 2 v2(ab) = 2 v2(cd) = 2 v2(bd) = β ∈ (0, 1) Figure 7: Anonymous ascending bundle-price auctions cannot determine the optimal allocation for this class of valuations. a price of a bundle that should be demanded by the other bidder in the future.",
                "Theorem 6.1.",
                "Some classes of valuations cannot be elicited by anonymous bundle-price ascending auctions.",
                "Proof.",
                "Consider a pair of XOR valuations as described in Figure 7.",
                "For finding the optimal allocation we must know which value is greater between α and β.27 However, we cannot learn the value of both α and β by a single ascending trajectory: assume w.l.o.g. that bidder 1 demands cd before bidder 2 demands bd (no information will be elicited if none of these happens).",
                "In this case, the price for bd must be greater than 1 (otherwise, bidder 1 prefers bd to cd).",
                "Thus, bidder 2 will never demand the bundle bd, and no information will be elicited about β.",
                "The valuations described in the proof of Theorem 6.1 can be easily elicited by a non-anonymous item-price ascending auction.",
                "On the other hand, the valuations in Figure 6 can be easily elicited by an anonymous bundle-price ascending auction.",
                "We conclude that the power of these two families of ascending auctions is incomparable.",
                "We strengthen the impossibility result above by showing that anonymous bundle-price auctions cannot even achieve better than a min{O(n), O( √ m)}-approximation for the social welfare.",
                "This approximation ratio can be achieved with polynomial communication, and specifically with a polynomial number of item-price demand queries.28 Theorem 6.2.",
                "An anonymous bundle-price ascending auction cannot guarantee better than a min{ n 2 , √ m 2 } approximation for the optimal welfare.",
                "Proof. (Sketch) Assume we have n bidders and n2 items for sale, and that n is prime.",
                "We construct n2 distinct bundles with the following properties: for each bidder, we define a partition Si = (Si 1, ..., Si n) of the n2 items to n bundles, such that any two bundles from different partitions intersect.",
                "In the full paper, part II [9] we show an explicit construction using the properties of linear functions over finite fields.",
                "The rest of the proof is independent of the specific construction.",
                "Using these n2 bundles we construct a hard-to-elicit class.",
                "Every bidder has an atomic bid, in his XOR valuation, for each of these n2 bundles.",
                "A bidder i has a value of 2 for any bundle Si j in his partition.",
                "For all bundles in the other partitions, he has a value of either 0 or of 1 − δ, and these values are unknown to the auctioneer.",
                "Since every pair of bundles from different partitions intersect, only one bidder can receive a bundle with a value of 2. 27 If α > β, the optimal allocation will allocate cd to bidder 1 and ab to bidder 2.",
                "Otherwise, we give bd to bidder 2 and ac to bidder 1.",
                "Note that both bidders cannot gain a value of 2 in the same allocation, due to the intersections of the high-valued bundles. 28 Note that bundle-price queries may use exponential communication, thus the lower bound of [32] does not hold. 41 Non-anonymous Bundle-Price Economically-Efficient Ascending Auctions: Initialization: All prices are initialized to zero (non-anonymous bundle prices).",
                "Repeat: - Each bidder submits a bundle that maximizes his utility under his current personalized prices. - The auctioneer calculates a provisional allocation that maximizes his revenue under the current prices. - The prices of bundles that were demanded by losing bidders are increased by .",
                "Finally: Terminate when the provisional allocation assigns to each bidder the bundle he demanded.",
                "Figure 8: Auctions from this family (denoted by NBEA auctions) are known to achieve the optimal welfare.",
                "No bidder will demand a low-valued bundle, as long as the price of one of his high-valued bundles is below 1 (and thus gain him a utility greater than 1).",
                "Therefore, for eliciting any information about the low-valued bundles, the auctioneer should first arbitrarily choose a bidder (w.l.o.g bidder 1) and raise the prices of all the bundles (S1 1 , ..., S1 n) to be greater than 1.",
                "Since the prices cannot decrease, the other bidders will clearly never demand these bundles in future stages.",
                "An adversary may choose the values such that the low values of all the bidders for the bundles not in bidder 1s partition are zero (i.e., vi(S1 j ) = 0 for every i = 1 and every j), however, allocating each bidder a different bundle from bidder 1s partition, might achieve a welfare of n+1−(n−1)δ (bidder 1s valuation is 2, and 1 − δ for all other bidders); If these bundles were wrongly allocated, only a welfare of 2 might be achieved (2 for bidder 1s high-valued bundle, 0 for all other bidders).",
                "At this point, the auctioneer cannot have any information about the identity of the bundles with the non-zero values.",
                "Therefore, an adversary can choose the values of the bundles received by bidders 2, ..., n in the final allocation to be zero.",
                "We conclude that anonymous bundleprice auctions cannot guarantee a welfare greater than 2 for this class, where the optimal welfare can be arbitrarily close to n + 1. 6.2 Bundle Prices vs.",
                "Item Prices The core of the auctions in [37, 3] is the scheme described in Figure 8 (in the spirit of [35]) for auctions with nonanonymous bundle prices.",
                "Auctions from this scheme end up with the optimal allocation for any class of valuations.",
                "We denote this family of ascending auctions as NBEA auctions29 .",
                "NBEA auctions can elicit k-term XOR valuations by a polynomial (in k) number of steps , although the elicitation of such valuations may require an exponential number of item-price queries ([7]), and item-price ascending auctions cannot do it at all (Theorem 5.4).",
                "Nevertheless, we show that NBEA auctions (and in particular, iBundle(3) and the proxy auction) are sometimes inferior to simple item-price demand auctions.",
                "This may justify the use of hybrid auctions that use both linear and non-linear prices (e.g., the clock-proxy auction [10]).",
                "We show that auctions from this 29 Non-anonymous Bundle-price economically Efficient Ascending auctions.",
                "For completeness, we give in the full paper [9] a simple proof for the efficiency (up to an ) of auctions of this scheme . family may use an exponential number of queries even for determining the optimal allocation among two bidders with additive valuations30 , where such valuations can be elicited by a simple item-price ascending auction.",
                "We actually prove this property for a wider class of auctions we call conservative auctions.",
                "We also observe that in conservative auctions, allowing the bidders to submit all the bundles in their demand sets ensures that the auction runs a polynomial number of steps - if L is not too high (but with exponential communication, of course).",
                "An ascending auction is called conservative if it is nonanonymous, uses bundle prices initialized to zero and at every stage the auctioneer can only raise prices of bundles demanded by the bidders until this stage.",
                "In addition, each bidder can only receive bundles he demanded during the auction.",
                "Note that NBEA auctions are by definition conservative.",
                "Proposition 6.3.",
                "If every bidder demands a single bundle in each step of the auction, conservative auctions may run for an exponential number of steps even for additive valuations.",
                "If the bidders are allowed to submit all the bundles in their demand sets in each step, then conservative auctions can run in a polynomial number of steps for any profile of valuations, as long as the maximal valuation L is polynomial in m, n and 1 δ .",
                "Acknowledgments: The authors thank Moshe Babaioff, Shahar Dobzinski, Ron Lavi, Daniel Lehmann, Ahuva Mualem, David Parkes, Michael Schapira and Ilya Segal for helpful discussions.",
                "Supported by grants from the Israeli Academy of Sciences and the USAIsrael Binational Science Foundation. 7.",
                "REFERENCES [1] amazon.",
                "Web Page: http://www.amazon.com. [2] ebay.",
                "Web Page: http://www.ebay.com. [3] L. M. Ausubel and P. R. Milgrom.",
                "Ascending auctions with package bidding.",
                "Frontiers of Theoretical Economics, 1:1-42, 2002. [4] Lawrence Ausubel.",
                "An efficient dynamic auction for heterogeneous commodities, 2000.",
                "Working paper, University of Maryland. [5] Yair Bartal, Rica Gonen, and Noam Nisan.",
                "Incentive compatible multi unit combinatorial auctions.",
                "In TARK 03, 2003. [6] Alejandro Bertelsen.",
                "Substitutes valuations and m -concavity.",
                "M.Sc.",
                "Thesis, The Hebrew University of Jerusalem, 2005. [7] Avrim Blum, Jeffrey C. Jackson, Tuomas Sandholm, and Martin A. Zinkevich.",
                "<br>preference elicitation</br> and query learning.",
                "Journal of Machine Learning Research, 5:649-667, 2004. [8] Liad Blumrosen and Noam Nisan.",
                "On the computational power of iterative auctions I: demand queries.",
                "Working paper, The Hebrew University of 30 Valuations are called additive if for any disjoint bundles A and B, v(A ∪ B) = v(A) + v(B).",
                "Additive valuations are both sub-additive and super-additive and are determined by the m values assigned for the singletons. 42 Jerusalem.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [9] Liad Blumrosen and Noam Nisan.",
                "On the computational power of iterative auctions II: ascending auctions.",
                "Working paper, The Hebrew University of Jerusalem.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [10] P. Cramton, L.M.",
                "Ausubel, and P.R.",
                "Milgrom.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 5.",
                "The Clock-Proxy Auction: A Practical Combinatorial Auction Design.",
                "MIT Press.",
                "Forthcoming, 2005. [11] P. Cramton, Y. Shoham, and R. Steinberg (Editors).",
                "Combinatorial Auctions.",
                "MIT Press.",
                "Forthcoming, 2005. [12] G. Demange, D. Gale, and M. Sotomayor.",
                "Multi-item auctions.",
                "Journal of Political Economy, 94:863-872, 1986. [13] Shahar Dobzinski, Noam Nisan, and Michael Schapira.",
                "Approximation algorithms for cas with complement-free bidders.",
                "In The 37th ACM symposium on theory of computing (STOC)., 2005. [14] Shahar Dobzinski and Michael Schapira.",
                "Optimal upper and lower approximation bounds for k-duplicates combinatorial auctions.",
                "Working paper, the Hebrew University. [15] Combinatorial bidding conference.",
                "Web Page: http://wireless.fcc.gov/auctions/conferences/combin2003. [16] Faruk Gul and Ennio Stacchetti.",
                "Walrasian equilibrium with gross substitutes.",
                "Journal of Economic Theory, 87:95 - 124, 1999. [17] Faruk Gul and Ennio Stacchetti.",
                "The english auction with differentiated commodities.",
                "Journal of Economic Theory, 92(3):66 - 95, 2000. [18] J. Hastad.",
                "Almost optimal lower bounds for small depth circuits.",
                "In 18th STOC, pages 6-20, 1986. [19] Ron Holzman, Noa Kfir-Dahav, Dov Monderer, and Moshe Tennenholtz.",
                "Bundling equilibrium in combinatrial auctions.",
                "Games and Economic Behavior, 47:104-123, 2004. [20] H. Karloff.",
                "Linear Programming.",
                "Birkh¨auser Verlag, 1991. [21] Frank Kelly and Richard Steinberg.",
                "A combinatorial auction with multiple winners for universal service.",
                "Management Science, 46:586-596, 2000. [22] A.S. Kelso and V.P.",
                "Crawford.",
                "Job matching, coalition formation, and gross substitute.",
                "Econometrica, 50:1483-1504, 1982. [23] Subhash Khot, Richard J. Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Inapproximability results for combinatorial auctions with submodular utility functions.",
                "In Working paper., 2004. [24] Sebastien Lahaie and David C. Parkes.",
                "Applying learning algorithms to <br>preference elicitation</br>.",
                "In EC 04. [25] Benny Lehmann, Daniel Lehmann, and Noam Nisan.",
                "Combinatorial auctions with decreasing marginal utilities.",
                "In ACM conference on electronic commerce.",
                "To appear, Games and Economic Behaviour., 2001. [26] D. Lehmann, L. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "JACM, 49(5):577-602, Sept. 2002. [27] A. Mas-Collel, W. Whinston, and J.",
                "Green.",
                "Microeconomic Theory.",
                "Oxford university press, 1995. [28] Debasis Mishra and David Parkes.",
                "Ascending price vickrey auctions using primal-dual algorithms., 2004.",
                "Working paper, Harvard University. [29] Noam Nisan.",
                "The communication complexity of approximate set packing and covering.",
                "In ICALP 2002. [30] Noam Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In ACM Conference on Electronic Commerce, 2000. [31] Noam Nisan.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 1.",
                "Bidding Languages.",
                "MIT Press.",
                "Forthcoming, 2005. [32] Noam Nisan and Ilya Segal.",
                "The communication requirements of efficient allocations and supporting prices, 2003.",
                "Working paper.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html Forthcoming in the Journal of Economic Theory. [33] Noam Nisan and Ilya Segal.",
                "Exponential communication inefficiency of demand queries, 2004.",
                "Working paper.",
                "Available from http://www.stanford.edu/ isegal/queries1.pdf. [34] D. C. Parkes and L. H. Ungar.",
                "An ascending-price generalized vickrey auction.",
                "Tech.",
                "Rep., Harvard University, 2002. [35] David Parkes.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 3.",
                "Iterative Combinatorial Auctions.",
                "MIT Press.",
                "Forthcoming, 2005. [36] David C. Parkes.",
                "Iterative combinatorial auctions: Achieving economic and computational efficiency.",
                "Ph.D. Thesis, Department of Computer and Information Science, University of Pennsylvania., 2001. [37] David C. Parkes and Lyle H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In AAAI/IAAI, pages 74-81, 2000. [38] Ariel Rubinstein.",
                "Why are certain properties of binary relations relatively more common in natural languages.",
                "Econometrica, 64:343-356, 1996. [39] Tuomas Sandholm.",
                "Algorithm for optimal winner determination in combinatorial auctions.",
                "In Artificial Intelligence, volume 135, pages 1-54, 2002. [40] P. Santi, V. Conitzer, and T. Sandholm.",
                "Towards a characterization of polynomial <br>preference elicitation</br> with value queries in combinatorial auctions.",
                "In The 17th Annual Conference on Learning Theory, 2004. [41] Ilya Segal.",
                "The communication requirements of social choice rules and supporting budget sets, 2004.",
                "Working paper.",
                "Available from http://www.stanford.edu/ isegal/rules.pdf. [42] P.R.",
                "Wurman and M.P.",
                "Wellman.",
                "Akba: A progressive, anonymous-price combinatorial auction.",
                "In Second ACM Conference on Electronic Commerce, 2000. [43] Martin A. Zinkevich, Avrim Blum, and Tuomas Sandholm.",
                "On polynomial-time <br>preference elicitation</br> with value queries.",
                "In ACM Conference on Electronic Commerce, 2003. 43"
            ],
            "original_annotated_samples": [
                "In this paper we focus on just one central issue: the communication between bidders and the allocation mechanism - <br>preference elicitation</br>.",
                "As mentioned, this paper concentrates on the single aspect of <br>preference elicitation</br> and on its computational consequences and does not address issues of incentives.",
                "We also note that in some cases (but not always!) the incentives issues can be handled orthogonally to the <br>preference elicitation</br> issues, e.g., by using Vickrey-Clarke-Groves (VCG) prices (e.g., [4, 34]). 2 We further discuss this result in Section 5.3.",
                "These results are part of a recent line of research ([7, 43, 24, 40]) that study the <br>preference elicitation</br> problem in combinatorial auctions and its relation to the full elicitation problem (i.e., learn5 These are valuations where bidders have values for k specific packages, and the value of each bundle is the maximal value of one of these packages that it contains. ing the exact valuations of the bidders).",
                "The <br>preference elicitation</br> problem and the full elicitation problem relate to a well studied problem in microeconomics known as the integrability problem (see, e.g., [27])."
            ],
            "translated_annotated_samples": [
                "En este artículo nos enfocamos en un solo tema central: la comunicación entre los oferentes y el mecanismo de asignación - <br>la obtención de preferencias</br>.",
                "Como se mencionó, este artículo se centra en el único aspecto de la <br>obtención de preferencias</br> y en sus consecuencias computacionales, sin abordar cuestiones de incentivos.",
                "También observamos que en algunos casos (¡pero no siempre!) los problemas de incentivos pueden ser manejados de forma ortogonal a los problemas de <br>obtención de preferencias</br>, por ejemplo, utilizando precios de Vickrey-Clarke-Groves (VCG) (por ejemplo, [4, 34]). Además, discutimos este resultado en la Sección 5.3.",
                "Estos resultados forman parte de una línea reciente de investigación ([7, 43, 24, 40]) que estudia el problema de la <br>obtención de preferencias</br> en subastas combinatorias y su relación con el problema de obtención completo (es decir, aprender las valoraciones exactas de los postores). Estas son valoraciones donde los postores tienen valores para k paquetes específicos, y el valor de cada conjunto es el valor máximo de uno de estos paquetes que contiene.",
                "El problema de la <br>obtención de preferencias</br> y el problema de la obtención completa se relacionan con un problema bien estudiado en microeconomía conocido como el problema de integrabilidad (ver, por ejemplo, [27])."
            ],
            "translated_text": "En el Poder Computacional de Subastas Iterativas∗ [Resumen Extendido] Liad Blumrosen Escuela de Ingeniería e Informática Universidad Hebrea de Jerusalén Jerusalén, Israel liad@cs.huji.ac.il Noam Nisan Escuela de Ingeniería e Informática Universidad Hebrea de Jerusalén Jerusalén, Israel noam@cs.huji.ac.il RESUMEN Nos embarcamos en un análisis sistemático del poder y limitaciones de las subastas combinatorias iterativas. La mayoría de las subastas combinatorias iterativas existentes se basan en sugerir precios repetidamente para paquetes de artículos y consultar a los postores sobre su demanda bajo estos precios. Demostramos un gran número de resultados que muestran los límites de lo que se puede lograr mediante subastas de este tipo. Primero nos enfocamos en subastas que utilizan un número polinomial de consultas de demanda, y luego analizamos el poder de diferentes tipos de subastas de precio ascendente. Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía Términos Generales Algoritmos, Economía, Teoría 1. Las subastas combinatorias han recibido recientemente mucha atención. En una subasta combinatoria, un conjunto M de m artículos no idénticos se venden en una sola subasta a n postores competidores. Los postores tienen preferencias con respecto a los lotes de artículos que pueden recibir. Las preferencias del postor i están especificadas por una función de valoración vi: 2M → R+, donde vi(S) denota el valor que el postor i asigna a ganar el conjunto de artículos S. Suponemos disposición libre, es decir, que los vi son monótonos no decrecientes. El objetivo habitual del subastador es optimizar el bienestar social P i vi(Si), donde la asignación S1...Sn debe ser una partición de los artículos. Las aplicaciones incluyen muchos problemas complejos de asignación de recursos y, de hecho, las subastas combinatorias pueden ser vistas como la abstracción común de muchos problemas complejos de asignación de recursos. Las subastas combinatorias enfrentan dificultades económicas y computacionales y son un problema central en la frontera recientemente activa de la teoría económica y la informática. Un libro próximo [11] aborda muchos de los problemas involucrados en el diseño e implementación de subastas combinatorias. El diseño de una subasta combinatoria implica muchas consideraciones. En este artículo nos enfocamos en un solo tema central: la comunicación entre los oferentes y el mecanismo de asignación - <br>la obtención de preferencias</br>. Transferir toda la información sobre las preferencias de los licitadores requiere una cantidad de comunicación inasumible (exponencial en m). Por lo tanto, las subastas de revelación directa en las que los postores simplemente declaran sus preferencias al mecanismo solo son prácticas para tamaños de subasta muy pequeños o para familias muy limitadas de preferencias de postores. Por lo tanto, hemos visto una multitud de subastas iterativas sugeridas en las que el protocolo de subasta interactúa repetidamente con los diferentes postores, con el objetivo de obtener de manera adaptativa suficiente información sobre las preferencias de los postores para poder encontrar una asignación buena (óptima o cercana a óptima). La mayoría de las subastas iterativas sugeridas proceden manteniendo precios temporales para los lotes de artículos y consultando repetidamente a los postores sobre sus preferencias entre los lotes bajo el conjunto actual de precios, y luego actualizando el conjunto de precios de los lotes según las respuestas recibidas (por ejemplo, [22, 12, 17, 37, 3]). Efectivamente, una subasta iterativa de este tipo accede a las preferencias de los postores haciendo repetidamente el siguiente tipo de consulta de demanda a los postores: Consulta al postor i: un vector de precios de paquetes p = {p(S)}S⊆M; Respuesta: un paquete de artículos S ⊆ M que maximiza vi(S) − p(S). Estos tipos de consultas son muy naturales en un entorno económico, ya que capturan las preferencias reveladas de los postores. Algunas subastas, llamadas subastas de precio por artículo o de precio lineal, especifican un precio pi para cada artículo, y el precio de cualquier conjunto dado S siempre es lineal, p(S) = Σ i∈S pi. Otras subastas, llamadas subastas de precio por paquete, permiten especificar precios arbitrarios (no lineales) p(S) para los paquetes. Otra diferenciación importante entre los modelos de subastas iterativas se basa en si utilizan precios anónimos o no anónimos: En algunas subastas, los precios que se presentan a los postores son siempre los mismos (precios anónimos). En otras subastas (no anónimas), diferentes postores pueden enfrentar diferentes vectores de precios (discriminatorios). En las subastas de precio ascendente, obligar a que los precios sean anónimos puede ser una restricción significativa. En este artículo, nos embarcamos en un análisis sistemático del poder computacional de las subastas iterativas basadas en consultas de demanda. No buscamos presentar subastas para uso práctico, sino más bien entender las limitaciones y posibilidades de este tipo de subastas. En la primera parte de este documento, nuestra pregunta principal es ¿qué se puede hacer utilizando un número polinómico de este tipo de consultas? Es decir, polinomial en los parámetros principales del problema: n, m y el número de bits t necesarios para representar un único valor vi(S). Ten en cuenta que desde un punto de vista algorítmico estamos hablando de algoritmos de tiempo sublineal: el tamaño de la entrada aquí es realmente n(2m − 1) números, las descripciones de las funciones de valoración de todos los postores. Hay dos aspectos de eficiencia computacional en estos contextos: el primero es la comunicación con los postores, es decir, la cantidad de consultas realizadas, y el segundo es la usual tratabilidad computacional. Nuestros límites inferiores dependerán solo del número de consultas y se mantendrán independientemente de cualquier suposición computacional como P = NP. Nuestros límites superiores siempre serán computacionalmente eficientes tanto en términos del número de consultas como en términos de computación regular. Como se mencionó, este artículo se centra en el único aspecto de la <br>obtención de preferencias</br> y en sus consecuencias computacionales, sin abordar cuestiones de incentivos. Esto refuerza nuestros límites inferiores, pero significa que los límites superiores también requieren evaluación desde esta perspectiva antes de ser utilizados en cualquier subasta combinatoria real. La segunda parte de este documento estudia el poder de las subastas de precio ascendente. Las subastas ascendentes son subastas iterativas donde los precios publicados no pueden disminuir con el tiempo. En este trabajo, intentamos analizar sistemáticamente qué significan las diferencias entre varios modelos de subastas ascendentes. Intentamos responder a las siguientes preguntas: (i) ¿Qué modelos de subastas ascendentes pueden encontrar la asignación óptima, y para qué clases de valoraciones? (ii) En casos donde la asignación óptima no puede ser determinada por subastas ascendentes, ¿qué tan bien pueden estas subastas aproximar el bienestar social? (iii) ¿Cómo se comparan los diferentes modelos de subastas ascendentes? ¿Son algunos modelos computacionalmente más fuertes que otros? Las subastas ascendentes han sido ampliamente estudiadas en la literatura (ver la encuesta reciente de Parkes [35]). La mayor parte de este trabajo presentó límites superiores, es decir, mecanismos propuestos con precios ascendentes y analizó sus propiedades. Un resultado que se acerca más al nuestro es el de Gul y Stacchetti [17], quienes demostraron que ninguna subasta de precio ascendente de artículo puede siempre determinar los precios VCG, incluso para valoraciones de sustitutos. Nuestro marco es más general que la línea tradicional de investigación que se concentra en la asignación final y observamos, sin embargo, que alguna propiedad de incentivo débil viene de forma gratuita en las subastas de consulta de demanda, ya que los jugadores miopes responderán todas las consultas de demanda de manera veraz. También observamos que en algunos casos (¡pero no siempre!) los problemas de incentivos pueden ser manejados de forma ortogonal a los problemas de <br>obtención de preferencias</br>, por ejemplo, utilizando precios de Vickrey-Clarke-Groves (VCG) (por ejemplo, [4, 34]). Además, discutimos este resultado en la Sección 5.3. Subastas iterativas Subastas de demanda Subastas de precio de artículo Subastas de precio anónimo Subastas ascendentes 1 2 3 4 5 6 97 8 10 Figura 1: El diagrama clasifica las siguientes subastas según sus propiedades: (1) La adaptación [12] para la subasta de Kelso & Crawford [22]. (2) La Subasta de Proxy [3] de Ausubel & Milgrom. (3) iBundle(3) de Parkes & Ungar [34]. (4) iBundle(2) de Parkes & Ungar [37]. (5) Nuestra adaptación descendente para la aproximación de 2 para valoraciones submodulares por [25] (ver Subsección 5.4). (6) La subasta de Ausubel [4] para valoraciones de sustitutos. (7) La adaptación de Nisan & Segal [32] de la aproximación O( √ m) por [26]. (8) La subasta de artículo duplicado por [5]. (9) Subasta para fórmulas de Leer-Una-Vez por [43]. (10) La Subasta AkBA por Wurman & Wellman [42]. pagos y en particular, en alcanzar equilibrios walrasianos o equilibrios competitivos. Se sabe que existe un equilibrio walrasiano en el caso de las valoraciones de sustitutos, y se sabe que es imposible para cualquier clase más amplia de valoraciones [16]. Esto no descarta otras asignaciones mediante subastas ascendentes: en este documento consideramos las subastas como un proceso computacional donde el resultado, tanto la asignación como los pagos, pueden determinarse según todos los datos recopilados a lo largo de la subasta; Este marco general refuerza nuestros resultados negativos. Encontramos el estudio de las subastas ascendentes atractivo por diversas razones. Primero, las subastas ascendentes son ampliamente utilizadas en muchos contextos de la vida real, desde las subastas de espectro de la FCC hasta casi cualquier sitio web de comercio electrónico (por ejemplo, [2, 1]). De hecho, esta es quizás la forma más directa de vender artículos: preguntar a los postores qué les gustaría comprar a ciertos precios, y aumentar los precios de los productos con alta demanda. Las subastas ascendentes también se consideran más intuitivas para muchos postores, y se cree que aumentan la confianza de los postores en el subastador, ya que ven el resultado que emerge gradualmente de las respuestas de los postores. Las subastas ascendentes también tienen otras propiedades económicas deseadas, por ejemplo, implican una revelación de información menor (considere, por ejemplo, las subastas inglesas frente a las subastas de segundo precio sellado). 1.1 Trabajo Existente Muchos mecanismos de subasta combinatoria iterativos dependen de consultas de demanda (ver la encuesta en [35]). La Figura 1 muestra un equilibrio walrasiano como un vector de precios de los artículos para los cuales todos los artículos se venden cuando cada postor recibe un conjunto en su conjunto de demanda. En algunos diseños de subasta recientes (por ejemplo, [4, 28]), los pagos no son necesariamente los precios finales de las subastas. Familia de valoración Límite superior Referencia Límite inferior Referencia General min(n, O( √ m)) [26], Sección 4.2 min(n, m1/2− ) [32] Sustitutos 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subaditiva O(logm) [13] 2 [13] k-duplicados O(m1/k+1 ) [14] O(m1/k+1 ) [14] Adquisiciones ln m [32] (log m)/2 [29, 32] Figura 2: Los mejores factores de aproximación actualmente alcanzables por subastas combinatorias computacionalmente eficientes, para varias clases de valoraciones. Todos los límites inferiores en la tabla se aplican a todas las subastas iterativas (excepto la marcada con *); todos los límites superiores en la tabla se logran con consultas de demanda de precio de artículo. Categoriza las clases básicas de subastas implicadas por combinaciones de las propiedades anteriores y clasifica algunas de las subastas propuestas en la literatura de acuerdo con esta clasificación. Para nuestros propósitos, dos familias de estas subastas sirven como los principales puntos de partida motivadores: la primera son las subastas de precio de artículo ascendente de [22, 17] que con eficiencia computacional encuentran una asignación óptima entre valoraciones de sustitutos (brutos), y la segunda son las subastas de precio de paquete ascendente de [37, 3] que encuentran una asignación óptima entre valoraciones generales, pero no necesariamente con eficiencia computacional. El límite inferior principal en esta área, debido a [32], establece que, de hecho, debido a los requisitos de comunicación inherentes, no es posible que ninguna subasta iterativa encuentre la asignación óptima entre valoraciones generales con un número subexponencial de consultas. Un límite inferior exponencial similar fue demostrado en [32] también para aproximar de manera óptima la asignación dentro de un factor de m1/2−. Se conocen varios límites inferiores y superiores para la aproximación de algunas clases naturales de valoraciones, los cuales se resumen en la Figura 2. En [32], también se muestra la universalidad de las consultas de demanda: cualquier protocolo de comunicación no determinista para encontrar una asignación que optimice el bienestar social puede convertirse en uno que solo utilice consultas de demanda (con precios de paquetes). En [41] esto también se generalizó a protocolos no deterministas para encontrar asignaciones que satisfacen otros tipos naturales de requisitos económicos (por ejemplo, eficiencia social aproximada, ausencia de envidia). Sin embargo, en [33] se demostró que esta completitud de las consultas de demanda solo se cumple en el entorno no determinista, mientras que en el entorno determinista habitual, las consultas de demanda (incluso con precios de paquetes) pueden ser exponencialmente más débiles que la comunicación general. Las subastas de precio por paquete son una generalización de las subastas de precio por artículo (más naturales e intuitivas). Se sabe que las subastas de precio de artículo pueden ser exponencialmente más débiles: un buen ejemplo es el caso de valoraciones que son un XOR de k paquetes, donde k es pequeño (digamos, polinómico). Lahaie y Parkes [24] muestran una subasta de precio de paquete económicamente eficiente que utiliza un número polinómico de consultas siempre que k sea polinómico. Por el contrario, [7] muestra que existen valoraciones que son XORs de k = √ m paquetes, de tal manera que cualquier subasta de precio de artículo que encuentre una asignación óptima entre ellos requiere un número exponencial de consultas. Estos resultados forman parte de una línea reciente de investigación ([7, 43, 24, 40]) que estudia el problema de la <br>obtención de preferencias</br> en subastas combinatorias y su relación con el problema de obtención completo (es decir, aprender las valoraciones exactas de los postores). Estas son valoraciones donde los postores tienen valores para k paquetes específicos, y el valor de cada conjunto es el valor máximo de uno de estos paquetes que contiene. Estos documentos adaptan métodos de la teoría del aprendizaje automático al entorno de subastas combinatorias. El problema de la <br>obtención de preferencias</br> y el problema de la obtención completa se relacionan con un problema bien estudiado en microeconomía conocido como el problema de integrabilidad (ver, por ejemplo, [27]). ",
            "candidates": [],
            "error": [
                [
                    "la obtención de preferencias",
                    "obtención de preferencias",
                    "obtención de preferencias",
                    "obtención de preferencias",
                    "obtención de preferencias"
                ]
            ]
        },
        "ascend auction": {
            "translated_key": "subasta ascendente",
            "is_in_text": false,
            "original_annotated_sentences": [
                "On the Computational Power of Iterative Auctions∗ [Extended Abstract] Liad Blumrosen School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel liad@cs.huji.ac.il Noam Nisan School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel noam@cs.huji.ac.il ABSTRACT We embark on a systematic analysis of the power and limitations of iterative combinatorial auctions.",
                "Most existing iterative combinatorial auctions are based on repeatedly suggesting prices for bundles of items, and querying the bidders for their demand under these prices.",
                "We prove a large number of results showing the boundaries of what can be achieved by auctions of this kind.",
                "We first focus on auctions that use a polynomial number of demand queries, and then we analyze the power of different kinds of ascending-price auctions.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION Combinatorial auctions have recently received a lot of attention.",
                "In a combinatorial auction, a set M of m nonidentical items are sold in a single auction to n competing bidders.",
                "The bidders have preferences regarding the bundles of items that they may receive.",
                "The preferences of bidder i are specified by a valuation function vi : 2M → R+ , where vi(S) denotes the value that bidder i attaches to winning the bundle of items S. We assume free disposal, i.e., that the vis are monotone non-decreasing.",
                "The usual goal of the auctioneer is to optimize the social welfare P i vi(Si), where the allocation S1...Sn must be a partition of the items.",
                "Applications include many complex resource allocation problems and, in fact, combinatorial auctions may be viewed as the common abstraction of many complex resource allocation problems.",
                "Combinatorial auctions face both economic and computational difficulties and are a central problem in the recently active border of economic theory and computer science.",
                "A forthcoming book [11] addresses many of the issues involved in the design and implementation of combinatorial auctions.",
                "The design of a combinatorial auction involves many considerations.",
                "In this paper we focus on just one central issue: the communication between bidders and the allocation mechanism - preference elicitation.",
                "Transferring all information about bidders preferences requires an infeasible (exponential in m) amount of communication.",
                "Thus, direct revelation auctions in which bidders simply declare their preferences to the mechanism are only practical for very small auction sizes or for very limited families of bidder preferences.",
                "We have therefore seen a multitude of suggested iterative auctions in which the auction protocol repeatedly interacts with the different bidders, aiming to adaptively elicit enough information about the bidders preferences as to be able to find a good (optimal or close to optimal) allocation.",
                "Most of the suggested iterative auctions proceed by maintaining temporary prices for the bundles of items and repeatedly querying the bidders as to their preferences between the bundles under the current set of prices, and then updating the set of bundle prices according to the replies received (e.g., [22, 12, 17, 37, 3]).",
                "Effectively, such an iterative auction accesses the bidders preferences by repeatedly making the following type of demand query to bidders: Query to bidder i: a vector of bundle prices p = {p(S)}S⊆M ; Answer: a bundle of items S ⊆ M that maximizes vi(S) − p(S)..",
                "These types of queries are very natural in an economic setting as they capture the revealed preferences of the bidders.",
                "Some auctions, called item-price or linear-price auctions, specify a price pi for each item, and the price of any given bundle S is always linear, p(S) = P i∈S pi.",
                "Other auctions, called bundle-price auctions, allow specifying arbitrary (non-linear) prices p(S) for bundles.",
                "Another important differentiation between models of iterative auctions is 29 based on whether they use anonymous or non-anonymous prices: In some auctions the prices that are presented to the bidders are always the same (anonymous prices).",
                "In other auctions (non-anonymous), different bidders may face different (discriminatory) vectors of prices.",
                "In ascending-price auctions, forcing prices to be anonymous may be a significant restriction.",
                "In this paper, we embark on a systematic analysis of the computational power of iterative auctions that are based on demand queries.",
                "We do not aim to present auctions for practical use but rather to understand the limitations and possibilities of these kinds of auctions.",
                "In the first part of this paper, our main question is what can be done using a polynomial number of these types of queries?",
                "That is, polynomial in the main parameters of the problem: n, m and the number of bits t needed for representing a single value vi(S).",
                "Note that from an algorithmic point of view we are talking about sub-linear time algorithms: the input size here is really n(2m − 1) numbers - the descriptions of the valuation functions of all bidders.",
                "There are two aspects to computational efficiency in these settings: the first is the communication with the bidders, i.e., the number of queries made, and the second is the usual computational tractability.",
                "Our lower bounds will depend only on the number of queriesand hold independently of any computational assumptions like P = NP.",
                "Our upper bounds will always be computationally efficient both in terms of the number of queries and in terms of regular computation.",
                "As mentioned, this paper concentrates on the single aspect of preference elicitation and on its computational consequences and does not address issues of incentives.",
                "This strengthens our lower bounds, but means that the upper bounds require evaluation from this perspective also before being used in any real combinatorial auction.1 The second part of this paper studies the power of ascending -price auctions.",
                "Ascending auctions are iterative auctions where the published prices cannot decrease in time.",
                "In this work, we try to systematically analyze what do the differences between various models of ascending auctions mean.",
                "We try to answer the following questions: (i) Which models of ascending auctions can find the optimal allocation, and for which classes of valuations? (ii) In cases where the optimal allocation cannot be determined by ascending auctions, how well can such auctions approximate the social welfare? (iii) How do the different models for ascending auctions compare?",
                "Are some models computationally stronger than others?",
                "Ascending auctions have been extensively studied in the literature (see the recent survey by Parkes [35]).",
                "Most of this work presented upper bounds, i.e., proposed mechanisms with ascending prices and analyzed their properties.",
                "A result which is closer in spirit to ours, is by Gul and Stacchetti [17], who showed that no item-price ascending auction can always determine the VCG prices, even for substitutes valuations.2 Our framework is more general than the traditional line of research that concentrates on the final allocation and 1 We do observe however that some weak incentive property comes for free in demand-query auctions since myopic players will answer all demand queries truthfully.",
                "We also note that in some cases (but not always!) the incentives issues can be handled orthogonally to the preference elicitation issues, e.g., by using Vickrey-Clarke-Groves (VCG) prices (e.g., [4, 34]). 2 We further discuss this result in Section 5.3.",
                "Iterative auctions Demand auctions Item-price auctions Anonymous price auctions Ascending auctions 1 2 3 4 5 6 97 8 10 Figure 1: The diagram classifies the following auctions according to their properties: (1) The adaptation [12] for Kelso & Crawfords [22] auction. (2) The Proxy Auction [3] by Ausubel & Milgrom. (3) iBundle(3) by Parkes & Ungar [34]. (4) iBundle(2) by Parkes & Ungar [37]. (5) Our descending adaptation for the 2-approximation for submodular valuations by [25] (see Subsection 5.4). (6) Ausubels [4] auction for substitutes valuations. (7) The adaptation by Nisan & Segal [32] of the O( √ m) approximation by [26]. (8) The duplicate-item auction by [5]. (9) Auction for Read-Once formulae by [43]. (10) The AkBA Auction by Wurman & Wellman [42]. payments and in particular, on reaching Walrasian equilibria or Competitive equilibria.",
                "A Walrasian equilibrium3 is known to exist in the case of Substitutes valuations, and is known to be impossible for any wider class of valuations [16].",
                "This does not rule out other allocations by ascending auctions: in this paper we view the auctions as a computational process where the outcome - both the allocation and the payments - can be determined according to all the data elicited throughout the auction; This general framework strengthens our negative results.4 We find the study of ascending auctions appealing for various reasons.",
                "First, ascending auctions are widely used in many real-life settings from the FCC spectrum auctions [15] to almost any e-commerce website (e.g., [2, 1]).",
                "Actually, this is maybe the most straightforward way to sell items: ask the bidders what would they like to buy under certain prices, and increase the prices of over-demanded goods.",
                "Ascending auctions are also considered more intuitive for many bidders, and are believed to increase the trust of the bidders in the auctioneer, as they see the result gradually emerging from the bidders responses.",
                "Ascending auctions also have other desired economic properties, e.g., they incur smaller information revelation (consider, for example, English auctions vs. second-price sealed bid auctions). 1.1 Extant Work Many iterative combinatorial auction mechanisms rely on demand queries (see the survey in [35]).",
                "Figure 1 summa3 A Walrasian equilibrium is vector of item prices for which all the items are sold when each bidder receives a bundle in his demand set. 4 In few recent auction designs (e.g., [4, 28]) the payments are not necessarily the final prices of the auctions. 30 Valuation family Upper bound Reference Lower bound Reference General min(n, O( √ m)) [26], Section 4.2 min(n, m1/2− ) [32] Substitutes 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subadditive O(logm) [13] 2 [13] k-duplicates O(m1/k+1 ) [14] O(m1/k+1 ) [14] Procurement ln m [32] (log m)/2 [29, 32] Figure 2: The best approximation factors currently achievable by computationally-efficient combinatorial auctions, for several classes of valuations.",
                "All lower bounds in the table apply to all iterative auctions (except the one marked by *); all upper bounds in the table are achieved with item-price demand queries. rizes the basic classes of auctions implied by combinations of the above properties and classifies some of the auctions proposed in the literature according to this classification.",
                "For our purposes, two families of these auctions serve as the main motivating starting points: the first is the ascending item-price auctions of [22, 17] that with computational efficiency find an optimal allocation among (gross) substitutes valuations, and the second is the ascending bundleprice auctions of [37, 3] that find an optimal allocation among general valuations - but not necessarily with computational efficiency.",
                "The main lower bound in this area, due to [32], states that indeed, due to inherent communication requirements, it is not possible for any iterative auction to find the optimal allocation among general valuations with sub-exponentially many queries.",
                "A similar exponential lower bound was shown in [32] also for even approximating the optimal allocation to within a factor of m1/2− .",
                "Several lower bounds and upper bounds for approximation are known for some natural classes of valuations - these are summarized in Figure 2.",
                "In [32], the universal generality of demand queries is also shown: any non-deterministic communication protocol for finding an allocation that optimizes the social welfare can be converted into one that only uses demand queries (with bundle prices).",
                "In [41] this was generalized also to nondeterministic protocols for finding allocations that satisfy other natural types of economic requirements (e.g., approximate social efficiency, envy-freeness).",
                "However, in [33] it was demonstrated that this completeness of demand queries holds only in the nondeterministic setting, while in the usual deterministic setting, demand queries (even with bundle prices) may be exponentially weaker than general communication.",
                "Bundle-price auctions are a generalization of (the more natural and intuitive) item-price auctions.",
                "It is known that indeed item-price auctions may be exponentially weaker: a nice example is the case of valuations that are a XOR of k bundles5 , where k is small (say, polynomial).",
                "Lahaie and Parkes [24] show an economically-efficient bundle-price auction that uses a polynomial number of queries whenever k is polynomial.",
                "In contrast, [7] show that there exist valuations that are XORs of k = √ m bundles such that any item-price auction that finds an optimal allocation between them requires exponentially many queries.",
                "These results are part of a recent line of research ([7, 43, 24, 40]) that study the preference elicitation problem in combinatorial auctions and its relation to the full elicitation problem (i.e., learn5 These are valuations where bidders have values for k specific packages, and the value of each bundle is the maximal value of one of these packages that it contains. ing the exact valuations of the bidders).",
                "These papers adapt methods from machine-learning theory to the combinatorialauction setting.",
                "The preference elicitation problem and the full elicitation problem relate to a well studied problem in microeconomics known as the integrability problem (see, e.g., [27]).",
                "This problem studies if and when one can derive the utility function of a consumer from her demand function.",
                "Paper organization: Due to the relatively large number of results we present, we start with a survey of our new results in Section 2.",
                "After describing our formal model in Section 3, we present our results concerning the power of demand queries in Section 4.",
                "Then, we describe the power of item-price ascending auctions (Section 5) and bundle-price ascending auctions (Section 6).",
                "Readers who are mainly interested in the self-contained discussion of ascending auctions can skip Section 4.",
                "Missing proofs from Section 4 can be found in part I of the full paper ([8]).",
                "Missing proofs from Sections 5 and 6 can be found in part II of the full paper ([9]). 2.",
                "A SURVEY OF OUR RESULTS Our systematic analysis is composed of the combination of a rather large number of results characterizing the power and limitations of various classes of auctions.",
                "In this section, we will present an exposition describing our new results.",
                "We first discuss the power of demand-query iterative auctions, and then we turn our attention to ascending auctions.",
                "Figure 3 summarizes some of our main results. 2.1 Demand Queries Comparison of query types We first ask what other natural types of queries could we imagine iterative auctions using?",
                "Here is a list of such queries that are either natural, have been used in the literature, or that we found useful. 1.",
                "Value query: The auctioneer presents a bundle S, the bidder reports his value v(S) for this bundle. 2.",
                "Marginal-value query: The auctioneer presents a bundle A and an item j, the bidder reports how much he is willing to pay for j, given that he already owns A, i.e., v(j|A) = v(A ∪ {j}) − v(A). 3.",
                "Demand query (with item prices): The auctioneer presents a vector of item prices p1...pm; the bidder reports his demand under these prices, i.e., some set S that maximizes v(S) − P i∈S pi.6 6 A tie breaking rule should be specified.",
                "All of our results 31 Communication Constraint Can find an optimal allocation?",
                "Upper bound for welfare approx.",
                "Lower bound for welfare approx.",
                "Item-Price Demand Queries Yes 1 1 Poly.",
                "Communication No [32] min(n, O(m1/2 )) [26] min(n, m1/2− ) [32] Poly.",
                "Item-Price Demand Queries No [32] min(n, O(m1/2 )) min(n, m1/2− ) [32] Poly.",
                "Value Queries No [32] O( m√ log m ) [19] O( m log m ) Anonymous Item-Price AA No - min(O(n), O(m1/2− )) Non-anonymous Item-Price AA No -Anonymous Bundle-Price AA No - min(O(n), O(m1/2− )) Non-anonymous Bundle-Price AA Yes [37] 1 1 Poly Number of Item-Price AA No min(n, O(m1/2 ))Figure 3: This paper studies the economic efficiency of auctions that follow certain communication constraints.",
                "For each class of auctions, the table shows whether the optimal allocation can be achieved, or else, how well can it be approximated (both upper bounds and lower bounds).",
                "New results are highlighted.",
                "Abbreviations: Poly. (Polynomial number/size), AA (ascending auctions). - means that nothing is currently known except trivial solutions. 4.",
                "Indirect-utility query: The auctioneer presents a set of item prices p1...pm, and the bidder responds with his indirect-utility under these prices, that is, the highest utility he can achieve from a bundle under these prices: maxS⊆M (v(S) − P i∈S pi).7 5.",
                "Relative-demand query: the auctioneer presents a set of non-zero prices p1...pm, and the bidder reports the bundle that maximizes his value per unit of money, i.e., some set that maximizes v(S)P i∈S pi .8 Theorem: Each of these queries can be efficiently (i.e., in time polynomial in n, m, and the number of bits of precision t needed to represent a single value vi(S)) simulated by a sequence of demand queries with item prices.",
                "In particular this shows that demand queries can elicit all information about a valuation by simulating all 2m −1 value queries.",
                "We also observe that value queries and marginalvalue queries can simulate each other in polynomial time and that demand queries and indirect-utility queries can also simulate each other in polynomial time.",
                "We prove that exponentially many value queries may be needed in order to simulate a single demand query.",
                "It is interesting to note that for the restricted class of substitutes valuations, demand queries may be simulated by polynomial number of value queries [6].",
                "Welfare approximation The next question that we ask is how well can a computationally-efficient auction that uses only demand queries approximate the optimal allocation?",
                "Two separate obstacles are known: In [32], a lower bound of min(n, m1/2− ), for any fixed > 0, was shown for the approximation factor apply for any fixed tie breaking rule. 7 This is exactly the utility achieved by the bundle which would be returned in a demand query with the same prices.",
                "This notion relates to the Indirect-utility function studied in the Microeconomic literature (see, e.g., [27]). 8 Note that when all the prices are 1, the bidder actually reports the bundle with the highest per-item price.",
                "We found this type of query useful, for example, in the design of the approximation algorithm described in Figure 5 in Section 4.2. obtained using any polynomial amount of communication.",
                "A computational bound with the same value applies even for the case of single-minded bidders, but under the assumption of NP = ZPP [39].",
                "As noted in [32], the computationallyefficient greedy algorithm of [26] can be adapted to become a polynomial-time iterative auction that achieves a nearly matching approximation factor of min(n, O( √ m)).",
                "This iterative auction may be implemented with bundle-price demand queries but, as far as we see, not as one with item prices.",
                "Since in a single bundle-price demand query an exponential number of prices can be presented, this algorithm can have an exponential communication cost.",
                "In Section 4.2, we describe a different item-price auction that achieves the same approximation factor with a polynomial number of queries (and thus with a polynomial communication).",
                "Theorem: There exists a computationally-efficient iterative auction with item-price demand queries that finds an allocation that approximates the optimal welfare between arbitrary valuations to within a factor of min(n, O( √ m)).",
                "One may then attempt obtaining such an approximation factor using iterative auctions that use only the weaker value queries.",
                "However, we show that this is impossible: Theorem: Any iterative auction that uses a polynomial (in n and m) number of value queries can not achieve an approximation factor that is better than O( m log m ).9 Note however that auctions with only value queries are not completely trivial in power: the bundling auctions of Holzman et al. [19] can easily be implemented by a polynomial number of value queries and can achieve an approximation factor of O( m√ log m ) by using O(log m) equi-sized bundles.",
                "We do not know how to close the (tiny) gap between this upper bound and our lower bound.",
                "Representing bundle-prices We then deal with a critical issue with bundle-price auctions that was side-stepped by our model, as well as by all previous works that used bundle-price auctions: how are 9 This was also proven independently by Shahar Dobzinski and Michael Schapira. 32 the bundle prices represented?",
                "For item-price auctions this is not an issue since a query needs only to specify a small number, m, of prices.",
                "In bundle-price auctions that situation is more difficult since there are exponentially many bundles that require pricing.",
                "Our basic model (like all previous work that used bundle prices, e.g., [37, 34, 3]), ignores this issue, and only requires that the prices be determined, somehow, by the protocol.",
                "A finer model would fix a specific language for denoting bundle prices, force the protocol to represent the bundle-prices in this language, and require that the representations of the bundle-prices also be polynomial.",
                "What could such a language for denoting prices for all bundles look like?",
                "First note that specifying a price for each bundle is equivalent to specifying a valuation.",
                "Second, as noted in [31], most of the proposed bidding languages are really just languages for representing valuations, i.e., a syntactic representation of valuations - thus we could use any of them.",
                "This point of view opens up the general issue of which language should be used in bundle-price auctions and what are the implications of this choice.",
                "Here we initiate this line of investigation.",
                "We consider bundle-price auctions where the prices must be given as a XOR-bid, i.e., the protocol must explicitly indicate the price of every bundle whose value is different than that of all of its proper subsets.",
                "Note that all bundle-price auctions that do not explicitly specify a bidding language must implicitly use this language or a weaker one, since without a specific language one would need to list prices for all bundles, perhaps except for trivial ones (those with value 0, or more generally, those with a value that is determined by one of their proper subsets.)",
                "We show that once the representation length of bundle prices is taken into account (using the XOR-language), bundle-price auctions are no more strictly stronger than item-price auctions.",
                "Define the cost of an iterative auction as the total length of the queries and answers used throughout the auction (in the worst case).",
                "Theorem: For some class of valuations, bundle price auctions that use the XOR-language require an exponential cost for finding the optimal allocation.",
                "In contrast, item-price auctions can find the optimal allocation for this class within polynomial cost.10 This put doubts on the applicability of bundle-price auctions like [3, 37], and it may justify the use of hybrid pricing methods such as Ausubel, Cramton and Milgroms Clock-Proxy auction ([10]).",
                "Demand queries and linear programs The winner determination problem in combinatorial auctions may be formulated as an integer program.",
                "In many cases solving the linear-program relaxation of this integer program is useful: for some restricted classes of valuations it finds the optimum of the integer program (e.g., substitute valuations [22, 17]) or helps approximating the optimum (e.g., by randomized rounding [13, 14]).",
                "However, the linear program has an exponential number of variables.",
                "Nisan and Segal [32] observed the surprising fact that despite the ex10 Our proof relies on the sophisticated known lower bounds for constant depth circuits.",
                "We were not able to find an elementary proof. ponential number of variables, this linear program may be solved within polynomial communication.",
                "The basic idea is to solve the dual program using the Ellipsoid method (see, e.g., [20]).",
                "The dual program has a polynomial number of variables, but an exponential number of constraints.",
                "The Ellipsoid algorithm runs in polynomial time even on such programs, provided that a separation oracle is given for the set of constraints.",
                "Surprisingly, such a separation oracle can be implemented using a single demand query (with item prices) to each of the bidders.",
                "The treatment of [32] was somewhat ad-hoc to the problem at hand (the case of substitute valuations).",
                "Here we give a somewhat more general form of this important observation.",
                "Let us call the following class of linear programs generalized-winner-determination-relaxation (GWDR) LPs: Maximize X i∈N,S⊆M wi xi,S vi(S) s.t.",
                "X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M The case where wi = 1, di = 1, qj = 1 (for every i, j) is the usual linear relaxation of the winner determination problem.",
                "More generally, wi may be viewed as the weight given to bidder is welfare, qj may be viewed as the quantity of units of good j, and di may be viewed as duplicity of the number of bidders of type i. Theorem: Any GWDR linear program may be solved in polynomial time (in n, m, and the number of bits of precision t) using only demand queries with item prices.11 2.2 Ascending Auctions Ascending item-price auctions: It is well known that the item-price ascending auctions of Kelso and Crawford [22] and its variants [12, 16] find the optimal allocation as long as all players valuations have the substitutes property.",
                "The obvious question is whether the optimal allocation can be found for a larger class of valuations.",
                "Our main result here is a strong negative result: Theorem: There is a 2-item 2-player problem where no ascending item-price auction can find the optimal allocation.",
                "This is in contrast to both the power of bundle-price ascending auctions and to the power of general item-price demand queries (see above), both of which can always find the optimal allocation and in fact even provide full preference elicitation.",
                "The same proof proves a similar impossibility result for other types of auctions (e.g., descending auctions, non-anonymous auctions).",
                "More extension of this result: • Eliciting some classes of valuations requires an exponential number of ascending item-price trajectories. 11 The produced optimal solution will have polynomial support and thus can be listed fully. 33 • At least k − 1 ascending item-price trajectories are needed to elicit XOR formulae with k terms.",
                "This result is in some sense tight, since we show that any k-term XOR formula can be fully elicited by k−1 nondeterministic (i.e., when some exogenous teacher instructs the auctioneer on how to increase the prices) ascending auctions.12 We also show that item-price ascending auctions and iterative auctions that are limited to a polynomial number of queries (of any kind, not necessarily ascending) are incomparable in their power: ascending auctions, with small enough increments, can elicit the preferences in cases where any polynomial number of queries cannot.",
                "Motivated by several recent papers that studied the relation between eliciting and fully-eliciting the preferences in combinatorial auctions (e.g., [7, 24]), we explore the difference between these problems in the context of ascending auctions.",
                "We show that although a single ascending auction can determine the optimal allocation among any number of bidders with substitutes valuations, it cannot fully-elicit such a valuation even for a single bidder.",
                "While it was shown in [25] that the set of substitutes valuations has measure zero in the space of general valuations, its dimension is not known, and in particular it is still open whether a polynomial amount of information suffices to describe a substitutes valuation.",
                "While our result may be a small step in that direction (a polynomial full elicitation may still be possible with other communication protocols), we note that our impossibility result also holds for valuations in the class OXS defined by [25], valuations that we are able to show have a compact representation.",
                "We also give several results separating the power of different models for ascending combinatorial auctions that use item-prices: we prove, not surprisingly, that adaptive ascending auctions are more powerful than oblivious ascending auctions and that non-deterministic ascending auctions are more powerful than deterministic ascending auctions.",
                "We also compare different kinds of non-anonymous auctions (e.g., simultaneous or sequential), and observe that anonymous bundle-price auctions and non-anonymous item-price auctions are incomparable in their power.",
                "Finally, motivated by Dutch auctions, we consider descending auctions, and how they compare to ascending ones; we show classes of valuations that can be elicited by ascending item-price auctions but not by descending item-price auctions, and vice versa.",
                "Ascending bundle-price auctions: All known ascending bundle-price auctions that are able to find the optimal allocation between general valuations (with free disposal) use non-anonymous prices.",
                "Anonymous ascending-price auctions (e.g., [42, 21, 37]) are only known to be able to find the optimal allocation among superadditive valuations or few other simple classes ([36]).",
                "We show that this is no mistake: Theorem: No ascending auction with anonymous prices can find the optimal allocation between general valuations. 12 Non-deterministic computation is widely used in CS and also in economics (e.g, a Walrasian equilibrium or [38]).",
                "In some settings, deterministic and non-deterministic models have equal power (e.g., computation with finite automata).",
                "This bound is regardless of the running time, and it also holds for descending auctions and non-deterministic auctions.",
                "We strengthen this result significantly by showing that anonymous ascending auctions cannot produce a better than O( √ m) approximation - the approximation ratio that can be achieved with a polynomial number of queries ([26, 32]) and, as mentioned, with a polynomial number of item-price demand queries.",
                "The same lower bound clearly holds for anonymous item-price ascending auctions since such auctions can be simulated by anonymous bundle-price ascending auctions.",
                "We currently do not have any lower bound on the approximation achievable by non-anonymous item-price ascending auctions.",
                "Finally, we study the performance of the existing computationally-efficient ascending auctions.",
                "These protocols ([37, 3]) require exponential time in the worst case, and this is unavoidable as shown by [32].",
                "However, we also observe that these auctions, as well as the whole class of similar ascending bundle-price auctions, require an exponential time even for simple additive valuations.",
                "This is avoidable and indeed the ascending item-price auctions of [22] can find the optimal allocation for these simple valuations with polynomial communication. 3.",
                "THE MODEL 3.1 Discrete Auctions for Continuous Values Our model aims to capture iterative auctions that operate on real-valued valuations.",
                "There is a slight technical difficulty here in bridging the gap between the discrete nature of an iterative auction, and the continuous nature of the valuations.",
                "This is exactly the same problem as in modeling a simple English auction.",
                "There are three standard formal ways to model it: 1.",
                "Model the auction as a continuous process and study its trajectory in time.",
                "For example, the so-called Japanese auction is basically a continuous model of an English model.13 2.",
                "Model the auction as discrete and the valuations as continuously valued.",
                "In this case we introduce a parameter and usually require the auction to produce results that are -close to optimal. 3.",
                "Model the valuations as discrete.",
                "In this case we will assume that all valuations are integer multiples of some small fixed quantity δ, e.g., 1 penny.",
                "All communication in this case is then naturally finite.",
                "In this paper we use the latter formulation and assume that all values are multiples of some δ.",
                "Thus, in some parts of the paper we assume without loss of generality that δ = 1, hence all valuations are integral.",
                "Almost all (if not all) of our results can be translated to the other two models with little effort. 3.2 Valuations A single auctioneer is selling m indivisible non-homogeneous items in a single auction, and let M be the set of these 13 Another similar model is the moving knives model in the cake-cutting literature. 34 items and N be the set of bidders.",
                "Each one of the n bidders in the auction has a valuation function vi : 2m → {0, δ, 2δ, ..., L}, where for every bundle of items S ⊆ M, vi(S) denotes the value of bidder i for the bundle S and is a multiple of δ in the range 0...L. We will sometimes denote the number of bits needed to represent such values in the range 0...L by t = log L. We assume free disposal, i.e., S ⊆ T implies vi(S) ≤ vi(T) and that vi(∅) = 0 for all bidders.",
                "We will mention the following classes of valuations: • A valuation is called sub-modular if for all sets of items A and B we have that v(A ∪ B) + v(A ∩ B) ≤ v(A) + v(B). • A valuation is called super-additive if for all disjoint sets of items A and B we have that v(A∪B) ≥ v(A)+ v(B). • A valuation is called a k-bundle XOR if it can be represented as a XOR combination of at most k atomic bids [30], i.e., if there are at most k bundles Si and prices pi such that for all S, v(S) = maxi|S⊇Si pi.",
                "Such valuations will be denoted by v = (S1 : p1) ⊕ (S2 : p2) ⊕ . . . ⊕ (Sk : pk).14 3.3 Iterative Auctions The auctioneer sets up a protocol (equivalently an algorithm), where at each stage of the protocol some information q - termed the query - is sent to some bidder i, and then bidder i replies with some reply that depends on the query as well as on his own valuation.",
                "In this paper, we assume that we have complete control over the bidders behavior, and thus the protocol also defines a reply function ri(q, vi) that specifies bidder is reply to query q.",
                "The protocol may be adaptive: the query value as well as the queried bidder may depend on the replies received for past queries.",
                "At the end of the protocol, an allocation S1...Sn must be declared, where Si ∩ Sj = ∅ for i = j.",
                "We say that the auction finds an optimal allocation if it finds the allocation that maximizes the social welfareP i vi(Si).",
                "We say that it finds a c-approximation if P i vi(Si) ≥ P i vi(Ti)/c where T1...Tn is an optimal allocation.",
                "The running time of the auction on a given instance of the bidders valuations is the total number of queries made on this instance.",
                "The running time of a protocol is the worst case cost over all instances.",
                "Note that we impose no computational limitations on the protocol or on the players.15 This of course only strengthens our hardness results.",
                "Yet, our positive results will not use this power and will be efficient also in the usual computational sense.",
                "Our goal will be to design computationally-efficient protocols.",
                "We will deem a protocol computationally-efficient if its cost is polynomial in the relevant parameters: the number of bidders n, the number of items m, and t = log L, where L is the largest possible value of a bundle.",
                "However, when we discuss ascending-price auctions and their variants, a computationally-efficient protocol will be required to be 14 For example, v = (abcd : 5) ⊕ (ab : 3) ⊕ (c : 4) denotes the XOR valuation with the terms abcd, ab, c and prices 5, 3, 4 respectively.",
                "For this valuation, v(abcd) = 5, v(abd) = 3, v(abc) = 4. 15 The running time really measures communication costs and not computational running time. pseudo-polynomial, i.e., it should ask a number of queries which is polynomial in m, n and L δ .",
                "This is because that ascending auctions can usually not achieve such running times (consider even the English auction on a single item).16 Note that all of our results give concrete bounds, where the dependence on the parameters is given explicitly; we use the standard big-Oh notation just as a shorthand.",
                "We say than an auction elicits some class V of valuations, if it determines the optimal allocation for any profile of valuations drawn from V ; We say that an auction fully elicits some class of valuations V , if it can fully learn any single valuation v ∈ V (i.e., learn v(S) for every S). 3.4 Demand Queries and Ascending Auctions Most of the paper will be concerned with a common special case of iterative auctions that we term demand auctions.",
                "In such auctions, the queries that are sent to bidders are demand queries: the query specifies a price p(S) ∈ + for each bundle S. The reply of bidder i is simply the set most desired - demanded - under these prices.",
                "Formally, a set S that maximizes vi(S) − p(S).",
                "It may happen that more than one set S maximizes this value.",
                "In which case, ties are broken according to some fixed tie-breaking rule, e.g., the lexicographically first such set is returned.",
                "All of our results hold for any fixed tie-breaking rule.",
                "Ascending auctions are iterative auctions with non-decreasing prices: Definition 1.",
                "In an ascending auction, the prices in the queries to the same bidder can only increase in time.",
                "Formally, let p be a query made for bidder i, and q be a query made for bidder i at a later stage in the protocol.",
                "Then for all sets S, q(S) ≥ p(S).",
                "A similar variant, which we also study and that is also common in real life, is descending auctions, in which prices can only decrease in time.",
                "Note that the term ascending auction refers to an auction with a single ascending trajectory of prices.",
                "It may be useful to define multi-trajectory ascending auctions, in which the prices maybe reset to zero a number of times (see, e.g., [4]).",
                "We consider two main restrictions on the types of allowed demand queries: Definition 2.",
                "Item Prices: The prices in each query are given by prices pj for each item j.",
                "The price of a set S is additive: p(S) = P j∈S pj.",
                "Definition 3.",
                "Anonymous prices: The prices seen by the bidders at any stage in the auction are the same, i.e. whenever a query is made to some bidder, the same query is also made to all other bidders (with the prices unchanged).",
                "In auctions with non-anonymous (discriminatory) prices, each bidder i has personalized prices denoted by pi (S).17 In this paper, all auctions are anonymous unless otherwise specified.",
                "Note that even though in our model valuations are integral (or multiples of some δ), we allow the demand query to 16 Most of the auctions we present may be adapted to run in time polynomial in log L, using a binary-search-like procedure, losing their ascending nature. 17 Note that a non-anonymous auction can clearly be simulated by n parallel anonymous auctions. 35 use arbitrary real numbers in +.",
                "That is, we assume that the increment we use in the ascending auctions may be significantly smaller than δ.",
                "All our hardness results hold for any , even for continuous price increments.",
                "A practical issue here is how will the query be specified: in the general case, an exponential number of prices needs to be sent in a single query.",
                "Formally, this is not a problem as the model does not limit the length of queries in any way - the protocol must simply define what the prices are in terms of the replies received for previous queries.",
                "We look into this issue further in Section 4.3. 4.",
                "THE POWER OF DEMAND QUERIES In this section, we study the power of iterative auctions that use demand queries (not necessarily ascending).",
                "We start by comapring demand queries to other types of queries.",
                "Then, we discuss how well can one approximate the optimal welfare using a polynomial number of demand queries.",
                "We also initiate the study of the representation of bundle-price demand queries, and finally, we show how demand queries help solving the linear-programming relaxation of combinatorial auctions in polynomial time. 4.1 The Power of Different Types of Queries In this section we compare the power of the various types of queries defined in Section 2.",
                "We will present computationally -efficient simulations of these query types using item-price demand queries.",
                "In Section 5.1 we show that these simulations can also be done using item-price ascending auctions.",
                "Lemma 4.1.",
                "A value query can be simulated by m marginalvalue queries.",
                "A marginal-value query can be simulated by two value queries.",
                "Lemma 4.2.",
                "A value query can be simulated by mt demand queries (where t = log L is the number of bits needed to represent a single bundle value).18 As a direct corollary we get that demand auctions can always fully elicit the bidders valuations by simulating all possible 2m − 1 queries and thus elicit enough information for determining the optimal allocation.",
                "Note, however, that this elicitation may be computationally inefficient.",
                "The next lemma shows that demand queries can be exponentially more powerful than value queries.",
                "Lemma 4.3.",
                "An exponential number of value queries may be required for simulating a single demand query.",
                "Indirect utility queries are, however, equivalent in power to demand queries: Lemma 4.4.",
                "An indirect-utility query can be simulated by mt + 1 demand queries.",
                "A demand query can be simulated by m + 1 indirect-utility queries.",
                "Demand queries can also simulate relative-demand queries:19 18 Note that t bundle-price demand queries can easily simulate a value query by setting the prices of all the bundles except S (the bundle with the unknown value) to be L, and performing a binary search on the price of S. 19 Note: although in our model values are integral (our multiples of δ), we allow the query prices to be arbitrary real numV MV D IU RD V 1 2 exp exp exp MV m 1 exp exp exp D mt poly 1 mt+1 poly IU 1 2 m+1 1 poly RD - - - - 1 Figure 4: Each entry in the table specifies how many queries of this row are needed to simulate a query from the relevant column.",
                "Abbreviations: V (value query), MV (marginal-value query), D (demand query), IU (Indirect-utility query), RD (relative demand query).",
                "Lemma 4.5.",
                "Relative-demand queries can be simulated by a polynomial number of demand queries.",
                "According to our definition of relative-demand queries, they clearly cannot simulate even value queries.",
                "Figure 4 summarizes the relations between these query types. 4.2 Approximating the Social Welfare with Value and Demand Queries We know from [32] that iterative combinatorial auctions that only use a polynomial number of queries can not find an optimal allocation among general valuations and in fact can not even approximate it to within a factor better than min{n, m1/2− }.",
                "In this section we ask how well can this approximation be done using demand queries with item prices, or using the weaker value queries.",
                "We show that, using demand queries, the lower bound can be matched, while value queries can only do much worse.",
                "Figure 5 describes a polynomial-time algorithm that achieves a min(n, O( √ m)) approximation ratio.",
                "This algorithm greedily picks the bundles that maximize the bidders per-item value (using relative-demand queries, see Section 4.1).",
                "As a final step, it allocates all the items to a single bidder if it improves the social welfare (this can be checked using value queries).",
                "Since both value queries and relative-demand queries can be simulated by a polynomial number of demand queries with item prices (Lemmas 4.2 and 4.5), this algorithm can be implemented by a polynomial number of demand queries with item prices.20 Theorem 4.6.",
                "The auction described in Figure 5 can be implemented by a polynomial number of demand queries and achieves a min{n, 4 √ m}-approximation for the social welfare.",
                "We now ask how well can the optimal welfare be approximated by a polynomial number of value queries.",
                "First we note that value queries are not completely powerless: In [19] it is shown that if the m items are split into k fixed bundles of size m/k each, and these fixed bundles are auctioned as though each was indivisible, then the social welfare bers, thus we may have bundles with arbitrarily close relative demands.",
                "In this sense the simulation above is only up to any given (and the number of queries is O(log L+log 1 )).",
                "When the relative-demand query prices are given as rational numbers, exact simulation is implied when log is linear in the input length. 20 In the full paper [8], we observe that this algorithm can be implemented by two descending item-price auctions (where we allow removing items along the auction). 36 generated by such an auction is at least m√ k -approximation of that possible in the original auction.",
                "Notice that such an auction can be implemented by 2k − 1 value queries to each bidder - querying the value of each bundle of the fixed bundles.",
                "Thus, if we choose k = log m bundles we get an m√ log m -approximation while still using a polynomial number of queries.",
                "The following lemma shows that not much more is possible using value queries: Lemma 4.7.",
                "Any iterative auction that uses only value queries and distinguishes between k-tuples of 0/1 valuations where the optimal allocation has value 1, and those where the optimal allocation has value k requires at least 2 m k queries.",
                "Proof.",
                "Consider the following family of valuations: for every S, such that |S| > m/2, v(S) = 1, and there exists a single set T, such that for |S| ≤ m/2, v(S) = 1 iff T ⊆ S and v(S) = 0 otherwise.",
                "Now look at the behavior of the protocol when all valuations vi have T = {1...m}.",
                "Clearly in this case the value of the best allocation is 1 since no set of size m 2 or lower has non-zero value for any player.",
                "Fix the sequence of queries and answers received on this k-tuple of valuations.",
                "Now consider the k-tuple of valuations chosen at random as follows: a partition of the m items into k sets T1...Tk each of size m k each is chosen uniformly at random among all such partitions.",
                "Now consider the k-tuple of valuations from our family that correspond to this partition - clearly Ti can be allocated to i, for each i, getting a total value of k. Now look at the protocol when running on these valuations and compare its behavior to the original case.",
                "Note that the answer to a query S to player i differs between the case of Ti and the original case of T = {1...m} only if |S| ≤ m 2 and Ti ⊆ S. Since Ti is distributed uniformly among all sets of size exactly m k , we have that for any fixed query S to player i, where |S| ≤ m 2 , Pr[Ti ⊆ S] ≤ „ |S| m «|Ti| ≤ 2− m k Using the union-bound, if the original sequence of queries was of length less than 2 m k , then with positive probability none of the queries in the sequence would receive a different answer than for the original input tuple.",
                "This is forbidden since the protocol must distinguish between this case and the original case - which cannot happen if all queries receive the same answer.",
                "Hence there must have been at least 2 m k queries for the original tuple of valuations.",
                "We conclude that a polynomial time protocol that uses only value queries cannot obtain a better than O( m log m ) approximation of the welfare: Theorem 4.8.",
                "An iterative auction that uses a polynomial number of value queries cannot achieve better than O( m log m )-approximation for the social welfare.",
                "Proof.",
                "Immediate from Lemma 4.7: achieving any approximation ratio k which is asymptotically greater than m log m needs an exponential number of value queries.",
                "An Approximation Algorithm: Initialization: Let T ← M be the current items for sale.",
                "Let K ← N be the currently participating bidders.",
                "Let S∗ 1 ← ∅, ..., S∗ n ← ∅ be the provisional allocation.",
                "Repeat until T = ∅ or K = ∅: Ask each bidder i in K for the bundle Si that maximizes her per-item value, i.e., Si ∈ argmaxS⊆T vi(S) |S| .",
                "Let i be the bidder with the maximal per-item value, i.e., i ∈ argmaxi∈K vi(Si) |Si| .",
                "Set: s∗ i = si, K = K \\ i, M = M \\ Si Finally: Ask the bidders for their values vi(M) for the grand bundle.",
                "If allocating all the items to some bidder i improves the social welfare achieved so far (i.e., ∃i ∈ N such that vi(M) > P i∈N vi(S∗ i )), then allocate all items to this bidder i.",
                "Figure 5: This algorithm achieves a min{n, 4 √ m}approximation for the social welfare, which is asymptotically the best worst-case approximation possible with polynomial communication.",
                "This algorithm can be implemented with a polynomial number of demand queries. 4.3 The Representation of Bundle Prices In this section we explicitly fix the language in which bundle prices are presented to the bidders in bundle-price auctions.",
                "This language requires the algorithm to explicitly list the price of every bundle with a non-trivial price.",
                "Trivial in this context is a price that is equal to that of one of its proper subsets (which was listed explicitly).",
                "This representation is equivalent to the XOR-language for expressing valuations.",
                "Formally, each query q is given by an expression: q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl).",
                "In this representation, the price demanded for every set S is simply p(S) = max{k=1...l|Sk⊆S}pk.",
                "Definition 4.",
                "The length of the query q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl) is l. The cost of an algorithm is the sum of the lengths of the queries asked during the operation of the algorithm on the worst case input.",
                "Note that under this definition, bundle-price auctions are not necessarily stronger than item-price auctions.",
                "An itemprice query that prices each item for 1, is translated to an exponentially long bundle-price query that needs to specify the price |S| for each bundle S. But perhaps bundle-price auctions can still find optimal allocations whenever itemprice auction can, without directly simulating such queries?",
                "We show that this is not the case: indeed, when the representation length is taken into account, bundle price auctions are sometimes seriously inferior to item price auctions.",
                "Consider the following family of valuations: Each item is valued at 3, except that for some single set S, its value is a bit more: 3|S| + b, where b ∈ {0, 1, 2}.",
                "Note that an item price auction can easily find the optimal allocation between any two such valuations: Set the prices of each item to 3+ ; if the demand sets of the two players are both empty, then b = 0 for both valuations, and an arbitrary allocation is fine.",
                "If one of them is empty and the other non-empty, allocate the non-empty demand set to its bidder, and the rest to the other.",
                "If both demand sets are non-empty then, unless they form an exact partition, we need to see which b is larger, which we can do by increasing the price of a single item in each demand set. 37 We will show that any bundle-price auction that uses only the XOR-language to describe bundle prices requires an exponential cost (which includes the sum of all description lengths of prices) to find an optimal allocation between any two such valuations.",
                "Lemma 4.9.",
                "Every bundle-price auction that uses XORexpressions to denote bundle prices requires 2Ω( √ m) cost in order to find the optimal allocation among two valuations from the above family.",
                "The complication in the proof stems from the fact that using XOR-expressions, the length of the price description depends on the number of bundles whose price is strictly larger than each of their subsets - this may be significantly smaller than the number of bundles that have a non-zero price. (The proof becomes easy if we require the protocol to explicitly name every bundle with non-zero price.)",
                "We do not know of any elementary proof for this lemma (although we believe that one can be found).",
                "Instead we reduce the problem to a well known lower bound in boolean circuit complexity [18] stating that boolean circuits of depth 3 that compute the majority function on m variables require 2Ω( √ m) size. 4.4 Demand Queries and Linear Programming Consider the following linear-programming relaxation for the generalized winner-determination problem in combinatorial auctions (the primal program): Maximize X i∈N,S⊆M wi xi,S vi(S) s.t.",
                "X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M Note that the primal program has an exponential number of variables.",
                "Yet, we will be able to solve it in polynomial time using demand queries to the bidders.",
                "The solution will have a polynomial size support (non-zero values for xi,S), and thus we will be able to describe it in polynomial time.",
                "Here is its dual: Minimize X j∈M qjpj + X i∈N diui s.t. ui + X j∈S pj ≥ wivi(S) ∀i ∈ N, S ⊆ M pi ≥ 0, uj ≥ 0 ∀i ∈ M, j ∈ N Notice that the dual problem has exactly n + m variables but an exponential number of constraints.",
                "Thus, the dual can be solved using the Ellipsoid method in polynomial time - if a separation oracle can be implemented in polynomial time.",
                "Recall that a separation oracle, when given a possible solution, either confirms that it is a feasible solution, or responds with a constraint that is violated by the possible solution.",
                "We construct a separation oracle for solving the dual program, using a single demand query to each of the bidders.",
                "Consider a possible solution (u, p) for the dual program.",
                "We can re-write the constraints of the dual program as: ui/wi ≥ vi(S) − X j∈S pj/wi Now a demand query to bidder i with prices pj/wi reveals exactly the set S that maximizes the RHS of the previous inequality.",
                "Thus, in order to check whether (u, p) is feasible it suffices to (1) query each bidder i for his demand Di under the prices pj/wi; (2) check only the n constraints ui + P j∈Di pj ≥ wivi(Di) (where vi(Di) can be simulated using a polynomial sequence of demand queries as shown in Lemma 4.2).",
                "If none of these is violated then we are assured that (u, p) is feasible; otherwise we get a violated constraint.",
                "What is left to be shown is how the primal program can be solved. (Recall that the primal program has an exponential number of variables.)",
                "Since the Ellipsoid algorithm runs in polynomial time, it encounters only a polynomial number of constraints during its operation.",
                "Clearly, if all other constraints were removed from the dual program, it would still have the same solution (adding constraints can only decrease the space of feasible solutions).",
                "Now take the reduced dual where only the constraints encountered exist, and look at its dual.",
                "It will have the same solution as the original dual and hence of the original primal.",
                "However, look at the form of this dual of the reduced dual.",
                "It is just a version of the primal program with a polynomial number of variables - those corresponding to constraints that remained in the reduced dual.",
                "Thus, it can be solved in polynomial time, and this solution clearly solves the original primal program, setting all other variables to zero. 5.",
                "ITEM-PRICE ASCENDING AUCTIONS In this section we characterize the power of ascending item-price auctions.",
                "We first show that this power is not trivial: such auctions can in general elicit an exponential amount of information.",
                "On the other hand, we show that the optimal allocation cannot always be determined by a single ascending auction, and in some cases, nor by an exponential number of ascending-price trajectories.",
                "Finally, we separate the power of different models of ascending auctions. 5.1 The Power of Item-Price Ascending Auctions We first show that if small enough increments are allowed, a single ascending trajectory of item-prices can elicit preferences that cannot be elicited with polynomial communication.",
                "As mentioned, all our hardness results hold for any increment, even infinitesimal.",
                "Theorem 5.1.",
                "Some classes of valuations can be elicited by item-price ascending auctions, but cannot be elicited by a polynomial number of queries of any kind.",
                "Proof. (sketch) Consider two bidders with v(S) = 1 if |S| > n 2 , v(S) = 0 if |S| < n 2 and every S such that |S| = n 2 has an unknown value from {0, 1}.",
                "Due to [32], determining the optimal allocation here requires exponential communication in the worst case.",
                "Nevertheless, we show (see [9]) that an item-price ascending auction can do it, as long as it can use exponentially small increments.",
                "We now describe another positive result for the power of item-price ascending auctions.",
                "In section 4.1, we showed 38 v(ab) v(a) v(b) Bidder 1 2 α ∈ (0, 1) β ∈ (0, 1) Bidder 2 2 2 2 Figure 6: No item-price ascending auctions can determine the optimal allocation for this class of valuations. that a value query can be simulated with a (truly) polynomial number of item-price demand queries.",
                "Here, we show that every value query can be simulated by a (pseudo) polynomial number of ascending item-price demand queries. (In the next subsection, we show that we cannot always simulate even a pair of value queries using a single item-price ascending auction.)",
                "In the full paper (part II,[9]), we show that we can simulate other types of queries using item-price ascending auctions.",
                "Proposition 5.2.",
                "A value query can be simulated by an item-price ascending auction.",
                "This simulation requires a polynomial number of queries.",
                "Actually, the proof for Proposition 5.2 proves a stronger useful result regarding the information elicited by iterative auctions.",
                "It says that in any iterative auction in which the changes of prices are small enough in each stage (pseudocontinuous auctions), the value of all bundles demanded during the auction can be computed.",
                "The basic idea is that when the bidder moves from demanding some bundle Ti to demanding another bundle Ti+1, there is a point in which she is indifferent between these two bundles.",
                "Thus, knowing the value of some demanded bundle (e.g., the empty set) enables computing the values of all other demanded bundles.",
                "We say that an auction is pseudo-continuous, if it only uses demand queries, and in each step, the price of at most one item is changed by (for some ∈ (0, δ]) with respect to the previous query.",
                "Proposition 5.3.",
                "Consider any pseudo-continuous auction (not necessarily ascending), in which bidder i demands the empty set at least once along the auction.",
                "Then, the value of every bundle demanded by bidder i throughout the auction can be calculated at the end of the auction. 5.2 Limitations of Item-Price Ascending Auctions Although we observed that demand queries can solve any combinatorial auction problem, when the queries are restricted to be ascending, some classes of valuations cannot be elicited nor fully-elicited.",
                "An example for such class of valuations is given in Figure 6.",
                "Theorem 5.4.",
                "There are classes of valuations that cannot be elicited nor fully elicited by any item-price ascending auction.",
                "Proof.",
                "Let bidder 1 have the valuation described in the first row of Figure 6, where α and β are unknown values in (0, 1).",
                "First, we prove that this class cannot be fully elicited by a single ascending auction.",
                "Specifically, an ascending auction cannot reveal the values of both α and β.",
                "As long as pa and pb are both below 1, the bidder will always demand the whole bundle ab: her utility from ab is strictly greater than the utility from either a or b separately.",
                "For example, we show that u1(ab) > u1(a): u1(ab) = 2 − (pa + pb) = 1 − pa + 1 − pb > vA(a) − pa + 1 − pb > u1(a) Thus, in order to gain any information about α or β, the price of one of the items should become at least 1, w.l.o.g. pa ≥ 1.",
                "But then, the bundle a will not be demanded by bidder 1 throughout the auction, thus no information at all will be gained about α.",
                "Now, assume that bidder 2 is known to have the valuation described in the second row of Figure 6.",
                "The optimal allocation depends on whether α is greater than β (in bidder 1s valuation), and we proved that an ascending auction cannot determine this.",
                "The proof of the theorem above shows that for an unknown value to be revealed, the price of one item should be greater than 1, and the other price should be smaller than 1.",
                "Therefore, in a price-monotonic trajectory of prices, only one of these values can be revealed.",
                "An immediate conclusion is that this impossibility result also holds for item-price descending auctions.",
                "Since no such trajectory exists, then the same conclusion even holds for non-deterministic itemprice auctions (in which exogenous data tells us how to increase the prices).",
                "Also note that since the hardness stems from the impossibility to fully-elicit a valuation of a single bidder, this result also holds for non-anonymous ascending item-price auctions. 5.3 Limitations of Multi-Trajectory Ascending Auctions According to Theorem 5.4, no ascending item-price auction can always elicit the preferences (we prove a similar result for bundle prices in section 6).",
                "But can two ascending trajectories do the job?",
                "Or a polynomial number of ascending trajectories?",
                "We give negative answers for such suggestions.",
                "We define a k-trajectory ascending auction as a demandquery iterative auction in which the demand queries can be partitioned to k sets of queries, where the prices published in each set only increase in time.",
                "Note that we use a general definition; It allows the trajectories to run in parallel or sequentially, and to use information elicited in some trajectories for determining the future queries in other trajectories.",
                "The power of multiple-trajectory auctions can be demonstrated by the negative result of Gul and Stacchetti [17] who showed that even for an auction among substitutes valuations, an anonymous ascending item-price auction cannot compute VCG prices for all players.21 Ausubel [4] overcame this impossibility result and designed auctions that do compute VCG prices by organizing the auction as a sequence of n + 1 ascending auctions.",
                "Here, we prove that one cannot elicit XOR valuations with k terms by less than k − 1 ascending trajectories.",
                "On the other hand, we show that an XOR formula can be fully elicited by k−1 non-deterministic ascending auctions (or by k−1 deterministic ascending auctions if the auctioneer knows the atomic bundles).22 21 A recent unpublished paper by Mishra and Parkes extends this result, and shows that non-anonymous prices with bundle-prices are necessary in order that an ascending auction will end up with a universal-competitive-equilibrium (that leads to VCG payments). 22 This result actually separates the power of deterministic 39 Proposition 5.5.",
                "XOR valuations with k terms cannot be elicited (or fully elicited) by any (k-2)-trajectory itemprice ascending auction, even when the atomic bundles are known to the elicitor.",
                "However, these valuations can be elicited (and fully elicited) by (k-1)-trajectory non-deterministic non-anonymous item-price ascending auctions.",
                "Moreover, an exponential number of trajectories is required for eliciting some classes of valuations: Proposition 5.6.",
                "Elicitation and full-elicitation of some classes of valuations cannot be done by any k-trajectory itemprice ascending auction, where k = o(2m ).",
                "Proof. (sketch) Consider the following class of valuations: For |S| < m 2 , v(S) = 0 and for |S| > m 2 , v(S) = 2; every bundle S of size m 2 has some unknown value in (0, 1).",
                "We show ([9]) that a single item-price ascending auction can reveal the value of at most one bundle of size n 2 , and therefore an exponential number of ascending trajectories is needed in order to elicit such valuations.",
                "We observe that the algorithm we presented in Section 4.2 can be implemented by a polynomial number of ascending auctions (each item-price demand query can be considered as a separate ascending auction), and therefore a min(n, 4 √ m)-approximation can be achieved by a polynomial number of ascending auctions.",
                "We do not currently have a better upper bound or any lower bound. 5.4 Separating the Various Models of Ascending Auctions Various models for ascending auctions have been suggested in the literature.",
                "In this section, we compare the power of the different models.",
                "As mentioned, all auctions are considered anonymous and deterministic, unless specified otherwise.",
                "Ascending vs.",
                "Descending Auctions: We begin the discussion of the relation between ascending auctions and descending auctions with an example.",
                "The algorithm by Lehmann, Lehmann and Nisan [25] can be implemented by a simple item-price descending auction (see the full paper for details [9]).",
                "This algorithm guarantees at least half of the optimal efficiency for submodular valuations.",
                "However, we are not familiar with any ascending auction that guarantees a similar fraction of the efficiency.",
                "This raises a more general question: can ascending auctions solve any combinatorialauction problem that is solvable using a descending auction (and vice versa)?",
                "We give negative answers to these questions.",
                "The idea behind the proofs is that the information that the auctioneer can get for free at the beginning of each type of auction is different.23 and non-deterministic iterative auctions: our proof shows that a non-deterministic iterative auction can elicit the kterm XOR valuations with a polynomial number of demand queries, and [7] show that this elicitation must take an exponential number of demand queries. 23 In ascending auctions, the auctioneer can reveal the most valuable bundle (besides M) before she starts raising the prices, thus she can use this information for adaptively choose the subsequent queries.",
                "In descending auctions, one can easily find the bundle with the highest average per-item price, keeping all other bundles with non-positive utilities, and use this information in the adaptive price change.",
                "Proposition 5.7.",
                "There are classes that cannot be elicited (fully elicited) by ascending item-price auctions, but can be elicited (resp. fully elicited) with a descending item-price auction.",
                "Proposition 5.8.",
                "There are classes that cannot be elicited (fully elicited) by item-price descending auctions, but can be elicited (resp. fully elicited) by item-price ascending auctions.",
                "Deterministic vs. Non-Deterministic Auctions: Nondeterministic ascending auctions can be viewed as auctions where some benevolent teacher that has complete information guides the auctioneer on how she should raise the prices.",
                "That is, preference elicitation can be done by a non-deterministic ascending auction, if there is some ascending trajectory that elicits enough information for determining the optimal allocation (and verifying that it is indeed optimal).",
                "We show that non-deterministic ascending auctions are more powerful than deterministic ascending auctions: Proposition 5.9.",
                "Some classes can be elicited (fully elicited) by an item-price non-deterministic ascending auction, but cannot be elicited (resp. fully elicited) by item-price deterministic ascending auctions.",
                "Anonymous vs. Non-Anonymous Auctions: As will be shown in Section 6, the power of anonymous and nonanonymous bundle-price ascending auctions differs significantly.",
                "Here, we show that a difference also exists for itemprice ascending auctions.",
                "Proposition 5.10.",
                "Some classes cannot be elicited by anonymous item-price ascending auctions, but can be elicited by a non-anonymous item-price ascending auction.",
                "Sequential vs.",
                "Simultaneous Auctions: A non-anonymous auction is called simultaneous if at each stage, the price of some item is raised by for every bidder.",
                "The auctioneer can use the information gathered until each stage, in all the personalized trajectories, to determine the next queries.",
                "A non-anonymous auction is called sequential if the auctioneer performs an auction for each bidder separately, in sequential order.",
                "The auctioneer can determine the next query based on the information gathered in the trajectories completed so far and on the history of the current trajectory.",
                "Proposition 5.11.",
                "There are classes that cannot be elicited by simultaneous non-anonymous item-price ascending auctions, but can be elicited by a sequential non-anonymous item-price ascending auction.",
                "Adaptive vs.",
                "Oblivious Auctions: If the auctioneer determines the queries regardless of the bidders responses (i.e., the queries are predefined) we say that the auction is oblivious.",
                "Otherwise, the auction is adaptive.",
                "We prove that an adaptive behaviour of the auctioneer may be beneficial.",
                "Proposition 5.12.",
                "There are classes that cannot be elicited (fully elicited) using oblivious item-price ascending auctions, but can be elicited (resp. fully elicited) by an adaptive item-price ascending auction. 40 5.5 Preference Elicitation vs. Full Elicitation Preference elicitation and full elicitation are closely related problems.",
                "If full elicitation is easy (e.g., in polynomial time) then clearly elicitation is also easy (by a nonanonymous auction, simply by learning all the valuations separately24 ).",
                "On the other hand, there are examples where preference elicitation is considered easy but learning is hard (typically, elicitation requires smaller amount of information; some examples can be found in [7]).",
                "The tatonnement algorithms by [22, 12, 16] end up with the optimal allocation for substitutes valuations.25 We prove that we cannot fully elicit substitutes valuations (or even their sub-class of OXS valuations defined in [25]), even for a single bidder, by an item-price ascending auction (although the optimal allocation can be found by an ascending auction for any number of bidders!).",
                "Theorem 5.13.",
                "Substitute valuations cannot be fully elicited by ascending item-price auctions.",
                "Moreover, they cannot be fully elicited by any m 2 ascending trajectories (m > 3).",
                "Whether substitutes valuations have a compact representation (i.e., polynomial in the number of goods) is an important open question.",
                "As a step in this direction, we show that its sub-class of OXS valuations does have a compact representation: every OXS valuation can be represented by at most m2 values.26 Lemma 5.14.",
                "Any OXS valuation can be represented by no more than m2 values. 6.",
                "BUNDLE-PRICE ASCENDING AUCTIONS All the ascending auctions in the literature that are proved to find the optimal allocation for unrestricted valuations are non-anonymous bundle-price auctions (iBundle(3) by Parkes and Ungar [37] and the Proxy Auction by Ausubel and Milgrom [3]).",
                "Yet, several anonymous ascending auctions have been suggested (e.g., AkBA [42], [21] and iBundle(2) [37]).",
                "In this section, we prove that anonymous bundle-price ascending auctions achieve poor results in the worst-case.",
                "We also show that the family of non-anonymous bundleprice ascending auctions can run exponentially slower than simple item-price ascending auctions. 6.1 Limitations of Anonymous Bundle-Price Ascending Auctions We present a class of valuations that cannot be elicited by anonymous bundle-price ascending auctions.",
                "These valuations are described in Figure 7.",
                "The basic idea: for determining some unknown value of one bidder we must raise 24 Note that an anonymous ascending auction cannot necessarily elicit a class that can be fully elicited by an ascending auction. 25 Substitute valuations are defined, e.g., in [16].",
                "Roughly speaking, a bidder with a substitute valuation will continue demand a certain item after the price of some other items was increased.",
                "For completeness, we present in the full paper [9] a proof for the efficiency of such auctions for substitutes valuations. 26 A unit-demand valuation is an XOR valuation in which all the atomic bundles are singletons.",
                "OXS valuations can be interpreted as an aggregation (OR) of any number of unit-demand bidders.",
                "Bid. 1 v1(ac) = 2 v1(bd) = 2 v1(cd) = α ∈ (0, 1) Bid. 2 v2(ab) = 2 v2(cd) = 2 v2(bd) = β ∈ (0, 1) Figure 7: Anonymous ascending bundle-price auctions cannot determine the optimal allocation for this class of valuations. a price of a bundle that should be demanded by the other bidder in the future.",
                "Theorem 6.1.",
                "Some classes of valuations cannot be elicited by anonymous bundle-price ascending auctions.",
                "Proof.",
                "Consider a pair of XOR valuations as described in Figure 7.",
                "For finding the optimal allocation we must know which value is greater between α and β.27 However, we cannot learn the value of both α and β by a single ascending trajectory: assume w.l.o.g. that bidder 1 demands cd before bidder 2 demands bd (no information will be elicited if none of these happens).",
                "In this case, the price for bd must be greater than 1 (otherwise, bidder 1 prefers bd to cd).",
                "Thus, bidder 2 will never demand the bundle bd, and no information will be elicited about β.",
                "The valuations described in the proof of Theorem 6.1 can be easily elicited by a non-anonymous item-price ascending auction.",
                "On the other hand, the valuations in Figure 6 can be easily elicited by an anonymous bundle-price ascending auction.",
                "We conclude that the power of these two families of ascending auctions is incomparable.",
                "We strengthen the impossibility result above by showing that anonymous bundle-price auctions cannot even achieve better than a min{O(n), O( √ m)}-approximation for the social welfare.",
                "This approximation ratio can be achieved with polynomial communication, and specifically with a polynomial number of item-price demand queries.28 Theorem 6.2.",
                "An anonymous bundle-price ascending auction cannot guarantee better than a min{ n 2 , √ m 2 } approximation for the optimal welfare.",
                "Proof. (Sketch) Assume we have n bidders and n2 items for sale, and that n is prime.",
                "We construct n2 distinct bundles with the following properties: for each bidder, we define a partition Si = (Si 1, ..., Si n) of the n2 items to n bundles, such that any two bundles from different partitions intersect.",
                "In the full paper, part II [9] we show an explicit construction using the properties of linear functions over finite fields.",
                "The rest of the proof is independent of the specific construction.",
                "Using these n2 bundles we construct a hard-to-elicit class.",
                "Every bidder has an atomic bid, in his XOR valuation, for each of these n2 bundles.",
                "A bidder i has a value of 2 for any bundle Si j in his partition.",
                "For all bundles in the other partitions, he has a value of either 0 or of 1 − δ, and these values are unknown to the auctioneer.",
                "Since every pair of bundles from different partitions intersect, only one bidder can receive a bundle with a value of 2. 27 If α > β, the optimal allocation will allocate cd to bidder 1 and ab to bidder 2.",
                "Otherwise, we give bd to bidder 2 and ac to bidder 1.",
                "Note that both bidders cannot gain a value of 2 in the same allocation, due to the intersections of the high-valued bundles. 28 Note that bundle-price queries may use exponential communication, thus the lower bound of [32] does not hold. 41 Non-anonymous Bundle-Price Economically-Efficient Ascending Auctions: Initialization: All prices are initialized to zero (non-anonymous bundle prices).",
                "Repeat: - Each bidder submits a bundle that maximizes his utility under his current personalized prices. - The auctioneer calculates a provisional allocation that maximizes his revenue under the current prices. - The prices of bundles that were demanded by losing bidders are increased by .",
                "Finally: Terminate when the provisional allocation assigns to each bidder the bundle he demanded.",
                "Figure 8: Auctions from this family (denoted by NBEA auctions) are known to achieve the optimal welfare.",
                "No bidder will demand a low-valued bundle, as long as the price of one of his high-valued bundles is below 1 (and thus gain him a utility greater than 1).",
                "Therefore, for eliciting any information about the low-valued bundles, the auctioneer should first arbitrarily choose a bidder (w.l.o.g bidder 1) and raise the prices of all the bundles (S1 1 , ..., S1 n) to be greater than 1.",
                "Since the prices cannot decrease, the other bidders will clearly never demand these bundles in future stages.",
                "An adversary may choose the values such that the low values of all the bidders for the bundles not in bidder 1s partition are zero (i.e., vi(S1 j ) = 0 for every i = 1 and every j), however, allocating each bidder a different bundle from bidder 1s partition, might achieve a welfare of n+1−(n−1)δ (bidder 1s valuation is 2, and 1 − δ for all other bidders); If these bundles were wrongly allocated, only a welfare of 2 might be achieved (2 for bidder 1s high-valued bundle, 0 for all other bidders).",
                "At this point, the auctioneer cannot have any information about the identity of the bundles with the non-zero values.",
                "Therefore, an adversary can choose the values of the bundles received by bidders 2, ..., n in the final allocation to be zero.",
                "We conclude that anonymous bundleprice auctions cannot guarantee a welfare greater than 2 for this class, where the optimal welfare can be arbitrarily close to n + 1. 6.2 Bundle Prices vs.",
                "Item Prices The core of the auctions in [37, 3] is the scheme described in Figure 8 (in the spirit of [35]) for auctions with nonanonymous bundle prices.",
                "Auctions from this scheme end up with the optimal allocation for any class of valuations.",
                "We denote this family of ascending auctions as NBEA auctions29 .",
                "NBEA auctions can elicit k-term XOR valuations by a polynomial (in k) number of steps , although the elicitation of such valuations may require an exponential number of item-price queries ([7]), and item-price ascending auctions cannot do it at all (Theorem 5.4).",
                "Nevertheless, we show that NBEA auctions (and in particular, iBundle(3) and the proxy auction) are sometimes inferior to simple item-price demand auctions.",
                "This may justify the use of hybrid auctions that use both linear and non-linear prices (e.g., the clock-proxy auction [10]).",
                "We show that auctions from this 29 Non-anonymous Bundle-price economically Efficient Ascending auctions.",
                "For completeness, we give in the full paper [9] a simple proof for the efficiency (up to an ) of auctions of this scheme . family may use an exponential number of queries even for determining the optimal allocation among two bidders with additive valuations30 , where such valuations can be elicited by a simple item-price ascending auction.",
                "We actually prove this property for a wider class of auctions we call conservative auctions.",
                "We also observe that in conservative auctions, allowing the bidders to submit all the bundles in their demand sets ensures that the auction runs a polynomial number of steps - if L is not too high (but with exponential communication, of course).",
                "An ascending auction is called conservative if it is nonanonymous, uses bundle prices initialized to zero and at every stage the auctioneer can only raise prices of bundles demanded by the bidders until this stage.",
                "In addition, each bidder can only receive bundles he demanded during the auction.",
                "Note that NBEA auctions are by definition conservative.",
                "Proposition 6.3.",
                "If every bidder demands a single bundle in each step of the auction, conservative auctions may run for an exponential number of steps even for additive valuations.",
                "If the bidders are allowed to submit all the bundles in their demand sets in each step, then conservative auctions can run in a polynomial number of steps for any profile of valuations, as long as the maximal valuation L is polynomial in m, n and 1 δ .",
                "Acknowledgments: The authors thank Moshe Babaioff, Shahar Dobzinski, Ron Lavi, Daniel Lehmann, Ahuva Mualem, David Parkes, Michael Schapira and Ilya Segal for helpful discussions.",
                "Supported by grants from the Israeli Academy of Sciences and the USAIsrael Binational Science Foundation. 7.",
                "REFERENCES [1] amazon.",
                "Web Page: http://www.amazon.com. [2] ebay.",
                "Web Page: http://www.ebay.com. [3] L. M. Ausubel and P. R. Milgrom.",
                "Ascending auctions with package bidding.",
                "Frontiers of Theoretical Economics, 1:1-42, 2002. [4] Lawrence Ausubel.",
                "An efficient dynamic auction for heterogeneous commodities, 2000.",
                "Working paper, University of Maryland. [5] Yair Bartal, Rica Gonen, and Noam Nisan.",
                "Incentive compatible multi unit combinatorial auctions.",
                "In TARK 03, 2003. [6] Alejandro Bertelsen.",
                "Substitutes valuations and m -concavity.",
                "M.Sc.",
                "Thesis, The Hebrew University of Jerusalem, 2005. [7] Avrim Blum, Jeffrey C. Jackson, Tuomas Sandholm, and Martin A. Zinkevich.",
                "Preference elicitation and query learning.",
                "Journal of Machine Learning Research, 5:649-667, 2004. [8] Liad Blumrosen and Noam Nisan.",
                "On the computational power of iterative auctions I: demand queries.",
                "Working paper, The Hebrew University of 30 Valuations are called additive if for any disjoint bundles A and B, v(A ∪ B) = v(A) + v(B).",
                "Additive valuations are both sub-additive and super-additive and are determined by the m values assigned for the singletons. 42 Jerusalem.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [9] Liad Blumrosen and Noam Nisan.",
                "On the computational power of iterative auctions II: ascending auctions.",
                "Working paper, The Hebrew University of Jerusalem.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [10] P. Cramton, L.M.",
                "Ausubel, and P.R.",
                "Milgrom.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 5.",
                "The Clock-Proxy Auction: A Practical Combinatorial Auction Design.",
                "MIT Press.",
                "Forthcoming, 2005. [11] P. Cramton, Y. Shoham, and R. Steinberg (Editors).",
                "Combinatorial Auctions.",
                "MIT Press.",
                "Forthcoming, 2005. [12] G. Demange, D. Gale, and M. Sotomayor.",
                "Multi-item auctions.",
                "Journal of Political Economy, 94:863-872, 1986. [13] Shahar Dobzinski, Noam Nisan, and Michael Schapira.",
                "Approximation algorithms for cas with complement-free bidders.",
                "In The 37th ACM symposium on theory of computing (STOC)., 2005. [14] Shahar Dobzinski and Michael Schapira.",
                "Optimal upper and lower approximation bounds for k-duplicates combinatorial auctions.",
                "Working paper, the Hebrew University. [15] Combinatorial bidding conference.",
                "Web Page: http://wireless.fcc.gov/auctions/conferences/combin2003. [16] Faruk Gul and Ennio Stacchetti.",
                "Walrasian equilibrium with gross substitutes.",
                "Journal of Economic Theory, 87:95 - 124, 1999. [17] Faruk Gul and Ennio Stacchetti.",
                "The english auction with differentiated commodities.",
                "Journal of Economic Theory, 92(3):66 - 95, 2000. [18] J. Hastad.",
                "Almost optimal lower bounds for small depth circuits.",
                "In 18th STOC, pages 6-20, 1986. [19] Ron Holzman, Noa Kfir-Dahav, Dov Monderer, and Moshe Tennenholtz.",
                "Bundling equilibrium in combinatrial auctions.",
                "Games and Economic Behavior, 47:104-123, 2004. [20] H. Karloff.",
                "Linear Programming.",
                "Birkh¨auser Verlag, 1991. [21] Frank Kelly and Richard Steinberg.",
                "A combinatorial auction with multiple winners for universal service.",
                "Management Science, 46:586-596, 2000. [22] A.S. Kelso and V.P.",
                "Crawford.",
                "Job matching, coalition formation, and gross substitute.",
                "Econometrica, 50:1483-1504, 1982. [23] Subhash Khot, Richard J. Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Inapproximability results for combinatorial auctions with submodular utility functions.",
                "In Working paper., 2004. [24] Sebastien Lahaie and David C. Parkes.",
                "Applying learning algorithms to preference elicitation.",
                "In EC 04. [25] Benny Lehmann, Daniel Lehmann, and Noam Nisan.",
                "Combinatorial auctions with decreasing marginal utilities.",
                "In ACM conference on electronic commerce.",
                "To appear, Games and Economic Behaviour., 2001. [26] D. Lehmann, L. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "JACM, 49(5):577-602, Sept. 2002. [27] A. Mas-Collel, W. Whinston, and J.",
                "Green.",
                "Microeconomic Theory.",
                "Oxford university press, 1995. [28] Debasis Mishra and David Parkes.",
                "Ascending price vickrey auctions using primal-dual algorithms., 2004.",
                "Working paper, Harvard University. [29] Noam Nisan.",
                "The communication complexity of approximate set packing and covering.",
                "In ICALP 2002. [30] Noam Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In ACM Conference on Electronic Commerce, 2000. [31] Noam Nisan.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 1.",
                "Bidding Languages.",
                "MIT Press.",
                "Forthcoming, 2005. [32] Noam Nisan and Ilya Segal.",
                "The communication requirements of efficient allocations and supporting prices, 2003.",
                "Working paper.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html Forthcoming in the Journal of Economic Theory. [33] Noam Nisan and Ilya Segal.",
                "Exponential communication inefficiency of demand queries, 2004.",
                "Working paper.",
                "Available from http://www.stanford.edu/ isegal/queries1.pdf. [34] D. C. Parkes and L. H. Ungar.",
                "An ascending-price generalized vickrey auction.",
                "Tech.",
                "Rep., Harvard University, 2002. [35] David Parkes.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 3.",
                "Iterative Combinatorial Auctions.",
                "MIT Press.",
                "Forthcoming, 2005. [36] David C. Parkes.",
                "Iterative combinatorial auctions: Achieving economic and computational efficiency.",
                "Ph.D. Thesis, Department of Computer and Information Science, University of Pennsylvania., 2001. [37] David C. Parkes and Lyle H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In AAAI/IAAI, pages 74-81, 2000. [38] Ariel Rubinstein.",
                "Why are certain properties of binary relations relatively more common in natural languages.",
                "Econometrica, 64:343-356, 1996. [39] Tuomas Sandholm.",
                "Algorithm for optimal winner determination in combinatorial auctions.",
                "In Artificial Intelligence, volume 135, pages 1-54, 2002. [40] P. Santi, V. Conitzer, and T. Sandholm.",
                "Towards a characterization of polynomial preference elicitation with value queries in combinatorial auctions.",
                "In The 17th Annual Conference on Learning Theory, 2004. [41] Ilya Segal.",
                "The communication requirements of social choice rules and supporting budget sets, 2004.",
                "Working paper.",
                "Available from http://www.stanford.edu/ isegal/rules.pdf. [42] P.R.",
                "Wurman and M.P.",
                "Wellman.",
                "Akba: A progressive, anonymous-price combinatorial auction.",
                "In Second ACM Conference on Electronic Commerce, 2000. [43] Martin A. Zinkevich, Avrim Blum, and Tuomas Sandholm.",
                "On polynomial-time preference elicitation with value queries.",
                "In ACM Conference on Electronic Commerce, 2003. 43"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        },
        "communication complexity": {
            "translated_key": "complejidad de comunicación",
            "is_in_text": true,
            "original_annotated_sentences": [
                "On the Computational Power of Iterative Auctions∗ [Extended Abstract] Liad Blumrosen School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel liad@cs.huji.ac.il Noam Nisan School of Engineering and Computer Science The Hebrew University of Jerusalem Jerusalem, Israel noam@cs.huji.ac.il ABSTRACT We embark on a systematic analysis of the power and limitations of iterative combinatorial auctions.",
                "Most existing iterative combinatorial auctions are based on repeatedly suggesting prices for bundles of items, and querying the bidders for their demand under these prices.",
                "We prove a large number of results showing the boundaries of what can be achieved by auctions of this kind.",
                "We first focus on auctions that use a polynomial number of demand queries, and then we analyze the power of different kinds of ascending-price auctions.",
                "Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and Problem Complexity; J.4 [Computer Applications]: Social and Behavioral Sciences-Economics General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION Combinatorial auctions have recently received a lot of attention.",
                "In a combinatorial auction, a set M of m nonidentical items are sold in a single auction to n competing bidders.",
                "The bidders have preferences regarding the bundles of items that they may receive.",
                "The preferences of bidder i are specified by a valuation function vi : 2M → R+ , where vi(S) denotes the value that bidder i attaches to winning the bundle of items S. We assume free disposal, i.e., that the vis are monotone non-decreasing.",
                "The usual goal of the auctioneer is to optimize the social welfare P i vi(Si), where the allocation S1...Sn must be a partition of the items.",
                "Applications include many complex resource allocation problems and, in fact, combinatorial auctions may be viewed as the common abstraction of many complex resource allocation problems.",
                "Combinatorial auctions face both economic and computational difficulties and are a central problem in the recently active border of economic theory and computer science.",
                "A forthcoming book [11] addresses many of the issues involved in the design and implementation of combinatorial auctions.",
                "The design of a combinatorial auction involves many considerations.",
                "In this paper we focus on just one central issue: the communication between bidders and the allocation mechanism - preference elicitation.",
                "Transferring all information about bidders preferences requires an infeasible (exponential in m) amount of communication.",
                "Thus, direct revelation auctions in which bidders simply declare their preferences to the mechanism are only practical for very small auction sizes or for very limited families of bidder preferences.",
                "We have therefore seen a multitude of suggested iterative auctions in which the auction protocol repeatedly interacts with the different bidders, aiming to adaptively elicit enough information about the bidders preferences as to be able to find a good (optimal or close to optimal) allocation.",
                "Most of the suggested iterative auctions proceed by maintaining temporary prices for the bundles of items and repeatedly querying the bidders as to their preferences between the bundles under the current set of prices, and then updating the set of bundle prices according to the replies received (e.g., [22, 12, 17, 37, 3]).",
                "Effectively, such an iterative auction accesses the bidders preferences by repeatedly making the following type of demand query to bidders: Query to bidder i: a vector of bundle prices p = {p(S)}S⊆M ; Answer: a bundle of items S ⊆ M that maximizes vi(S) − p(S)..",
                "These types of queries are very natural in an economic setting as they capture the revealed preferences of the bidders.",
                "Some auctions, called item-price or linear-price auctions, specify a price pi for each item, and the price of any given bundle S is always linear, p(S) = P i∈S pi.",
                "Other auctions, called bundle-price auctions, allow specifying arbitrary (non-linear) prices p(S) for bundles.",
                "Another important differentiation between models of iterative auctions is 29 based on whether they use anonymous or non-anonymous prices: In some auctions the prices that are presented to the bidders are always the same (anonymous prices).",
                "In other auctions (non-anonymous), different bidders may face different (discriminatory) vectors of prices.",
                "In ascending-price auctions, forcing prices to be anonymous may be a significant restriction.",
                "In this paper, we embark on a systematic analysis of the computational power of iterative auctions that are based on demand queries.",
                "We do not aim to present auctions for practical use but rather to understand the limitations and possibilities of these kinds of auctions.",
                "In the first part of this paper, our main question is what can be done using a polynomial number of these types of queries?",
                "That is, polynomial in the main parameters of the problem: n, m and the number of bits t needed for representing a single value vi(S).",
                "Note that from an algorithmic point of view we are talking about sub-linear time algorithms: the input size here is really n(2m − 1) numbers - the descriptions of the valuation functions of all bidders.",
                "There are two aspects to computational efficiency in these settings: the first is the communication with the bidders, i.e., the number of queries made, and the second is the usual computational tractability.",
                "Our lower bounds will depend only on the number of queriesand hold independently of any computational assumptions like P = NP.",
                "Our upper bounds will always be computationally efficient both in terms of the number of queries and in terms of regular computation.",
                "As mentioned, this paper concentrates on the single aspect of preference elicitation and on its computational consequences and does not address issues of incentives.",
                "This strengthens our lower bounds, but means that the upper bounds require evaluation from this perspective also before being used in any real combinatorial auction.1 The second part of this paper studies the power of ascending -price auctions.",
                "Ascending auctions are iterative auctions where the published prices cannot decrease in time.",
                "In this work, we try to systematically analyze what do the differences between various models of ascending auctions mean.",
                "We try to answer the following questions: (i) Which models of ascending auctions can find the optimal allocation, and for which classes of valuations? (ii) In cases where the optimal allocation cannot be determined by ascending auctions, how well can such auctions approximate the social welfare? (iii) How do the different models for ascending auctions compare?",
                "Are some models computationally stronger than others?",
                "Ascending auctions have been extensively studied in the literature (see the recent survey by Parkes [35]).",
                "Most of this work presented upper bounds, i.e., proposed mechanisms with ascending prices and analyzed their properties.",
                "A result which is closer in spirit to ours, is by Gul and Stacchetti [17], who showed that no item-price ascending auction can always determine the VCG prices, even for substitutes valuations.2 Our framework is more general than the traditional line of research that concentrates on the final allocation and 1 We do observe however that some weak incentive property comes for free in demand-query auctions since myopic players will answer all demand queries truthfully.",
                "We also note that in some cases (but not always!) the incentives issues can be handled orthogonally to the preference elicitation issues, e.g., by using Vickrey-Clarke-Groves (VCG) prices (e.g., [4, 34]). 2 We further discuss this result in Section 5.3.",
                "Iterative auctions Demand auctions Item-price auctions Anonymous price auctions Ascending auctions 1 2 3 4 5 6 97 8 10 Figure 1: The diagram classifies the following auctions according to their properties: (1) The adaptation [12] for Kelso & Crawfords [22] auction. (2) The Proxy Auction [3] by Ausubel & Milgrom. (3) iBundle(3) by Parkes & Ungar [34]. (4) iBundle(2) by Parkes & Ungar [37]. (5) Our descending adaptation for the 2-approximation for submodular valuations by [25] (see Subsection 5.4). (6) Ausubels [4] auction for substitutes valuations. (7) The adaptation by Nisan & Segal [32] of the O( √ m) approximation by [26]. (8) The duplicate-item auction by [5]. (9) Auction for Read-Once formulae by [43]. (10) The AkBA Auction by Wurman & Wellman [42]. payments and in particular, on reaching Walrasian equilibria or Competitive equilibria.",
                "A Walrasian equilibrium3 is known to exist in the case of Substitutes valuations, and is known to be impossible for any wider class of valuations [16].",
                "This does not rule out other allocations by ascending auctions: in this paper we view the auctions as a computational process where the outcome - both the allocation and the payments - can be determined according to all the data elicited throughout the auction; This general framework strengthens our negative results.4 We find the study of ascending auctions appealing for various reasons.",
                "First, ascending auctions are widely used in many real-life settings from the FCC spectrum auctions [15] to almost any e-commerce website (e.g., [2, 1]).",
                "Actually, this is maybe the most straightforward way to sell items: ask the bidders what would they like to buy under certain prices, and increase the prices of over-demanded goods.",
                "Ascending auctions are also considered more intuitive for many bidders, and are believed to increase the trust of the bidders in the auctioneer, as they see the result gradually emerging from the bidders responses.",
                "Ascending auctions also have other desired economic properties, e.g., they incur smaller information revelation (consider, for example, English auctions vs. second-price sealed bid auctions). 1.1 Extant Work Many iterative combinatorial auction mechanisms rely on demand queries (see the survey in [35]).",
                "Figure 1 summa3 A Walrasian equilibrium is vector of item prices for which all the items are sold when each bidder receives a bundle in his demand set. 4 In few recent auction designs (e.g., [4, 28]) the payments are not necessarily the final prices of the auctions. 30 Valuation family Upper bound Reference Lower bound Reference General min(n, O( √ m)) [26], Section 4.2 min(n, m1/2− ) [32] Substitutes 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subadditive O(logm) [13] 2 [13] k-duplicates O(m1/k+1 ) [14] O(m1/k+1 ) [14] Procurement ln m [32] (log m)/2 [29, 32] Figure 2: The best approximation factors currently achievable by computationally-efficient combinatorial auctions, for several classes of valuations.",
                "All lower bounds in the table apply to all iterative auctions (except the one marked by *); all upper bounds in the table are achieved with item-price demand queries. rizes the basic classes of auctions implied by combinations of the above properties and classifies some of the auctions proposed in the literature according to this classification.",
                "For our purposes, two families of these auctions serve as the main motivating starting points: the first is the ascending item-price auctions of [22, 17] that with computational efficiency find an optimal allocation among (gross) substitutes valuations, and the second is the ascending bundleprice auctions of [37, 3] that find an optimal allocation among general valuations - but not necessarily with computational efficiency.",
                "The main lower bound in this area, due to [32], states that indeed, due to inherent communication requirements, it is not possible for any iterative auction to find the optimal allocation among general valuations with sub-exponentially many queries.",
                "A similar exponential lower bound was shown in [32] also for even approximating the optimal allocation to within a factor of m1/2− .",
                "Several lower bounds and upper bounds for approximation are known for some natural classes of valuations - these are summarized in Figure 2.",
                "In [32], the universal generality of demand queries is also shown: any non-deterministic communication protocol for finding an allocation that optimizes the social welfare can be converted into one that only uses demand queries (with bundle prices).",
                "In [41] this was generalized also to nondeterministic protocols for finding allocations that satisfy other natural types of economic requirements (e.g., approximate social efficiency, envy-freeness).",
                "However, in [33] it was demonstrated that this completeness of demand queries holds only in the nondeterministic setting, while in the usual deterministic setting, demand queries (even with bundle prices) may be exponentially weaker than general communication.",
                "Bundle-price auctions are a generalization of (the more natural and intuitive) item-price auctions.",
                "It is known that indeed item-price auctions may be exponentially weaker: a nice example is the case of valuations that are a XOR of k bundles5 , where k is small (say, polynomial).",
                "Lahaie and Parkes [24] show an economically-efficient bundle-price auction that uses a polynomial number of queries whenever k is polynomial.",
                "In contrast, [7] show that there exist valuations that are XORs of k = √ m bundles such that any item-price auction that finds an optimal allocation between them requires exponentially many queries.",
                "These results are part of a recent line of research ([7, 43, 24, 40]) that study the preference elicitation problem in combinatorial auctions and its relation to the full elicitation problem (i.e., learn5 These are valuations where bidders have values for k specific packages, and the value of each bundle is the maximal value of one of these packages that it contains. ing the exact valuations of the bidders).",
                "These papers adapt methods from machine-learning theory to the combinatorialauction setting.",
                "The preference elicitation problem and the full elicitation problem relate to a well studied problem in microeconomics known as the integrability problem (see, e.g., [27]).",
                "This problem studies if and when one can derive the utility function of a consumer from her demand function.",
                "Paper organization: Due to the relatively large number of results we present, we start with a survey of our new results in Section 2.",
                "After describing our formal model in Section 3, we present our results concerning the power of demand queries in Section 4.",
                "Then, we describe the power of item-price ascending auctions (Section 5) and bundle-price ascending auctions (Section 6).",
                "Readers who are mainly interested in the self-contained discussion of ascending auctions can skip Section 4.",
                "Missing proofs from Section 4 can be found in part I of the full paper ([8]).",
                "Missing proofs from Sections 5 and 6 can be found in part II of the full paper ([9]). 2.",
                "A SURVEY OF OUR RESULTS Our systematic analysis is composed of the combination of a rather large number of results characterizing the power and limitations of various classes of auctions.",
                "In this section, we will present an exposition describing our new results.",
                "We first discuss the power of demand-query iterative auctions, and then we turn our attention to ascending auctions.",
                "Figure 3 summarizes some of our main results. 2.1 Demand Queries Comparison of query types We first ask what other natural types of queries could we imagine iterative auctions using?",
                "Here is a list of such queries that are either natural, have been used in the literature, or that we found useful. 1.",
                "Value query: The auctioneer presents a bundle S, the bidder reports his value v(S) for this bundle. 2.",
                "Marginal-value query: The auctioneer presents a bundle A and an item j, the bidder reports how much he is willing to pay for j, given that he already owns A, i.e., v(j|A) = v(A ∪ {j}) − v(A). 3.",
                "Demand query (with item prices): The auctioneer presents a vector of item prices p1...pm; the bidder reports his demand under these prices, i.e., some set S that maximizes v(S) − P i∈S pi.6 6 A tie breaking rule should be specified.",
                "All of our results 31 Communication Constraint Can find an optimal allocation?",
                "Upper bound for welfare approx.",
                "Lower bound for welfare approx.",
                "Item-Price Demand Queries Yes 1 1 Poly.",
                "Communication No [32] min(n, O(m1/2 )) [26] min(n, m1/2− ) [32] Poly.",
                "Item-Price Demand Queries No [32] min(n, O(m1/2 )) min(n, m1/2− ) [32] Poly.",
                "Value Queries No [32] O( m√ log m ) [19] O( m log m ) Anonymous Item-Price AA No - min(O(n), O(m1/2− )) Non-anonymous Item-Price AA No -Anonymous Bundle-Price AA No - min(O(n), O(m1/2− )) Non-anonymous Bundle-Price AA Yes [37] 1 1 Poly Number of Item-Price AA No min(n, O(m1/2 ))Figure 3: This paper studies the economic efficiency of auctions that follow certain communication constraints.",
                "For each class of auctions, the table shows whether the optimal allocation can be achieved, or else, how well can it be approximated (both upper bounds and lower bounds).",
                "New results are highlighted.",
                "Abbreviations: Poly. (Polynomial number/size), AA (ascending auctions). - means that nothing is currently known except trivial solutions. 4.",
                "Indirect-utility query: The auctioneer presents a set of item prices p1...pm, and the bidder responds with his indirect-utility under these prices, that is, the highest utility he can achieve from a bundle under these prices: maxS⊆M (v(S) − P i∈S pi).7 5.",
                "Relative-demand query: the auctioneer presents a set of non-zero prices p1...pm, and the bidder reports the bundle that maximizes his value per unit of money, i.e., some set that maximizes v(S)P i∈S pi .8 Theorem: Each of these queries can be efficiently (i.e., in time polynomial in n, m, and the number of bits of precision t needed to represent a single value vi(S)) simulated by a sequence of demand queries with item prices.",
                "In particular this shows that demand queries can elicit all information about a valuation by simulating all 2m −1 value queries.",
                "We also observe that value queries and marginalvalue queries can simulate each other in polynomial time and that demand queries and indirect-utility queries can also simulate each other in polynomial time.",
                "We prove that exponentially many value queries may be needed in order to simulate a single demand query.",
                "It is interesting to note that for the restricted class of substitutes valuations, demand queries may be simulated by polynomial number of value queries [6].",
                "Welfare approximation The next question that we ask is how well can a computationally-efficient auction that uses only demand queries approximate the optimal allocation?",
                "Two separate obstacles are known: In [32], a lower bound of min(n, m1/2− ), for any fixed > 0, was shown for the approximation factor apply for any fixed tie breaking rule. 7 This is exactly the utility achieved by the bundle which would be returned in a demand query with the same prices.",
                "This notion relates to the Indirect-utility function studied in the Microeconomic literature (see, e.g., [27]). 8 Note that when all the prices are 1, the bidder actually reports the bundle with the highest per-item price.",
                "We found this type of query useful, for example, in the design of the approximation algorithm described in Figure 5 in Section 4.2. obtained using any polynomial amount of communication.",
                "A computational bound with the same value applies even for the case of single-minded bidders, but under the assumption of NP = ZPP [39].",
                "As noted in [32], the computationallyefficient greedy algorithm of [26] can be adapted to become a polynomial-time iterative auction that achieves a nearly matching approximation factor of min(n, O( √ m)).",
                "This iterative auction may be implemented with bundle-price demand queries but, as far as we see, not as one with item prices.",
                "Since in a single bundle-price demand query an exponential number of prices can be presented, this algorithm can have an exponential communication cost.",
                "In Section 4.2, we describe a different item-price auction that achieves the same approximation factor with a polynomial number of queries (and thus with a polynomial communication).",
                "Theorem: There exists a computationally-efficient iterative auction with item-price demand queries that finds an allocation that approximates the optimal welfare between arbitrary valuations to within a factor of min(n, O( √ m)).",
                "One may then attempt obtaining such an approximation factor using iterative auctions that use only the weaker value queries.",
                "However, we show that this is impossible: Theorem: Any iterative auction that uses a polynomial (in n and m) number of value queries can not achieve an approximation factor that is better than O( m log m ).9 Note however that auctions with only value queries are not completely trivial in power: the bundling auctions of Holzman et al. [19] can easily be implemented by a polynomial number of value queries and can achieve an approximation factor of O( m√ log m ) by using O(log m) equi-sized bundles.",
                "We do not know how to close the (tiny) gap between this upper bound and our lower bound.",
                "Representing bundle-prices We then deal with a critical issue with bundle-price auctions that was side-stepped by our model, as well as by all previous works that used bundle-price auctions: how are 9 This was also proven independently by Shahar Dobzinski and Michael Schapira. 32 the bundle prices represented?",
                "For item-price auctions this is not an issue since a query needs only to specify a small number, m, of prices.",
                "In bundle-price auctions that situation is more difficult since there are exponentially many bundles that require pricing.",
                "Our basic model (like all previous work that used bundle prices, e.g., [37, 34, 3]), ignores this issue, and only requires that the prices be determined, somehow, by the protocol.",
                "A finer model would fix a specific language for denoting bundle prices, force the protocol to represent the bundle-prices in this language, and require that the representations of the bundle-prices also be polynomial.",
                "What could such a language for denoting prices for all bundles look like?",
                "First note that specifying a price for each bundle is equivalent to specifying a valuation.",
                "Second, as noted in [31], most of the proposed bidding languages are really just languages for representing valuations, i.e., a syntactic representation of valuations - thus we could use any of them.",
                "This point of view opens up the general issue of which language should be used in bundle-price auctions and what are the implications of this choice.",
                "Here we initiate this line of investigation.",
                "We consider bundle-price auctions where the prices must be given as a XOR-bid, i.e., the protocol must explicitly indicate the price of every bundle whose value is different than that of all of its proper subsets.",
                "Note that all bundle-price auctions that do not explicitly specify a bidding language must implicitly use this language or a weaker one, since without a specific language one would need to list prices for all bundles, perhaps except for trivial ones (those with value 0, or more generally, those with a value that is determined by one of their proper subsets.)",
                "We show that once the representation length of bundle prices is taken into account (using the XOR-language), bundle-price auctions are no more strictly stronger than item-price auctions.",
                "Define the cost of an iterative auction as the total length of the queries and answers used throughout the auction (in the worst case).",
                "Theorem: For some class of valuations, bundle price auctions that use the XOR-language require an exponential cost for finding the optimal allocation.",
                "In contrast, item-price auctions can find the optimal allocation for this class within polynomial cost.10 This put doubts on the applicability of bundle-price auctions like [3, 37], and it may justify the use of hybrid pricing methods such as Ausubel, Cramton and Milgroms Clock-Proxy auction ([10]).",
                "Demand queries and linear programs The winner determination problem in combinatorial auctions may be formulated as an integer program.",
                "In many cases solving the linear-program relaxation of this integer program is useful: for some restricted classes of valuations it finds the optimum of the integer program (e.g., substitute valuations [22, 17]) or helps approximating the optimum (e.g., by randomized rounding [13, 14]).",
                "However, the linear program has an exponential number of variables.",
                "Nisan and Segal [32] observed the surprising fact that despite the ex10 Our proof relies on the sophisticated known lower bounds for constant depth circuits.",
                "We were not able to find an elementary proof. ponential number of variables, this linear program may be solved within polynomial communication.",
                "The basic idea is to solve the dual program using the Ellipsoid method (see, e.g., [20]).",
                "The dual program has a polynomial number of variables, but an exponential number of constraints.",
                "The Ellipsoid algorithm runs in polynomial time even on such programs, provided that a separation oracle is given for the set of constraints.",
                "Surprisingly, such a separation oracle can be implemented using a single demand query (with item prices) to each of the bidders.",
                "The treatment of [32] was somewhat ad-hoc to the problem at hand (the case of substitute valuations).",
                "Here we give a somewhat more general form of this important observation.",
                "Let us call the following class of linear programs generalized-winner-determination-relaxation (GWDR) LPs: Maximize X i∈N,S⊆M wi xi,S vi(S) s.t.",
                "X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M The case where wi = 1, di = 1, qj = 1 (for every i, j) is the usual linear relaxation of the winner determination problem.",
                "More generally, wi may be viewed as the weight given to bidder is welfare, qj may be viewed as the quantity of units of good j, and di may be viewed as duplicity of the number of bidders of type i. Theorem: Any GWDR linear program may be solved in polynomial time (in n, m, and the number of bits of precision t) using only demand queries with item prices.11 2.2 Ascending Auctions Ascending item-price auctions: It is well known that the item-price ascending auctions of Kelso and Crawford [22] and its variants [12, 16] find the optimal allocation as long as all players valuations have the substitutes property.",
                "The obvious question is whether the optimal allocation can be found for a larger class of valuations.",
                "Our main result here is a strong negative result: Theorem: There is a 2-item 2-player problem where no ascending item-price auction can find the optimal allocation.",
                "This is in contrast to both the power of bundle-price ascending auctions and to the power of general item-price demand queries (see above), both of which can always find the optimal allocation and in fact even provide full preference elicitation.",
                "The same proof proves a similar impossibility result for other types of auctions (e.g., descending auctions, non-anonymous auctions).",
                "More extension of this result: • Eliciting some classes of valuations requires an exponential number of ascending item-price trajectories. 11 The produced optimal solution will have polynomial support and thus can be listed fully. 33 • At least k − 1 ascending item-price trajectories are needed to elicit XOR formulae with k terms.",
                "This result is in some sense tight, since we show that any k-term XOR formula can be fully elicited by k−1 nondeterministic (i.e., when some exogenous teacher instructs the auctioneer on how to increase the prices) ascending auctions.12 We also show that item-price ascending auctions and iterative auctions that are limited to a polynomial number of queries (of any kind, not necessarily ascending) are incomparable in their power: ascending auctions, with small enough increments, can elicit the preferences in cases where any polynomial number of queries cannot.",
                "Motivated by several recent papers that studied the relation between eliciting and fully-eliciting the preferences in combinatorial auctions (e.g., [7, 24]), we explore the difference between these problems in the context of ascending auctions.",
                "We show that although a single ascending auction can determine the optimal allocation among any number of bidders with substitutes valuations, it cannot fully-elicit such a valuation even for a single bidder.",
                "While it was shown in [25] that the set of substitutes valuations has measure zero in the space of general valuations, its dimension is not known, and in particular it is still open whether a polynomial amount of information suffices to describe a substitutes valuation.",
                "While our result may be a small step in that direction (a polynomial full elicitation may still be possible with other communication protocols), we note that our impossibility result also holds for valuations in the class OXS defined by [25], valuations that we are able to show have a compact representation.",
                "We also give several results separating the power of different models for ascending combinatorial auctions that use item-prices: we prove, not surprisingly, that adaptive ascending auctions are more powerful than oblivious ascending auctions and that non-deterministic ascending auctions are more powerful than deterministic ascending auctions.",
                "We also compare different kinds of non-anonymous auctions (e.g., simultaneous or sequential), and observe that anonymous bundle-price auctions and non-anonymous item-price auctions are incomparable in their power.",
                "Finally, motivated by Dutch auctions, we consider descending auctions, and how they compare to ascending ones; we show classes of valuations that can be elicited by ascending item-price auctions but not by descending item-price auctions, and vice versa.",
                "Ascending bundle-price auctions: All known ascending bundle-price auctions that are able to find the optimal allocation between general valuations (with free disposal) use non-anonymous prices.",
                "Anonymous ascending-price auctions (e.g., [42, 21, 37]) are only known to be able to find the optimal allocation among superadditive valuations or few other simple classes ([36]).",
                "We show that this is no mistake: Theorem: No ascending auction with anonymous prices can find the optimal allocation between general valuations. 12 Non-deterministic computation is widely used in CS and also in economics (e.g, a Walrasian equilibrium or [38]).",
                "In some settings, deterministic and non-deterministic models have equal power (e.g., computation with finite automata).",
                "This bound is regardless of the running time, and it also holds for descending auctions and non-deterministic auctions.",
                "We strengthen this result significantly by showing that anonymous ascending auctions cannot produce a better than O( √ m) approximation - the approximation ratio that can be achieved with a polynomial number of queries ([26, 32]) and, as mentioned, with a polynomial number of item-price demand queries.",
                "The same lower bound clearly holds for anonymous item-price ascending auctions since such auctions can be simulated by anonymous bundle-price ascending auctions.",
                "We currently do not have any lower bound on the approximation achievable by non-anonymous item-price ascending auctions.",
                "Finally, we study the performance of the existing computationally-efficient ascending auctions.",
                "These protocols ([37, 3]) require exponential time in the worst case, and this is unavoidable as shown by [32].",
                "However, we also observe that these auctions, as well as the whole class of similar ascending bundle-price auctions, require an exponential time even for simple additive valuations.",
                "This is avoidable and indeed the ascending item-price auctions of [22] can find the optimal allocation for these simple valuations with polynomial communication. 3.",
                "THE MODEL 3.1 Discrete Auctions for Continuous Values Our model aims to capture iterative auctions that operate on real-valued valuations.",
                "There is a slight technical difficulty here in bridging the gap between the discrete nature of an iterative auction, and the continuous nature of the valuations.",
                "This is exactly the same problem as in modeling a simple English auction.",
                "There are three standard formal ways to model it: 1.",
                "Model the auction as a continuous process and study its trajectory in time.",
                "For example, the so-called Japanese auction is basically a continuous model of an English model.13 2.",
                "Model the auction as discrete and the valuations as continuously valued.",
                "In this case we introduce a parameter and usually require the auction to produce results that are -close to optimal. 3.",
                "Model the valuations as discrete.",
                "In this case we will assume that all valuations are integer multiples of some small fixed quantity δ, e.g., 1 penny.",
                "All communication in this case is then naturally finite.",
                "In this paper we use the latter formulation and assume that all values are multiples of some δ.",
                "Thus, in some parts of the paper we assume without loss of generality that δ = 1, hence all valuations are integral.",
                "Almost all (if not all) of our results can be translated to the other two models with little effort. 3.2 Valuations A single auctioneer is selling m indivisible non-homogeneous items in a single auction, and let M be the set of these 13 Another similar model is the moving knives model in the cake-cutting literature. 34 items and N be the set of bidders.",
                "Each one of the n bidders in the auction has a valuation function vi : 2m → {0, δ, 2δ, ..., L}, where for every bundle of items S ⊆ M, vi(S) denotes the value of bidder i for the bundle S and is a multiple of δ in the range 0...L. We will sometimes denote the number of bits needed to represent such values in the range 0...L by t = log L. We assume free disposal, i.e., S ⊆ T implies vi(S) ≤ vi(T) and that vi(∅) = 0 for all bidders.",
                "We will mention the following classes of valuations: • A valuation is called sub-modular if for all sets of items A and B we have that v(A ∪ B) + v(A ∩ B) ≤ v(A) + v(B). • A valuation is called super-additive if for all disjoint sets of items A and B we have that v(A∪B) ≥ v(A)+ v(B). • A valuation is called a k-bundle XOR if it can be represented as a XOR combination of at most k atomic bids [30], i.e., if there are at most k bundles Si and prices pi such that for all S, v(S) = maxi|S⊇Si pi.",
                "Such valuations will be denoted by v = (S1 : p1) ⊕ (S2 : p2) ⊕ . . . ⊕ (Sk : pk).14 3.3 Iterative Auctions The auctioneer sets up a protocol (equivalently an algorithm), where at each stage of the protocol some information q - termed the query - is sent to some bidder i, and then bidder i replies with some reply that depends on the query as well as on his own valuation.",
                "In this paper, we assume that we have complete control over the bidders behavior, and thus the protocol also defines a reply function ri(q, vi) that specifies bidder is reply to query q.",
                "The protocol may be adaptive: the query value as well as the queried bidder may depend on the replies received for past queries.",
                "At the end of the protocol, an allocation S1...Sn must be declared, where Si ∩ Sj = ∅ for i = j.",
                "We say that the auction finds an optimal allocation if it finds the allocation that maximizes the social welfareP i vi(Si).",
                "We say that it finds a c-approximation if P i vi(Si) ≥ P i vi(Ti)/c where T1...Tn is an optimal allocation.",
                "The running time of the auction on a given instance of the bidders valuations is the total number of queries made on this instance.",
                "The running time of a protocol is the worst case cost over all instances.",
                "Note that we impose no computational limitations on the protocol or on the players.15 This of course only strengthens our hardness results.",
                "Yet, our positive results will not use this power and will be efficient also in the usual computational sense.",
                "Our goal will be to design computationally-efficient protocols.",
                "We will deem a protocol computationally-efficient if its cost is polynomial in the relevant parameters: the number of bidders n, the number of items m, and t = log L, where L is the largest possible value of a bundle.",
                "However, when we discuss ascending-price auctions and their variants, a computationally-efficient protocol will be required to be 14 For example, v = (abcd : 5) ⊕ (ab : 3) ⊕ (c : 4) denotes the XOR valuation with the terms abcd, ab, c and prices 5, 3, 4 respectively.",
                "For this valuation, v(abcd) = 5, v(abd) = 3, v(abc) = 4. 15 The running time really measures communication costs and not computational running time. pseudo-polynomial, i.e., it should ask a number of queries which is polynomial in m, n and L δ .",
                "This is because that ascending auctions can usually not achieve such running times (consider even the English auction on a single item).16 Note that all of our results give concrete bounds, where the dependence on the parameters is given explicitly; we use the standard big-Oh notation just as a shorthand.",
                "We say than an auction elicits some class V of valuations, if it determines the optimal allocation for any profile of valuations drawn from V ; We say that an auction fully elicits some class of valuations V , if it can fully learn any single valuation v ∈ V (i.e., learn v(S) for every S). 3.4 Demand Queries and Ascending Auctions Most of the paper will be concerned with a common special case of iterative auctions that we term demand auctions.",
                "In such auctions, the queries that are sent to bidders are demand queries: the query specifies a price p(S) ∈ + for each bundle S. The reply of bidder i is simply the set most desired - demanded - under these prices.",
                "Formally, a set S that maximizes vi(S) − p(S).",
                "It may happen that more than one set S maximizes this value.",
                "In which case, ties are broken according to some fixed tie-breaking rule, e.g., the lexicographically first such set is returned.",
                "All of our results hold for any fixed tie-breaking rule.",
                "Ascending auctions are iterative auctions with non-decreasing prices: Definition 1.",
                "In an ascending auction, the prices in the queries to the same bidder can only increase in time.",
                "Formally, let p be a query made for bidder i, and q be a query made for bidder i at a later stage in the protocol.",
                "Then for all sets S, q(S) ≥ p(S).",
                "A similar variant, which we also study and that is also common in real life, is descending auctions, in which prices can only decrease in time.",
                "Note that the term ascending auction refers to an auction with a single ascending trajectory of prices.",
                "It may be useful to define multi-trajectory ascending auctions, in which the prices maybe reset to zero a number of times (see, e.g., [4]).",
                "We consider two main restrictions on the types of allowed demand queries: Definition 2.",
                "Item Prices: The prices in each query are given by prices pj for each item j.",
                "The price of a set S is additive: p(S) = P j∈S pj.",
                "Definition 3.",
                "Anonymous prices: The prices seen by the bidders at any stage in the auction are the same, i.e. whenever a query is made to some bidder, the same query is also made to all other bidders (with the prices unchanged).",
                "In auctions with non-anonymous (discriminatory) prices, each bidder i has personalized prices denoted by pi (S).17 In this paper, all auctions are anonymous unless otherwise specified.",
                "Note that even though in our model valuations are integral (or multiples of some δ), we allow the demand query to 16 Most of the auctions we present may be adapted to run in time polynomial in log L, using a binary-search-like procedure, losing their ascending nature. 17 Note that a non-anonymous auction can clearly be simulated by n parallel anonymous auctions. 35 use arbitrary real numbers in +.",
                "That is, we assume that the increment we use in the ascending auctions may be significantly smaller than δ.",
                "All our hardness results hold for any , even for continuous price increments.",
                "A practical issue here is how will the query be specified: in the general case, an exponential number of prices needs to be sent in a single query.",
                "Formally, this is not a problem as the model does not limit the length of queries in any way - the protocol must simply define what the prices are in terms of the replies received for previous queries.",
                "We look into this issue further in Section 4.3. 4.",
                "THE POWER OF DEMAND QUERIES In this section, we study the power of iterative auctions that use demand queries (not necessarily ascending).",
                "We start by comapring demand queries to other types of queries.",
                "Then, we discuss how well can one approximate the optimal welfare using a polynomial number of demand queries.",
                "We also initiate the study of the representation of bundle-price demand queries, and finally, we show how demand queries help solving the linear-programming relaxation of combinatorial auctions in polynomial time. 4.1 The Power of Different Types of Queries In this section we compare the power of the various types of queries defined in Section 2.",
                "We will present computationally -efficient simulations of these query types using item-price demand queries.",
                "In Section 5.1 we show that these simulations can also be done using item-price ascending auctions.",
                "Lemma 4.1.",
                "A value query can be simulated by m marginalvalue queries.",
                "A marginal-value query can be simulated by two value queries.",
                "Lemma 4.2.",
                "A value query can be simulated by mt demand queries (where t = log L is the number of bits needed to represent a single bundle value).18 As a direct corollary we get that demand auctions can always fully elicit the bidders valuations by simulating all possible 2m − 1 queries and thus elicit enough information for determining the optimal allocation.",
                "Note, however, that this elicitation may be computationally inefficient.",
                "The next lemma shows that demand queries can be exponentially more powerful than value queries.",
                "Lemma 4.3.",
                "An exponential number of value queries may be required for simulating a single demand query.",
                "Indirect utility queries are, however, equivalent in power to demand queries: Lemma 4.4.",
                "An indirect-utility query can be simulated by mt + 1 demand queries.",
                "A demand query can be simulated by m + 1 indirect-utility queries.",
                "Demand queries can also simulate relative-demand queries:19 18 Note that t bundle-price demand queries can easily simulate a value query by setting the prices of all the bundles except S (the bundle with the unknown value) to be L, and performing a binary search on the price of S. 19 Note: although in our model values are integral (our multiples of δ), we allow the query prices to be arbitrary real numV MV D IU RD V 1 2 exp exp exp MV m 1 exp exp exp D mt poly 1 mt+1 poly IU 1 2 m+1 1 poly RD - - - - 1 Figure 4: Each entry in the table specifies how many queries of this row are needed to simulate a query from the relevant column.",
                "Abbreviations: V (value query), MV (marginal-value query), D (demand query), IU (Indirect-utility query), RD (relative demand query).",
                "Lemma 4.5.",
                "Relative-demand queries can be simulated by a polynomial number of demand queries.",
                "According to our definition of relative-demand queries, they clearly cannot simulate even value queries.",
                "Figure 4 summarizes the relations between these query types. 4.2 Approximating the Social Welfare with Value and Demand Queries We know from [32] that iterative combinatorial auctions that only use a polynomial number of queries can not find an optimal allocation among general valuations and in fact can not even approximate it to within a factor better than min{n, m1/2− }.",
                "In this section we ask how well can this approximation be done using demand queries with item prices, or using the weaker value queries.",
                "We show that, using demand queries, the lower bound can be matched, while value queries can only do much worse.",
                "Figure 5 describes a polynomial-time algorithm that achieves a min(n, O( √ m)) approximation ratio.",
                "This algorithm greedily picks the bundles that maximize the bidders per-item value (using relative-demand queries, see Section 4.1).",
                "As a final step, it allocates all the items to a single bidder if it improves the social welfare (this can be checked using value queries).",
                "Since both value queries and relative-demand queries can be simulated by a polynomial number of demand queries with item prices (Lemmas 4.2 and 4.5), this algorithm can be implemented by a polynomial number of demand queries with item prices.20 Theorem 4.6.",
                "The auction described in Figure 5 can be implemented by a polynomial number of demand queries and achieves a min{n, 4 √ m}-approximation for the social welfare.",
                "We now ask how well can the optimal welfare be approximated by a polynomial number of value queries.",
                "First we note that value queries are not completely powerless: In [19] it is shown that if the m items are split into k fixed bundles of size m/k each, and these fixed bundles are auctioned as though each was indivisible, then the social welfare bers, thus we may have bundles with arbitrarily close relative demands.",
                "In this sense the simulation above is only up to any given (and the number of queries is O(log L+log 1 )).",
                "When the relative-demand query prices are given as rational numbers, exact simulation is implied when log is linear in the input length. 20 In the full paper [8], we observe that this algorithm can be implemented by two descending item-price auctions (where we allow removing items along the auction). 36 generated by such an auction is at least m√ k -approximation of that possible in the original auction.",
                "Notice that such an auction can be implemented by 2k − 1 value queries to each bidder - querying the value of each bundle of the fixed bundles.",
                "Thus, if we choose k = log m bundles we get an m√ log m -approximation while still using a polynomial number of queries.",
                "The following lemma shows that not much more is possible using value queries: Lemma 4.7.",
                "Any iterative auction that uses only value queries and distinguishes between k-tuples of 0/1 valuations where the optimal allocation has value 1, and those where the optimal allocation has value k requires at least 2 m k queries.",
                "Proof.",
                "Consider the following family of valuations: for every S, such that |S| > m/2, v(S) = 1, and there exists a single set T, such that for |S| ≤ m/2, v(S) = 1 iff T ⊆ S and v(S) = 0 otherwise.",
                "Now look at the behavior of the protocol when all valuations vi have T = {1...m}.",
                "Clearly in this case the value of the best allocation is 1 since no set of size m 2 or lower has non-zero value for any player.",
                "Fix the sequence of queries and answers received on this k-tuple of valuations.",
                "Now consider the k-tuple of valuations chosen at random as follows: a partition of the m items into k sets T1...Tk each of size m k each is chosen uniformly at random among all such partitions.",
                "Now consider the k-tuple of valuations from our family that correspond to this partition - clearly Ti can be allocated to i, for each i, getting a total value of k. Now look at the protocol when running on these valuations and compare its behavior to the original case.",
                "Note that the answer to a query S to player i differs between the case of Ti and the original case of T = {1...m} only if |S| ≤ m 2 and Ti ⊆ S. Since Ti is distributed uniformly among all sets of size exactly m k , we have that for any fixed query S to player i, where |S| ≤ m 2 , Pr[Ti ⊆ S] ≤ „ |S| m «|Ti| ≤ 2− m k Using the union-bound, if the original sequence of queries was of length less than 2 m k , then with positive probability none of the queries in the sequence would receive a different answer than for the original input tuple.",
                "This is forbidden since the protocol must distinguish between this case and the original case - which cannot happen if all queries receive the same answer.",
                "Hence there must have been at least 2 m k queries for the original tuple of valuations.",
                "We conclude that a polynomial time protocol that uses only value queries cannot obtain a better than O( m log m ) approximation of the welfare: Theorem 4.8.",
                "An iterative auction that uses a polynomial number of value queries cannot achieve better than O( m log m )-approximation for the social welfare.",
                "Proof.",
                "Immediate from Lemma 4.7: achieving any approximation ratio k which is asymptotically greater than m log m needs an exponential number of value queries.",
                "An Approximation Algorithm: Initialization: Let T ← M be the current items for sale.",
                "Let K ← N be the currently participating bidders.",
                "Let S∗ 1 ← ∅, ..., S∗ n ← ∅ be the provisional allocation.",
                "Repeat until T = ∅ or K = ∅: Ask each bidder i in K for the bundle Si that maximizes her per-item value, i.e., Si ∈ argmaxS⊆T vi(S) |S| .",
                "Let i be the bidder with the maximal per-item value, i.e., i ∈ argmaxi∈K vi(Si) |Si| .",
                "Set: s∗ i = si, K = K \\ i, M = M \\ Si Finally: Ask the bidders for their values vi(M) for the grand bundle.",
                "If allocating all the items to some bidder i improves the social welfare achieved so far (i.e., ∃i ∈ N such that vi(M) > P i∈N vi(S∗ i )), then allocate all items to this bidder i.",
                "Figure 5: This algorithm achieves a min{n, 4 √ m}approximation for the social welfare, which is asymptotically the best worst-case approximation possible with polynomial communication.",
                "This algorithm can be implemented with a polynomial number of demand queries. 4.3 The Representation of Bundle Prices In this section we explicitly fix the language in which bundle prices are presented to the bidders in bundle-price auctions.",
                "This language requires the algorithm to explicitly list the price of every bundle with a non-trivial price.",
                "Trivial in this context is a price that is equal to that of one of its proper subsets (which was listed explicitly).",
                "This representation is equivalent to the XOR-language for expressing valuations.",
                "Formally, each query q is given by an expression: q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl).",
                "In this representation, the price demanded for every set S is simply p(S) = max{k=1...l|Sk⊆S}pk.",
                "Definition 4.",
                "The length of the query q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl) is l. The cost of an algorithm is the sum of the lengths of the queries asked during the operation of the algorithm on the worst case input.",
                "Note that under this definition, bundle-price auctions are not necessarily stronger than item-price auctions.",
                "An itemprice query that prices each item for 1, is translated to an exponentially long bundle-price query that needs to specify the price |S| for each bundle S. But perhaps bundle-price auctions can still find optimal allocations whenever itemprice auction can, without directly simulating such queries?",
                "We show that this is not the case: indeed, when the representation length is taken into account, bundle price auctions are sometimes seriously inferior to item price auctions.",
                "Consider the following family of valuations: Each item is valued at 3, except that for some single set S, its value is a bit more: 3|S| + b, where b ∈ {0, 1, 2}.",
                "Note that an item price auction can easily find the optimal allocation between any two such valuations: Set the prices of each item to 3+ ; if the demand sets of the two players are both empty, then b = 0 for both valuations, and an arbitrary allocation is fine.",
                "If one of them is empty and the other non-empty, allocate the non-empty demand set to its bidder, and the rest to the other.",
                "If both demand sets are non-empty then, unless they form an exact partition, we need to see which b is larger, which we can do by increasing the price of a single item in each demand set. 37 We will show that any bundle-price auction that uses only the XOR-language to describe bundle prices requires an exponential cost (which includes the sum of all description lengths of prices) to find an optimal allocation between any two such valuations.",
                "Lemma 4.9.",
                "Every bundle-price auction that uses XORexpressions to denote bundle prices requires 2Ω( √ m) cost in order to find the optimal allocation among two valuations from the above family.",
                "The complication in the proof stems from the fact that using XOR-expressions, the length of the price description depends on the number of bundles whose price is strictly larger than each of their subsets - this may be significantly smaller than the number of bundles that have a non-zero price. (The proof becomes easy if we require the protocol to explicitly name every bundle with non-zero price.)",
                "We do not know of any elementary proof for this lemma (although we believe that one can be found).",
                "Instead we reduce the problem to a well known lower bound in boolean circuit complexity [18] stating that boolean circuits of depth 3 that compute the majority function on m variables require 2Ω( √ m) size. 4.4 Demand Queries and Linear Programming Consider the following linear-programming relaxation for the generalized winner-determination problem in combinatorial auctions (the primal program): Maximize X i∈N,S⊆M wi xi,S vi(S) s.t.",
                "X i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M Note that the primal program has an exponential number of variables.",
                "Yet, we will be able to solve it in polynomial time using demand queries to the bidders.",
                "The solution will have a polynomial size support (non-zero values for xi,S), and thus we will be able to describe it in polynomial time.",
                "Here is its dual: Minimize X j∈M qjpj + X i∈N diui s.t. ui + X j∈S pj ≥ wivi(S) ∀i ∈ N, S ⊆ M pi ≥ 0, uj ≥ 0 ∀i ∈ M, j ∈ N Notice that the dual problem has exactly n + m variables but an exponential number of constraints.",
                "Thus, the dual can be solved using the Ellipsoid method in polynomial time - if a separation oracle can be implemented in polynomial time.",
                "Recall that a separation oracle, when given a possible solution, either confirms that it is a feasible solution, or responds with a constraint that is violated by the possible solution.",
                "We construct a separation oracle for solving the dual program, using a single demand query to each of the bidders.",
                "Consider a possible solution (u, p) for the dual program.",
                "We can re-write the constraints of the dual program as: ui/wi ≥ vi(S) − X j∈S pj/wi Now a demand query to bidder i with prices pj/wi reveals exactly the set S that maximizes the RHS of the previous inequality.",
                "Thus, in order to check whether (u, p) is feasible it suffices to (1) query each bidder i for his demand Di under the prices pj/wi; (2) check only the n constraints ui + P j∈Di pj ≥ wivi(Di) (where vi(Di) can be simulated using a polynomial sequence of demand queries as shown in Lemma 4.2).",
                "If none of these is violated then we are assured that (u, p) is feasible; otherwise we get a violated constraint.",
                "What is left to be shown is how the primal program can be solved. (Recall that the primal program has an exponential number of variables.)",
                "Since the Ellipsoid algorithm runs in polynomial time, it encounters only a polynomial number of constraints during its operation.",
                "Clearly, if all other constraints were removed from the dual program, it would still have the same solution (adding constraints can only decrease the space of feasible solutions).",
                "Now take the reduced dual where only the constraints encountered exist, and look at its dual.",
                "It will have the same solution as the original dual and hence of the original primal.",
                "However, look at the form of this dual of the reduced dual.",
                "It is just a version of the primal program with a polynomial number of variables - those corresponding to constraints that remained in the reduced dual.",
                "Thus, it can be solved in polynomial time, and this solution clearly solves the original primal program, setting all other variables to zero. 5.",
                "ITEM-PRICE ASCENDING AUCTIONS In this section we characterize the power of ascending item-price auctions.",
                "We first show that this power is not trivial: such auctions can in general elicit an exponential amount of information.",
                "On the other hand, we show that the optimal allocation cannot always be determined by a single ascending auction, and in some cases, nor by an exponential number of ascending-price trajectories.",
                "Finally, we separate the power of different models of ascending auctions. 5.1 The Power of Item-Price Ascending Auctions We first show that if small enough increments are allowed, a single ascending trajectory of item-prices can elicit preferences that cannot be elicited with polynomial communication.",
                "As mentioned, all our hardness results hold for any increment, even infinitesimal.",
                "Theorem 5.1.",
                "Some classes of valuations can be elicited by item-price ascending auctions, but cannot be elicited by a polynomial number of queries of any kind.",
                "Proof. (sketch) Consider two bidders with v(S) = 1 if |S| > n 2 , v(S) = 0 if |S| < n 2 and every S such that |S| = n 2 has an unknown value from {0, 1}.",
                "Due to [32], determining the optimal allocation here requires exponential communication in the worst case.",
                "Nevertheless, we show (see [9]) that an item-price ascending auction can do it, as long as it can use exponentially small increments.",
                "We now describe another positive result for the power of item-price ascending auctions.",
                "In section 4.1, we showed 38 v(ab) v(a) v(b) Bidder 1 2 α ∈ (0, 1) β ∈ (0, 1) Bidder 2 2 2 2 Figure 6: No item-price ascending auctions can determine the optimal allocation for this class of valuations. that a value query can be simulated with a (truly) polynomial number of item-price demand queries.",
                "Here, we show that every value query can be simulated by a (pseudo) polynomial number of ascending item-price demand queries. (In the next subsection, we show that we cannot always simulate even a pair of value queries using a single item-price ascending auction.)",
                "In the full paper (part II,[9]), we show that we can simulate other types of queries using item-price ascending auctions.",
                "Proposition 5.2.",
                "A value query can be simulated by an item-price ascending auction.",
                "This simulation requires a polynomial number of queries.",
                "Actually, the proof for Proposition 5.2 proves a stronger useful result regarding the information elicited by iterative auctions.",
                "It says that in any iterative auction in which the changes of prices are small enough in each stage (pseudocontinuous auctions), the value of all bundles demanded during the auction can be computed.",
                "The basic idea is that when the bidder moves from demanding some bundle Ti to demanding another bundle Ti+1, there is a point in which she is indifferent between these two bundles.",
                "Thus, knowing the value of some demanded bundle (e.g., the empty set) enables computing the values of all other demanded bundles.",
                "We say that an auction is pseudo-continuous, if it only uses demand queries, and in each step, the price of at most one item is changed by (for some ∈ (0, δ]) with respect to the previous query.",
                "Proposition 5.3.",
                "Consider any pseudo-continuous auction (not necessarily ascending), in which bidder i demands the empty set at least once along the auction.",
                "Then, the value of every bundle demanded by bidder i throughout the auction can be calculated at the end of the auction. 5.2 Limitations of Item-Price Ascending Auctions Although we observed that demand queries can solve any combinatorial auction problem, when the queries are restricted to be ascending, some classes of valuations cannot be elicited nor fully-elicited.",
                "An example for such class of valuations is given in Figure 6.",
                "Theorem 5.4.",
                "There are classes of valuations that cannot be elicited nor fully elicited by any item-price ascending auction.",
                "Proof.",
                "Let bidder 1 have the valuation described in the first row of Figure 6, where α and β are unknown values in (0, 1).",
                "First, we prove that this class cannot be fully elicited by a single ascending auction.",
                "Specifically, an ascending auction cannot reveal the values of both α and β.",
                "As long as pa and pb are both below 1, the bidder will always demand the whole bundle ab: her utility from ab is strictly greater than the utility from either a or b separately.",
                "For example, we show that u1(ab) > u1(a): u1(ab) = 2 − (pa + pb) = 1 − pa + 1 − pb > vA(a) − pa + 1 − pb > u1(a) Thus, in order to gain any information about α or β, the price of one of the items should become at least 1, w.l.o.g. pa ≥ 1.",
                "But then, the bundle a will not be demanded by bidder 1 throughout the auction, thus no information at all will be gained about α.",
                "Now, assume that bidder 2 is known to have the valuation described in the second row of Figure 6.",
                "The optimal allocation depends on whether α is greater than β (in bidder 1s valuation), and we proved that an ascending auction cannot determine this.",
                "The proof of the theorem above shows that for an unknown value to be revealed, the price of one item should be greater than 1, and the other price should be smaller than 1.",
                "Therefore, in a price-monotonic trajectory of prices, only one of these values can be revealed.",
                "An immediate conclusion is that this impossibility result also holds for item-price descending auctions.",
                "Since no such trajectory exists, then the same conclusion even holds for non-deterministic itemprice auctions (in which exogenous data tells us how to increase the prices).",
                "Also note that since the hardness stems from the impossibility to fully-elicit a valuation of a single bidder, this result also holds for non-anonymous ascending item-price auctions. 5.3 Limitations of Multi-Trajectory Ascending Auctions According to Theorem 5.4, no ascending item-price auction can always elicit the preferences (we prove a similar result for bundle prices in section 6).",
                "But can two ascending trajectories do the job?",
                "Or a polynomial number of ascending trajectories?",
                "We give negative answers for such suggestions.",
                "We define a k-trajectory ascending auction as a demandquery iterative auction in which the demand queries can be partitioned to k sets of queries, where the prices published in each set only increase in time.",
                "Note that we use a general definition; It allows the trajectories to run in parallel or sequentially, and to use information elicited in some trajectories for determining the future queries in other trajectories.",
                "The power of multiple-trajectory auctions can be demonstrated by the negative result of Gul and Stacchetti [17] who showed that even for an auction among substitutes valuations, an anonymous ascending item-price auction cannot compute VCG prices for all players.21 Ausubel [4] overcame this impossibility result and designed auctions that do compute VCG prices by organizing the auction as a sequence of n + 1 ascending auctions.",
                "Here, we prove that one cannot elicit XOR valuations with k terms by less than k − 1 ascending trajectories.",
                "On the other hand, we show that an XOR formula can be fully elicited by k−1 non-deterministic ascending auctions (or by k−1 deterministic ascending auctions if the auctioneer knows the atomic bundles).22 21 A recent unpublished paper by Mishra and Parkes extends this result, and shows that non-anonymous prices with bundle-prices are necessary in order that an ascending auction will end up with a universal-competitive-equilibrium (that leads to VCG payments). 22 This result actually separates the power of deterministic 39 Proposition 5.5.",
                "XOR valuations with k terms cannot be elicited (or fully elicited) by any (k-2)-trajectory itemprice ascending auction, even when the atomic bundles are known to the elicitor.",
                "However, these valuations can be elicited (and fully elicited) by (k-1)-trajectory non-deterministic non-anonymous item-price ascending auctions.",
                "Moreover, an exponential number of trajectories is required for eliciting some classes of valuations: Proposition 5.6.",
                "Elicitation and full-elicitation of some classes of valuations cannot be done by any k-trajectory itemprice ascending auction, where k = o(2m ).",
                "Proof. (sketch) Consider the following class of valuations: For |S| < m 2 , v(S) = 0 and for |S| > m 2 , v(S) = 2; every bundle S of size m 2 has some unknown value in (0, 1).",
                "We show ([9]) that a single item-price ascending auction can reveal the value of at most one bundle of size n 2 , and therefore an exponential number of ascending trajectories is needed in order to elicit such valuations.",
                "We observe that the algorithm we presented in Section 4.2 can be implemented by a polynomial number of ascending auctions (each item-price demand query can be considered as a separate ascending auction), and therefore a min(n, 4 √ m)-approximation can be achieved by a polynomial number of ascending auctions.",
                "We do not currently have a better upper bound or any lower bound. 5.4 Separating the Various Models of Ascending Auctions Various models for ascending auctions have been suggested in the literature.",
                "In this section, we compare the power of the different models.",
                "As mentioned, all auctions are considered anonymous and deterministic, unless specified otherwise.",
                "Ascending vs.",
                "Descending Auctions: We begin the discussion of the relation between ascending auctions and descending auctions with an example.",
                "The algorithm by Lehmann, Lehmann and Nisan [25] can be implemented by a simple item-price descending auction (see the full paper for details [9]).",
                "This algorithm guarantees at least half of the optimal efficiency for submodular valuations.",
                "However, we are not familiar with any ascending auction that guarantees a similar fraction of the efficiency.",
                "This raises a more general question: can ascending auctions solve any combinatorialauction problem that is solvable using a descending auction (and vice versa)?",
                "We give negative answers to these questions.",
                "The idea behind the proofs is that the information that the auctioneer can get for free at the beginning of each type of auction is different.23 and non-deterministic iterative auctions: our proof shows that a non-deterministic iterative auction can elicit the kterm XOR valuations with a polynomial number of demand queries, and [7] show that this elicitation must take an exponential number of demand queries. 23 In ascending auctions, the auctioneer can reveal the most valuable bundle (besides M) before she starts raising the prices, thus she can use this information for adaptively choose the subsequent queries.",
                "In descending auctions, one can easily find the bundle with the highest average per-item price, keeping all other bundles with non-positive utilities, and use this information in the adaptive price change.",
                "Proposition 5.7.",
                "There are classes that cannot be elicited (fully elicited) by ascending item-price auctions, but can be elicited (resp. fully elicited) with a descending item-price auction.",
                "Proposition 5.8.",
                "There are classes that cannot be elicited (fully elicited) by item-price descending auctions, but can be elicited (resp. fully elicited) by item-price ascending auctions.",
                "Deterministic vs. Non-Deterministic Auctions: Nondeterministic ascending auctions can be viewed as auctions where some benevolent teacher that has complete information guides the auctioneer on how she should raise the prices.",
                "That is, preference elicitation can be done by a non-deterministic ascending auction, if there is some ascending trajectory that elicits enough information for determining the optimal allocation (and verifying that it is indeed optimal).",
                "We show that non-deterministic ascending auctions are more powerful than deterministic ascending auctions: Proposition 5.9.",
                "Some classes can be elicited (fully elicited) by an item-price non-deterministic ascending auction, but cannot be elicited (resp. fully elicited) by item-price deterministic ascending auctions.",
                "Anonymous vs. Non-Anonymous Auctions: As will be shown in Section 6, the power of anonymous and nonanonymous bundle-price ascending auctions differs significantly.",
                "Here, we show that a difference also exists for itemprice ascending auctions.",
                "Proposition 5.10.",
                "Some classes cannot be elicited by anonymous item-price ascending auctions, but can be elicited by a non-anonymous item-price ascending auction.",
                "Sequential vs.",
                "Simultaneous Auctions: A non-anonymous auction is called simultaneous if at each stage, the price of some item is raised by for every bidder.",
                "The auctioneer can use the information gathered until each stage, in all the personalized trajectories, to determine the next queries.",
                "A non-anonymous auction is called sequential if the auctioneer performs an auction for each bidder separately, in sequential order.",
                "The auctioneer can determine the next query based on the information gathered in the trajectories completed so far and on the history of the current trajectory.",
                "Proposition 5.11.",
                "There are classes that cannot be elicited by simultaneous non-anonymous item-price ascending auctions, but can be elicited by a sequential non-anonymous item-price ascending auction.",
                "Adaptive vs.",
                "Oblivious Auctions: If the auctioneer determines the queries regardless of the bidders responses (i.e., the queries are predefined) we say that the auction is oblivious.",
                "Otherwise, the auction is adaptive.",
                "We prove that an adaptive behaviour of the auctioneer may be beneficial.",
                "Proposition 5.12.",
                "There are classes that cannot be elicited (fully elicited) using oblivious item-price ascending auctions, but can be elicited (resp. fully elicited) by an adaptive item-price ascending auction. 40 5.5 Preference Elicitation vs. Full Elicitation Preference elicitation and full elicitation are closely related problems.",
                "If full elicitation is easy (e.g., in polynomial time) then clearly elicitation is also easy (by a nonanonymous auction, simply by learning all the valuations separately24 ).",
                "On the other hand, there are examples where preference elicitation is considered easy but learning is hard (typically, elicitation requires smaller amount of information; some examples can be found in [7]).",
                "The tatonnement algorithms by [22, 12, 16] end up with the optimal allocation for substitutes valuations.25 We prove that we cannot fully elicit substitutes valuations (or even their sub-class of OXS valuations defined in [25]), even for a single bidder, by an item-price ascending auction (although the optimal allocation can be found by an ascending auction for any number of bidders!).",
                "Theorem 5.13.",
                "Substitute valuations cannot be fully elicited by ascending item-price auctions.",
                "Moreover, they cannot be fully elicited by any m 2 ascending trajectories (m > 3).",
                "Whether substitutes valuations have a compact representation (i.e., polynomial in the number of goods) is an important open question.",
                "As a step in this direction, we show that its sub-class of OXS valuations does have a compact representation: every OXS valuation can be represented by at most m2 values.26 Lemma 5.14.",
                "Any OXS valuation can be represented by no more than m2 values. 6.",
                "BUNDLE-PRICE ASCENDING AUCTIONS All the ascending auctions in the literature that are proved to find the optimal allocation for unrestricted valuations are non-anonymous bundle-price auctions (iBundle(3) by Parkes and Ungar [37] and the Proxy Auction by Ausubel and Milgrom [3]).",
                "Yet, several anonymous ascending auctions have been suggested (e.g., AkBA [42], [21] and iBundle(2) [37]).",
                "In this section, we prove that anonymous bundle-price ascending auctions achieve poor results in the worst-case.",
                "We also show that the family of non-anonymous bundleprice ascending auctions can run exponentially slower than simple item-price ascending auctions. 6.1 Limitations of Anonymous Bundle-Price Ascending Auctions We present a class of valuations that cannot be elicited by anonymous bundle-price ascending auctions.",
                "These valuations are described in Figure 7.",
                "The basic idea: for determining some unknown value of one bidder we must raise 24 Note that an anonymous ascending auction cannot necessarily elicit a class that can be fully elicited by an ascending auction. 25 Substitute valuations are defined, e.g., in [16].",
                "Roughly speaking, a bidder with a substitute valuation will continue demand a certain item after the price of some other items was increased.",
                "For completeness, we present in the full paper [9] a proof for the efficiency of such auctions for substitutes valuations. 26 A unit-demand valuation is an XOR valuation in which all the atomic bundles are singletons.",
                "OXS valuations can be interpreted as an aggregation (OR) of any number of unit-demand bidders.",
                "Bid. 1 v1(ac) = 2 v1(bd) = 2 v1(cd) = α ∈ (0, 1) Bid. 2 v2(ab) = 2 v2(cd) = 2 v2(bd) = β ∈ (0, 1) Figure 7: Anonymous ascending bundle-price auctions cannot determine the optimal allocation for this class of valuations. a price of a bundle that should be demanded by the other bidder in the future.",
                "Theorem 6.1.",
                "Some classes of valuations cannot be elicited by anonymous bundle-price ascending auctions.",
                "Proof.",
                "Consider a pair of XOR valuations as described in Figure 7.",
                "For finding the optimal allocation we must know which value is greater between α and β.27 However, we cannot learn the value of both α and β by a single ascending trajectory: assume w.l.o.g. that bidder 1 demands cd before bidder 2 demands bd (no information will be elicited if none of these happens).",
                "In this case, the price for bd must be greater than 1 (otherwise, bidder 1 prefers bd to cd).",
                "Thus, bidder 2 will never demand the bundle bd, and no information will be elicited about β.",
                "The valuations described in the proof of Theorem 6.1 can be easily elicited by a non-anonymous item-price ascending auction.",
                "On the other hand, the valuations in Figure 6 can be easily elicited by an anonymous bundle-price ascending auction.",
                "We conclude that the power of these two families of ascending auctions is incomparable.",
                "We strengthen the impossibility result above by showing that anonymous bundle-price auctions cannot even achieve better than a min{O(n), O( √ m)}-approximation for the social welfare.",
                "This approximation ratio can be achieved with polynomial communication, and specifically with a polynomial number of item-price demand queries.28 Theorem 6.2.",
                "An anonymous bundle-price ascending auction cannot guarantee better than a min{ n 2 , √ m 2 } approximation for the optimal welfare.",
                "Proof. (Sketch) Assume we have n bidders and n2 items for sale, and that n is prime.",
                "We construct n2 distinct bundles with the following properties: for each bidder, we define a partition Si = (Si 1, ..., Si n) of the n2 items to n bundles, such that any two bundles from different partitions intersect.",
                "In the full paper, part II [9] we show an explicit construction using the properties of linear functions over finite fields.",
                "The rest of the proof is independent of the specific construction.",
                "Using these n2 bundles we construct a hard-to-elicit class.",
                "Every bidder has an atomic bid, in his XOR valuation, for each of these n2 bundles.",
                "A bidder i has a value of 2 for any bundle Si j in his partition.",
                "For all bundles in the other partitions, he has a value of either 0 or of 1 − δ, and these values are unknown to the auctioneer.",
                "Since every pair of bundles from different partitions intersect, only one bidder can receive a bundle with a value of 2. 27 If α > β, the optimal allocation will allocate cd to bidder 1 and ab to bidder 2.",
                "Otherwise, we give bd to bidder 2 and ac to bidder 1.",
                "Note that both bidders cannot gain a value of 2 in the same allocation, due to the intersections of the high-valued bundles. 28 Note that bundle-price queries may use exponential communication, thus the lower bound of [32] does not hold. 41 Non-anonymous Bundle-Price Economically-Efficient Ascending Auctions: Initialization: All prices are initialized to zero (non-anonymous bundle prices).",
                "Repeat: - Each bidder submits a bundle that maximizes his utility under his current personalized prices. - The auctioneer calculates a provisional allocation that maximizes his revenue under the current prices. - The prices of bundles that were demanded by losing bidders are increased by .",
                "Finally: Terminate when the provisional allocation assigns to each bidder the bundle he demanded.",
                "Figure 8: Auctions from this family (denoted by NBEA auctions) are known to achieve the optimal welfare.",
                "No bidder will demand a low-valued bundle, as long as the price of one of his high-valued bundles is below 1 (and thus gain him a utility greater than 1).",
                "Therefore, for eliciting any information about the low-valued bundles, the auctioneer should first arbitrarily choose a bidder (w.l.o.g bidder 1) and raise the prices of all the bundles (S1 1 , ..., S1 n) to be greater than 1.",
                "Since the prices cannot decrease, the other bidders will clearly never demand these bundles in future stages.",
                "An adversary may choose the values such that the low values of all the bidders for the bundles not in bidder 1s partition are zero (i.e., vi(S1 j ) = 0 for every i = 1 and every j), however, allocating each bidder a different bundle from bidder 1s partition, might achieve a welfare of n+1−(n−1)δ (bidder 1s valuation is 2, and 1 − δ for all other bidders); If these bundles were wrongly allocated, only a welfare of 2 might be achieved (2 for bidder 1s high-valued bundle, 0 for all other bidders).",
                "At this point, the auctioneer cannot have any information about the identity of the bundles with the non-zero values.",
                "Therefore, an adversary can choose the values of the bundles received by bidders 2, ..., n in the final allocation to be zero.",
                "We conclude that anonymous bundleprice auctions cannot guarantee a welfare greater than 2 for this class, where the optimal welfare can be arbitrarily close to n + 1. 6.2 Bundle Prices vs.",
                "Item Prices The core of the auctions in [37, 3] is the scheme described in Figure 8 (in the spirit of [35]) for auctions with nonanonymous bundle prices.",
                "Auctions from this scheme end up with the optimal allocation for any class of valuations.",
                "We denote this family of ascending auctions as NBEA auctions29 .",
                "NBEA auctions can elicit k-term XOR valuations by a polynomial (in k) number of steps , although the elicitation of such valuations may require an exponential number of item-price queries ([7]), and item-price ascending auctions cannot do it at all (Theorem 5.4).",
                "Nevertheless, we show that NBEA auctions (and in particular, iBundle(3) and the proxy auction) are sometimes inferior to simple item-price demand auctions.",
                "This may justify the use of hybrid auctions that use both linear and non-linear prices (e.g., the clock-proxy auction [10]).",
                "We show that auctions from this 29 Non-anonymous Bundle-price economically Efficient Ascending auctions.",
                "For completeness, we give in the full paper [9] a simple proof for the efficiency (up to an ) of auctions of this scheme . family may use an exponential number of queries even for determining the optimal allocation among two bidders with additive valuations30 , where such valuations can be elicited by a simple item-price ascending auction.",
                "We actually prove this property for a wider class of auctions we call conservative auctions.",
                "We also observe that in conservative auctions, allowing the bidders to submit all the bundles in their demand sets ensures that the auction runs a polynomial number of steps - if L is not too high (but with exponential communication, of course).",
                "An ascending auction is called conservative if it is nonanonymous, uses bundle prices initialized to zero and at every stage the auctioneer can only raise prices of bundles demanded by the bidders until this stage.",
                "In addition, each bidder can only receive bundles he demanded during the auction.",
                "Note that NBEA auctions are by definition conservative.",
                "Proposition 6.3.",
                "If every bidder demands a single bundle in each step of the auction, conservative auctions may run for an exponential number of steps even for additive valuations.",
                "If the bidders are allowed to submit all the bundles in their demand sets in each step, then conservative auctions can run in a polynomial number of steps for any profile of valuations, as long as the maximal valuation L is polynomial in m, n and 1 δ .",
                "Acknowledgments: The authors thank Moshe Babaioff, Shahar Dobzinski, Ron Lavi, Daniel Lehmann, Ahuva Mualem, David Parkes, Michael Schapira and Ilya Segal for helpful discussions.",
                "Supported by grants from the Israeli Academy of Sciences and the USAIsrael Binational Science Foundation. 7.",
                "REFERENCES [1] amazon.",
                "Web Page: http://www.amazon.com. [2] ebay.",
                "Web Page: http://www.ebay.com. [3] L. M. Ausubel and P. R. Milgrom.",
                "Ascending auctions with package bidding.",
                "Frontiers of Theoretical Economics, 1:1-42, 2002. [4] Lawrence Ausubel.",
                "An efficient dynamic auction for heterogeneous commodities, 2000.",
                "Working paper, University of Maryland. [5] Yair Bartal, Rica Gonen, and Noam Nisan.",
                "Incentive compatible multi unit combinatorial auctions.",
                "In TARK 03, 2003. [6] Alejandro Bertelsen.",
                "Substitutes valuations and m -concavity.",
                "M.Sc.",
                "Thesis, The Hebrew University of Jerusalem, 2005. [7] Avrim Blum, Jeffrey C. Jackson, Tuomas Sandholm, and Martin A. Zinkevich.",
                "Preference elicitation and query learning.",
                "Journal of Machine Learning Research, 5:649-667, 2004. [8] Liad Blumrosen and Noam Nisan.",
                "On the computational power of iterative auctions I: demand queries.",
                "Working paper, The Hebrew University of 30 Valuations are called additive if for any disjoint bundles A and B, v(A ∪ B) = v(A) + v(B).",
                "Additive valuations are both sub-additive and super-additive and are determined by the m values assigned for the singletons. 42 Jerusalem.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [9] Liad Blumrosen and Noam Nisan.",
                "On the computational power of iterative auctions II: ascending auctions.",
                "Working paper, The Hebrew University of Jerusalem.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html. [10] P. Cramton, L.M.",
                "Ausubel, and P.R.",
                "Milgrom.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 5.",
                "The Clock-Proxy Auction: A Practical Combinatorial Auction Design.",
                "MIT Press.",
                "Forthcoming, 2005. [11] P. Cramton, Y. Shoham, and R. Steinberg (Editors).",
                "Combinatorial Auctions.",
                "MIT Press.",
                "Forthcoming, 2005. [12] G. Demange, D. Gale, and M. Sotomayor.",
                "Multi-item auctions.",
                "Journal of Political Economy, 94:863-872, 1986. [13] Shahar Dobzinski, Noam Nisan, and Michael Schapira.",
                "Approximation algorithms for cas with complement-free bidders.",
                "In The 37th ACM symposium on theory of computing (STOC)., 2005. [14] Shahar Dobzinski and Michael Schapira.",
                "Optimal upper and lower approximation bounds for k-duplicates combinatorial auctions.",
                "Working paper, the Hebrew University. [15] Combinatorial bidding conference.",
                "Web Page: http://wireless.fcc.gov/auctions/conferences/combin2003. [16] Faruk Gul and Ennio Stacchetti.",
                "Walrasian equilibrium with gross substitutes.",
                "Journal of Economic Theory, 87:95 - 124, 1999. [17] Faruk Gul and Ennio Stacchetti.",
                "The english auction with differentiated commodities.",
                "Journal of Economic Theory, 92(3):66 - 95, 2000. [18] J. Hastad.",
                "Almost optimal lower bounds for small depth circuits.",
                "In 18th STOC, pages 6-20, 1986. [19] Ron Holzman, Noa Kfir-Dahav, Dov Monderer, and Moshe Tennenholtz.",
                "Bundling equilibrium in combinatrial auctions.",
                "Games and Economic Behavior, 47:104-123, 2004. [20] H. Karloff.",
                "Linear Programming.",
                "Birkh¨auser Verlag, 1991. [21] Frank Kelly and Richard Steinberg.",
                "A combinatorial auction with multiple winners for universal service.",
                "Management Science, 46:586-596, 2000. [22] A.S. Kelso and V.P.",
                "Crawford.",
                "Job matching, coalition formation, and gross substitute.",
                "Econometrica, 50:1483-1504, 1982. [23] Subhash Khot, Richard J. Lipton, Evangelos Markakis, and Aranyak Mehta.",
                "Inapproximability results for combinatorial auctions with submodular utility functions.",
                "In Working paper., 2004. [24] Sebastien Lahaie and David C. Parkes.",
                "Applying learning algorithms to preference elicitation.",
                "In EC 04. [25] Benny Lehmann, Daniel Lehmann, and Noam Nisan.",
                "Combinatorial auctions with decreasing marginal utilities.",
                "In ACM conference on electronic commerce.",
                "To appear, Games and Economic Behaviour., 2001. [26] D. Lehmann, L. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "JACM, 49(5):577-602, Sept. 2002. [27] A. Mas-Collel, W. Whinston, and J.",
                "Green.",
                "Microeconomic Theory.",
                "Oxford university press, 1995. [28] Debasis Mishra and David Parkes.",
                "Ascending price vickrey auctions using primal-dual algorithms., 2004.",
                "Working paper, Harvard University. [29] Noam Nisan.",
                "The <br>communication complexity</br> of approximate set packing and covering.",
                "In ICALP 2002. [30] Noam Nisan.",
                "Bidding and allocation in combinatorial auctions.",
                "In ACM Conference on Electronic Commerce, 2000. [31] Noam Nisan.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 1.",
                "Bidding Languages.",
                "MIT Press.",
                "Forthcoming, 2005. [32] Noam Nisan and Ilya Segal.",
                "The communication requirements of efficient allocations and supporting prices, 2003.",
                "Working paper.",
                "Available from http://www.cs.huji.ac.il/˜noam/mkts.html Forthcoming in the Journal of Economic Theory. [33] Noam Nisan and Ilya Segal.",
                "Exponential communication inefficiency of demand queries, 2004.",
                "Working paper.",
                "Available from http://www.stanford.edu/ isegal/queries1.pdf. [34] D. C. Parkes and L. H. Ungar.",
                "An ascending-price generalized vickrey auction.",
                "Tech.",
                "Rep., Harvard University, 2002. [35] David Parkes.",
                "In P. Cramton and Y. Shoham and R. Steinberg (Editors), Combinatorial Auctions.",
                "Chapter 3.",
                "Iterative Combinatorial Auctions.",
                "MIT Press.",
                "Forthcoming, 2005. [36] David C. Parkes.",
                "Iterative combinatorial auctions: Achieving economic and computational efficiency.",
                "Ph.D. Thesis, Department of Computer and Information Science, University of Pennsylvania., 2001. [37] David C. Parkes and Lyle H. Ungar.",
                "Iterative combinatorial auctions: Theory and practice.",
                "In AAAI/IAAI, pages 74-81, 2000. [38] Ariel Rubinstein.",
                "Why are certain properties of binary relations relatively more common in natural languages.",
                "Econometrica, 64:343-356, 1996. [39] Tuomas Sandholm.",
                "Algorithm for optimal winner determination in combinatorial auctions.",
                "In Artificial Intelligence, volume 135, pages 1-54, 2002. [40] P. Santi, V. Conitzer, and T. Sandholm.",
                "Towards a characterization of polynomial preference elicitation with value queries in combinatorial auctions.",
                "In The 17th Annual Conference on Learning Theory, 2004. [41] Ilya Segal.",
                "The communication requirements of social choice rules and supporting budget sets, 2004.",
                "Working paper.",
                "Available from http://www.stanford.edu/ isegal/rules.pdf. [42] P.R.",
                "Wurman and M.P.",
                "Wellman.",
                "Akba: A progressive, anonymous-price combinatorial auction.",
                "In Second ACM Conference on Electronic Commerce, 2000. [43] Martin A. Zinkevich, Avrim Blum, and Tuomas Sandholm.",
                "On polynomial-time preference elicitation with value queries.",
                "In ACM Conference on Electronic Commerce, 2003. 43"
            ],
            "original_annotated_samples": [
                "The <br>communication complexity</br> of approximate set packing and covering."
            ],
            "translated_annotated_samples": [
                "La <br>complejidad de comunicación</br> del empaquetamiento y cobertura de conjuntos aproximados."
            ],
            "translated_text": "En el Poder Computacional de Subastas Iterativas∗ [Resumen Extendido] Liad Blumrosen Escuela de Ingeniería e Informática Universidad Hebrea de Jerusalén Jerusalén, Israel liad@cs.huji.ac.il Noam Nisan Escuela de Ingeniería e Informática Universidad Hebrea de Jerusalén Jerusalén, Israel noam@cs.huji.ac.il RESUMEN Nos embarcamos en un análisis sistemático del poder y limitaciones de las subastas combinatorias iterativas. La mayoría de las subastas combinatorias iterativas existentes se basan en sugerir precios repetidamente para paquetes de artículos y consultar a los postores sobre su demanda bajo estos precios. Demostramos un gran número de resultados que muestran los límites de lo que se puede lograr mediante subastas de este tipo. Primero nos enfocamos en subastas que utilizan un número polinomial de consultas de demanda, y luego analizamos el poder de diferentes tipos de subastas de precio ascendente. Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía Términos Generales Algoritmos, Economía, Teoría 1. Las subastas combinatorias han recibido recientemente mucha atención. En una subasta combinatoria, un conjunto M de m artículos no idénticos se venden en una sola subasta a n postores competidores. Los postores tienen preferencias con respecto a los lotes de artículos que pueden recibir. Las preferencias del postor i están especificadas por una función de valoración vi: 2M → R+, donde vi(S) denota el valor que el postor i asigna a ganar el conjunto de artículos S. Suponemos disposición libre, es decir, que los vi son monótonos no decrecientes. El objetivo habitual del subastador es optimizar el bienestar social P i vi(Si), donde la asignación S1...Sn debe ser una partición de los artículos. Las aplicaciones incluyen muchos problemas complejos de asignación de recursos y, de hecho, las subastas combinatorias pueden ser vistas como la abstracción común de muchos problemas complejos de asignación de recursos. Las subastas combinatorias enfrentan dificultades económicas y computacionales y son un problema central en la frontera recientemente activa de la teoría económica y la informática. Un libro próximo [11] aborda muchos de los problemas involucrados en el diseño e implementación de subastas combinatorias. El diseño de una subasta combinatoria implica muchas consideraciones. En este artículo nos enfocamos en un solo tema central: la comunicación entre los oferentes y el mecanismo de asignación - la obtención de preferencias. Transferir toda la información sobre las preferencias de los licitadores requiere una cantidad de comunicación inasumible (exponencial en m). Por lo tanto, las subastas de revelación directa en las que los postores simplemente declaran sus preferencias al mecanismo solo son prácticas para tamaños de subasta muy pequeños o para familias muy limitadas de preferencias de postores. Por lo tanto, hemos visto una multitud de subastas iterativas sugeridas en las que el protocolo de subasta interactúa repetidamente con los diferentes postores, con el objetivo de obtener de manera adaptativa suficiente información sobre las preferencias de los postores para poder encontrar una asignación buena (óptima o cercana a óptima). La mayoría de las subastas iterativas sugeridas proceden manteniendo precios temporales para los lotes de artículos y consultando repetidamente a los postores sobre sus preferencias entre los lotes bajo el conjunto actual de precios, y luego actualizando el conjunto de precios de los lotes según las respuestas recibidas (por ejemplo, [22, 12, 17, 37, 3]). Efectivamente, una subasta iterativa de este tipo accede a las preferencias de los postores haciendo repetidamente el siguiente tipo de consulta de demanda a los postores: Consulta al postor i: un vector de precios de paquetes p = {p(S)}S⊆M; Respuesta: un paquete de artículos S ⊆ M que maximiza vi(S) − p(S). Estos tipos de consultas son muy naturales en un entorno económico, ya que capturan las preferencias reveladas de los postores. Algunas subastas, llamadas subastas de precio por artículo o de precio lineal, especifican un precio pi para cada artículo, y el precio de cualquier conjunto dado S siempre es lineal, p(S) = Σ i∈S pi. Otras subastas, llamadas subastas de precio por paquete, permiten especificar precios arbitrarios (no lineales) p(S) para los paquetes. Otra diferenciación importante entre los modelos de subastas iterativas se basa en si utilizan precios anónimos o no anónimos: En algunas subastas, los precios que se presentan a los postores son siempre los mismos (precios anónimos). En otras subastas (no anónimas), diferentes postores pueden enfrentar diferentes vectores de precios (discriminatorios). En las subastas de precio ascendente, obligar a que los precios sean anónimos puede ser una restricción significativa. En este artículo, nos embarcamos en un análisis sistemático del poder computacional de las subastas iterativas basadas en consultas de demanda. No buscamos presentar subastas para uso práctico, sino más bien entender las limitaciones y posibilidades de este tipo de subastas. En la primera parte de este documento, nuestra pregunta principal es ¿qué se puede hacer utilizando un número polinómico de este tipo de consultas? Es decir, polinomial en los parámetros principales del problema: n, m y el número de bits t necesarios para representar un único valor vi(S). Ten en cuenta que desde un punto de vista algorítmico estamos hablando de algoritmos de tiempo sublineal: el tamaño de la entrada aquí es realmente n(2m − 1) números, las descripciones de las funciones de valoración de todos los postores. Hay dos aspectos de eficiencia computacional en estos contextos: el primero es la comunicación con los postores, es decir, la cantidad de consultas realizadas, y el segundo es la usual tratabilidad computacional. Nuestros límites inferiores dependerán solo del número de consultas y se mantendrán independientemente de cualquier suposición computacional como P = NP. Nuestros límites superiores siempre serán computacionalmente eficientes tanto en términos del número de consultas como en términos de computación regular. Como se mencionó, este artículo se centra en el único aspecto de la obtención de preferencias y en sus consecuencias computacionales, sin abordar cuestiones de incentivos. Esto refuerza nuestros límites inferiores, pero significa que los límites superiores también requieren evaluación desde esta perspectiva antes de ser utilizados en cualquier subasta combinatoria real. La segunda parte de este documento estudia el poder de las subastas de precio ascendente. Las subastas ascendentes son subastas iterativas donde los precios publicados no pueden disminuir con el tiempo. En este trabajo, intentamos analizar sistemáticamente qué significan las diferencias entre varios modelos de subastas ascendentes. Intentamos responder a las siguientes preguntas: (i) ¿Qué modelos de subastas ascendentes pueden encontrar la asignación óptima, y para qué clases de valoraciones? (ii) En casos donde la asignación óptima no puede ser determinada por subastas ascendentes, ¿qué tan bien pueden estas subastas aproximar el bienestar social? (iii) ¿Cómo se comparan los diferentes modelos de subastas ascendentes? ¿Son algunos modelos computacionalmente más fuertes que otros? Las subastas ascendentes han sido ampliamente estudiadas en la literatura (ver la encuesta reciente de Parkes [35]). La mayor parte de este trabajo presentó límites superiores, es decir, mecanismos propuestos con precios ascendentes y analizó sus propiedades. Un resultado que se acerca más al nuestro es el de Gul y Stacchetti [17], quienes demostraron que ninguna subasta de precio ascendente de artículo puede siempre determinar los precios VCG, incluso para valoraciones de sustitutos. Nuestro marco es más general que la línea tradicional de investigación que se concentra en la asignación final y observamos, sin embargo, que alguna propiedad de incentivo débil viene de forma gratuita en las subastas de consulta de demanda, ya que los jugadores miopes responderán todas las consultas de demanda de manera veraz. También observamos que en algunos casos (¡pero no siempre!) los problemas de incentivos pueden ser manejados de forma ortogonal a los problemas de obtención de preferencias, por ejemplo, utilizando precios de Vickrey-Clarke-Groves (VCG) (por ejemplo, [4, 34]). Además, discutimos este resultado en la Sección 5.3. Subastas iterativas Subastas de demanda Subastas de precio de artículo Subastas de precio anónimo Subastas ascendentes 1 2 3 4 5 6 97 8 10 Figura 1: El diagrama clasifica las siguientes subastas según sus propiedades: (1) La adaptación [12] para la subasta de Kelso & Crawford [22]. (2) La Subasta de Proxy [3] de Ausubel & Milgrom. (3) iBundle(3) de Parkes & Ungar [34]. (4) iBundle(2) de Parkes & Ungar [37]. (5) Nuestra adaptación descendente para la aproximación de 2 para valoraciones submodulares por [25] (ver Subsección 5.4). (6) La subasta de Ausubel [4] para valoraciones de sustitutos. (7) La adaptación de Nisan & Segal [32] de la aproximación O( √ m) por [26]. (8) La subasta de artículo duplicado por [5]. (9) Subasta para fórmulas de Leer-Una-Vez por [43]. (10) La Subasta AkBA por Wurman & Wellman [42]. pagos y en particular, en alcanzar equilibrios walrasianos o equilibrios competitivos. Se sabe que existe un equilibrio walrasiano en el caso de las valoraciones de sustitutos, y se sabe que es imposible para cualquier clase más amplia de valoraciones [16]. Esto no descarta otras asignaciones mediante subastas ascendentes: en este documento consideramos las subastas como un proceso computacional donde el resultado, tanto la asignación como los pagos, pueden determinarse según todos los datos recopilados a lo largo de la subasta; Este marco general refuerza nuestros resultados negativos. Encontramos el estudio de las subastas ascendentes atractivo por diversas razones. Primero, las subastas ascendentes son ampliamente utilizadas en muchos contextos de la vida real, desde las subastas de espectro de la FCC hasta casi cualquier sitio web de comercio electrónico (por ejemplo, [2, 1]). De hecho, esta es quizás la forma más directa de vender artículos: preguntar a los postores qué les gustaría comprar a ciertos precios, y aumentar los precios de los productos con alta demanda. Las subastas ascendentes también se consideran más intuitivas para muchos postores, y se cree que aumentan la confianza de los postores en el subastador, ya que ven el resultado que emerge gradualmente de las respuestas de los postores. Las subastas ascendentes también tienen otras propiedades económicas deseadas, por ejemplo, implican una revelación de información menor (considere, por ejemplo, las subastas inglesas frente a las subastas de segundo precio sellado). 1.1 Trabajo Existente Muchos mecanismos de subasta combinatoria iterativos dependen de consultas de demanda (ver la encuesta en [35]). La Figura 1 muestra un equilibrio walrasiano como un vector de precios de los artículos para los cuales todos los artículos se venden cuando cada postor recibe un conjunto en su conjunto de demanda. En algunos diseños de subasta recientes (por ejemplo, [4, 28]), los pagos no son necesariamente los precios finales de las subastas. Familia de valoración Límite superior Referencia Límite inferior Referencia General min(n, O( √ m)) [26], Sección 4.2 min(n, m1/2− ) [32] Sustitutos 1 [32] Submodular 2 [25], 1+ 1 2m , 1-1 e (*) [32],[23] Subaditiva O(logm) [13] 2 [13] k-duplicados O(m1/k+1 ) [14] O(m1/k+1 ) [14] Adquisiciones ln m [32] (log m)/2 [29, 32] Figura 2: Los mejores factores de aproximación actualmente alcanzables por subastas combinatorias computacionalmente eficientes, para varias clases de valoraciones. Todos los límites inferiores en la tabla se aplican a todas las subastas iterativas (excepto la marcada con *); todos los límites superiores en la tabla se logran con consultas de demanda de precio de artículo. Categoriza las clases básicas de subastas implicadas por combinaciones de las propiedades anteriores y clasifica algunas de las subastas propuestas en la literatura de acuerdo con esta clasificación. Para nuestros propósitos, dos familias de estas subastas sirven como los principales puntos de partida motivadores: la primera son las subastas de precio de artículo ascendente de [22, 17] que con eficiencia computacional encuentran una asignación óptima entre valoraciones de sustitutos (brutos), y la segunda son las subastas de precio de paquete ascendente de [37, 3] que encuentran una asignación óptima entre valoraciones generales, pero no necesariamente con eficiencia computacional. El límite inferior principal en esta área, debido a [32], establece que, de hecho, debido a los requisitos de comunicación inherentes, no es posible que ninguna subasta iterativa encuentre la asignación óptima entre valoraciones generales con un número subexponencial de consultas. Un límite inferior exponencial similar fue demostrado en [32] también para aproximar de manera óptima la asignación dentro de un factor de m1/2−. Se conocen varios límites inferiores y superiores para la aproximación de algunas clases naturales de valoraciones, los cuales se resumen en la Figura 2. En [32], también se muestra la universalidad de las consultas de demanda: cualquier protocolo de comunicación no determinista para encontrar una asignación que optimice el bienestar social puede convertirse en uno que solo utilice consultas de demanda (con precios de paquetes). En [41] esto también se generalizó a protocolos no deterministas para encontrar asignaciones que satisfacen otros tipos naturales de requisitos económicos (por ejemplo, eficiencia social aproximada, ausencia de envidia). Sin embargo, en [33] se demostró que esta completitud de las consultas de demanda solo se cumple en el entorno no determinista, mientras que en el entorno determinista habitual, las consultas de demanda (incluso con precios de paquetes) pueden ser exponencialmente más débiles que la comunicación general. Las subastas de precio por paquete son una generalización de las subastas de precio por artículo (más naturales e intuitivas). Se sabe que las subastas de precio de artículo pueden ser exponencialmente más débiles: un buen ejemplo es el caso de valoraciones que son un XOR de k paquetes, donde k es pequeño (digamos, polinómico). Lahaie y Parkes [24] muestran una subasta de precio de paquete económicamente eficiente que utiliza un número polinómico de consultas siempre que k sea polinómico. Por el contrario, [7] muestra que existen valoraciones que son XORs de k = √ m paquetes, de tal manera que cualquier subasta de precio de artículo que encuentre una asignación óptima entre ellos requiere un número exponencial de consultas. Estos resultados forman parte de una línea reciente de investigación ([7, 43, 24, 40]) que estudia el problema de la obtención de preferencias en subastas combinatorias y su relación con el problema de obtención completo (es decir, aprender las valoraciones exactas de los postores). Estas son valoraciones donde los postores tienen valores para k paquetes específicos, y el valor de cada conjunto es el valor máximo de uno de estos paquetes que contiene. Estos documentos adaptan métodos de la teoría del aprendizaje automático al entorno de subastas combinatorias. El problema de la obtención de preferencias y el problema de la obtención completa se relacionan con un problema bien estudiado en microeconomía conocido como el problema de integrabilidad (ver, por ejemplo, [27]). Este problema estudia si y cuándo se puede derivar la función de utilidad de un consumidor a partir de su función de demanda. Organización del documento: Debido al relativamente gran número de resultados que presentamos, comenzamos con una revisión de nuestros nuevos resultados en la Sección 2. Después de describir nuestro modelo formal en la Sección 3, presentamos nuestros resultados sobre el poder de las consultas de demanda en la Sección 4. Luego, describimos el poder de las subastas ascendentes de precio de artículo (Sección 5) y las subastas ascendentes de precio de paquete (Sección 6). Los lectores que estén principalmente interesados en la discusión autocontenida de las subastas ascendentes pueden omitir la Sección 4. Las pruebas faltantes de la Sección 4 se pueden encontrar en la parte I del artículo completo ([8]). Las pruebas faltantes de las Secciones 5 y 6 se pueden encontrar en la parte II del artículo completo ([9]). 2. Una encuesta de nuestros resultados Nuestro análisis sistemático está compuesto por la combinación de un número bastante grande de resultados que caracterizan el poder y las limitaciones de varias clases de subastas. En esta sección, presentaremos una exposición describiendo nuestros nuevos resultados. Primero discutimos el poder de las subastas iterativas de demanda-consulta, y luego dirigimos nuestra atención a las subastas ascendentes. La Figura 3 resume algunos de nuestros principales resultados. 2.1 Comparación de consultas de demanda de tipos de consultas Preguntamos primero qué otros tipos naturales de consultas podríamos imaginar que las subastas iterativas utilicen. Aquí hay una lista de tales consultas que son naturales, han sido utilizadas en la literatura, o que encontramos útiles. 1. Consulta de valor: El subastador presenta un paquete S, el postor informa su valor v(S) para este paquete. 2. Consulta de valor marginal: El subastador presenta un paquete A y un artículo j, el postor informa cuánto está dispuesto a pagar por j, dado que ya posee A, es decir, v(j|A) = v(A ∪ {j}) − v(A). 3. Consulta de demanda (con precios de los artículos): El subastador presenta un vector de precios de los artículos p1...pm; el postor informa su demanda bajo estos precios, es decir, algún conjunto S que maximiza v(S) − Σ i∈S pi. Se debe especificar una regla de desempate. ¿Todos nuestros resultados 31 Restricción de Comunicación pueden encontrar una asignación óptima? Límite superior para el bienestar aprox. Límite inferior para el bienestar aproximado. Consultas de demanda de precio de artículo Sí 1 1 Poli. Comunicación No [32] min(n, O(m1/2 )) [26] min(n, m1/2− ) [32] Poli. Consultas de demanda de precio de artículo No [32] min(n, O(m1/2 )) min(n, m1/2− ) [32] Poli. Este documento estudia la eficiencia económica de subastas que siguen ciertas restricciones de comunicación. Para cada clase de subastas, la tabla muestra si se puede lograr la asignación óptima, o en su defecto, qué tan bien se puede aproximar (tanto los límites superiores como los límites inferiores). Los nuevos resultados están resaltados. Abreviaturas: Poly. (número/tamaño polinomial), AA (subastas ascendentes). - significa que actualmente no se conoce nada excepto soluciones triviales. 4. Consulta de utilidad indirecta: El subastador presenta un conjunto de precios de los artículos p1...pm, y el postor responde con su utilidad indirecta bajo estos precios, es decir, la utilidad más alta que puede lograr de un conjunto bajo estos precios: maxS⊆M (v(S) − P i∈S pi). Consulta de demanda relativa: el subastador presenta un conjunto de precios no nulos p1...pm, y el postor informa el conjunto que maximiza su valor por unidad de dinero, es decir, algún conjunto que maximiza v(S)P i∈S pi. Teorema: Cada una de estas consultas puede ser simulada eficientemente (es decir, en tiempo polinómico en n, m y el número de bits de precisión t necesarios para representar un único valor vi(S)) por una secuencia de consultas de demanda con precios de artículos. En particular, esto muestra que las consultas de demanda pueden obtener toda la información sobre una valoración al simular todas las consultas de valor de 2m −1. También observamos que las consultas de valor y las consultas de valor marginal pueden simularse mutuamente en tiempo polinómico y que las consultas de demanda y las consultas de utilidad indirecta también pueden simularse mutuamente en tiempo polinómico. Demostramos que puede ser necesario realizar exponencialmente muchas consultas de valor para simular una sola consulta de demanda. Es interesante notar que para la clase restringida de valoraciones sustitutivas, las consultas de demanda pueden ser simuladas por un número polinomial de consultas de valor [6]. Aproximación del bienestar La siguiente pregunta que nos hacemos es ¿qué tan bien puede aproximar una subasta computacionalmente eficiente que solo utiliza consultas de demanda la asignación óptima? Se conocen dos obstáculos separados: En [32], se demostró una cota inferior de min(n, m1/2− ), para cualquier fijo > 0, para el factor de aproximación aplicable para cualquier regla de desempate fija. Esto es exactamente la utilidad lograda por el paquete que se devolvería en una consulta de demanda con los mismos precios. Esta noción se relaciona con la función de utilidad indirecta estudiada en la literatura microeconómica (ver, por ejemplo, [27]). Nota que cuando todos los precios son 1, el postor en realidad informa el paquete con el precio por artículo más alto. Encontramos este tipo de consulta útil, por ejemplo, en el diseño del algoritmo de aproximación descrito en la Figura 5 de la Sección 4.2, obtenido utilizando cualquier cantidad polinómica de comunicación. Un límite computacional con el mismo valor se aplica incluso para el caso de postores de mente única, pero bajo la suposición de NP = ZPP [39]. Como se señala en [32], el algoritmo voraz computacionalmente eficiente de [26] puede adaptarse para convertirse en una subasta iterativa de tiempo polinómico que logra un factor de aproximación casi coincidente de min(n, O( √ m)). Esta subasta iterativa puede implementarse con consultas de demanda de precios por paquete, pero, hasta donde vemos, no como una con precios por artículo. Dado que en una consulta de demanda de precio de paquete único se pueden presentar un número exponencial de precios, este algoritmo puede tener un costo de comunicación exponencial. En la Sección 4.2, describimos una subasta de precio de artículo diferente que logra el mismo factor de aproximación con un número polinomial de consultas (y por lo tanto con una comunicación polinomial). Teorema: Existe una subasta iterativa computacionalmente eficiente con consultas de demanda de precios de artículos que encuentra una asignación que aproxima el bienestar óptimo entre valoraciones arbitrarias dentro de un factor de min(n, O( √ m)). Uno puede intentar obtener un factor de aproximación utilizando subastas iterativas que solo utilicen las consultas de valor más débiles. Sin embargo, demostramos que esto es imposible: Teorema: Cualquier subasta iterativa que utilice un número polinómico (en n y m) de consultas de valor no puede lograr un factor de aproximación mejor que O( m log m ). Sin embargo, cabe destacar que las subastas con solo consultas de valor no son completamente triviales en poder: las subastas de agrupación de Holzman et al. [19] pueden implementarse fácilmente mediante un número polinómico de consultas de valor y pueden lograr un factor de aproximación de O( m√ log m ) utilizando O(log m) paquetes de tamaño equitativo. No sabemos cómo cerrar la brecha (pequeña) entre este límite superior y nuestro límite inferior. Representando precios de paquetes. Luego abordamos un problema crítico con las subastas de precios de paquetes que fue evitado por nuestro modelo, así como por todos los trabajos anteriores que utilizaron subastas de precios de paquetes: ¿cómo se representan los precios de los paquetes? Para subastas de precio de artículo, esto no es un problema ya que una consulta solo necesita especificar un pequeño número, m, de precios. En las subastas de precios por paquetes, esa situación es más difícil ya que hay exponencialmente muchos paquetes que requieren fijar precios. Nuestro modelo básico (como todos los trabajos anteriores que utilizaron precios de paquete, por ejemplo, [37, 34, 3]), ignora este problema y solo requiere que los precios sean determinados, de alguna manera, por el protocolo. Un modelo más refinado fijaría un idioma específico para denotar los precios de los paquetes, obligaría al protocolo a representar los precios de los paquetes en este idioma y requeriría que las representaciones de los precios de los paquetes también fueran polinomiales. ¿Cómo podría ser un lenguaje para denotar precios de todos los paquetes? Primero, hay que tener en cuenta que especificar un precio para cada paquete es equivalente a especificar una valoración. Segundo, como se señala en [31], la mayoría de los lenguajes de oferta propuestos son en realidad solo lenguajes para representar valoraciones, es decir, una representación sintáctica de valoraciones, por lo tanto podríamos usar cualquiera de ellos. Este punto de vista abre el tema general de qué idioma se debe utilizar en las subastas de precios en paquete y cuáles son las implicaciones de esta elección. Aquí iniciamos esta línea de investigación. Consideramos subastas de precios de paquetes donde los precios deben ser dados como una oferta XOR, es decir, el protocolo debe indicar explícitamente el precio de cada paquete cuyo valor sea diferente al de todos sus subconjuntos adecuados. Es importante tener en cuenta que todas las subastas de precios por paquetes que no especifiquen explícitamente un idioma de oferta deben usar implícitamente este idioma o uno menos restrictivo, ya que sin un idioma específico se necesitaría listar los precios de todos los paquetes, quizás excepto los triviales (aquellos con valor 0, o más generalmente, aquellos cuyo valor está determinado por uno de sus subconjuntos propios). Mostramos que una vez que se tiene en cuenta la longitud de la representación de los precios de los paquetes (utilizando el lenguaje XOR), las subastas de precios de paquetes ya no son estrictamente más fuertes que las subastas de precios de artículos. Define el costo de una subasta iterativa como la longitud total de las consultas y respuestas utilizadas a lo largo de la subasta (en el peor de los casos). Teorema: Para alguna clase de valoraciones, las subastas de precios de paquetes que utilizan el lenguaje XOR requieren un costo exponencial para encontrar la asignación óptima. Por el contrario, las subastas de precio por artículo pueden encontrar la asignación óptima para esta clase dentro de un costo polinómico. Esto pone en duda la aplicabilidad de las subastas de precio por paquete como [3, 37], y puede justificar el uso de métodos de fijación de precios híbridos como la subasta de reloj-proxy de Ausubel, Cramton y Milgrom ([10]). Las consultas de demanda y los programas lineales. El problema de determinación del ganador en subastas combinatorias puede formularse como un programa entero. En muchos casos, resolver la relajación del programa lineal de este programa entero es útil: para algunas clases restringidas de valoraciones, encuentra el óptimo del programa entero (por ejemplo, valoraciones de sustitución [22, 17]) o ayuda a aproximar el óptimo (por ejemplo, mediante redondeo aleatorio [13, 14]). Sin embargo, el programa lineal tiene un número exponencial de variables. Nisan y Segal [32] observaron el sorprendente hecho de que, a pesar de ello, nuestra prueba se basa en los sofisticados límites inferiores conocidos para circuitos de profundidad constante. No pudimos encontrar una prueba elemental. Dado el número exponencial de variables, este programa lineal puede resolverse con comunicación polinómica. La idea básica es resolver el programa dual utilizando el método del Elipsoide (ver, por ejemplo, [20]). El programa dual tiene un número polinomial de variables, pero un número exponencial de restricciones. El algoritmo de Elipsoide se ejecuta en tiempo polinómico incluso en tales programas, siempre que se proporcione un oráculo de separación para el conjunto de restricciones. Sorprendentemente, dicho oráculo de separación puede implementarse utilizando una sola consulta de demanda (con precios de los artículos) a cada uno de los postores. El tratamiento de [32] fue algo improvisado para el problema en cuestión (el caso de las valoraciones de sustitución). Aquí presentamos una forma algo más general de esta importante observación. Llamemos a la siguiente clase de programas lineales relajación de determinación de ganadores generalizada (GWDR) LPs: Maximizar X i∈N,S⊆M wi xi,S vi(S) sujeto a. El caso donde wi = 1, di = 1, qj = 1 (para cada i, j) es la relajación lineal habitual del problema de determinación del ganador. Más generalmente, wi puede ser visto como el peso dado al bienestar del postor, qj puede ser visto como la cantidad de unidades del bien j, y di puede ser visto como la duplicidad del número de postores del tipo i. Teorema: Cualquier programa lineal de GWDR puede ser resuelto en tiempo polinómico (en n, m y el número de bits de precisión t) usando solo consultas de demanda con precios de los artículos. Subastas ascendentes de precios de artículos: Es bien sabido que las subastas ascendentes de precios de artículos de Kelso y Crawford [22] y sus variantes [12, 16] encuentran la asignación óptima siempre y cuando las valoraciones de todos los jugadores tengan la propiedad de sustitutos. La pregunta obvia es si se puede encontrar la asignación óptima para una clase más amplia de valoraciones. Nuestro resultado principal aquí es un resultado negativo fuerte: Teorema: Existe un problema de 2 elementos y 2 jugadores donde ninguna subasta de precio ascendente puede encontrar la asignación óptima. Esto contrasta tanto con el poder de las subastas ascendentes de precios de paquetes como con el poder de las consultas generales de demanda de precios de artículos (ver arriba), ambos de los cuales siempre pueden encontrar la asignación óptima e incluso proporcionar una completa obtención de preferencias. La misma prueba demuestra un resultado de imposibilidad similar para otros tipos de subastas (por ejemplo, subastas descendentes, subastas no anónimas). Más extensión de este resultado: • Obtener algunas clases de valoraciones requiere un número exponencial de trayectorias ascendentes de precios de artículos. La solución óptima producida tendrá un soporte polinómico y, por lo tanto, puede ser listada completamente. • Se necesitan al menos k − 1 trayectorias ascendentes de precios de artículos para obtener fórmulas XOR con k términos. Este resultado es en cierto sentido ajustado, ya que demostramos que cualquier fórmula XOR de k términos puede ser completamente revelada por k−1 subastas ascendentes no determinísticas (es decir, cuando algún profesor externo instruye al subastador sobre cómo aumentar los precios). También demostramos que las subastas ascendentes de precio de artículo y las subastas iterativas limitadas a un número polinómico de consultas (de cualquier tipo, no necesariamente ascendentes) son incomparables en su poder: las subastas ascendentes, con incrementos lo suficientemente pequeños, pueden revelar las preferencias en casos donde cualquier número polinómico de consultas no puede. Motivados por varios artículos recientes que estudiaron la relación entre la obtención y la obtención completa de las preferencias en subastas combinatorias (por ejemplo, [7, 24]), exploramos la diferencia entre estos problemas en el contexto de subastas ascendentes. Mostramos que aunque una subasta ascendente única puede determinar la asignación óptima entre cualquier número de postores con valoraciones sustitutivas, no puede obtener completamente dicha valoración ni siquiera para un único postor. Aunque se demostró en [25] que el conjunto de valoraciones de sustitutos tiene medida cero en el espacio de valoraciones generales, no se conoce su dimensión, y en particular aún está abierto si una cantidad polinómica de información es suficiente para describir una valoración de sustitutos. Si bien nuestro resultado puede ser un pequeño paso en esa dirección (una elicitación completa de polinomios aún puede ser posible con otros protocolos de comunicación), señalamos que nuestro resultado de imposibilidad también se aplica a valoraciones en la clase OXS definida por [25], valoraciones que podemos demostrar tienen una representación compacta. También presentamos varios resultados que separan el poder de diferentes modelos para subastas combinatorias ascendentes que utilizan precios de artículos: demostramos, como era de esperar, que las subastas ascendentes adaptativas son más poderosas que las subastas ascendentes obvias y que las subastas ascendentes no deterministas son más poderosas que las subastas ascendentes deterministas. También comparamos diferentes tipos de subastas no anónimas (por ejemplo, simultáneas o secuenciales), y observamos que las subastas anónimas de precio por lote y las subastas no anónimas de precio por artículo son incomparables en su poder. Finalmente, motivados por las subastas holandesas, consideramos las subastas descendentes y cómo se comparan con las ascendentes; mostramos clases de valoraciones que pueden ser obtenidas mediante subastas ascendentes de precio de artículo pero no mediante subastas descendentes de precio de artículo, y viceversa. Subastas ascendentes de precio por paquetes: Todas las subastas ascendentes de precio por paquetes conocidas que son capaces de encontrar la asignación óptima entre valoraciones generales (con disposición libre) utilizan precios no anónimos. Las subastas anónimas de precio ascendente (por ejemplo, [42, 21, 37]) solo se sabe que pueden encontrar la asignación óptima entre valoraciones superaditivas o algunas otras clases simples ([36]). Demostramos que esto no es un error: Teorema: Ninguna subasta ascendente con precios anónimos puede encontrar la asignación óptima entre valoraciones generales. La computación no determinista se utiliza ampliamente en informática y también en economía (por ejemplo, un equilibrio walrasiano o [38]). En algunos contextos, los modelos deterministas y no deterministas tienen igual poder (por ejemplo, en la computación con autómatas finitos). Este límite es independiente del tiempo de ejecución, y también se aplica a subastas descendentes y subastas no determinísticas. Fortalecemos significativamente este resultado al demostrar que las subastas ascendentes anónimas no pueden producir una aproximación mejor que O( √ m) - la proporción de aproximación que se puede lograr con un número polinomial de consultas ([26, 32]) y, como se mencionó, con un número polinomial de consultas de demanda de precio de artículo. El mismo límite inferior claramente se aplica a las subastas anónimas de artículos y precios ascendentes, ya que dichas subastas pueden ser simuladas por subastas anónimas de paquetes y precios ascendentes. Actualmente no tenemos ningún límite inferior en la aproximación alcanzable por subastas ascendentes de artículos y precios no anónimas. Finalmente, estudiamos el rendimiento de las subastas ascendentes existentes computacionalmente eficientes. Estos protocolos ([37, 3]) requieren tiempo exponencial en el peor de los casos, y esto es inevitable como se muestra en [32]. Sin embargo, también observamos que estas subastas, al igual que toda la clase de subastas de precios de paquetes ascendentes similares, requieren un tiempo exponencial incluso para valoraciones aditivas simples. Esto es evitable y de hecho, las subastas ascendentes de precio de artículo de [22] pueden encontrar la asignación óptima para estas valoraciones simples con comunicación polinómica. 3. El MODELO 3.1 Subastas Discretas para Valores Continuos Nuestro modelo tiene como objetivo capturar subastas iterativas que operan en valuaciones de valores reales. Existe una ligera dificultad técnica aquí al tratar de superar la brecha entre la naturaleza discreta de una subasta iterativa y la naturaleza continua de las valoraciones. Este es exactamente el mismo problema que al modelar una subasta inglesa simple. Hay tres formas estándar formales de modelarlo: 1. Modelar la subasta como un proceso continuo y estudiar su trayectoria en el tiempo. Por ejemplo, la subasta japonesa, también conocida como subasta holandesa, es básicamente un modelo continuo de un modelo inglés. Modelar la subasta como discreta y las valoraciones como continuas. En este caso introducimos un parámetro y generalmente requerimos que la subasta produzca resultados que estén cerca de lo óptimo. 3. Modelar las valoraciones como discretas. En este caso asumiremos que todas las valoraciones son múltiplos enteros de alguna cantidad fija pequeña δ, por ejemplo, 1 centavo. Toda comunicación en este caso es naturalmente finita. En este documento utilizamos la última formulación y asumimos que todos los valores son múltiplos de algún δ. Por lo tanto, en algunas partes del documento asumimos sin pérdida de generalidad que δ = 1, por lo tanto todas las valoraciones son enteras. Casi todos (si no todos) nuestros resultados se pueden traducir a los otros dos modelos con poco esfuerzo. 3.2 Valoraciones Un único subastador está vendiendo m artículos indivisibles no homogéneos en una sola subasta, y sea M el conjunto de estos 13 Otro modelo similar es el modelo de cuchillos móviles en la literatura de corte de pasteles. 34 artículos y sea N el conjunto de postores. Cada uno de los n postores en la subasta tiene una función de valoración vi : 2m → {0, δ, 2δ, ..., L}, donde para cada conjunto de artículos S ⊆ M, vi(S) denota el valor del postor i por el conjunto S y es un múltiplo de δ en el rango 0...L. A veces denotaremos el número de bits necesarios para representar tales valores en el rango 0...L por t = log L. Suponemos disposición libre, es decir, S ⊆ T implica vi(S) ≤ vi(T) y que vi(∅) = 0 para todos los postores. Mencionaremos las siguientes clases de valoraciones: • Una valoración se llama submodular si para todos los conjuntos de elementos A y B tenemos que v(A ∪ B) + v(A ∩ B) ≤ v(A) + v(B). • Una valoración se llama superaditiva si para todos los conjuntos disjuntos de elementos A y B tenemos que v(A∪B) ≥ v(A)+ v(B). • Una valoración se llama un XOR de k-bundles si puede representarse como una combinación XOR de a lo sumo k ofertas atómicas [30], es decir, si hay a lo sumo k bundles Si y precios pi tales que para todo S, v(S) = maxi|S⊇Si pi. Tales valoraciones serán denotadas por v = (S1 : p1) ⊕ (S2 : p2) ⊕ . . . ⊕ (Sk : pk).14 3.3 Subastas Iterativas El subastador establece un protocolo (equivalentemente un algoritmo), donde en cada etapa del protocolo se envía cierta información q - denominada la consulta - a algún postor i, y luego el postor i responde con una respuesta que depende de la consulta así como de su propia valoración. En este documento, asumimos que tenemos control total sobre el comportamiento de los postores, por lo que el protocolo también define una función de respuesta ri(q, vi) que especifica la respuesta del postor a la consulta q. El protocolo puede ser adaptativo: el valor de la consulta, así como el postor consultado, pueden depender de las respuestas recibidas para consultas anteriores. Al final del protocolo, se debe declarar una asignación S1...Sn, donde Si ∩ Sj = ∅ para i = j. Decimos que la subasta encuentra una asignación óptima si encuentra la asignación que maximiza el bienestar social Σ vi(Si). Decimos que se encuentra una c-aproximación si P i vi(Si) ≥ P i vi(Ti)/c donde T1...Tn es una asignación óptima. El tiempo de ejecución de la subasta en una instancia dada de las valoraciones de los postores es el número total de consultas realizadas en esta instancia. El tiempo de ejecución de un protocolo es el costo en el peor caso sobre todas las instancias. Cabe destacar que no imponemos limitaciones computacionales en el protocolo ni en los jugadores. Esto, por supuesto, solo refuerza nuestros resultados de dificultad. Sin embargo, nuestros resultados positivos no utilizarán este poder y serán eficientes también en el sentido computacional habitual. Nuestro objetivo será diseñar protocolos computacionalmente eficientes. Consideraremos un protocolo eficiente computacionalmente si su costo es polinómico en los parámetros relevantes: el número de postores n, el número de artículos m y t = log L, donde L es el valor máximo posible de un paquete. Sin embargo, cuando discutimos subastas de precio ascendente y sus variantes, se requerirá un protocolo computacionalmente eficiente. Por ejemplo, v = (abcd : 5) ⊕ (ab : 3) ⊕ (c : 4) denota la valoración XOR con los términos abcd, ab, c y precios 5, 3, 4 respectivamente. Para esta valoración, v(abcd) = 5, v(abd) = 3, v(abc) = 4. El tiempo de ejecución realmente mide los costos de comunicación y no el tiempo de ejecución computacional. Pseudo-polinómico, es decir, debería requerir un número de consultas que sea polinómico en m, n y L δ. Esto se debe a que las subastas ascendentes generalmente no pueden lograr esos tiempos de ejecución (considera incluso la subasta inglesa de un solo artículo). Cabe destacar que todos nuestros resultados proporcionan límites concretos, donde la dependencia de los parámetros se expresa explícitamente; utilizamos la notación estándar de big-Oh solo como una abreviatura. Decimos que una subasta obtiene algunas clases V de valoraciones, si determina la asignación óptima para cualquier perfil de valoraciones extraídas de V; Decimos que una subasta obtiene completamente alguna clase de valoraciones V, si puede aprender completamente cualquier valoración única v ∈ V (es decir, aprender v(S) para cada S). 3.4 Consultas de demanda y subastas ascendentes La mayor parte del documento se ocupará de un caso especial común de subastas iterativas que denominamos subastas de demanda. En tales subastas, las consultas que se envían a los postores son consultas de demanda: la consulta especifica un precio p(S) ∈ + para cada conjunto S. La respuesta del postor i es simplemente el conjunto más deseado - demandado - bajo estos precios. Formalmente, un conjunto S que maximiza vi(S) − p(S). Puede suceder que más de un conjunto S maximice este valor. En caso de empate, se resuelven de acuerdo con una regla fija de desempate, por ejemplo, se devuelve el conjunto que sea el primero en orden lexicográfico. Todos nuestros resultados son válidos para cualquier regla de desempate fija. Las subastas ascendentes son subastas iterativas con precios no decrecientes: Definición 1. En una subasta ascendente, los precios en las ofertas al mismo postor solo pueden aumentar con el tiempo. Formalmente, sea p una consulta realizada por el postor i, y q una consulta realizada por el postor i en una etapa posterior del protocolo. Entonces, para todos los conjuntos S, q(S) ≥ p(S). Una variante similar, que también estudiamos y que también es común en la vida real, son las subastas descendentes, en las que los precios solo pueden disminuir con el tiempo. Cabe destacar que el término subasta ascendente se refiere a una subasta con una única trayectoria ascendente de precios. Puede ser útil definir subastas ascendentes de múltiples trayectorias, en las que los precios pueden reiniciarse a cero varias veces (ver, por ejemplo, [4]). Consideramos dos restricciones principales en los tipos de consultas de demanda permitidas: Definición 2. Precios de los artículos: Los precios en cada consulta son dados por los precios pj para cada artículo j. El precio de un conjunto S es aditivo: p(S) = Σ j∈S pj. Definición 3. Precios anónimos: Los precios vistos por los postores en cualquier etapa de la subasta son los mismos, es decir, cada vez que se realiza una consulta a un postor, la misma consulta también se realiza a todos los demás postores (con los precios sin cambios). En subastas con precios no anónimos (discriminatorios), cada postor i tiene precios personalizados denotados por pi (S). En este documento, todas las subastas son anónimas a menos que se especifique lo contrario. Ten en cuenta que aunque en nuestro modelo las valoraciones son integrales (o múltiplos de algún δ), permitimos la consulta de demanda a 16 La mayoría de las subastas que presentamos pueden adaptarse para ejecutarse en tiempo polinómico en log L, utilizando un procedimiento similar a una búsqueda binaria, perdiendo su naturaleza ascendente. 17 Ten en cuenta que una subasta no anónima claramente puede ser simulada por n subastas anónimas en paralelo. 35 utiliza números reales arbitrarios en +. Es decir, asumimos que el incremento que utilizamos en las subastas ascendentes puede ser significativamente menor que δ. Todos nuestros resultados de dureza se mantienen para cualquier , incluso para incrementos de precios continuos. Un problema práctico aquí es cómo se especificará la consulta: en el caso general, se necesita enviar un número exponencial de precios en una sola consulta. Formalmente, esto no es un problema ya que el modelo no limita la longitud de las consultas de ninguna manera; el protocolo simplemente debe definir cuáles son los precios en función de las respuestas recibidas a consultas anteriores. Investigaremos este problema más a fondo en la Sección 4.3. 4. En esta sección, estudiamos el poder de las subastas iterativas que utilizan consultas de demanda (no necesariamente ascendentes). Empezamos comparando las consultas de demanda con otros tipos de consultas. Luego, discutimos qué tan bien se puede aproximar el bienestar óptimo utilizando un número polinomial de consultas de demanda. También iniciamos el estudio de la representación de consultas de demanda de precios de paquetes, y finalmente, mostramos cómo las consultas de demanda ayudan a resolver la relajación de programación lineal de subastas combinatorias en tiempo polinómico. 4.1 El poder de los diferentes tipos de consultas En esta sección comparamos el poder de los diversos tipos de consultas definidos en la Sección 2. Presentaremos simulaciones computacionalmente eficientes de estos tipos de consultas utilizando consultas de demanda de precio de artículo. En la Sección 5.1 mostramos que estas simulaciones también se pueden realizar utilizando subastas ascendentes de precio de artículo. Lema 4.1. Una consulta de valor puede ser simulada por m consultas de valor marginal. Una consulta de valor marginal puede ser simulada por dos consultas de valor. Lema 4.2. Una consulta de valor puede ser simulada por consultas de demanda (donde t = log L es el número de bits necesarios para representar un valor de paquete único). Como corolario directo, obtenemos que las subastas de demanda siempre pueden obtener completamente las valoraciones de los postores al simular todas las posibles 2m − 1 consultas y, por lo tanto, obtener suficiente información para determinar la asignación óptima. Sin embargo, cabe destacar que esta inducción puede ser computacionalmente ineficiente. El siguiente lema muestra que las consultas de demanda pueden ser exponencialmente más poderosas que las consultas de valor. Lema 4.3. Puede ser necesario un número exponencial de consultas de valor para simular una sola consulta de demanda. Las consultas de utilidad indirecta son, sin embargo, equivalentes en poder a las consultas de demanda: Lema 4.4. Una consulta de utilidad indirecta puede ser simulada por mt + 1 consultas de demanda. Una consulta de demanda puede ser simulada por m + 1 consultas de utilidad indirecta. Las consultas de demanda también pueden simular consultas de demanda relativa: 19 18 Tenga en cuenta que las consultas de demanda de precios de paquetes pueden simular fácilmente una consulta de valor configurando los precios de todos los paquetes excepto S (el paquete con el valor desconocido) en L, y realizando una búsqueda binaria en el precio de S. 19 Nota: aunque en nuestro modelo los valores son enteros (múltiplos de δ), permitimos que los precios de las consultas sean números reales arbitrarios. Abreviaturas: V (consulta de valor), MV (consulta de valor marginal), D (consulta de demanda), IU (consulta de utilidad indirecta), RD (consulta de demanda relativa). Lema 4.5. Las consultas de demanda relativa pueden ser simuladas por un número polinomial de consultas de demanda. Según nuestra definición de consultas de demanda relativa, claramente no pueden simular consultas de valor par. La Figura 4 resume las relaciones entre estos tipos de consultas. 4.2 Aproximando el Bienestar Social con Consultas de Valor y Demanda Sabemos por [32] que las subastas combinatorias iterativas que solo utilizan un número polinómico de consultas no pueden encontrar una asignación óptima entre valoraciones generales y de hecho ni siquiera pueden aproximarla a un factor mejor que min{n, m1/2− }. En esta sección preguntamos qué tan bien se puede hacer esta aproximación utilizando consultas de demanda con precios de los artículos, o utilizando las consultas de valor más débiles. Mostramos que, utilizando consultas de demanda, se puede igualar el límite inferior, mientras que las consultas de valor solo pueden hacer mucho peor. La Figura 5 describe un algoritmo de tiempo polinómico que logra una proporción de aproximación de min(n, O( √ m)). Este algoritmo elige de forma codiciosa los paquetes que maximizan el valor por ítem de los postores (utilizando consultas de demanda relativa, ver Sección 4.1). Como paso final, asigna todos los artículos a un único postor si mejora el bienestar social (esto se puede verificar utilizando consultas de valor). Dado que tanto las consultas de valor como las consultas de demanda relativa pueden ser simuladas por un número polinomial de consultas de demanda con precios de los artículos (Lemas 4.2 y 4.5), este algoritmo puede ser implementado por un número polinomial de consultas de demanda con precios de los artículos. Teorema 4.6. La subasta descrita en la Figura 5 puede ser implementada mediante un número polinomial de consultas de demanda y logra una aproximación de min{n, 4 √ m} para el bienestar social. Ahora nos preguntamos qué tan bien se puede aproximar el bienestar óptimo mediante un número polinómico de consultas de valor. Primero notamos que las consultas de valor no son completamente inútiles: En [19] se muestra que si los m elementos se dividen en k paquetes fijos de tamaño m/k cada uno, y estos paquetes fijos se subastan como si cada uno fuera indivisible, entonces el bienestar social bers, por lo tanto, podemos tener paquetes con demandas relativas arbitrariamente cercanas. En este sentido, la simulación anterior es solo hasta un cierto límite (y el número de consultas es O(log L + log 1)). Cuando los precios de la consulta de demanda relativa se dan como números racionales, se implica una simulación exacta cuando el logaritmo es lineal en la longitud de la entrada. En el artículo completo [8], observamos que este algoritmo puede implementarse mediante dos subastas descendentes de precio de artículo (donde permitimos quitar artículos a lo largo de la subasta). El valor generado por tal subasta es al menos una aproximación de m√ k de lo posible en la subasta original. Ten en cuenta que tal subasta puede ser implementada mediante 2k − 1 consultas de valor a cada postor, consultando el valor de cada paquete de los paquetes fijos. Por lo tanto, si elegimos k = log m paquetes, obtenemos una aproximación de m√ log m mientras seguimos utilizando un número polinomial de consultas. El siguiente lema muestra que no es posible hacer mucho más utilizando consultas de valor: Lema 4.7. Cualquier subasta iterativa que utilice solo consultas de valor y distinga entre k-tuplas de valuaciones de 0/1 donde la asignación óptima tiene valor 1, y aquellas donde la asignación óptima tiene valor k, requiere al menos 2 m k consultas. Prueba. Considera la siguiente familia de valoraciones: para cada S, tal que |S| > m/2, v(S) = 1, y existe un único conjunto T, tal que para |S| ≤ m/2, v(S) = 1 si y solo si T ⊆ S y v(S) = 0 en caso contrario. Ahora observa el comportamiento del protocolo cuando todas las valoraciones vi tienen T = {1...m}. Claramente, en este caso el valor de la mejor asignación es 1, ya que ningún conjunto de tamaño m 2 o menor tiene un valor distinto de cero para ningún jugador. Corrija la secuencia de consultas y respuestas recibidas en este k-tupla de valuaciones. Ahora considera el k-tuplo de valoraciones elegido al azar de la siguiente manera: una partición de los m elementos en k conjuntos T1...Tk cada uno de tamaño m/k es elegido de forma uniforme al azar entre todas las particiones posibles. Ahora considera el k-tuplo de valoraciones de nuestra familia que corresponden a esta partición: claramente Ti puede asignarse a i, para cada i, obteniendo un valor total de k. Ahora observa el protocolo al ejecutarse con estas valoraciones y compara su comportamiento con el caso original. Ten en cuenta que la respuesta a una consulta S al jugador i difiere entre el caso de Ti y el caso original de T = {1...m} solo si |S| ≤ m 2 y Ti ⊆ S. Dado que Ti se distribuye uniformemente entre todos los conjuntos de tamaño exactamente m k , tenemos que para cualquier consulta fija S al jugador i, donde |S| ≤ m 2 , Pr[Ti ⊆ S] ≤ „ |S| m «|Ti| ≤ 2− m k Utilizando el límite de unión, si la secuencia original de consultas tenía una longitud menor que 2 m k , entonces con probabilidad positiva ninguna de las consultas en la secuencia recibiría una respuesta diferente a la tupla de entrada original. Esto está prohibido ya que el protocolo debe distinguir entre este caso y el caso original, lo cual no puede ocurrir si todas las consultas reciben la misma respuesta. Por lo tanto, debe haber habido al menos 2 consultas de m k para la tupla original de valoraciones. Concluimos que un protocolo de tiempo polinómico que utiliza solo consultas de valor no puede obtener una aproximación mejor que O( m log m ) del bienestar: Teorema 4.8. Una subasta iterativa que utiliza un número polinómico de consultas de valor no puede lograr una aproximación mejor que O( m log m ) para el bienestar social. Prueba. Inmediatamente del Lema 4.7: lograr cualquier ratio de aproximación k que sea asintóticamente mayor que m log m requiere un número exponencial de consultas de valor. Un algoritmo de aproximación: Inicialización: Sea T ← M los artículos actuales en venta. Que K ← N sean los postores actualmente participantes. Que S∗ 1 ← ∅, ..., S∗ n ← ∅ sea la asignación provisional. Repetir hasta que T = ∅ o K = ∅: Preguntar a cada postor i en K por el conjunto Si que maximice su valor por artículo, es decir, Si ∈ argmaxS⊆T vi(S) |S|. Sea i el postor con el valor máximo por artículo, es decir, i ∈ argmaxi∈K vi(Si) |Si| . Conjunto: s∗ i = si, K = K \\ i, M = M \\ Si Finalmente: Pregunte a los postores por sus valores vi(M) para el paquete completo. Si asignar todos los artículos a algún postor i mejora el bienestar social alcanzado hasta ahora (es decir, ∃i ∈ N tal que vi(M) > Σ i∈N vi(S∗ i )), entonces asigna todos los artículos a este postor i. Figura 5: Este algoritmo logra una aproximación de min{n, 4 √ m} para el bienestar social, que es asintóticamente la mejor aproximación en el peor de los casos posible con comunicación polinómica. Este algoritmo puede implementarse con un número polinomial de consultas de demanda. 4.3 La Representación de los Precios de los Paquetes En esta sección fijamos explícitamente el idioma en el que se presentan los precios de los paquetes a los postores en subastas de precios de paquetes. Este lenguaje requiere que el algoritmo liste explícitamente el precio de cada paquete con un precio no trivial. Trivial en este contexto es un precio que es igual al de uno de sus subconjuntos adecuados (que fue enumerado explícitamente). Esta representación es equivalente al lenguaje XOR para expresar valuaciones. Formalmente, cada consulta q se da por una expresión: q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl). En esta representación, el precio demandado para cada conjunto S es simplemente p(S) = max{k=1...l|Sk⊆S}pk. Definición 4. La longitud de la consulta q = (S1 : p1) ⊕ (S2 : p2) ⊕ ... ⊕ (Sl : pl) es l. El costo de un algoritmo es la suma de las longitudes de las consultas realizadas durante la operación del algoritmo en el peor caso de entrada. Ten en cuenta que bajo esta definición, las subastas de precio por paquete no son necesariamente más fuertes que las subastas de precio por artículo. ¿Una consulta de precio de artículo que fija el precio de cada artículo en 1 se traduce en una consulta de precio de paquete exponencialmente larga que necesita especificar el precio |S| para cada paquete S. ¿Pero quizás las subastas de precio de paquete aún pueden encontrar asignaciones óptimas siempre que las subastas de precio de artículo puedan, sin simular directamente tales consultas? Mostramos que este no es el caso: de hecho, cuando se tiene en cuenta la longitud de la representación, las subastas de precios de paquetes a veces son seriamente inferiores a las subastas de precios de artículos. Considera la siguiente familia de valoraciones: Cada artículo tiene un valor de 3, excepto que para algún conjunto único S, su valor es un poco mayor: 3|S| + b, donde b ∈ {0, 1, 2}. Ten en cuenta que una subasta de precio de artículo puede encontrar fácilmente la asignación óptima entre dos valoraciones de este tipo: establece los precios de cada artículo en 3+; si los conjuntos de demanda de los dos jugadores están vacíos, entonces b = 0 para ambas valoraciones, y cualquier asignación arbitraria está bien. Si uno de ellos está vacío y el otro no, asigna el conjunto de demanda no vacío a su postor y el resto al otro. Si ambos conjuntos de demanda no están vacíos, entonces, a menos que formen una partición exacta, necesitamos ver cuál es mayor, lo cual podemos hacer aumentando el precio de un solo artículo en cada conjunto de demanda. Mostraremos que cualquier subasta de precio de paquete que utilice solo el lenguaje XOR para describir los precios de los paquetes requiere un costo exponencial (que incluye la suma de todas las longitudes de descripción de los precios) para encontrar una asignación óptima entre dos valoraciones de este tipo. Lema 4.9. Cada subasta de precio de paquete que utiliza expresiones XOR para denotar precios de paquete requiere un costo de 2Ω( √ m) para encontrar la asignación óptima entre dos valoraciones de la familia anterior. La complicación en la prueba se debe al hecho de que al usar expresiones XOR, la longitud de la descripción del precio depende del número de paquetes cuyo precio es estrictamente mayor que cada uno de sus subconjuntos, lo cual puede ser significativamente menor que el número de paquetes que tienen un precio distinto de cero. (La prueba se vuelve fácil si requerimos que el protocolo nombre explícitamente cada paquete con precio distinto de cero). No conocemos ninguna demostración elemental para este lema (aunque creemos que se puede encontrar una). En cambio, reducimos el problema a un límite inferior bien conocido en la complejidad de circuitos booleanos [18] que establece que los circuitos booleanos de profundidad 3 que calculan la función de mayoría en m variables requieren un tamaño de 2Ω( √ m). Consultas de demanda y programación lineal Considere la siguiente relajación de programación lineal para el problema generalizado de determinación de ganadores en subastas combinatorias (el programa primal): Maximizar X i∈N,S⊆M wi xi,S vi(S) sujeto a Para todo i∈N, S|j∈S xi,S ≤ qj ∀j ∈ M X S⊆M xi,S ≤ di ∀i ∈ N xi,S ≥ 0 ∀i ∈ N, S ⊆ M. Nótese que el programa primal tiene un número exponencial de variables. Sin embargo, podremos resolverlo en tiempo polinómico utilizando consultas de demanda a los postores. La solución tendrá un soporte de tamaño polinómico (valores no nulos para xi,S), y por lo tanto podremos describirla en tiempo polinómico. Aquí está su dual: Minimizar X j∈M qjpj + X i∈N diui sujeto a ui + X j∈S pj ≥ wivi(S) ∀i ∈ N, S ⊆ M pi ≥ 0, uj ≥ 0 ∀i ∈ M, j ∈ N. Nótese que el problema dual tiene exactamente n + m variables pero un número exponencial de restricciones. Por lo tanto, el problema dual puede resolverse utilizando el método del Elipsoide en tiempo polinómico, si un oráculo de separación puede ser implementado en tiempo polinómico. Recuerda que un oráculo de separación, al recibir una posible solución, confirma si es una solución factible o responde con una restricción que es violada por la posible solución. Construimos un oráculo de separación para resolver el programa dual, utilizando una única consulta de demanda a cada uno de los postores. Considera una posible solución (u, p) para el programa dual. Podemos reescribir las restricciones del programa dual como: ui/wi ≥ vi(S) − X j∈S pj/wi. Ahora, una consulta de demanda al postor i con precios pj/wi revela exactamente el conjunto S que maximiza el RHS de la desigualdad anterior. Por lo tanto, para verificar si (u, p) es factible, basta con (1) consultar a cada postor i por su demanda Di bajo los precios pj/wi; (2) verificar solo las n restricciones ui + P j∈Di pj ≥ wivi(Di) (donde vi(Di) puede ser simulado utilizando una secuencia polinómica de consultas de demanda como se muestra en el Lema 4.2). Si ninguna de estas condiciones se viola, entonces estamos seguros de que (u, p) es factible; de lo contrario, obtenemos una restricción violada. Lo que queda por mostrar es cómo se puede resolver el programa primal. (Recuerde que el programa primal tiene un número exponencial de variables). Dado que el algoritmo de Elipsoide se ejecuta en tiempo polinómico, solo encuentra un número polinómico de restricciones durante su operación. Claramente, si se eliminaran todas las demás restricciones del programa dual, seguiría teniendo la misma solución (añadir restricciones solo puede disminuir el espacio de soluciones factibles). Ahora tome el dual reducido donde solo existan las restricciones encontradas, y observe su dual. Tendrá la misma solución que el dual original y, por lo tanto, del primal original. Sin embargo, observa la forma de este dual del dual reducido. Es solo una versión del programa primal con un número polinomial de variables, aquellas que corresponden a las restricciones que permanecieron en el dual reducido. Por lo tanto, se puede resolver en tiempo polinómico, y esta solución resuelve claramente el programa primal original, estableciendo todas las demás variables en cero. 5. En esta sección caracterizamos el poder de las subastas ascendentes por precio de artículo. Primero demostramos que este poder no es trivial: tales subastas pueden en general obtener una cantidad exponencial de información. Por otro lado, demostramos que la asignación óptima no siempre puede ser determinada por una sola subasta ascendente, y en algunos casos, tampoco por un número exponencial de trayectorias de precios ascendentes. Finalmente, separamos el poder de diferentes modelos de subastas ascendentes. 5.1 El Poder de las Subastas Ascendentes de Precio de Artículo Primero mostramos que si se permiten incrementos lo suficientemente pequeños, una única trayectoria ascendente de precios de artículos puede obtener preferencias que no pueden ser obtenidas con comunicación polinómica. Como se mencionó, todos nuestros resultados de dureza se mantienen para cualquier incremento, incluso infinitesimal. Teorema 5.1. Algunas clases de valoraciones pueden ser obtenidas mediante subastas ascendentes de precio de artículo, pero no pueden ser obtenidas mediante un número polinómico de consultas de ningún tipo. Prueba. (bosquejo) Considera dos postores con v(S) = 1 si |S| > n 2 , v(S) = 0 si |S| < n 2 y cada S tal que |S| = n 2 tiene un valor desconocido de {0, 1}. Debido a [32], determinar la asignación óptima aquí requiere comunicación exponencial en el peor de los casos. Sin embargo, demostramos (ver [9]) que una subasta ascendente de precio de artículo puede lograrlo, siempre y cuando pueda utilizar incrementos exponencialmente pequeños. Ahora describimos otro resultado positivo sobre el poder de las subastas ascendentes de precio de los artículos. En la sección 4.1, mostramos que en la subasta ascendente de precio de los artículos no se puede determinar la asignación óptima para esta clase de valoraciones, que una consulta de valor puede ser simulada con un número (verdaderamente) polinomial de consultas de demanda de precio de los artículos. Aquí mostramos que cada consulta de valor puede ser simulada por un número (pseudo) polinomial de consultas ascendentes de demanda de precio de artículo. (En la siguiente subsección, mostramos que no siempre podemos simular ni siquiera un par de consultas de valor utilizando una subasta ascendente de precio de artículo). En el artículo completo (parte II, [9]), demostramos que podemos simular otros tipos de consultas utilizando subastas ascendentes de precio de artículo. Proposición 5.2. Una consulta de valor puede ser simulada por una subasta ascendente de precio de artículo. Esta simulación requiere un número polinómico de consultas. De hecho, la prueba para la Proposición 5.2 demuestra un resultado útil más fuerte sobre la información obtenida por subastas iterativas. Se dice que en cualquier subasta iterativa en la que los cambios de precios sean lo suficientemente pequeños en cada etapa (subastas pseudocontinuas), se puede calcular el valor de todos los paquetes demandados durante la subasta. La idea básica es que cuando el oferente pasa de demandar un paquete Ti a demandar otro paquete Ti+1, hay un punto en el que ella es indiferente entre estos dos paquetes. Por lo tanto, conocer el valor de un conjunto demandado (por ejemplo, el conjunto vacío) permite calcular los valores de todos los demás conjuntos demandados. Decimos que una subasta es seudo-continua si solo utiliza consultas de demanda, y en cada paso, el precio de como máximo un artículo se modifica en (para algún ∈ (0, δ]) con respecto a la consulta anterior. Proposición 5.3. Considera cualquier subasta pseudo-continua (no necesariamente ascendente), en la que el postor i demande el conjunto vacío al menos una vez a lo largo de la subasta. Entonces, el valor de cada paquete demandado por el postor i a lo largo de la subasta puede calcularse al final de la subasta. 5.2 Limitaciones de las Subastas Ascendentes de Precio de Artículo Aunque observamos que las consultas de demanda pueden resolver cualquier problema de subasta combinatoria, cuando las consultas están restringidas a ser ascendentes, algunas clases de valoraciones no pueden ser obtenidas ni completamente obtenidas. Un ejemplo para tal clase de valoraciones se muestra en la Figura 6. Teorema 5.4. Existen clases de valoraciones que no pueden ser obtenidas ni completamente obtenidas por ninguna subasta ascendente de precio de artículos. Prueba. Que el postor 1 tenga la valoración descrita en la primera fila de la Figura 6, donde α y β son valores desconocidos en (0, 1). Primero, demostramos que esta clase no puede ser completamente revelada por una sola subasta ascendente. Específicamente, una subasta ascendente no puede revelar los valores de ambos α y β. Si tanto pa como pb son inferiores a 1, el oferente siempre exigirá el paquete completo ab: su utilidad de ab es estrictamente mayor que la utilidad de a o b por separado. Por ejemplo, demostramos que u1(ab) > u1(a): u1(ab) = 2 − (pa + pb) = 1 − pa + 1 − pb > vA(a) − pa + 1 − pb > u1(a) Por lo tanto, para obtener información sobre α o β, el precio de uno de los artículos debe ser al menos 1, sin pérdida de generalidad, pa ≥ 1. Pero entonces, el paquete a no será demandado por el postor 1 durante la subasta, por lo tanto, no se obtendrá ninguna información sobre α. Ahora, suponga que se sabe que el postor 2 tiene la valoración descrita en la segunda fila de la Figura 6. La asignación óptima depende de si α es mayor que β (en la valoración del postor 1), y demostramos que una subasta ascendente no puede determinar esto. La prueba del teorema anterior muestra que para que se revele un valor desconocido, el precio de un artículo debe ser mayor que 1 y el otro precio debe ser menor que 1. Por lo tanto, en una trayectoria de precios monótona de precios, solo uno de estos valores puede ser revelado. Una conclusión inmediata es que este resultado de imposibilidad también se aplica a las subastas descendentes de precio de los artículos. Dado que no existe tal trayectoria, entonces la misma conclusión se aplica incluso a las subastas de precios de artículos no deterministas (en las cuales los datos exógenos nos dicen cómo aumentar los precios). También hay que tener en cuenta que dado que la dificultad proviene de la imposibilidad de obtener completamente una valoración de un único postor, este resultado también se aplica a subastas ascendentes de precio de artículo no anónimas. 5.3 Limitaciones de las Subastas Ascendentes de Múltiples Trayectorias Según el Teorema 5.4, ninguna subasta ascendente de precio de artículo puede siempre obtener las preferencias (demostramos un resultado similar para precios de paquetes en la sección 6). ¿Pero pueden dos trayectorias ascendentes hacer el trabajo? ¿O un número polinómico de trayectorias ascendentes? Damos respuestas negativas a tales sugerencias. Definimos una subasta ascendente de trayectoria k como una subasta iterativa de consultas de demanda en la que las consultas de demanda pueden ser divididas en k conjuntos de consultas, donde los precios publicados en cada conjunto solo aumentan con el tiempo. Ten en cuenta que utilizamos una definición general; permite que las trayectorias se ejecuten en paralelo o secuencialmente, y utilizar la información obtenida en algunas trayectorias para determinar las consultas futuras en otras trayectorias. El poder de las subastas de múltiples trayectorias puede ser demostrado por el resultado negativo de Gul y Stacchetti [17], quienes mostraron que incluso para una subasta entre valoraciones de sustitutos, una subasta anónima ascendente de precio de artículo no puede calcular los precios VCG para todos los jugadores. Ausubel [4] superó este resultado imposible y diseñó subastas que sí calculan los precios VCG al organizar la subasta como una secuencia de n + 1 subastas ascendentes. Aquí demostramos que no se pueden obtener valoraciones XOR con k términos con menos de k − 1 trayectorias ascendentes. Por otro lado, demostramos que una fórmula XOR puede ser completamente revelada por k−1 subastas ascendentes no determinísticas (o por k−1 subastas ascendentes determinísticas si el subastador conoce los paquetes atómicos). Un reciente artículo no publicado de Mishra y Parkes extiende este resultado, y muestra que los precios no anónimos con precios de paquetes son necesarios para que una subasta ascendente termine con un equilibrio competitivo universal (que conduce a pagos VCG). Este resultado separa en realidad el poder de determinista 39 Proposición 5.5. Las valoraciones XOR con k términos no pueden ser obtenidas (o completamente obtenidas) por ninguna subasta ascendente de precio de artículo con trayectoria (k-2), incluso cuando los paquetes atómicos son conocidos por el que obtiene la información. Sin embargo, estas valoraciones pueden ser obtenidas (y completamente obtenidas) mediante subastas ascendentes de precios de artículos no deterministas y no anónimos de (k-1) trayectorias. Además, se requiere un número exponencial de trayectorias para obtener algunas clases de valoraciones: Proposición 5.6. La obtención y la obtención completa de algunas clases de valoraciones no pueden ser realizadas por ninguna subasta ascendente de precio de artículo de trayectoria k, donde k = o(2m). Prueba. (bosquejo) Considera la siguiente clase de valoraciones: Para |S| < m 2 , v(S) = 0 y para |S| > m 2 , v(S) = 2; cada conjunto S de tamaño m 2 tiene algún valor desconocido en (0, 1). Mostramos ([9]) que una subasta ascendente de un solo artículo y precio puede revelar el valor de como máximo un paquete de tamaño n 2, y por lo tanto se necesitaría un número exponencial de trayectorias ascendentes para obtener tales valoraciones. Observamos que el algoritmo que presentamos en la Sección 4.2 puede ser implementado por un número polinomial de subastas ascendentes (cada consulta de demanda de precio de artículo puede considerarse como una subasta ascendente separada), y por lo tanto, una aproximación de min(n, 4 √ m) puede lograrse mediante un número polinomial de subastas ascendentes. Actualmente no tenemos un límite superior mejor ni ningún límite inferior. 5.4 Separando los Diversos Modelos de Subastas Ascendentes Se han sugerido varios modelos para subastas ascendentes en la literatura. En esta sección, comparamos la potencia de los diferentes modelos. Como se mencionó, todas las subastas se consideran anónimas y determinísticas, a menos que se especifique lo contrario. Ascendente vs. Subastas descendentes: Comenzamos la discusión sobre la relación entre las subastas ascendentes y las subastas descendentes con un ejemplo. El algoritmo de Lehmann, Lehmann y Nisan [25] se puede implementar mediante una subasta simple de precio descendente por artículo (consultar el artículo completo para más detalles [9]). Este algoritmo garantiza al menos la mitad de la eficiencia óptima para valoraciones submodulares. Sin embargo, no estamos familiarizados con ninguna subasta ascendente que garantice una fracción similar de eficiencia. ¿Esto plantea una pregunta más general: ¿pueden las subastas ascendentes resolver cualquier problema de subasta combinatoria que sea resoluble utilizando una subasta descendente (y viceversa)? Damos respuestas negativas a estas preguntas. La idea detrás de las pruebas es que la información que el subastador puede obtener de forma gratuita al comienzo de cada tipo de subasta es diferente. En subastas iterativas no determinísticas: nuestra prueba muestra que una subasta iterativa no determinística puede obtener las valoraciones XOR de k términos con un número polinómico de consultas de demanda, y [7] muestra que esta obtención debe requerir un número exponencial de consultas de demanda. En subastas ascendentes, el subastador puede revelar el paquete más valioso (además de M) antes de comenzar a aumentar los precios, por lo tanto, puede utilizar esta información para elegir de forma adaptativa las consultas posteriores. En subastas descendentes, uno puede encontrar fácilmente el paquete con el precio promedio por artículo más alto, manteniendo todos los demás paquetes con utilidades no positivas, y utilizar esta información en el cambio de precio adaptativo. Proposición 5.7. Hay clases que no pueden ser obtenidas (totalmente obtenidas) mediante subastas de precio ascendente de artículos, pero pueden ser obtenidas (respectivamente, totalmente obtenidas) con una subasta de precio descendente de artículos. Proposición 5.8. Hay clases que no pueden ser obtenidas (totalmente obtenidas) mediante subastas descendentes de precio de artículo, pero pueden ser obtenidas (respectivamente, totalmente obtenidas) mediante subastas ascendentes de precio de artículo. Subastas Determinísticas vs. No Determinísticas: Las subastas ascendentes no determinísticas pueden ser vistas como subastas donde algún profesor benevolente que tiene información completa guía al subastador sobre cómo debería aumentar los precios. Es decir, la obtención de preferencias puede realizarse mediante una subasta ascendente no determinística, si existe una trayectoria ascendente que obtiene suficiente información para determinar la asignación óptima (y verificar que efectivamente lo sea). Mostramos que las subastas ascendentes no determinísticas son más poderosas que las subastas ascendentes determinísticas: Proposición 5.9. Algunas clases pueden ser obtenidas (totalmente obtenidas) mediante una subasta ascendente no determinista de precio de artículo, pero no pueden ser obtenidas (respectivamente, totalmente obtenidas) mediante subastas ascendentes deterministas de precio de artículo. Subastas Anónimas vs. No Anónimas: Como se mostrará en la Sección 6, el poder de las subastas ascendentes de precios de paquetes anónimas y no anónimas difiere significativamente. Aquí mostramos que también existe una diferencia para las subastas ascendentes de precio de artículo. Proposición 5.10. Algunas clases no pueden ser obtenidas mediante subastas anónimas ascendentes de precio de artículos, pero pueden ser obtenidas mediante una subasta ascendente de precio de artículos no anónima. Secuencial vs. Subastas Simultáneas: Una subasta no anónima se llama simultánea si en cada etapa, el precio de algún artículo se incrementa por para cada postor. El subastador puede utilizar la información recopilada hasta cada etapa, en todas las trayectorias personalizadas, para determinar las próximas consultas. Una subasta no anónima se llama secuencial si el subastador realiza una subasta para cada postor por separado, en orden secuencial. El subastador puede determinar la próxima consulta basándose en la información recopilada en las trayectorias completadas hasta el momento y en la historia de la trayectoria actual. Proposición 5.11. Hay clases que no pueden ser obtenidas mediante subastas simultáneas no anónimas de precio ascendente de artículos, pero que pueden ser obtenidas mediante una subasta secuencial no anónima de precio ascendente de artículos. Adaptativo vs. Subastas ajenas: Si el subastador determina las consultas independientemente de las respuestas de los postores (es decir, las consultas están predefinidas), decimos que la subasta es ajena. De lo contrario, la subasta es adaptativa. Demostramos que un comportamiento adaptativo del subastador puede ser beneficioso. Proposición 5.12. Hay clases que no pueden ser completamente elicitadas utilizando subastas ascendentes de precio de artículo sin conocimiento, pero pueden ser elicitadas (respectivamente, completamente elicitadas) por una subasta ascendente de precio de artículo adaptativa. La elicitación de preferencias frente a la elicitación completa de preferencias son problemas estrechamente relacionados. Si la elicitación completa es fácil (por ejemplo, en tiempo polinómico), entonces claramente la elicitación también es fácil (mediante una subasta no anónima, simplemente aprendiendo todas las valoraciones por separado). Por otro lado, hay ejemplos donde la obtención de preferencias se considera fácil pero el aprendizaje es difícil (típicamente, la obtención de preferencias requiere una menor cantidad de información; algunos ejemplos se pueden encontrar en [7]). Los algoritmos de tatonnement por [22, 12, 16] terminan con la asignación óptima para las valoraciones de sustitutos. Demostramos que no podemos obtener completamente las valoraciones de sustitutos (o incluso su subclase de valoraciones OXS definidas en [25]), incluso para un único postor, mediante una subasta ascendente de precio de artículo (¡aunque la asignación óptima puede encontrarse mediante una subasta ascendente para cualquier número de postores!). Teorema 5.13. Las valoraciones de sustitución no pueden ser completamente obtenidas mediante subastas ascendentes de precio por artículo. Además, no pueden ser completamente inducidos por ninguna trayectoria ascendente m 2 (m > 3). Si las valoraciones de los sustitutos tienen una representación compacta (es decir, polinomial en el número de bienes) es una pregunta abierta importante. Como un paso en esta dirección, mostramos que su subclase de valoraciones OXS tiene una representación compacta: cada valoración OXS puede ser representada por un máximo de m2 valores. Lema 5.14. Cualquier valoración de OXS puede ser representada por no más de m2 valores. 6. Subastas ascendentes de precio de paquete. Todas las subastas ascendentes en la literatura que se ha demostrado que encuentran la asignación óptima para valoraciones no restringidas son subastas de precio de paquete no anónimas (iBundle(3) de Parkes y Ungar [37] y la Subasta de Proxy de Ausubel y Milgrom [3]). Sin embargo, se han sugerido varias subastas ascendentes anónimas (por ejemplo, AkBA [42], [21] e iBundle(2) [37]). En esta sección, demostramos que las subastas ascendentes de precios de paquetes anónimos logran resultados pobres en el peor de los casos. También demostramos que la familia de subastas de precio ascendente de paquetes no anónimos puede funcionar exponencialmente más lento que las simples subastas de precio ascendente por artículo. 6.1 Limitaciones de las Subastas Anónimas de Precio Ascendente por Paquete Presentamos una clase de valoraciones que no pueden ser obtenidas por subastas anónimas de precio ascendente por paquete. Estas valoraciones están descritas en la Figura 7. La idea básica: para determinar el valor desconocido de un postor debemos aumentar 24. Tenga en cuenta que una subasta ascendente anónima no necesariamente puede obtener una clase que pueda ser completamente obtenida por una subasta ascendente. Las valoraciones sustitutivas están definidas, por ejemplo, en [16]. Hablando en términos generales, un postor con una valoración de sustitución seguirá demandando un cierto artículo después de que el precio de algunos otros artículos haya aumentado. Para completitud, presentamos en el artículo completo [9] una prueba de la eficiencia de tales subastas para valoraciones de sustitutos. Una valoración de demanda unitaria es una valoración XOR en la que todos los paquetes atómicos son elementos únicos. Las valoraciones de OXS pueden interpretarse como una agregación (O) de cualquier número de postores de demanda unitaria. La subasta anónima ascendente de precios de paquetes no puede determinar la asignación óptima para esta clase de valoraciones. un precio de un paquete que debería ser demandado por el otro postor en el futuro. Teorema 6.1. Algunas clases de valoraciones no pueden ser obtenidas mediante subastas anónimas de precios ascendentes por paquetes. Prueba. Considera un par de valoraciones XOR como se describe en la Figura 7. Para encontrar la asignación óptima debemos saber cuál valor es mayor entre α y β. Sin embargo, no podemos conocer el valor de ambos α y β con una sola trayectoria ascendente: asumimos sin pérdida de generalidad que el postor 1 demanda cd antes de que el postor 2 demande bd (no se obtendrá información si ninguno de estos eventos ocurre). En este caso, el precio de bd debe ser mayor que 1 (de lo contrario, el postor 1 prefiere bd a cd). Por lo tanto, el postor 2 nunca exigirá el paquete bd, y no se obtendrá información sobre β. Las valoraciones descritas en la prueba del Teorema 6.1 pueden ser fácilmente obtenidas mediante una subasta ascendente de precio de un artículo no anónima. Por otro lado, las valoraciones en la Figura 6 pueden ser fácilmente obtenidas mediante una subasta anónima ascendente de precios por paquetes. Concluimos que el poder de estas dos familias de subastas ascendentes es incomparable. Fortalecemos el resultado de imposibilidad anterior al demostrar que las subastas de precios de paquetes anónimos no pueden lograr ni siquiera una aproximación mejor que min{O(n), O( √ m)} para el bienestar social. Este ratio de aproximación se puede lograr con comunicación polinómica, y específicamente con un número polinómico de consultas de demanda de precio de artículo. Teorema 6.2. Una subasta anónima de precios ascendentes en paquetes no puede garantizar una aproximación mejor que min{ n 2 , √ m 2 } para el bienestar óptimo. Prueba. (Bosquejo) Supongamos que tenemos n postores y n2 artículos en venta, y que n es primo. Construimos n2 paquetes distintos con las siguientes propiedades: para cada postor, definimos una partición Si = (Si 1, ..., Si n) de los n2 artículos en n paquetes, de manera que cualquier par de paquetes de particiones diferentes se intersectan. En el artículo completo, en la parte II [9] mostramos una construcción explícita utilizando las propiedades de las funciones lineales sobre campos finitos. El resto de la prueba es independiente de la construcción específica. Usando estos n2 paquetes construimos una clase difícil de obtener. Cada postor tiene una oferta atómica, en su valoración XOR, para cada uno de estos n2 paquetes. Un postor i tiene un valor de 2 para cualquier conjunto Si j en su partición. Para todos los paquetes en las otras particiones, él tiene un valor de 0 o de 1 − δ, y estos valores son desconocidos para el subastador. Dado que cada par de paquetes de diferentes particiones se intersectan, solo un postor puede recibir un paquete con un valor de 2. 27 Si α > β, la asignación óptima asignará cd al postor 1 y ab al postor 2. De lo contrario, le damos bd al postor 2 y ac al postor 1. Ten en cuenta que ambos postores no pueden obtener un valor de 2 en la misma asignación, debido a las intersecciones de los paquetes de alto valor. Ten en cuenta que las consultas de precios de paquetes pueden requerir comunicación exponencial, por lo tanto, el límite inferior de [32] no se cumple. Subastas ascendentes económicamente eficientes de precios de paquetes no anónimos: Inicialización: Todos los precios se inicializan en cero (precios de paquetes no anónimos). Cada postor presenta un paquete que maximiza su utilidad bajo sus precios personalizados actuales. El subastador calcula una asignación provisional que maximiza sus ingresos bajo los precios actuales. Los precios de los paquetes que fueron demandados por postores perdedores se incrementan en . Finalmente: Terminar cuando la asignación provisional asigna a cada postor el paquete que solicitó. Figura 8: Las subastas de esta familia (denominadas subastas NBEA) se sabe que logran el bienestar óptimo. Ningún postor exigirá un paquete de bajo valor, siempre y cuando el precio de uno de sus paquetes de alto valor sea inferior a 1 (y así le genere una utilidad mayor a 1). Por lo tanto, para obtener información sobre los paquetes de bajo valor, el subastador debería elegir arbitrariamente a un postor (sin pérdida de generalidad, postor 1) y aumentar los precios de todos los paquetes (S1 1, ..., S1 n) para que sean mayores que 1. Dado que los precios no pueden disminuir, los otros postores claramente nunca demandarán estos paquetes en etapas futuras. Un adversario puede elegir los valores de manera que los valores bajos de todos los postores para los paquetes que no están en la partición del postor 1 sean cero (es decir, vi(S1 j) = 0 para cada i = 1 y cada j), sin embargo, asignar a cada postor un paquete diferente de la partición del postor 1, podría lograr un bienestar de n+1−(n−1)δ (la valoración del postor 1 es 2, y 1 − δ para todos los demás postores); Si estos paquetes se asignaran incorrectamente, solo se podría lograr un bienestar de 2 (2 para el paquete de alto valor del postor 1, 0 para todos los demás postores). En este punto, el subastador no puede tener ninguna información sobre la identidad de los paquetes con valores no nulos. Por lo tanto, un adversario puede elegir que los valores de los paquetes recibidos por los postores 2, ..., n en la asignación final sean cero. Concluimos que las subastas de precios de paquetes anónimos no pueden garantizar un bienestar mayor que 2 para esta clase, donde el bienestar óptimo puede estar arbitrariamente cerca de n + 1. 6.2 Precios de Paquetes vs. Los precios de los artículos El núcleo de las subastas en [37, 3] es el esquema descrito en la Figura 8 (en el espíritu de [35]) para subastas con precios de paquetes no anónimos. Las subastas de este esquema terminan con la asignación óptima para cualquier clase de valoraciones. Denominamos a esta familia de subastas ascendentes como subastas NBEA29. Las subastas NBEA pueden obtener valoraciones XOR de k términos en un número polinómico (en k) de pasos, aunque la obtención de dichas valoraciones puede requerir un número exponencial de consultas de precios de artículos ([7]), y las subastas ascendentes de precios de artículos no pueden hacerlo en absoluto (Teorema 5.4). Sin embargo, demostramos que las subastas de NBEA (y en particular, iBundle(3) y la subasta de proxy) a veces son inferiores a las simples subastas de demanda de precio de artículo. Esto puede justificar el uso de subastas híbridas que utilizan tanto precios lineales como no lineales (por ejemplo, la subasta de reloj-proxi [10]). Demostramos que las subastas de este tipo son 29 subastas ascendentes de precio de paquete no anónimas económicamente eficientes. Para completitud, en el artículo completo [9] presentamos una prueba sencilla de la eficiencia (hasta un ) de las subastas de este esquema . familia puede utilizar un número exponencial de consultas incluso para determinar la asignación óptima entre dos postores con valoraciones aditivas30 , donde dichas valoraciones pueden ser obtenidas mediante una subasta ascendente de precio de artículo simple. En realidad demostramos esta propiedad para una clase más amplia de subastas que llamamos subastas conservadoras. También observamos que en subastas conservadoras, permitir a los postores enviar todos los paquetes en sus conjuntos de demanda garantiza que la subasta se desarrolle en un número polinómico de pasos, si L no es demasiado alto (pero con comunicación exponencial, por supuesto). Una subasta ascendente se llama conservadora si no es anónima, utiliza precios de paquetes inicializados en cero y en cada etapa el subastador solo puede aumentar los precios de los paquetes demandados por los postores hasta esa etapa. Además, cada postor solo puede recibir los paquetes que solicitó durante la subasta. Ten en cuenta que las subastas de NBEA son, por definición, conservadoras. Proposición 6.3. Si cada postor exige un solo paquete en cada paso de la subasta, las subastas conservadoras pueden durar un número exponencial de pasos incluso para valoraciones aditivas. Si a los postores se les permite presentar todos los paquetes en sus conjuntos de demanda en cada paso, entonces las subastas conservadoras pueden ejecutarse en un número polinómico de pasos para cualquier perfil de valoraciones, siempre y cuando la valoración máxima L sea polinómica en m, n y δ. Agradecimientos: Los autores agradecen a Moshe Babaioff, Shahar Dobzinski, Ron Lavi, Daniel Lehmann, Ahuva Mualem, David Parkes, Michael Schapira e Ilya Segal por las útiles discusiones. Apoyado por subvenciones de la Academia de Ciencias de Israel y la Fundación de Ciencia Binacional Estados Unidos-Israel. 7. REFERENCIAS [1] Amazon. Página web: http://www.amazon.com. [2] ebay. Página web: http://www.ebay.com. [3] L. M. Ausubel y P. R. Milgrom. Subastas ascendentes con ofertas de paquetes. Fronteras de la Economía Teórica, 1:1-42, 2002. [4] Lawrence Ausubel. Una subasta dinámica eficiente para mercancías heterogéneas, 2000. Documento de trabajo, Universidad de Maryland. [5] Yair Bartal, Rica Gonen y Noam Nisan. Subastas combinatorias multiunidad compatibles con incentivos. En TARK 03, 2003. [6] Alejandro Bertelsen. Sustitutos de valoraciones y m-concavidad. M.Sc. Tesis, Universidad Hebrea de Jerusalén, 2005. [7] Avrim Blum, Jeffrey C. Jackson, Tuomas Sandholm y Martin A. Zinkevich. Elicitación de preferencias y aprendizaje por consulta. Revista de Investigación en Aprendizaje Automático, 5:649-667, 2004. [8] Liad Blumrosen y Noam Nisan. Sobre el poder computacional de las subastas iterativas I: consultas de demanda. Documento de trabajo, La Universidad Hebrea de 30 valoraciones se llaman aditivas si para cualquier conjunto de paquetes disjuntos A y B, v(A ∪ B) = v(A) + v(B). Las valoraciones aditivas son tanto subaditivas como superaditivas y están determinadas por los valores m asignados a los elementos individuales. 42 Jerusalén. Disponible en http://www.cs.huji.ac.il/˜noam/mkts.html. [9] Liad Blumrosen y Noam Nisan. Sobre el poder computacional de las subastas iterativas II: subastas ascendentes. Documento de trabajo, Universidad Hebrea de Jerusalén. Disponible en http://www.cs.huji.ac.il/˜noam/mkts.html. [10] P. Cramton, L.M. Ausubel y P.R. I'm sorry, but \"Milgrom\" is a proper noun and does not have a direct translation in Spanish. En P. Cramton, Y. Shoham y R. Steinberg (Editores), Subastas Combinatorias. Capítulo 5. La subasta de reloj-proxi: Un diseño práctico de subasta combinatoria. MIT Press. Próximamente, 2005. [11] P. Cramton, Y. Shoham y R. Steinberg (Editores). Subastas combinatorias. MIT Press. Próximamente, 2005. [12] G. Demange, D. Gale y M. Sotomayor. Subastas de varios artículos. Revista de Economía Política, 94:863-872, 1986. [13] Shahar Dobzinski, Noam Nisan y Michael Schapira. Algoritmos de aproximación para CAS con postores sin complemento. En el 37º simposio de ACM sobre teoría de la computación (STOC)., 2005. [14] Shahar Dobzinski y Michael Schapira. Límites óptimos de aproximación superior e inferior para subastas combinatorias de k-duplicados. Documento de trabajo, Universidad Hebrea. [15] Conferencia de licitación combinatoria. Página web: http://wireless.fcc.gov/auctions/conferences/combin2003. [16] Faruk Gul y Ennio Stacchetti. Equilibrio walrasiano con sustitutos brutos. Revista de Teoría Económica, 87:95 - 124, 1999. [17] Faruk Gul y Ennio Stacchetti. La subasta inglesa con productos diferenciados. Revista de Teoría Económica, 92(3):66 - 95, 2000. [18] J. Hastad. Límites inferiores casi óptimos para circuitos de poca profundidad. En el 18º STOC, páginas 6-20, 1986. [19] Ron Holzman, Noa Kfir-Dahav, Dov Monderer y Moshe Tennenholtz. Equilibrio de empaquetamiento en subastas combinatorias. Juegos y Comportamiento Económico, 47:104-123, 2004. [20] H. Karloff. Programación Lineal. Birkhäuser Verlag, 1991. [21] Frank Kelly y Richard Steinberg. Una subasta combinatoria con múltiples ganadores para el servicio universal. Ciencia de la Gestión, 46:586-596, 2000. [22] A.S. Kelso y V.P. Crawford. Emparejamiento laboral, formación de coaliciones y sustitución bruta. Econometrica, 50:1483-1504, 1982. [23] Subhash Khot, Richard J. Lipton, Evangelos Markakis y Aranyak Mehta. Resultados de inaproximabilidad para subastas combinatorias con funciones de utilidad submodulares. En Working paper., 2004. [24] Sebastien Lahaie y David C. Parkes. Aplicando algoritmos de aprendizaje a la obtención de preferencias. En EC 04. [25] Benny Lehmann, Daniel Lehmann y Noam Nisan. Subastas combinatorias con utilidades marginales decrecientes. En la conferencia de ACM sobre comercio electrónico. Para aparecer, Juegos y Comportamiento Económico., 2001. [26] D. Lehmann, L. OCallaghan, y Y. Shoham. Revelación de la verdad en subastas combinatorias aproximadamente eficientes. JACM, 49(5):577-602, septiembre de 2002. [27] A. Mas-Collel, W. Whinston y J. Verde. Teoría microeconómica. Oxford University Press, 1995. [28] Debasis Mishra y David Parkes. Subastas de Vickrey de precio ascendente utilizando algoritmos primal-dual., 2004. Documento de trabajo, Universidad de Harvard. [29] Noam Nisan. La <br>complejidad de comunicación</br> del empaquetamiento y cobertura de conjuntos aproximados. En ICALP 2002. [30] Noam Nisan. Subasta y asignación en subastas combinatorias. En la Conferencia ACM sobre Comercio Electrónico, 2000. [31] Noam Nisan. En P. Cramton, Y. Shoham y R. Steinberg (Editores), Subastas Combinatorias. Capítulo 1. Lenguajes de subasta. MIT Press. Próximamente, 2005. [32] Noam Nisan e Ilya Segal. Los requisitos de comunicación de asignaciones eficientes y precios de apoyo, 2003. Documento de trabajo. Disponible en http://www.cs.huji.ac.il/˜noam/mkts.html Próximamente en la Revista de Teoría Económica. [33] Noam Nisan e Ilya Segal. Ineficiencia exponencial de la comunicación de consultas de demanda, 2004. Documento de trabajo. Disponible en http://www.stanford.edu/ isegal/queries1.pdf. [34] D. C. Parkes y L. H. Ungar. Una subasta de Vickrey generalizada de precio ascendente. Tecnología. Rep., Universidad de Harvard, 2002. [35] David Parkes. En P. Cramton, Y. Shoham y R. Steinberg (Editores), Subastas Combinatorias. Capítulo 3. Subastas combinatorias iterativas. MIT Press. Próximamente, 2005. [36] David C. Parkes. Subastas combinatorias iterativas: Logrando eficiencia económica y computacional. Tesis de doctorado, Departamento de Ciencias de la Computación e Informática, Universidad de Pensilvania, 2001. [37] David C. Parkes y Lyle H. Ungar. Subastas combinatorias iterativas: Teoría y práctica. En AAAI/IAAI, páginas 74-81, 2000. [38] Ariel Rubinstein. ¿Por qué ciertas propiedades de las relaciones binarias son relativamente más comunes en los lenguajes naturales? Econometrica, 64:343-356, 1996. [39] Tuomas Sandholm. \n\nEconometrica, 64:343-356, 1996. [39] Tuomas Sandholm. Algoritmo para la determinación óptima del ganador en subastas combinatorias. En Inteligencia Artificial, volumen 135, páginas 1-54, 2002. [40] P. Santi, V. Conitzer y T. Sandholm. Hacia una caracterización de la obtención de preferencias polinomiales con consultas de valor en subastas combinatorias. En la 17ª Conferencia Anual sobre Teoría del Aprendizaje, 2004. [41] Ilya Segal. Los requisitos de comunicación de las reglas de elección social y los conjuntos de presupuesto de apoyo, 2004. Documento de trabajo. Disponible en http://www.stanford.edu/ isegal/rules.pdf. [42] P.R. Wurman y M.P. Wellman. Akba: Una subasta combinatoria progresiva y de precio anónimo. En la Segunda Conferencia ACM sobre Comercio Electrónico, 2000. [43] Martin A. Zinkevich, Avrim Blum y Tuomas Sandholm. En la obtención de preferencias en tiempo polinómico con consultas de valor. En la Conferencia ACM sobre Comercio Electrónico, 2003. 43 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        }
    }
}